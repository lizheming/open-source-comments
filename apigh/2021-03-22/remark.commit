{
  "sha": "e7950fcb22cca618f90db0db2218741f3847acab",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOmU3OTUwZmNiMjJjY2E2MThmOTBkYjBkYjIyMTg3NDFmMzg0N2FjYWI=",
  "commit": {
    "author": {
      "name": "Pavel Mineev",
      "email": "pavel@mineev.me",
      "date": "2021-03-11T21:41:36Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2021-03-22T08:42:03Z"
    },
    "message": "Fix saving comment to LS\n\n* save comment after image upload\n* do not affect error messages by save to LS mechanism\n* check if data in LS in empty",
    "tree": {
      "sha": "ee557b4b7efde707a458d95132263061f3c49824",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/ee557b4b7efde707a458d95132263061f3c49824"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/e7950fcb22cca618f90db0db2218741f3847acab",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/e7950fcb22cca618f90db0db2218741f3847acab",
  "html_url": "https://github.com/umputun/remark42/commit/e7950fcb22cca618f90db0db2218741f3847acab",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/e7950fcb22cca618f90db0db2218741f3847acab/comments",
  "author": {
    "login": "akellbl4",
    "id": 2330682,
    "node_id": "MDQ6VXNlcjIzMzA2ODI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2330682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/akellbl4",
    "html_url": "https://github.com/akellbl4",
    "followers_url": "https://api.github.com/users/akellbl4/followers",
    "following_url": "https://api.github.com/users/akellbl4/following{/other_user}",
    "gists_url": "https://api.github.com/users/akellbl4/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/akellbl4/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/akellbl4/subscriptions",
    "organizations_url": "https://api.github.com/users/akellbl4/orgs",
    "repos_url": "https://api.github.com/users/akellbl4/repos",
    "events_url": "https://api.github.com/users/akellbl4/events{/privacy}",
    "received_events_url": "https://api.github.com/users/akellbl4/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4254169636d64bbd5c097bcd5c7864c7076bb24f",
      "url": "https://api.github.com/repos/umputun/remark42/commits/4254169636d64bbd5c097bcd5c7864c7076bb24f",
      "html_url": "https://github.com/umputun/remark42/commit/4254169636d64bbd5c097bcd5c7864c7076bb24f"
    }
  ],
  "stats": {
    "total": 41,
    "additions": 26,
    "deletions": 15
  },
  "files": [
    {
      "sha": "d481b048d299d212924c37e12204c74c86a52498",
      "filename": "frontend/app/common/local-storage.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/e7950fcb22cca618f90db0db2218741f3847acab/frontend/app/common/local-storage.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/e7950fcb22cca618f90db0db2218741f3847acab/frontend/app/common/local-storage.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/common/local-storage.ts?ref=e7950fcb22cca618f90db0db2218741f3847acab",
      "patch": "@@ -46,9 +46,9 @@ export function setJsonItem<T = unknown>(key: string, data: T) {\n   }\n }\n \n-export function updateJsonItem<T extends {}>(key: string, value: (data: T) => T): void;\n-export function updateJsonItem<T extends {}>(key: string, value: T): void;\n-export function updateJsonItem<T extends unknown[]>(key: string, value: T): void;\n+export function updateJsonItem<T = Record<string, unknown>>(key: string, value: (data: T) => T): void;\n+export function updateJsonItem<T = Record<string, unknown>>(key: string, value: T): void;\n+export function updateJsonItem<T = unknown[]>(key: string, value: T): void;\n export function updateJsonItem<T>(key: string, value: T) {\n   const savedData = getJsonItem<T>(key);\n "
    },
    {
      "sha": "64416d61b83d07bae8302a2fbd112c793919a82b",
      "filename": "frontend/app/components/comment-form/comment-form.tsx",
      "status": "modified",
      "additions": 23,
      "deletions": 12,
      "changes": 35,
      "blob_url": "https://github.com/umputun/remark42/blob/e7950fcb22cca618f90db0db2218741f3847acab/frontend/app/components/comment-form/comment-form.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/e7950fcb22cca618f90db0db2218741f3847acab/frontend/app/components/comment-form/comment-form.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/comment-form/comment-form.tsx?ref=e7950fcb22cca618f90db0db2218741f3847acab",
      "patch": "@@ -213,20 +213,22 @@ export class CommentForm extends Component<CommentFormProps, CommentFormState> {\n     this.setState({ isDisabled: true, isErrorShown: false, text });\n     try {\n       await this.props.onSubmit(text, pageTitle || document.title);\n-      updateJsonItem<Record<string, string>>(LS_SAVED_COMMENT_VALUE, (data) => {\n-        delete data[this.props.id];\n-\n-        return data;\n-      });\n-      this.setState({ preview: null, text: '' });\n     } catch (e) {\n       this.setState({\n         isErrorShown: true,\n         errorMessage: extractErrorMessageFromResponse(e, this.props.intl),\n       });\n+      return;\n     }\n \n-    this.setState({ isDisabled: false });\n+    updateJsonItem<Record<string, string> | null>(LS_SAVED_COMMENT_VALUE, (data) => {\n+      if (data === null) {\n+        return null;\n+      }\n+      delete data[this.props.id];\n+      return data;\n+    });\n+    this.setState({ isDisabled: false, preview: null, text: '' });\n   };\n \n   getPreview() {\n@@ -381,8 +383,8 @@ export class CommentForm extends Component<CommentFormProps, CommentFormState> {\n         continue;\n       }\n \n-      this.setState({\n-        text: replaceSelection(this.state.text, selection, uploadPlaceholder),\n+      this.setState({ text: replaceSelection(this.state.text, selection, uploadPlaceholder) }, () => {\n+        updateJsonItem(LS_SAVED_COMMENT_VALUE, { [this.props.id]: this.state.text });\n       });\n \n       !isFirst && (await sleep(uploadDelay));\n@@ -396,9 +398,18 @@ export class CommentForm extends Component<CommentFormProps, CommentFormState> {\n       }\n \n       const markdownString = `${placeholderStart}![${result.name}](${result.url})`;\n-      this.setState({\n-        text: replaceSelection(this.state.text, [selection[0], selection[0] + uploadPlaceholderLength], markdownString),\n-      });\n+      this.setState(\n+        {\n+          text: replaceSelection(\n+            this.state.text,\n+            [selection[0], selection[0] + uploadPlaceholderLength],\n+            markdownString\n+          ),\n+        },\n+        () => {\n+          updateJsonItem(LS_SAVED_COMMENT_VALUE, { [this.props.id]: this.state.text });\n+        }\n+      );\n       /** sleeping awhile so textarea catch state change and its selection */\n       await sleep(100);\n       const selectionPointer = selection[0] + markdownString.length;"
    }
  ]
}
