{
  "sha": "363e05d58065939b647ad199deeab44f677a7213",
  "node_id": "C_kwDOBtgov9oAKDM2M2UwNWQ1ODA2NTkzOWI2NDdhZDE5OWRlZWFiNDRmNjc3YTcyMTM",
  "commit": {
    "author": {
      "name": "Paul Mineev",
      "email": "paul@mineev.me",
      "date": "2022-09-14T16:42:50Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2022-10-01T23:34:33Z"
    },
    "message": "fix iframe resize on auth dropdown opening",
    "tree": {
      "sha": "f30f7a21450c93b60b4fb9b48c656100a0592864",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/f30f7a21450c93b60b4fb9b48c656100a0592864"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/363e05d58065939b647ad199deeab44f677a7213",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/363e05d58065939b647ad199deeab44f677a7213",
  "html_url": "https://github.com/umputun/remark42/commit/363e05d58065939b647ad199deeab44f677a7213",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/363e05d58065939b647ad199deeab44f677a7213/comments",
  "author": {
    "login": "akellbl4",
    "id": 2330682,
    "node_id": "MDQ6VXNlcjIzMzA2ODI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2330682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/akellbl4",
    "html_url": "https://github.com/akellbl4",
    "followers_url": "https://api.github.com/users/akellbl4/followers",
    "following_url": "https://api.github.com/users/akellbl4/following{/other_user}",
    "gists_url": "https://api.github.com/users/akellbl4/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/akellbl4/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/akellbl4/subscriptions",
    "organizations_url": "https://api.github.com/users/akellbl4/orgs",
    "repos_url": "https://api.github.com/users/akellbl4/repos",
    "events_url": "https://api.github.com/users/akellbl4/events{/privacy}",
    "received_events_url": "https://api.github.com/users/akellbl4/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2ecc80e18c2ae9f03a1eafe272ce0700e514e01d",
      "url": "https://api.github.com/repos/umputun/remark42/commits/2ecc80e18c2ae9f03a1eafe272ce0700e514e01d",
      "html_url": "https://github.com/umputun/remark42/commit/2ecc80e18c2ae9f03a1eafe272ce0700e514e01d"
    }
  ],
  "stats": {
    "total": 102,
    "additions": 58,
    "deletions": 44
  },
  "files": [
    {
      "sha": "c5e62e65e1cf0102d2e4845df895aa611774062c",
      "filename": "frontend/apps/remark42/app/components/auth/auth.hooks.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/363e05d58065939b647ad199deeab44f677a7213/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fauth%2Fauth.hooks.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/363e05d58065939b647ad199deeab44f677a7213/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fauth%2Fauth.hooks.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fauth%2Fauth.hooks.ts?ref=363e05d58065939b647ad199deeab44f677a7213",
      "patch": "@@ -70,9 +70,7 @@ export function useDropdown(disableClosing?: boolean) {\n   useEffect(() => {\n     const dropdownElement = rootRef.current;\n \n-    if (!dropdownElement || !showDropdown) {\n-      handleChangeIframeSize(document.body);\n-\n+    if (!dropdownElement) {\n       return;\n     }\n "
    },
    {
      "sha": "57fe3e103e82518197b330a2465cd5ed2cbad856",
      "filename": "frontend/apps/remark42/app/components/root/root.tsx",
      "status": "modified",
      "additions": 54,
      "deletions": 41,
      "changes": 95,
      "blob_url": "https://github.com/umputun/remark42/blob/363e05d58065939b647ad199deeab44f677a7213/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Froot%2Froot.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/363e05d58065939b647ad199deeab44f677a7213/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Froot%2Froot.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Froot%2Froot.tsx?ref=363e05d58065939b647ad199deeab44f677a7213",
      "patch": "@@ -122,7 +122,6 @@ export class Root extends Component<Props, State> {\n     Promise.all([userloading, this.props.fetchComments()]).finally(() => {\n       setTimeout(this.checkUrlHash);\n       window.addEventListener('hashchange', this.checkUrlHash);\n-      postMessageToParent({ height: document.body.offsetHeight });\n     });\n \n     window.addEventListener('message', this.onMessage);\n@@ -274,33 +273,12 @@ export class Root extends Component<Props, State> {\n               <div className={clsx('sort-picker', styles.sortPicker)}>\n                 <SortPicker />\n               </div>\n-              {!!this.props.topComments.length && !props.isCommentsLoading && (\n-                <div className=\"root__threads\" role=\"list\">\n-                  {(IS_MOBILE && commentsShown < this.props.topComments.length\n-                    ? this.props.topComments.slice(0, commentsShown)\n-                    : this.props.topComments\n-                  ).map((id) => (\n-                    <Thread\n-                      key={`thread-${id}`}\n-                      id={id}\n-                      mix=\"root__thread\"\n-                      level={0}\n-                      getPreview={this.props.getPreview}\n-                    />\n-                  ))}\n-\n-                  {commentsShown < this.props.topComments.length && IS_MOBILE && (\n-                    <Button className={clsx('more-comments', styles.moreComments)} onClick={this.showMore}>\n-                      <FormattedMessage id=\"root.show-more\" defaultMessage=\"Show more\" />\n-                    </Button>\n-                  )}\n-                </div>\n-              )}\n-              {props.isCommentsLoading && (\n-                <div className=\"root__threads\" role=\"list\">\n-                  <Preloader className=\"root__preloader\" />\n-                </div>\n-              )}\n+              <Comments\n+                commentsShown={commentsShown}\n+                isLoading={props.isCommentsLoading}\n+                topComments={props.topComments}\n+                showMore={this.showMore}\n+              />\n             </>\n           )}\n         </div>\n@@ -309,21 +287,17 @@ export class Root extends Component<Props, State> {\n   }\n }\n \n-const CopyrightLink = (title: string) => (\n-  <a class=\"root__copyright-link\" href=\"https://remark42.com/\">\n-    {title}\n-  </a>\n-);\n-\n function updateIframeHeight() {\n   postMessageToParent({ height: document.body.offsetHeight });\n }\n \n-/** Root component connected to redux */\n-export function ConnectedRoot() {\n-  const intl = useIntl();\n-  const props = useSelector(mapStateToProps);\n-  const actions = useActions(boundActions);\n+interface CommentsProps {\n+  isLoading: boolean;\n+  topComments: string[];\n+  commentsShown: number;\n+  showMore(): void;\n+}\n+function Comments({ isLoading, topComments, commentsShown, showMore }: CommentsProps) {\n   const rootRef = useRef<HTMLDivElement>(null);\n \n   useEffect(() => {\n@@ -336,16 +310,55 @@ export function ConnectedRoot() {\n       updateIframeHeight();\n \n       // a hacky way to force iframe height update when new image is rendered and loaded\n-      rootRef.current?.querySelectorAll('img').forEach((img) => img.addEventListener('load', updateIframeHeight));\n+      rootRef.current?.querySelectorAll('img').forEach((img) => {\n+        img.addEventListener('load', updateIframeHeight);\n+      });\n     });\n \n     observer.observe(rootRef.current, { attributes: true, childList: true, subtree: true });\n \n     return () => observer.disconnect();\n   }, []);\n \n+  const renderComments =\n+    IS_MOBILE && commentsShown < topComments.length ? topComments.slice(0, commentsShown) : topComments;\n+  const isShowMoreButtonVisible = IS_MOBILE && commentsShown < topComments.length;\n+\n+  return (\n+    <div className=\"root__threads\" role=\"list\" ref={rootRef}>\n+      {isLoading ? (\n+        <Preloader className=\"root__preloader\" />\n+      ) : (\n+        <>\n+          {topComments.length > 0 &&\n+            renderComments.map((id) => (\n+              <Thread key={`thread-${id}`} id={id} mix=\"root__thread\" level={0} getPreview={getPreview} />\n+            ))}\n+          {isShowMoreButtonVisible && (\n+            <Button className={clsx('more-comments', styles.moreComments)} onClick={showMore}>\n+              <FormattedMessage id=\"root.show-more\" defaultMessage=\"Show more\" />\n+            </Button>\n+          )}\n+        </>\n+      )}\n+    </div>\n+  );\n+}\n+\n+const CopyrightLink = (title: string) => (\n+  <a class=\"root__copyright-link\" href=\"https://remark42.com/\">\n+    {title}\n+  </a>\n+);\n+\n+/** Root component connected to redux */\n+export function ConnectedRoot() {\n+  const intl = useIntl();\n+  const props = useSelector(mapStateToProps);\n+  const actions = useActions(boundActions);\n+\n   return (\n-    <div className={clsx(b('root', {}, { theme: props.theme }), props.theme)} ref={rootRef}>\n+    <div className={clsx(b('root', {}, { theme: props.theme }), props.theme)}>\n       <Root {...props} {...actions} intl={intl} />\n       <p className=\"root__copyright\" role=\"contentinfo\">\n         <FormattedMessage"
    },
    {
      "sha": "db18c1bf36188b334ee60be10d5b57109a37ccdf",
      "filename": "frontend/apps/remark42/webpack.config.js",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/363e05d58065939b647ad199deeab44f677a7213/frontend%2Fapps%2Fremark42%2Fwebpack.config.js",
      "raw_url": "https://github.com/umputun/remark42/raw/363e05d58065939b647ad199deeab44f677a7213/frontend%2Fapps%2Fremark42%2Fwebpack.config.js",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fwebpack.config.js?ref=363e05d58065939b647ad199deeab44f677a7213",
      "patch": "@@ -223,6 +223,9 @@ module.exports = (_, { mode, analyze }) => {\n       { path: '/api', target: REMARK_API_BASE_URL, changeOrigin: true },\n       { path: '/auth', target: REMARK_API_BASE_URL, changeOrigin: true },\n     ],\n+    client: {\n+      overlay: false,\n+    },\n   };\n \n   const plugins = ["
    }
  ]
}
