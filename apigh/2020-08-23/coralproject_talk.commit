{
  "sha": "ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6Y2UwNzdjMmQ5MTliYzU1NTVhOWY5MmM3YmMwYzljNWIwYzM2MDI3Mw==",
  "commit": {
    "author": {
      "name": "Tessa Thornton",
      "email": "tessathornton@gmail.com",
      "date": "2020-08-21T22:58:21Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-08-21T22:58:21Z"
    },
    "message": "[CORL-1309] external images (#3127)\n\n* add extneral images to schema and models\n\n* add frontend for external images\n\n* fix image width and height\n\n* validate media input\n\n* style rte buttons\n\n* fix image url validation\n\n* update image regex\n\n* display images in moderation\n\n* add separate route for external image iframes\n\n* fix test fixtures and snaps\n\n* add translation strings\n\n* put config behind a feature flag\n\n* fix merge conflict\n\n* sort imports\n\n* constrain width of moderation image\n\n* fix: changes to improve readability\n\n* fix: fixed types, linting\n\n* fix: harmonize the extension validation logic\n\n* fix: fixed tests\n\nCo-authored-by: Wyatt Johnson <wyattjoh@gmail.com>",
    "tree": {
      "sha": "22b3126fe42239152818f4c784cc00d2abc90f41",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/22b3126fe42239152818f4c784cc00d2abc90f41"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfQFGNCRBK7hj4Ov3rIwAAdHIIAD2ghLsoZzyXa9o8NqIQFTF9\nXndADt0kSYTvONLokfjDCGBv9jaqhq2NvCGy8KTQEAZN+kO+JMD0hr6+lTPYHtiv\nhApty/F/HSk5Lt0NAY4rUzm7zhUs73YzHNm+20PXHb57IwER+BrwTRT7QdunKpSo\nzWP3BLXAPKi916n8Jn1ZYvJIbMZTrZUyONy4+1NBvakuuOpMu4DOtv7lNjH01Wli\nqsBOR/TEoHOFqhoIlAdBOFAUHJz+NFKqV+wTWDZ2MJT9ZIDco7akvVuMuKH7C/7e\nnVRBqm7lh3ihZMS6/MjPiBLrG0Spq92MjT7+0egfUu33sma+NpRIp/DIiDsnrbE=\n=lKa7\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 22b3126fe42239152818f4c784cc00d2abc90f41\nparent 126a27f7bc7ccde2e7139b812d504f578bf74bc4\nauthor Tessa Thornton <tessathornton@gmail.com> 1598050701 -0400\ncommitter GitHub <noreply@github.com> 1598050701 +0000\n\n[CORL-1309] external images (#3127)\n\n* add extneral images to schema and models\n\n* add frontend for external images\n\n* fix image width and height\n\n* validate media input\n\n* style rte buttons\n\n* fix image url validation\n\n* update image regex\n\n* display images in moderation\n\n* add separate route for external image iframes\n\n* fix test fixtures and snaps\n\n* add translation strings\n\n* put config behind a feature flag\n\n* fix merge conflict\n\n* sort imports\n\n* constrain width of moderation image\n\n* fix: changes to improve readability\n\n* fix: fixed types, linting\n\n* fix: harmonize the extension validation logic\n\n* fix: fixed tests\n\nCo-authored-by: Wyatt Johnson <wyattjoh@gmail.com>"
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
  "html_url": "https://github.com/coralproject/talk/commit/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/comments",
  "author": {
    "login": "tessalt",
    "id": 1789029,
    "node_id": "MDQ6VXNlcjE3ODkwMjk=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/1789029?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tessalt",
    "html_url": "https://github.com/tessalt",
    "followers_url": "https://api.github.com/users/tessalt/followers",
    "following_url": "https://api.github.com/users/tessalt/following{/other_user}",
    "gists_url": "https://api.github.com/users/tessalt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tessalt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tessalt/subscriptions",
    "organizations_url": "https://api.github.com/users/tessalt/orgs",
    "repos_url": "https://api.github.com/users/tessalt/repos",
    "events_url": "https://api.github.com/users/tessalt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tessalt/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "126a27f7bc7ccde2e7139b812d504f578bf74bc4",
      "url": "https://api.github.com/repos/coralproject/talk/commits/126a27f7bc7ccde2e7139b812d504f578bf74bc4",
      "html_url": "https://github.com/coralproject/talk/commit/126a27f7bc7ccde2e7139b812d504f578bf74bc4"
    }
  ],
  "stats": {
    "total": 1008,
    "additions": 796,
    "deletions": 212
  },
  "files": [
    {
      "sha": "a432fe241fdb0af058c8e5c716fa21dd51e4de1d",
      "filename": "package-lock.json",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/package-lock.json",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/package-lock.json",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/package-lock.json?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -22767,7 +22767,7 @@\n         },\n         \"chownr\": {\n           \"version\": \"1.1.1\",\n-          \"resolved\": false,\n+          \"resolved\": \"https://registry.npmjs.org/chownr/-/chownr-1.1.1.tgz\",\n           \"integrity\": \"sha512-j38EvO5+LHX84jlo6h4UzmOwi0UgW61WRyPtJz4qaadK5eY3BTS5TY/S1Stc3Uk2lIM6TPevAlULiEJwie860g==\",\n           \"dev\": true,\n           \"optional\": true\n@@ -22967,14 +22967,14 @@\n         },\n         \"minimist\": {\n           \"version\": \"0.0.8\",\n-          \"resolved\": false,\n+          \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz\",\n           \"integrity\": \"sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=\",\n           \"dev\": true,\n           \"optional\": true\n         },\n         \"minipass\": {\n           \"version\": \"2.3.5\",\n-          \"resolved\": false,\n+          \"resolved\": \"https://registry.npmjs.org/minipass/-/minipass-2.3.5.tgz\",\n           \"integrity\": \"sha512-Gi1W4k059gyRbyVUZQ4mEqLm0YIUiGYfvxhF6SIlk3ui1WVxMTGfGdQ2SInh3PDrRTVvPKgULkpJtT4RH10+VA==\",\n           \"dev\": true,\n           \"optional\": true,\n@@ -22985,7 +22985,7 @@\n         },\n         \"minizlib\": {\n           \"version\": \"1.2.1\",\n-          \"resolved\": false,\n+          \"resolved\": \"https://registry.npmjs.org/minizlib/-/minizlib-1.2.1.tgz\",\n           \"integrity\": \"sha512-7+4oTUOWKg7AuL3vloEWekXY2/D20cevzsrNT2kGWm+39J9hGTCBv8VI5Pm5lXZ/o3/mdR4f8rflAPhnQb8mPA==\",\n           \"dev\": true,\n           \"optional\": true,\n@@ -22995,7 +22995,7 @@\n         },\n         \"mkdirp\": {\n           \"version\": \"0.5.1\",\n-          \"resolved\": false,\n+          \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz\",\n           \"integrity\": \"sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=\",\n           \"dev\": true,\n           \"optional\": true,\n@@ -23284,7 +23284,7 @@\n         },\n         \"tar\": {\n           \"version\": \"4.4.8\",\n-          \"resolved\": false,\n+          \"resolved\": \"https://registry.npmjs.org/tar/-/tar-4.4.8.tgz\",\n           \"integrity\": \"sha512-LzHF64s5chPQQS0IYBn9IN5h3i98c12bo4NCO7e0sGM2llXQ3p2FGC5sdENN4cTW48O915Sh+x+EXx7XW96xYQ==\",\n           \"dev\": true,\n           \"optional\": true,\n@@ -23324,7 +23324,7 @@\n         },\n         \"yallist\": {\n           \"version\": \"3.0.3\",\n-          \"resolved\": false,\n+          \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-3.0.3.tgz\",\n           \"integrity\": \"sha512-S+Zk8DEWE6oKpV+vI3qWkaK+jSbIK86pCwe2IF/xwIpQ8jEuxpw9NyaGjmp9+BoJv5FV2piqCDcoCtStppiq2A==\",\n           \"dev\": true,\n           \"optional\": true"
    },
    {
      "sha": "52411db3a54e28e2ad9f81a13c0a57a913f4abba",
      "filename": "src/core/client/admin/components/MediaContainer/ExternalMedia.tsx",
      "status": "added",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/admin/components/MediaContainer/ExternalMedia.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/admin/components/MediaContainer/ExternalMedia.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/components/MediaContainer/ExternalMedia.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -0,0 +1,26 @@\n+import React, { FunctionComponent } from \"react\";\n+\n+import styles from \"./Media.css\";\n+\n+interface Props {\n+  url: string;\n+  siteID: string;\n+}\n+\n+const ExternalMedia: FunctionComponent<Props> = ({ url, siteID }) => {\n+  const cleanUrl = encodeURIComponent(url);\n+  return (\n+    <div className={styles.embed}>\n+      <iframe\n+        frameBorder=\"0\"\n+        width={480}\n+        height={320}\n+        allowFullScreen\n+        title=\"External Image\"\n+        src={`/api/external-media?url=${cleanUrl}&siteID=${siteID}`}\n+      />\n+    </div>\n+  );\n+};\n+\n+export default ExternalMedia;"
    },
    {
      "sha": "2e0602ac998d6614ac2eb7c97ec886e360317fba",
      "filename": "src/core/client/admin/components/MediaContainer/MediaContainer.tsx",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/admin/components/MediaContainer/MediaContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/admin/components/MediaContainer/MediaContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/components/MediaContainer/MediaContainer.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -6,6 +6,7 @@ import {} from \"coral-ui/components/v2\";\n \n import { MediaContainer_comment } from \"coral-admin/__generated__/MediaContainer_comment.graphql\";\n \n+import ExternalMedia from \"./ExternalMedia\";\n import GiphyMedia from \"./GiphyMedia\";\n import TwitterMedia from \"./TwitterMedia\";\n import YouTubeMedia from \"./YouTubeMedia\";\n@@ -29,6 +30,12 @@ const MediaContainer: FunctionComponent<Props> = ({ comment }) => {\n           height={comment.revision.media.height}\n         />\n       )}\n+      {comment.revision.media.__typename === \"ExternalMedia\" && (\n+        <ExternalMedia\n+          url={comment.revision.media.url}\n+          siteID={comment.site.id}\n+        />\n+      )}\n       {comment.revision.media.__typename === \"TwitterMedia\" && (\n         <TwitterMedia\n           url={comment.revision.media.url}\n@@ -78,6 +85,9 @@ const enhanced = withFragmentContainer<Props>({\n             width\n             height\n           }\n+          ... on ExternalMedia {\n+            url\n+          }\n         }\n       }\n     }"
    },
    {
      "sha": "c04b9f0a85b7cad53ca510a923881a5dbb57a60f",
      "filename": "src/core/client/admin/test/fixtures.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/admin/test/fixtures.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/admin/test/fixtures.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/test/fixtures.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -187,6 +187,7 @@ export const settings = createFixture<GQLSettings>({\n     twitter: { enabled: false },\n     giphy: { enabled: false },\n     youtube: { enabled: false },\n+    external: { enabled: false },\n   },\n   slack: {\n     channels: [],"
    },
    {
      "sha": "922546a6819870863fda662ae0f9f21aa2c56528",
      "filename": "src/core/client/framework/lib/messages.tsx",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/framework/lib/messages.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/framework/lib/messages.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/framework/lib/messages.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -117,3 +117,9 @@ export const DELETE_CONFIRMATION_INVALID = () => (\n     <span>Incorrect confirmation. Try again.</span>\n   </Localized>\n );\n+\n+export const INVALID_MEDIA_URL = () => (\n+  <Localized id=\"framework-validation-media-url-invalid\">\n+    <span>Please enter a valid image URL (.png, .jpg, or .gif)</span>\n+  </Localized>\n+);"
    },
    {
      "sha": "7a089f57fbab40b3d1bc62bba6e29aee2d5dc24a",
      "filename": "src/core/client/framework/lib/validation.tsx",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/framework/lib/validation.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/framework/lib/validation.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/framework/lib/validation.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -8,13 +8,16 @@ import {\n   USERNAME_MIN_LENGTH,\n   USERNAME_REGEX,\n } from \"coral-common/helpers/validate\";\n+import validateImagePathname from \"coral-common/helpers/validateImagePathname\";\n import startsWith from \"coral-common/utils/startsWith\";\n+import { parseURL } from \"coral-framework/utils\";\n \n import {\n   DELETE_CONFIRMATION_INVALID,\n   EMAILS_DO_NOT_MATCH,\n   INVALID_CHARACTERS,\n   INVALID_EMAIL,\n+  INVALID_MEDIA_URL,\n   INVALID_URL,\n   INVALID_WEBHOOK_ENDPOINT_EVENT_SELECTION,\n   NOT_A_WHOLE_NUMBER,\n@@ -82,6 +85,19 @@ export const validateUsernameCharacters = createValidator(\n   INVALID_CHARACTERS()\n );\n \n+export const validateImageURL = createValidator((v) => {\n+  if (!v || typeof v !== \"string\" || !URL_REGEX.test(v)) {\n+    return false;\n+  }\n+\n+  try {\n+    const { pathname } = parseURL(v);\n+    return validateImagePathname(pathname);\n+  } catch (err) {\n+    return false;\n+  }\n+}, INVALID_MEDIA_URL());\n+\n /**\n  * validateURL is a Validator that checks that the URL only contains valid characters.\n  */"
    },
    {
      "sha": "022742308c915fba94878e9a7a72ce2dc33bf417",
      "filename": "src/core/client/stream/common/Media/ExternalMedia.tsx",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/common/Media/ExternalMedia.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/common/Media/ExternalMedia.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/common/Media/ExternalMedia.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -0,0 +1,19 @@\n+import React, { FunctionComponent } from \"react\";\n+\n+import IframeEmbed from \"./IframeEmbed\";\n+\n+interface Props {\n+  url: string;\n+  siteID: string;\n+}\n+\n+const ExternalMedia: FunctionComponent<Props> = ({ url, siteID }) => {\n+  const component = encodeURIComponent(url);\n+  return (\n+    <IframeEmbed\n+      src={`/api/external-media?url=${component}&siteID=${siteID}`}\n+    />\n+  );\n+};\n+\n+export default ExternalMedia;"
    },
    {
      "sha": "58b5d121e4af3770734e949990886e3de921317f",
      "filename": "src/core/client/stream/common/Media/IframeEmbed.tsx",
      "status": "renamed",
      "additions": 17,
      "deletions": 18,
      "changes": 35,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/common/Media/IframeEmbed.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/common/Media/IframeEmbed.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/common/Media/IframeEmbed.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -9,31 +9,20 @@ import React, {\n import styles from \"./OEmbed.css\";\n \n interface Props {\n-  url: string;\n-  type: string;\n+  src: string;\n   loadTimeout?: number;\n   showLink?: boolean;\n-  className?: string;\n   width?: number | null;\n   height?: number | null;\n-  siteID: string;\n }\n \n function calculateBottomPadding(width: number, height: number) {\n   return `${(height / width) * 100}%`;\n }\n \n-const OEmbed: FunctionComponent<Props> = ({\n-  url,\n-  type,\n-  className,\n-  width,\n-  height,\n-  siteID,\n-}) => {\n+const IframeEmbed: FunctionComponent<Props> = ({ width, height, src }) => {\n   const iframeRef = React.createRef<HTMLIFrameElement>();\n   const containerRef = React.createRef<HTMLDivElement>();\n-  const cleanUrl = encodeURIComponent(url);\n   const [maxWidth, setMaxWidth] = useState<number | null>(null);\n   const attrs: HTMLProps<HTMLIFrameElement> = {};\n   if (width) {\n@@ -70,18 +59,28 @@ const OEmbed: FunctionComponent<Props> = ({\n       }\n       let calculatedWidth = width;\n       let calculatedHeight = height;\n+      let desiredWidth;\n+      let desiredHeight;\n       if (!width) {\n         calculatedWidth =\n           iframeRef.current.contentWindow.document.body.scrollWidth;\n+        desiredWidth = calculatedWidth;\n+        if (maxWidth && calculatedWidth > maxWidth) {\n+          desiredWidth = maxWidth;\n+        }\n         if (`${calculatedWidth}` !== iframeRef.current.width) {\n-          iframeRef.current.width = `${calculatedWidth}px`;\n+          iframeRef.current.width = `${desiredWidth}px`;\n         }\n       }\n       if (!height) {\n         calculatedHeight =\n           iframeRef.current.contentWindow.document.body.scrollHeight;\n+        desiredHeight = calculatedHeight;\n+        if (maxWidth && calculatedWidth && calculatedWidth > maxWidth) {\n+          desiredHeight = (calculatedWidth / calculatedHeight) * maxWidth;\n+        }\n         if (`${calculatedHeight}` !== iframeRef.current.height) {\n-          iframeRef.current.height = `${calculatedHeight}px`;\n+          iframeRef.current.height = `${desiredHeight}px`;\n         }\n       }\n       if (\n@@ -96,7 +95,7 @@ const OEmbed: FunctionComponent<Props> = ({\n         );\n       }\n     }, 100);\n-  }, [iframeRef, containerRef, width, height]);\n+  }, [iframeRef, containerRef, width, height, maxWidth]);\n \n   return (\n     <div className={styles.container} ref={containerRef}>\n@@ -107,7 +106,7 @@ const OEmbed: FunctionComponent<Props> = ({\n           scrolling=\"no\"\n           ref={iframeRef}\n           title=\"oEmbed\"\n-          src={`/api/oembed?type=${type}&url=${cleanUrl}&maxWidth=${maxWidth}&siteID=${siteID}`}\n+          src={`${src}&maxWidth=${maxWidth}`}\n           onLoad={onLoad}\n           className={styles.frame}\n           {...attrs}\n@@ -117,4 +116,4 @@ const OEmbed: FunctionComponent<Props> = ({\n   );\n };\n \n-export default OEmbed;\n+export default IframeEmbed;",
      "previous_filename": "src/core/client/stream/common/Media/OEmbed.tsx"
    },
    {
      "sha": "609ef9954c0d862d16bb1a648fb3fd0e0d69afe0",
      "filename": "src/core/client/stream/common/Media/TwitterMedia.tsx",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/common/Media/TwitterMedia.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/common/Media/TwitterMedia.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/common/Media/TwitterMedia.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -1,6 +1,6 @@\n import React, { FunctionComponent } from \"react\";\n \n-import OEmbed from \"./OEmbed\";\n+import IframeEmbed from \"./IframeEmbed\";\n \n interface Props {\n   url: string;\n@@ -9,7 +9,12 @@ interface Props {\n }\n \n const TwitterMedia: FunctionComponent<Props> = ({ url, width, siteID }) => {\n-  return <OEmbed url={url} type=\"twitter\" siteID={siteID} />;\n+  const cleanUrl = encodeURIComponent(url);\n+  return (\n+    <IframeEmbed\n+      src={`/api/oembed?type=twitter&url=${cleanUrl}&siteID=${siteID}`}\n+    />\n+  );\n };\n \n export default TwitterMedia;"
    },
    {
      "sha": "32b1e93093e5d83c5a0b90019db7b971b33a9840",
      "filename": "src/core/client/stream/common/Media/YouTubeMedia.tsx",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/common/Media/YouTubeMedia.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/common/Media/YouTubeMedia.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/common/Media/YouTubeMedia.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -1,6 +1,6 @@\n import React, { FunctionComponent } from \"react\";\n \n-import OEmbed from \"./OEmbed\";\n+import IframeEmbed from \"./IframeEmbed\";\n \n interface Props {\n   url: string;\n@@ -15,13 +15,12 @@ const YouTubeMedia: FunctionComponent<Props> = ({\n   height,\n   siteID,\n }) => {\n+  const cleanUrl = encodeURIComponent(url);\n   return (\n-    <OEmbed\n-      url={url}\n+    <IframeEmbed\n+      src={`/api/oembed?type=youtube&url=${cleanUrl}&siteID=${siteID}`}\n       width={width}\n       height={height}\n-      type=\"youtube\"\n-      siteID={siteID}\n     />\n   );\n };"
    },
    {
      "sha": "44a448f69b1ecd47ca78686ff8cfda5c1a32d06a",
      "filename": "src/core/client/stream/common/Media/index.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/common/Media/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/common/Media/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/common/Media/index.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -1,3 +1,4 @@\n export { default as YouTubeMedia } from \"./YouTubeMedia\";\n export { default as TwitterMedia } from \"./TwitterMedia\";\n export { default as GiphyMedia } from \"./GiphyMedia\";\n+export { default as ExternalMedia } from \"./ExternalMedia\";"
    },
    {
      "sha": "584b6e90a3eae3813a3098a312ebe8c4f12bc6a8",
      "filename": "src/core/client/stream/tabs/Comments/Comment/EditCommentForm/EditCommentFormContainer.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Comment/EditCommentForm/EditCommentFormContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Comment/EditCommentForm/EditCommentFormContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/EditCommentForm/EditCommentFormContainer.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -261,6 +261,9 @@ const enhanced = withContext(({ sessionStorage, browserInfo }) => ({\n               giphy {\n                 enabled\n               }\n+              external {\n+                enabled\n+              }\n             }\n             rte {\n               ...RTEContainer_config"
    },
    {
      "sha": "0105acbc5c150b51d3ec8108c430077c414feb26",
      "filename": "src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaConfirmation.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaConfirmation.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaConfirmation.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaConfirmation.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -16,6 +16,9 @@ interface MediaConfig {\n   youtube: {\n     enabled: boolean;\n   };\n+  external: {\n+    enabled: boolean;\n+  };\n }\n \n interface Props {"
    },
    {
      "sha": "aa39253adfa5efa351e2c80f65b8159497a3c2c5",
      "filename": "src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaConfirmationIcon.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaConfirmationIcon.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaConfirmationIcon.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaConfirmationIcon.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -13,6 +13,7 @@ interface Props {\n const MediaConfirmationIcon: FunctionComponent<Props> = ({ media }) => {\n   return (\n     <>\n+      {media.type === \"external\" && <Icon>insert_photo</Icon>}\n       {media.type === \"youtube\" && <Icon>ondemand_video</Icon>}\n       {media.type === \"twitter\" && (\n         <img className={styles.twitterIcon} src={twitterImg} alt=\"twitter\" />"
    },
    {
      "sha": "b2cdae136881e49b531847c2de7042ab1670c149",
      "filename": "src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaPreview.tsx",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaPreview.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaPreview.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaPreview.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -2,7 +2,11 @@ import { Localized } from \"@fluent/react/compat\";\n import React, { FunctionComponent } from \"react\";\n \n import { MediaLink } from \"coral-common/helpers/findMediaLinks\";\n-import { TwitterMedia, YouTubeMedia } from \"coral-stream/common/Media\";\n+import {\n+  ExternalMedia,\n+  TwitterMedia,\n+  YouTubeMedia,\n+} from \"coral-stream/common/Media\";\n import {\n   Button,\n   ButtonIcon,\n@@ -24,6 +28,9 @@ interface MediaConfig {\n   youtube: {\n     enabled: boolean;\n   };\n+  external: {\n+    enabled: boolean;\n+  };\n }\n \n interface Props {\n@@ -67,6 +74,9 @@ const MediaPreview: FunctionComponent<Props> = ({\n             </MatchMedia>\n           </Flex>\n         </div>\n+        {media.type === \"external\" && (\n+          <ExternalMedia url={media.url} siteID={siteID} />\n+        )}\n         {media.type === \"twitter\" && (\n           <TwitterMedia url={media.url} siteID={siteID} />\n         )}"
    },
    {
      "sha": "e9ad8134bb278985f6cb93c02c8135a6e9fa4ba1",
      "filename": "src/core/client/stream/tabs/Comments/Comment/MediaSection/MediaSectionContainer.tsx",
      "status": "modified",
      "additions": 29,
      "deletions": 14,
      "changes": 43,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Comment/MediaSection/MediaSectionContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Comment/MediaSection/MediaSectionContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/MediaSection/MediaSectionContainer.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -4,6 +4,7 @@ import { graphql } from \"react-relay\";\n \n import { withFragmentContainer } from \"coral-framework/lib/relay\";\n import {\n+  ExternalMedia,\n   GiphyMedia,\n   TwitterMedia,\n   YouTubeMedia,\n@@ -18,34 +19,29 @@ import styles from \"./MediaSectionContainer.css\";\n interface Props {\n   comment: MediaSectionContainer_comment;\n   settings: MediaSectionContainer_settings;\n-  defaultExpanded: boolean | null | undefined;\n+  defaultExpanded?: boolean;\n }\n \n const MediaSectionContainer: FunctionComponent<Props> = ({\n   comment,\n   settings,\n-  defaultExpanded,\n+  defaultExpanded = false,\n }) => {\n-  const { revision } = comment;\n-  const [expanded, setExpanded] = useState(defaultExpanded ? true : false);\n+  const [expanded, setExpanded] = useState(defaultExpanded);\n   const onToggleExpand = useCallback(() => {\n     setExpanded((v) => !v);\n   }, []);\n \n-  if (!revision || !revision.media || !settings.media) {\n+  const media = comment.revision?.media;\n+  if (!media) {\n     return null;\n   }\n \n-  const { media } = revision;\n-\n   if (\n-    !settings.media ||\n-    (media.__typename === \"TwitterMedia\" &&\n-      (!settings.media.twitter || !settings.media.twitter.enabled)) ||\n-    (media.__typename === \"YouTubeMedia\" &&\n-      (!settings.media.youtube || !settings.media.youtube.enabled)) ||\n-    (media.__typename === \"GiphyMedia\" &&\n-      (!settings.media.giphy || !settings.media.giphy.enabled))\n+    (media.__typename === \"TwitterMedia\" && !settings.media.twitter.enabled) ||\n+    (media.__typename === \"YouTubeMedia\" && !settings.media.youtube.enabled) ||\n+    (media.__typename === \"GiphyMedia\" && !settings.media.giphy.enabled) ||\n+    (media.__typename === \"ExternalMedia\" && !settings.media.external.enabled)\n   ) {\n     return null;\n   }\n@@ -71,6 +67,11 @@ const MediaSectionContainer: FunctionComponent<Props> = ({\n             Show video\n           </Localized>\n         )}\n+        {media.__typename === \"ExternalMedia\" && (\n+          <Localized id=\"comments-embedLinks-show-external\">\n+            Show image\n+          </Localized>\n+        )}\n         {media.__typename === \"GiphyMedia\" && (\n           <Localized id=\"comments-embedLinks-show-giphy\">Show GIF</Localized>\n         )}\n@@ -103,8 +104,16 @@ const MediaSectionContainer: FunctionComponent<Props> = ({\n               Hide video\n             </Localized>\n           )}\n+          {media.__typename === \"ExternalMedia\" && (\n+            <Localized id=\"comments-embedLinks-hide-external\">\n+              Hide image\n+            </Localized>\n+          )}\n         </Button>\n       </div>\n+      {media.__typename === \"ExternalMedia\" && (\n+        <ExternalMedia url={media.url} siteID={comment.site.id} />\n+      )}\n       {media.__typename === \"TwitterMedia\" && (\n         <TwitterMedia\n           url={media.url}\n@@ -159,6 +168,9 @@ const enhanced = withFragmentContainer<Props>({\n             width\n             height\n           }\n+          ... on ExternalMedia {\n+            url\n+          }\n         }\n       }\n     }\n@@ -175,6 +187,9 @@ const enhanced = withFragmentContainer<Props>({\n         giphy {\n           enabled\n         }\n+        external {\n+          enabled\n+        }\n       }\n     }\n   `,"
    },
    {
      "sha": "060c6f64ba8ccada58c8287c5e2ecfb9bf3d5ef4",
      "filename": "src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/ReplyCommentFormContainer.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/ReplyCommentFormContainer.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/ReplyCommentFormContainer.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/ReplyCommentFormContainer.spec.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -56,6 +56,7 @@ function createDefaultProps(add: DeepPartial<Props> = {}): Props {\n           giphy: { enabled: false },\n           twitter: { enabled: false },\n           youtube: { enabled: false },\n+          external: { enabled: false },\n         },\n         closeCommenting: {\n           message: \"closed\","
    },
    {
      "sha": "ddd8a15825d737532c2dc560e4adf94a7cd5fc1e",
      "filename": "src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/ReplyCommentFormContainer.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/ReplyCommentFormContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/ReplyCommentFormContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/ReplyCommentFormContainer.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -247,6 +247,9 @@ const enhanced = withContext(({ sessionStorage, browserInfo }) => ({\n               giphy {\n                 enabled\n               }\n+              external {\n+                enabled\n+              }\n             }\n             rte {\n               ...RTEContainer_config"
    },
    {
      "sha": "3792d88001c4c133db07dd039333cb4a6ea9bef7",
      "filename": "src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/__snapshots__/ReplyCommentFormContainer.spec.tsx.snap",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/__snapshots__/ReplyCommentFormContainer.spec.tsx.snap",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/__snapshots__/ReplyCommentFormContainer.spec.tsx.snap",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/__snapshots__/ReplyCommentFormContainer.spec.tsx.snap?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -8,6 +8,9 @@ exports[`renders correctly 1`] = `\n   max={100}\n   mediaConfig={\n     Object {\n+      \"external\": Object {\n+        \"enabled\": false,\n+      },\n       \"giphy\": Object {\n         \"enabled\": false,\n       },\n@@ -38,6 +41,9 @@ exports[`renders when commenting has been disabled 1`] = `\n   max={100}\n   mediaConfig={\n     Object {\n+      \"external\": Object {\n+        \"enabled\": false,\n+      },\n       \"giphy\": Object {\n         \"enabled\": false,\n       },\n@@ -68,6 +74,9 @@ exports[`renders when story has been closed 1`] = `\n   max={100}\n   mediaConfig={\n     Object {\n+      \"external\": Object {\n+        \"enabled\": false,\n+      },\n       \"giphy\": Object {\n         \"enabled\": false,\n       },\n@@ -103,6 +112,9 @@ exports[`renders with initialValues 1`] = `\n   max={100}\n   mediaConfig={\n     Object {\n+      \"external\": Object {\n+        \"enabled\": false,\n+      },\n       \"giphy\": Object {\n         \"enabled\": false,\n       },"
    },
    {
      "sha": "f3acf1f78db61aa4323dbf58374194cc1566dc0e",
      "filename": "src/core/client/stream/tabs/Comments/ExternalImageInput/ExternalImageInput.css",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/ExternalImageInput/ExternalImageInput.css",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/ExternalImageInput/ExternalImageInput.css",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/ExternalImageInput/ExternalImageInput.css?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -0,0 +1,13 @@\n+.root {\n+  padding: var(--spacing-2);\n+}\n+\n+.input {\n+  border-top-right-radius: 0;\n+  border-bottom-right-radius: 0;\n+}\n+\n+.insertButton {\n+  border-top-left-radius: 0;\n+  border-bottom-left-radius: 0;\n+}"
    },
    {
      "sha": "eaccb7b1666c1df4802eb05c43c16b9b6357598d",
      "filename": "src/core/client/stream/tabs/Comments/ExternalImageInput/ExternalImageInput.tsx",
      "status": "added",
      "additions": 62,
      "deletions": 0,
      "changes": 62,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/ExternalImageInput/ExternalImageInput.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/ExternalImageInput/ExternalImageInput.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/ExternalImageInput/ExternalImageInput.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -0,0 +1,62 @@\n+import { Localized } from \"@fluent/react/compat\";\n+import React, {\n+  ChangeEvent,\n+  FunctionComponent,\n+  useCallback,\n+  useState,\n+} from \"react\";\n+\n+import {\n+  Button,\n+  HorizontalGutter,\n+  InputLabel,\n+  TextField,\n+} from \"coral-ui/components/v2\";\n+import styles from \"./ExternalImageInput.css\";\n+\n+interface Props {\n+  onImageInsert: (url: string) => void;\n+}\n+\n+const ExternalImageInput: FunctionComponent<Props> = ({ onImageInsert }) => {\n+  const [url, setURL] = useState<string>(\"\");\n+  const onURLFieldChange = useCallback((evt: ChangeEvent<HTMLInputElement>) => {\n+    setURL(evt.target.value);\n+  }, []);\n+  const onInsertClick = useCallback(() => {\n+    onImageInsert(url);\n+    setURL(\"\");\n+  }, [url, setURL, onImageInsert]);\n+  return (\n+    <div className={styles.root}>\n+      <HorizontalGutter>\n+        <HorizontalGutter>\n+          <Localized id=\"comments-postComment-pasteImage\">\n+            <InputLabel>Paste image URL</InputLabel>\n+          </Localized>\n+          <TextField\n+            className={styles.input}\n+            value={url}\n+            onChange={onURLFieldChange}\n+            fullWidth\n+            variant=\"seamlessAdornment\"\n+            color=\"streamBlue\"\n+            adornment={\n+              <Localized id=\"comments-postComment-insertImage\">\n+                <Button\n+                  color=\"stream\"\n+                  onClick={onInsertClick}\n+                  className={styles.insertButton}\n+                >\n+                  Insert\n+                </Button>\n+              </Localized>\n+            }\n+          />\n+        </HorizontalGutter>\n+      </HorizontalGutter>\n+    </div>\n+  );\n+};\n+\n+export default ExternalImageInput;"
    },
    {
      "sha": "b9a940bb45f33593f79c7fadb507aaee1e844f3e",
      "filename": "src/core/client/stream/tabs/Comments/ExternalImageInput/index.ts",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/ExternalImageInput/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/ExternalImageInput/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/ExternalImageInput/index.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -0,0 +1 @@\n+export { default } from \"./ExternalImageInput\";"
    },
    {
      "sha": "2cc329d0911873de36877c99ff882032189498da",
      "filename": "src/core/client/stream/tabs/Comments/Stream/CommentForm/CommentForm.css",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Stream/CommentForm/CommentForm.css",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Stream/CommentForm/CommentForm.css",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/CommentForm/CommentForm.css?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -1,4 +1,5 @@\n $commentsBorder: var(--palette-grey-300);\n+$rteButtonActive: #ddd;\n \n .commentFormBox {\n   border: 1px solid $commentsBorder;\n@@ -15,3 +16,12 @@ $commentsBorder: var(--palette-grey-300);\n .icon {\n   margin-right: 2px;\n }\n+\n+.rteButton {\n+  padding: 3px;\n+}\n+\n+.rteButton:hover,\n+.rteButtonSelected {\n+  background-color: $rteButtonActive;\n+}"
    },
    {
      "sha": "434612bd67576372bf08f89155ea1c1cb4a7db46",
      "filename": "src/core/client/stream/tabs/Comments/Stream/CommentForm/CommentForm.tsx",
      "status": "modified",
      "additions": 65,
      "deletions": 21,
      "changes": 86,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Stream/CommentForm/CommentForm.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Stream/CommentForm/CommentForm.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/CommentForm/CommentForm.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -13,7 +13,6 @@ import React, {\n import { Field, Form, FormSpy } from \"react-final-form\";\n \n import { findMediaLinks, MediaLink } from \"coral-common/helpers/findMediaLinks\";\n-import { useToggleState } from \"coral-framework/hooks\";\n import { FormError, OnSubmit } from \"coral-framework/lib/form\";\n import { PropTypesOf } from \"coral-framework/types\";\n import CLASSES from \"coral-stream/classes\";\n@@ -42,9 +41,11 @@ export interface PasteEvent {\n }\n \n interface MediaProps {\n-  type: \"giphy\" | \"twitter\" | \"youtube\";\n+  type: \"giphy\" | \"twitter\" | \"youtube\" | \"external\";\n   url: string;\n   id: string | null;\n+  width?: string;\n+  height?: string;\n }\n \n interface FormProps {\n@@ -71,7 +72,7 @@ interface Props {\n   expired?: boolean;\n   submitStatus?: React.ReactNode;\n   classNameRoot: \"createComment\" | \"editComment\" | \"createReplyComment\";\n-  mediaConfig: PropTypesOf<typeof MediaField>[\"config\"] | null;\n+  mediaConfig: PropTypesOf<typeof MediaField>[\"config\"];\n   placeholder: string;\n   placeHolderId: string;\n   bodyInputID: string;\n@@ -81,7 +82,10 @@ interface Props {\n }\n \n const CommentForm: FunctionComponent<Props> = (props) => {\n-  const [showGifSelector, , toggleGIFSelector] = useToggleState();\n+  const [showGifSelector, setShowGifSelector] = useState<boolean>(false);\n+  const [showExternalImageInput, setShowExternalImageInput] = useState<boolean>(\n+    false\n+  );\n   const [media, setMedia] = useState<MediaLink | null>(null);\n   const onSubmit = useCallback(\n     (values: FormSubmitProps, form: FormApi) => {\n@@ -120,6 +124,20 @@ const CommentForm: FunctionComponent<Props> = (props) => {\n     [setMedia, props.mediaConfig]\n   );\n \n+  const toggleExternalImageInput = useCallback(() => {\n+    setShowExternalImageInput(!showExternalImageInput);\n+    if (showGifSelector) {\n+      setShowGifSelector(false);\n+    }\n+  }, [showExternalImageInput, showGifSelector]);\n+\n+  const toggleGIFSelector = useCallback(() => {\n+    setShowGifSelector(!showGifSelector);\n+    if (showExternalImageInput) {\n+      setShowExternalImageInput(false);\n+    }\n+  }, [showExternalImageInput, showGifSelector]);\n+\n   return (\n     <div className={cn(CLASSES[props.classNameRoot].$root, props.className)}>\n       <Form onSubmit={onSubmit} initialValues={props.initialValues}>\n@@ -175,23 +193,47 @@ const CommentForm: FunctionComponent<Props> = (props) => {\n                           disabled={submitting || props.disabled}\n                           ref={props.rteRef || null}\n                           toolbarButtons={\n-                            props.mediaConfig &&\n-                            props.mediaConfig.giphy.enabled ? (\n-                              <>\n-                                <Button\n-                                  color=\"secondary\"\n-                                  variant={showGifSelector ? \"filled\" : \"flat\"}\n-                                  onClick={toggleGIFSelector}\n-                                  fontSize=\"small\"\n-                                  paddingSize=\"extraSmall\"\n-                                >\n-                                  <Flex alignItems=\"center\">\n-                                    <Icon className={styles.icon}>add</Icon>\n-                                    GIF\n-                                  </Flex>\n-                                </Button>\n-                              </>\n-                            ) : null\n+                            <>\n+                              {props.mediaConfig &&\n+                              props.mediaConfig.external.enabled ? (\n+                                <>\n+                                  <Button\n+                                    color=\"secondary\"\n+                                    variant=\"flat\"\n+                                    className={cn(styles.rteButton, {\n+                                      [styles.rteButtonSelected]: showExternalImageInput,\n+                                    })}\n+                                    onClick={toggleExternalImageInput}\n+                                    fontSize=\"small\"\n+                                    paddingSize=\"extraSmall\"\n+                                  >\n+                                    <Flex alignItems=\"center\">\n+                                      <Icon size=\"md\">add_photo_alternate</Icon>\n+                                    </Flex>\n+                                  </Button>\n+                                </>\n+                              ) : null}\n+                              {props.mediaConfig &&\n+                              props.mediaConfig.giphy.enabled ? (\n+                                <>\n+                                  <Button\n+                                    color=\"secondary\"\n+                                    variant=\"flat\"\n+                                    className={cn(styles.rteButton, {\n+                                      [styles.rteButtonSelected]: showGifSelector,\n+                                    })}\n+                                    onClick={toggleGIFSelector}\n+                                    fontSize=\"small\"\n+                                    paddingSize=\"extraSmall\"\n+                                  >\n+                                    <Flex alignItems=\"center\">\n+                                      <Icon className={styles.icon}>add</Icon>\n+                                      GIF\n+                                    </Flex>\n+                                  </Button>\n+                                </>\n+                              ) : null}\n+                            </>\n                           }\n                         />\n                       </Localized>\n@@ -203,6 +245,8 @@ const CommentForm: FunctionComponent<Props> = (props) => {\n                       siteID={props.siteID}\n                       media={media}\n                       setMedia={setMedia}\n+                      showExternalImageInput={showExternalImageInput}\n+                      toggleExternalImageInput={toggleExternalImageInput}\n                       showGIFSelector={showGifSelector}\n                       toggleGIFSelector={toggleGIFSelector}\n                     />"
    },
    {
      "sha": "86c35d83bf43080d6540335f48a94393495bbb5b",
      "filename": "src/core/client/stream/tabs/Comments/Stream/CommentForm/MediaField.tsx",
      "status": "modified",
      "additions": 38,
      "deletions": 2,
      "changes": 40,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Stream/CommentForm/MediaField.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Stream/CommentForm/MediaField.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/CommentForm/MediaField.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -3,26 +3,34 @@ import { useField } from \"react-final-form\";\n \n import { isMediaLink, MediaLink } from \"coral-common/helpers/findMediaLinks\";\n import { GiphyGif } from \"coral-common/rest/external/giphy\";\n+import { getMediaValidators } from \"../../helpers\";\n \n+import { Icon } from \"coral-ui/components/v2\";\n+import { CallOut } from \"coral-ui/components/v3\";\n import {\n   MediaConfirmPrompt,\n   MediaPreview,\n } from \"../../Comment/MediaConfirmation\";\n+import ExternalImageInput from \"../../ExternalImageInput\";\n import GifSelector, { GifPreview } from \"../../GifSelector\";\n \n interface Props {\n   showGIFSelector: boolean;\n   toggleGIFSelector: () => void;\n+  showExternalImageInput: boolean;\n+  toggleExternalImageInput: () => void;\n   siteID: string;\n   config: MediaConfig;\n   media: MediaLink | null;\n   setMedia: (media: MediaLink | null) => void;\n }\n \n export interface Media {\n-  type: \"giphy\" | \"twitter\" | \"youtube\";\n+  type: \"giphy\" | \"twitter\" | \"youtube\" | \"external\";\n   url: string;\n   id?: string;\n+  width?: string;\n+  height?: string;\n }\n \n interface MediaConfig {\n@@ -35,10 +43,15 @@ interface MediaConfig {\n   youtube: {\n     enabled: boolean;\n   };\n+  external: {\n+    enabled: boolean;\n+  };\n }\n \n const MediaField: FunctionComponent<Props> = (props) => {\n-  const field = useField<Media | undefined>(\"media\");\n+  const field = useField<Media | undefined>(\"media\", {\n+    validate: getMediaValidators(),\n+  });\n \n   const onGIFSelect = useCallback(\n     (gif: GiphyGif) => {\n@@ -57,6 +70,18 @@ const MediaField: FunctionComponent<Props> = (props) => {\n     field.input.onChange(undefined);\n   }, [field.input]);\n \n+  const onImageInsert = useCallback(\n+    (url: string) => {\n+      field.input.onChange({\n+        type: \"external\",\n+        url,\n+      });\n+\n+      props.toggleExternalImageInput();\n+    },\n+    [props.toggleExternalImageInput]\n+  );\n+\n   const onConfirmMedia = useCallback(() => {\n     field.input.onChange(props.media!);\n     props.setMedia(null);\n@@ -73,6 +98,9 @@ const MediaField: FunctionComponent<Props> = (props) => {\n   return (\n     <>\n       {props.showGIFSelector && <GifSelector onGifSelect={onGIFSelect} />}\n+      {props.showExternalImageInput && (\n+        <ExternalImageInput onImageInsert={onImageInsert} />\n+      )}\n       {props.media && (\n         <MediaConfirmPrompt\n           media={props.media}\n@@ -94,6 +122,14 @@ const MediaField: FunctionComponent<Props> = (props) => {\n             <GifPreview url={media.url} onRemove={onGIFRemove} title=\"\" />\n           )\n         ))}\n+      {field.meta.error && (\n+        <CallOut\n+          color=\"error\"\n+          title={field.meta.error}\n+          titleWeight=\"semiBold\"\n+          icon={<Icon>error</Icon>}\n+        />\n+      )}\n     </>\n   );\n };"
    },
    {
      "sha": "a2a081c48dc96c411d783307c152271adcd24aaa",
      "filename": "src/core/client/stream/tabs/Comments/Stream/PostCommentForm/PostCommentForm.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Stream/PostCommentForm/PostCommentForm.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Stream/PostCommentForm/PostCommentForm.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/PostCommentForm/PostCommentForm.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -18,7 +18,7 @@ import PostCommentSubmitStatusContainer from \"./PostCommentSubmitStatusContainer\n import styles from \"./PostCommentForm.css\";\n \n interface MediaProps {\n-  type: \"twitter\" | \"youtube\" | \"giphy\";\n+  type: \"twitter\" | \"youtube\" | \"giphy\" | \"external\";\n   url: string;\n   id: string | null;\n }"
    },
    {
      "sha": "1a96753b75b98d65766c807b872b98b10cf9b0fc",
      "filename": "src/core/client/stream/tabs/Comments/Stream/PostCommentForm/PostCommentFormContainer.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Stream/PostCommentForm/PostCommentFormContainer.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Stream/PostCommentForm/PostCommentFormContainer.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/PostCommentForm/PostCommentFormContainer.spec.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -50,6 +50,7 @@ function createDefaultProps(add: DeepPartial<Props> = {}): Props {\n           giphy: { enabled: false },\n           twitter: { enabled: false },\n           youtube: { enabled: false },\n+          external: { enabled: false },\n         },\n         closeCommenting: {\n           message: \"closed\","
    },
    {
      "sha": "cbab9daa8ca7e0fdaf24b0094ddf7d5216ad0cbc",
      "filename": "src/core/client/stream/tabs/Comments/Stream/PostCommentForm/PostCommentFormContainer.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Stream/PostCommentForm/PostCommentFormContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Stream/PostCommentForm/PostCommentFormContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/PostCommentForm/PostCommentFormContainer.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -311,6 +311,9 @@ const enhanced = withContext(({ sessionStorage }) => ({\n                   giphy {\n                     enabled\n                   }\n+                  external {\n+                    enabled\n+                  }\n                 }\n                 rte {\n                   ...RTEContainer_config"
    },
    {
      "sha": "68eb405c1f78fe40ebbf91981c1628be1d5c0bd2",
      "filename": "src/core/client/stream/tabs/Comments/Stream/PostCommentForm/__snapshots__/PostCommentFormContainer.spec.tsx.snap",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Stream/PostCommentForm/__snapshots__/PostCommentFormContainer.spec.tsx.snap",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/Stream/PostCommentForm/__snapshots__/PostCommentFormContainer.spec.tsx.snap",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/PostCommentForm/__snapshots__/PostCommentFormContainer.spec.tsx.snap?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -12,6 +12,9 @@ exports[`renders correctly 1`] = `\n   max={100}\n   mediaConfig={\n     Object {\n+      \"external\": Object {\n+        \"enabled\": false,\n+      },\n       \"giphy\": Object {\n         \"enabled\": false,\n       },\n@@ -88,6 +91,9 @@ exports[`renders when commenting has been disabled (non-collapsing) 1`] = `\n   max={100}\n   mediaConfig={\n     Object {\n+      \"external\": Object {\n+        \"enabled\": false,\n+      },\n       \"giphy\": Object {\n         \"enabled\": false,\n       },\n@@ -164,6 +170,9 @@ exports[`renders when story has been closed (non-collapsing) 1`] = `\n   max={100}\n   mediaConfig={\n     Object {\n+      \"external\": Object {\n+        \"enabled\": false,\n+      },\n       \"giphy\": Object {\n         \"enabled\": false,\n       },\n@@ -224,6 +233,9 @@ exports[`renders when user is scheduled to be deleted 1`] = `\n   max={100}\n   mediaConfig={\n     Object {\n+      \"external\": Object {\n+        \"enabled\": false,\n+      },\n       \"giphy\": Object {\n         \"enabled\": false,\n       },\n@@ -278,6 +290,9 @@ exports[`renders with initialValues 1`] = `\n   max={100}\n   mediaConfig={\n     Object {\n+      \"external\": Object {\n+        \"enabled\": false,\n+      },\n       \"giphy\": Object {\n         \"enabled\": false,\n       },"
    },
    {
      "sha": "a5de7225fa27aacde447059e02a90892020ccd20",
      "filename": "src/core/client/stream/tabs/Comments/helpers/getCommentBodyValidators.ts",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/helpers/getCommentBodyValidators.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/helpers/getCommentBodyValidators.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/helpers/getCommentBodyValidators.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -10,8 +10,10 @@ import {\n \n import getHTMLCharacterLength from \"./getHTMLCharacterLength\";\n \n-const hasGIFAttached: Condition = (value, values) =>\n-  !!values.media && values.media.type === \"giphy\" && !!values.media.url;\n+const hasMediaAttached: Condition = (value, values) =>\n+  !!values.media &&\n+  (values.media.type === \"giphy\" || values.media.type === \"external\") &&\n+  !!values.media.url;\n \n function getLengthValidators(min: number | null, max: number | null) {\n   const validators: Validator[] = [];\n@@ -37,7 +39,7 @@ export default function getCommentBodyValdiators(\n   max: number | null\n ) {\n   return validateWhenOtherwise(\n-    hasGIFAttached,\n+    hasMediaAttached,\n     getLengthValidators(null, max),\n     getLengthValidators(min || 1, max)\n   );"
    },
    {
      "sha": "0a6cb433b208d8c99591ac36063f6f19d218405c",
      "filename": "src/core/client/stream/tabs/Comments/helpers/getMediaValidators.ts",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/helpers/getMediaValidators.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/helpers/getMediaValidators.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/helpers/getMediaValidators.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -0,0 +1,23 @@\n+import {\n+  composeValidators,\n+  Condition,\n+  validateImageURL,\n+  validateURL,\n+  validateWhen,\n+} from \"coral-framework/lib/validation\";\n+\n+const hasExternalMediaAttached: Condition = (value, values) => {\n+  return (\n+    !!values.media && values.media.type === \"external\" && !!values.media.url\n+  );\n+};\n+\n+export default function getMediaFieldValidators() {\n+  return validateWhen(\n+    hasExternalMediaAttached,\n+    composeValidators(\n+      (v, values) => validateURL(v.url, values),\n+      (v, values) => validateImageURL(v.url, values)\n+    )\n+  );\n+}"
    },
    {
      "sha": "d477cd49032ac15f3cb3a99a69c97daee15b57d3",
      "filename": "src/core/client/stream/tabs/Comments/helpers/index.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/helpers/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Comments/helpers/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/helpers/index.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -8,3 +8,4 @@ export { default as isInReview } from \"./isInReview\";\n export { default as isRejected } from \"./isRejected\";\n export { default as isPublished } from \"./isPublished\";\n export { default as prependCommentEdgeToProfile } from \"./prependCommentEdgeToProfile\";\n+export { default as getMediaValidators } from \"./getMediaValidators\";"
    },
    {
      "sha": "d26263406d3da5c49b2ee1b6142512e79e2d5a6b",
      "filename": "src/core/client/stream/tabs/Profile/MyComments/HistoryCommentContainer.tsx",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Profile/MyComments/HistoryCommentContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Profile/MyComments/HistoryCommentContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Profile/MyComments/HistoryCommentContainer.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -59,7 +59,6 @@ const HistoryCommentContainer: FunctionComponent<Props> = (props) => {\n         <MediaSectionContainer\n           comment={props.comment}\n           settings={props.settings}\n-          defaultExpanded={false}\n         />\n       }\n     />"
    },
    {
      "sha": "f35dc5becf99359bbb84665be25b20dfdc50f538",
      "filename": "src/core/client/stream/tabs/Profile/Preferences/MediaSettingsContainer.tsx",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Profile/Preferences/MediaSettingsContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/tabs/Profile/Preferences/MediaSettingsContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Profile/Preferences/MediaSettingsContainer.tsx?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -65,9 +65,10 @@ const MediaSettingsContainer: FunctionComponent<Props> = ({\n   );\n \n   if (\n-    !settings.media?.giphy?.enabled &&\n-    !settings.media?.twitter?.enabled &&\n-    !settings.media?.youtube?.enabled\n+    !settings.media.giphy.enabled &&\n+    !settings.media.twitter.enabled &&\n+    !settings.media.youtube.enabled &&\n+    !settings.media.external.enabled\n   ) {\n     return null;\n   }\n@@ -158,7 +159,7 @@ const MediaSettingsContainer: FunctionComponent<Props> = ({\n           )}\n         </Form>\n       </HorizontalGutter>\n-      <HorizontalRule></HorizontalRule>\n+      <HorizontalRule />\n     </>\n   );\n };\n@@ -176,6 +177,9 @@ const enhanced = withFragmentContainer<Props>({\n         youtube {\n           enabled\n         }\n+        external {\n+          enabled\n+        }\n       }\n     }\n   `,"
    },
    {
      "sha": "34d0c39d12db6021f83f87413f7d1cefd2675e8b",
      "filename": "src/core/client/stream/test/fixtures.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/test/fixtures.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/test/fixtures.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/fixtures.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -112,6 +112,7 @@ export const settings = createFixture<GQLSettings>({\n     twitter: { enabled: false },\n     youtube: { enabled: false },\n     giphy: { enabled: false },\n+    external: { enabled: false },\n   },\n   multisite: false,\n   featureFlags: [],\n@@ -174,6 +175,9 @@ export const baseUser = createFixture<GQLUser>({\n       hasNextPage: false,\n     },\n   },\n+  mediaSettings: {\n+    unfurlEmbeds: false,\n+  },\n   notifications: {\n     onReply: false,\n     onModeration: false,"
    },
    {
      "sha": "75009166953870cb51a07183e7ef3b58d8a8f988",
      "filename": "src/core/client/stream/test/helpers/fixture.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/test/helpers/fixture.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/client/stream/test/helpers/fixture.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/helpers/fixture.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -61,6 +61,10 @@ export function createUser() {\n     createdAt: randomDate().toISOString(),\n     status: createUserStatus(),\n     ignoredUsers: [],\n+    avatar: undefined,\n+    mediaSettings: {\n+      unfurlEmbeds: false,\n+    },\n     comments: {\n       edges: [],\n       pageInfo: {"
    },
    {
      "sha": "8d49fff3e4db3bc3cde809156a0f753331a50ec5",
      "filename": "src/core/common/helpers/findMediaLinks.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/common/helpers/findMediaLinks.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/common/helpers/findMediaLinks.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/common/helpers/findMediaLinks.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -1,4 +1,4 @@\n-type MediaType = \"twitter\" | \"youtube\";\n+type MediaType = \"twitter\" | \"youtube\" | \"external\";\n \n export interface MediaLink {\n   type: MediaType;\n@@ -10,6 +10,7 @@ export function isMediaLink<T extends {}>(\n ): link is MediaLink {\n   if (\n     ((link as MediaLink).type === \"twitter\" ||\n+      (link as MediaLink).type === \"external\" ||\n       (link as MediaLink).type === \"youtube\") &&\n     (link as MediaLink).url\n   ) {"
    },
    {
      "sha": "17327a997d09ab9959638de1b8163a43803dc8c9",
      "filename": "src/core/common/helpers/index.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/common/helpers/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/common/helpers/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/common/helpers/index.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -1,3 +1,4 @@\n export { default as waitFor } from \"./waitFor\";\n export * from \"./validate\";\n export * from \"./i18n\";\n+export * from \"./validateImagePathname\";"
    },
    {
      "sha": "f8cdcf2d22ee101ce3c0f7a96422720619bed163",
      "filename": "src/core/common/helpers/validateImagePathname.ts",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/common/helpers/validateImagePathname.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/common/helpers/validateImagePathname.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/common/helpers/validateImagePathname.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -0,0 +1,8 @@\n+/**\n+ * IMAGE_EXTENSIONS are the extensions associated with supported images.\n+ */\n+const IMAGE_EXTENSIONS = /\\.(jpe?g|gif|png|webp)$/i;\n+\n+export default function validateImagePathname(pathname: string) {\n+  return IMAGE_EXTENSIONS.test(pathname);\n+}"
    },
    {
      "sha": "1fb16a8c74f1371b597b23a0852a18575fb769f1",
      "filename": "src/core/server/app/handlers/api/externalMedia.ts",
      "status": "added",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/app/handlers/api/externalMedia.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/app/handlers/api/externalMedia.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/handlers/api/externalMedia.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -0,0 +1,46 @@\n+import Joi from \"@hapi/joi\";\n+\n+import validateImagePathname from \"coral-common/helpers/validateImagePathname\";\n+import { validate } from \"coral-server/app/request/body\";\n+import { supportsMediaType } from \"coral-server/models/tenant\";\n+import { RequestHandler, TenantCoralRequest } from \"coral-server/types/express\";\n+\n+const ExternalMediaQuerySchema = Joi.object().keys({\n+  url: Joi.string().uri().required(),\n+});\n+\n+interface ExternalMediaQuery {\n+  url: string;\n+}\n+\n+export const externalMediaHandler = (): RequestHandler<TenantCoralRequest> => {\n+  // TODO: add some kind of rate limiting or spam protection\n+  return async (req, res, next) => {\n+    const { tenant } = req.coral;\n+\n+    try {\n+      if (!supportsMediaType(tenant, \"external\")) {\n+        res.sendStatus(400);\n+        return;\n+      }\n+\n+      const { url }: ExternalMediaQuery = validate(\n+        ExternalMediaQuerySchema,\n+        req.query\n+      );\n+\n+      // Validate the media file pathname. We shouldn't encounter an error\n+      // related to an invalid url here because we validated it above with Joi.\n+      // If we do it'll be caught below anyways.\n+      const parsed = new URL(url);\n+      if (!validateImagePathname(parsed.pathname)) {\n+        res.sendStatus(400);\n+        return;\n+      }\n+\n+      res.render(\"image\", { url });\n+    } catch (err) {\n+      next(err);\n+    }\n+  };\n+};"
    },
    {
      "sha": "d29fd59acedc5f112ddcc58717a679ce996c8f22",
      "filename": "src/core/server/app/handlers/api/index.ts",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/app/handlers/api/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/app/handlers/api/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/handlers/api/index.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -1,9 +1,11 @@\n export * from \"./account\";\n export * from \"./auth\";\n+export * from \"./dashboard\";\n+export * from \"./externalMedia\";\n export * from \"./health\";\n export * from \"./install\";\n-export * from \"./version\";\n-export * from \"./dashboard\";\n-export * from \"./user\";\n-export * from \"./story\";\n+export * from \"./oembed\";\n export * from \"./remoteMedia\";\n+export * from \"./story\";\n+export * from \"./user\";\n+export * from \"./version\";"
    },
    {
      "sha": "f6f4e1a57e1dd474e41b32e2525bb8577c41477f",
      "filename": "src/core/server/app/handlers/api/oembed.ts",
      "status": "renamed",
      "additions": 14,
      "deletions": 51,
      "changes": 65,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/app/handlers/api/oembed.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/app/handlers/api/oembed.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/handlers/api/oembed.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -39,71 +39,34 @@ export const oembedHandler = ({\n         return;\n       }\n \n-      let style = `\n-          body {\n-            margin: 0;\n-            font-family: sans-serif;\n-          }\n-          .container * {\n-            margin: 0!important;\n-          }\n-      `;\n+      // Get the oEmbed response.\n+\n+      // TODO: look at caching this response\n       const response = await fetchOEmbedResponse(type, url, maxWidth);\n-      if (response === null || !response.html) {\n+      if (!response?.html) {\n+        // There was no response! Return a translated error message.\n         const bundle = i18n.getBundle(tenant.locale);\n         const message = translate(\n           bundle,\n           \"Requested media could not be found\",\n           \"common-embedNotFound\"\n         );\n-        res.status(404);\n-        res.send(\n-          `<html>\n-            <style>\n-              ${style}\n-            </style>\n-            <body>\n-            ${message}\n-            </body>\n-          <html>`\n-        );\n-        return;\n+\n+        return res.status(404).render(\"oembed\", { message });\n       }\n \n+      // Pull out some params from the response.\n       const { width, height, html } = response;\n \n-      // Compile the style to be used for the embed.\n+      // If there's a width and height (and they aren't zero), then compute the\n+      // ratio that we'll pass down to the template.\n+      let ratio: number | undefined;\n       if (width && height) {\n-        style += `\n-          .container {\n-            overflow: hidden;\n-            position: relative;\n-            padding-bottom: ${(height / width) * 100}%;\n-          }\n-          .container iframe {\n-            border: 0;\n-            height: 100%;\n-            left: 0;\n-            position: absolute;\n-            top: 0;\n-            width: 100%;\n-          }\n-        `;\n+        ratio = Math.floor((height / width) * 100);\n       }\n \n-      // Send back the HTML for the oEmbed.\n-      res.send(\n-        `<html>\n-          <style>\n-            ${style}\n-          </style>\n-            <body>\n-              <div class=\"container\">\n-                ${html}\n-              </div>\n-            </body>\n-          <html>`\n-      );\n+      // Send back the template!\n+      return res.render(\"oembed\", { html, ratio });\n     } catch (err) {\n       next(err);\n     }",
      "previous_filename": "src/core/server/app/handlers/api/oembed/oembed.ts"
    },
    {
      "sha": "2cce9eb2410652f4077e82665594ef32e1a5cf32",
      "filename": "src/core/server/app/handlers/api/remoteMedia.ts",
      "status": "added",
      "additions": 42,
      "deletions": 0,
      "changes": 42,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/app/handlers/api/remoteMedia.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/app/handlers/api/remoteMedia.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/handlers/api/remoteMedia.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -0,0 +1,42 @@\n+import Joi from \"@hapi/joi\";\n+\n+import { validate } from \"coral-server/app/request/body\";\n+import { supportsMediaType } from \"coral-server/models/tenant\";\n+import { searchGiphy } from \"coral-server/services/giphy\";\n+import { RequestHandler, TenantCoralRequest } from \"coral-server/types/express\";\n+\n+const GIFSearchQuerySchema = Joi.object().keys({\n+  query: Joi.string().required(),\n+  offset: Joi.string().optional().default(\"0\"),\n+});\n+\n+interface GIFSearchQuery {\n+  query: string;\n+  offset: string;\n+}\n+\n+export const gifSearchHandler: RequestHandler<TenantCoralRequest> = async (\n+  req,\n+  res,\n+  next\n+) => {\n+  const { tenant } = req.coral;\n+\n+  try {\n+    const { query, offset }: GIFSearchQuery = validate(\n+      GIFSearchQuerySchema,\n+      req.query\n+    );\n+\n+    if (!supportsMediaType(tenant, \"giphy\")) {\n+      res.sendStatus(400);\n+      return;\n+    }\n+\n+    const results = await searchGiphy(query, offset, tenant);\n+\n+    res.json(results);\n+  } catch (err) {\n+    next(err);\n+  }\n+};"
    },
    {
      "sha": "77d5cf51f888e455e18188d3e2b2fa25bdae8ec2",
      "filename": "src/core/server/app/handlers/api/remoteMedia/index.ts",
      "status": "removed",
      "additions": 0,
      "deletions": 25,
      "changes": 25,
      "blob_url": "https://github.com/coralproject/talk/blob/126a27f7bc7ccde2e7139b812d504f578bf74bc4/src/core/server/app/handlers/api/remoteMedia/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/126a27f7bc7ccde2e7139b812d504f578bf74bc4/src/core/server/app/handlers/api/remoteMedia/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/handlers/api/remoteMedia/index.ts?ref=126a27f7bc7ccde2e7139b812d504f578bf74bc4",
      "patch": "@@ -1,25 +0,0 @@\n-import { searchGiphy } from \"coral-server/services/giphy\";\n-import { RequestHandler, TenantCoralRequest } from \"coral-server/types/express\";\n-\n-export const gifSearchHandler: RequestHandler<TenantCoralRequest> = async (\n-  req,\n-  res,\n-  next\n-) => {\n-  const { tenant } = req.coral;\n-\n-  if (!req.query.query) {\n-    return next(new Error(\"search query required\"));\n-  }\n-\n-  try {\n-    const results = await searchGiphy(\n-      req.query.query,\n-      req.query.offset || \"0\",\n-      tenant\n-    );\n-    res.json(results);\n-  } catch (err) {\n-    next(err);\n-  }\n-};"
    },
    {
      "sha": "c8bc7a88f963b0f9ee1d54ba78f225c5b6e9fa28",
      "filename": "src/core/server/app/middleware/passport/strategies/verifiers/sso.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/app/middleware/passport/strategies/verifiers/sso.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/app/middleware/passport/strategies/verifiers/sso.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/middleware/passport/strategies/verifiers/sso.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -5,6 +5,7 @@ import { DateTime } from \"luxon\";\n import { Db } from \"mongodb\";\n import { URL } from \"url\";\n \n+import validateImagePathname from \"coral-common/helpers/validateImagePathname\";\n import { validate } from \"coral-server/app/request/body\";\n import { IntegrationDisabled, TokenInvalidError } from \"coral-server/errors\";\n import logger from \"coral-server/logger\";\n@@ -68,11 +69,10 @@ export function isSSOToken(token: SSOToken | object): token is SSOToken {\n   return isNil(error);\n }\n \n-const IMAGE_EXTENSIONS = /\\.(jpe?g|png|gif|webp)$/i;\n function isValidImageURL(url: string) {\n   try {\n     const parsed = new URL(url);\n-    return IMAGE_EXTENSIONS.test(parsed.pathname);\n+    return validateImagePathname(parsed.pathname);\n   } catch (err) {\n     return false;\n   }"
    },
    {
      "sha": "2082b93ba7306e159a9c4bfcb7a5d6d75e60dd95",
      "filename": "src/core/server/app/router/api/index.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/app/router/api/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/app/router/api/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/router/api/index.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -2,7 +2,7 @@ import express from \"express\";\n import passport from \"passport\";\n \n import { AppOptions } from \"coral-server/app\";\n-import { oembedHandler } from \"coral-server/app/handlers/api/oembed/oembed\";\n+import { externalMediaHandler, oembedHandler } from \"coral-server/app/handlers\";\n import {\n   apolloGraphQLMiddleware,\n   authenticate,\n@@ -55,8 +55,6 @@ export function createAPIRouter(app: AppOptions, options: RouterOptions) {\n   router.use(\"/account\", createNewAccountRouter(app, options));\n   router.use(\"/user\", createNewUserRouter(app));\n \n-  router.get(\"/oembed\", cspSiteMiddleware(app), oembedHandler(app));\n-\n   // Configure the GraphQL route middleware.\n   router.use(\n     \"/graphql\",\n@@ -81,6 +79,8 @@ export function createAPIRouter(app: AppOptions, options: RouterOptions) {\n     loggedInMiddleware,\n     createRemoteMediaRouter(app)\n   );\n+  router.get(\"/oembed\", cspSiteMiddleware(app), oembedHandler(app));\n+  router.get(\"/external-media\", cspSiteMiddleware(app), externalMediaHandler());\n \n   // General API error handler.\n   router.use(notFoundMiddleware);"
    },
    {
      "sha": "e5fb948f16aa3a8199eab3ba623632dbd7075597",
      "filename": "src/core/server/app/views/image.html",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/app/views/image.html",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/app/views/image.html",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/views/image.html?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -0,0 +1,20 @@\n+<html>\n+  <head>\n+    <style>\n+      body {\n+        margin: 0;\n+        font-family: sans-serif;\n+      }\n+      .container * {\n+        margin: 0 !important;\n+      }\n+      .image {\n+        display: block;\n+        max-width: 100%;\n+      }\n+    </style>\n+  </head>\n+  <body>\n+    <img src=\"{{ url }}\" class=\"image\" />\n+  </body>\n+</html>"
    },
    {
      "sha": "701169b0f5444d265a6b0b3df3a5fd554581a333",
      "filename": "src/core/server/app/views/oembed.html",
      "status": "added",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/app/views/oembed.html",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/app/views/oembed.html",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/views/oembed.html?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -0,0 +1,39 @@\n+<html>\n+  <head>\n+    <style>\n+      body {\n+        margin: 0;\n+        font-family: sans-serif;\n+      }\n+      {% if html %}\n+        .container * {\n+          margin: 0 !important;\n+        }\n+        {% if ratio %}\n+          .container {\n+            overflow: hidden;\n+            position: relative;\n+            padding-bottom: {{ ratio }}%;\n+          }\n+          .container iframe {\n+            border: 0;\n+            height: 100%;\n+            left: 0;\n+            position: absolute;\n+            top: 0;\n+            width: 100%;\n+          }\n+        {% endif %}\n+      {% endif %}\n+    </style>\n+  </head>\n+  <body>\n+    {% if message %}\n+      {{ message }}\n+    {% elif html %}\n+      <div class=\"container\">\n+        {{ html | safe }}\n+      </div>\n+    {% endif %}\n+  </body>\n+</html>"
    },
    {
      "sha": "efbac4a713304d869e7657a3cb981f8c45fcdc75",
      "filename": "src/core/server/graph/resolvers/CommentMedia.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/graph/resolvers/CommentMedia.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/graph/resolvers/CommentMedia.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/resolvers/CommentMedia.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -11,6 +11,8 @@ const resolveType: GQLCommentMediaTypeResolver<comment.CommentMedia> = (\n       return \"YouTubeMedia\";\n     case \"twitter\":\n       return \"TwitterMedia\";\n+    case \"external\":\n+      return \"ExternalMedia\";\n     default:\n       // TODO: replace with better error.\n       throw new Error(\"invalid embed type\");"
    },
    {
      "sha": "aa3847ce07d480993aaa2c57647bb89bf74d5a01",
      "filename": "src/core/server/graph/resolvers/ExternalMediaConfiguration.ts",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/graph/resolvers/ExternalMediaConfiguration.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/graph/resolvers/ExternalMediaConfiguration.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/resolvers/ExternalMediaConfiguration.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -0,0 +1,14 @@\n+import { hasFeatureFlag } from \"coral-server/models/tenant\";\n+\n+import {\n+  GQLExternalMediaConfiguration,\n+  GQLExternalMediaConfigurationTypeResolver,\n+  GQLFEATURE_FLAG,\n+} from \"coral-server/graph/schema/__generated__/types\";\n+\n+export const ExternalMediaConfiguration: Required<GQLExternalMediaConfigurationTypeResolver<\n+  Partial<GQLExternalMediaConfiguration>\n+>> = {\n+  enabled: (source, args, ctx) =>\n+    hasFeatureFlag(ctx.tenant, GQLFEATURE_FLAG.EXTERNAL_MEDIA),\n+};"
    },
    {
      "sha": "2b24d9bccebff01ae65e5a3a8e3a69fd518018f6",
      "filename": "src/core/server/graph/resolvers/MediaConfiguration.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/graph/resolvers/MediaConfiguration.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/graph/resolvers/MediaConfiguration.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/resolvers/MediaConfiguration.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -9,4 +9,5 @@ export const MediaConfiguration: GQLMediaConfigurationTypeResolver<Partial<\n   twitter: ({ twitter = {} }) => twitter,\n   youtube: ({ youtube = {} }) => youtube,\n   giphy: ({ giphy = {} }) => giphy,\n+  external: () => ({}),\n };"
    },
    {
      "sha": "f7a409d5dfd844a812ee2a0bde0e8855b0a5f024",
      "filename": "src/core/server/graph/resolvers/User.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/graph/resolvers/User.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/graph/resolvers/User.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/resolvers/User.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -81,4 +81,5 @@ export const User: GQLUserTypeResolver<user.User> = {\n     // Get the Stories!\n     return ctx.loaders.Stories.story.loadMany(results.map(({ _id }) => _id));\n   },\n+  mediaSettings: ({ mediaSettings = {} }) => mediaSettings,\n };"
    },
    {
      "sha": "85b5cb9359e48a86f0ca07065176c711e702b2f6",
      "filename": "src/core/server/graph/resolvers/UserMediaSettings.ts",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/graph/resolvers/UserMediaSettings.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/graph/resolvers/UserMediaSettings.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/resolvers/UserMediaSettings.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -0,0 +1,10 @@\n+import {\n+  GQLUserMediaSettings,\n+  GQLUserMediaSettingsTypeResolver,\n+} from \"coral-server/graph/schema/__generated__/types\";\n+\n+export const UserMediaSettings: GQLUserMediaSettingsTypeResolver<Partial<\n+  GQLUserMediaSettings\n+>> = {\n+  unfurlEmbeds: ({ unfurlEmbeds = false }) => unfurlEmbeds,\n+};"
    },
    {
      "sha": "669321a66111cd9efe1d5731af85b5b009258c6a",
      "filename": "src/core/server/graph/resolvers/index.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/graph/resolvers/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/graph/resolvers/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/resolvers/index.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -21,6 +21,7 @@ import { CommentReplyCreatedPayload } from \"./CommentReplyCreatedPayload\";\n import { CommentRevision } from \"./CommentRevision\";\n import { CommentStatusUpdatedPayload } from \"./CommentStatusUpdatedPayload\";\n import { DisableCommenting } from \"./DisableCommenting\";\n+import { ExternalMediaConfiguration } from \"./ExternalMediaConfiguration\";\n import { ExternalModerationPhase } from \"./ExternalModerationPhase\";\n import { FacebookAuthIntegration } from \"./FacebookAuthIntegration\";\n import { FeatureCommentPayload } from \"./FeatureCommentPayload\";\n@@ -56,6 +57,7 @@ import { SuspensionStatusHistory } from \"./SuspensionStatusHistory\";\n import { Tag } from \"./Tag\";\n import { TwitterMediaConfiguration } from \"./TwitterMediaConfiguration\";\n import { User } from \"./User\";\n+import { UserMediaSettings } from \"./UserMediaSettings\";\n import { UserModerationScopes } from \"./UserModerationScopes\";\n import { UsernameHistory } from \"./UsernameHistory\";\n import { UsernameStatus } from \"./UsernameStatus\";\n@@ -84,6 +86,7 @@ const Resolvers: GQLResolver = {\n   CommentStatusUpdatedPayload,\n   Cursor,\n   DisableCommenting,\n+  ExternalMediaConfiguration,\n   ExternalModerationPhase,\n   FacebookAuthIntegration,\n   FeatureCommentPayload,\n@@ -121,6 +124,7 @@ const Resolvers: GQLResolver = {\n   TwitterMediaConfiguration,\n   Time,\n   User,\n+  UserMediaSettings,\n   UserModerationScopes,\n   UsernameHistory,\n   UsernameStatus,"
    },
    {
      "sha": "e566f0e0dc119b31c06ea8dc6c0a88376690af80",
      "filename": "src/core/server/graph/schema/schema.graphql",
      "status": "modified",
      "additions": 54,
      "deletions": 5,
      "changes": 59,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/graph/schema/schema.graphql",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/graph/schema/schema.graphql",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/schema/schema.graphql?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -420,9 +420,15 @@ enum FEATURE_FLAG {\n   READ_MORE_NEW_TAB\n \n   \"\"\"\n-  AVATARS will enable pulling an avatar URL from sso token and displaying it next to user comments\n+  AVATARS will enable pulling an avatar URL from sso token and displaying it\n+  next to user comments\n   \"\"\"\n   AVATARS\n+\n+  \"\"\"\n+  EXTERNAL_MEDIA enables embedding external images\n+  \"\"\"\n+  EXTERNAL_MEDIA\n }\n \n # The moderation mode of the site.\n@@ -1340,6 +1346,13 @@ type YouTubeMediaConfiguration {\n   enabled: Boolean!\n }\n \n+type ExternalMediaConfiguration {\n+  \"\"\"\n+  enabled is true when external media objects are enabled.\n+  \"\"\"\n+  enabled: Boolean!\n+}\n+\n type MediaConfiguration {\n   \"\"\"\n   twitter is the configuration for Twitter support.\n@@ -1355,6 +1368,11 @@ type MediaConfiguration {\n   giphy is the configuration for Giphy support.\n   \"\"\"\n   giphy: GiphyMediaConfiguration!\n+\n+  \"\"\"\n+  external is the configuration for external images.\n+  \"\"\"\n+  external: ExternalMediaConfiguration!\n }\n \n ################################################################################\n@@ -2256,7 +2274,7 @@ type UserMediaSettings {\n   unfurlEmbeds is whether the user has chosen to immediately show embed contents\n   without having to click \"Show Tweet\", \"Show GIF\", etc.\n   \"\"\"\n-  unfurlEmbeds: Boolean\n+  unfurlEmbeds: Boolean!\n }\n \n \"\"\"\n@@ -2564,7 +2582,7 @@ type User {\n   \"\"\"\n   mediaSettings are the user's preferences around media stream behaviour.\n   \"\"\"\n-  mediaSettings: UserMediaSettings\n+  mediaSettings: UserMediaSettings!\n     @auth(\n       userIDField: \"id\"\n       permit: [SUSPENDED, BANNED, PENDING_DELETION, WARNED]\n@@ -2857,10 +2875,32 @@ type YouTubeMedia {\n   height: Int\n }\n \n+type ExternalMedia {\n+  \"\"\"\n+  url is the URL of a YouTube video.\n+  \"\"\"\n+  url: String!\n+\n+  \"\"\"\n+  extension is the file extension\n+  \"\"\"\n+  extension: String!\n+\n+  \"\"\"\n+  width is the width of the YouTube video in pixels.\n+  \"\"\"\n+  width: Int\n+\n+  \"\"\"\n+  height is the height of the YouTube video in pixels.\n+  \"\"\"\n+  height: Int\n+}\n+\n \"\"\"\n CommentMedia is the various media types that can be attached to a Comment.\n \"\"\"\n-union CommentMedia = GiphyMedia | TwitterMedia | YouTubeMedia\n+union CommentMedia = GiphyMedia | TwitterMedia | YouTubeMedia | ExternalMedia\n \n type CommentRevision {\n   \"\"\"\n@@ -3818,7 +3858,7 @@ CreateCommentMediaInput is used for creating media to be attached to a Comment.\n input CreateCommentMediaInput {\n   \"\"\"\n   type specifies the type of media that can be attached. Valid values for this\n-  are: `giphy`, `twitter`, and `youtube`.\n+  are: `giphy`, `external`, `twitter`, and `youtube`.\n   \"\"\"\n   type: String!\n \n@@ -3831,6 +3871,15 @@ input CreateCommentMediaInput {\n   url is the URL to the media resource.\n   \"\"\"\n   url: String!\n+\n+  \"\"\"\n+  width is the width to the media resource.\n+  \"\"\"\n+  width: String\n+  \"\"\"\n+  height is the height to the media resource.\n+  \"\"\"\n+  height: String\n }\n \n ##################"
    },
    {
      "sha": "b51363cd77a229549e24e8c3406aefc8c3f2c209",
      "filename": "src/core/server/models/comment/revision.ts",
      "status": "modified",
      "additions": 12,
      "deletions": 1,
      "changes": 13,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/models/comment/revision.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/models/comment/revision.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/models/comment/revision.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -74,7 +74,18 @@ export interface YouTubeMedia {\n   height?: number;\n }\n \n-export type CommentMedia = GiphyMedia | TwitterMedia | YouTubeMedia;\n+export interface ExternalMedia {\n+  type: \"external\";\n+  url: string;\n+  width?: number;\n+  height?: number;\n+}\n+\n+export type CommentMedia =\n+  | GiphyMedia\n+  | TwitterMedia\n+  | YouTubeMedia\n+  | ExternalMedia;\n \n /**\n  * Revision stores a Comment's body for a specific edit. Actions can be tied to"
    },
    {
      "sha": "53472be86e216409e2b5c7042f01e77415fd389c",
      "filename": "src/core/server/models/settings/settings.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/models/settings/settings.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/models/settings/settings.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/models/settings/settings.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -229,7 +229,7 @@ export type Settings = GlobalModerationSettings &\n     /**\n      * media is the configuration media content attached to Comment's.\n      */\n-    media?: GQLMediaConfiguration;\n+    media?: Omit<GQLMediaConfiguration, \"external\">;\n   };\n \n export const defaultRTEConfiguration: GQLRTEConfiguration = {"
    },
    {
      "sha": "b93c4e22f496cba20c61905732a30b73d667124e",
      "filename": "src/core/server/models/tenant/helpers.ts",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/models/tenant/helpers.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/models/tenant/helpers.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/models/tenant/helpers.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -71,3 +71,19 @@ export function getWebhookEndpoint(\n ) {\n   return tenant.webhooks.endpoints.find((e) => e.id === endpointID) || null;\n }\n+\n+export function supportsMediaType(\n+  tenant: Pick<Tenant, \"media\" | \"featureFlags\">,\n+  type: \"twitter\" | \"youtube\" | \"giphy\" | \"external\"\n+): tenant is Omit<Tenant, \"media\"> & Required<Pick<Tenant, \"media\">> {\n+  switch (type) {\n+    case \"external\":\n+      return hasFeatureFlag(tenant, GQLFEATURE_FLAG.EXTERNAL_MEDIA);\n+    case \"twitter\":\n+      return !!tenant.media?.twitter.enabled;\n+    case \"youtube\":\n+      return !!tenant.media?.youtube.enabled;\n+    case \"giphy\":\n+      return !!tenant.media?.giphy.enabled && !!tenant.media.giphy.key;\n+  }\n+}"
    },
    {
      "sha": "c28d17e5bbb4309868ecd140d5f5e57a61e4da5a",
      "filename": "src/core/server/models/tenant/tenant.ts",
      "status": "modified",
      "additions": 0,
      "deletions": 21,
      "changes": 21,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/models/tenant/tenant.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/models/tenant/tenant.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/models/tenant/tenant.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -468,24 +468,3 @@ export function retrieveAnnouncementIfEnabled(\n   }\n   return null;\n }\n-\n-export function supportsMediaType(\n-  tenant: Tenant,\n-  type: \"twitter\" | \"youtube\" | \"giphy\"\n-): tenant is Omit<Tenant, \"media\"> & Required<Pick<Tenant, \"media\">> {\n-  if (!tenant.media) {\n-    return false;\n-  }\n-  if (type === \"twitter\") {\n-    return tenant.media.twitter && tenant.media.twitter.enabled;\n-  } else if (type === \"youtube\") {\n-    return tenant.media.youtube && tenant.media.youtube.enabled;\n-  } else if (type === \"giphy\") {\n-    return (\n-      tenant.media.giphy &&\n-      tenant.media.giphy.enabled &&\n-      !!tenant.media.giphy.key\n-    );\n-  }\n-  return false;\n-}"
    },
    {
      "sha": "59eecb13d200dd64273e51c392f19438769ad000",
      "filename": "src/core/server/models/user/user.ts",
      "status": "modified",
      "additions": 15,
      "deletions": 16,
      "changes": 31,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/models/user/user.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/models/user/user.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/models/user/user.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -37,8 +37,8 @@ import {\n   GQLPremodStatus,\n   GQLSuspensionStatus,\n   GQLTimeRange,\n-  GQLUpdateUserMediaSettingsInput,\n   GQLUSER_ROLE,\n+  GQLUserMediaSettings,\n   GQLUsernameStatus,\n   GQLUserNotificationSettings,\n   GQLWarningStatus,\n@@ -537,6 +537,11 @@ export interface User extends TenantResource {\n    */\n   deletedAt?: Date;\n \n+  /**\n+   * mediaSettings are optional media settings for the User.\n+   */\n+  mediaSettings?: GQLUserMediaSettings;\n+\n   commentCounts: UserCommentCounts;\n }\n \n@@ -2545,18 +2550,16 @@ export async function updateUserNotificationSettings(\n   mongo: Db,\n   tenantID: string,\n   id: string,\n-  settings: NotificationSettingsInput\n+  notifications: NotificationSettingsInput\n ) {\n+  const update: DeepPartial<User> = { notifications };\n+\n   const result = await collection(mongo).findOneAndUpdate(\n     {\n       id,\n       tenantID,\n     },\n-    {\n-      $set: dotize({\n-        notifications: settings,\n-      }),\n-    },\n+    { $set: dotize(update) },\n     {\n       // False to return the updated document instead of the original\n       // document.\n@@ -2576,26 +2579,22 @@ export async function updateUserNotificationSettings(\n   return result.value;\n }\n \n-export type UpdateUserMediaSettingsInput = Partial<\n-  GQLUpdateUserMediaSettingsInput\n->;\n+export type UpdateUserMediaSettingsInput = Partial<GQLUserMediaSettings>;\n \n export async function updateUserMediaSettings(\n   mongo: Db,\n   tenantID: string,\n   id: string,\n-  settings: UpdateUserMediaSettingsInput\n+  mediaSettings: UpdateUserMediaSettingsInput\n ) {\n+  const update: DeepPartial<User> = { mediaSettings };\n+\n   const result = await collection(mongo).findOneAndUpdate(\n     {\n       id,\n       tenantID,\n     },\n-    {\n-      $set: dotize({\n-        mediaSettings: settings,\n-      }),\n-    },\n+    { $set: dotize(update) },\n     {\n       // False to return the updated document instead of the original\n       // document."
    },
    {
      "sha": "23d491431a818c9c0a8b5f89938fdc4cb702975e",
      "filename": "src/core/server/services/comments/media.ts",
      "status": "modified",
      "additions": 28,
      "deletions": 1,
      "changes": 29,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/services/comments/media.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/services/comments/media.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/comments/media.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -1,6 +1,8 @@\n import { findMediaLinks } from \"coral-common/helpers/findMediaLinks\";\n+import validateImagePathname from \"coral-common/helpers/validateImagePathname\";\n import { WrappedInternalError } from \"coral-server/errors\";\n import {\n+  ExternalMedia,\n   GiphyMedia,\n   TwitterMedia,\n   YouTubeMedia,\n@@ -50,6 +52,27 @@ async function attachGiphyMedia(\n   }\n }\n \n+async function attachExternalMedia(\n+  url: string,\n+  inputWidth?: string,\n+  inputHeight?: string\n+): Promise<ExternalMedia | undefined> {\n+  const parsed = new URL(url);\n+  if (!validateImagePathname(parsed.pathname)) {\n+    throw new Error(\"cannot attach external image\");\n+  }\n+\n+  const width = inputWidth ? parseInt(inputWidth, 10) : undefined;\n+  const height = inputHeight ? parseInt(inputHeight, 10) : undefined;\n+\n+  return {\n+    type: \"external\",\n+    url,\n+    width,\n+    height,\n+  };\n+}\n+\n async function attachOEmbedMedia(\n   type: \"twitter\" | \"youtube\",\n   url: string,\n@@ -107,9 +130,11 @@ async function attachOEmbedMedia(\n }\n \n export interface CreateCommentMediaInput {\n-  type: \"giphy\" | \"twitter\" | \"youtube\";\n+  type: \"giphy\" | \"twitter\" | \"youtube\" | \"external\";\n   url: string;\n   id?: string;\n+  width?: string;\n+  height?: string;\n }\n \n export async function attachMedia(\n@@ -130,6 +155,8 @@ export async function attachMedia(\n       }\n \n       return attachGiphyMedia(tenant, input.id, input.url);\n+    case \"external\":\n+      return attachExternalMedia(input.url, input.width, input.height);\n     case \"twitter\":\n     case \"youtube\":\n       return attachOEmbedMedia(input.type, input.url, body);"
    },
    {
      "sha": "9a4c8f402f0359f544b9ca95bb18f701856b2548",
      "filename": "src/core/server/services/comments/pipeline/phases/commentLength.ts",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/services/comments/pipeline/phases/commentLength.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/services/comments/pipeline/phases/commentLength.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/comments/pipeline/phases/commentLength.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -32,7 +32,14 @@ export const commentLength: IntermediateModerationPhase = ({\n   }\n \n   // If the Giphy support is enabled, we don't need to check for a minimum!\n-  if (!supportsMediaType(tenant, \"giphy\") || !media || media.type !== \"giphy\") {\n+  if (\n+    !(\n+      supportsMediaType(tenant, \"giphy\") ||\n+      supportsMediaType(tenant, \"external\")\n+    ) ||\n+    !media ||\n+    (media.type !== \"giphy\" && media.type !== \"external\")\n+  ) {\n     if (length < min) {\n       throw new CommentBodyTooShortError(min);\n     }"
    },
    {
      "sha": "8936d71d08cf9a2ff1670624fc3400bfa31bcabb",
      "filename": "src/core/server/stacks/editComment.ts",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/stacks/editComment.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/core/server/stacks/editComment.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/stacks/editComment.ts?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -14,6 +14,7 @@ import { createCommentModerationAction } from \"coral-server/models/action/modera\n import {\n   editComment,\n   EditCommentInput,\n+  ExternalMedia,\n   getLatestRevision,\n   GiphyMedia,\n   retrieveComment,\n@@ -113,7 +114,12 @@ export default async function edit(\n \n   const lastRevision = getLatestRevision(originalStaleComment);\n \n-  let media: GiphyMedia | TwitterMedia | YouTubeMedia | undefined;\n+  let media:\n+    | GiphyMedia\n+    | TwitterMedia\n+    | YouTubeMedia\n+    | ExternalMedia\n+    | undefined;\n \n   // attach a new media object from input IF:\n   //   input.media is defined AND EITHER:"
    },
    {
      "sha": "54b82cebd969a52e8405f3dc4378209d973df42e",
      "filename": "src/locales/en-US/admin.ftl",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/locales/en-US/admin.ftl",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/locales/en-US/admin.ftl",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/locales/en-US/admin.ftl?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -405,6 +405,7 @@ configure-general-embedLinks-desc = Allow commenters to add a YouTube video, Twe\n configure-general-embedLinks-enableTwitterEmbeds = Allow Twitter embeds\n configure-general-embedLinks-enableYouTubeEmbeds = Allow YouTube embeds\n configure-general-embedLinks-enableGiphyEmbeds = Allow GIFs from GIPHY\n+configure-general-embedLinks-enableExternalEmbeds = Enable external media\n \n configure-general-embedLinks-On = Yes\n configure-general-embedLinks-Off = No"
    },
    {
      "sha": "8931179d6806d65cb41ffcb2d9a860a510e117cf",
      "filename": "src/locales/en-US/framework.ftl",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/locales/en-US/framework.ftl",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/locales/en-US/framework.ftl",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/locales/en-US/framework.ftl?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -34,6 +34,7 @@ framework-validation-notAWholeNumberGreaterThanOrEqual = Please enter a whole nu\n framework-validation-usernamesDoNotMatch = Usernames do not match. Try again.\n framework-validation-deleteConfirmationInvalid = Incorrect confirmation. Try again.\n framework-validation-invalidWebhookEndpointEventSelection = Select at least one event to receive.\n+framework-validation-media-url-invalid = Please enter a valid image URL (.png, .jpg, or .gif)\n \n framework-timeago-just-now = Just now\n "
    },
    {
      "sha": "11b8dd6cc1d0888a88762c9c91326804440a014d",
      "filename": "src/locales/en-US/stream.ftl",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/coralproject/talk/blob/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/locales/en-US/stream.ftl",
      "raw_url": "https://github.com/coralproject/talk/raw/ce077c2d919bc5555a9f92c7bc0c9c5b0c360273/src/locales/en-US/stream.ftl",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/locales/en-US/stream.ftl?ref=ce077c2d919bc5555a9f92c7bc0c9c5b0c360273",
      "patch": "@@ -86,6 +86,9 @@ comments-postComment-gifSearch-no-results = No results found for {$query}\n comments-postComment-gifSearch-powered-by-giphy =\n   .alt = Powered by giphy\n \n+comments-postComment-pasteImage = Paste image URL\n+comments-postComment-insertImage = Insert\n+\n comments-postComment-confirmMedia-youtube = Add this YouTube video to the end of your comment?\n comments-postComment-confirmMedia-twitter = Add this Tweet to the end of your comment?\n comments-postComment-confirmMedia-cancel = Cancel\n@@ -329,6 +332,10 @@ comments-embedLinks-hide-youtube = Hide video\n comments-embedLinks-show-twitter = Show Tweet\n comments-embedLinks-hide-twitter = Hide Tweet\n \n+comments-embedLinks-show-external = Show image\n+comments-embedLinks-hide-external = Hide image\n+\n+\n ### Featured Comments\n comments-featured-gotoConversation = Go to conversation\n comments-featured-replies = Replies"
    }
  ]
}
