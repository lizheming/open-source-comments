{
  "sha": "4733ad8eb16b5454eed13ba1f3d7f052a248e7fa",
  "node_id": "C_kwDOBtgov9oAKDQ3MzNhZDhlYjE2YjU0NTRlZWQxM2JhMWYzZDdmMDUyYTI0OGU3ZmE",
  "commit": {
    "author": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2022-09-21T20:57:28Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2022-09-21T20:57:41Z"
    },
    "message": "Revert \"fix iframe resize on auth dropdown opening\"\n\nThis reverts commit 8e96aa26b488f33a46c7f1775135d653997b1cfb.",
    "tree": {
      "sha": "1d94aea7aed2e05c1b69de6b5936d6152673d0c3",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/1d94aea7aed2e05c1b69de6b5936d6152673d0c3"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/4733ad8eb16b5454eed13ba1f3d7f052a248e7fa",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/4733ad8eb16b5454eed13ba1f3d7f052a248e7fa",
  "html_url": "https://github.com/umputun/remark42/commit/4733ad8eb16b5454eed13ba1f3d7f052a248e7fa",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/4733ad8eb16b5454eed13ba1f3d7f052a248e7fa/comments",
  "author": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8e96aa26b488f33a46c7f1775135d653997b1cfb",
      "url": "https://api.github.com/repos/umputun/remark42/commits/8e96aa26b488f33a46c7f1775135d653997b1cfb",
      "html_url": "https://github.com/umputun/remark42/commit/8e96aa26b488f33a46c7f1775135d653997b1cfb"
    }
  ],
  "stats": {
    "total": 102,
    "additions": 44,
    "deletions": 58
  },
  "files": [
    {
      "sha": "dadb1b0c5a32cecd7812429de972fe453594f5b1",
      "filename": "frontend/apps/remark42/app/components/auth/auth.hooks.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/4733ad8eb16b5454eed13ba1f3d7f052a248e7fa/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fauth%2Fauth.hooks.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/4733ad8eb16b5454eed13ba1f3d7f052a248e7fa/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fauth%2Fauth.hooks.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fauth%2Fauth.hooks.ts?ref=4733ad8eb16b5454eed13ba1f3d7f052a248e7fa",
      "patch": "@@ -70,7 +70,9 @@ export function useDropdown(disableClosing?: boolean) {\n   useEffect(() => {\n     const dropdownElement = rootRef.current;\n \n-    if (!dropdownElement) {\n+    if (!dropdownElement || !showDropdown) {\n+      handleChangeIframeSize(document.body);\n+\n       return;\n     }\n "
    },
    {
      "sha": "43e2091d88a2b2a47e507cf0bd1223cec041d45d",
      "filename": "frontend/apps/remark42/app/components/root/root.tsx",
      "status": "modified",
      "additions": 41,
      "deletions": 54,
      "changes": 95,
      "blob_url": "https://github.com/umputun/remark42/blob/4733ad8eb16b5454eed13ba1f3d7f052a248e7fa/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Froot%2Froot.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/4733ad8eb16b5454eed13ba1f3d7f052a248e7fa/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Froot%2Froot.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Froot%2Froot.tsx?ref=4733ad8eb16b5454eed13ba1f3d7f052a248e7fa",
      "patch": "@@ -122,6 +122,7 @@ export class Root extends Component<Props, State> {\n     Promise.all([userloading, this.props.fetchComments()]).finally(() => {\n       setTimeout(this.checkUrlHash);\n       window.addEventListener('hashchange', this.checkUrlHash);\n+      postMessageToParent({ height: document.body.offsetHeight });\n     });\n \n     window.addEventListener('message', this.onMessage);\n@@ -273,12 +274,33 @@ export class Root extends Component<Props, State> {\n               <div className={clsx('sort-picker', styles.sortPicker)}>\n                 <SortPicker />\n               </div>\n-              <Comments\n-                commentsShown={commentsShown}\n-                isLoading={props.isCommentsLoading}\n-                topComments={props.topComments}\n-                showMore={this.showMore}\n-              />\n+              {!!this.props.topComments.length && !props.isCommentsLoading && (\n+                <div className=\"root__threads\" role=\"list\">\n+                  {(IS_MOBILE && commentsShown < this.props.topComments.length\n+                    ? this.props.topComments.slice(0, commentsShown)\n+                    : this.props.topComments\n+                  ).map((id) => (\n+                    <Thread\n+                      key={`thread-${id}`}\n+                      id={id}\n+                      mix=\"root__thread\"\n+                      level={0}\n+                      getPreview={this.props.getPreview}\n+                    />\n+                  ))}\n+\n+                  {commentsShown < this.props.topComments.length && IS_MOBILE && (\n+                    <Button className={clsx('more-comments', styles.moreComments)} onClick={this.showMore}>\n+                      <FormattedMessage id=\"root.show-more\" defaultMessage=\"Show more\" />\n+                    </Button>\n+                  )}\n+                </div>\n+              )}\n+              {props.isCommentsLoading && (\n+                <div className=\"root__threads\" role=\"list\">\n+                  <Preloader className=\"root__preloader\" />\n+                </div>\n+              )}\n             </>\n           )}\n         </div>\n@@ -287,17 +309,21 @@ export class Root extends Component<Props, State> {\n   }\n }\n \n+const CopyrightLink = (title: string) => (\n+  <a class=\"root__copyright-link\" href=\"https://remark42.com/\">\n+    {title}\n+  </a>\n+);\n+\n function updateIframeHeight() {\n   postMessageToParent({ height: document.body.offsetHeight });\n }\n \n-interface CommentsProps {\n-  isLoading: boolean;\n-  topComments: string[];\n-  commentsShown: number;\n-  showMore(): void;\n-}\n-function Comments({ isLoading, topComments, commentsShown, showMore }: CommentsProps) {\n+/** Root component connected to redux */\n+export function ConnectedRoot() {\n+  const intl = useIntl();\n+  const props = useSelector(mapStateToProps);\n+  const actions = useActions(boundActions);\n   const rootRef = useRef<HTMLDivElement>(null);\n \n   useEffect(() => {\n@@ -310,55 +336,16 @@ function Comments({ isLoading, topComments, commentsShown, showMore }: CommentsP\n       updateIframeHeight();\n \n       // a hacky way to force iframe height update when new image is rendered and loaded\n-      rootRef.current?.querySelectorAll('img').forEach((img) => {\n-        img.addEventListener('load', updateIframeHeight);\n-      });\n+      rootRef.current?.querySelectorAll('img').forEach((img) => img.addEventListener('load', updateIframeHeight));\n     });\n \n     observer.observe(rootRef.current, { attributes: true, childList: true, subtree: true });\n \n     return () => observer.disconnect();\n   }, []);\n \n-  const renderComments =\n-    IS_MOBILE && commentsShown < topComments.length ? topComments.slice(0, commentsShown) : topComments;\n-  const isShowMoreButtonVisible = IS_MOBILE && commentsShown < topComments.length;\n-\n-  return (\n-    <div className=\"root__threads\" role=\"list\" ref={rootRef}>\n-      {isLoading ? (\n-        <Preloader className=\"root__preloader\" />\n-      ) : (\n-        <>\n-          {topComments.length > 0 &&\n-            renderComments.map((id) => (\n-              <Thread key={`thread-${id}`} id={id} mix=\"root__thread\" level={0} getPreview={getPreview} />\n-            ))}\n-          {isShowMoreButtonVisible && (\n-            <Button className={clsx('more-comments', styles.moreComments)} onClick={showMore}>\n-              <FormattedMessage id=\"root.show-more\" defaultMessage=\"Show more\" />\n-            </Button>\n-          )}\n-        </>\n-      )}\n-    </div>\n-  );\n-}\n-\n-const CopyrightLink = (title: string) => (\n-  <a class=\"root__copyright-link\" href=\"https://remark42.com/\">\n-    {title}\n-  </a>\n-);\n-\n-/** Root component connected to redux */\n-export function ConnectedRoot() {\n-  const intl = useIntl();\n-  const props = useSelector(mapStateToProps);\n-  const actions = useActions(boundActions);\n-\n   return (\n-    <div className={clsx(b('root', {}, { theme: props.theme }), props.theme)}>\n+    <div className={clsx(b('root', {}, { theme: props.theme }), props.theme)} ref={rootRef}>\n       <Root {...props} {...actions} intl={intl} />\n       <p className=\"root__copyright\" role=\"contentinfo\">\n         <FormattedMessage"
    },
    {
      "sha": "1967dd9cd6bde8d767ad102a52e7e800319798e1",
      "filename": "frontend/apps/remark42/webpack.config.js",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/4733ad8eb16b5454eed13ba1f3d7f052a248e7fa/frontend%2Fapps%2Fremark42%2Fwebpack.config.js",
      "raw_url": "https://github.com/umputun/remark42/raw/4733ad8eb16b5454eed13ba1f3d7f052a248e7fa/frontend%2Fapps%2Fremark42%2Fwebpack.config.js",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fwebpack.config.js?ref=4733ad8eb16b5454eed13ba1f3d7f052a248e7fa",
      "patch": "@@ -223,9 +223,6 @@ module.exports = (_, { mode, analyze }) => {\n       { path: '/api', target: REMARK_API_BASE_URL, changeOrigin: true },\n       { path: '/auth', target: REMARK_API_BASE_URL, changeOrigin: true },\n     ],\n-    client: {\n-      overlay: false,\n-    },\n   };\n \n   const plugins = ["
    }
  ]
}
