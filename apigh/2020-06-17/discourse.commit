{
  "sha": "9da3a7f436b4c6b64e65a425ffcc27964019241c",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODo5ZGEzYTdmNDM2YjRjNmI2NGU2NWE0MjVmZmNjMjc5NjQwMTkyNDFj",
  "commit": {
    "author": {
      "name": "Joffrey JAFFEUX",
      "email": "j.jaffeux@gmail.com",
      "date": "2020-06-17T10:42:20Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-06-17T10:42:20Z"
    },
    "message": "FEATURE: allows published pages to be public (#10053)",
    "tree": {
      "sha": "d24206e6764cd3d1109f08e77348a2b3a462db8d",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/d24206e6764cd3d1109f08e77348a2b3a462db8d"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/9da3a7f436b4c6b64e65a425ffcc27964019241c",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe6fOMCRBK7hj4Ov3rIwAAdHIIAAnlJJJypk91dJRIQV9W+nUf\nUFx1A/K8QIHgH9TJ/jch/Xackz4g7gdEQRseScB8QLQHYgyfRacT625julY+BXQa\nx0NL90jG/aoim3TFrBbfeYwMbl35jqSajAqaikO0xSAfOjLqjy5uTrHnQy4A/hVt\nMkonzwyTNIqRw6PT91MLXaP23ciZUyegIrFQcnItCijoFMEmzS34bpl01nJVPkX8\n0gOPDTKptYeYU4Re36I2gU0Bf1eJDdQgXx+Wi+es87C7QxNLCTjM7+fXl3WqrsKM\n43EAf7B355j/htYFRdTH39C3JpbLK0SRUD32avyHzZJ8kb5iCijTmaGDKzeX5zQ=\n=9/ej\n-----END PGP SIGNATURE-----\n",
      "payload": "tree d24206e6764cd3d1109f08e77348a2b3a462db8d\nparent 7d289a4f3e9531a0c7e458a52af85d0ae5affab9\nauthor Joffrey JAFFEUX <j.jaffeux@gmail.com> 1592390540 +0200\ncommitter GitHub <noreply@github.com> 1592390540 +0200\n\nFEATURE: allows published pages to be public (#10053)\n\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/9da3a7f436b4c6b64e65a425ffcc27964019241c",
  "html_url": "https://github.com/discourse/discourse/commit/9da3a7f436b4c6b64e65a425ffcc27964019241c",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/9da3a7f436b4c6b64e65a425ffcc27964019241c/comments",
  "author": {
    "login": "jjaffeux",
    "id": 339945,
    "node_id": "MDQ6VXNlcjMzOTk0NQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/339945?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jjaffeux",
    "html_url": "https://github.com/jjaffeux",
    "followers_url": "https://api.github.com/users/jjaffeux/followers",
    "following_url": "https://api.github.com/users/jjaffeux/following{/other_user}",
    "gists_url": "https://api.github.com/users/jjaffeux/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jjaffeux/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jjaffeux/subscriptions",
    "organizations_url": "https://api.github.com/users/jjaffeux/orgs",
    "repos_url": "https://api.github.com/users/jjaffeux/repos",
    "events_url": "https://api.github.com/users/jjaffeux/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jjaffeux/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7d289a4f3e9531a0c7e458a52af85d0ae5affab9",
      "url": "https://api.github.com/repos/discourse/discourse/commits/7d289a4f3e9531a0c7e458a52af85d0ae5affab9",
      "html_url": "https://github.com/discourse/discourse/commit/7d289a4f3e9531a0c7e458a52af85d0ae5affab9"
    }
  ],
  "stats": {
    "total": 226,
    "additions": 196,
    "deletions": 30
  },
  "files": [
    {
      "sha": "58059d027c1a560852cd23b290292e21ceb0bea0",
      "filename": "app/assets/javascripts/discourse/app/controllers/publish-page.js",
      "status": "modified",
      "additions": 12,
      "deletions": 5,
      "changes": 17,
      "blob_url": "https://github.com/discourse/discourse/blob/9da3a7f436b4c6b64e65a425ffcc27964019241c/app/assets/javascripts/discourse/app/controllers/publish-page.js",
      "raw_url": "https://github.com/discourse/discourse/raw/9da3a7f436b4c6b64e65a425ffcc27964019241c/app/assets/javascripts/discourse/app/controllers/publish-page.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/controllers/publish-page.js?ref=9da3a7f436b4c6b64e65a425ffcc27964019241c",
      "patch": "@@ -35,6 +35,7 @@ export default Controller.extend(ModalFunctionality, StateHelpers, {\n       this.state === States.existing\n     );\n   }),\n+\n   showUnpublish: computed(\"state\", function() {\n     return this.state === States.existing || this.state === States.unpublishing;\n   }),\n@@ -95,7 +96,7 @@ export default Controller.extend(ModalFunctionality, StateHelpers, {\n     this.set(\"state\", States.saving);\n \n     return this.publishedPage\n-      .update({ slug: this.publishedPage.slug })\n+      .update(this.publishedPage.getProperties(\"slug\", \"public\"))\n       .then(() => {\n         this.set(\"state\", States.existing);\n         this.model.set(\"publishedPage\", this.publishedPage);\n@@ -110,11 +111,17 @@ export default Controller.extend(ModalFunctionality, StateHelpers, {\n   startNew() {\n     this.setProperties({\n       state: States.new,\n-      publishedPage: this.store.createRecord(\"published_page\", {\n-        id: this.model.id,\n-        slug: this.model.slug\n-      })\n+      publishedPage: this.store.createRecord(\n+        \"published_page\",\n+        this.model.getProperties(\"id\", \"slug\", \"public\")\n+      )\n     });\n     this.checkSlug();\n+  },\n+\n+  @action\n+  onChangePublic(isPublic) {\n+    this.publishedPage.set(\"public\", isPublic);\n+    this.publish();\n   }\n });"
    },
    {
      "sha": "9cd9a5608799ab379cf014382c3e637e937cad72",
      "filename": "app/assets/javascripts/discourse/app/templates/modal/publish-page.hbs",
      "status": "modified",
      "additions": 27,
      "deletions": 5,
      "changes": 32,
      "blob_url": "https://github.com/discourse/discourse/blob/9da3a7f436b4c6b64e65a425ffcc27964019241c/app/assets/javascripts/discourse/app/templates/modal/publish-page.hbs",
      "raw_url": "https://github.com/discourse/discourse/raw/9da3a7f436b4c6b64e65a425ffcc27964019241c/app/assets/javascripts/discourse/app/templates/modal/publish-page.hbs",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/templates/modal/publish-page.hbs?ref=9da3a7f436b4c6b64e65a425ffcc27964019241c",
      "patch": "@@ -6,8 +6,29 @@\n       <p class=\"publish-description\">{{i18n \"topic.publish_page.description\"}}</p>\n \n       <form>\n-        <label>{{i18n \"topic.publish_page.slug\"}}</label>\n-        {{text-field value=publishedPage.slug onChange=(action \"checkSlug\") onChangeImmediate=(action \"startCheckSlug\") disabled=existing class=\"publish-slug\"}}\n+        <div class=\"controls\">\n+          <label>{{i18n \"topic.publish_page.slug\"}}</label>\n+          {{text-field\n+            value=publishedPage.slug\n+            onChange=(action \"checkSlug\")\n+            onChangeImmediate=(action \"startCheckSlug\")\n+            disabled=existing\n+            class=\"publish-slug\"\n+          }}\n+        </div>\n+\n+        <div class=\"controls\">\n+          <label>{{i18n \"topic.publish_page.public\"}}</label>\n+\n+          <p class=\"description\">\n+            {{input\n+              type=\"checkbox\"\n+              checked=publishedPage.public\n+              click=(action \"onChangePublic\" value=\"target.checked\")\n+            }}\n+            {{i18n \"topic.publish_page.public_description\"}}\n+          </p>\n+        </div>\n       </form>\n \n       <div class=\"publish-url\">\n@@ -40,14 +61,15 @@\n \n <div class=\"modal-footer\">\n   {{#if showUnpublish}}\n-    {{d-button icon=\"times\" label=\"close\" action=(action \"closeModal\")}}\n-\n     {{d-button\n       label=\"topic.publish_page.unpublish\"\n       icon=\"trash-alt\"\n       class=\"btn-danger\"\n       isLoading=unpublishing\n-      action=(action \"unpublish\") }}\n+      action=(action \"unpublish\")\n+    }}\n+\n+    {{d-button class=\"close-publish-page\" icon=\"times\" label=\"close\" action=(action \"closeModal\")}}\n   {{else if unpublished}}\n     {{d-button label=\"topic.publish_page.publishing_settings\" action=(action \"startNew\")}}\n   {{else}}"
    },
    {
      "sha": "33f11793a80edbcb4da518c96504507806f6ccf7",
      "filename": "app/assets/javascripts/discourse/app/templates/topic.hbs",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/discourse/discourse/blob/9da3a7f436b4c6b64e65a425ffcc27964019241c/app/assets/javascripts/discourse/app/templates/topic.hbs",
      "raw_url": "https://github.com/discourse/discourse/raw/9da3a7f436b4c6b64e65a425ffcc27964019241c/app/assets/javascripts/discourse/app/templates/topic.hbs",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/templates/topic.hbs?ref=9da3a7f436b4c6b64e65a425ffcc27964019241c",
      "patch": "@@ -90,6 +90,9 @@\n       {{#if model.publishedPage}}\n         <div class=\"published-page-notice\">\n           <div class=\"details\">\n+            {{#if model.publishedPage.public}}\n+              <span class=\"is-public\">{{i18n \"topic.publish_page.public\"}}</span>\n+            {{/if}}\n             {{i18n \"topic.publish_page.topic_published\"}}\n             <div>\n               <a href={{model.publishedPage.url}} target=\"_blank\" rel=\"noopener noreferrer\">{{model.publishedPage.url}}</a>"
    },
    {
      "sha": "4e1a7946a15928ba06b13ad159c025cf6c887b19",
      "filename": "app/assets/stylesheets/common/base/modal.scss",
      "status": "modified",
      "additions": 35,
      "deletions": 14,
      "changes": 49,
      "blob_url": "https://github.com/discourse/discourse/blob/9da3a7f436b4c6b64e65a425ffcc27964019241c/app/assets/stylesheets/common/base/modal.scss",
      "raw_url": "https://github.com/discourse/discourse/raw/9da3a7f436b4c6b64e65a425ffcc27964019241c/app/assets/stylesheets/common/base/modal.scss",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/stylesheets/common/base/modal.scss?ref=9da3a7f436b4c6b64e65a425ffcc27964019241c",
      "patch": "@@ -689,24 +689,45 @@\n   }\n }\n \n-.publish-page-modal .modal-body {\n-  p.publish-description {\n-    margin-top: 0;\n-  }\n-  input.publish-slug {\n-    width: 100%;\n-  }\n+.publish-page-modal {\n+  .modal-body {\n+    p.publish-description {\n+      margin-top: 0;\n+    }\n+    input.publish-slug {\n+      width: 100%;\n+    }\n \n-  .publish-url {\n-    margin-bottom: 1em;\n-    .example-url,\n-    .invalid-slug {\n-      font-weight: bold;\n+    .publish-url {\n+      margin-bottom: 1em;\n+      .example-url,\n+      .invalid-slug {\n+        font-weight: bold;\n+      }\n+    }\n+\n+    .publish-slug:disabled {\n+      cursor: not-allowed;\n+    }\n+\n+    .controls {\n+      margin-bottom: 1em;\n+\n+      .description {\n+        margin: 0;\n+        display: flex;\n+        align-items: center;\n+      }\n     }\n   }\n \n-  .publish-slug:disabled {\n-    cursor: not-allowed;\n+  .modal-footer {\n+    display: flex;\n+\n+    .close-publish-page {\n+      margin-left: auto;\n+      margin-right: 0;\n+    }\n   }\n }\n "
    },
    {
      "sha": "eee0faf51bed536ff76c74bf6171570922ab3c1f",
      "filename": "app/assets/stylesheets/common/base/topic.scss",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/discourse/discourse/blob/9da3a7f436b4c6b64e65a425ffcc27964019241c/app/assets/stylesheets/common/base/topic.scss",
      "raw_url": "https://github.com/discourse/discourse/raw/9da3a7f436b4c6b64e65a425ffcc27964019241c/app/assets/stylesheets/common/base/topic.scss",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/stylesheets/common/base/topic.scss?ref=9da3a7f436b4c6b64e65a425ffcc27964019241c",
      "patch": "@@ -305,4 +305,13 @@ a.topic-featured-link {\n       2}\n   );\n   align-items: center;\n+\n+  .is-public {\n+    padding: 0.25em 0.5em;\n+    font-size: $font-down-2;\n+    background: $tertiary;\n+    color: $secondary;\n+    border-radius: 3px;\n+    text-transform: lowercase;\n+  }\n }"
    },
    {
      "sha": "f61a0b00b2be4a7bb2ef5497f0029d5aaa5fc6db",
      "filename": "app/controllers/published_pages_controller.rb",
      "status": "modified",
      "additions": 35,
      "deletions": 2,
      "changes": 37,
      "blob_url": "https://github.com/discourse/discourse/blob/9da3a7f436b4c6b64e65a425ffcc27964019241c/app/controllers/published_pages_controller.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/9da3a7f436b4c6b64e65a425ffcc27964019241c/app/controllers/published_pages_controller.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/controllers/published_pages_controller.rb?ref=9da3a7f436b4c6b64e65a425ffcc27964019241c",
      "patch": "@@ -5,14 +5,30 @@ class PublishedPagesController < ApplicationController\n   skip_before_action :preload_json\n   skip_before_action :check_xhr, :verify_authenticity_token, only: [:show]\n   before_action :ensure_publish_enabled\n+  before_action :redirect_to_login_if_required, except: [:show]\n \n   def show\n     params.require(:slug)\n \n     pp = PublishedPage.find_by(slug: params[:slug])\n     raise Discourse::NotFound unless pp\n \n-    guardian.ensure_can_see!(pp.topic)\n+    return if enforce_login_required!\n+\n+    if !pp.public\n+      begin\n+        guardian.ensure_can_see!(pp.topic)\n+      rescue Discourse::InvalidAccess => e\n+        return rescue_discourse_actions(\n+          :invalid_access,\n+          403,\n+          include_ember: false,\n+          custom_message: e.custom_message,\n+          group: e.group\n+        )\n+      end\n+    end\n+\n     @topic = pp.topic\n     @canonical_url = @topic.url\n \n@@ -37,7 +53,15 @@ def details\n   end\n \n   def upsert\n-    result, pp = PublishedPage.publish!(current_user, fetch_topic, params[:published_page][:slug].strip)\n+    pp_params = params.require(:published_page)\n+\n+    result, pp = PublishedPage.publish!(\n+      current_user,\n+      fetch_topic,\n+      pp_params[:slug].strip,\n+      pp_params.permit(:public)\n+    )\n+\n     json_result(pp, serializer: PublishedPageSerializer) { result }\n   end\n \n@@ -68,4 +92,13 @@ def ensure_publish_enabled\n     raise Discourse::NotFound unless SiteSetting.enable_page_publishing?\n   end\n \n+  def enforce_login_required!\n+    if SiteSetting.login_required? &&\n+       !current_user &&\n+       !SiteSetting.show_published_pages_login_required? &&\n+      redirect_to_login\n+      true\n+    end\n+  end\n+\n end"
    },
    {
      "sha": "5322efaea76de0b88b84be508e137ef9ceacdd2e",
      "filename": "app/models/published_page.rb",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/9da3a7f436b4c6b64e65a425ffcc27964019241c/app/models/published_page.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/9da3a7f436b4c6b64e65a425ffcc27964019241c/app/models/published_page.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/published_page.rb?ref=9da3a7f436b4c6b64e65a425ffcc27964019241c",
      "patch": "@@ -23,12 +23,13 @@ def url\n     \"#{Discourse.base_url}#{path}\"\n   end\n \n-  def self.publish!(publisher, topic, slug)\n+  def self.publish!(publisher, topic, slug, options = {})\n     pp = nil\n \n     transaction do\n       pp = find_or_initialize_by(topic: topic)\n       pp.slug = slug.strip\n+      pp.public = options[:public] || false\n \n       if pp.save\n         StaffActionLogger.new(publisher).log_published_page(topic.id, slug)\n@@ -56,6 +57,7 @@ def self.unpublish!(publisher, topic)\n #  slug       :string           not null\n #  created_at :datetime         not null\n #  updated_at :datetime         not null\n+#  public     :boolean          default(FALSE), not null\n #\n # Indexes\n #"
    },
    {
      "sha": "c0b209ae0fdfdb89ccab65fb2df4feb428e69179",
      "filename": "app/serializers/published_page_serializer.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/9da3a7f436b4c6b64e65a425ffcc27964019241c/app/serializers/published_page_serializer.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/9da3a7f436b4c6b64e65a425ffcc27964019241c/app/serializers/published_page_serializer.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/serializers/published_page_serializer.rb?ref=9da3a7f436b4c6b64e65a425ffcc27964019241c",
      "patch": "@@ -1,7 +1,7 @@\n # frozen_string_literal: true\n \n class PublishedPageSerializer < ApplicationSerializer\n-  attributes :id, :slug\n+  attributes :id, :slug, :public\n \n   def id\n     object.topic_id"
    },
    {
      "sha": "7e368a8d456b8a82b3c5f4fe3e524f3ef0ae351a",
      "filename": "config/locales/client.en.yml",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/discourse/discourse/blob/9da3a7f436b4c6b64e65a425ffcc27964019241c/config/locales/client.en.yml",
      "raw_url": "https://github.com/discourse/discourse/raw/9da3a7f436b4c6b64e65a425ffcc27964019241c/config/locales/client.en.yml",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/config/locales/client.en.yml?ref=9da3a7f436b4c6b64e65a425ffcc27964019241c",
      "patch": "@@ -2513,11 +2513,14 @@ en:\n         publish: \"Publish\"\n         description: \"When a topic is published as a page, its URL can be shared and it will displayed with custom styling.\"\n         slug: \"Slug\"\n+        public: \"Public\"\n+        public_description: \"People can see the page even if the associated topic is private.\"\n         publish_url: \"Your page has been published at:\"\n         topic_published: \"Your topic has been published at:\"\n         preview_url: \"Your page will be published at:\"\n         invalid_slug: \"Sorry, you can't publish this page.\"\n         unpublish: \"Unpublish\"\n+        update: \"Update\"\n         unpublished: \"Your page has been unpublished and is no longer accessible.\"\n         publishing_settings: \"Publishing Settings\"\n "
    },
    {
      "sha": "c839d7b8c8e0903a5a9fb1bb16fb1073072e2d79",
      "filename": "config/locales/server.en.yml",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/discourse/discourse/blob/9da3a7f436b4c6b64e65a425ffcc27964019241c/config/locales/server.en.yml",
      "raw_url": "https://github.com/discourse/discourse/raw/9da3a7f436b4c6b64e65a425ffcc27964019241c/config/locales/server.en.yml",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/config/locales/server.en.yml?ref=9da3a7f436b4c6b64e65a425ffcc27964019241c",
      "patch": "@@ -2131,6 +2131,7 @@ en:\n     returning_user_notice_tl: \"Minimum trust level required to see returning user post notices.\"\n     returning_users_days: \"How many days should pass before a user is considered to be returning.\"\n     enable_page_publishing: \"Allow staff members to publish topics to new URLs with their own styling.\"\n+    show_published_pages_login_required: \"Anonymous users can see published pages, even when login is required.\"\n \n     default_email_digest_frequency: \"How often users receive summary emails by default.\"\n     default_include_tl0_in_digests: \"Include posts from new users in summary emails by default. Users can change this in their preferences.\""
    },
    {
      "sha": "2948b8793f2735b599e12201fbc94bfe205547af",
      "filename": "config/site_settings.yml",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/9da3a7f436b4c6b64e65a425ffcc27964019241c/config/site_settings.yml",
      "raw_url": "https://github.com/discourse/discourse/raw/9da3a7f436b4c6b64e65a425ffcc27964019241c/config/site_settings.yml",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/config/site_settings.yml?ref=9da3a7f436b4c6b64e65a425ffcc27964019241c",
      "patch": "@@ -947,6 +947,8 @@ posting:\n     max: 36500\n   enable_page_publishing:\n     default: false\n+  show_published_pages_login_required:\n+    default: false\n \n email:\n   email_time_window_mins:"
    },
    {
      "sha": "d02edd2bd9d4e268846b497d0563601f72f3f96d",
      "filename": "db/migrate/20201006172701_add_public_field_to_published_pages.rb",
      "status": "added",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/discourse/discourse/blob/9da3a7f436b4c6b64e65a425ffcc27964019241c/db/migrate/20201006172701_add_public_field_to_published_pages.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/9da3a7f436b4c6b64e65a425ffcc27964019241c/db/migrate/20201006172701_add_public_field_to_published_pages.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/db/migrate/20201006172701_add_public_field_to_published_pages.rb?ref=9da3a7f436b4c6b64e65a425ffcc27964019241c",
      "patch": "@@ -0,0 +1,7 @@\n+# frozen_string_literal: true\n+\n+class AddPublicFieldToPublishedPages < ActiveRecord::Migration[6.0]\n+  def change\n+    add_column :published_pages, :public, :boolean, null: false, default: false\n+  end\n+end"
    },
    {
      "sha": "0c090ee5d97337dd5bdacd390a3a89d2521d8fbe",
      "filename": "spec/fabricators/published_page_fabricator.rb",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/discourse/discourse/blob/9da3a7f436b4c6b64e65a425ffcc27964019241c/spec/fabricators/published_page_fabricator.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/9da3a7f436b4c6b64e65a425ffcc27964019241c/spec/fabricators/published_page_fabricator.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/fabricators/published_page_fabricator.rb?ref=9da3a7f436b4c6b64e65a425ffcc27964019241c",
      "patch": "@@ -2,5 +2,6 @@\n \n Fabricator(:published_page) do\n   topic\n-  slug \"published-page-test\"\n+  slug \"published-page-test-#{SecureRandom.hex}\"\n+  public false\n end"
    },
    {
      "sha": "0662554989b4ef2350e98a87d613d753a06136a3",
      "filename": "spec/requests/published_pages_controller_spec.rb",
      "status": "modified",
      "additions": 56,
      "deletions": 1,
      "changes": 57,
      "blob_url": "https://github.com/discourse/discourse/blob/9da3a7f436b4c6b64e65a425ffcc27964019241c/spec/requests/published_pages_controller_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/9da3a7f436b4c6b64e65a425ffcc27964019241c/spec/requests/published_pages_controller_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/requests/published_pages_controller_spec.rb?ref=9da3a7f436b4c6b64e65a425ffcc27964019241c",
      "patch": "@@ -59,6 +59,15 @@\n           expect(response.status).to eq(403)\n         end\n \n+        context \"published page is public\" do\n+          fab!(:public_published_page) { Fabricate(:published_page, public: true) }\n+\n+          it \"returns 200 for a topic you can't see\" do\n+            get public_published_page.path\n+            expect(response.status).to eq(200)\n+          end\n+        end\n+\n         context \"as an admin\" do\n           before do\n             sign_in(admin)\n@@ -89,7 +98,42 @@\n \n         it \"defines correct css classes on body\" do\n           get published_page.path\n-          expect(response.body).to include(\"<body class=\\\"published-page published-page-test topic-#{published_page.topic_id} recipes uncategorized\\\">\")\n+          expect(response.body).to include(\"<body class=\\\"published-page #{published_page.slug} topic-#{published_page.topic_id} recipes uncategorized\\\">\")\n+        end\n+\n+        context \"login is required\" do\n+          before do\n+            SiteSetting.login_required = true\n+            SiteSetting.show_published_pages_login_required = false\n+          end\n+\n+          context \"a user is connected\" do\n+            before do\n+              sign_in(user)\n+            end\n+\n+            it \"returns 200\" do\n+              get published_page.path\n+              expect(response.status).to eq(200)\n+            end\n+          end\n+\n+          context \"no user connected\" do\n+            it \"redirects to login page\" do\n+              expect(get(published_page.path)).to redirect_to(\"/login\")\n+            end\n+\n+            context \"show public pages with login required is enabled\" do\n+              before do\n+                SiteSetting.show_published_pages_login_required = true\n+              end\n+\n+              it \"returns 200\" do\n+                get published_page.path\n+                expect(response.status).to eq(200)\n+              end\n+            end\n+          end\n         end\n       end\n     end\n@@ -113,6 +157,7 @@\n           expect(response).to be_successful\n           expect(response.parsed_body['published_page']).to be_present\n           expect(response.parsed_body['published_page']['slug']).to eq(\"i-hate-salt\")\n+          expect(response.parsed_body['published_page']['public']).to eq(false)\n \n           expect(PublishedPage.exists?(topic_id: response.parsed_body['published_page']['id'])).to eq(true)\n           expect(UserHistory.exists?(\n@@ -122,6 +167,16 @@\n           )).to be(true)\n         end\n \n+        it \"allows to set public field\" do\n+          put \"/pub/by-topic/#{topic.id}.json\", params: { published_page: { slug: 'i-hate-salt', public: true } }\n+          expect(response).to be_successful\n+          expect(response.parsed_body['published_page']).to be_present\n+          expect(response.parsed_body['published_page']['slug']).to eq(\"i-hate-salt\")\n+          expect(response.parsed_body['published_page']['public']).to eq(true)\n+\n+          expect(PublishedPage.exists?(topic_id: response.parsed_body['published_page']['id'])).to eq(true)\n+        end\n+\n         it \"returns an error if the slug is already taken\" do\n           PublishedPage.create!(slug: 'i-hate-salt', topic: Fabricate(:topic))\n           put \"/pub/by-topic/#{topic.id}.json\", params: { published_page: { slug: 'i-hate-salt' } }"
    }
  ]
}
