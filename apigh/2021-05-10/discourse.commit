{
  "sha": "53c06442efddb29dbf7a5cffbe984e52549f530f",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODo1M2MwNjQ0MmVmZGRiMjlkYmY3YTVjZmZiZTk4NGU1MjU0OWY1MzBm",
  "commit": {
    "author": {
      "name": "Jarek Radosz",
      "email": "jradosz@gmail.com",
      "date": "2021-05-10T11:43:13Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2021-05-10T11:43:13Z"
    },
    "message": "DEV: Clean up .gitignore (#12981)\n\n(inspired by martin-brennan's recent adventure with `tags` exclusion)\r\n\r\n**tl;dr: some of it is obsolete, some is dev-env specific and should live in *your* ~/.gitignore.**\r\n\r\n---\r\n\r\nTo enable global gitignore (`~/.gitignore`) run:\r\n```bash\r\ngit config --global core.excludesFile '~/.gitignore'\r\n```\r\n\r\nThen create that file and add your VIM/VSCode/Sublime/Emacs/Eclipse/RubyMine/JetBrains/macOS/Arch/Windows 95-specific stuff.\r\n\r\n---\r\n\r\nReasons for removal:\r\n\r\n* `bin` - never really ignored, all the files are checked in\r\n* `.DS_Store`, `._.DS_Store` - OS specific\r\n* `.sass-cache/*`, `/.bundle`, `/bundle/*`, `/cache`, `/logfile`, `!/plugins/discourse-nginx-performance-report`, `MiniProfiler/Ruby/rack-mini-profiler-2.0.1a.gem`, `config/fog_credentials.yml`, `/public/stylesheet-cache/*`, `script/download_db`, `script/refresh_db`, `config/version.rb` - no longer used?\r\n* `/log/*.log` - covered by /log\r\n* `bootsnap-load-path-cache`, `bootsnap-compile-cache` - bootsnap now keeps its ~~trash~~ temporary files in `/tmp`\r\n* `/.project`, `/.buildpath`, `/.byebug_history`, `/.idea`, `discourse.sublime-workspace`, `*~`, `*.swp`, `*.swo`, `*.swm`, `config/multisite1.yml`, `.rvmrc`, `.ruby-version`, `.ruby-gemset`, `.rbenv`, `bundler_stubs/*`, `*.db`, `*.iml`, `*.swn`, `/package-lock.json`, `.vscode`, `.envrc`, `tags` - dev-env specific, see the note at the top of the commit",
    "tree": {
      "sha": "7a9e4b77969b3da17f97e829f1e881ff5b717099",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/7a9e4b77969b3da17f97e829f1e881ff5b717099"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/53c06442efddb29dbf7a5cffbe984e52549f530f",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgmRxRCRBK7hj4Ov3rIwAAJhkIAIzUY5kdTJpxfvg6jUvc0rNq\n1yCXYD4tfk9K6Pbc42PmHU6LTEtpR1/6bmtui+au/jf0FN3AN9ctoo9y2DC1KWKi\nq5p/6TRif+5RX3rv8Ob6D58fCqAuAFKFTeVNS1OVl++37IzpZG/rjYY5VP0+cf2w\n2gyrH9JXKsqnmIlNzAZtr0PUfzwJ6sQnZlYaihgVxHUMr/xhb9oVCxPoTwKeOA5L\n9ChHxSB1ksPZRoFqkOoMYd73NDhK9LR52FGCk6UJ8GNhBdhCvcB1sf0bb8etAyQZ\n37aAZfz75qfTk6vW3nVTHfAo2S7wu2X9/yainXimCk7hL2/9gcHGr2oGypQnkVk=\n=NinI\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 7a9e4b77969b3da17f97e829f1e881ff5b717099\nparent b64f93aae1e816a94383c9fbe68474b6be2f0c91\nauthor Jarek Radosz <jradosz@gmail.com> 1620646993 +0200\ncommitter GitHub <noreply@github.com> 1620646993 +0200\n\nDEV: Clean up .gitignore (#12981)\n\n(inspired by martin-brennan's recent adventure with `tags` exclusion)\r\n\r\n**tl;dr: some of it is obsolete, some is dev-env specific and should live in *your* ~/.gitignore.**\r\n\r\n---\r\n\r\nTo enable global gitignore (`~/.gitignore`) run:\r\n```bash\r\ngit config --global core.excludesFile '~/.gitignore'\r\n```\r\n\r\nThen create that file and add your VIM/VSCode/Sublime/Emacs/Eclipse/RubyMine/JetBrains/macOS/Arch/Windows 95-specific stuff.\r\n\r\n---\r\n\r\nReasons for removal:\r\n\r\n* `bin` - never really ignored, all the files are checked in\r\n* `.DS_Store`, `._.DS_Store` - OS specific\r\n* `.sass-cache/*`, `/.bundle`, `/bundle/*`, `/cache`, `/logfile`, `!/plugins/discourse-nginx-performance-report`, `MiniProfiler/Ruby/rack-mini-profiler-2.0.1a.gem`, `config/fog_credentials.yml`, `/public/stylesheet-cache/*`, `script/download_db`, `script/refresh_db`, `config/version.rb` - no longer used?\r\n* `/log/*.log` - covered by /log\r\n* `bootsnap-load-path-cache`, `bootsnap-compile-cache` - bootsnap now keeps its ~~trash~~ temporary files in `/tmp`\r\n* `/.project`, `/.buildpath`, `/.byebug_history`, `/.idea`, `discourse.sublime-workspace`, `*~`, `*.swp`, `*.swo`, `*.swm`, `config/multisite1.yml`, `.rvmrc`, `.ruby-version`, `.ruby-gemset`, `.rbenv`, `bundler_stubs/*`, `*.db`, `*.iml`, `*.swn`, `/package-lock.json`, `.vscode`, `.envrc`, `tags` - dev-env specific, see the note at the top of the commit\r\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/53c06442efddb29dbf7a5cffbe984e52549f530f",
  "html_url": "https://github.com/discourse/discourse/commit/53c06442efddb29dbf7a5cffbe984e52549f530f",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/53c06442efddb29dbf7a5cffbe984e52549f530f/comments",
  "author": {
    "login": "CvX",
    "id": 66961,
    "node_id": "MDQ6VXNlcjY2OTYx",
    "avatar_url": "https://avatars.githubusercontent.com/u/66961?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/CvX",
    "html_url": "https://github.com/CvX",
    "followers_url": "https://api.github.com/users/CvX/followers",
    "following_url": "https://api.github.com/users/CvX/following{/other_user}",
    "gists_url": "https://api.github.com/users/CvX/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/CvX/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/CvX/subscriptions",
    "organizations_url": "https://api.github.com/users/CvX/orgs",
    "repos_url": "https://api.github.com/users/CvX/repos",
    "events_url": "https://api.github.com/users/CvX/events{/privacy}",
    "received_events_url": "https://api.github.com/users/CvX/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b64f93aae1e816a94383c9fbe68474b6be2f0c91",
      "url": "https://api.github.com/repos/discourse/discourse/commits/b64f93aae1e816a94383c9fbe68474b6be2f0c91",
      "html_url": "https://github.com/discourse/discourse/commit/b64f93aae1e816a94383c9fbe68474b6be2f0c91"
    }
  ],
  "stats": {
    "total": 189,
    "additions": 60,
    "deletions": 129
  },
  "files": [
    {
      "sha": "8aea19bec0bbb31219ec0f6456cc51aa142bf33d",
      "filename": ".gitignore",
      "status": "modified",
      "additions": 31,
      "deletions": 129,
      "changes": 160,
      "blob_url": "https://github.com/discourse/discourse/blob/53c06442efddb29dbf7a5cffbe984e52549f530f/.gitignore",
      "raw_url": "https://github.com/discourse/discourse/raw/53c06442efddb29dbf7a5cffbe984e52549f530f/.gitignore",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/.gitignore?ref=53c06442efddb29dbf7a5cffbe984e52549f530f",
      "patch": "@@ -1,33 +1,26 @@\n-# See http://help.github.com/ignore-files/ for more about ignoring files.\n-#\n-# If you find yourself ignoring temporary files generated by your text editor\n-# or operating system, you probably want to add a global ignore instead:\n-#   git config --global core.excludesfile ~/.gitignore_global\n-\n-.DS_Store\n-._.DS_Store\n-dump.rdb\n-\n-bin/*\n-\n-data/\n-\n-.sass-cache/*\n-public/csv/*\n-public/plugins/*\n-public/tombstone/*\n+/copyright\n+/coverage\n+/data\n+/log\n+/tmp\n \n-# Ignore bundler config\n-/.bundle\n-/cache\n-/coverage/*\n+/.env\n+/.procfile\n+/dump.rdb\n \n-/public/assets/*\n-/public/tombstone/*\n-/bundle/*\n+/config/discourse.conf\n+/config/discourse.pill\n+/config/multisite.yml\n+# `discourse_dev` gem\n+/config/dev.yml\n \n-config/discourse.pill\n-config/discourse.conf\n+/public/assets\n+/public/backups\n+/public/csv\n+/public/fonts\n+/public/plugins\n+/public/tombstone\n+/public/uploads\n \n # Ignore the default SQLite database and db dumps\n *.sql\n@@ -38,120 +31,29 @@ config/discourse.conf\n /db/schema.rb\n /db/schema_cache.yml\n \n-# Ignore all logfiles and tempfiles.\n-/log/*.log\n-/tmp\n-/logfile\n-log/\n-bootsnap-load-path-cache\n-bootsnap-compile-cache/\n-\n-# Ignore plugins except for the bundled ones.\n+# Plugins except for the bundled ones\n /plugins/*\n-!/plugins/lazy-yt/\n-!/plugins/poll/\n !/plugins/discourse-details/\n-!/plugins/discourse-nginx-performance-report\n+!/plugins/discourse-local-dates\n !/plugins/discourse-narrative-bot\n !/plugins/discourse-presence\n+!/plugins/lazy-yt/\n+!/plugins/poll/\n !/plugins/styleguide\n-!/plugins/discourse-local-dates\n /plugins/*/auto_generated/\n \n /spec/fixtures/plugins/my_plugin/auto_generated\n \n-# Ignore Eclipse .project file\n-/.project\n-\n-# Ignore Eclipse .buildpath file\n-/.buildpath\n-\n-# Ignore byebug history\n-/.byebug_history\n-\n-# Ignore RubyMine settings\n-/.idea\n-\n-# Ignore gem that is copied in\n-MiniProfiler/Ruby/rack-mini-profiler-2.0.1a.gem\n-\n-discourse.sublime-workspace\n-\n-# Vim temp files\n-*~\n-*.swp\n-*.swo\n-*.swm\n-\n-# don't check in multisite config\n-config/multisite.yml\n-# don't check in my renamed multisite config as well :)\n-config/multisite1.yml\n-config/fog_credentials.yml\n-\n-/public/fonts\n-/public/uploads\n-/public/backups\n-/public/stylesheet-cache/*\n-\n-# Scripts used for downloading/refreshing db\n-script/download_db\n-script/refresh_db\n-\n-# .procfile\n-.procfile\n-\n-# .env, local environment variables for use with foreman\n-.env\n-\n-# exclude our git version file for now\n-config/version.rb\n-\n-# ignore the Ruby Version manager (rvm)\n-.rvmrc\n-.ruby-version\n-.ruby-gemset\n-.rbenv\n-bundler_stubs/*\n-\n-vendor/bundle/*\n-*.db\n-\n-# ignore jetbrains ide file\n-*.iml\n-\n-# vim swap\n-*.swn\n-\n-# ignore nodejs files\n-node_modules\n-/package-lock.json\n-\n+/vendor/bundle/*\n /vendor/data/GeoLite2-City.mmdb\n \n-# Vagrant\n-.vagrant\n+# Front-end\n+dist\n+node_modules\n+yarn-error.log\n \n-# ignore auto-generated plugin js assets\n+# Auto-generated plugin JS assets\n /app/assets/javascripts/plugins/*\n \n-# ignore generated api documentation files\n+# Generated API documentation files\n openapi/*\n-\n-# ignore VSCode config files\n-.vscode\n-\n-# ignore direnv\n-.envrc\n-\n-# ember-cli generated\n-dist\n-\n-# Copyright Deposits\n-copyright\n-\n-yarn-error.log\n-tags\n-\n-# file used with `discourse_dev` gem in development environment.\n-config/dev.yml"
    },
    {
      "sha": "d0c4882931121ff476f811cf5d5bc817383f1c38",
      "filename": "bin/rubocop",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/discourse/discourse/blob/53c06442efddb29dbf7a5cffbe984e52549f530f/bin/rubocop",
      "raw_url": "https://github.com/discourse/discourse/raw/53c06442efddb29dbf7a5cffbe984e52549f530f/bin/rubocop",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/bin/rubocop?ref=53c06442efddb29dbf7a5cffbe984e52549f530f",
      "patch": "@@ -0,0 +1,29 @@\n+#!/usr/bin/env ruby\n+# frozen_string_literal: true\n+\n+#\n+# This file was generated by Bundler.\n+#\n+# The application 'rubocop' is installed as part of a gem, and\n+# this file is here to facilitate running it.\n+#\n+\n+require \"pathname\"\n+ENV[\"BUNDLE_GEMFILE\"] ||= File.expand_path(\"../../Gemfile\",\n+  Pathname.new(__FILE__).realpath)\n+\n+bundle_binstub = File.expand_path(\"../bundle\", __FILE__)\n+\n+if File.file?(bundle_binstub)\n+  if File.read(bundle_binstub, 300) =~ /This file was generated by Bundler/\n+    load(bundle_binstub)\n+  else\n+    abort(\"Your `bin/bundle` was not generated by Bundler, so this binstub cannot run.\n+Replace `bin/bundle` by running `bundle binstubs bundler --force`, then run this command again.\")\n+  end\n+end\n+\n+require \"rubygems\"\n+require \"bundler/setup\"\n+\n+load Gem.bin_path(\"rubocop\", \"rubocop\")"
    }
  ]
}
