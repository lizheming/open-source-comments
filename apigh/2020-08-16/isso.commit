{
  "sha": "dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
  "node_id": "MDY6Q29tbWl0NjI2ODQxOTpkZDc2YWEwY2YxNGUwMWRkN2IyYWZmNDM0MjI5OWI0NjFmOTRmNTNl",
  "commit": {
    "author": {
      "name": "Jelmer Vernoo캐",
      "email": "jelmer@jelmer.uk",
      "date": "2020-08-08T02:10:39Z"
    },
    "committer": {
      "name": "Jelmer Vernoo캐",
      "email": "jelmer@jelmer.uk",
      "date": "2020-08-08T02:13:48Z"
    },
    "message": "Drop python 2 support.",
    "tree": {
      "sha": "1bcd64d2d73f942f76e3044948c7d522f25f5689",
      "url": "https://api.github.com/repos/posativ/isso/git/trees/1bcd64d2d73f942f76e3044948c7d522f25f5689"
    },
    "url": "https://api.github.com/repos/posativ/isso/git/commits/dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEsjhixBXWVlpOhsvXV5wWDUyeI+gFAl8uCl0ACgkQV5wWDUye\nI+gsTg/+NlgHMGefVuOZYzvpFyqfv6FFAIni0BF+SQfwyOaruNWT3teJIVRmNpON\nDFZfeU0z0FczW11qbLpEK7UISpK3SzT/FAYZV3neux47voRl0RWkId8ojLzxRHZ3\nCH6JSbHUyXUPd5ccDG26yDB640oSnztekP2WGlLhcNxuYVrDyRfOEksSYts2rw1J\nLpHoz/3odGzcotqRhiRhxPPp6ujVO49iJ8uibKgn0a7mj0JgOdTFbhuciw90E9ab\nTsuPm57khZcv7iPGsTHgfkmNKwNllPDdJXLqa/QUpQL2uDio9KgabNQRgt1+inQ0\nV48Sf8qk3hYqUtStzwUCF9pkrvTrCAHbB02SSr/Sx8fBfu3dxC4/dfOgbCOBHMmc\nk+lhd2+mVpe9uc4DmcJx9/2QUtVfwK7MkAPdAjTTKs1pzXbNLSoJFHk+fC5O7YPE\nLB+mNH2wBKDgF/r6O0nbhsUkY+sl25yuS2wHWXMEThtnsNChlYW2DFnuCtnFNMSd\nWO4arCpnWWlmyi3rRvvB8bqgH9gi4m2r+jN30vTAMlspK7omtolYNukgGBg63KTl\nXrr3b8LC14UpWYxnIrWB/o1QGLQ8Hy7dU+mC7Ftmr0U2kSXlZRVsiqSj6dhMNeQa\n12pPX1/pwz5cTq2WQMd3wmYi1J1gqcqhk32cxxPsUzDV9R6Hi6s=\n=Hm2M\n-----END PGP SIGNATURE-----",
      "payload": "tree 1bcd64d2d73f942f76e3044948c7d522f25f5689\nparent ea0020c134fd032be45143d5227c4d7614073e83\nauthor Jelmer Vernoo캐 <jelmer@jelmer.uk> 1596852639 +0000\ncommitter Jelmer Vernoo캐 <jelmer@jelmer.uk> 1596852828 +0000\n\nDrop python 2 support.\n"
    }
  },
  "url": "https://api.github.com/repos/posativ/isso/commits/dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
  "html_url": "https://github.com/posativ/isso/commit/dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
  "comments_url": "https://api.github.com/repos/posativ/isso/commits/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/comments",
  "author": {
    "login": "jelmer",
    "id": 49032,
    "node_id": "MDQ6VXNlcjQ5MDMy",
    "avatar_url": "https://avatars3.githubusercontent.com/u/49032?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jelmer",
    "html_url": "https://github.com/jelmer",
    "followers_url": "https://api.github.com/users/jelmer/followers",
    "following_url": "https://api.github.com/users/jelmer/following{/other_user}",
    "gists_url": "https://api.github.com/users/jelmer/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jelmer/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jelmer/subscriptions",
    "organizations_url": "https://api.github.com/users/jelmer/orgs",
    "repos_url": "https://api.github.com/users/jelmer/repos",
    "events_url": "https://api.github.com/users/jelmer/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jelmer/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jelmer",
    "id": 49032,
    "node_id": "MDQ6VXNlcjQ5MDMy",
    "avatar_url": "https://avatars3.githubusercontent.com/u/49032?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jelmer",
    "html_url": "https://github.com/jelmer",
    "followers_url": "https://api.github.com/users/jelmer/followers",
    "following_url": "https://api.github.com/users/jelmer/following{/other_user}",
    "gists_url": "https://api.github.com/users/jelmer/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jelmer/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jelmer/subscriptions",
    "organizations_url": "https://api.github.com/users/jelmer/orgs",
    "repos_url": "https://api.github.com/users/jelmer/repos",
    "events_url": "https://api.github.com/users/jelmer/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jelmer/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ea0020c134fd032be45143d5227c4d7614073e83",
      "url": "https://api.github.com/repos/posativ/isso/commits/ea0020c134fd032be45143d5227c4d7614073e83",
      "html_url": "https://github.com/posativ/isso/commit/ea0020c134fd032be45143d5227c4d7614073e83"
    }
  ],
  "stats": {
    "total": 146,
    "additions": 30,
    "deletions": 116
  },
  "files": [
    {
      "sha": "fd7b6cbc4d96441ca3c594d0db5ce519207d3106",
      "filename": "isso/compat.py",
      "status": "removed",
      "additions": 0,
      "deletions": 26,
      "changes": 26,
      "blob_url": "https://github.com/posativ/isso/blob/ea0020c134fd032be45143d5227c4d7614073e83/isso/compat.py",
      "raw_url": "https://github.com/posativ/isso/raw/ea0020c134fd032be45143d5227c4d7614073e83/isso/compat.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/compat.py?ref=ea0020c134fd032be45143d5227c4d7614073e83",
      "patch": "@@ -1,26 +0,0 @@\n-# -*- encoding: utf-8 -*-\n-\n-try:\n-    text_type = unicode  # Python 2\n-    string_types = (str, unicode)\n-    PY2K = True\n-except NameError:        # Python 3\n-    PY2K = False\n-    text_type = str\n-    string_types = (str, )\n-\n-if not PY2K:\n-    buffer = memoryview\n-    filter, map, zip = filter, map, zip\n-\n-    def iteritems(dikt):\n-        return iter(dikt.items())  # noqa: E731\n-    from functools import reduce\n-else:\n-    buffer = buffer\n-    from itertools import ifilter, imap, izip\n-    filter, map, zip = ifilter, imap, izip\n-\n-    def iteritems(dikt):\n-        return dikt.iteritems()   # noqa: E731\n-    reduce = reduce"
    },
    {
      "sha": "c916704d5bf1f570a93a3b47c84cbcba638e6e63",
      "filename": "isso/config.py",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/posativ/isso/blob/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/config.py",
      "raw_url": "https://github.com/posativ/isso/raw/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/config.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/config.py?ref=dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
      "patch": "@@ -7,9 +7,7 @@\n import datetime\n \n from email.utils import parseaddr, formataddr\n-from configparser import ConfigParser\n-\n-from isso.compat import text_type as str\n+from configparser import ConfigParser, NoOptionError, NoSectionError\n \n logger = logging.getLogger(\"isso\")\n \n@@ -142,7 +140,11 @@ def setify(cp):\n             logger.info(\"Your `session-key` has been stored in the \"\n                         \"database itself, this option is now unused\")\n \n-    if not parseaddr(parser.get(\"smtp\", \"from\"))[0]:\n+    try:\n+        fromaddr = parser.get(\"smtp\", \"from\")\n+    except (NoOptionError, NoSectionError):\n+        fromaddr = ''\n+    if not parseaddr(fromaddr)[0]:\n         parser.set(\"smtp\", \"from\",\n                    formataddr((\"Ich schrei sonst!\", parser.get(\"smtp\", \"from\"))))\n "
    },
    {
      "sha": "860e650ba90e8ddf3987a473ea9df141d605360b",
      "filename": "isso/core.py",
      "status": "modified",
      "additions": 1,
      "deletions": 6,
      "changes": 7,
      "blob_url": "https://github.com/posativ/isso/blob/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/core.py",
      "raw_url": "https://github.com/posativ/isso/raw/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/core.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/core.py?ref=dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
      "patch": "@@ -12,12 +12,7 @@\n except ImportError:\n     uwsgi = None\n \n-from isso.compat import PY2K\n-\n-if PY2K:\n-    import thread\n-else:\n-    import _thread as thread\n+import _thread as thread\n \n from flask_caching.backends.nullcache import NullCache\n from flask_caching.backends.simplecache import SimpleCache"
    },
    {
      "sha": "d38318678a19791331f5c995b9e938b571a26107",
      "filename": "isso/db/__init__.py",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/posativ/isso/blob/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/db/__init__.py",
      "raw_url": "https://github.com/posativ/isso/raw/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/db/__init__.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/db/__init__.py?ref=dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
      "patch": "@@ -9,8 +9,6 @@\n \n logger = logging.getLogger(\"isso\")\n \n-from isso.compat import buffer\n-\n from isso.db.comments import Comments\n from isso.db.threads import Threads\n from isso.db.spam import Guard\n@@ -77,7 +75,7 @@ def migrate(self, to):\n         if self.version == 0:\n \n             from isso.utils import Bloomfilter\n-            bf = buffer(Bloomfilter(iterable=[\"127.0.0.0\"]).array)\n+            bf = memoryview(Bloomfilter(iterable=[\"127.0.0.0\"]).array)\n \n             with sqlite3.connect(self.path) as con:\n                 con.execute('UPDATE comments SET voters=?', (bf, ))"
    },
    {
      "sha": "f2d06c1e80624638429986d1ba1d6025ca1b0680",
      "filename": "isso/db/comments.py",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/posativ/isso/blob/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/db/comments.py",
      "raw_url": "https://github.com/posativ/isso/raw/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/db/comments.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/db/comments.py?ref=dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
      "patch": "@@ -4,7 +4,6 @@\n import time\n \n from isso.utils import Bloomfilter\n-from isso.compat import buffer\n \n \n logger = logging.getLogger(\"isso\")\n@@ -70,7 +69,7 @@ def add(self, uri, c):\n             'FROM threads WHERE threads.uri = ?;'], (\n             c.get('parent'),\n             c.get('created') or time.time(), None, c[\"mode\"], c['remote_addr'],\n-            c['text'], c.get('author'), c.get('email'), c.get('website'), buffer(\n+            c['text'], c.get('author'), c.get('email'), c.get('website'), memoryview(\n                 Bloomfilter(iterable=[c['remote_addr']]).array), c.get('notification'),\n             uri)\n         )\n@@ -305,7 +304,7 @@ def vote(self, upvote, id, remote_addr):\n             'UPDATE comments SET',\n             '    likes = likes + 1,' if upvote else 'dislikes = dislikes + 1,',\n             '    voters = ?'\n-            'WHERE id=?;'], (buffer(bf.array), id))\n+            'WHERE id=?;'], (memoryview(bf.array), id))\n \n         if upvote:\n             return {'likes': likes + 1, 'dislikes': dislikes}"
    },
    {
      "sha": "f99ee612fbcfa64505161b907edd3f71c661e6a8",
      "filename": "isso/ext/notifications.py",
      "status": "modified",
      "additions": 2,
      "deletions": 9,
      "changes": 11,
      "blob_url": "https://github.com/posativ/isso/blob/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/ext/notifications.py",
      "raw_url": "https://github.com/posativ/isso/raw/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/ext/notifications.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/ext/notifications.py?ref=dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
      "patch": "@@ -14,10 +14,7 @@\n from email.header import Header\n from email.mime.text import MIMEText\n \n-try:\n-    from urllib.parse import quote\n-except ImportError:\n-    from urllib import quote\n+from urllib.parse import quote\n \n import logging\n logger = logging.getLogger(\"isso\")\n@@ -27,13 +24,9 @@\n except ImportError:\n     uwsgi = None\n \n-from isso.compat import PY2K\n from isso import local\n \n-if PY2K:\n-    from thread import start_new_thread\n-else:\n-    from _thread import start_new_thread\n+from _thread import start_new_thread\n \n \n class SMTPConnection(object):"
    },
    {
      "sha": "7dbdda514119979cd14180f6648e6d4a3a4e5dad",
      "filename": "isso/migrate.py",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/posativ/isso/blob/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/migrate.py",
      "raw_url": "https://github.com/posativ/isso/raw/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/migrate.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/migrate.py?ref=dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
      "patch": "@@ -15,7 +15,6 @@\n from collections import defaultdict\n \n from isso.utils import anonymize\n-from isso.compat import string_types\n \n try:\n     input = raw_input\n@@ -33,7 +32,7 @@\n \n \n def strip(val):\n-    if isinstance(val, string_types):\n+    if isinstance(val, (str, )):\n         return val.strip()\n     return val\n "
    },
    {
      "sha": "d484e4c9cedd0ad9a398b6b31b0f3a8d721740a0",
      "filename": "isso/tests/test_comments.py",
      "status": "modified",
      "additions": 2,
      "deletions": 7,
      "changes": 9,
      "blob_url": "https://github.com/posativ/isso/blob/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/tests/test_comments.py",
      "raw_url": "https://github.com/posativ/isso/raw/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/tests/test_comments.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/tests/test_comments.py?ref=dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
      "patch": "@@ -8,19 +8,14 @@\n import tempfile\n import unittest\n \n-try:\n-    from urllib.parse import urlencode\n-except ImportError:\n-    from urllib import urlencode\n+from urllib.parse import urlencode\n \n from werkzeug.wrappers import Response\n \n from isso import Isso, core, config, dist\n from isso.utils import http\n from isso.views import comments\n \n-from isso.compat import iteritems\n-\n from fixtures import curl, loads, FakeIP, JSONClient\n http.curl = curl\n \n@@ -402,7 +397,7 @@ def testMultipleCounts(self):\n \n         expected = {'a': 1, 'b': 2, 'c': 0}\n \n-        for uri, count in iteritems(expected):\n+        for uri, count in expected.items():\n             for _ in range(count):\n                 self.post('/new?uri=%s' %\n                           uri, data=json.dumps({\"text\": \"...\"}))"
    },
    {
      "sha": "09860f179925ded3c737486f58d1b57d28810751",
      "filename": "isso/tests/test_db.py",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/posativ/isso/blob/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/tests/test_db.py",
      "raw_url": "https://github.com/posativ/isso/raw/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/tests/test_db.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/tests/test_db.py?ref=dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
      "patch": "@@ -8,8 +8,6 @@\n from isso import config\n from isso.db import SQLite3\n \n-from isso.compat import iteritems\n-\n \n class TestDBMigration(unittest.TestCase):\n \n@@ -93,7 +91,7 @@ def test_limit_nested_comments(self):\n \n             con.execute(\n                 \"INSERT INTO threads (uri, title) VALUES (?, ?)\", (\"/\", \"Test\"))\n-            for (id, parent) in iteritems(tree):\n+            for (id, parent) in tree.items():\n                 con.execute(\"INSERT INTO comments (\"\n                             \"   id, parent, created)\"\n                             \"VALUEs (?, ?, ?)\", (id, parent, id))\n@@ -106,15 +104,15 @@ def test_limit_nested_comments(self):\n         })\n         SQLite3(self.path, conf)\n \n-        flattened = list(iteritems({\n+        flattened = list({\n             1: None,\n             2: None,\n             3: 2,\n             4: 2,\n             5: 2,\n             6: None,\n             7: 2\n-        }))\n+        }.items())\n \n         with sqlite3.connect(self.path) as con:\n             rv = con.execute("
    },
    {
      "sha": "122c897f9dd392fc9ce8d98f55d44ef2e8a17d79",
      "filename": "isso/tests/test_utils_hash.py",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/posativ/isso/blob/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/tests/test_utils_hash.py",
      "raw_url": "https://github.com/posativ/isso/raw/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/tests/test_utils_hash.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/tests/test_utils_hash.py?ref=dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
      "patch": "@@ -6,7 +6,6 @@\n \n from isso import config\n \n-from isso.compat import PY2K, string_types\n from isso.utils.hash import Hash, PBKDF2, new\n \n \n@@ -22,9 +21,8 @@ def test_hash(self):\n \n         self.assertRaises(TypeError, h.hash, \"...\")\n         self.assertEqual(h.hash(b\"...\"), b\"...\")\n-        self.assertIsInstance(h.uhash(u\"...\"), string_types)\n+        self.assertIsInstance(h.uhash(u\"...\"), (str, ))\n \n-    @unittest.skipIf(PY2K, \"byte/str quirks\")\n     def test_uhash(self):\n         h = Hash(b\"\", func=None)\n         self.assertRaises(TypeError, h.uhash, b\"...\")"
    },
    {
      "sha": "6e2bd9c25eff02a82fd1943dda77b7637cf27c89",
      "filename": "isso/utils/__init__.py",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/posativ/isso/blob/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/utils/__init__.py",
      "raw_url": "https://github.com/posativ/isso/raw/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/utils/__init__.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/utils/__init__.py?ref=dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
      "patch": "@@ -14,7 +14,6 @@\n from werkzeug.wrappers import Response\n from werkzeug.exceptions import BadRequest\n \n-from isso.compat import text_type\n from isso.wsgi import Request\n \n try:\n@@ -29,7 +28,7 @@ def anonymize(remote_addr):\n     and /48 (zero'd).\n \n     \"\"\"\n-    if not isinstance(remote_addr, text_type) and isinstance(remote_addr, str):\n+    if not isinstance(remote_addr, str) and isinstance(remote_addr, str):\n         remote_addr = remote_addr.decode('ascii', 'ignore')\n     try:\n         ipv4 = ipaddress.IPv4Address(remote_addr)\n@@ -38,7 +37,7 @@ def anonymize(remote_addr):\n         try:\n             ipv6 = ipaddress.IPv6Address(remote_addr)\n             if ipv6.ipv4_mapped is not None:\n-                return anonymize(text_type(ipv6.ipv4_mapped))\n+                return anonymize(str(ipv6.ipv4_mapped))\n             return u'' + ipv6.exploded.rsplit(':', 5)[0] + ':' + ':'.join(['0000'] * 5)\n         except ipaddress.AddressValueError:\n             return u'0.0.0.0'"
    },
    {
      "sha": "5520401c6b881d9d6a641359abb308b071652b12",
      "filename": "isso/utils/hash.py",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/posativ/isso/blob/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/utils/hash.py",
      "raw_url": "https://github.com/posativ/isso/raw/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/utils/hash.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/utils/hash.py?ref=dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
      "patch": "@@ -5,7 +5,6 @@\n import codecs\n import hashlib\n \n-from isso.compat import string_types, text_type as str\n \n try:\n     from werkzeug.security import pbkdf2_bin as pbkdf2\n@@ -57,7 +56,7 @@ def hash(self, val):\n     def uhash(self, val):\n         \"\"\"Calculate hash from unicode value and return hex value as unicode\"\"\"\n \n-        if not isinstance(val, string_types):\n+        if not isinstance(val, (str, )):\n             raise _TypeError(\"val\", \"str\", val)\n \n         return codecs.encode(self.hash(val.encode(\"utf-8\")), \"hex_codec\").decode(\"utf-8\")"
    },
    {
      "sha": "83ce819a9dfbb10b29161d67df26f164452bb158",
      "filename": "isso/utils/parse.py",
      "status": "modified",
      "additions": 1,
      "deletions": 10,
      "changes": 11,
      "blob_url": "https://github.com/posativ/isso/blob/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/utils/parse.py",
      "raw_url": "https://github.com/posativ/isso/raw/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/utils/parse.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/utils/parse.py?ref=dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
      "patch": "@@ -4,19 +4,10 @@\n from itertools import chain\n \n \n-try:\n-    from urllib import unquote\n-except ImportError:\n-    from urllib.parse import unquote\n+from urllib.parse import unquote\n \n import html5lib\n \n-from isso.compat import map, filter, PY2K\n-\n-if PY2K:  # http://bugs.python.org/issue12984\n-    from xml.dom.minidom import NamedNodeMap\n-    NamedNodeMap.__contains__ = lambda self, key: self.has_key(key)  # noqa\n-\n \n def thread(data, default=u\"Untitled.\", id=None):\n     \"\"\""
    },
    {
      "sha": "eb9d3a6cef4916e1f63c31f8903980568f1082a9",
      "filename": "isso/views/__init__.py",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/posativ/isso/blob/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/views/__init__.py",
      "raw_url": "https://github.com/posativ/isso/raw/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/views/__init__.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/views/__init__.py?ref=dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
      "patch": "@@ -12,7 +12,6 @@\n from werkzeug.exceptions import BadRequest\n \n from isso import local\n-from isso.compat import text_type as str\n \n \n class requires:"
    },
    {
      "sha": "6b8c2f726d237dbe04d2a9c7a006dc0aa9608e6d",
      "filename": "isso/views/comments.py",
      "status": "modified",
      "additions": 3,
      "deletions": 14,
      "changes": 17,
      "blob_url": "https://github.com/posativ/isso/blob/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/views/comments.py",
      "raw_url": "https://github.com/posativ/isso/raw/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/views/comments.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/views/comments.py?ref=dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
      "patch": "@@ -20,8 +20,6 @@\n from werkzeug.wrappers import Response\n from werkzeug.exceptions import BadRequest, Forbidden, NotFound\n \n-from isso.compat import text_type as str\n-\n from isso import utils, local\n from isso.utils import (http, parse,\n                         JSONResponse as JSON, XMLResponse as XML,\n@@ -34,18 +32,9 @@\n     from cgi import escape\n except ImportError:\n     from html import escape\n-try:\n-    from urlparse import urlparse\n-except ImportError:\n-    from urllib.parse import urlparse\n-try:\n-    from urllib import unquote\n-except ImportError:\n-    from urllib.parse import unquote\n-try:\n-    from StringIO import StringIO\n-except ImportError:\n-    from io import BytesIO as StringIO\n+from urllib.parse import urlparse\n+from urllib.parse import unquote\n+from io import BytesIO as StringIO\n \n \n # from Django appearently, looks good to me *duck*"
    },
    {
      "sha": "6b7ec6a91484c9b4dda8e0b4fde9ed0324278b31",
      "filename": "isso/wsgi.py",
      "status": "modified",
      "additions": 4,
      "deletions": 13,
      "changes": 17,
      "blob_url": "https://github.com/posativ/isso/blob/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/wsgi.py",
      "raw_url": "https://github.com/posativ/isso/raw/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/isso/wsgi.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/wsgi.py?ref=dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
      "patch": "@@ -5,24 +5,15 @@\n import sys\n import socket\n \n-try:\n-    from urllib.parse import quote, urlparse\n+from urllib.parse import quote, urlparse\n \n-    from socketserver import ThreadingMixIn\n-    from http.server import HTTPServer\n-except ImportError:\n-    from urllib import quote\n-    from urlparse import urlparse\n-\n-    from SocketServer import ThreadingMixIn\n-    from BaseHTTPServer import HTTPServer\n+from socketserver import ThreadingMixIn\n+from http.server import HTTPServer\n \n from werkzeug.serving import WSGIRequestHandler\n from werkzeug.wrappers import Request as _Request\n from werkzeug.datastructures import Headers\n \n-from isso.compat import string_types\n-\n \n def host(environ):  # pragma: no cover\n     \"\"\"\n@@ -52,7 +43,7 @@ def urlsplit(name):\n     Parse :param:`name` into (netloc, port, ssl)\n     \"\"\"\n \n-    if not (isinstance(name, string_types)):\n+    if not isinstance(name, (str, )):\n         name = str(name)\n \n     if not name.startswith(('http://', 'https://')):"
    },
    {
      "sha": "3aaf066efde4552ec45c0159e95bb804ebf01c02",
      "filename": "tox.ini",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/posativ/isso/blob/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/tox.ini",
      "raw_url": "https://github.com/posativ/isso/raw/dd76aa0cf14e01dd7b2aff4342299b461f94f53e/tox.ini",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/tox.ini?ref=dd76aa0cf14e01dd7b2aff4342299b461f94f53e",
      "patch": "@@ -8,11 +8,6 @@ deps =\n commands =\n     python setup.py nosetests\n \n-[testenv:py27]\n-deps =\n-    configparser\n-    {[testenv]deps}\n-\n [testenv:debian]\n deps=\n     bleach"
    }
  ]
}
