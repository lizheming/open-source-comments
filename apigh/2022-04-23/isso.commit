{
  "sha": "46f1bc851868e406a97c4ab3b9a7f024508503e7",
  "node_id": "C_kwDOAF-mA9oAKDQ2ZjFiYzg1MTg2OGU0MDZhOTdjNGFiM2I5YTdmMDI0NTA4NTAzZTc",
  "commit": {
    "author": {
      "name": "ix5",
      "email": "ix5@users.noreply.github.com",
      "date": "2022-04-23T11:44:57Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2022-04-23T11:44:57Z"
    },
    "message": "Dockerfile: Use Alpine base images, optimize process (#841)",
    "tree": {
      "sha": "d15eb85b19c5c3d183bb778cd51065a4e2dcfe95",
      "url": "https://api.github.com/repos/posativ/isso/git/trees/d15eb85b19c5c3d183bb778cd51065a4e2dcfe95"
    },
    "url": "https://api.github.com/repos/posativ/isso/git/commits/46f1bc851868e406a97c4ab3b9a7f024508503e7",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiY+a5CRBK7hj4Ov3rIwAAyBIIAAUaYSCkLinmbL4ptLYX06gY\ndYVJynXHEFiwcw16S8lJna6tmayuuljA68lY4JZH9Z9IRTHZkd75yHOBWKxR4bHu\n3wGlY3rGjZ+H9Xely7dRlWv5QZN4Rdd+QyYvBK7j7Yc89EnUJvWp5SBOnAi4weiJ\n5MRKGpfMSCX/x72nLd77kChZt/a73hqYMSYmWF0etg2HaBy8uXW8xYdNbRX438Iq\nKYXn8GKqpqWVSezANZaL4Yi9kZAR8mccCrMWfHwZCUJr5/MiIl2HzKcg5dCB5TYs\n9V6t8AquOoiFccYGYLUY3JlM7nCCBklRFOazS1gejvDITVZBJCPorFk2cm6R8CM=\n=tGOQ\n-----END PGP SIGNATURE-----\n",
      "payload": "tree d15eb85b19c5c3d183bb778cd51065a4e2dcfe95\nparent 36e399785d767c16805b110614584ea366754535\nauthor ix5 <ix5@users.noreply.github.com> 1650714297 +0200\ncommitter GitHub <noreply@github.com> 1650714297 +0200\n\nDockerfile: Use Alpine base images, optimize process (#841)\n\n"
    }
  },
  "url": "https://api.github.com/repos/posativ/isso/commits/46f1bc851868e406a97c4ab3b9a7f024508503e7",
  "html_url": "https://github.com/posativ/isso/commit/46f1bc851868e406a97c4ab3b9a7f024508503e7",
  "comments_url": "https://api.github.com/repos/posativ/isso/commits/46f1bc851868e406a97c4ab3b9a7f024508503e7/comments",
  "author": {
    "login": "ix5",
    "id": 10212877,
    "node_id": "MDQ6VXNlcjEwMjEyODc3",
    "avatar_url": "https://avatars.githubusercontent.com/u/10212877?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ix5",
    "html_url": "https://github.com/ix5",
    "followers_url": "https://api.github.com/users/ix5/followers",
    "following_url": "https://api.github.com/users/ix5/following{/other_user}",
    "gists_url": "https://api.github.com/users/ix5/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ix5/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ix5/subscriptions",
    "organizations_url": "https://api.github.com/users/ix5/orgs",
    "repos_url": "https://api.github.com/users/ix5/repos",
    "events_url": "https://api.github.com/users/ix5/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ix5/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "36e399785d767c16805b110614584ea366754535",
      "url": "https://api.github.com/repos/posativ/isso/commits/36e399785d767c16805b110614584ea366754535",
      "html_url": "https://github.com/posativ/isso/commit/36e399785d767c16805b110614584ea366754535"
    }
  ],
  "stats": {
    "total": 90,
    "additions": 70,
    "deletions": 20
  },
  "files": [
    {
      "sha": "6fcdcd823196cf37602a29a72f4bb31e07ccf235",
      "filename": "Dockerfile",
      "status": "modified",
      "additions": 70,
      "deletions": 20,
      "changes": 90,
      "blob_url": "https://github.com/posativ/isso/blob/46f1bc851868e406a97c4ab3b9a7f024508503e7/Dockerfile",
      "raw_url": "https://github.com/posativ/isso/raw/46f1bc851868e406a97c4ab3b9a7f024508503e7/Dockerfile",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/Dockerfile?ref=46f1bc851868e406a97c4ab3b9a7f024508503e7",
      "patch": "@@ -1,37 +1,87 @@\n-# First, compile JS stuff\n-FROM node:dubnium-buster AS jsBuilder\n+# Isso production Dockerfile\n+\n+# First stage: Build Javascript client parts using NodeJS\n+\n+FROM node:current-alpine AS isso-js\n WORKDIR /src/\n-COPY . .\n+\n+# make is not installed by default on alpine\n+RUN apk add --no-cache make\n+\n+# Only copy necessities, to not trigger re-builds unnecessarily\n+COPY [\"Makefile\", \"package.json\", \"package-lock.json\", \"./\"]\n+COPY [\"isso/js/\", \"./isso/js/\"]\n+COPY [\"isso/css/\", \"./isso/css/\"]\n+\n+# Disable nagware and save some time skipping \"security\" \"audits\"\n+RUN echo -e \"audit=false\\nfund=false\"> /root/.npmrc\n+\n RUN make init js\n \n-# Second, create virtualenv\n-FROM python:3.8-buster AS venvBuilder\n-WORKDIR /src/\n-# Set TOX_ENV_NAME in order for the \"build_py\" command in setup.py to skip\n-# building Javascript artifacts as they have already been created by the\n-# \"jsBuilder\" step.\n-ENV TOX_ENV_NAME=1\n-COPY --from=jsBuilder /src .\n+# Second stage: Create production-ready Isso package\n+\n+# Copy needed files\n+FROM python:3.10-alpine AS isso-builder\n+WORKDIR /isso/\n+\n+# Set up virtualenv\n RUN python3 -m venv /isso \\\n  && . /isso/bin/activate \\\n  && pip3 install --no-cache-dir --upgrade pip \\\n- && pip3 install --no-cache-dir gunicorn flask \\\n- && python setup.py install \\\n- && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n+ && pip3 install --no-cache-dir gunicorn\n \n-# Third, create final repository\n-FROM python:3.8-slim-buster\n+# Install cffi dependencies since they're not present on alpine by default\n+# (required by cffi which in turn is required by misaka)\n+RUN apk add --no-cache gcc libffi-dev libc-dev\n+\n+# For some reason, it is required to install cffi before misaka, else pip will\n+# fail to build cffi\n+RUN . /isso/bin/activate \\\n+ && pip3 install cffi\n+\n+# Install Isso's python dependencies via pip in a separate step before copying\n+# over client files, so that changing Isso js/python source code will not\n+# trigger a re-installation of all pip packages from scratch\n+COPY [\"setup.py\", \"setup.cfg\", \"README.md\", \"LICENSE\", \"./\"]\n+RUN . /isso/bin/activate \\\n+ && python3 setup.py develop\n+\n+# Then copy over files\n+# SRC \"isso/\" is treated as \"isso/*\" by docker, so copy to subdir explicitly\n+COPY [\"./isso/\", \"/isso/isso/\"]\n+COPY [\"./share/\", \"./share/\"]\n+\n+# Copy over generated Javascript client files\n+COPY --from=isso-js /src/isso/js/ ./isso/js\n+\n+# Build and install Isso package (pip dependencies cached from previous step)\n+RUN . /isso/bin/activate \\\n+ && python3 setup.py develop --no-deps\n+\n+\n+# Third stage: Run Isso\n+FROM python:3.10-alpine AS isso\n WORKDIR /isso/\n-COPY --from=venvBuilder /isso .\n+COPY --from=isso-builder /isso/ .\n+\n+# Clean up\n+RUN rm -rf /var/apk/cache/* /tmp/* /var/tmp/*\n \n # Configuration\n VOLUME /db /config\n EXPOSE 8080\n ENV ISSO_SETTINGS /config/isso.cfg\n+\n+# Run Isso via gunicorn WSGI server\n CMD [\"/isso/bin/gunicorn\", \"-b\", \"0.0.0.0:8080\", \"-w\", \"4\", \"--preload\", \"isso.run\", \"--worker-tmp-dir\", \"/dev/shm\"]\n \n # Example of use:\n #\n-# docker build -t isso .\n-# docker run -it --rm -v /opt/isso:/config -v /opt/isso:/db -v $PWD:$PWD isso /isso/bin/isso -c \\$ISSO_SETTINGS import disqus.xml\n-# docker run -d --rm --name isso -p 8080:8080 -v /opt/isso:/config -v /opt/isso:/db isso\n+# Build:\n+# $ docker build -t isso .\n+#\n+# Run:\n+# $ mkdir config\n+# $ cp share/isso-dev.conf config/isso.cfg\n+# $ mkdir db/\n+# $ docker run -d --rm --name isso -p 8080:8080 -v $PWD/config:/config -v $PWD/db:/db isso:latest"
    }
  ]
}
