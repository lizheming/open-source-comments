{
  "sha": "639ccf013c1daf9308d5a6cb4988f888f2699389",
  "node_id": "MDY6Q29tbWl0MTA1NjMzMjI6NjM5Y2NmMDEzYzFkYWY5MzA4ZDVhNmNiNDk4OGY4ODhmMjY5OTM4OQ==",
  "commit": {
    "author": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2021-03-03T15:13:44Z"
    },
    "committer": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2021-03-03T15:13:44Z"
    },
    "message": "Merge v0.2021.08 into 'release'.",
    "tree": {
      "sha": "915a4266c9e26e5825019bbf5face004f25d85b2",
      "url": "https://api.github.com/repos/debiki/talkyard/git/trees/915a4266c9e26e5825019bbf5face004f25d85b2"
    },
    "url": "https://api.github.com/repos/debiki/talkyard/git/commits/639ccf013c1daf9308d5a6cb4988f888f2699389",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/debiki/talkyard/commits/639ccf013c1daf9308d5a6cb4988f888f2699389",
  "html_url": "https://github.com/debiki/talkyard/commit/639ccf013c1daf9308d5a6cb4988f888f2699389",
  "comments_url": "https://api.github.com/repos/debiki/talkyard/commits/639ccf013c1daf9308d5a6cb4988f888f2699389/comments",
  "author": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "635c747bc8cfcdce7b8d0e3b4ab0df7ce98c15a8",
      "url": "https://api.github.com/repos/debiki/talkyard/commits/635c747bc8cfcdce7b8d0e3b4ab0df7ce98c15a8",
      "html_url": "https://github.com/debiki/talkyard/commit/635c747bc8cfcdce7b8d0e3b4ab0df7ce98c15a8"
    },
    {
      "sha": "5d913c57fa631917a3687f231fe62f74d392cb2b",
      "url": "https://api.github.com/repos/debiki/talkyard/commits/5d913c57fa631917a3687f231fe62f74d392cb2b",
      "html_url": "https://github.com/debiki/talkyard/commit/5d913c57fa631917a3687f231fe62f74d392cb2b"
    }
  ],
  "stats": {
    "total": 591,
    "additions": 430,
    "deletions": 161
  },
  "files": [
    {
      "sha": "f0890d73e4c8728970967000cab94cb145eb275b",
      "filename": ".gitmodules",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/.gitmodules",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/.gitmodules",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/.gitmodules?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -4,13 +4,13 @@\n #\n [submodule \"images/web/ty-media\"]\n \tpath = images/web/ty-media\n-\turl = https://github.com/debiki/talkyard-media.git\n+\turl = https://github.com/debiki/ty-media.git\n [submodule \"modules/ty-test-media\"]\n \tpath = modules/ty-test-media\n \turl = https://github.com/debiki/ty-test-media\n-[submodule \"modules/ty-cla\"]\n-\tpath = modules/ty-cla\n-\turl = https://github.com/debiki/ty-cla.git\n+[submodule \"modules/ty-translations\"]\n+\tpath = modules/ty-translations\n+\turl = https://github.com/debiki/ty-translations.git\n [submodule \"modules/google-diff-match-patch\"]\n \tpath = modules/google-diff-match-patch\n \turl = https://github.com/google/diff-match-patch.git"
    },
    {
      "sha": "d66887cac2f7dce99bd2e3609d26d5dcc644d776",
      "filename": "Makefile",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/Makefile",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/Makefile",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/Makefile?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -153,7 +153,7 @@ node_modules/.bin/gulp: git-subm-init-upd\n \ts/yarn\n \n # BUG RISK sync with Gulp so won't accidentally forget to (re)build? [GZPATHS]\n-# Sync with the languages in the /translations/ dir. [5JUKQR2]\n+# Sync with the languages in module ty-translations. [5JUKQR2]\n #  public/res/2d-bundle.min.js.gz // [SLIMTYPE]\n prod_asset_bundle_files:=\\\n   images/web/assets/talkyard-comments.min.js.gz \\\n@@ -360,15 +360,17 @@ images/web/assets/ext-iframe.js.gz: client/ext-iframe.js\n # For Play Framework, the app container.\n # E.g.:  images/app/assets/translations/en_US/i18n.js  etc.\n transl_dev_app_bundle_files := \\\n-  ${shell find translations/ -name '*.ts' | sed -nr 's;(.*)\\.ts;images/app/assets/\\1.js;p'}\n+  ${shell find translations/ -name '*.ts'  \\\n+              | sed -nr 's;(.*)\\.ts;images/app/assets/\\1.js;p' }\n \n # For Nginx, the web container — includes the version number, for asset versioning.\n # E.g. images/web/assets/v0.2020.25/translations/en_US/i18n.js\n transl_dev_web_bundle_files := \\\n-  ${shell find translations/ -name '*.ts' | sed -nr 's;(.*)\\.ts;images/web/assets/$(TALKYARD_VERSION)/\\1.js;p'}\n+  ${shell find translations/ -name '*.ts'  \\\n+              | sed -nr 's;(.*)\\.ts;images/web/assets/$(TALKYARD_VERSION)/\\1.js;p' }\n \n $(transl_dev_app_bundle_files) $(transl_dev_web_bundle_files): \\\n-        ${shell find translations/ -name '*.ts'}\n+        ${shell find translations/ -name '*.ts' }\n \t@echo \"Generating translation files: Transpiling .ts to .js\"\n \ts/d-gulp  buildTranslations\n "
    },
    {
      "sha": "021c7ee502a08ed1e6608064bd74250b1d9249b7",
      "filename": "README.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/README.md",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/README.md",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/README.md?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -231,7 +231,7 @@ accidentally re-implement something that's almost done already — people\n might be working in their own work-in-progress topic branches that you\n don't know about. -->\n \n-How to translate to a new language: [i18n-README](translations/i18n-README.md) (step 1 and 2 only). — Open any translations pull request to the translations repo: https://github.com/debiki/ty-cla (not to https://github.com/debiki/talkyard).\n+How to translate to a new language: [i18n-README](translations/i18n-README.md) (step 1 and 2 only). — Open any translations pull request to the ty-translations repo: https://github.com/debiki/ty-translations.\n \n You need to agree to [this Contributor License Agreement](./docs/CLA-v2.txt). You do that by\n reading it (there's a human friendly intro) and appending a single line"
    },
    {
      "sha": "1c9543f0c982da7529695dd073423d8923b01a1f",
      "filename": "app/controllers/InviteController.scala",
      "status": "modified",
      "additions": 35,
      "deletions": 22,
      "changes": 57,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/app/controllers/InviteController.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/app/controllers/InviteController.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/controllers/InviteController.scala?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -204,6 +204,7 @@ class InviteController @Inject()(cc: ControllerComponents, edContext: EdContext)\n \n   private def doSendInvite(toEmailAddress: String, addToGroup: Option[Group],\n         now: When, request: DebikiRequest[_]): Invite Or ErrorMessage = {\n+    import request.dao\n \n     val invite = Invite(\n       secretKey = nextRandomString(),\n@@ -212,7 +213,7 @@ class InviteController @Inject()(cc: ControllerComponents, edContext: EdContext)\n       createdAt = now.toJavaDate,\n       addToGroupIds = addToGroup.map(_.id).toSet)\n \n-    val anyProbablyUsername = request.dao.readOnlyTransaction { tx =>\n+    val anyProbablyUsername = dao.readTx { tx =>\n       Participant.makeOkayUsername(\n         invite.emailAddress.takeWhile(_ != '@'), allowDotDash = false,  // [CANONUN]\n         tx.isUsernameInUse)\n@@ -225,12 +226,17 @@ class InviteController @Inject()(cc: ControllerComponents, edContext: EdContext)\n \n     UX; COULD // incl any add-to-group name? Nice to know \"You'll be added to the\n     // Students-2019 group\" for example?\n-    val email = makeInvitationEmail(invite, inviterName = request.theMember.usernameParensFullName,\n-      probablyUsername = probablyUsername, siteHostname = request.host)\n+    val settings = dao.getWholeSiteSettings()\n+    val email = makeInvitationEmail(\n+          invite,\n+          inviterName = request.theMember.usernameParensFullName,\n+          probablyUsername = probablyUsername,\n+          siteHostname = request.host,\n+          langCode = settings.languageCode)\n \n     UX // would be nice if the inviter got a message if the email couldn't be sent.\n     globals.sendEmail(email, request.siteId)\n-    request.dao.insertInvite(invite)\n+    dao.insertInvite(invite)\n \n     Good(invite)\n   }\n@@ -240,24 +246,28 @@ class InviteController @Inject()(cc: ControllerComponents, edContext: EdContext)\n   // This logs in via a GET request. [GETLOGIN]\n   //\n   def acceptInvite(secretKey: String): Action[Unit] = GetActionIsLogin { request =>\n+    import request.dao\n     // Below, we accept invites already sent, even if SSO now enabled. (Makes sense? Or not?\n     // Or config option?) However, rejected here: (4RBKA20).\n \n-    val (newUser, invite, alreadyAccepted) = request.dao.acceptInviteCreateUser(\n+    val (newUser, invite, alreadyAccepted) = dao.acceptInviteCreateUser(\n       secretKey, request.theBrowserIdData)\n \n-    request.dao.pubSub.userIsActive(request.siteId, newUser.briefUser, request.theBrowserIdData)\n+    dao.pubSub.userIsActive(request.siteId, newUser.briefUser, request.theBrowserIdData)\n     val (_, _, sidAndXsrfCookies) = createSessionIdAndXsrfToken(request.siteId, newUser.id)\n     val newSessionCookies = sidAndXsrfCookies\n \n     if (!alreadyAccepted) {\n       // Could try to ensure this happens also if the server crashes here? [retry-after-crash]\n-      val welcomeEmail = makeWelcomeSetPasswordEmail(newUser, request.host)\n-      request.dao.saveUnsentEmail(welcomeEmail) // COULD (should?) mark as sent, how?\n+      val settings = dao.getWholeSiteSettings()\n+      val welcomeEmail = makeWelcomeSetPasswordEmail(newUser, request.host,\n+            langCode = settings.languageCode)\n+      dao.saveUnsentEmail(welcomeEmail) // COULD (should?) mark as sent, how?\n       globals.sendEmail(welcomeEmail, request.siteId)\n \n-      val inviter = request.dao.getParticipant(invite.createdById) getOrDie \"DwE4KDEP0\"\n-      val inviteAcceptedEmail = makeYourInviteWasAcceptedEmail(request.host, newUser, inviter)\n+      val inviter = dao.getParticipant(invite.createdById) getOrDie \"DwE4KDEP0\"\n+      val inviteAcceptedEmail = makeYourInviteWasAcceptedEmail(\n+            request.host, newUser, inviter, langCode = settings.languageCode)\n       globals.sendEmail(inviteAcceptedEmail, request.siteId)\n       // COULD create a notification instead / too.\n     }\n@@ -315,12 +325,13 @@ class InviteController @Inject()(cc: ControllerComponents, edContext: EdContext)\n   }\n \n \n-  private def makeInvitationEmail(invite: Invite, inviterName: String,\n-        probablyUsername: String, siteHostname: String): Email = {\n+  import talkyard.server.emails.Emails\n \n-    val emailBody = views.html.invite.inviteEmail(\n-      inviterName = inviterName, siteHostname = siteHostname,\n-      probablyUsername = probablyUsername, secretKey = invite.secretKey, globals).body\n+  private def makeInvitationEmail(invite: Invite, inviterName: String,\n+          probablyUsername: String, siteHostname: String, langCode: St): Email = {\n+    val emailBody: St = Emails.inLanguage(langCode).inviteEmail(\n+          inviterName = inviterName, siteHostname = siteHostname,\n+          probablyUsername = probablyUsername, secretKey = invite.secretKey, globals)\n     Email(\n       EmailType.Invite,\n       createdAt = globals.now(),\n@@ -331,28 +342,30 @@ class InviteController @Inject()(cc: ControllerComponents, edContext: EdContext)\n   }\n \n \n-  private def makeWelcomeSetPasswordEmail(newUser: UserInclDetails, siteHostname: String) = {\n+  private def makeWelcomeSetPasswordEmail(newUser: UserInclDetails, siteHostname: St,\n+          langCode: St) = {\n     Email(\n       EmailType.InvitePassword,\n       createdAt = globals.now(),\n       sendTo = newUser.primaryEmailAddress,\n       toUserId = Some(newUser.id),\n       subject = s\"[$siteHostname] Welcome! Account created\",\n-      bodyHtmlText = (emailId) => views.html.invite.welcomeSetPasswordEmail(\n-      siteHostname = siteHostname, emailId = emailId, newUser.username, globals).body)\n+      bodyHtmlText = (emailId) => Emails.inLanguage(langCode).welcomeSetPasswordEmail(\n+      siteHostname = siteHostname, emailId = emailId, newUser.username, globals))\n   }\n \n \n-  def makeYourInviteWasAcceptedEmail(siteHostname: String, newUser: UserInclDetails, inviter: Participant)\n-        : Email = {\n+  private def makeYourInviteWasAcceptedEmail(\n+          siteHostname: St, newUser: UserInclDetails, inviter: Participant,\n+          langCode: LangCode): Email = {\n     Email(\n       EmailType.InviteAccepted,\n       createdAt = globals.now(),\n       sendTo = inviter.email,\n       toUserId = Some(inviter.id),\n       subject = s\"[$siteHostname] Your invitation for ${newUser.primaryEmailAddress} to join was accepted\",\n-      bodyHtmlText = (_) => views.html.invite.inviteAcceptedEmail(\n-        siteHostname = siteHostname, invitedEmailAddress = newUser.primaryEmailAddress).body)\n+      bodyHtmlText = (_) => Emails.inLanguage(langCode).inviteAcceptedEmail(\n+        siteHostname = siteHostname, invitedEmailAddress = newUser.primaryEmailAddress))\n   }\n }\n "
    },
    {
      "sha": "442dd95457b431f3735872e38b444602ec4893f6",
      "filename": "app/controllers/ResetPasswordController.scala",
      "status": "modified",
      "additions": 19,
      "deletions": 4,
      "changes": 23,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/app/controllers/ResetPasswordController.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/app/controllers/ResetPasswordController.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/controllers/ResetPasswordController.scala?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -71,7 +71,16 @@ class ResetPasswordController @Inject()(cc: ControllerComponents, edContext: EdC\n \n     anyUser match {\n       case Some(user) =>\n-        dieIf(user.email != emailOrUsername && user.theUsername != emailOrUsername, \"DwE0F21\")\n+        // This (TyE0F21J4). failed once — must have been mismatched case comparison?\n+        // The database lookup is lowercase (better do in db, maybe different\n+        // to-lowercase algorithm?).\n+        // So compare lowercase too (emailOrUnLower), + incl values in message.\n+        val emailOrUnLower = emailOrUsername.toLowerCase\n+        dieIf(user.email != emailOrUsername && user.theUsername != emailOrUsername &&\n+              user.email.toLowerCase != emailOrUnLower &&\n+              user.theUsername.toLowerCase != emailOrUnLower,\n+              \"TyE0F21J4\", o\"\"\"s$siteId: Specified email or username: '$emailOrUsername',\n+              actual: '${user.email}' and '${user.username}', user id ${user.id}\"\"\")\n         var isCreating = false\n         if (user.passwordHash.isDefined) {\n           logger.info(s\"s$siteId: Sending password reset email ${toWho(user)} [TyM2AKEG5]\")\n@@ -82,15 +91,21 @@ class ResetPasswordController @Inject()(cc: ControllerComponents, edContext: EdC\n         }\n         sendChangePasswordEmailTo(user, request, isCreating = isCreating)\n       case None =>\n-        logger.info(o\"\"\"s$siteId: Not sending password reset email to non-existing\n-             user or email address: $emailOrUsername\"\"\")\n         if (isEmailAddress) {\n           // Don't tell the user that this email address doesn't exist; that'd be a\n           // security issue. Just show the email sent page.\n+          logger.info(o\"\"\"s$siteId: Not sending password reset email to non-existing\n+               email address: $emailOrUsername\"\"\")\n         }\n         else {\n           // Usernames are publicly visible.\n-          throwForbidden(\"DwE4KFE03\", \"There is no user with that username\")\n+          // Unless user is unlisted?  [unlist_users]  Not impl.\n+          val settings = dao.getWholeSiteSettings()\n+          val notify = !settings.userMustBeAuthenticated\n+          logger.info(o\"\"\"s$siteId: Not sending password reset email to non-existing\n+               username: $emailOrUsername, and notifying=$notify hen about it\"\"\")\n+          throwForbiddenIf(notify, \"DwE4KFE03\",\n+                \"There is no user with that username\")\n         }\n     }\n "
    },
    {
      "sha": "081510592c92aa81b8646c9b917d394d5c1efed3",
      "filename": "app/controllers/UserController.scala",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/app/controllers/UserController.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/app/controllers/UserController.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/controllers/UserController.scala?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -437,9 +437,12 @@ class UserController @Inject()(cc: ControllerComponents, edContext: EdContext)\n   }\n \n \n-  private def throwForbiddenIfActivityPrivate(userId: UserId, requester: Option[Participant], dao: SiteDao): Unit = {\n+  private def throwForbiddenIfActivityPrivate(\n+          userId: UserId, requester: Opt[Pat], dao: SiteDao): U = {\n+    // Also browser side [THRACTIPRV]\n+    // Related idea: [unlist_users].\n     throwForbiddenIf(!maySeeActivity(userId, requester, dao),\n-      \"TyE4JKKQX3\", \"Not allowed to list activity for this user\")\n+          \"TyE4JKKQX3\", \"Not allowed to list activity for this user\")\n   }\n \n "
    },
    {
      "sha": "2e11700ae73a6ab89173753ead04835db20e6ef1",
      "filename": "app/debiki/Globals.scala",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/app/debiki/Globals.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/app/debiki/Globals.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/debiki/Globals.scala?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -248,7 +248,7 @@ class Globals(  // RENAME to TyApp? or AppContext? TyAppContext? variable name =\n   }\n \n   // Could rename to \"rendererVersion\".\n-  val applicationVersion = \"0.00.74\"  // later, read from some build config file\n+  val applicationVersion = \"0.00.76\"  // later, read from some build config file\n \n   def applicationSecret: String = _appSecret\n "
    },
    {
      "sha": "12519ea848c1fbea7cea5470a61860204109119a",
      "filename": "app/ed/server/http/DebikiRequest.scala",
      "status": "modified",
      "additions": 33,
      "deletions": 15,
      "changes": 48,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/app/ed/server/http/DebikiRequest.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/app/ed/server/http/DebikiRequest.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/ed/server/http/DebikiRequest.scala?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -232,25 +232,48 @@ abstract class AuthnReqHeader extends SomethingToRateLimit {\n       \"DwE2KTES7\", \"No sort-order-offset specified\")\n \n \n-  /** If listing topics, the page query tells which topics to find. (E.g. for the forum topic list.)\n+  /** If listing topics, the page query tells which topics to find.  [pg_sort_ord]\n+    * (E.g. for the forum topic list.)\n     */\n   def parsePageQuery(): Option[PageQuery] = {\n-    val sortOrderStr = queryString.getFirst(\"sortOrder\") getOrElse { return None }\n-    def anyDateOffset = queryString.getLong(\"olderThan\") map (new ju.Date(_))\n+    val orderOffset = ListPagesQueryParser.parseOrderOffset(queryString) getOrElse {\n+      return None\n+    }\n+    val pageFilter = parsePageFilter()\n \n+    Some(PageQuery(orderOffset, pageFilter,\n+      // Later: Let user preferences override, if is staff. [8WK4SD7]\n+      includeAboutCategoryPages = siteSettings.showCategories))\n+  }\n+\n+\n+  def parsePageFilter(): PageFilter = {\n+    val filterParamSt = queryString.getFirst(\"filter\")\n+    ListPagesQueryParser.parsePageFilter(filterParamSt, includeDeleted = isStaff)\n+  }\n+\n+}\n+\n+\n+\n+object ListPagesQueryParser {\n+\n+  def parseOrderOffset(params: FormInpReader): Opt[PageOrderOffset] = {\n+    val sortOrderStr = params.getFirst(\"sortOrder\") getOrElse { return None }\n+    def anyDateOffset: Opt[ju.Date] = params.getLong(\"olderThan\") map (new ju.Date(_))\n     val orderOffset: PageOrderOffset = sortOrderStr match {\n       case \"ByBumpTime\" =>\n         PageOrderOffset.ByBumpTime(anyDateOffset)\n       case \"ByCreatedAt\" =>\n         PageOrderOffset.ByCreatedAt(anyDateOffset)\n       case \"ByScore\" =>\n-        val scoreStr = queryString.getFirst(\"maxScore\")\n-        val periodStr = queryString.getFirst(\"period\")\n+        val scoreStr = params.getFirst(\"maxScore\")\n+        val periodStr = params.getFirst(\"period\")\n         val period = periodStr.flatMap(TopTopicsPeriod.fromIntString) getOrElse TopTopicsPeriod.Month\n         val score = scoreStr.map(_.toFloatOrThrow(\"EdE28FKSD3\", \"Score is not a number\"))\n         PageOrderOffset.ByScoreAndBumpTime(offset = score, period)\n       case \"ByLikes\" =>\n-        def anyNumOffset = queryString.getInt(\"num\") // CLEAN_UP rename 'num' to 'maxLikes'\n+        def anyNumOffset = params.getInt(\"num\") // CLEAN_UP rename 'num' to 'maxLikes'\n         (anyNumOffset, anyDateOffset) match {\n           case (Some(num), Some(date)) =>\n             PageOrderOffset.ByLikesAndBumpTime(Some(num, date))\n@@ -261,17 +284,12 @@ abstract class AuthnReqHeader extends SomethingToRateLimit {\n         }\n       case x => throwBadReq(\"DwE05YE2\", s\"Bad sort order: `$x'\")\n     }\n-\n-    val pageFilter = parsePageFilter()\n-\n-    Some(PageQuery(orderOffset, pageFilter,\n-      // Later: Let user preferences override, if is staff. [8WK4SD7]\n-      includeAboutCategoryPages = siteSettings.showCategories))\n+    Some(orderOffset)\n   }\n \n \n-  def parsePageFilter(): PageFilter =\n-    queryString.getFirst(\"filter\") match {\n+  def parsePageFilter(filterParamSt: Opt[St], includeDeleted: Bo): PageFilter =\n+    filterParamSt match {\n       case None | Some(\"ShowAll\") =>\n         PageFilter(PageFilterType.AllTopics, includeDeleted = false)\n       case Some(\"ShowWaiting\") =>\n@@ -281,7 +299,7 @@ abstract class AuthnReqHeader extends SomethingToRateLimit {\n         // but that'd break the end-to-end-tests [4UKDWT20]. The list-deleted-topics option is\n         // hidden for non-staff people anyway, in the UI. [2UFKBJ73]\n         // Or maybe set incl-deleted = true anyway, and let people list their own deleted topics?\n-        PageFilter(PageFilterType.AllTopics, includeDeleted = isStaff)\n+        PageFilter(PageFilterType.AllTopics, includeDeleted = includeDeleted)\n       case Some(x) =>\n         throwBadRequest(\"DwE5KGP8\", s\"Bad topic filter: $x\")\n     }"
    },
    {
      "sha": "4e97191495f1ab904a8f17288597b7baf67bf6f1",
      "filename": "app/talkyard/server/api/ListController.scala",
      "status": "modified",
      "additions": 20,
      "deletions": 5,
      "changes": 25,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/app/talkyard/server/api/ListController.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/app/talkyard/server/api/ListController.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/talkyard/server/api/ListController.scala?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -102,6 +102,23 @@ class ListController @Inject()(cc: ControllerComponents, edContext: EdContext)\n               (isAuthorWaiting, isOpen, pageTypes)\n           }\n \n+    // Later: Maybe reuse ListPagesQueryParser, break out FormInpReader to\n+    // trait ParamsParser?  [pg_sort_ord]\n+    val pageSortOrder = parseOptSt(listQueryJson, \"sortOrder\").getOrElse(\"\") match {\n+      case \"ActiveFirst\" =>   // internal name: \"ByBumpedAtDesc\"\n+        PageOrderOffset.ByBumpTime(offset = None)\n+      case \"NewestFirst\" =>   // internal name: \"ByCreatedAtDesc\"\n+        PageOrderOffset.ByCreatedAt(offset = None)\n+      //case \"ByOpLikesDesc\" =>\n+      //  PageOrderOffset.ByLikesAndBumpTime(offset = None)\n+      //case \"ByTotLikesDesc\" =>\n+      //  PageOrderOffset.ByLikesAndBumpTime(offset = None)\n+      case \"PopularFirst\" | _ =>  // internal name: \"ByScoreDescThenBumpedAtDesc\" ?\n+        // Score and bump time, if nothing else specified. [TyT025WKRGJ]\n+        PageOrderOffset.ByScoreAndBumpTime(offset = None, TopTopicsPeriod.Week)\n+    }\n+\n+    //val limit = parseOptI32(listQueryJson, \"limit\")\n \n     def nothingFound = ThingsFoundJson.makePagesFoundListResponse(Nil, dao, pretty)\n \n@@ -128,17 +145,15 @@ class ListController @Inject()(cc: ControllerComponents, edContext: EdContext)\n \n     listWhat match {\n       case Pages =>\n-        val pageQuery = PageQuery(\n-              // Score and bump time, if nothing else specified. [TyT025WKRGJ]\n-              PageOrderOffset.ByScoreAndBumpTime(offset = None, TopTopicsPeriod.Week),\n+        val pageQuery = PageQuery(pageSortOrder,\n               PageFilter(PageFilterType.AllTopics, includeDeleted = false),\n               includeAboutCategoryPages = false)\n \n         // Just for now: get some more topics, if we're filtering, so less\n         // likely we'll get 0 back.\n-        SHOULD; UX; REMINDER // 2021-03-15 Move limit to API param + SQL query.\n+        SHOULD; UX; REMINDER // 2021-05-01 Move limit to API param + SQL query.\n         val limit = (isAuthorWaitingFilter.isDefined\n-              || isOpenFilter.isDefined || pageTypeFilter.nonEmpty) ? 22 | 12\n+              || isOpenFilter.isDefined || pageTypeFilter.nonEmpty) ? 62 | 18\n \n         var topics = dao.listMaySeeTopicsInclPinned(catOrRootCat.id, pageQuery,\n               includeDescendantCategories = true, authzCtx, limit = limit)"
    },
    {
      "sha": "b49b7ba3e780fd92004495ac06da9fe75b7f8016",
      "filename": "app/talkyard/server/emails/Emails.scala",
      "status": "added",
      "additions": 100,
      "deletions": 0,
      "changes": 100,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/app/talkyard/server/emails/Emails.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/app/talkyard/server/emails/Emails.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/talkyard/server/emails/Emails.scala?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -0,0 +1,100 @@\n+/**\n+ * Copyright (c) 2021 Kaj Magnus Lindberg\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n+ */\n+\n+package talkyard.server.emails\n+\n+import com.debiki.core._\n+// import play.twirl.api.HtmlFormat.{Appendable => p_TwirlHtml}\n+\n+\n+\n+object Emails {\n+  def inLanguage(lang: St): EmailsOneLang = {\n+    lang match {\n+      case \"pl_PL\" => EmailsInPolish\n+      case _ => EmailsInEnglish\n+    }\n+  }\n+}\n+\n+\n+\n+trait EmailsOneLang {\n+  def inviteEmail(inviterName: St, siteHostname: St, probablyUsername: St,\n+        secretKey: St, globals: debiki.Globals): St\n+\n+  def inviteAcceptedEmail(siteHostname: St, invitedEmailAddress: St): St\n+\n+  def welcomeSetPasswordEmail(siteHostname: St, emailId: St, username: St,\n+        globals: debiki.Globals): St\n+}\n+\n+\n+\n+object EmailsInEnglish extends EmailsOneLang {\n+\n+  // Would want to avoid repeating all param names, and instead just reference\n+  // views.html.invite.inviteEmail.apply directly? But couldn't get that\n+  // working (obscure compilation errors). See \"won't compile\" below, oh well.\n+  //\n+  def inviteEmail(inviterName: St, siteHostname: St, probablyUsername: St,\n+        secretKey: St, globals: debiki.Globals): St =\n+    // Won't compile: views.html.invite.inviteEmail.apply _\n+    // even if returns p_TwirlHtml instead of St.\n+    views.html.invite.inviteEmail(\n+          inviterName = inviterName, siteHostname = siteHostname,\n+          probablyUsername = probablyUsername, secretKey = secretKey, globals).body\n+\n+  def inviteAcceptedEmail(siteHostname: St, invitedEmailAddress: St): St =\n+    views.html.invite.inviteAcceptedEmail(\n+          siteHostname = siteHostname, invitedEmailAddress = invitedEmailAddress).body\n+\n+  def welcomeSetPasswordEmail(siteHostname: St, emailId: St, username: St,\n+        globals: debiki.Globals): St =\n+    views.html.invite.welcomeSetPasswordEmail(\n+          siteHostname = siteHostname, emailId = emailId, username = username,\n+          globals).body\n+\n+}\n+\n+\n+\n+object EmailsInPolish extends EmailsOneLang {\n+  // Would want to just import or return the package instead of\n+  // having to redeclare all fns. Maybe will work in [Scala_3]?\n+  // If packages work as interfaces for all classes and fns therein?\n+  // At least should be doable with [Scala_3] macros?\n+\n+  import talkyard.server.emails.transl.pl_PL.html\n+\n+  def inviteEmail(inviterName: St, siteHostname: St, probablyUsername: St,\n+        secretKey: St, globals: debiki.Globals): St =\n+    html.inviteEmail(\n+          inviterName = inviterName, siteHostname = siteHostname,\n+          probablyUsername = probablyUsername, secretKey = secretKey, globals).body\n+\n+  def inviteAcceptedEmail(siteHostname: St, invitedEmailAddress: St): St =\n+    html.inviteAcceptedEmail(\n+          siteHostname = siteHostname, invitedEmailAddress = invitedEmailAddress).body\n+\n+  def welcomeSetPasswordEmail(siteHostname: St, emailId: St, username: St,\n+        globals: debiki.Globals): St =\n+    html.welcomeSetPasswordEmail(\n+          siteHostname = siteHostname, emailId = emailId, username = username,\n+          globals).body\n+\n+}"
    },
    {
      "sha": "73341356604f69b985bd89136571ca178dce0424",
      "filename": "app/talkyard/server/emails/transl",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/app/talkyard/server/emails/transl",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/app/talkyard/server/emails/transl",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/talkyard/server/emails/transl?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -0,0 +1 @@\n+../../../../modules/ty-translations/emails\n\\ No newline at end of file"
    },
    {
      "sha": "fb5d31a2c6076a0ea134fc3d742efa81bc50a6da",
      "filename": "build.sbt",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/build.sbt",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/build.sbt",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/build.sbt?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -124,6 +124,11 @@ def mainSettings = List(\n   // ./tests/, namely security/ and e2e/, and having both ./test/ and ./tests/ seems confusing.\n   scalaSource in Test := { (baseDirectory in Test)(_ / \"tests\" / \"app\") }.value,\n \n+  // This compiles language specific email templates in:\n+  // talkyard.server.emails.transl.nn_NN.\n+  sourceDirectories in (Compile, TwirlKeys.compileTemplates) :=\n+        Seq({ (baseDirectory in Compile)(_ / \"app\") }.value),\n+\n   // Silhouette needs com.atlassian.jwt:jwt-core and jwt-api, but there's a problem:\n   // \"\"\"the problem is that the jwt-lib is hosted on bintray.com and then mirrored to\n   // the typesafe.com repository. It seems that the typesafe repository uses a redirect"
    },
    {
      "sha": "e682dfcd014e02e0d643e56446bdb4af267e560c",
      "filename": "client/app-more/users/user-activity.more.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/client/app-more/users/user-activity.more.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/client/app-more/users/user-activity.more.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-more/users/user-activity.more.ts?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -85,6 +85,7 @@ export const UsersActivity = createFactory<any, any>({\n \n \n function isHiddenForMe(me: Myself, user: UserInclDetails): boolean[] {\n+  // There's also a server side check: [THRACTIPRV].\n   const isStaffOrSelf = isStaff(me) || user.id === me.id;\n   const hiddenForMe = user.seeActivityMinTrustLevel > me.trustLevel && !isStaffOrSelf;\n   return [isStaffOrSelf, hiddenForMe];"
    },
    {
      "sha": "33e79b55c399cd6049279de244bdb8156d6df1e3",
      "filename": "client/app-slim/forum/forum.styl",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/client/app-slim/forum/forum.styl",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/client/app-slim/forum/forum.styl",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-slim/forum/forum.styl?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -602,7 +602,7 @@ td.dw-tpc-activity\n           color: hsl(0, 0%, 76%);\n \n         .icon-attention-circled:before\n-          color: hsl(0, 0%, 70%);\n+          color: hsl(0, 0%, 69%);\n           font-size: 16px;\n \n         .icon-idea:before\n@@ -624,7 +624,7 @@ td.dw-tpc-activity\n \n         .icon-ok:before\n           color: hsl(0, 0%, 78%);\n-          margin: 0 6px 0 0;\n+          margin: 0 7px 0 0;\n           position: relative;\n           left: -1px;\n "
    },
    {
      "sha": "8bdbcbf213114ec20682b1f69bf8c5d548ffcf85",
      "filename": "client/app-slim/forum/forum.ts",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/client/app-slim/forum/forum.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/client/app-slim/forum/forum.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-slim/forum/forum.ts?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -1662,6 +1662,16 @@ function makeTitle(topic: Topic, className: string, settings: SettingsVisibleCli\n         : t.ft.TitleDone;\n       iconClass = 'icon-check';\n     }\n+    else if (topic.pageRole === PageRole.Problem && topic.answerPostUniqueId) {\n+      // A problem with a solution post — similar to a question plus answer.\n+      // UX COULD use a \"Problem solved\" tooltip text instead of \"Question ...\".\n+      tooltip = t.d.TooltipQuestSolved;\n+      // Use the same icon as for Question topics with an answer selected\n+      // — in most cases, Problem topics with a solution accepted,\n+      // might as well have been posted as questions + answers; using different\n+      // icons just adds extra clutter & \"brain noise\"? [ans_solved_icon]\n+      iconClass = 'icon-ok';\n+    }\n     else if (!showIcons) {\n       // Then don't show icons, unless done/fixed.\n     }"
    },
    {
      "sha": "2a49d601d3c854250fb8fddf7e0f51bb46f8d78f",
      "filename": "client/app-slim/oop-methods.ts",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/client/app-slim/oop-methods.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/client/app-slim/oop-methods.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-slim/oop-methods.ts?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -1466,6 +1466,12 @@ export function page_getUnsolvedIcon(page: Page): St {\n \n \n export function page_getSolvedIcon(page: Page): St {\n+  // Actually, use the same icon for both solutions to problems,  [ans_solved_icon]\n+  // and answers to questions — it's not that interesting if originally\n+  // the topic was phrased as a question, or problem? What matters\n+  // is that it's been handled, done, right.\n+  return 'icon-ok-circled c_Solved';\n+  /*\n   switch (page.pageRole) {\n     case PageRole.Question:\n       return 'icon-ok-circled c_Solved';\n@@ -1475,7 +1481,7 @@ export function page_getSolvedIcon(page: Page): St {\n     case PageRole.Idea:\n     default:\n       return 'icon-check c_Solved';\n-  }\n+  }*/\n }\n \n "
    },
    {
      "sha": "b921ed4818d254cea0bb74e238685290c926c132",
      "filename": "client/app-slim/page/discussion.ts",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/client/app-slim/page/discussion.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/client/app-slim/page/discussion.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-slim/page/discussion.ts?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -130,9 +130,11 @@ export const TitleBodyComments = createComponent({\n     }\n \n     if (page.pageRole === PageRole.Problem) {\n-      let doneOrSolved = t.done;\n+      let doneOrSolvedText = t.done;\n+      let doneOrSolvedIcon = doneIcon;\n       if (page.pageAnsweredAtMs) {\n-        doneOrSolved = \"solved\";  // I18N\n+        doneOrSolvedText = \"solved\";  // I18N\n+        doneOrSolvedIcon = solvedIcon;  // [ans_solved_icon]\n         props4 = activeProps;\n       }\n       else if (page.pageDoneAtMs) {\n@@ -151,7 +153,7 @@ export const TitleBodyComments = createComponent({\n           r.li(props1, problemIcon, '= ' + t.pds.aProblem),\n           r.li(props2, plannedIcon, '= ' + t.pds.planToFix),\n           r.li(props3, startedIcon, '= ' + t.started),\n-          r.li(props4, doneIcon, '= ' + doneOrSolved)) };\n+          r.li(props4, doneOrSolvedIcon, '= ' + doneOrSolvedText)) };\n     }\n \n     if (page.pageRole === PageRole.Idea) {\n@@ -1685,7 +1687,7 @@ export const PostHeader = createComponent({\n \n     const linkFn = abbreviate ? 'span' : 'a';\n \n-    const anySolutionIcon = page.pageRole === PageRole.Question &&\n+    const anySolutionIcon = page_canBeSolved(page) &&\n         post.uniqueId === page.pageAnswerPostUniqueId\n       ? r.span({ className: 'esH_solution icon-ok-circled', title: t.Solution })\n       : null;"
    },
    {
      "sha": "451f8a8e350bbc21cae6605cfc57e78d9be5656f",
      "filename": "client/app-slim/page/posts.styl",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/client/app-slim/page/posts.styl",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/client/app-slim/page/posts.styl",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-slim/page/posts.styl?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -828,6 +828,10 @@ html:not(.mouse) .dw-rr\n   &.icon-ok-circled:before\n     margin-left: 0;\n \n+.esH_solution + .esAvtr\n+  // The (v) solved icon can be harder to notice, if too close to the avatar.\n+  margin-left: 2px;\n+\n .dw-solved-by\n   float: left;\n   margin: 15px 10px 19px 0;"
    },
    {
      "sha": "a4cc69220691a8f26797a553dc122eb80710dcd3",
      "filename": "client/app-staff/admin/admin-app.staff.ts",
      "status": "modified",
      "additions": 9,
      "deletions": 3,
      "changes": 12,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/client/app-staff/admin/admin-app.staff.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/client/app-staff/admin/admin-app.staff.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-staff/admin/admin-app.staff.ts?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -1463,11 +1463,17 @@ const FeatureSettings = createFactory({\n         !isApiEnabled ? null :\n               TipsLink({ to: linkToAdminApi() }, \"Jump to API settings page ...\"),\n \n-        // Move these CORS settings to the API tab, later.\n-        !isApiEnabled ? null : Setting2(props, {\n+        // Maybe let people enable CORS without enabling API secrets?\n+        // In case they'd need to access public data only.\n+        Setting2(props, {\n           type: 'checkbox', className: 'e_EnbCors',\n           label: \"Enable Cross-Origin Resource Sharing (CORS)\",\n-          help: \"Lets other websites of yours, send API requests to this Talkyard site.\",\n+          help: rFr({},\n+            \"Lets other websites of yours send API requests to this Talkyard site. \",\n+            (isApiEnabled ? '' : rFr({},\n+                \"Currently \", r.b({}, \"you need to enalbe the API\"), \" (above)\"))),\n+          // Dont' hide completely — then people asks for help about how to enable it.\n+          disabled: !isApiEnabled,\n           getter: (s: Settings) => s.enableCors,\n           update: (newSettings: Settings, target) => {\n             newSettings.enableCors = target.checked;"
    },
    {
      "sha": "a13f0e71897dd7710e4b2f90578f8de387047122",
      "filename": "client/app-staff/admin/api-panel.staff.ts",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/client/app-staff/admin/api-panel.staff.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/client/app-staff/admin/api-panel.staff.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-staff/admin/api-panel.staff.ts?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -102,14 +102,23 @@ const ApiSecretItem = createComponent({\n   displayName: 'ApiSecretItem',\n \n   showSecret: function(secret: ApiSecret) {\n+    const userIdAndSecret = `tyid=2:${secret.secretKey}`;\n     util.openDefaultStupidDialog({\n       body: rFragment({},\n         r.p({},\n           \"Secret value: \", r.code({ className: 'e_SecrVal' }, secret.secretKey)),\n         r.p({},\n           \"cURL example: (note: includes the secret; don't send to anyone)\"),\n         r.pre({ style: { whiteSpace: 'pre-line' }},\n-          `curl --user tyid=2:${secret.secretKey} ${location.origin}/-/v0/ ...`)),\n+          `curl --user ${userIdAndSecret} ${location.origin}/-/v0/ping`),\n+        r.p({},\n+          \"This: \", r.code({}, 'tyid=2:..'), \" means user 2, which is Sysbot, \" +\n+          \"a built-in user that can be used for API requests.\"),\n+        r.p({},\n+          \"Here's Sysbot and the secret value, in a Basic Auth HTTP header, \" +\n+          \"base 64 encoded: (don't send to anyone!)\"),\n+        r.pre({},\n+          `Authorization: ${btoa(userIdAndSecret)}`)),\n       closeButtonTitle: \"Close\",\n     });\n   },"
    },
    {
      "sha": "caa5161ae62aa7112bcc4b32d2575ec98a7436eb",
      "filename": "decisions.adoc",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/decisions.adoc",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/decisions.adoc",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/decisions.adoc?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -381,3 +381,26 @@ the existing / any-future Scala GraphQL libs will make use of them in\n some nice more-type-safe ways.\n Or maybe shouldn't even be in the Scala app, maybe instead a separate server in Rust,\n optionally reading from a read-only replica rdb.\n+\n+\n+=== Use WebAssembly for plugins\n+\n+WebAssembly is \"future compatible\": If (parts of) the Talkyard app server ever\n+gets rewritten in another language, say, Rust, plugins written in WebAssembly\n+can be called from that new language too.\n+But if the plugins were instead in Java or Scala,\n+they couldn't easily be used from the new code.\n+\n+Browsers can run WebAssembly.\n+Deno can run WebAssembly natively: https://deno.land/manual/getting_started/webassembly.\n+GraalVM (JVM) can also run WebAssembly.\n+And Rust and Bash: https://docs.wasmtime.dev/lang.html.\n+There's a Scala interpreter: https://github.com/satabin/swam.\n+\n+Also: No GC, small code size.\n+\n+Rust and Typescript, well, AssemblyScript,\n+can be compiled to WebAssembly:\n+https://rustwasm.github.io and https://github.com/AssemblyScript/assemblyscript.\n+(But not Scala: https://github.com/scala-js/scala-js/issues/1747)\n+"
    },
    {
      "sha": "64587df28a6ac1829d29daa440fc4c31d6e28096",
      "filename": "docker-compose.yml",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/docker-compose.yml",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/docker-compose.yml",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/docker-compose.yml?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -22,6 +22,8 @@ services:\n       # Mount the config, scripts and styles, rather than relying on Docker's COPY,\n       # so Nginx can auto reload them after edits, without rebuilding the image.\n       # (The files are COPY:d too, so will work in Prod.)\n+      # [ty_v1] Rename to just sites-enabled, here and in prod too — remove\n+      # sites-enabled-auto-gen.\n       - ./images/web/sites-enabled-manual/:/etc/nginx/sites-enabled-manual/:ro\n       - ./images/web/ed-lua/:/opt/talkyard/lua/:ro\n       - ./images/web/assets/:/opt/talkyard/assets/:ro   # [NGXSTC]"
    },
    {
      "sha": "faf53596a81af0dfedcd57eecbc9203b63b037c5",
      "filename": "docs/maybe-do-later.txt",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/docs/maybe-do-later.txt",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/docs/maybe-do-later.txt",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/docs/maybe-do-later.txt?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -60,6 +60,11 @@ Rename User to Participant and User to Member.  Participant = Guest or Member, M\n Rename variables named like \"member\" to \"user\", \"memberOrGroup\" to \"member\", \"user\" to \"participant\"\n Rename \"indie\" to user\" and \"people\" to \"members\"\n \n+[unlist_users]  Unlisted / less-visible / \"hidden\"? users?\n+So cannot see / list users unless has access to the same categories, or is in\n+the same group(s) or high enough trust level or sth like that?\n+\n+\n [security]\n prevent usernames from being displayed in Unicode, if mixed charsets used,\n e.g. Latin + Cryllic = facebooĸ.com  (homograph attacks)."
    },
    {
      "sha": "ce236411eefd581a0dde0819d83df4e7427d2cb2",
      "filename": "docs/session-in-local-storage.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/docs/session-in-local-storage.md",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/docs/session-in-local-storage.md",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/docs/session-in-local-storage.md?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -15,7 +15,7 @@ Here it is (the reply):\n https://dev.to/jondubois/comment/373l,\n \n here's a copy (from 2019-12-06),\n-  Copyright Jonathan Gros-Dubois:  ../modules/ty-cla/docs/session-in-local-storage.md\n+  Copyright Jonathan Gros-Dubois:  ../modules/ty-translations/docs/session-in-local-storage.md\n \n Another reply about this, also by Jonathan Gros-Dubois:\n https://dev.to/jondubois/comment/3749"
    },
    {
      "sha": "b2e0d465b4dc4cd4ceb4630b0e0e0879dfa80432",
      "filename": "gulpfile.js",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/gulpfile.js",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/gulpfile.js",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/gulpfile.js?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -364,7 +364,7 @@ gulp.task('cleanTranslations', () => {\n       });\n });\n \n-// Transpiles translations/(language-code)/i18n.ts to one-js-file-per-source-file\n+// Transpiles ty-translations/ui/(language-code)/i18n.ts to one-js-file-per-source-file\n // in public/res/translations/... .\n gulp.task('compileTranslations', () => {\n   const stream = gulp.src(['translations/**/*.ts'])"
    },
    {
      "sha": "4b3b69ab16116d0c165df54ecd65748d3efcbb3f",
      "filename": "images/web/ed-lua/init-by-lua-file.lua",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/images/web/ed-lua/init-by-lua-file.lua",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/images/web/ed-lua/init-by-lua-file.lua",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/images/web/ed-lua/init-by-lua-file.lua?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -106,7 +106,8 @@ require(\"resty.acme.autossl\").init({\n     storage_config = {\n         host = 'cache',  -- the service name in docker-compose.yml\n         port = 6379,     -- the default Redis port\n-        database = 0,    -- Ty uses just one Redis database\n+        database = 0,    -- Ty uses just one Redis database  [ty_v1] use on dedicated\n+                         -- Redis for HTTPS certs\n         auth = nil,      -- no password, Redis not publ accessible\n     },\n })"
    },
    {
      "sha": "060d871d879e4551563c19620c1f1da34d28af42",
      "filename": "images/web/server-ssl.conf",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/images/web/server-ssl.conf",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/images/web/server-ssl.conf",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/images/web/server-ssl.conf?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -40,11 +40,8 @@ ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDS\n ssl_prefer_server_ciphers off;\n \n \n-# Test the SSL config here:   https://www.ssllabs.com/ssltest/\n-# should result in A+ grade.\n-# Update, 2021: Now, because of TLS 1.0 and 1.1, ssllabs capped the grade to B\n-# — but what happens hereafter with 1.0 and 1.1 disabled?\n-# https://www.ssllabs.com/ssltest/analyze.html?d=www.talkyard.io\n+# Test the TLS config here:   https://www.ssllabs.com/ssltest/,  should result\n+# in A+ grade (note: for that, SSL, TLS 1.0 and 1.1 need to be (and are) disabled).\n \n \n # ------ Always HTTPS"
    },
    {
      "sha": "48baecea18eaa3c03e872c7530312c68d5963112",
      "filename": "images/web/sites-enabled-manual/default-server.conf",
      "status": "modified",
      "additions": 12,
      "deletions": 6,
      "changes": 18,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/images/web/sites-enabled-manual/default-server.conf",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/images/web/sites-enabled-manual/default-server.conf",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/images/web/sites-enabled-manual/default-server.conf?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -55,15 +55,21 @@ server {\n   ssl_certificate_by_lua_block {\n     -- Cannot access ngx.var.http_host (HTTP headers not yet decrypted)\n     -- or ngx.var.server_name here.\n-    ngx.log(ngx.DEBUG, \"Should gen cert?\")\n+    ngx.log(ngx.DEBUG, \"Should hostname have cert?\")\n     require(\"resty.acme.autossl\").ssl_certificate()\n   }\n \n-  location /.well-known/acme-challenge {\n-    content_by_lua_block {\n-      require(\"resty.acme.autossl\").serve_http_challenge()\n-    }\n-  }\n+  ## For generating HTTPS certs via LetsEncrypt, TLS-ALPN-01 challenge\n+  ## (which works over HTTPS, unlike the HTTP-01 challenge).\n+  ## Disabled in nginx.conf, because experimental in the lua-resty-acme plugin.\n+  #location /.well-known/acme-challenge {\n+  #  content_by_lua_block {\n+  #    ngx.log(ngx.INFO, \"Replying to ACME TLS-ALPN-01 challenge\")\n+  #            -- Cannot access here?:\n+  #            -- \", server name: \" ..  ngx.var.server_name ..  \" [TyNACMEALPN01]\")\n+  #    require(\"resty.acme.autossl\").serve_tls_alpn_challenge()\n+  #  }\n+  #}\n \n   include /etc/nginx/server-ssl.conf;\n   include /etc/nginx/server-locations.conf;"
    },
    {
      "sha": "f902053b9c5ae5298c8050b13da177c53457b2c5",
      "filename": "modules/ed-core/src/main/scala/com/debiki/core/package.scala",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/modules/ed-core/src/main/scala/com/debiki/core/package.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/modules/ed-core/src/main/scala/com/debiki/core/package.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/modules/ed-core/src/main/scala/com/debiki/core/package.scala?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -148,6 +148,8 @@ package object core {\n \n   type SiteVersion = Int\n \n+  type LangCode = St  // [Scala_3] opaque type\n+\n   type LoginId = String\n \n   type Pat = Participant"
    },
    {
      "sha": "38c6d6b2dc97c86a013c593d26b439216db601dd",
      "filename": "modules/ed-versions",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/modules/ed-versions?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -1 +1 @@\n-Subproject commit 0a47cd4e416a56a040f7cd1b8393b4a97338a670\n+Subproject commit 38c6d6b2dc97c86a013c593d26b439216db601dd"
    },
    {
      "sha": "6acad10fa9094c01782d0776893be3c9fe2e0d50",
      "filename": "modules/ty-cla",
      "status": "removed",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/modules/ty-cla?ref=635c747bc8cfcdce7b8d0e3b4ab0df7ce98c15a8",
      "patch": "@@ -1 +0,0 @@\n-Subproject commit 6acad10fa9094c01782d0776893be3c9fe2e0d50"
    },
    {
      "sha": "6e617e1e2dd688a604704222b3edab69843c908b",
      "filename": "modules/ty-dao-rdb/src/main/scala/com/debiki/dao/rdb/AuthnSiteTxMixin.scala",
      "status": "modified",
      "additions": 19,
      "deletions": 19,
      "changes": 38,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/modules/ty-dao-rdb/src/main/scala/com/debiki/dao/rdb/AuthnSiteTxMixin.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/modules/ty-dao-rdb/src/main/scala/com/debiki/dao/rdb/AuthnSiteTxMixin.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/modules/ty-dao-rdb/src/main/scala/com/debiki/dao/rdb/AuthnSiteTxMixin.scala?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -113,27 +113,27 @@ trait AuthnSiteTxMixin extends SiteTransaction {\n           ds.confFileIdpId.trimOrNullVarchar,\n           ds.idpId.orNullInt,\n           ds.idpUserId,\n-          ds.idpRealmId.orNullVarchar,\n-          ds.idpRealmUserId.orNullVarchar,\n-          ds.issuer.orNullVarchar,\n-          ds.username.orNullVarchar,\n-          ds.nickname.orNullVarchar,\n-          ds.firstName.orNullVarchar,\n-          ds.middleName.orNullVarchar,\n-          ds.lastName.orNullVarchar,\n-          ds.fullName.orNullVarchar,\n-          ds.email.orNullVarchar,\n+          ds.idpRealmId.trimOrNullVarchar,\n+          ds.idpRealmUserId.trimOrNullVarchar,\n+          ds.issuer.trimOrNullVarchar,\n+          ds.username.trimOrNullVarchar,\n+          ds.nickname.trimOrNullVarchar,\n+          ds.firstName.trimOrNullVarchar,\n+          ds.middleName.trimOrNullVarchar,\n+          ds.lastName.trimOrNullVarchar,\n+          ds.fullName.trimOrNullVarchar,\n+          ds.email.trimOrNullVarchar,\n           ds.isEmailVerifiedByIdp.orNullBoolean,\n-          ds.phoneNumber.orNullVarchar,\n+          ds.phoneNumber.trimOrNullVarchar,\n           ds.isPhoneNumberVerifiedByIdp.orNullBoolean,\n-          ds.profileUrl.orNullVarchar,\n-          ds.websiteUrl.orNullVarchar,\n-          ds.avatarUrl.orNullVarchar,\n-          ds.gender.orNullVarchar,\n-          ds.birthdate.orNullVarchar,\n-          ds.timeZoneInfo.orNullVarchar,\n-          ds.country.orNullVarchar,\n-          ds.locale.orNullVarchar,\n+          ds.profileUrl.trimOrNullVarchar,\n+          ds.websiteUrl.trimOrNullVarchar,\n+          ds.avatarUrl.trimOrNullVarchar,\n+          ds.gender.trimOrNullVarchar,\n+          ds.birthdate.trimOrNullVarchar,\n+          ds.timeZoneInfo.trimOrNullVarchar,\n+          ds.country.trimOrNullVarchar,\n+          ds.locale.trimOrNullVarchar,\n           ds.isRealmGuest.orNullBoolean,\n           ds.lastUpdatedAtIdpAtSec.orNullI64,\n           ds.userInfoJson.orNullJson)"
    },
    {
      "sha": "de32e85c35d4b63936d7b39e076dfd28b5cfb8fb",
      "filename": "modules/ty-dao-rdb/src/main/scala/com/debiki/dao/rdb/Rdb.scala",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/modules/ty-dao-rdb/src/main/scala/com/debiki/dao/rdb/Rdb.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/modules/ty-dao-rdb/src/main/scala/com/debiki/dao/rdb/Rdb.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/modules/ty-dao-rdb/src/main/scala/com/debiki/dao/rdb/Rdb.scala?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -62,6 +62,7 @@ object Rdb {\n \n   implicit class PimpOptionWithNullInt64(opt: Opt[i64]) {\n     def orNullI64: AnyRef = opt.map(_.asAnyRef).getOrElse(NullI64)\n+    def orNullIn64: AnyRef = orNullI64\n   }\n \n   implicit class PimpOptionWithNullInt(opt: Option[Int]) {"
    },
    {
      "sha": "ab8a9543a24e4a67fe400d27f6a804c19165c17a",
      "filename": "modules/ty-translations",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/modules/ty-translations?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -0,0 +1 @@\n+Subproject commit ab8a9543a24e4a67fe400d27f6a804c19165c17a"
    },
    {
      "sha": "9ae7f0f370aaeb2d3e69746b5f42eaaa3160b27c",
      "filename": "s/d-cli",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/s/d-cli",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/s/d-cli",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/s/d-cli?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -33,7 +33,10 @@ fi\n \n # Set Java's user.home to /home/owner so sbt and Ivy will cache downloads there. [SBTHOME]\n # Actually not needed in this case? because gets set in the entrypoint.sh. Do anyway, won't hurt.\n-sudo docker-compose run --rm --service-ports $set_is_prod_test_env_var app \\\n+# Pass PLAY_HEAP_MEMORY_MB to both Play Framework in the Docker container via the env var,\n+# and to SBT via --mem.\n+sudo PLAY_HEAP_MEMORY_MB=$PLAY_HEAP_MEMORY_MB \\\n+  docker-compose run --rm --service-ports $set_is_prod_test_env_var app \\\n   /opt/sbt/bin/sbt \\\n   --mem $PLAY_HEAP_MEMORY_MB \\\n   -jvm-debug 9999 \\"
    },
    {
      "sha": "a350db5a6a1ff61140cf3149a155051e701ae10c",
      "filename": "s/release-canary.sh",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/s/release-canary.sh",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/s/release-canary.sh",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/s/release-canary.sh?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -133,6 +133,7 @@ git fetch\n git checkout master\n git merge --ff-only origin/master\n echo $release_version_tag >> version-tags.log\n+# The tag: edition (tyse), version and channel (regular).\n release_version_tag_w_ed_chan=\"tyse-$release_version_tag-regular\"\n git add version-tags.log\n git commit -m \"Release $release_version_tag_w_ed_chan.\"\n@@ -144,9 +145,9 @@ popd\n # Future tag name:\n # Need to include release channel in the Git tag, otherwise we'd try to push the\n # same tag to different branches, e.g. push  tyse-v0.2021.04-abc123def\n-# to both the tyse-v0-dev and tyse-v0-regular branches.  But now we push\n-# tyse-v0.2021.04-abc123def-dev  and  tyse-v0.2021.04-abc123def-regular\n-# instead — two different tags.\n+# to both the tyse-v0-dev and tyse-v0-regular branches — but then the last push\n+# would overwrite the first.  Instead, we push two different tags:\n+# tyse-v0.2021.04-abc123def-dev  and  tyse-v0.2021.04-abc123def-regular.\n git tag $release_version_tag_w_ed_chan $wip_version_tag\n \n # Legacy tag name: (don't incl in v1) [ty_v1]"
    },
    {
      "sha": "4b1674036e759aeed3987bc4f7da1d60b29cfb71",
      "filename": "tests/e2e/pub-api.ts",
      "status": "modified",
      "additions": 52,
      "deletions": 38,
      "changes": 90,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/tests/e2e/pub-api.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/tests/e2e/pub-api.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/pub-api.ts?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -73,7 +73,7 @@ type CategoryRef = string;\n type TagRef = string;\n type BadgeRef = string;\n \n-type SortOrder = 'PopularFirst' | 'ActiveFirst' | 'NewestFirst';\n+type PageSortOrder = 'PopularFirst' | 'ActiveFirst' | 'NewestFirst';\n type PageTypeSt = 'Question' | 'Problem' | 'Idea' | 'Discussion';\n \n type Unimplemented = undefined;\n@@ -447,7 +447,6 @@ interface GetQueryResults<T extends ThingFound> {\n interface ListQueryApiRequest {\n   // Either:\n   listQuery?: ListQuery;\n-  sortOrder?: SortOrder;\n \n   // Or:\n   continueAtScrollCursor?: ListResultsScrollCursor;\n@@ -467,6 +466,8 @@ interface ListQuery {\n   exactPrefix?: St;\n   lookWhere?: LookWhere;\n   filter?: QueryFilter;\n+  sortOrder?;\n+  limit?: Nr;\n }\n \n \n@@ -477,6 +478,7 @@ interface ListPagesQuery extends ListQuery {\n   listWhat: 'Pages';\n   lookWhere?: { inCategories: CategoryRef[] };\n   filter?: PageFilter;\n+  sortOrder?: PageSortOrder;\n }\n \n \n@@ -600,9 +602,9 @@ type ListResultsScrollCursor = Unimplemented;\n //      //inclFields: {\n //      //  numRepliesVisible: true,\n //      //},\n+//      sortOrder: 'PopularFirst',\n+//      limit: 5,\n //    }\n-//    sortOrder: 'PopularFirst',\n-//    limit: 5,\n //  }\n //\n // Response ex:\n@@ -751,48 +753,60 @@ type SearchResultsScrollCursor = Unimplemented;\n // Should Not implement this, unless clearly needed.\n // Still, good to think about in advance, so as not to paint oneself into a corner?\n //\n-//   /-/v0/batch(-search)?(-list)?(-get)?  {\n-//     batchQueries: [\n-//       getQuery: {\n-//         getWhat: 'Pages',\n-//         getRefs: [\n-//           'emburl:https://blog/a-blog-post':\n-//           'emburl:https://blog/another',\n-//           'emburl:https://blog/a-third',\n-//         ],\n-//         inclFields: {\n-//           numRepliesVisible: true,\n-//           numOrigPostLikeVotes: true,\n+//   /-/v0/batch-query {\n+//     batchQuery: {\n+//       // Maybe sth like:\n+//       //perQueryLimit: NN,\n+//       //this: mergeResultsHow:  ... ?? ..,\n+//       //or?: perQuerySortOrder:\n+//       //     totalSortOrder:\n+//\n+//       queryList: [\n+//         getQuery: {\n+//           getWhat: 'Pages',\n+//           getRefs: [\n+//             'emburl:https://blog/a-blog-post':\n+//             'emburl:https://blog/another',\n+//             'emburl:https://blog/a-third',\n+//           ],\n+//           inclFields: {\n+//             numRepliesVisible: true,\n+//             numOrigPostLikeVotes: true,\n+//           },\n //         },\n-//       },\n-//       getQuery: {\n-//         getWhat: 'Pages',\n-//         getRefs: [ ... ],\n-//         inclFields: {\n-//           someOtherField: true,\n+//\n+//         getQuery: {\n+//           getWhat: 'Pages',\n+//           getRefs: [ ... ],\n+//           inclFields: {\n+//             someOtherField: true,\n+//           },\n //         },\n-//       },\n-//       listQuery: {\n-//         listWhat: 'Members',\n-//         exactPrefix: 'jane_d',\n-//         lookWhere: { usernames: true },\n-//       },\n-//       listQuery: {\n-//         listWhat: 'Pages',\n-//         lookWhere: { inCategories: [catB, catC] },\n-//       },\n-//       searchQuery: {\n-//         findWhat: 'Posts',\n-//         freetext: \"how to feed an anteater that has climbed a tall tree\",\n-//       },\n-//     ],\n+//\n+//         listQuery: {\n+//           listWhat: 'Members',\n+//           exactPrefix: 'jane_d',\n+//           lookWhere: { usernames: true },\n+//         },\n+//\n+//         listQuery: {\n+//           listWhat: 'Pages',\n+//           lookWhere: { inCategories: [catB, catC] },\n+//         },\n+//\n+//         searchQuery: {\n+//           findWhat: 'Posts',\n+//           freetext: \"how to feed an anteater that has climbed a tall tree\",\n+//         },\n+//       ],\n+//     },\n //   }\n //\n // Response could be:\n //\n //   {\n //     origin: \"https://example.com\",\n-//     batchQueriesResults: [\n+//     batchQueryResults: [\n //       { getResults: ... },\n //       { getResults: ... },\n //       { listResults: ... },"
    },
    {
      "sha": "80d681c9955e904d27a098edf1eb44d13a4d0501",
      "filename": "tests/e2e/utils/ext-cors-site.html",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/tests/e2e/utils/ext-cors-site.html",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/tests/e2e/utils/ext-cors-site.html",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/utils/ext-cors-site.html?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -39,8 +39,7 @@\n     referrer: 'no-referrer',\n     // Don't follow redirects.\n     redirect: 'error',\n-    headers: {\n-    },\n+    headers: ps.headers || {},\n   };\n \n   if (method === 'POST') {"
    },
    {
      "sha": "2410b60251c5ac4f944ad0a764772552b5751c67",
      "filename": "tests/e2e/utils/pages-for.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/tests/e2e/utils/pages-for.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/tests/e2e/utils/pages-for.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/utils/pages-for.ts?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -3826,8 +3826,10 @@ export class TyE2eTestBrowser {\n           this.#br.pause(300);\n         }\n \n-        // Facebook asks if we want cookies — yes we do.\n-        const cookieYesSelector = '[data-testid=\"cookie-policy-banner-accept\"]';\n+        // Facebook asks if we want cookies — yes we do. And Facebook sometimes\n+        // renames the ok-cookies button.\n+        //const cookieYesSelector = '[data-testid=\"cookie-policy-banner-accept\"]';\n+        const cookieYesSelector = '[data-testid=\"cookie-policy-dialog-accept-button\"]';\n         if (this.isExisting(cookieYesSelector)) {\n           this.waitAndClick(cookieYesSelector);\n         }"
    },
    {
      "sha": "13529a59f9786a5bd500a5eeb68e45368c681012",
      "filename": "tests/e2e/utils/server.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/tests/e2e/utils/server.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/tests/e2e/utils/server.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/utils/server.ts?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -526,7 +526,7 @@ function fullTextSearch<T extends ThingFound>(ps: { origin: string, queryText: s\n \n \n function listQuery<T extends ThingFound>(\n-      ps: { origin: string, listQuery: ListQuery, sortOrder?: SortOrder },\n+      ps: { origin: string, listQuery: ListQuery, sortOrder?: PageSortOrder },\n       postPs: { fail?: boolean, apiRequesterId?: UserId, apiSecret?: string } = {})\n       : ListQueryResults<T> | string {\n   const url = ps.origin + '/-/v0/list';"
    },
    {
      "sha": "8a63624a9496e053b137026f2ea37ce298faba87",
      "filename": "tests/test-media",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/tests/test-media",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/tests/test-media",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/test-media?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -1 +1 @@\n-../modules/ty-cla/test-media\n\\ No newline at end of file\n+../modules/ty-translations/test-media\n\\ No newline at end of file"
    },
    {
      "sha": "2fae6f536e9f9429fa0a4bf4cd50001414e74db3",
      "filename": "translations/de_DE",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/translations/de_DE",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/translations/de_DE",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/translations/de_DE?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -1 +1 @@\n-../modules/ty-cla/translations/de_DE\n\\ No newline at end of file\n+../modules/ty-translations/ui/de_DE\n\\ No newline at end of file"
    },
    {
      "sha": "5af4f6e131d39a6da82bf6e280a2234cd83e7bd3",
      "filename": "translations/es_CL",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/translations/es_CL",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/translations/es_CL",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/translations/es_CL?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -0,0 +1 @@\n+../modules/ty-translations/ui/es_CL\n\\ No newline at end of file"
    },
    {
      "sha": "c13621e9f5a2c25f581700dc780c97d750f79bc5",
      "filename": "translations/es_CL/i18n.ts",
      "status": "removed",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/debiki/talkyard/blob/635c747bc8cfcdce7b8d0e3b4ab0df7ce98c15a8/translations/es_CL/i18n.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/635c747bc8cfcdce7b8d0e3b4ab0df7ce98c15a8/translations/es_CL/i18n.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/translations/es_CL/i18n.ts?ref=635c747bc8cfcdce7b8d0e3b4ab0df7ce98c15a8",
      "patch": "@@ -1 +0,0 @@\n-../../modules/ty-cla/translations/es_CL/i18n.ts\n\\ No newline at end of file"
    },
    {
      "sha": "1d6737220ec421f733184ea781ba736ec3d3c45e",
      "filename": "translations/he_IL",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/translations/he_IL",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/translations/he_IL",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/translations/he_IL?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -0,0 +1 @@\n+../modules/ty-translations/ui/he_IL\n\\ No newline at end of file"
    },
    {
      "sha": "0ab957d14f0cdbae53fd13e77cf44a0766534acf",
      "filename": "translations/he_IL/i18n.ts",
      "status": "removed",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/debiki/talkyard/blob/635c747bc8cfcdce7b8d0e3b4ab0df7ce98c15a8/translations/he_IL/i18n.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/635c747bc8cfcdce7b8d0e3b4ab0df7ce98c15a8/translations/he_IL/i18n.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/translations/he_IL/i18n.ts?ref=635c747bc8cfcdce7b8d0e3b4ab0df7ce98c15a8",
      "patch": "@@ -1 +0,0 @@\n-../../modules/ty-cla/translations/he_IL/i18n.ts\n\\ No newline at end of file"
    },
    {
      "sha": "4a0b02feeffcf0ae807c50f81b403338e46f08a4",
      "filename": "translations/i18n-README.md",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/translations/i18n-README.md",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/translations/i18n-README.md",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/translations/i18n-README.md?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -16,7 +16,7 @@ To add a new language:\n    and you can edit and save your new translation\n    (and still see the English version to the left).\n \n-3. Open a GitHub pull request to https://github.com/debiki/ty-cla (or send us\n+3. Open a GitHub pull request to https://github.com/debiki/ty-translations (or send us\n    the translation via email or something, that's also ok, although we prefer GitHub).\n \n 4. When done translating, the Talkyard developers (but not you, the translator) need to: [5JUKQR2]\n@@ -48,6 +48,9 @@ To add a new language:\n         - Edit `client/app/admin/admin-app.staff.ts`: add the language\n           to the select-language dropdown.\n \n+        - Edit `app/talkyard/server/emails/Emails.scala`, if any emails\n+          were translated.\n+\n         - Edit `Makefile`: add the language to the `prod_asset_bundle_files` list.\n \n     2. Build the translation bundles, for now: (although this builds other stuff too)"
    },
    {
      "sha": "3c6e1bfe6ebc8733cef6871525ac0b2b71864144",
      "filename": "translations/lv_LV",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/translations/lv_LV",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/translations/lv_LV",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/translations/lv_LV?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -1 +1 @@\n-../modules/ty-cla/translations/lv_LV\n\\ No newline at end of file\n+../modules/ty-translations/ui/lv_LV\n\\ No newline at end of file"
    },
    {
      "sha": "f4eef65c892fc9180b953cd0c4f45ed9c531d665",
      "filename": "translations/nl_NL",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/translations/nl_NL",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/translations/nl_NL",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/translations/nl_NL?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -0,0 +1 @@\n+../modules/ty-translations/ui/nl_NL\n\\ No newline at end of file"
    },
    {
      "sha": "b9b25778d92f72dee7a69ba00ff67cfaa7dbb257",
      "filename": "translations/nl_NL/i18n.ts",
      "status": "removed",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/debiki/talkyard/blob/635c747bc8cfcdce7b8d0e3b4ab0df7ce98c15a8/translations/nl_NL/i18n.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/635c747bc8cfcdce7b8d0e3b4ab0df7ce98c15a8/translations/nl_NL/i18n.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/translations/nl_NL/i18n.ts?ref=635c747bc8cfcdce7b8d0e3b4ab0df7ce98c15a8",
      "patch": "@@ -1 +0,0 @@\n-../../modules/ty-cla/translations/nl_NL/i18n.ts\n\\ No newline at end of file"
    },
    {
      "sha": "295e78c9092ef41d95b0bbc9eea236d6b20721ec",
      "filename": "translations/pl_PL",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/translations/pl_PL",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/translations/pl_PL",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/translations/pl_PL?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -0,0 +1 @@\n+../modules/ty-translations/ui/pl_PL\n\\ No newline at end of file"
    },
    {
      "sha": "d9b6e0a7a31ba866612b57d75ec6689ce6bc10d9",
      "filename": "translations/pl_PL/i18n.ts",
      "status": "removed",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/debiki/talkyard/blob/635c747bc8cfcdce7b8d0e3b4ab0df7ce98c15a8/translations/pl_PL/i18n.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/635c747bc8cfcdce7b8d0e3b4ab0df7ce98c15a8/translations/pl_PL/i18n.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/translations/pl_PL/i18n.ts?ref=635c747bc8cfcdce7b8d0e3b4ab0df7ce98c15a8",
      "patch": "@@ -1 +0,0 @@\n-../../modules/ty-cla/translations/pl_PL/i18n.ts\n\\ No newline at end of file"
    },
    {
      "sha": "11b963ca7647c0ac4662d9f9b1486facdd52ce5c",
      "filename": "translations/uk_UA",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/translations/uk_UA",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/translations/uk_UA",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/translations/uk_UA?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -0,0 +1 @@\n+../modules/ty-translations/ui/uk_UA\n\\ No newline at end of file"
    },
    {
      "sha": "cb0e47df81da0b7af3b48955a807601ac493bb1d",
      "filename": "translations/uk_UA/i18n.ts",
      "status": "removed",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/debiki/talkyard/blob/635c747bc8cfcdce7b8d0e3b4ab0df7ce98c15a8/translations/uk_UA/i18n.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/635c747bc8cfcdce7b8d0e3b4ab0df7ce98c15a8/translations/uk_UA/i18n.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/translations/uk_UA/i18n.ts?ref=635c747bc8cfcdce7b8d0e3b4ab0df7ce98c15a8",
      "patch": "@@ -1 +0,0 @@\n-../../modules/ty-cla/translations/uk_UA/i18n.ts\n\\ No newline at end of file"
    },
    {
      "sha": "58c515d0aeb1da587a59ee51f61e5f32464f2042",
      "filename": "version.txt",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/version.txt",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/version.txt",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/version.txt?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -1 +1 @@\n-v0.2021.07\n+v0.2021.08"
    }
  ]
}
