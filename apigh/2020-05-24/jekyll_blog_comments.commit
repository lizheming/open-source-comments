{
  "sha": "223c91651531f2f2e2422e8ba7acf0970a8cf7fc",
  "node_id": "MDY6Q29tbWl0MTI4NjgzMjc0OjIyM2M5MTY1MTUzMWYyZjJlMjQyMmU4YmE3YWNmMDk3MGE4Y2Y3ZmM=",
  "commit": {
    "author": {
      "name": "Damien Guard",
      "email": "damieng@gmail.com",
      "date": "2019-03-28T17:20:22Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2019-03-28T17:20:22Z"
    },
    "message": "Merge pull request #12 from nicolas-forks/master\n\nRemove Config from main class",
    "tree": {
      "sha": "899b6ba4a55cf9644142ed21cb30ab0aad464e68",
      "url": "https://api.github.com/repos/Azure-Functions/jekyll-blog-comments/git/trees/899b6ba4a55cf9644142ed21cb30ab0aad464e68"
    },
    "url": "https://api.github.com/repos/Azure-Functions/jekyll-blog-comments/git/commits/223c91651531f2f2e2422e8ba7acf0970a8cf7fc",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcnQJWCRBK7hj4Ov3rIwAAdHIIAAt6B3Uf+YdGkhxJzY2gemv1\nmDhsfpBU3UwVK2CXuU2E+RGYbactzeDS/Ij5xAHkyKIwedGpvKEUPzsBL+d0NyFj\nIMetTmJYaH161LJoDbKVZRWJUfJg8/P2X0KG3Rw11DefK1vdQKcWTre1C+dd+mEz\n+CS3NSSUpFotcpBZGZR/FN2gkq7yyf3U7uuDI9v+L+bGM7As6oTrGy197aTs/ymQ\naIaXEjBcfRVFQ4CIlUGcRJcvk5GL1p0xSUSAOXUzy8sqkuZJc9RNufa/iygCjyq+\nCRM+NMeofjw2qHa0ZjjbquOaAqzAXL04ffC9kHgB6QZmeiLNY6fNY5tJqLfzVy4=\n=kHpp\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 899b6ba4a55cf9644142ed21cb30ab0aad464e68\nparent 6485ce55660f396ad591661ff1f12b71f89252ef\nparent c4a38e5a24d0d84db3b88950fb7ecb4fd02c364d\nauthor Damien Guard <damieng@gmail.com> 1553793622 -0700\ncommitter GitHub <noreply@github.com> 1553793622 -0700\n\nMerge pull request #12 from nicolas-forks/master\n\nRemove Config from main class"
    }
  },
  "url": "https://api.github.com/repos/Azure-Functions/jekyll-blog-comments/commits/223c91651531f2f2e2422e8ba7acf0970a8cf7fc",
  "html_url": "https://github.com/Azure-Functions/jekyll-blog-comments/commit/223c91651531f2f2e2422e8ba7acf0970a8cf7fc",
  "comments_url": "https://api.github.com/repos/Azure-Functions/jekyll-blog-comments/commits/223c91651531f2f2e2422e8ba7acf0970a8cf7fc/comments",
  "author": {
    "login": "damieng",
    "id": 118951,
    "node_id": "MDQ6VXNlcjExODk1MQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/118951?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/damieng",
    "html_url": "https://github.com/damieng",
    "followers_url": "https://api.github.com/users/damieng/followers",
    "following_url": "https://api.github.com/users/damieng/following{/other_user}",
    "gists_url": "https://api.github.com/users/damieng/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/damieng/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/damieng/subscriptions",
    "organizations_url": "https://api.github.com/users/damieng/orgs",
    "repos_url": "https://api.github.com/users/damieng/repos",
    "events_url": "https://api.github.com/users/damieng/events{/privacy}",
    "received_events_url": "https://api.github.com/users/damieng/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6485ce55660f396ad591661ff1f12b71f89252ef",
      "url": "https://api.github.com/repos/Azure-Functions/jekyll-blog-comments/commits/6485ce55660f396ad591661ff1f12b71f89252ef",
      "html_url": "https://github.com/Azure-Functions/jekyll-blog-comments/commit/6485ce55660f396ad591661ff1f12b71f89252ef"
    },
    {
      "sha": "c4a38e5a24d0d84db3b88950fb7ecb4fd02c364d",
      "url": "https://api.github.com/repos/Azure-Functions/jekyll-blog-comments/commits/c4a38e5a24d0d84db3b88950fb7ecb4fd02c364d",
      "html_url": "https://github.com/Azure-Functions/jekyll-blog-comments/commit/c4a38e5a24d0d84db3b88950fb7ecb4fd02c364d"
    }
  ],
  "stats": {
    "total": 41,
    "additions": 32,
    "deletions": 9
  },
  "files": [
    {
      "sha": "02c971518a0ccb9fdf6037a08272f5da8462ac12",
      "filename": "JekyllBlogCommentsAzure/Comment.cs",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/Azure-Functions/jekyll-blog-comments/blob/223c91651531f2f2e2422e8ba7acf0970a8cf7fc/JekyllBlogCommentsAzure/Comment.cs",
      "raw_url": "https://github.com/Azure-Functions/jekyll-blog-comments/raw/223c91651531f2f2e2422e8ba7acf0970a8cf7fc/JekyllBlogCommentsAzure/Comment.cs",
      "contents_url": "https://api.github.com/repos/Azure-Functions/jekyll-blog-comments/contents/JekyllBlogCommentsAzure/Comment.cs?ref=223c91651531f2f2e2422e8ba7acf0970a8cf7fc",
      "patch": "@@ -42,12 +42,13 @@ public static bool TryCreateFromForm(NameValueCollection form, out Comment comme\n \n             comment = errors.Any() ? null : (Comment)constructor.Invoke(values.Values.ToArray());\n             var isFormValid = !errors.Any();\n+            var config = PostCommentToPullRequestFunction.config;\n \n-            if (isFormValid && !string.IsNullOrEmpty(ConfigurationManager.AppSettings[\"SentimentAnalysis.SubscriptionKey\"]))\n+            if (isFormValid && !string.IsNullOrEmpty(config.SentimentAnalysisSubscriptionKey))\n             {\n-                var textAnalysis = new SentimentAnalysis(ConfigurationManager.AppSettings[\"SentimentAnalysis.SubscriptionKey\"],\n-                    ConfigurationManager.AppSettings[\"SentimentAnalysis.Region\"],\n-                    ConfigurationManager.AppSettings[\"SentimentAlaysis.Lang\"]);\n+                var textAnalysis = new SentimentAnalysis(config.SentimentAnalysisSubscriptionKey,\n+                    config.SentimentAnalysisRegion,\n+                    config.SentimentAnalysisLang);\n                 comment.score = textAnalysis.Analyze(comment.message);\n             }\n             else"
    },
    {
      "sha": "7f316b9466a16e26171e780e48b908d8df10cedf",
      "filename": "JekyllBlogCommentsAzure/PostCommentToPullRequestFunction.cs",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/Azure-Functions/jekyll-blog-comments/blob/223c91651531f2f2e2422e8ba7acf0970a8cf7fc/JekyllBlogCommentsAzure/PostCommentToPullRequestFunction.cs",
      "raw_url": "https://github.com/Azure-Functions/jekyll-blog-comments/raw/223c91651531f2f2e2422e8ba7acf0970a8cf7fc/JekyllBlogCommentsAzure/PostCommentToPullRequestFunction.cs",
      "contents_url": "https://api.github.com/repos/Azure-Functions/jekyll-blog-comments/contents/JekyllBlogCommentsAzure/PostCommentToPullRequestFunction.cs?ref=223c91651531f2f2e2422e8ba7acf0970a8cf7fc",
      "patch": "@@ -2,7 +2,6 @@\n using Microsoft.Azure.WebJobs.Extensions.Http;\n using Octokit;\n using System;\n-using System.Configuration;\n using System.Linq;\n using System.Net;\n using System.Net.Http;\n@@ -12,13 +11,15 @@ namespace JekyllBlogCommentsAzure\n {\n     public static class PostCommentToPullRequestFunction\n     {\n+        public static readonly WebConfigurator config = new WebConfigurator();\n+\n         [FunctionName(\"PostComment\")] // Actual form post handler\n         public static async Task<HttpResponseMessage> Run([HttpTrigger(AuthorizationLevel.Anonymous, \"post\")] HttpRequestMessage request)\n         {\n             var form = await request.Content.ReadAsFormDataAsync();\n \n             // Make sure the site posting the comment is the correct site.\n-            var allowedSite = ConfigurationManager.AppSettings[\"CommentWebsiteUrl\"];\n+            var allowedSite = config.CommentWebsiteUrl;\n             var postedSite = form[\"comment-site\"];\n             if (!String.IsNullOrWhiteSpace(allowedSite) && !AreSameSites(allowedSite, postedSite))\n                 return request.CreateErrorResponse(HttpStatusCode.BadRequest, $\"This Jekyll comments receiever does not handle forms for '${postedSite}'. You should point to your own instance.\");\n@@ -55,10 +56,10 @@ private static async Task<PullRequest> CreatePullRequest(Comment comment)\n         {\n             // Create the Octokit client\n             var github = new GitHubClient(new ProductHeaderValue(\"PostCommentToPullRequest\"),\n-                new Octokit.Internal.InMemoryCredentialStore(new Credentials(ConfigurationManager.AppSettings[\"GitHubToken\"])));\n+                new Octokit.Internal.InMemoryCredentialStore(new Credentials(config.GitHubToken)));\n \n             // Get a reference to our GitHub repository\n-            var repoOwnerName = ConfigurationManager.AppSettings[\"PullRequestRepository\"].Split('/');\n+            var repoOwnerName = config.PullRequestRepository.Split('/');\n             var repo = await github.Repository.Get(repoOwnerName[0], repoOwnerName[1]);\n \n             // Create a new branch from the default branch\n@@ -68,7 +69,7 @@ private static async Task<PullRequest> CreatePullRequest(Comment comment)\n             // Create a new file with the comments in it\n             var fileRequest = new CreateFileRequest($\"Comment by {comment.name} on {comment.post_id}\", comment.ToYaml(), newBranch.Ref)\n             {\n-                Committer = new Committer(comment.name, comment.email ?? ConfigurationManager.AppSettings[\"CommentFallbackCommitEmail\"] ?? \"redacted@example.com\", comment.date)\n+                Committer = new Committer(comment.name, comment.email ?? config.CommentFallbackCommitEmail ?? \"redacted@example.com\", comment.date)\n             };\n             await github.Repository.Content.CreateFile(repo.Id, $\"_data/comments/{comment.post_id}/{comment.id}.yml\", fileRequest);\n "
    },
    {
      "sha": "0ded2fcac8cae6f79699581f4b57786e07fe94e0",
      "filename": "JekyllBlogCommentsAzure/WebConfigurator.cs",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/Azure-Functions/jekyll-blog-comments/blob/223c91651531f2f2e2422e8ba7acf0970a8cf7fc/JekyllBlogCommentsAzure/WebConfigurator.cs",
      "raw_url": "https://github.com/Azure-Functions/jekyll-blog-comments/raw/223c91651531f2f2e2422e8ba7acf0970a8cf7fc/JekyllBlogCommentsAzure/WebConfigurator.cs",
      "contents_url": "https://api.github.com/repos/Azure-Functions/jekyll-blog-comments/contents/JekyllBlogCommentsAzure/WebConfigurator.cs?ref=223c91651531f2f2e2422e8ba7acf0970a8cf7fc",
      "patch": "@@ -0,0 +1,21 @@\n+﻿using System.Configuration;\n+\n+namespace JekyllBlogCommentsAzure\n+{\n+    public class WebConfigurator\n+    {\n+        public string CommentWebsiteUrl => ConfigurationManager.AppSettings[\"CommentWebsiteUrl\"];\n+\n+        public string GitHubToken => ConfigurationManager.AppSettings[\"GitHubToken\"];\n+\n+        public string PullRequestRepository => ConfigurationManager.AppSettings[\"PullRequestRepository\"];\n+\n+        public string CommentFallbackCommitEmail => ConfigurationManager.AppSettings[\"CommentFallbackCommitEmail\"];\n+\n+        public string SentimentAnalysisSubscriptionKey => ConfigurationManager.AppSettings[\"SentimentAnalysis.SubscriptionKey\"];\n+\n+        public string SentimentAnalysisRegion => ConfigurationManager.AppSettings[\"SentimentAnalysis.Region\"];\n+\n+        public string SentimentAnalysisLang => ConfigurationManager.AppSettings[\"SentimentAnalysis.Lang\"];\n+    }\n+}"
    }
  ]
}
