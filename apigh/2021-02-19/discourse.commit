{
  "sha": "11f28e3eb3ed34167780ade9b2ebfd863d8c9190",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODoxMWYyOGUzZWIzZWQzNDE2Nzc4MGFkZTliMmViZmQ4NjNkOGM5MTkw",
  "commit": {
    "author": {
      "name": "Martin Brennan",
      "email": "mjrbrennan@gmail.com",
      "date": "2021-02-19T03:57:27Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2021-02-19T03:57:27Z"
    },
    "message": "FIX: Do not allow bookmarks to use post date in past for reminder (#12138)\n\nSee https://meta.discourse.org/t/bookmark-reminder-date-in-post-in-the-past/180128",
    "tree": {
      "sha": "88e240826c60e522a9e9f0aefb125c66fe4941ba",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/88e240826c60e522a9e9f0aefb125c66fe4941ba"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/11f28e3eb3ed34167780ade9b2ebfd863d8c9190",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgLzcnCRBK7hj4Ov3rIwAAdHIIAFhPpykl5D9M+6Fey1hA12nZ\n+pk2/yHj8ZgCG9AE2a6GGCR28ERCyrRqrPk6W9Nt9BbDRkERPejt68sNOHKscJ4H\noCADTVZ19WZc/6+bvm1KK2X2vCIWflf2IJJ8QIM8JOJB5TwpIJt3FWghTrpwj9bz\nTgAQ4Ur1zJb8yAssfd2pM0s9qkJR48kf207aRIvhzyN95/fPGOmqlXbk/d1Lt2mB\nM3Bl1yrHMWFDk/Xhsj7PAjZhXtAWySHMDHItM4vKrQxuY4+1CSD8J1BYpCgX+ODE\nRxIgwtGis6M/lwIzDEIyPjt9V/cFVBU6khtDiYLKjGimA0OdZqdu4OHKwGFEVpQ=\n=zznq\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 88e240826c60e522a9e9f0aefb125c66fe4941ba\nparent 58de9e85bee17de796b2e5a4af01747448c5d5da\nauthor Martin Brennan <mjrbrennan@gmail.com> 1613707047 +1000\ncommitter GitHub <noreply@github.com> 1613707047 +1000\n\nFIX: Do not allow bookmarks to use post date in past for reminder (#12138)\n\nSee https://meta.discourse.org/t/bookmark-reminder-date-in-post-in-the-past/180128\r\n\r\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/11f28e3eb3ed34167780ade9b2ebfd863d8c9190",
  "html_url": "https://github.com/discourse/discourse/commit/11f28e3eb3ed34167780ade9b2ebfd863d8c9190",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/11f28e3eb3ed34167780ade9b2ebfd863d8c9190/comments",
  "author": {
    "login": "martin-brennan",
    "id": 920448,
    "node_id": "MDQ6VXNlcjkyMDQ0OA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/920448?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/martin-brennan",
    "html_url": "https://github.com/martin-brennan",
    "followers_url": "https://api.github.com/users/martin-brennan/followers",
    "following_url": "https://api.github.com/users/martin-brennan/following{/other_user}",
    "gists_url": "https://api.github.com/users/martin-brennan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/martin-brennan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/martin-brennan/subscriptions",
    "organizations_url": "https://api.github.com/users/martin-brennan/orgs",
    "repos_url": "https://api.github.com/users/martin-brennan/repos",
    "events_url": "https://api.github.com/users/martin-brennan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/martin-brennan/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "58de9e85bee17de796b2e5a4af01747448c5d5da",
      "url": "https://api.github.com/repos/discourse/discourse/commits/58de9e85bee17de796b2e5a4af01747448c5d5da",
      "html_url": "https://github.com/discourse/discourse/commit/58de9e85bee17de796b2e5a4af01747448c5d5da"
    }
  ],
  "stats": {
    "total": 47,
    "additions": 39,
    "deletions": 8
  },
  "files": [
    {
      "sha": "4ac3649f21104dbf66734389f78d29ca84cb596a",
      "filename": "app/assets/javascripts/discourse/app/components/bookmark.js",
      "status": "modified",
      "additions": 15,
      "deletions": 2,
      "changes": 17,
      "blob_url": "https://github.com/discourse/discourse/blob/11f28e3eb3ed34167780ade9b2ebfd863d8c9190/app/assets/javascripts/discourse/app/components/bookmark.js",
      "raw_url": "https://github.com/discourse/discourse/raw/11f28e3eb3ed34167780ade9b2ebfd863d8c9190/app/assets/javascripts/discourse/app/components/bookmark.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/components/bookmark.js?ref=11f28e3eb3ed34167780ade9b2ebfd863d8c9190",
      "patch": "@@ -20,7 +20,7 @@ import { ajax } from \"discourse/lib/ajax\";\n import bootbox from \"bootbox\";\n import discourseComputed, { on } from \"discourse-common/utils/decorators\";\n import { formattedReminderTime } from \"discourse/lib/bookmark\";\n-import { and, notEmpty, or } from \"@ember/object/computed\";\n+import { and, notEmpty } from \"@ember/object/computed\";\n import { popupAjaxError } from \"discourse/lib/ajax-error\";\n import { later } from \"@ember/runloop\";\n \n@@ -284,10 +284,23 @@ export default Component.extend({\n   showExistingReminderAt: notEmpty(\"model.reminderAt\"),\n   showDelete: notEmpty(\"model.id\"),\n   userHasTimezoneSet: notEmpty(\"userTimezone\"),\n-  showPostLocalDate: or(\"postDetectedLocalDate\", \"postDetectedLocalTime\"),\n   editingExistingBookmark: and(\"model\", \"model.id\"),\n   existingBookmarkHasReminder: and(\"model\", \"model.reminderAt\"),\n \n+  @discourseComputed(\"postDetectedLocalDate\", \"postDetectedLocalTime\")\n+  showPostLocalDate(postDetectedLocalDate, postDetectedLocalTime) {\n+    if (!postDetectedLocalTime || !postDetectedLocalDate) {\n+      return;\n+    }\n+\n+    let postLocalDateTime = this._postLocalDate();\n+    if (postLocalDateTime < now(this.userTimezone)) {\n+      return;\n+    }\n+\n+    return true;\n+  },\n+\n   @discourseComputed()\n   autoDeletePreferences: () => {\n     return Object.keys(AUTO_DELETE_PREFERENCES).map((key) => {"
    },
    {
      "sha": "934f95e6015cadaea8e0cd68d7ce9e9483385a3d",
      "filename": "app/assets/javascripts/discourse/tests/acceptance/bookmarks-test.js",
      "status": "modified",
      "additions": 24,
      "deletions": 6,
      "changes": 30,
      "blob_url": "https://github.com/discourse/discourse/blob/11f28e3eb3ed34167780ade9b2ebfd863d8c9190/app/assets/javascripts/discourse/tests/acceptance/bookmarks-test.js",
      "raw_url": "https://github.com/discourse/discourse/raw/11f28e3eb3ed34167780ade9b2ebfd863d8c9190/app/assets/javascripts/discourse/tests/acceptance/bookmarks-test.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/tests/acceptance/bookmarks-test.js?ref=11f28e3eb3ed34167780ade9b2ebfd863d8c9190",
      "patch": "@@ -11,11 +11,11 @@ import { test } from \"qunit\";\n import topicFixtures from \"discourse/tests/fixtures/topic\";\n import KeyboardShortcutInitializer from \"discourse/initializers/keyboard-shortcuts\";\n \n-async function openBookmarkModal() {\n-  if (exists(\".topic-post:first-child button.show-more-actions\")) {\n-    await click(\".topic-post:first-child button.show-more-actions\");\n+async function openBookmarkModal(postNumber = 1) {\n+  if (exists(`#post_${postNumber} button.show-more-actions`)) {\n+    await click(`#post_${postNumber} button.show-more-actions`);\n   }\n-  await click(\".topic-post:first-child button.bookmark\");\n+  await click(`#post_${postNumber} button.bookmark`);\n }\n \n async function openEditBookmarkModal() {\n@@ -32,7 +32,16 @@ acceptance(\"Bookmarking\", function (needs) {\n   });\n \n   const topicResponse = topicFixtures[\"/t/280/1.json\"];\n-  topicResponse.post_stream.posts[0].cooked += `<span data-date=\"2021-01-15\" data-time=\"00:35:00\" class=\"discourse-local-date cooked-date past\" data-timezone=\"Europe/London\">\n+  topicResponse.post_stream.posts[0].cooked += `<span data-date=\"2036-01-15\" data-time=\"00:35:00\" class=\"discourse-local-date cooked-date past\" data-timezone=\"Europe/London\">\n+  <span>\n+    <svg class=\"fa d-icon d-icon-globe-americas svg-icon\" xmlns=\"http://www.w3.org/2000/svg\">\n+      <use xlink:href=\"#globe-americas\"></use>\n+    </svg>\n+    <span class=\"relative-time\">January 15, 2036 12:35 AM</span>\n+  </span>\n+</span>`;\n+\n+  topicResponse.post_stream.posts[1].cooked += `<span data-date=\"2021-01-15\" data-time=\"00:35:00\" class=\"discourse-local-date cooked-date past\" data-timezone=\"Europe/London\">\n   <span>\n     <svg class=\"fa d-icon d-icon-globe-americas svg-icon\" xmlns=\"http://www.w3.org/2000/svg\">\n       <use xlink:href=\"#globe-americas\"></use>\n@@ -225,7 +234,7 @@ acceptance(\"Bookmarking\", function (needs) {\n   test(\"Using a post date for the reminder date\", async function (assert) {\n     await visit(\"/t/internationalization-localization/280\");\n     let postDate = moment.tz(\n-      \"2021-01-15\",\n+      \"2036-01-15\",\n       loggedInUser().resolvedTimezone(loggedInUser())\n     );\n     let postDateFormatted = postDate.format(\"YYYY-MM-DD\");\n@@ -250,4 +259,13 @@ acceptance(\"Bookmarking\", function (needs) {\n       \"it should prefill the bookmark time\"\n     );\n   });\n+\n+  test(\"Cannot use the post date for a reminder when the post date is in the past\", async function (assert) {\n+    await visit(\"/t/internationalization-localization/280\");\n+    await openBookmarkModal(2);\n+    assert.notOk(\n+      exists(\"#tap_tile_post_local_date\"),\n+      \"it does not show the local date tile\"\n+    );\n+  });\n });"
    }
  ]
}
