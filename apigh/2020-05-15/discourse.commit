{
  "sha": "f9a9bd136b1414beec89626ff956877c40aebf73",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODpmOWE5YmQxMzZiMTQxNGJlZWM4OTYyNmZmOTU2ODc3YzQwYWViZjcz",
  "commit": {
    "author": {
      "name": "Guo Xiang Tan",
      "email": "gxtan1990@gmail.com",
      "date": "2020-05-15T08:16:58Z"
    },
    "committer": {
      "name": "Guo Xiang Tan",
      "email": "gxtan1990@gmail.com",
      "date": "2020-05-15T08:16:58Z"
    },
    "message": "FEATURE: Expose `Composer.serializeToTopic` in client side plugin api.",
    "tree": {
      "sha": "142a66a2d90a88ee1d6f841190c8c8c5c8eb0593",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/142a66a2d90a88ee1d6f841190c8c8c5c8eb0593"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/f9a9bd136b1414beec89626ff956877c40aebf73",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMOJGkc46I9vMVlDg+9EQF5qsHyAFAl6+UAcACgkQ+9EQF5qs\nHyDOLw//UsWYL6eBcII/QdPxD/sVkLVQVfj+pa77dKzd4FskV5jJ9uq/UPx1OusS\n4cKMu/bkiRevHYBvFR0sbQKefU8+DflhYturmvePT2XhOZEjB+5tijdmSj0Gf2KE\nLaaswXfipd9bDmCfV8/AhzVipzIb2B2klOA9vgdUtVW9DX7HOT+Ne8Qmw4ZD8kBv\nROV3qBMUcRSZ3z4L0WSiD5HiZZbM/w6VyWiAdmXw+FqKCzi1QmWFx7UAWg1Tf77M\nRfFvzd24ySSVo5C8dS6I+L/T3HRoiLi8ukfHvm4N19alT8G1sHyNS+1EVrjtXIsb\nYt8ANcnrudYG1QP3ONnMAImcMnRZpxlD6uqiLlz/5ARDK4oPr5pFD5E6jgHOcsB/\nsHNomj4zgVPZCBf9ASRCBoZtzEjIODHC5Rpg2nJrx80Z0nKIZdGUxniKZuJVTSxa\nOJGLWX3b8u1m0OEtJLecUJgJgmzUxydLXYNppVQQR8+NX4uTZWpoWM6Dc9IITHDp\nyLoRpDm0XMzZ93X8BRbFJxGOSxFIWczL59fWWhOz1bsX11VRdEO+3U3loScKeLD6\nyyT5ATZyeAk7jG/Z2uRF3Q4SJuKdJqn0a4RD6HRKB10JlvqHzK/ou6bkkARp1eBk\n1WezLeeFo9ejlGciDhXjZve3cPYMN31mhc9VL1Y9InfC4+x36+o=\n=Paxf\n-----END PGP SIGNATURE-----",
      "payload": "tree 142a66a2d90a88ee1d6f841190c8c8c5c8eb0593\nparent 858735b5dab1b3d322f4fcc0f8c956c1a527d4a1\nauthor Guo Xiang Tan <gxtan1990@gmail.com> 1589530618 +0800\ncommitter Guo Xiang Tan <gxtan1990@gmail.com> 1589530618 +0800\n\nFEATURE: Expose `Composer.serializeToTopic` in client side plugin api.\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/f9a9bd136b1414beec89626ff956877c40aebf73",
  "html_url": "https://github.com/discourse/discourse/commit/f9a9bd136b1414beec89626ff956877c40aebf73",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/f9a9bd136b1414beec89626ff956877c40aebf73/comments",
  "author": {
    "login": "tgxworld",
    "id": 4335742,
    "node_id": "MDQ6VXNlcjQzMzU3NDI=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/4335742?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tgxworld",
    "html_url": "https://github.com/tgxworld",
    "followers_url": "https://api.github.com/users/tgxworld/followers",
    "following_url": "https://api.github.com/users/tgxworld/following{/other_user}",
    "gists_url": "https://api.github.com/users/tgxworld/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tgxworld/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tgxworld/subscriptions",
    "organizations_url": "https://api.github.com/users/tgxworld/orgs",
    "repos_url": "https://api.github.com/users/tgxworld/repos",
    "events_url": "https://api.github.com/users/tgxworld/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tgxworld/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tgxworld",
    "id": 4335742,
    "node_id": "MDQ6VXNlcjQzMzU3NDI=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/4335742?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tgxworld",
    "html_url": "https://github.com/tgxworld",
    "followers_url": "https://api.github.com/users/tgxworld/followers",
    "following_url": "https://api.github.com/users/tgxworld/following{/other_user}",
    "gists_url": "https://api.github.com/users/tgxworld/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tgxworld/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tgxworld/subscriptions",
    "organizations_url": "https://api.github.com/users/tgxworld/orgs",
    "repos_url": "https://api.github.com/users/tgxworld/repos",
    "events_url": "https://api.github.com/users/tgxworld/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tgxworld/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "858735b5dab1b3d322f4fcc0f8c956c1a527d4a1",
      "url": "https://api.github.com/repos/discourse/discourse/commits/858735b5dab1b3d322f4fcc0f8c956c1a527d4a1",
      "html_url": "https://github.com/discourse/discourse/commit/858735b5dab1b3d322f4fcc0f8c956c1a527d4a1"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 16,
    "deletions": 1
  },
  "files": [
    {
      "sha": "d17fde9235a2175aba7decbb4bb4b19efd4f3882",
      "filename": "app/assets/javascripts/discourse/app/lib/plugin-api.js",
      "status": "modified",
      "additions": 16,
      "deletions": 1,
      "changes": 17,
      "blob_url": "https://github.com/discourse/discourse/blob/f9a9bd136b1414beec89626ff956877c40aebf73/app/assets/javascripts/discourse/app/lib/plugin-api.js",
      "raw_url": "https://github.com/discourse/discourse/raw/f9a9bd136b1414beec89626ff956877c40aebf73/app/assets/javascripts/discourse/app/lib/plugin-api.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/lib/plugin-api.js?ref=f9a9bd136b1414beec89626ff956877c40aebf73",
      "patch": "@@ -55,7 +55,7 @@ import { on } from \"@ember/object/evented\";\n import KeyboardShortcuts from \"discourse/lib/keyboard-shortcuts\";\n \n // If you add any methods to the API ensure you bump up this number\n-const PLUGIN_API_VERSION = \"0.9.0\";\n+const PLUGIN_API_VERSION = \"0.10.0\";\n \n class PluginApi {\n   constructor(version, container) {\n@@ -941,6 +941,21 @@ class PluginApi {\n     Composer.reopen({ beforeSave: method });\n   }\n \n+  /**\n+   * Adds a field to topic edit serializer\n+   *\n+   * Example:\n+   *\n+   * api.serializeToTopic('key_set_in_model', 'field_name_in_payload');\n+   *\n+   * to keep both of them same\n+   * api.serializeToTopic('field_name');\n+   *\n+   */\n+  serializeToTopic(fieldName, property) {\n+    Composer.serializeToTopic(fieldName, property);\n+  }\n+\n   /**\n    * Adds a field to draft serializer\n    *"
    }
  ]
}
