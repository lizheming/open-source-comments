{
  "sha": "3f0ede560cc79c7878add5258b1e3b59e2955370",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOjNmMGVkZTU2MGNjNzljNzg3OGFkZDUyNThiMWUzYjU5ZTI5NTUzNzA=",
  "commit": {
    "author": {
      "name": "Dmitry Verkhoturov",
      "email": "paskal.07@gmail.com",
      "date": "2021-09-04T08:41:35Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2021-09-08T16:34:48Z"
    },
    "message": "bump go modules in the project",
    "tree": {
      "sha": "f634abc7aaff1625c187028dbe446c0413eefc6d",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/f634abc7aaff1625c187028dbe446c0413eefc6d"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/3f0ede560cc79c7878add5258b1e3b59e2955370",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/3f0ede560cc79c7878add5258b1e3b59e2955370",
  "html_url": "https://github.com/umputun/remark42/commit/3f0ede560cc79c7878add5258b1e3b59e2955370",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/3f0ede560cc79c7878add5258b1e3b59e2955370/comments",
  "author": {
    "login": "paskal",
    "id": 712534,
    "node_id": "MDQ6VXNlcjcxMjUzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/712534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paskal",
    "html_url": "https://github.com/paskal",
    "followers_url": "https://api.github.com/users/paskal/followers",
    "following_url": "https://api.github.com/users/paskal/following{/other_user}",
    "gists_url": "https://api.github.com/users/paskal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paskal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paskal/subscriptions",
    "organizations_url": "https://api.github.com/users/paskal/orgs",
    "repos_url": "https://api.github.com/users/paskal/repos",
    "events_url": "https://api.github.com/users/paskal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paskal/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5c59e87f948223029c44653a819549bca1d88793",
      "url": "https://api.github.com/repos/umputun/remark42/commits/5c59e87f948223029c44653a819549bca1d88793",
      "html_url": "https://github.com/umputun/remark42/commit/5c59e87f948223029c44653a819549bca1d88793"
    }
  ],
  "stats": {
    "total": 56675,
    "additions": 14918,
    "deletions": 41757
  },
  "files": [
    {
      "sha": "3570879bd2e59434b048dbcc9d0e4469e03a1f7f",
      "filename": "backend/_example/memory_store/go.sum",
      "status": "modified",
      "additions": 48,
      "deletions": 46,
      "changes": 94,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/_example/memory_store/go.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/_example/memory_store/go.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/_example/memory_store/go.sum?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -33,27 +33,27 @@ cloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9\n dmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\n github.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\n github.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\n-github.com/Depado/bfchroma v1.2.0 h1:NyYPFVhWvq8S2ts6Ok4kwXVE3TEO5fof+9ZOKbBJQUo=\n-github.com/Depado/bfchroma v1.2.0/go.mod h1:U3RJUYwWVJrZRaJQyfS+wuxBApSTR/BC37PhAI+Ydps=\n-github.com/PuerkitoBio/goquery v1.5.1 h1:PSPBGne8NIUWw+/7vFBV+kG2J/5MOjbzc7154OaKCSE=\n-github.com/PuerkitoBio/goquery v1.5.1/go.mod h1:GsLWisAFVj4WgDibEWF4pvYnkVQBpKBKeU+7zCJoLcc=\n+github.com/Depado/bfchroma v1.3.0 h1:zz14vpvySU6S0CL6yGPr1vkFevQecIt8dJdCsMS2JpM=\n+github.com/Depado/bfchroma v1.3.0/go.mod h1:c0bFk0tFmT+clD3TIGurjWCfD/QV8/EebfM3JGr+98M=\n+github.com/PuerkitoBio/goquery v1.7.1 h1:oE+T06D+1T7LNrn91B4aERsRIeCLJ/oPSa6xB9FPnz4=\n+github.com/PuerkitoBio/goquery v1.7.1/go.mod h1:XY0pP4kfraEmmV1O7Uf6XyjoslwsneBbgeDjLYuN8xY=\n github.com/ajg/form v1.5.1/go.mod h1:uL1WgH+h2mgNtvBq0339dVnzXdBETtL2LeUXaIv25UY=\n github.com/alecthomas/assert v0.0.0-20170929043011-405dbfeb8e38 h1:smF2tmSOzy2Mm+0dGI2AIUHY+w0BUc+4tn40djz7+6U=\n github.com/alecthomas/assert v0.0.0-20170929043011-405dbfeb8e38/go.mod h1:r7bzyVFMNntcxPZXK3/+KdruV1H5KSlyVY0gc+NgInI=\n-github.com/alecthomas/chroma v0.6.0/go.mod h1:MmozekIi2rfQSzDcdEZ2BoJ9Pxs/7uc2Y4Boh+hIeZo=\n-github.com/alecthomas/chroma v0.7.2 h1:B76NU/zbQYIUhUowbi4fmvREmDUJLsUzKWTZmQd3ABY=\n-github.com/alecthomas/chroma v0.7.2/go.mod h1:fv5SzZPFJbwp2NXJWpFIX7DZS4HgV1K4ew4Pc2OZD9s=\n+github.com/alecthomas/chroma v0.7.3/go.mod h1:sko8vR34/90zvl5QdcUdvzL3J8NKjAUx9va9jPuFNoM=\n+github.com/alecthomas/chroma v0.9.2 h1:yU1sE2+TZbLIQPMk30SolL2Hn53SR/Pv750f7qZ/XMs=\n+github.com/alecthomas/chroma v0.9.2/go.mod h1:eMuEnpA18XbG/WhOWtCzJHS7WqEtDAI+HxdwoW0nVSk=\n github.com/alecthomas/colour v0.0.0-20160524082231-60882d9e2721 h1:JHZL0hZKJ1VENNfmXvHbgYlbUOvpzYzvy2aZU5gXVeo=\n github.com/alecthomas/colour v0.0.0-20160524082231-60882d9e2721/go.mod h1:QO9JBoKquHd+jz9nshCh40fOfO+JzsoXy8qTHF68zU0=\n-github.com/alecthomas/kong v0.2.1-0.20190708041108-0548c6b1afae/go.mod h1:+inYUSluD+p4L8KdviBSgzcqEjUQOfC5fQDRFuc36lI=\n+github.com/alecthomas/kong v0.2.4/go.mod h1:kQOmtJgV+Lb4aj+I2LEn40cbtawdWJ9Y8QLq+lElKxE=\n github.com/alecthomas/repr v0.0.0-20180818092828-117648cd9897/go.mod h1:xTS7Pm1pD1mvyM075QCDSRqH6qRLXylzS24ZTpRiSzQ=\n-github.com/alecthomas/repr v0.0.0-20181024024818-d37bc2a10ba1 h1:GDQdwm/gAcJcLAKQQZGOJ4knlw+7rfEQQcmwTbt4p5E=\n-github.com/alecthomas/repr v0.0.0-20181024024818-d37bc2a10ba1/go.mod h1:xTS7Pm1pD1mvyM075QCDSRqH6qRLXylzS24ZTpRiSzQ=\n+github.com/alecthomas/repr v0.0.0-20200325044227-4184120f674c h1:MVVbswUlqicyj8P/JljoocA7AyCo62gzD0O7jfvrhtE=\n+github.com/alecthomas/repr v0.0.0-20200325044227-4184120f674c/go.mod h1:xTS7Pm1pD1mvyM075QCDSRqH6qRLXylzS24ZTpRiSzQ=\n github.com/alicebob/gopher-json v0.0.0-20180125190556-5a6b3ba71ee6/go.mod h1:SGnFV6hVsYE877CKEZ6tDNTjaSXYUk6QqoIK6PrAtcc=\n github.com/alicebob/miniredis/v2 v2.11.4/go.mod h1:VL3UDEfAH59bSa7MuHMuFToxkqyHh69s/WUbYlOAuyg=\n-github.com/andybalholm/cascadia v1.1.0 h1:BuuO6sSfQNFRu1LppgbD25Hr2vLYW25JvxHs5zzsLTo=\n-github.com/andybalholm/cascadia v1.1.0/go.mod h1:GsXiBklL0woXo1j/WYWtSYYC4ouU9PqHO0sqidkEA4Y=\n-github.com/aws/aws-sdk-go v1.34.28/go.mod h1:H7NKnBqNVzoTJpGfLrQkkD+ytBA93eiDYi/+8rV9s48=\n+github.com/andybalholm/cascadia v1.2.0 h1:vuRCkM5Ozh/BfmsaTm26kbjm0mIOM3yS5Ek/F5h18aE=\n+github.com/andybalholm/cascadia v1.2.0/go.mod h1:YCyR8vOZT9aZ1CHEd8ap0gMVm2aFgxBp0T0eFw1RUQY=\n+github.com/asaskevich/govalidator v0.0.0-20210307081110-f21760c49a8d/go.mod h1:WaHUgvxTVq04UNunO+XhnAqY/wQc+bxr74GqbsZ/Jqw=\n github.com/aymerick/douceur v0.2.0 h1:Mv+mAeH1Q+n9Fr+oyamOlAkUNPWPlA8PPGR0QAaYuPk=\n github.com/aymerick/douceur v0.2.0/go.mod h1:wlT5vV2O3h55X9m7iVYN0TBM0NH/MmbLnd30/FjWUq4=\n github.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\n@@ -70,13 +70,14 @@ github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSs\n github.com/dghubble/oauth1 v0.7.0/go.mod h1:8pFdfPkv/jr8mkChVbNVuJ0suiHe278BtWI4Tk1ujxk=\n github.com/dgrijalva/jwt-go v3.2.0+incompatible/go.mod h1:E3ru+11k8xSBh+hMPgOLZmtrrCbhqsmaPHjLKYnJCaQ=\n github.com/didip/tollbooth/v6 v6.0.1/go.mod h1:j2pKs+JQ5PvU/K4jFnrnwntrmfUbYLJE5oSdxR37FD0=\n-github.com/didip/tollbooth/v6 v6.1.0 h1:ZS2fNa9JhFdRSJCj3+V12VfuUifYrGB4Z0jSwXmKMeE=\n-github.com/didip/tollbooth/v6 v6.1.0/go.mod h1:xjcse6CTHCLuOkzsWrEgdy9WPJFv+p/x6v+MyfP+O9s=\n+github.com/didip/tollbooth/v6 v6.1.1 h1:Nt7PvWLa9Y94OrykXsFNBinVRQIu8xdy4avpl99Dc1M=\n+github.com/didip/tollbooth/v6 v6.1.1/go.mod h1:xjcse6CTHCLuOkzsWrEgdy9WPJFv+p/x6v+MyfP+O9s=\n github.com/didip/tollbooth_chi v0.0.0-20200524181329-8b84cd7183d9/go.mod h1:YWyIfq3y4ArRfWZ9XksmuusP+7Mad+T0iFZ0kv0XG/M=\n github.com/didip/tollbooth_chi v0.0.0-20200828173446-a7173453ea21 h1:x7YpwKSBIBcKe9I3aTNOqgSyJ6QKDdtOxnEkxBTsi9w=\n github.com/didip/tollbooth_chi v0.0.0-20200828173446-a7173453ea21/go.mod h1:0ZVa6kSzS011nfTC1rELyxK4tjVf6vqBnOv7oY2KlsA=\n-github.com/dlclark/regexp2 v1.1.6 h1:CqB4MjHw0MFCDj+PHHjiESmHX+N7t0tJzKvC6M97BRg=\n-github.com/dlclark/regexp2 v1.1.6/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\n+github.com/dlclark/regexp2 v1.2.0/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\n+github.com/dlclark/regexp2 v1.4.0 h1:F1rxgk7p4uKjwIQxBs9oAXe5CqrXlCduYEJvrF4u93E=\n+github.com/dlclark/regexp2 v1.4.0/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\n github.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\n github.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\n github.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\n@@ -87,14 +88,14 @@ github.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMo\n github.com/gavv/httpexpect v2.0.0+incompatible/go.mod h1:x+9tiU1YnrOvnB725RkpoLv1M62hOWzwo5OXotisrKc=\n github.com/go-chi/chi v4.1.1+incompatible h1:MmTgB0R8Bt/jccxp+t6S/1VGIKdJw5J74CK/c9tTfA4=\n github.com/go-chi/chi v4.1.1+incompatible/go.mod h1:eB3wogJHnLi3x/kFX2A+IbTBlXxmMeXJVKy9tTv1XzQ=\n-github.com/go-chi/chi/v5 v5.0.2/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n+github.com/go-chi/chi/v5 v5.0.4/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n github.com/go-chi/cors v1.2.0/go.mod h1:sSbTewc+6wYHBBCW7ytsFSn836hqM7JxpglAy2Vzc58=\n github.com/go-chi/render v1.0.1 h1:4/5tis2cKaNdnv9zFLfXzcquC9HbeZgCnxGnKrltBS8=\n github.com/go-chi/render v1.0.1/go.mod h1:pq4Rr7HbnsdaeHagklXub+p6Wd16Af5l9koip1OvJns=\n github.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\n github.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\n github.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\n-github.com/go-pkgz/auth v1.17.1-0.20210817211320-fed26c31c35c/go.mod h1:KhMsOKhNU8fJbWKUYPhfGaYGgnZuSOIs52ojELWxOUk=\n+github.com/go-pkgz/auth v1.18.0/go.mod h1:hfGyJXugY0O9IPKYHBzf6pDozWtqYMMkI8iSc0kPd14=\n github.com/go-pkgz/expirable-cache v0.0.3 h1:rTh6qNPp78z0bQE6HDhXBHUwqnV9i09Vm6dksJLXQDc=\n github.com/go-pkgz/expirable-cache v0.0.3/go.mod h1:+IauqN00R2FqNRLCLA+X5YljQJrwB179PfiAoMPlTlQ=\n github.com/go-pkgz/jrpc v0.2.0 h1:CLy/eZyekjraVrxZV18N2R1mYLMJ/nWrgdfyIOGPY/E=\n@@ -104,12 +105,11 @@ github.com/go-pkgz/lgr v0.10.4 h1:l7qyFjqEZgwRgaQQSEp6tve4A3OU80VrfzpvtEX8ngw=\n github.com/go-pkgz/lgr v0.10.4/go.mod h1:CD0s1z6EFpIUplV067gitF77tn25JItzwHNKAPqeCF0=\n github.com/go-pkgz/repeater v1.1.3/go.mod h1:hVTavuO5x3Gxnu8zW7d6sQBfAneKV8X2FjU48kGfpKw=\n github.com/go-pkgz/rest v1.5.0/go.mod h1:nQaM3RhSTUAmbBZWY4hfe4buyeC9VckvhoCktiQXJxI=\n-github.com/go-pkgz/rest v1.9.2 h1:RyBBRXBYY6eBgTW3UGYOyT4VQPDiBBFh/tesELWsryQ=\n-github.com/go-pkgz/rest v1.9.2/go.mod h1:wZ/dGipZUaF9to0vIQl7PwDHgWQDB0jsrFg1xnAKLDw=\n+github.com/go-pkgz/rest v1.11.0 h1:Z//qgmM0NhBYfhXYEP/aJtDVLK5XlJGxqcb4sHFNN0E=\n+github.com/go-pkgz/rest v1.11.0/go.mod h1:wZ/dGipZUaF9to0vIQl7PwDHgWQDB0jsrFg1xnAKLDw=\n github.com/go-pkgz/syncs v1.1.1/go.mod h1:bt9lxWRRJ9vOCMGc8Big8ttjYHLKP88ofj1y38UlaHE=\n github.com/go-redis/redis/v7 v7.4.0/go.mod h1:JDNMw23GTyLNC4GZu9njt15ctBQVn7xjRfnwdHj/Dcg=\n github.com/go-session/session v3.1.2+incompatible/go.mod h1:8B3iivBQjrz/JtC68Np2T1yBBLxTan3mn/3OM0CyRt0=\n-github.com/go-sql-driver/mysql v1.5.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=\n github.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\n github.com/go-test/deep v1.0.4/go.mod h1:wGDj63lr65AM2AQyKZd/NYHGb0R+1RLqB8NKt3aSFNA=\n github.com/gobuffalo/attrs v0.0.0-20190224210810-a9411de4debd/go.mod h1:4duuawTqi2wkkpB4ePgWMaai6/Kc6WEz83bhFwpHzj0=\n@@ -137,6 +137,7 @@ github.com/gobuffalo/packr/v2 v2.0.9/go.mod h1:emmyGweYTm6Kdper+iywB6YK5YzuKchGt\n github.com/gobuffalo/packr/v2 v2.2.0/go.mod h1:CaAwI0GPIAv+5wKLtv8Afwl+Cm78K/I/VCm/3ptBN+0=\n github.com/gobuffalo/syncx v0.0.0-20190224160051-33c29581e754/go.mod h1:HhnNqWY95UYwwW3uSASeV7vtgYkT2t16hJgV3AEPUpw=\n github.com/golang-jwt/jwt v3.2.1+incompatible/go.mod h1:8pz2t5EyA70fFQQSrl6XZXzqecmYZeUEB8OUGHkxJ+I=\n+github.com/golang-jwt/jwt v3.2.2+incompatible/go.mod h1:8pz2t5EyA70fFQQSrl6XZXzqecmYZeUEB8OUGHkxJ+I=\n github.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\n github.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\n github.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\n@@ -185,6 +186,7 @@ github.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hf\n github.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\n github.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\n github.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\n+github.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\n github.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=\n github.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=\n github.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\n@@ -195,17 +197,16 @@ github.com/gorilla/websocket v1.4.1/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/ad\n github.com/gorilla/websocket v1.4.2/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\n github.com/hashicorp/errwrap v1.0.0 h1:hLrqtEDnRye3+sgx6z4qVLNuviH3MR5aQ0ykNJa/UYA=\n github.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\n-github.com/hashicorp/go-multierror v1.1.0 h1:B9UzwGQJehnUY1yNrnwREHc3fGbC2xefo8g4TbElacI=\n github.com/hashicorp/go-multierror v1.1.0/go.mod h1:spPvp8C1qA32ftKqdAHm4hHTbPw+vmowP0z+KUhOZdA=\n+github.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\n+github.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\n github.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\n github.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\n github.com/hashicorp/golang-lru v0.5.4/go.mod h1:iADmTwqILo4mZ8BN3D2Q6+9jd8WM5uGBxy+E8yxSoD4=\n github.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\n github.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\n github.com/imkira/go-interpol v1.1.0/go.mod h1:z0h2/2T3XF8kyEPpRgJ3kmNv+C43p+I/CoI+jC3w2iA=\n github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\n-github.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=\n-github.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=\n github.com/joho/godotenv v1.3.0/go.mod h1:7hK45KPybAkOC6peb+G5yklZfMxEjkZhHbwpqxOKXbg=\n github.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=\n github.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=\n@@ -227,14 +228,13 @@ github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\n github.com/kyokomi/emoji/v2 v2.2.8/go.mod h1:JUcn42DTdsXJo1SWanHh4HKDEyPaR5CqkmoirZZP9qE=\n github.com/markbates/oncer v0.0.0-20181203154359-bf2de49a0be2/go.mod h1:Ld9puTsIW75CHf65OeIOkyKbteujpZVXDpWK6YGZbxE=\n github.com/markbates/safe v1.0.1/go.mod h1:nAqgmRi7cY2nqMc92/bSEeQA+R4OheNU2T1kNSCBdG0=\n-github.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=\n github.com/mattn/go-colorable v0.1.4/go.mod h1:U0ppj6V5qS13XJ6of8GYAs25YV2eR4EVcfRqFIhoBtE=\n-github.com/mattn/go-isatty v0.0.4/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\n-github.com/mattn/go-isatty v0.0.8 h1:HLtExJ+uU2HOZ+wI0Tt5DtUDrx8yhUqDcp7fYERX4CE=\n+github.com/mattn/go-colorable v0.1.6/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\n github.com/mattn/go-isatty v0.0.8/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\n-github.com/microcosm-cc/bluemonday v1.0.9 h1:dpCwruVKoyrULicJwhuY76jB+nIxRVKv/e248Vx/BXg=\n-github.com/microcosm-cc/bluemonday v1.0.9/go.mod h1:B2riunDr9benLHghZB7hjIgdwSUzzs0pjCxFrWYEZFU=\n-github.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\n+github.com/mattn/go-isatty v0.0.12 h1:wuysRhFDzyxgEmMf5xjvJ2M9dZoWAXNNr5LSBS7uHXY=\n+github.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\n+github.com/microcosm-cc/bluemonday v1.0.15 h1:J4uN+qPng9rvkBZBoBb8YGR+ijuklIMpSOZZLjYpbeY=\n+github.com/microcosm-cc/bluemonday v1.0.15/go.mod h1:ZLvAzeakRwrGnzQEvstVzVt3ZpqOF2+sdFr0Om+ce30=\n github.com/montanaflynn/stats v0.0.0-20171201202039-1bf9dbcd8cbe/go.mod h1:wL8QJuTMNUDYhXwkmfOly8iTdp5TEcJFWZD2D7SIkUc=\n github.com/moul/http2curl v1.0.0/go.mod h1:8UbvGypXm98wA/IqH45anm5Y2Z6ep6O31QGOAZ3H0fQ=\n github.com/nullrocks/identicon v0.0.0-20180626043057-7875f45b0022/go.mod h1:x4NsS+uc7ecH/Cbm9xKQ6XzmJM57rWTkjywjfB2yQ18=\n@@ -254,8 +254,8 @@ github.com/rakyll/statik v0.1.7/go.mod h1:AlZONWzMtEnMs7W4e/1LURLiI49pIMmp6V9Ung\n github.com/rogpeppe/go-internal v1.1.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\n github.com/rogpeppe/go-internal v1.2.2/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\n github.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\n-github.com/rs/xid v1.2.1 h1:mhH9Nq+C1fY2l1XIpgxIiUOfNpRBYH1kKcr+qfKgjRc=\n-github.com/rs/xid v1.2.1/go.mod h1:+uKXf+4Djp6Md1KODXJxgGQPKngRmWyn10oCKFzNHOQ=\n+github.com/rs/xid v1.3.0 h1:6NjYksEUlhurdVehpc7S7dk6DAmcKv8V9gG0FsVN2U4=\n+github.com/rs/xid v1.3.0/go.mod h1:trrq9SKmegXys3aeAKXMUTdJsYXVwGY3RLcfgqegfbg=\n github.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\n github.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\n github.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\n@@ -265,7 +265,7 @@ github.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeV\n github.com/sirupsen/logrus v1.4.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\n github.com/sirupsen/logrus v1.4.1/go.mod h1:ni0Sbl8bgC9z8RoU9G6nDWqqs/fq4eDPysMBDgk/93Q=\n github.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\n-github.com/slack-go/slack v0.8.2/go.mod h1:FGqNzJBmxIsZURAxh2a8D21AnOVvvXZvGligs4npPUM=\n+github.com/slack-go/slack v0.9.4/go.mod h1:wWL//kk0ho+FcQXcBTmEafUI5dz4qz5f4mMk8oIkioQ=\n github.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=\n github.com/smartystreets/goconvey v1.6.4/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=\n github.com/spf13/cobra v0.0.3/go.mod h1:1l0Ry5zgKvJasoi3XT1TypsSe7PqH0Sj9dhYf7v3XqQ=\n@@ -308,15 +308,16 @@ github.com/yuin/goldmark v1.1.25/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9de\n github.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\n github.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\n github.com/yuin/gopher-lua v0.0.0-20191220021717-ab39c6098bdb/go.mod h1:gqRgreBUhTSL0GeU64rtZ3Uq3wtjOa/TB2YfrtkCbVQ=\n-go.etcd.io/bbolt v1.3.5 h1:XAzx9gjCb0Rxj7EoqcClPD1d5ZBxZJk0jbuoPHenBt0=\n go.etcd.io/bbolt v1.3.5/go.mod h1:G5EMThwa9y8QZGBClrRx5EY+Yw9kAhnjy3bSjsnlVTQ=\n-go.mongodb.org/mongo-driver v1.5.2/go.mod h1:gRXCHX4Jo7J0IJ1oDQyUxF7jfy19UfxniMS4xxMmUqw=\n+go.etcd.io/bbolt v1.3.6 h1:/ecaJf0sk1l4l6V4awd65v2C3ILy7MSj+s/x1ADCIMU=\n+go.etcd.io/bbolt v1.3.6/go.mod h1:qXsaaIqmgQH0T+OPdb99Bf+PKfBBQVAdyD6TY9G8XM4=\n+go.mongodb.org/mongo-driver v1.7.1/go.mod h1:Q4oFMbo1+MSNqICAdYMlC/zSTrwCogR4R8NzkI+yfU8=\n go.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\n go.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=\n go.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\n go.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\n go.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\n-go.uber.org/goleak v1.0.0/go.mod h1:8a7PlsEVH3e/a/GLqe5IIrQx6GzcnRmZEufDUTk4A7A=\n+go.uber.org/goleak v1.1.10/go.mod h1:8a7PlsEVH3e/a/GLqe5IIrQx6GzcnRmZEufDUTk4A7A=\n golang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\n golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\n golang.org/x/crypto v0.0.0-20190422162423-af44ce270edf/go.mod h1:WFFai1msRO1wXaEeE5yQxYXgSfI8pQAWXbQop6sCtWE=\n@@ -325,7 +326,7 @@ golang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8U\n golang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\n golang.org/x/crypto v0.0.0-20200302210943-78000ba7a073/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\n golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\n-golang.org/x/crypto v0.0.0-20210421170649-83a5a9bb288b/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=\n+golang.org/x/crypto v0.0.0-20210817164053-32db794688a5/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\n golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\n golang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\n golang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\n@@ -338,8 +339,9 @@ golang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EH\n golang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=\n golang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\n golang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\n-golang.org/x/image v0.0.0-20210504121937-7319ad40d33e h1:PzJMNfFQx+QO9hrC1GwZ4BoPGeNGhfeQEgcQFArEjPk=\n golang.org/x/image v0.0.0-20210504121937-7319ad40d33e/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\n+golang.org/x/image v0.0.0-20210628002857-a66eb6448b8d h1:RNPAfi2nHY7C2srAV8A49jpsYr0ADedCk1wq6fTMTvs=\n+golang.org/x/image v0.0.0-20210628002857-a66eb6448b8d/go.mod h1:023OzeP/+EPmXeapQh35lcL3II3LrY8Ic+EFFKVhULM=\n golang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\n golang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\n golang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\n@@ -389,9 +391,8 @@ golang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81R\n golang.org/x/net v0.0.0-20200707034311-ab3426394381/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\n golang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\n golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\n-golang.org/x/net v0.0.0-20210421230115-4e50805a0758/go.mod h1:72T/g9IO56b78aLF+1Kcs5dz7/ng1VjMUvfKvpfy+jM=\n-golang.org/x/net v0.0.0-20210423184538-5f58ad60dda6 h1:0PC75Fz/kyMGhL0e1QnypqK2kQMqKt9csD1GnMJR+Zk=\n-golang.org/x/net v0.0.0-20210423184538-5f58ad60dda6/go.mod h1:OJAsFXCWl8Ukc7SiCT/9KSuxbyM7479/AVlXFRxuMCk=\n+golang.org/x/net v0.0.0-20210614182718-04defd469f4e h1:XpT3nA5TvE525Ne3hInMh6+GETgn27Zfm9dxsThnX2Q=\n+golang.org/x/net v0.0.0-20210614182718-04defd469f4e/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\n golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\n golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\n golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\n@@ -410,8 +411,6 @@ golang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJ\n golang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n-golang.org/x/sys v0.0.0-20181107165924-66b7b1311ac8/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n-golang.org/x/sys v0.0.0-20181128092732-4ed8d59d0b35/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20190204203706-41f3e6584952/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n@@ -431,22 +430,25 @@ golang.org/x/sys v0.0.0-20191010194322-b09406accb47/go.mod h1:h1NjWce9XRLGQEsW7w\n golang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n+golang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n+golang.org/x/sys v0.0.0-20200413165638-669c56c373c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200803210538-64077c9b5642/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n+golang.org/x/sys v0.0.0-20200923182605-d9f96fdee20d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20210420072515-93ed5bcd2bfe/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20210423082822-04245dca01da h1:b3NXsE2LusjYGGjL5bxEVZZORm/YEFFrWFjR8eFrw/c=\n golang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n+golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1 h1:SrN+KX8Art/Sf4HNj6Zcz06G7VEz+7w9tdXTPOZ7+l4=\n+golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\n golang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\n golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ="
    },
    {
      "sha": "6222b968af7b5b94ab30cf768addad12105d4fe5",
      "filename": "backend/app/store/formatter_test.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/app/store/formatter_test.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/app/store/formatter_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/store/formatter_test.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -32,9 +32,9 @@ func TestFormatter_FormatText(t *testing.T) {\n \t\t},\n \t\t{\"&mdash; not translated #354\", \"<p>— not translated #354</p>\\n!converted\", \"mdash\"},\n \t\t{\"smth\\n```go\\nfunc main(aa string) int {return 0}\\n```\", `<p>smth</p>\n-<pre class=\"chroma\"><span class=\"kd\">func</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"nx\">aa</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"kt\">int</span> <span class=\"p\">{</span><span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">}</span>\n+<pre tabindex=\"0\" class=\"chroma\"><span class=\"kd\">func</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"nx\">aa</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"kt\">int</span> <span class=\"p\">{</span><span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">}</span>\n </pre>!converted`, \"code with language\"},\n-\t\t{\"```\\ntest_code\\n```\", `<pre class=\"chroma\">test_code\n+\t\t{\"```\\ntest_code\\n```\", `<pre tabindex=\"0\" class=\"chroma\">test_code\n </pre>!converted`, \"code without language\"},\n \t}\n \tf := NewCommentFormatter(mockConverter{})"
    },
    {
      "sha": "758cf8634a3e478b780522917e3ad2d4bac6edf6",
      "filename": "backend/go.mod",
      "status": "modified",
      "additions": 18,
      "deletions": 18,
      "changes": 36,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/go.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/go.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/go.mod?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -3,37 +3,37 @@ module github.com/umputun/remark42/backend\n go 1.16\n \n require (\n-\tgithub.com/Depado/bfchroma v1.2.0\n-\tgithub.com/PuerkitoBio/goquery v1.5.1\n-\tgithub.com/alecthomas/chroma v0.7.2\n-\tgithub.com/didip/tollbooth/v6 v6.1.0\n+\tgithub.com/Depado/bfchroma v1.3.0\n+\tgithub.com/PuerkitoBio/goquery v1.7.1\n+\tgithub.com/alecthomas/chroma v0.9.2\n+\tgithub.com/didip/tollbooth/v6 v6.1.1\n \tgithub.com/didip/tollbooth_chi v0.0.0-20200828173446-a7173453ea21\n-\tgithub.com/go-chi/chi/v5 v5.0.2\n+\tgithub.com/go-chi/chi/v5 v5.0.4\n \tgithub.com/go-chi/cors v1.2.0\n \tgithub.com/go-chi/render v1.0.1\n-\tgithub.com/go-pkgz/auth v1.17.1-0.20210817211320-fed26c31c35c\n+\tgithub.com/go-pkgz/auth v1.18.0\n \tgithub.com/go-pkgz/jrpc v0.2.0\n \tgithub.com/go-pkgz/lcw v0.8.1\n \tgithub.com/go-pkgz/lgr v0.10.4\n \tgithub.com/go-pkgz/repeater v1.1.3\n-\tgithub.com/go-pkgz/rest v1.9.2\n+\tgithub.com/go-pkgz/rest v1.11.0\n \tgithub.com/go-pkgz/syncs v1.1.1\n-\tgithub.com/golang-jwt/jwt v3.2.1+incompatible\n-\tgithub.com/google/uuid v1.1.2\n+\tgithub.com/golang-jwt/jwt v3.2.2+incompatible\n+\tgithub.com/google/uuid v1.3.0\n \tgithub.com/gorilla/feeds v1.1.1\n-\tgithub.com/hashicorp/go-multierror v1.1.0\n+\tgithub.com/hashicorp/go-multierror v1.1.1\n \tgithub.com/kyokomi/emoji/v2 v2.2.8\n-\tgithub.com/microcosm-cc/bluemonday v1.0.9\n+\tgithub.com/microcosm-cc/bluemonday v1.0.15\n \tgithub.com/pkg/errors v0.9.1\n \tgithub.com/rakyll/statik v0.1.7\n-\tgithub.com/rs/xid v1.2.1\n+\tgithub.com/rs/xid v1.3.0\n \tgithub.com/russross/blackfriday/v2 v2.1.0\n-\tgithub.com/slack-go/slack v0.8.2\n+\tgithub.com/slack-go/slack v0.9.4\n \tgithub.com/stretchr/testify v1.7.0\n \tgithub.com/umputun/go-flags v1.5.1\n-\tgo.etcd.io/bbolt v1.3.5\n-\tgo.uber.org/goleak v1.0.0\n-\tgolang.org/x/crypto v0.0.0-20210421170649-83a5a9bb288b\n-\tgolang.org/x/image v0.0.0-20210504121937-7319ad40d33e\n-\tgolang.org/x/net v0.0.0-20210423184538-5f58ad60dda6\n+\tgo.etcd.io/bbolt v1.3.6\n+\tgo.uber.org/goleak v1.1.10\n+\tgolang.org/x/crypto v0.0.0-20210817164053-32db794688a5\n+\tgolang.org/x/image v0.0.0-20210628002857-a66eb6448b8d\n+\tgolang.org/x/net v0.0.0-20210614182718-04defd469f4e\n )"
    },
    {
      "sha": "5c38beb0c1dc31eecf7cd2861ad7c3b23d2b7afc",
      "filename": "backend/go.sum",
      "status": "modified",
      "additions": 56,
      "deletions": 59,
      "changes": 115,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/go.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/go.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/go.sum?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -34,31 +34,30 @@ cloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9\n dmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\n github.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\n github.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\n-github.com/Depado/bfchroma v1.2.0 h1:NyYPFVhWvq8S2ts6Ok4kwXVE3TEO5fof+9ZOKbBJQUo=\n-github.com/Depado/bfchroma v1.2.0/go.mod h1:U3RJUYwWVJrZRaJQyfS+wuxBApSTR/BC37PhAI+Ydps=\n-github.com/PuerkitoBio/goquery v1.5.1 h1:PSPBGne8NIUWw+/7vFBV+kG2J/5MOjbzc7154OaKCSE=\n-github.com/PuerkitoBio/goquery v1.5.1/go.mod h1:GsLWisAFVj4WgDibEWF4pvYnkVQBpKBKeU+7zCJoLcc=\n+github.com/Depado/bfchroma v1.3.0 h1:zz14vpvySU6S0CL6yGPr1vkFevQecIt8dJdCsMS2JpM=\n+github.com/Depado/bfchroma v1.3.0/go.mod h1:c0bFk0tFmT+clD3TIGurjWCfD/QV8/EebfM3JGr+98M=\n+github.com/PuerkitoBio/goquery v1.7.1 h1:oE+T06D+1T7LNrn91B4aERsRIeCLJ/oPSa6xB9FPnz4=\n+github.com/PuerkitoBio/goquery v1.7.1/go.mod h1:XY0pP4kfraEmmV1O7Uf6XyjoslwsneBbgeDjLYuN8xY=\n github.com/ajg/form v1.5.1 h1:t9c7v8JUKu/XxOGBU0yjNpaMloxGEJhUkqFRq0ibGeU=\n github.com/ajg/form v1.5.1/go.mod h1:uL1WgH+h2mgNtvBq0339dVnzXdBETtL2LeUXaIv25UY=\n github.com/alecthomas/assert v0.0.0-20170929043011-405dbfeb8e38 h1:smF2tmSOzy2Mm+0dGI2AIUHY+w0BUc+4tn40djz7+6U=\n github.com/alecthomas/assert v0.0.0-20170929043011-405dbfeb8e38/go.mod h1:r7bzyVFMNntcxPZXK3/+KdruV1H5KSlyVY0gc+NgInI=\n-github.com/alecthomas/chroma v0.6.0/go.mod h1:MmozekIi2rfQSzDcdEZ2BoJ9Pxs/7uc2Y4Boh+hIeZo=\n-github.com/alecthomas/chroma v0.7.2 h1:B76NU/zbQYIUhUowbi4fmvREmDUJLsUzKWTZmQd3ABY=\n-github.com/alecthomas/chroma v0.7.2/go.mod h1:fv5SzZPFJbwp2NXJWpFIX7DZS4HgV1K4ew4Pc2OZD9s=\n+github.com/alecthomas/chroma v0.7.3/go.mod h1:sko8vR34/90zvl5QdcUdvzL3J8NKjAUx9va9jPuFNoM=\n+github.com/alecthomas/chroma v0.9.2 h1:yU1sE2+TZbLIQPMk30SolL2Hn53SR/Pv750f7qZ/XMs=\n+github.com/alecthomas/chroma v0.9.2/go.mod h1:eMuEnpA18XbG/WhOWtCzJHS7WqEtDAI+HxdwoW0nVSk=\n github.com/alecthomas/colour v0.0.0-20160524082231-60882d9e2721 h1:JHZL0hZKJ1VENNfmXvHbgYlbUOvpzYzvy2aZU5gXVeo=\n github.com/alecthomas/colour v0.0.0-20160524082231-60882d9e2721/go.mod h1:QO9JBoKquHd+jz9nshCh40fOfO+JzsoXy8qTHF68zU0=\n-github.com/alecthomas/kong v0.2.1-0.20190708041108-0548c6b1afae/go.mod h1:+inYUSluD+p4L8KdviBSgzcqEjUQOfC5fQDRFuc36lI=\n+github.com/alecthomas/kong v0.2.4/go.mod h1:kQOmtJgV+Lb4aj+I2LEn40cbtawdWJ9Y8QLq+lElKxE=\n github.com/alecthomas/repr v0.0.0-20180818092828-117648cd9897/go.mod h1:xTS7Pm1pD1mvyM075QCDSRqH6qRLXylzS24ZTpRiSzQ=\n-github.com/alecthomas/repr v0.0.0-20181024024818-d37bc2a10ba1 h1:GDQdwm/gAcJcLAKQQZGOJ4knlw+7rfEQQcmwTbt4p5E=\n-github.com/alecthomas/repr v0.0.0-20181024024818-d37bc2a10ba1/go.mod h1:xTS7Pm1pD1mvyM075QCDSRqH6qRLXylzS24ZTpRiSzQ=\n+github.com/alecthomas/repr v0.0.0-20200325044227-4184120f674c h1:MVVbswUlqicyj8P/JljoocA7AyCo62gzD0O7jfvrhtE=\n+github.com/alecthomas/repr v0.0.0-20200325044227-4184120f674c/go.mod h1:xTS7Pm1pD1mvyM075QCDSRqH6qRLXylzS24ZTpRiSzQ=\n github.com/alicebob/gopher-json v0.0.0-20180125190556-5a6b3ba71ee6 h1:45bxf7AZMwWcqkLzDAQugVEwedisr5nRJ1r+7LYnv0U=\n github.com/alicebob/gopher-json v0.0.0-20180125190556-5a6b3ba71ee6/go.mod h1:SGnFV6hVsYE877CKEZ6tDNTjaSXYUk6QqoIK6PrAtcc=\n github.com/alicebob/miniredis/v2 v2.11.4 h1:GsuyeunTx7EllZBU3/6Ji3dhMQZDpC9rLf1luJ+6M5M=\n github.com/alicebob/miniredis/v2 v2.11.4/go.mod h1:VL3UDEfAH59bSa7MuHMuFToxkqyHh69s/WUbYlOAuyg=\n-github.com/andybalholm/cascadia v1.1.0 h1:BuuO6sSfQNFRu1LppgbD25Hr2vLYW25JvxHs5zzsLTo=\n-github.com/andybalholm/cascadia v1.1.0/go.mod h1:GsXiBklL0woXo1j/WYWtSYYC4ouU9PqHO0sqidkEA4Y=\n-github.com/aws/aws-sdk-go v1.34.28 h1:sscPpn/Ns3i0F4HPEWAVcwdIRaZZCuL7llJ2/60yPIk=\n-github.com/aws/aws-sdk-go v1.34.28/go.mod h1:H7NKnBqNVzoTJpGfLrQkkD+ytBA93eiDYi/+8rV9s48=\n+github.com/andybalholm/cascadia v1.2.0 h1:vuRCkM5Ozh/BfmsaTm26kbjm0mIOM3yS5Ek/F5h18aE=\n+github.com/andybalholm/cascadia v1.2.0/go.mod h1:YCyR8vOZT9aZ1CHEd8ap0gMVm2aFgxBp0T0eFw1RUQY=\n+github.com/asaskevich/govalidator v0.0.0-20210307081110-f21760c49a8d/go.mod h1:WaHUgvxTVq04UNunO+XhnAqY/wQc+bxr74GqbsZ/Jqw=\n github.com/aymerick/douceur v0.2.0 h1:Mv+mAeH1Q+n9Fr+oyamOlAkUNPWPlA8PPGR0QAaYuPk=\n github.com/aymerick/douceur v0.2.0/go.mod h1:wlT5vV2O3h55X9m7iVYN0TBM0NH/MmbLnd30/FjWUq4=\n github.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\n@@ -77,13 +76,14 @@ github.com/dghubble/oauth1 v0.7.0/go.mod h1:8pFdfPkv/jr8mkChVbNVuJ0suiHe278BtWI4\n github.com/dgrijalva/jwt-go v3.2.0+incompatible h1:7qlOGliEKZXTDg6OTjfoBKDXWrumCAMpl/TFQ4/5kLM=\n github.com/dgrijalva/jwt-go v3.2.0+incompatible/go.mod h1:E3ru+11k8xSBh+hMPgOLZmtrrCbhqsmaPHjLKYnJCaQ=\n github.com/didip/tollbooth/v6 v6.0.1/go.mod h1:j2pKs+JQ5PvU/K4jFnrnwntrmfUbYLJE5oSdxR37FD0=\n-github.com/didip/tollbooth/v6 v6.1.0 h1:ZS2fNa9JhFdRSJCj3+V12VfuUifYrGB4Z0jSwXmKMeE=\n-github.com/didip/tollbooth/v6 v6.1.0/go.mod h1:xjcse6CTHCLuOkzsWrEgdy9WPJFv+p/x6v+MyfP+O9s=\n+github.com/didip/tollbooth/v6 v6.1.1 h1:Nt7PvWLa9Y94OrykXsFNBinVRQIu8xdy4avpl99Dc1M=\n+github.com/didip/tollbooth/v6 v6.1.1/go.mod h1:xjcse6CTHCLuOkzsWrEgdy9WPJFv+p/x6v+MyfP+O9s=\n github.com/didip/tollbooth_chi v0.0.0-20200524181329-8b84cd7183d9/go.mod h1:YWyIfq3y4ArRfWZ9XksmuusP+7Mad+T0iFZ0kv0XG/M=\n github.com/didip/tollbooth_chi v0.0.0-20200828173446-a7173453ea21 h1:x7YpwKSBIBcKe9I3aTNOqgSyJ6QKDdtOxnEkxBTsi9w=\n github.com/didip/tollbooth_chi v0.0.0-20200828173446-a7173453ea21/go.mod h1:0ZVa6kSzS011nfTC1rELyxK4tjVf6vqBnOv7oY2KlsA=\n-github.com/dlclark/regexp2 v1.1.6 h1:CqB4MjHw0MFCDj+PHHjiESmHX+N7t0tJzKvC6M97BRg=\n-github.com/dlclark/regexp2 v1.1.6/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\n+github.com/dlclark/regexp2 v1.2.0/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\n+github.com/dlclark/regexp2 v1.4.0 h1:F1rxgk7p4uKjwIQxBs9oAXe5CqrXlCduYEJvrF4u93E=\n+github.com/dlclark/regexp2 v1.4.0/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\n github.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\n github.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\n github.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\n@@ -96,19 +96,17 @@ github.com/gavv/httpexpect v2.0.0+incompatible h1:1X9kcRshkSKEjNJJxX9Y9mQ5BRfbxU\n github.com/gavv/httpexpect v2.0.0+incompatible/go.mod h1:x+9tiU1YnrOvnB725RkpoLv1M62hOWzwo5OXotisrKc=\n github.com/go-chi/chi v4.1.1+incompatible h1:MmTgB0R8Bt/jccxp+t6S/1VGIKdJw5J74CK/c9tTfA4=\n github.com/go-chi/chi v4.1.1+incompatible/go.mod h1:eB3wogJHnLi3x/kFX2A+IbTBlXxmMeXJVKy9tTv1XzQ=\n-github.com/go-chi/chi/v5 v5.0.2 h1:4xKeALZdMEsuI5s05PU2Bm89Uc5iM04qFubUCl5LfAQ=\n-github.com/go-chi/chi/v5 v5.0.2/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n+github.com/go-chi/chi/v5 v5.0.4 h1:5e494iHzsYBiyXQAHHuI4tyJS9M3V84OuX3ufIIGHFo=\n+github.com/go-chi/chi/v5 v5.0.4/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n github.com/go-chi/cors v1.2.0 h1:tV1g1XENQ8ku4Bq3K9ub2AtgG+p16SmzeMSGTwrOKdE=\n github.com/go-chi/cors v1.2.0/go.mod h1:sSbTewc+6wYHBBCW7ytsFSn836hqM7JxpglAy2Vzc58=\n github.com/go-chi/render v1.0.1 h1:4/5tis2cKaNdnv9zFLfXzcquC9HbeZgCnxGnKrltBS8=\n github.com/go-chi/render v1.0.1/go.mod h1:pq4Rr7HbnsdaeHagklXub+p6Wd16Af5l9koip1OvJns=\n github.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\n github.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\n github.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\n-github.com/go-pkgz/auth v1.17.0 h1:m6seF+WbIUlLM96RNZvdq0kKDzZ8ynMOQpANJ1YDviQ=\n-github.com/go-pkgz/auth v1.17.0/go.mod h1:KhMsOKhNU8fJbWKUYPhfGaYGgnZuSOIs52ojELWxOUk=\n-github.com/go-pkgz/auth v1.17.1-0.20210817211320-fed26c31c35c h1:khIhLaxSlY6vxbAFYrxcePBJ7uuZTezKxZkiQ417cng=\n-github.com/go-pkgz/auth v1.17.1-0.20210817211320-fed26c31c35c/go.mod h1:KhMsOKhNU8fJbWKUYPhfGaYGgnZuSOIs52ojELWxOUk=\n+github.com/go-pkgz/auth v1.18.0 h1:H+C/VZ/qZqDpqJfS7lwuF89OnMIcZINXwFAuEfTSQTA=\n+github.com/go-pkgz/auth v1.18.0/go.mod h1:hfGyJXugY0O9IPKYHBzf6pDozWtqYMMkI8iSc0kPd14=\n github.com/go-pkgz/expirable-cache v0.0.3 h1:rTh6qNPp78z0bQE6HDhXBHUwqnV9i09Vm6dksJLXQDc=\n github.com/go-pkgz/expirable-cache v0.0.3/go.mod h1:+IauqN00R2FqNRLCLA+X5YljQJrwB179PfiAoMPlTlQ=\n github.com/go-pkgz/jrpc v0.2.0 h1:CLy/eZyekjraVrxZV18N2R1mYLMJ/nWrgdfyIOGPY/E=\n@@ -120,14 +118,13 @@ github.com/go-pkgz/lgr v0.10.4/go.mod h1:CD0s1z6EFpIUplV067gitF77tn25JItzwHNKAPq\n github.com/go-pkgz/repeater v1.1.3 h1:q6+JQF14ESSy28Dd7F+wRelY4F+41HJ0LEy/szNnMiE=\n github.com/go-pkgz/repeater v1.1.3/go.mod h1:hVTavuO5x3Gxnu8zW7d6sQBfAneKV8X2FjU48kGfpKw=\n github.com/go-pkgz/rest v1.5.0/go.mod h1:nQaM3RhSTUAmbBZWY4hfe4buyeC9VckvhoCktiQXJxI=\n-github.com/go-pkgz/rest v1.9.2 h1:RyBBRXBYY6eBgTW3UGYOyT4VQPDiBBFh/tesELWsryQ=\n-github.com/go-pkgz/rest v1.9.2/go.mod h1:wZ/dGipZUaF9to0vIQl7PwDHgWQDB0jsrFg1xnAKLDw=\n+github.com/go-pkgz/rest v1.11.0 h1:Z//qgmM0NhBYfhXYEP/aJtDVLK5XlJGxqcb4sHFNN0E=\n+github.com/go-pkgz/rest v1.11.0/go.mod h1:wZ/dGipZUaF9to0vIQl7PwDHgWQDB0jsrFg1xnAKLDw=\n github.com/go-pkgz/syncs v1.1.1 h1:jWN+y6FS/Xe+8z4l3QMbSnODGyaxDHGojIS+wyKIjxg=\n github.com/go-pkgz/syncs v1.1.1/go.mod h1:bt9lxWRRJ9vOCMGc8Big8ttjYHLKP88ofj1y38UlaHE=\n github.com/go-redis/redis/v7 v7.4.0 h1:7obg6wUoj05T0EpY0o8B59S9w5yeMWql7sw2kwNW1x4=\n github.com/go-redis/redis/v7 v7.4.0/go.mod h1:JDNMw23GTyLNC4GZu9njt15ctBQVn7xjRfnwdHj/Dcg=\n github.com/go-session/session v3.1.2+incompatible/go.mod h1:8B3iivBQjrz/JtC68Np2T1yBBLxTan3mn/3OM0CyRt0=\n-github.com/go-sql-driver/mysql v1.5.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=\n github.com/go-stack/stack v1.8.0 h1:5SgMzNM5HxrEjV0ww2lTmX6E2Izsfxas4+YHWRs3Lsk=\n github.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\n github.com/go-test/deep v1.0.4 h1:u2CU3YKy9I2pmu9pX0eq50wCgjfGIt539SqR7FbHiho=\n@@ -156,8 +153,9 @@ github.com/gobuffalo/packd v0.1.0/go.mod h1:M2Juc+hhDXf/PnmBANFCqx4DM3wRbgDvnVWe\n github.com/gobuffalo/packr/v2 v2.0.9/go.mod h1:emmyGweYTm6Kdper+iywB6YK5YzuKchGtJQZ0Odn4pQ=\n github.com/gobuffalo/packr/v2 v2.2.0/go.mod h1:CaAwI0GPIAv+5wKLtv8Afwl+Cm78K/I/VCm/3ptBN+0=\n github.com/gobuffalo/syncx v0.0.0-20190224160051-33c29581e754/go.mod h1:HhnNqWY95UYwwW3uSASeV7vtgYkT2t16hJgV3AEPUpw=\n-github.com/golang-jwt/jwt v3.2.1+incompatible h1:73Z+4BJcrTC+KczS6WvTPvRGOp1WmfEP4Q1lOd9Z/+c=\n github.com/golang-jwt/jwt v3.2.1+incompatible/go.mod h1:8pz2t5EyA70fFQQSrl6XZXzqecmYZeUEB8OUGHkxJ+I=\n+github.com/golang-jwt/jwt v3.2.2+incompatible h1:IfV12K8xAKAnZqdXVzCZ+TOjboZ2keLg81eXfW3O+oY=\n+github.com/golang-jwt/jwt v3.2.2+incompatible/go.mod h1:8pz2t5EyA70fFQQSrl6XZXzqecmYZeUEB8OUGHkxJ+I=\n github.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\n github.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\n github.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\n@@ -209,8 +207,9 @@ github.com/google/pprof v0.0.0-20200229191704-1ebb73c60ed3/go.mod h1:ZgVRPoUq/hf\n github.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\n github.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\n github.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\n-github.com/google/uuid v1.1.2 h1:EVhdT+1Kseyi1/pUmXKaFxYsDNy9RQYkMWRH68J/W7Y=\n github.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\n+github.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=\n+github.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\n github.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=\n github.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=\n github.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\n@@ -223,8 +222,9 @@ github.com/gorilla/websocket v1.4.2 h1:+/TMaTYc4QFitKJxsQ7Yye35DkWvkdLcvGKqM+x0U\n github.com/gorilla/websocket v1.4.2/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\n github.com/hashicorp/errwrap v1.0.0 h1:hLrqtEDnRye3+sgx6z4qVLNuviH3MR5aQ0ykNJa/UYA=\n github.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\n-github.com/hashicorp/go-multierror v1.1.0 h1:B9UzwGQJehnUY1yNrnwREHc3fGbC2xefo8g4TbElacI=\n github.com/hashicorp/go-multierror v1.1.0/go.mod h1:spPvp8C1qA32ftKqdAHm4hHTbPw+vmowP0z+KUhOZdA=\n+github.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\n+github.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\n github.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\n github.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\n github.com/hashicorp/golang-lru v0.5.4 h1:YDjusn29QI/Das2iO9M0BHnIbxPeyuCHsjMW+lJfyTc=\n@@ -235,10 +235,6 @@ github.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:\n github.com/imkira/go-interpol v1.1.0 h1:KIiKr0VSG2CUW1hl1jpiyuzuJeKUUpC8iM1AIE7N1Vk=\n github.com/imkira/go-interpol v1.1.0/go.mod h1:z0h2/2T3XF8kyEPpRgJ3kmNv+C43p+I/CoI+jC3w2iA=\n github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\n-github.com/jmespath/go-jmespath v0.4.0 h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=\n-github.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=\n-github.com/jmespath/go-jmespath/internal/testify v1.5.1 h1:shLQSRRSCCPj3f2gpwzGwWFoC7ycTf1rcQZHOlsJ6N8=\n-github.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=\n github.com/joho/godotenv v1.3.0/go.mod h1:7hK45KPybAkOC6peb+G5yklZfMxEjkZhHbwpqxOKXbg=\n github.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=\n github.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=\n@@ -262,14 +258,13 @@ github.com/kyokomi/emoji/v2 v2.2.8 h1:jcofPxjHWEkJtkIbcLHvZhxKgCPl6C7MyjTrD4KDqU\n github.com/kyokomi/emoji/v2 v2.2.8/go.mod h1:JUcn42DTdsXJo1SWanHh4HKDEyPaR5CqkmoirZZP9qE=\n github.com/markbates/oncer v0.0.0-20181203154359-bf2de49a0be2/go.mod h1:Ld9puTsIW75CHf65OeIOkyKbteujpZVXDpWK6YGZbxE=\n github.com/markbates/safe v1.0.1/go.mod h1:nAqgmRi7cY2nqMc92/bSEeQA+R4OheNU2T1kNSCBdG0=\n-github.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=\n github.com/mattn/go-colorable v0.1.4/go.mod h1:U0ppj6V5qS13XJ6of8GYAs25YV2eR4EVcfRqFIhoBtE=\n-github.com/mattn/go-isatty v0.0.4/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\n-github.com/mattn/go-isatty v0.0.8 h1:HLtExJ+uU2HOZ+wI0Tt5DtUDrx8yhUqDcp7fYERX4CE=\n+github.com/mattn/go-colorable v0.1.6/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\n github.com/mattn/go-isatty v0.0.8/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\n-github.com/microcosm-cc/bluemonday v1.0.9 h1:dpCwruVKoyrULicJwhuY76jB+nIxRVKv/e248Vx/BXg=\n-github.com/microcosm-cc/bluemonday v1.0.9/go.mod h1:B2riunDr9benLHghZB7hjIgdwSUzzs0pjCxFrWYEZFU=\n-github.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\n+github.com/mattn/go-isatty v0.0.12 h1:wuysRhFDzyxgEmMf5xjvJ2M9dZoWAXNNr5LSBS7uHXY=\n+github.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\n+github.com/microcosm-cc/bluemonday v1.0.15 h1:J4uN+qPng9rvkBZBoBb8YGR+ijuklIMpSOZZLjYpbeY=\n+github.com/microcosm-cc/bluemonday v1.0.15/go.mod h1:ZLvAzeakRwrGnzQEvstVzVt3ZpqOF2+sdFr0Om+ce30=\n github.com/montanaflynn/stats v0.0.0-20171201202039-1bf9dbcd8cbe/go.mod h1:wL8QJuTMNUDYhXwkmfOly8iTdp5TEcJFWZD2D7SIkUc=\n github.com/moul/http2curl v1.0.0 h1:dRMWoAtb+ePxMlLkrCbAqh4TlPHXvoGUSQ323/9Zahs=\n github.com/moul/http2curl v1.0.0/go.mod h1:8UbvGypXm98wA/IqH45anm5Y2Z6ep6O31QGOAZ3H0fQ=\n@@ -294,8 +289,8 @@ github.com/rakyll/statik v0.1.7/go.mod h1:AlZONWzMtEnMs7W4e/1LURLiI49pIMmp6V9Ung\n github.com/rogpeppe/go-internal v1.1.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\n github.com/rogpeppe/go-internal v1.2.2/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\n github.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\n-github.com/rs/xid v1.2.1 h1:mhH9Nq+C1fY2l1XIpgxIiUOfNpRBYH1kKcr+qfKgjRc=\n-github.com/rs/xid v1.2.1/go.mod h1:+uKXf+4Djp6Md1KODXJxgGQPKngRmWyn10oCKFzNHOQ=\n+github.com/rs/xid v1.3.0 h1:6NjYksEUlhurdVehpc7S7dk6DAmcKv8V9gG0FsVN2U4=\n+github.com/rs/xid v1.3.0/go.mod h1:trrq9SKmegXys3aeAKXMUTdJsYXVwGY3RLcfgqegfbg=\n github.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\n github.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\n github.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\n@@ -305,8 +300,8 @@ github.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeV\n github.com/sirupsen/logrus v1.4.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\n github.com/sirupsen/logrus v1.4.1/go.mod h1:ni0Sbl8bgC9z8RoU9G6nDWqqs/fq4eDPysMBDgk/93Q=\n github.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\n-github.com/slack-go/slack v0.8.2 h1:D7jNu0AInBfdQ4QyKPtVSp+ZxQes3EzWW17RZ/va4JE=\n-github.com/slack-go/slack v0.8.2/go.mod h1:FGqNzJBmxIsZURAxh2a8D21AnOVvvXZvGligs4npPUM=\n+github.com/slack-go/slack v0.9.4 h1:C+FC3zLxLxUTQjDy2RZeMHYon005zsCROiZNWVo+opQ=\n+github.com/slack-go/slack v0.9.4/go.mod h1:wWL//kk0ho+FcQXcBTmEafUI5dz4qz5f4mMk8oIkioQ=\n github.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=\n github.com/smartystreets/goconvey v1.6.4/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=\n github.com/spf13/cobra v0.0.3/go.mod h1:1l0Ry5zgKvJasoi3XT1TypsSe7PqH0Sj9dhYf7v3XqQ=\n@@ -370,17 +365,18 @@ github.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9de\n github.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\n github.com/yuin/gopher-lua v0.0.0-20191220021717-ab39c6098bdb h1:ZkM6LRnq40pR1Ox0hTHlnpkcOTuFIDQpZ1IN8rKKhX0=\n github.com/yuin/gopher-lua v0.0.0-20191220021717-ab39c6098bdb/go.mod h1:gqRgreBUhTSL0GeU64rtZ3Uq3wtjOa/TB2YfrtkCbVQ=\n-go.etcd.io/bbolt v1.3.5 h1:XAzx9gjCb0Rxj7EoqcClPD1d5ZBxZJk0jbuoPHenBt0=\n go.etcd.io/bbolt v1.3.5/go.mod h1:G5EMThwa9y8QZGBClrRx5EY+Yw9kAhnjy3bSjsnlVTQ=\n-go.mongodb.org/mongo-driver v1.5.2 h1:AsxOLoJTgP6YNM0fXWw4OjdluYmWzQYp+lFJL7xu9fU=\n-go.mongodb.org/mongo-driver v1.5.2/go.mod h1:gRXCHX4Jo7J0IJ1oDQyUxF7jfy19UfxniMS4xxMmUqw=\n+go.etcd.io/bbolt v1.3.6 h1:/ecaJf0sk1l4l6V4awd65v2C3ILy7MSj+s/x1ADCIMU=\n+go.etcd.io/bbolt v1.3.6/go.mod h1:qXsaaIqmgQH0T+OPdb99Bf+PKfBBQVAdyD6TY9G8XM4=\n+go.mongodb.org/mongo-driver v1.7.1 h1:jwqTeEM3x6L9xDXrCxN0Hbg7vdGfPBOTIkr0+/LYZDA=\n+go.mongodb.org/mongo-driver v1.7.1/go.mod h1:Q4oFMbo1+MSNqICAdYMlC/zSTrwCogR4R8NzkI+yfU8=\n go.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\n go.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=\n go.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\n go.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\n go.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\n-go.uber.org/goleak v1.0.0 h1:qsup4IcBdlmsnGfqyLl4Ntn3C2XCCuKAE7DwHpScyUo=\n-go.uber.org/goleak v1.0.0/go.mod h1:8a7PlsEVH3e/a/GLqe5IIrQx6GzcnRmZEufDUTk4A7A=\n+go.uber.org/goleak v1.1.10 h1:z+mqJhf6ss6BSfSM671tgKyZBFPTTJM+HLxnhPC3wu0=\n+go.uber.org/goleak v1.1.10/go.mod h1:8a7PlsEVH3e/a/GLqe5IIrQx6GzcnRmZEufDUTk4A7A=\n golang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\n golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\n golang.org/x/crypto v0.0.0-20190422162423-af44ce270edf/go.mod h1:WFFai1msRO1wXaEeE5yQxYXgSfI8pQAWXbQop6sCtWE=\n@@ -389,8 +385,8 @@ golang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8U\n golang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\n golang.org/x/crypto v0.0.0-20200302210943-78000ba7a073/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\n golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\n-golang.org/x/crypto v0.0.0-20210421170649-83a5a9bb288b h1:7mWr3k41Qtv8XlltBkDkl8LoP3mpSgBW8BUoxtEdbXg=\n-golang.org/x/crypto v0.0.0-20210421170649-83a5a9bb288b/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=\n+golang.org/x/crypto v0.0.0-20210817164053-32db794688a5 h1:HWj/xjIHfjYU5nVXpTM0s39J9CbLn7Cc5a7IC5rwsMQ=\n+golang.org/x/crypto v0.0.0-20210817164053-32db794688a5/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\n golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\n golang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\n golang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\n@@ -403,8 +399,9 @@ golang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EH\n golang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=\n golang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\n golang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\n-golang.org/x/image v0.0.0-20210504121937-7319ad40d33e h1:PzJMNfFQx+QO9hrC1GwZ4BoPGeNGhfeQEgcQFArEjPk=\n golang.org/x/image v0.0.0-20210504121937-7319ad40d33e/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\n+golang.org/x/image v0.0.0-20210628002857-a66eb6448b8d h1:RNPAfi2nHY7C2srAV8A49jpsYr0ADedCk1wq6fTMTvs=\n+golang.org/x/image v0.0.0-20210628002857-a66eb6448b8d/go.mod h1:023OzeP/+EPmXeapQh35lcL3II3LrY8Ic+EFFKVhULM=\n golang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\n golang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\n golang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\n@@ -455,9 +452,8 @@ golang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81R\n golang.org/x/net v0.0.0-20200707034311-ab3426394381/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\n golang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\n golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\n-golang.org/x/net v0.0.0-20210421230115-4e50805a0758/go.mod h1:72T/g9IO56b78aLF+1Kcs5dz7/ng1VjMUvfKvpfy+jM=\n-golang.org/x/net v0.0.0-20210423184538-5f58ad60dda6 h1:0PC75Fz/kyMGhL0e1QnypqK2kQMqKt9csD1GnMJR+Zk=\n-golang.org/x/net v0.0.0-20210423184538-5f58ad60dda6/go.mod h1:OJAsFXCWl8Ukc7SiCT/9KSuxbyM7479/AVlXFRxuMCk=\n+golang.org/x/net v0.0.0-20210614182718-04defd469f4e h1:XpT3nA5TvE525Ne3hInMh6+GETgn27Zfm9dxsThnX2Q=\n+golang.org/x/net v0.0.0-20210614182718-04defd469f4e/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\n golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\n golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\n golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\n@@ -478,8 +474,6 @@ golang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJ\n golang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n-golang.org/x/sys v0.0.0-20181107165924-66b7b1311ac8/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n-golang.org/x/sys v0.0.0-20181128092732-4ed8d59d0b35/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20190204203706-41f3e6584952/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n@@ -499,22 +493,25 @@ golang.org/x/sys v0.0.0-20191010194322-b09406accb47/go.mod h1:h1NjWce9XRLGQEsW7w\n golang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n+golang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n+golang.org/x/sys v0.0.0-20200413165638-669c56c373c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200803210538-64077c9b5642/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n+golang.org/x/sys v0.0.0-20200923182605-d9f96fdee20d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20210420072515-93ed5bcd2bfe/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20210423082822-04245dca01da h1:b3NXsE2LusjYGGjL5bxEVZZORm/YEFFrWFjR8eFrw/c=\n golang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n+golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1 h1:SrN+KX8Art/Sf4HNj6Zcz06G7VEz+7w9tdXTPOZ7+l4=\n+golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\n golang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\n golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ="
    },
    {
      "sha": "8220480fa8b51b4378110dc30bde3f5e1d8cbeaa",
      "filename": "backend/remark.rest",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/remark.rest",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/remark.rest",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/remark.rest?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -164,7 +164,7 @@ GET {{host}}/ping\n ### create comment with bad locator.url, dev token for secret=12345, not admin\n POST {{host}}/api/v1/comment\n Content-Type: application/json\n-X-JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJyZW1hcmsiLCJleHAiOjE2MTY3OTQ2NTMsImp0aSI6ImNjOGVlNzNlNjM4MzQ1Mjc1MmZjN2M3ZmQ0MmE4MDIzZDY3ZWFiMDIiLCJpYXQiOjE2MTY3OTQzNTMsImlzcyI6InJlbWFyazQyIiwidXNlciI6eyJuYW1lIjoic29tZW9uZSIsImlkIjoiYW5vbnltb3VzX2NhMjlmMjkwOTU3NGE3Zjk3YjRkNGU4YmIwOTU1N2IxMDM1ODE4YjAiLCJwaWN0dXJlIjoiaHR0cHM6Ly9kZW1vLnJlbWFyazQyLmNvbS9hcGkvdjEvYXZhdGFyLzZlMTU5OGE5MWM4MWZlZjhmOGU5MzMwODg4ZWJiZjVlMzkzODVkYTkuaW1hZ2UiLCJhdHRycyI6eyJhZG1pbiI6ZmFsc2UsImJsb2NrZWQiOmZhbHNlfX19.TUEr1qN0j9WGx1jlOL-rc14qjuenH56yI-5_xF9FSGY\n+X-JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJyZW1hcmsiLCJleHAiOjE5NzYwNTY3NTYsImp0aSI6IjJlOGJmMTE5OTI0MjQxMDRjYjFhZGRlODllMWYwNGFiMTg4YWZjMzQiLCJpYXQiOjE1NzYwNTY0NTYsImlzcyI6InJlbWFyazQyIiwidXNlciI6eyJuYW1lIjoiZGV2X3VzZXIiLCJpZCI6ImRldl91c2VyIiwicGljdHVyZSI6Imh0dHA6Ly8xMjcuMC4wLjE6ODA4MC9hcGkvdjEvYXZhdGFyL2NjZmEyYWJkMDE2Njc2MDViNGUxZmM0ZmNiOTFiMWUxYWYzMjMyNDAuaW1hZ2UiLCJhdHRycyI6eyJhZG1pbiI6dHJ1ZSwiYmxvY2tlZCI6ZmFsc2V9fX0.6Qt5s2enBMRC-Jmsua01yViVYI95Dx6BPBMaNjj36d4\n \n {\n \t\"text\": \"comment *blah* http://radio-t.com\","
    },
    {
      "sha": "d70bd6552b19e0192361e61b2322024ad8d456b4",
      "filename": "backend/vendor/github.com/Depado/bfchroma/.golangci.yml",
      "status": "added",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/Depado/bfchroma/.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/Depado/bfchroma/.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/Depado/bfchroma/.golangci.yml?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,16 @@\n+run:\n+  timeout: 5m\n+\n+linters:\n+  enable:\n+    - megacheck\n+    - govet\n+  disable:\n+    - errcheck\n+    - maligned\n+    - prealloc\n+  disable-all: false\n+  presets:\n+    - bugs\n+    - unused\n+  fast: false"
    },
    {
      "sha": "56bab5b0c087a9081ce9f9d4f2f485be5c0d5469",
      "filename": "backend/vendor/github.com/Depado/bfchroma/README.md",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/Depado/bfchroma/README.md",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/Depado/bfchroma/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/Depado/bfchroma/README.md?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -55,13 +55,14 @@ By default when no language information is written in the code block, this\n renderer will try to auto-detect the used language. This option disables\n this behavior and will fallback to a sane default when no language\n information is available.\n+- `EmbedCSS()` \n+This option will embed CSS needed for chroma's `html.WithClasses()` at the beginning of blackfriday document. \n+CSS can also be extracted separately by calling `Renderer`'s.`ChromaCSS(w)` method, which will return styleshet for currently set style \n - `Extend(bf.Renderer)`  \n This option allows to define the base blackfriday that will be extended.\n - `ChromaOptions(...html.Option)`  \n This option allows you to pass Chroma's html options in the renderer. Such\n options can be found [here](https://github.com/alecthomas/chroma#the-html-formatter).\n-There is currently an issue with the `html.WithClasses()` option as it expects\n-the CSS classes to be written separately. I'll come up with a fix later.\n \n ### Option examples\n \n@@ -92,6 +93,8 @@ r := bfchroma.NewRenderer(bfchroma.Style(\"dracula\"))\n r = bfchroma.NewRenderer(bfchroma.ChromaStyle(styles.Dracula))\n ```\n \n+\n+\n ## Examples\n \n ```go\n@@ -194,7 +197,7 @@ r := bfchroma.NewRenderer(\n var css template.CSS\n \n b := new(bytes.Buffer)\n-if err := r.Formatter.WriteCSS(b, r.Style); err != nil {\n+if err := r.ChromaCSS(b); err != nil {\n \tlogrus.WithError(err).Warning(\"Couldn't write CSS\")\n }\n css = template.CSS(b.String())"
    },
    {
      "sha": "fc0c3bd02085edb641da302f0ff3704249fc2a44",
      "filename": "backend/vendor/github.com/Depado/bfchroma/go.mod",
      "status": "modified",
      "additions": 4,
      "deletions": 13,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/Depado/bfchroma/go.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/Depado/bfchroma/go.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/Depado/bfchroma/go.mod?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -1,20 +1,11 @@\n module github.com/Depado/bfchroma\n \n-go 1.13\n+go 1.14\n \n require (\n-\tgithub.com/alecthomas/assert v0.0.0-20170929043011-405dbfeb8e38 // indirect\n-\tgithub.com/alecthomas/chroma v0.6.0\n-\tgithub.com/alecthomas/colour v0.0.0-20160524082231-60882d9e2721 // indirect\n-\tgithub.com/alecthomas/repr v0.0.0-20181024024818-d37bc2a10ba1 // indirect\n-\tgithub.com/danwakefield/fnmatch v0.0.0-20160403171240-cbb64ac3d964 // indirect\n-\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n-\tgithub.com/dlclark/regexp2 v1.1.6 // indirect\n-\tgithub.com/mattn/go-isatty v0.0.4 // indirect\n-\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n+\tgithub.com/alecthomas/chroma v0.7.3\n+\tgithub.com/alecthomas/repr v0.0.0-20200325044227-4184120f674c // indirect\n \tgithub.com/russross/blackfriday/v2 v2.0.1\n-\tgithub.com/sergi/go-diff v1.0.0 // indirect\n \tgithub.com/shurcooL/sanitized_anchor_name v1.0.0 // indirect\n-\tgithub.com/stretchr/testify v1.2.2\n-\tgolang.org/x/sys v0.0.0-20181107165924-66b7b1311ac8 // indirect\n+\tgithub.com/stretchr/testify v1.6.1\n )"
    },
    {
      "sha": "4677ed2c9675f3a1a8aae38f493ef85cd7a5ae55",
      "filename": "backend/vendor/github.com/Depado/bfchroma/go.sum",
      "status": "modified",
      "additions": 28,
      "deletions": 10,
      "changes": 38,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/Depado/bfchroma/go.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/Depado/bfchroma/go.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/Depado/bfchroma/go.sum?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -1,19 +1,25 @@\n github.com/alecthomas/assert v0.0.0-20170929043011-405dbfeb8e38 h1:smF2tmSOzy2Mm+0dGI2AIUHY+w0BUc+4tn40djz7+6U=\n github.com/alecthomas/assert v0.0.0-20170929043011-405dbfeb8e38/go.mod h1:r7bzyVFMNntcxPZXK3/+KdruV1H5KSlyVY0gc+NgInI=\n-github.com/alecthomas/chroma v0.6.0 h1:gcvXlpe0/NoQP3BvneRfgcauLIJDw9VblkoFwZ5XGFs=\n-github.com/alecthomas/chroma v0.6.0/go.mod h1:MmozekIi2rfQSzDcdEZ2BoJ9Pxs/7uc2Y4Boh+hIeZo=\n+github.com/alecthomas/chroma v0.7.3 h1:NfdAERMy+esYQs8OXk0I868/qDxxCEo7FMz1WIqMAeI=\n+github.com/alecthomas/chroma v0.7.3/go.mod h1:sko8vR34/90zvl5QdcUdvzL3J8NKjAUx9va9jPuFNoM=\n github.com/alecthomas/colour v0.0.0-20160524082231-60882d9e2721 h1:JHZL0hZKJ1VENNfmXvHbgYlbUOvpzYzvy2aZU5gXVeo=\n github.com/alecthomas/colour v0.0.0-20160524082231-60882d9e2721/go.mod h1:QO9JBoKquHd+jz9nshCh40fOfO+JzsoXy8qTHF68zU0=\n-github.com/alecthomas/repr v0.0.0-20181024024818-d37bc2a10ba1 h1:GDQdwm/gAcJcLAKQQZGOJ4knlw+7rfEQQcmwTbt4p5E=\n-github.com/alecthomas/repr v0.0.0-20181024024818-d37bc2a10ba1/go.mod h1:xTS7Pm1pD1mvyM075QCDSRqH6qRLXylzS24ZTpRiSzQ=\n+github.com/alecthomas/kong v0.2.4/go.mod h1:kQOmtJgV+Lb4aj+I2LEn40cbtawdWJ9Y8QLq+lElKxE=\n+github.com/alecthomas/repr v0.0.0-20180818092828-117648cd9897/go.mod h1:xTS7Pm1pD1mvyM075QCDSRqH6qRLXylzS24ZTpRiSzQ=\n+github.com/alecthomas/repr v0.0.0-20200325044227-4184120f674c h1:MVVbswUlqicyj8P/JljoocA7AyCo62gzD0O7jfvrhtE=\n+github.com/alecthomas/repr v0.0.0-20200325044227-4184120f674c/go.mod h1:xTS7Pm1pD1mvyM075QCDSRqH6qRLXylzS24ZTpRiSzQ=\n github.com/danwakefield/fnmatch v0.0.0-20160403171240-cbb64ac3d964 h1:y5HC9v93H5EPKqaS1UYVg1uYah5Xf51mBfIoWehClUQ=\n github.com/danwakefield/fnmatch v0.0.0-20160403171240-cbb64ac3d964/go.mod h1:Xd9hchkHSWYkEqJwUGisez3G1QY8Ryz0sdWrLPMGjLk=\n+github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\n github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n-github.com/dlclark/regexp2 v1.1.6 h1:CqB4MjHw0MFCDj+PHHjiESmHX+N7t0tJzKvC6M97BRg=\n-github.com/dlclark/regexp2 v1.1.6/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\n-github.com/mattn/go-isatty v0.0.4 h1:bnP0vzxcAdeI1zdubAl5PjU6zsERjGZb7raWodagDYs=\n-github.com/mattn/go-isatty v0.0.4/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\n+github.com/dlclark/regexp2 v1.2.0 h1:8sAhBGEM0dRWogWqWyQeIJnxjWO6oIjl8FKqREDsGfk=\n+github.com/dlclark/regexp2 v1.2.0/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\n+github.com/mattn/go-colorable v0.1.6/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\n+github.com/mattn/go-isatty v0.0.12 h1:wuysRhFDzyxgEmMf5xjvJ2M9dZoWAXNNr5LSBS7uHXY=\n+github.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\n+github.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n+github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\n github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\n github.com/russross/blackfriday/v2 v2.0.1 h1:lPqVAte+HuHNfhJ/0LC98ESWRz8afy9tM/0RK8m9o+Q=\n@@ -22,7 +28,19 @@ github.com/sergi/go-diff v1.0.0 h1:Kpca3qRNrduNnOQeazBd0ysaKrUJiIuISHxogkT9RPQ=\n github.com/sergi/go-diff v1.0.0/go.mod h1:0CfEIISq7TuYL3j771MWULgwwjU+GofnZX9QAmXWZgo=\n github.com/shurcooL/sanitized_anchor_name v1.0.0 h1:PdmoCO6wvbs+7yrJyMORt4/BmY5IYyJwS/kOiWx8mHo=\n github.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=\n+github.com/stretchr/objx v0.1.0 h1:4G4v2dO3VZwixGIRoQ5Lfboy6nUhCyYzaqnIAPPhYs4=\n+github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\n github.com/stretchr/testify v1.2.2 h1:bSDNvY7ZPG5RlJ8otE/7V6gMiyenm9RtJ7IUVIAoJ1w=\n github.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\n-golang.org/x/sys v0.0.0-20181107165924-66b7b1311ac8 h1:YoY1wS6JYVRpIfFngRf2HHo9R9dAne3xbkGOQ5rJXjU=\n-golang.org/x/sys v0.0.0-20181107165924-66b7b1311ac8/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n+github.com/stretchr/testify v1.3.0 h1:TivCn/peBQ7UY8ooIcPgZFpTNSz0Q2U6UrFlUfqbe0Q=\n+github.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\n+github.com/stretchr/testify v1.6.1 h1:hDPOHmpOpP40lSULcqw7IrRb/u7w6RpDC9399XyoNd0=\n+github.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\n+golang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n+golang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n+golang.org/x/sys v0.0.0-20200413165638-669c56c373c4 h1:opSr2sbRXk5X5/givKrrKj9HXxFpW2sdCiP8MJSKLQY=\n+golang.org/x/sys v0.0.0-20200413165638-669c56c373c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n+gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405 h1:yhCVgyC4o1eVCa2tZl7eS0r+SDo693bJlVdllGtEeKM=\n+gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\n+gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c h1:dUUwHk2QECo/6vqA44rthZ8ie2QXMNeKRTHCNY2nXvo=\n+gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM="
    },
    {
      "sha": "e9e997a00a0febd92bcf7e85f1e8c5436eba7e2d",
      "filename": "backend/vendor/github.com/Depado/bfchroma/renderer.go",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/Depado/bfchroma/renderer.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/Depado/bfchroma/renderer.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/Depado/bfchroma/renderer.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -40,6 +40,13 @@ func WithoutAutodetect() Option {\n \t}\n }\n \n+// EmbedCSS will embed CSS needed for html.WithClasses() in beginning of the document\n+func EmbedCSS() Option {\n+\treturn func(r *Renderer) {\n+\t\tr.embedCSS = true\n+\t}\n+}\n+\n // ChromaOptions allows to pass Chroma html.Option such as Standalone()\n // WithClasses(), ClassPrefix(prefix)...\n func ChromaOptions(options ...html.Option) Option {\n@@ -101,11 +108,19 @@ type Renderer struct {\n \tChromaOptions []html.Option\n \tStyle         *chroma.Style\n \tFormatter     *html.Formatter\n+\tembedCSS bool\n }\n \n // RenderNode satisfies the Renderer interface\n func (r *Renderer) RenderNode(w io.Writer, node *bf.Node, entering bool) bf.WalkStatus {\n \tswitch node.Type {\n+\tcase bf.Document:\n+\t\tif entering && r.embedCSS {\n+\t\t\tw.Write([]byte(\"<style>\"))\n+\t\t\tr.Formatter.WriteCSS(w, r.Style)\n+\t\t\tw.Write([]byte(\"</style>\"))\n+\t\t}\n+\t\treturn r.Base.RenderNode(w, node, entering)\n \tcase bf.CodeBlock:\n \t\tif err := r.RenderWithChroma(w, node.Literal, node.CodeBlockData); err != nil {\n \t\t\treturn r.Base.RenderNode(w, node, entering)\n@@ -125,3 +140,8 @@ func (r *Renderer) RenderHeader(w io.Writer, ast *bf.Node) {\n func (r *Renderer) RenderFooter(w io.Writer, ast *bf.Node) {\n \tr.Base.RenderFooter(w, ast)\n }\n+\n+// ChromaCSS returns CSS used with chroma's html.WithClasses() option\n+func (r *Renderer) ChromaCSS(w io.Writer) error {\n+\treturn r.Formatter.WriteCSS(w, r.Style)\n+}\n\\ No newline at end of file"
    },
    {
      "sha": "8430c86a2a505815865340e25f933dd4d709318f",
      "filename": "backend/vendor/github.com/PuerkitoBio/goquery/.travis.yml",
      "status": "modified",
      "additions": 19,
      "deletions": 5,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/PuerkitoBio/goquery/.travis.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/PuerkitoBio/goquery/.travis.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/PuerkitoBio/goquery/.travis.yml?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -1,17 +1,31 @@\n+arch:\n+    - amd64\n+    - ppc64le\n language: go\n \n go:\n-    - 1.2.x\n-    - 1.3.x\n-    - 1.4.x\n-    - 1.5.x\n-    - 1.6.x\n     - 1.7.x\n     - 1.8.x\n     - 1.9.x\n     - 1.10.x\n     - 1.11.x\n     - 1.12.x\n     - 1.13.x\n+    - 1.14.x\n+    - 1.15.x\n     - tip\n \n+jobs:\n+ exclude:\n+    - arch: ppc64le\n+      go: 1.7.x\n+    - arch: ppc64le\n+      go: 1.8.x\n+    - arch: ppc64le\n+      go: 1.9.x\n+    - arch: ppc64le\n+      go: 1.10.x\n+    - arch: ppc64le\n+      go: 1.11.x\n+    - arch: ppc64le\n+      go: 1.12.x"
    },
    {
      "sha": "25372c2b603953e0909e59eddd9bb157cccb0ad6",
      "filename": "backend/vendor/github.com/PuerkitoBio/goquery/LICENSE",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/PuerkitoBio/goquery/LICENSE",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/PuerkitoBio/goquery/LICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/PuerkitoBio/goquery/LICENSE?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -1,4 +1,4 @@\n-Copyright (c) 2012-2016, Martin Angers & Contributors\n+Copyright (c) 2012-2021, Martin Angers & Contributors\n All rights reserved.\n \n Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:"
    },
    {
      "sha": "6bb185c2cad3e4d0434ccd057c12ead9f6e8d2d4",
      "filename": "backend/vendor/github.com/PuerkitoBio/goquery/README.md",
      "status": "modified",
      "additions": 27,
      "deletions": 15,
      "changes": 42,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/PuerkitoBio/goquery/README.md",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/PuerkitoBio/goquery/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/PuerkitoBio/goquery/README.md?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -1,5 +1,9 @@\n # goquery - a little like that j-thing, only in Go\n-[![build status](https://secure.travis-ci.org/PuerkitoBio/goquery.svg?branch=master)](http://travis-ci.org/PuerkitoBio/goquery) [![GoDoc](https://godoc.org/github.com/PuerkitoBio/goquery?status.png)](http://godoc.org/github.com/PuerkitoBio/goquery) [![Sourcegraph Badge](https://sourcegraph.com/github.com/PuerkitoBio/goquery/-/badge.svg)](https://sourcegraph.com/github.com/PuerkitoBio/goquery?badge)\n+\n+[![builds.sr.ht status](https://builds.sr.ht/~mna/goquery/commits/fedora.yml.svg)](https://builds.sr.ht/~mna/goquery/commits/fedora.yml?)\n+[![build status](https://secure.travis-ci.org/PuerkitoBio/goquery.svg?branch=master)](http://travis-ci.org/PuerkitoBio/goquery)\n+[![Go Reference](https://pkg.go.dev/badge/github.com/PuerkitoBio/goquery.svg)](https://pkg.go.dev/github.com/PuerkitoBio/goquery)\n+[![Sourcegraph Badge](https://sourcegraph.com/github.com/PuerkitoBio/goquery/-/badge.svg)](https://sourcegraph.com/github.com/PuerkitoBio/goquery?badge)\n \n goquery brings a syntax and a set of features similar to [jQuery][] to the [Go language][go]. It is based on Go's [net/html package][html] and the CSS Selector library [cascadia][]. Since the net/html parser returns nodes, and not a full-featured DOM tree, jQuery's stateful manipulation functions (like height(), css(), detach()) have been left off.\n \n@@ -19,7 +23,7 @@ Syntax-wise, it is as close as possible to jQuery, with the same function names\n \n ## Installation\n \n-Please note that because of the net/html dependency, goquery requires Go1.1+.\n+Please note that because of the net/html dependency, goquery requires Go1.1+ and is tested on Go1.7+.\n \n     $ go get github.com/PuerkitoBio/goquery\n \n@@ -37,6 +41,10 @@ Please note that because of the net/html dependency, goquery requires Go1.1+.\n \n **Note that goquery's API is now stable, and will not break.**\n \n+*    **2021-07-11 (v1.7.1)** : Update go.mod dependencies and add dependabot config (thanks [@jauderho](https://github.com/jauderho)).\n+*    **2021-06-14 (v1.7.0)** : Add `Single` and `SingleMatcher` functions to optimize first-match selection (thanks [@gdollardollar](https://github.com/gdollardollar)).\n+*    **2021-01-11 (v1.6.1)** : Fix panic when calling `{Prepend,Append,Set}Html` on a `Selection` that contains non-Element nodes.\n+*    **2020-10-08 (v1.6.0)** : Parse html in context of the container node for all functions that deal with html strings (`AfterHtml`, `AppendHtml`, etc.). Thanks to [@thiemok][thiemok] and [@davidjwilkins][djw] for their work on this.\n *    **2020-02-04 (v1.5.1)** : Update module dependencies.\n *    **2018-11-15 (v1.5.0)** : Go module support (thanks @Zaba505).\n *    **2018-06-07 (v1.4.1)** : Add `NewDocumentFromReader` examples.\n@@ -48,7 +56,7 @@ Please note that because of the net/html dependency, goquery requires Go1.1+.\n *    **2016-08-28 (v1.0.1)** : Optimize performance for large documents.\n *    **2016-07-27 (v1.0.0)** : Tag version 1.0.0.\n *    **2016-06-15** : Invalid selector strings internally compile to a `Matcher` implementation that never matches any node (instead of a panic). So for example, `doc.Find(\"~\")` returns an empty `*Selection` object.\n-*    **2016-02-02** : Add `NodeName` utility function similar to the DOM's `nodeName` property. It returns the tag name of the first element in a selection, and other relevant values of non-element nodes (see godoc for details). Add `OuterHtml` utility function similar to the DOM's `outerHTML` property (named `OuterHtml` in small caps for consistency with the existing `Html` method on the `Selection`).\n+*    **2016-02-02** : Add `NodeName` utility function similar to the DOM's `nodeName` property. It returns the tag name of the first element in a selection, and other relevant values of non-element nodes (see [doc][] for details). Add `OuterHtml` utility function similar to the DOM's `outerHTML` property (named `OuterHtml` in small caps for consistency with the existing `Html` method on the `Selection`).\n *    **2015-04-20** : Add `AttrOr` helper method to return the attribute's value or a default value if absent. Thanks to [piotrkowalczuk][piotr].\n *    **2015-02-04** : Add more manipulation functions - Prepend* - thanks again to [Andrew Stone][thatguystone].\n *    **2014-11-28** : Add more manipulation functions - ReplaceWith*, Wrap* and Unwrap - thanks again to [Andrew Stone][thatguystone].\n@@ -77,7 +85,7 @@ jQuery often has many variants for the same function (no argument, a selector st\n \n Utility functions that are not in jQuery but are useful in Go are implemented as functions (that take a `*Selection` as parameter), to avoid a potential naming clash on the `*Selection`'s methods (reserved for jQuery-equivalent behaviour).\n \n-The complete [godoc reference documentation can be found here][doc].\n+The complete [package reference documentation can be found here][doc].\n \n Please note that Cascadia's selectors do not necessarily match all supported selectors of jQuery (Sizzle). See the [cascadia project][cascadia] for details. Invalid selector strings compile to a `Matcher` that fails to match any node. Behaviour of the various functions that take a selector string as argument follows from that fact, e.g. (where `~` is an invalid selector string):\n \n@@ -121,12 +129,11 @@ func ExampleScrape() {\n   }\n \n   // Find the review items\n-  doc.Find(\".sidebar-reviews article .content-block\").Each(func(i int, s *goquery.Selection) {\n-    // For each item found, get the band and title\n-    band := s.Find(\"a\").Text()\n-    title := s.Find(\"i\").Text()\n-    fmt.Printf(\"Review %d: %s - %s\\n\", i, band, title)\n-  })\n+  doc.Find(\".left-content article .post-title\").Each(func(i int, s *goquery.Selection) {\n+\t\t// For each item found, get the title\n+\t\ttitle := s.Find(\"a\").Text()\n+\t\tfmt.Printf(\"Review %d: %s\\n\", i, title)\n+\t})\n }\n \n func main() {\n@@ -143,8 +150,10 @@ func main() {\n - [gnulnx/goperf](https://github.com/gnulnx/goperf), a website performance test tool that also fetches static assets.\n - [MontFerret/ferret](https://github.com/MontFerret/ferret), declarative web scraping.\n - [tacusci/berrycms](https://github.com/tacusci/berrycms), a modern simple to use CMS with easy to write plugins\n-- [Dataflow kit](https://github.com/slotix/dataflowkit), Web Scraping framework for Gophers.  \n+- [Dataflow kit](https://github.com/slotix/dataflowkit), Web Scraping framework for Gophers.\n - [Geziyor](https://github.com/geziyor/geziyor), a fast web crawling & scraping framework for Go. Supports JS rendering.\n+- [Pagser](https://github.com/foolin/pagser), a simple, easy, extensible, configurable HTML parser to struct based on goquery and struct tags.\n+- [stitcherd](https://github.com/vhodges/stitcherd), A server for doing server side includes using css selectors and DOM updates.\n \n ## Support\n \n@@ -157,8 +166,9 @@ There are a number of ways you can support the project:\n * Pull requests: please discuss new code in an issue first, unless the fix is really trivial.\n   - Make sure new code is tested.\n   - Be mindful of existing code - PRs that break existing code have a high probability of being declined, unless it fixes a serious issue.\n-\n-If you desperately want to send money my way, I have a BuyMeACoffee.com page:\n+* Sponsor the developer\n+  - See the Github Sponsor button at the top of the repo on github\n+  - or via BuyMeACoffee.com, below\n \n <a href=\"https://www.buymeacoffee.com/mna\" target=\"_blank\"><img src=\"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\" alt=\"Buy Me A Coffee\" style=\"height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;\" ></a>\n \n@@ -173,11 +183,13 @@ The [BSD 3-Clause license][bsd], the same as the [Go language][golic]. Cascadia'\n [bsd]: http://opensource.org/licenses/BSD-3-Clause\n [golic]: http://golang.org/LICENSE\n [caslic]: https://github.com/andybalholm/cascadia/blob/master/LICENSE\n-[doc]: http://godoc.org/github.com/PuerkitoBio/goquery\n+[doc]: https://pkg.go.dev/github.com/PuerkitoBio/goquery\n [index]: http://api.jquery.com/index/\n [gonet]: https://github.com/golang/net/\n-[html]: http://godoc.org/golang.org/x/net/html\n+[html]: https://pkg.go.dev/golang.org/x/net/html\n [wiki]: https://github.com/PuerkitoBio/goquery/wiki/Tips-and-tricks\n [thatguystone]: https://github.com/thatguystone\n [piotr]: https://github.com/piotrkowalczuk\n [goq]: https://github.com/andrewstuart/goq\n+[thiemok]: https://github.com/thiemok\n+[djw]: https://github.com/davidjwilkins"
    },
    {
      "sha": "3af3b154db61ca88cce58faa90678cc16f8062c2",
      "filename": "backend/vendor/github.com/PuerkitoBio/goquery/go.mod",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/PuerkitoBio/goquery/go.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/PuerkitoBio/goquery/go.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/PuerkitoBio/goquery/go.mod?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -1,8 +1,8 @@\n module github.com/PuerkitoBio/goquery\n \n require (\n-\tgithub.com/andybalholm/cascadia v1.1.0\n-\tgolang.org/x/net v0.0.0-20200202094626-16171245cfb2\n+\tgithub.com/andybalholm/cascadia v1.2.0\n+\tgolang.org/x/net v0.0.0-20210614182718-04defd469f4e\n )\n \n go 1.13"
    },
    {
      "sha": "13b128d4e55f0a7d99f041bc7ae03dd3b46ed6d1",
      "filename": "backend/vendor/github.com/PuerkitoBio/goquery/go.sum",
      "status": "modified",
      "additions": 9,
      "deletions": 7,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/PuerkitoBio/goquery/go.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/PuerkitoBio/goquery/go.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/PuerkitoBio/goquery/go.sum?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -1,8 +1,10 @@\n-github.com/andybalholm/cascadia v1.1.0 h1:BuuO6sSfQNFRu1LppgbD25Hr2vLYW25JvxHs5zzsLTo=\n-github.com/andybalholm/cascadia v1.1.0/go.mod h1:GsXiBklL0woXo1j/WYWtSYYC4ouU9PqHO0sqidkEA4Y=\n-golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\n+github.com/andybalholm/cascadia v1.2.0 h1:vuRCkM5Ozh/BfmsaTm26kbjm0mIOM3yS5Ek/F5h18aE=\n+github.com/andybalholm/cascadia v1.2.0/go.mod h1:YCyR8vOZT9aZ1CHEd8ap0gMVm2aFgxBp0T0eFw1RUQY=\n golang.org/x/net v0.0.0-20180218175443-cbe0f9307d01/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n-golang.org/x/net v0.0.0-20200202094626-16171245cfb2 h1:CCH4IOTTfewWjGOlSp+zGcjutRKlBEZQ6wTn8ozI/nI=\n-golang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\n-golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n-golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\n+golang.org/x/net v0.0.0-20210614182718-04defd469f4e h1:XpT3nA5TvE525Ne3hInMh6+GETgn27Zfm9dxsThnX2Q=\n+golang.org/x/net v0.0.0-20210614182718-04defd469f4e/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\n+golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n+golang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n+golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\n+golang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\n+golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ="
    },
    {
      "sha": "35febf1189596afda6f6071f5c3c3f01b30a6910",
      "filename": "backend/vendor/github.com/PuerkitoBio/goquery/manipulation.go",
      "status": "modified",
      "additions": 136,
      "deletions": 31,
      "changes": 167,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/PuerkitoBio/goquery/manipulation.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/PuerkitoBio/goquery/manipulation.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/PuerkitoBio/goquery/manipulation.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -39,8 +39,15 @@ func (s *Selection) AfterSelection(sel *Selection) *Selection {\n // AfterHtml parses the html and inserts it after the set of matched elements.\n //\n // This follows the same rules as Selection.Append.\n-func (s *Selection) AfterHtml(html string) *Selection {\n-\treturn s.AfterNodes(parseHtml(html)...)\n+func (s *Selection) AfterHtml(htmlStr string) *Selection {\n+\treturn s.eachNodeHtml(htmlStr, true, func(node *html.Node, nodes []*html.Node) {\n+\t\tnextSibling := node.NextSibling\n+\t\tfor _, n := range nodes {\n+\t\t\tif node.Parent != nil {\n+\t\t\t\tnode.Parent.InsertBefore(n, nextSibling)\n+\t\t\t}\n+\t\t}\n+\t})\n }\n \n // AfterNodes inserts the nodes after each element in the set of matched elements.\n@@ -85,8 +92,12 @@ func (s *Selection) AppendSelection(sel *Selection) *Selection {\n }\n \n // AppendHtml parses the html and appends it to the set of matched elements.\n-func (s *Selection) AppendHtml(html string) *Selection {\n-\treturn s.AppendNodes(parseHtml(html)...)\n+func (s *Selection) AppendHtml(htmlStr string) *Selection {\n+\treturn s.eachNodeHtml(htmlStr, false, func(node *html.Node, nodes []*html.Node) {\n+\t\tfor _, n := range nodes {\n+\t\t\tnode.AppendChild(n)\n+\t\t}\n+\t})\n }\n \n // AppendNodes appends the specified nodes to each node in the set of matched elements.\n@@ -123,8 +134,14 @@ func (s *Selection) BeforeSelection(sel *Selection) *Selection {\n // BeforeHtml parses the html and inserts it before the set of matched elements.\n //\n // This follows the same rules as Selection.Append.\n-func (s *Selection) BeforeHtml(html string) *Selection {\n-\treturn s.BeforeNodes(parseHtml(html)...)\n+func (s *Selection) BeforeHtml(htmlStr string) *Selection {\n+\treturn s.eachNodeHtml(htmlStr, true, func(node *html.Node, nodes []*html.Node) {\n+\t\tfor _, n := range nodes {\n+\t\t\tif node.Parent != nil {\n+\t\t\t\tnode.Parent.InsertBefore(n, node)\n+\t\t\t}\n+\t\t}\n+\t})\n }\n \n // BeforeNodes inserts the nodes before each element in the set of matched elements.\n@@ -184,8 +201,13 @@ func (s *Selection) PrependSelection(sel *Selection) *Selection {\n }\n \n // PrependHtml parses the html and prepends it to the set of matched elements.\n-func (s *Selection) PrependHtml(html string) *Selection {\n-\treturn s.PrependNodes(parseHtml(html)...)\n+func (s *Selection) PrependHtml(htmlStr string) *Selection {\n+\treturn s.eachNodeHtml(htmlStr, false, func(node *html.Node, nodes []*html.Node) {\n+\t\tfirstChild := node.FirstChild\n+\t\tfor _, n := range nodes {\n+\t\t\tnode.InsertBefore(n, firstChild)\n+\t\t}\n+\t})\n }\n \n // PrependNodes prepends the specified nodes to each node in the set of\n@@ -212,14 +234,19 @@ func (s *Selection) Remove() *Selection {\n \treturn s\n }\n \n-// RemoveFiltered removes the set of matched elements by selector.\n-// It returns the Selection of removed nodes.\n+// RemoveFiltered removes from the current set of matched elements those that\n+// match the selector filter. It returns the Selection of removed nodes.\n+//\n+// For example if the selection s contains \"<h1>\", \"<h2>\" and \"<h3>\"\n+// and s.RemoveFiltered(\"h2\") is called, only the \"<h2>\" node is removed\n+// (and returned), while \"<h1>\" and \"<h3>\" are kept in the document.\n func (s *Selection) RemoveFiltered(selector string) *Selection {\n \treturn s.RemoveMatcher(compileMatcher(selector))\n }\n \n-// RemoveMatcher removes the set of matched elements.\n-// It returns the Selection of removed nodes.\n+// RemoveMatcher removes from the current set of matched elements those that\n+// match the Matcher filter. It returns the Selection of removed nodes.\n+// See RemoveFiltered for additional information.\n func (s *Selection) RemoveMatcher(m Matcher) *Selection {\n \treturn s.FilterMatcher(m).Remove()\n }\n@@ -256,8 +283,16 @@ func (s *Selection) ReplaceWithSelection(sel *Selection) *Selection {\n // It returns the removed elements.\n //\n // This follows the same rules as Selection.Append.\n-func (s *Selection) ReplaceWithHtml(html string) *Selection {\n-\treturn s.ReplaceWithNodes(parseHtml(html)...)\n+func (s *Selection) ReplaceWithHtml(htmlStr string) *Selection {\n+\ts.eachNodeHtml(htmlStr, true, func(node *html.Node, nodes []*html.Node) {\n+\t\tnextSibling := node.NextSibling\n+\t\tfor _, n := range nodes {\n+\t\t\tif node.Parent != nil {\n+\t\t\t\tnode.Parent.InsertBefore(n, nextSibling)\n+\t\t\t}\n+\t\t}\n+\t})\n+\treturn s.Remove()\n }\n \n // ReplaceWithNodes replaces each element in the set of matched elements with\n@@ -272,8 +307,17 @@ func (s *Selection) ReplaceWithNodes(ns ...*html.Node) *Selection {\n \n // SetHtml sets the html content of each element in the selection to\n // specified html string.\n-func (s *Selection) SetHtml(html string) *Selection {\n-\treturn setHtmlNodes(s, parseHtml(html)...)\n+func (s *Selection) SetHtml(htmlStr string) *Selection {\n+\tfor _, context := range s.Nodes {\n+\t\tfor c := context.FirstChild; c != nil; c = context.FirstChild {\n+\t\t\tcontext.RemoveChild(c)\n+\t\t}\n+\t}\n+\treturn s.eachNodeHtml(htmlStr, false, func(node *html.Node, nodes []*html.Node) {\n+\t\tfor _, n := range nodes {\n+\t\t\tnode.AppendChild(n)\n+\t\t}\n+\t})\n }\n \n // SetText sets the content of each element in the selection to specified content.\n@@ -329,8 +373,23 @@ func (s *Selection) WrapSelection(sel *Selection) *Selection {\n // most child of the given HTML.\n //\n // It returns the original set of elements.\n-func (s *Selection) WrapHtml(html string) *Selection {\n-\treturn s.wrapNodes(parseHtml(html)...)\n+func (s *Selection) WrapHtml(htmlStr string) *Selection {\n+\tnodesMap := make(map[string][]*html.Node)\n+\tfor _, context := range s.Nodes {\n+\t\tvar parent *html.Node\n+\t\tif context.Parent != nil {\n+\t\t\tparent = context.Parent\n+\t\t} else {\n+\t\t\tparent = &html.Node{Type: html.ElementNode}\n+\t\t}\n+\t\tnodes, found := nodesMap[nodeName(parent)]\n+\t\tif !found {\n+\t\t\tnodes = parseHtmlWithContext(htmlStr, parent)\n+\t\t\tnodesMap[nodeName(parent)] = nodes\n+\t\t}\n+\t\tnewSingleSelection(context, s.document).wrapAllNodes(cloneNodes(nodes)...)\n+\t}\n+\treturn s\n }\n \n // WrapNode wraps each element in the set of matched elements inside the inner-\n@@ -382,8 +441,18 @@ func (s *Selection) WrapAllSelection(sel *Selection) *Selection {\n // document.\n //\n // It returns the original set of elements.\n-func (s *Selection) WrapAllHtml(html string) *Selection {\n-\treturn s.wrapAllNodes(parseHtml(html)...)\n+func (s *Selection) WrapAllHtml(htmlStr string) *Selection {\n+\tvar context *html.Node\n+\tvar nodes []*html.Node\n+\tif len(s.Nodes) > 0 {\n+\t\tcontext = s.Nodes[0]\n+\t\tif context.Parent != nil {\n+\t\t\tnodes = parseHtmlWithContext(htmlStr, context)\n+\t\t} else {\n+\t\t\tnodes = parseHtml(htmlStr)\n+\t\t}\n+\t}\n+\treturn s.wrapAllNodes(nodes...)\n }\n \n func (s *Selection) wrapAllNodes(ns ...*html.Node) *Selection {\n@@ -452,8 +521,17 @@ func (s *Selection) WrapInnerSelection(sel *Selection) *Selection {\n // cloned before being inserted into the document.\n //\n // It returns the original set of elements.\n-func (s *Selection) WrapInnerHtml(html string) *Selection {\n-\treturn s.wrapInnerNodes(parseHtml(html)...)\n+func (s *Selection) WrapInnerHtml(htmlStr string) *Selection {\n+\tnodesMap := make(map[string][]*html.Node)\n+\tfor _, context := range s.Nodes {\n+\t\tnodes, found := nodesMap[nodeName(context)]\n+\t\tif !found {\n+\t\t\tnodes = parseHtmlWithContext(htmlStr, context)\n+\t\t\tnodesMap[nodeName(context)] = nodes\n+\t\t}\n+\t\tnewSingleSelection(context, s.document).wrapInnerNodes(cloneNodes(nodes)...)\n+\t}\n+\treturn s\n }\n \n // WrapInnerNode wraps an HTML structure, matched by the given selector, around\n@@ -493,16 +571,14 @@ func parseHtml(h string) []*html.Node {\n \treturn nodes\n }\n \n-func setHtmlNodes(s *Selection, ns ...*html.Node) *Selection {\n-\tfor _, n := range s.Nodes {\n-\t\tfor c := n.FirstChild; c != nil; c = n.FirstChild {\n-\t\t\tn.RemoveChild(c)\n-\t\t}\n-\t\tfor _, c := range ns {\n-\t\t\tn.AppendChild(cloneNode(c))\n-\t\t}\n+func parseHtmlWithContext(h string, context *html.Node) []*html.Node {\n+\t// Errors are only returned when the io.Reader returns any error besides\n+\t// EOF, but strings.Reader never will\n+\tnodes, err := html.ParseFragment(strings.NewReader(h), context)\n+\tif err != nil {\n+\t\tpanic(\"goquery: failed to parse HTML: \" + err.Error())\n \t}\n-\treturn s\n+\treturn nodes\n }\n \n // Get the first child that is an ElementNode\n@@ -572,3 +648,32 @@ func (s *Selection) manipulateNodes(ns []*html.Node, reverse bool,\n \n \treturn s\n }\n+\n+// eachNodeHtml parses the given html string and inserts the resulting nodes in the dom with the mergeFn.\n+// The parsed nodes are inserted for each element of the selection.\n+// isParent can be used to indicate that the elements of the selection should be treated as the parent for the parsed html.\n+// A cache is used to avoid parsing the html multiple times should the elements of the selection result in the same context.\n+func (s *Selection) eachNodeHtml(htmlStr string, isParent bool, mergeFn func(n *html.Node, nodes []*html.Node)) *Selection {\n+\t// cache to avoid parsing the html for the same context multiple times\n+\tnodeCache := make(map[string][]*html.Node)\n+\tvar context *html.Node\n+\tfor _, n := range s.Nodes {\n+\t\tif isParent {\n+\t\t\tcontext = n.Parent\n+\t\t} else {\n+\t\t\tif n.Type != html.ElementNode {\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\tcontext = n\n+\t\t}\n+\t\tif context != nil {\n+\t\t\tnodes, found := nodeCache[nodeName(context)]\n+\t\t\tif !found {\n+\t\t\t\tnodes = parseHtmlWithContext(htmlStr, context)\n+\t\t\t\tnodeCache[nodeName(context)] = nodes\n+\t\t\t}\n+\t\t\tmergeFn(n, cloneNodes(nodes))\n+\t\t}\n+\t}\n+\treturn s\n+}"
    },
    {
      "sha": "6646c143b02192c27b8c6b8b65b7e4a5c3cdee13",
      "filename": "backend/vendor/github.com/PuerkitoBio/goquery/type.go",
      "status": "modified",
      "additions": 63,
      "deletions": 1,
      "changes": 64,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/PuerkitoBio/goquery/type.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/PuerkitoBio/goquery/type.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/PuerkitoBio/goquery/type.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -7,7 +7,6 @@ import (\n \t\"net/url\"\n \n \t\"github.com/andybalholm/cascadia\"\n-\n \t\"golang.org/x/net/html\"\n )\n \n@@ -122,6 +121,45 @@ type Matcher interface {\n \tFilter([]*html.Node) []*html.Node\n }\n \n+// Single compiles a selector string to a Matcher that stops after the first\n+// match is found.\n+//\n+// By default, Selection.Find and other functions that accept a selector string\n+// to select nodes will use all matches corresponding to that selector. By\n+// using the Matcher returned by Single, at most the first match will be\n+// selected.\n+//\n+// For example, those two statements are semantically equivalent:\n+//\n+//     sel1 := doc.Find(\"a\").First()\n+//     sel2 := doc.FindMatcher(goquery.Single(\"a\"))\n+//\n+// The one using Single is optimized to be potentially much faster on large\n+// documents.\n+//\n+// Only the behaviour of the MatchAll method of the Matcher interface is\n+// altered compared to standard Matchers. This means that the single-selection\n+// property of the Matcher only applies for Selection methods where the Matcher\n+// is used to select nodes, not to filter or check if a node matches the\n+// Matcher - in those cases, the behaviour of the Matcher is unchanged (e.g.\n+// FilterMatcher(Single(\"div\")) will still result in a Selection with multiple\n+// \"div\"s if there were many \"div\"s in the Selection to begin with).\n+func Single(selector string) Matcher {\n+\treturn singleMatcher{compileMatcher(selector)}\n+}\n+\n+// SingleMatcher returns a Matcher matches the same nodes as m, but that stops\n+// after the first match is found.\n+//\n+// See the documentation of function Single for more details.\n+func SingleMatcher(m Matcher) Matcher {\n+\tif _, ok := m.(singleMatcher); ok {\n+\t\t// m is already a singleMatcher\n+\t\treturn m\n+\t}\n+\treturn singleMatcher{m}\n+}\n+\n // compileMatcher compiles the selector string s and returns\n // the corresponding Matcher. If s is an invalid selector string,\n // it returns a Matcher that fails all matches.\n@@ -133,6 +171,30 @@ func compileMatcher(s string) Matcher {\n \treturn cs\n }\n \n+type singleMatcher struct {\n+\tMatcher\n+}\n+\n+func (m singleMatcher) MatchAll(n *html.Node) []*html.Node {\n+\t// Optimized version - stops finding at the first match (cascadia-compiled\n+\t// matchers all use this code path).\n+\tif mm, ok := m.Matcher.(interface{ MatchFirst(*html.Node) *html.Node }); ok {\n+\t\tnode := mm.MatchFirst(n)\n+\t\tif node == nil {\n+\t\t\treturn nil\n+\t\t}\n+\t\treturn []*html.Node{node}\n+\t}\n+\n+\t// Fallback version, for e.g. test mocks that don't provide the MatchFirst\n+\t// method.\n+\tnodes := m.Matcher.MatchAll(n)\n+\tif len(nodes) > 0 {\n+\t\treturn nodes[:1:1]\n+\t}\n+\treturn nil\n+}\n+\n // invalidMatcher is a Matcher that always fails to match.\n type invalidMatcher struct{}\n "
    },
    {
      "sha": "3e11b1db1b42401308a8feda729ec3ef5ce133dd",
      "filename": "backend/vendor/github.com/PuerkitoBio/goquery/utilities.go",
      "status": "modified",
      "additions": 14,
      "deletions": 4,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/PuerkitoBio/goquery/utilities.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/PuerkitoBio/goquery/utilities.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/PuerkitoBio/goquery/utilities.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -36,12 +36,22 @@ func NodeName(s *Selection) string {\n \tif s.Length() == 0 {\n \t\treturn \"\"\n \t}\n-\tswitch n := s.Get(0); n.Type {\n+\treturn nodeName(s.Get(0))\n+}\n+\n+// nodeName returns the node name of the given html node.\n+// See NodeName for additional details on behaviour.\n+func nodeName(node *html.Node) string {\n+\tif node == nil {\n+\t\treturn \"\"\n+\t}\n+\n+\tswitch node.Type {\n \tcase html.ElementNode, html.DoctypeNode:\n-\t\treturn n.Data\n+\t\treturn node.Data\n \tdefault:\n-\t\tif n.Type >= 0 && int(n.Type) < len(nodeNames) {\n-\t\t\treturn nodeNames[n.Type]\n+\t\tif node.Type >= 0 && int(node.Type) < len(nodeNames) {\n+\t\t\treturn nodeNames[node.Type]\n \t\t}\n \t\treturn \"\"\n \t}"
    },
    {
      "sha": "ba7557339e9d34ed1e2f5a7427b21df7327310ae",
      "filename": "backend/vendor/github.com/alecthomas/chroma/.golangci.yml",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/.golangci.yml?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -20,6 +20,22 @@ linters:\n     - wsl\n     - gomnd\n     - gocognit\n+    - goerr113\n+    - nolintlint\n+    - testpackage\n+    - godot\n+    - nestif\n+    - paralleltest\n+    - nlreturn\n+    - cyclop\n+    - exhaustivestruct\n+    - gci\n+    - gofumpt\n+    - errorlint\n+    - exhaustive\n+    - ifshort\n+    - wrapcheck\n+    - stylecheck\n \n linters-settings:\n   govet:\n@@ -31,6 +47,11 @@ linters-settings:\n   goconst:\n     min-len: 8\n     min-occurrences: 3\n+  forbidigo:\n+    forbid:\n+      - (Must)?NewLexer\n+    exclude_godoc_examples: false\n+\n \n issues:\n   max-per-linter: 0"
    },
    {
      "sha": "f8abfdd862a7cf5bc249ec20afac8d3023b6df36",
      "filename": "backend/vendor/github.com/alecthomas/chroma/.goreleaser.yml",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/.goreleaser.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/.goreleaser.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/.goreleaser.yml?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,6 +6,8 @@ release:\n brews:\n   -\n     install: bin.install \"chroma\"\n+env:\n+  - CGO_ENABLED=0\n builds:\n - goos:\n     - linux"
    },
    {
      "sha": "9216ec9743f3564ffeb5565e1926c0aeada0c072",
      "filename": "backend/vendor/github.com/alecthomas/chroma/.travis.yml",
      "status": "removed",
      "additions": 0,
      "deletions": 12,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/alecthomas/chroma/.travis.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/alecthomas/chroma/.travis.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/.travis.yml?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,12 +0,0 @@\n-sudo: false\n-language: go\n-go:\n-  - \"1.13.x\"\n-script:\n-  - go test -v ./...\n-  - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | bash -s v1.22.2\n-  - ./bin/golangci-lint run\n-  - git clean -fdx .\n-after_success:\n-  curl -sL https://git.io/goreleaser | bash && goreleaser\n-"
    },
    {
      "sha": "010ec0394f403353374ce822c958d15e5b22d722",
      "filename": "backend/vendor/github.com/alecthomas/chroma/Makefile",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/Makefile",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/Makefile",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/Makefile?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -1,5 +1,7 @@\n .PHONY: chromad upload all\n \n+VERSION ?= $(shell git describe --tags --dirty  --always)\n+\n all: README.md tokentype_string.go\n \n README.md: lexers/*/*.go\n@@ -9,10 +11,8 @@ tokentype_string.go: types.go\n \tgo generate\n \n chromad:\n-\t(cd ./cmd/chromad && go get github.com/GeertJohan/go.rice/rice@master && go install github.com/GeertJohan/go.rice/rice)\n \trm -f chromad\n-\t(export CGOENABLED=0 GOOS=linux ; cd ./cmd/chromad && go build -o ../../chromad .)\n-\trice append -i ./cmd/chromad --exec=./chromad\n+\t(export CGOENABLED=0 GOOS=linux ; cd ./cmd/chromad && go build -ldflags=\"-X 'main.version=$(VERSION)'\" -o ../../chromad .)\n \n upload: chromad\n \tscp chromad root@swapoff.org: && \\"
    },
    {
      "sha": "95d54e61ac5cf607d1564c77cb44a56171f055b2",
      "filename": "backend/vendor/github.com/alecthomas/chroma/README.md",
      "status": "modified",
      "additions": 36,
      "deletions": 17,
      "changes": 53,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/README.md",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/README.md?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -1,4 +1,4 @@\n-# Chroma — A general purpose syntax highlighter in pure Go [![Golang Documentation](https://godoc.org/github.com/alecthomas/chroma?status.svg)](https://godoc.org/github.com/alecthomas/chroma) [![Build Status](https://travis-ci.org/alecthomas/chroma.svg)](https://travis-ci.org/alecthomas/chroma) [![Gitter chat](https://badges.gitter.im/alecthomas.svg)](https://gitter.im/alecthomas/Lobby)\n+# Chroma — A general purpose syntax highlighter in pure Go [![Golang Documentation](https://godoc.org/github.com/alecthomas/chroma?status.svg)](https://godoc.org/github.com/alecthomas/chroma) [![CircleCI](https://img.shields.io/circleci/project/github/alecthomas/chroma.svg)](https://circleci.com/gh/alecthomas/chroma) [![Go Report Card](https://goreportcard.com/badge/github.com/alecthomas/chroma)](https://goreportcard.com/report/github.com/alecthomas/chroma) [![Slack chat](https://img.shields.io/static/v1?logo=slack&style=flat&label=slack&color=green&message=gophers)](https://invite.slack.golangbridge.org/)\n \n > **NOTE:** As Chroma has just been released, its API is still in flux. That said, the high-level interface should not change significantly.\n \n@@ -36,29 +36,30 @@ translators for Pygments lexers and styles.\n Prefix | Language\n :----: | --------\n A | ABAP, ABNF, ActionScript, ActionScript 3, Ada, Angular2, ANTLR, ApacheConf, APL, AppleScript, Arduino, Awk\n-B | Ballerina, Base Makefile, Bash, Batchfile, BlitzBasic, BNF, Brainfuck\n-C | C, C#, C++, Cap'n Proto, Cassandra CQL, Ceylon, CFEngine3, cfstatement, ChaiScript, Cheetah, Clojure, CMake, COBOL, CoffeeScript, Common Lisp, Coq, Crystal, CSS, Cython\n-D | D, Dart, Diff, Django/Jinja, Docker, DTD\n+B | Ballerina, Base Makefile, Bash, Batchfile, BibTeX, BlitzBasic, BNF, Brainfuck\n+C | C, C#, C++, Caddyfile, Caddyfile Directives, Cap'n Proto, Cassandra CQL, Ceylon, CFEngine3, cfstatement, ChaiScript, Cheetah, Clojure, CMake, COBOL, CoffeeScript, Common Lisp, Coq, Crystal, CSS, Cython\n+D | D, Dart, Diff, Django/Jinja, Docker, DTD, Dylan\n E | EBNF, Elixir, Elm, EmacsLisp, Erlang\n F | Factor, Fish, Forth, Fortran, FSharp\n-G | GAS, GDScript, Genshi, Genshi HTML, Genshi Text, GLSL, Gnuplot, Go, Go HTML Template, Go Text Template, GraphQL, Groovy\n-H | Handlebars, Haskell, Haxe, HCL, Hexdump, HTML, HTTP, Hy\n-I | Idris, INI, Io\n+G | GAS, GDScript, Genshi, Genshi HTML, Genshi Text, Gherkin, GLSL, Gnuplot, Go, Go HTML Template, Go Text Template, GraphQL, Groff, Groovy\n+H | Handlebars, Haskell, Haxe, HCL, Hexdump, HLB, HTML, HTTP, Hy\n+I | Idris, Igor, INI, Io\n J | J, Java, JavaScript, JSON, Julia, Jungle\n K | Kotlin\n L | Lighttpd configuration file, LLVM, Lua\n M | Mako, markdown, Mason, Mathematica, Matlab, MiniZinc, MLIR, Modula-2, MonkeyC, MorrowindScript, Myghty, MySQL\n N | NASM, Newspeak, Nginx configuration file, Nim, Nix\n O | Objective-C, OCaml, Octave, OpenSCAD, Org Mode\n-P | PacmanConf, Perl, PHP, Pig, PkgConfig, PL/pgSQL, plaintext, PostgreSQL SQL dialect, PostScript, POVRay, PowerShell, Prolog, Protocol Buffer, Puppet, Python, Python 3\n+P | PacmanConf, Perl, PHP, PHTML, Pig, PkgConfig, PL/pgSQL, plaintext, Pony, PostgreSQL SQL dialect, PostScript, POVRay, PowerShell, Prolog, PromQL, Protocol Buffer, Puppet, Python 2, Python\n Q | QBasic\n-R | R, Racket, Ragel, react, reg, reStructuredText, Rexx, Ruby, Rust\n-S | Sass, Scala, Scheme, Scilab, SCSS, Smalltalk, Smarty, SML, Snobol, Solidity, SPARQL, SQL, SquidConf, Swift, SYSTEMD, systemverilog\n+R | R, Racket, Ragel, Raku, react, ReasonML, reg, reStructuredText, Rexx, Ruby, Rust\n+S | SAS, Sass, Scala, Scheme, Scilab, SCSS, Smalltalk, Smarty, Snobol, Solidity, SPARQL, SQL, SquidConf, Standard ML, Stylus, Svelte, Swift, SYSTEMD, systemverilog\n T | TableGen, TASM, Tcl, Tcsh, Termcap, Terminfo, Terraform, TeX, Thrift, TOML, TradingView, Transact-SQL, Turing, Turtle, Twig, TypeScript, TypoScript, TypoScriptCssData, TypoScriptHtmlData\n V | VB.net, verilog, VHDL, VimL, vue\n W | WDTE\n X | XML, Xorg\n-Y | YAML\n+Y | YAML, YANG\n+Z | Zig\n \n \n _I will attempt to keep this section up to date, but an authoritative list can be\n@@ -183,7 +184,7 @@ following constructor options:\n - `ClassPrefix(prefix)` - prefix each generated CSS class.\n - `TabWidth(width)` - Set the rendered tab width, in characters.\n - `WithLineNumbers()` - Render line numbers (style with `LineNumbers`).\n-- `LinkableLineNumbers()` - Make the line numbers linkable.\n+- `LinkableLineNumbers()` - Make the line numbers linkable and be a link to themselves.\n - `HighlightLines(ranges)` - Highlight lines in these ranges (style with `LineHighlight`).\n - `LineNumbersInTable()` - Use a table for formatting line numbers and code, rather than spans.\n \n@@ -209,13 +210,13 @@ using the included Python 3 script `pygments2chroma.py`. I use something like\n the following:\n \n ```sh\n-python3 ~/Projects/chroma/_tools/pygments2chroma.py \\\n+python3 _tools/pygments2chroma.py \\\n   pygments.lexers.jvm.KotlinLexer \\\n-  > ~/Projects/chroma/lexers/kotlin.go \\\n-  && gofmt -s -w ~/Projects/chroma/lexers/*.go\n+  > lexers/k/kotlin.go \\\n+  && gofmt -s -w lexers/k/kotlin.go\n ```\n \n-See notes in [pygments-lexers.go](https://github.com/alecthomas/chroma/blob/master/pygments-lexers.txt)\n+See notes in [pygments-lexers.txt](https://github.com/alecthomas/chroma/blob/master/pygments-lexers.txt)\n for a list of lexers, and notes on some of the issues importing them.\n \n <a id=\"markdown-formatters\" name=\"formatters\"></a>\n@@ -254,12 +255,30 @@ A command-line interface to Chroma is included. It can be installed with:\n go get -u github.com/alecthomas/chroma/cmd/chroma\n ```\n \n+The CLI can be used as a preprocessor to colorise output of `less(1)`,\n+see documentation for the `LESSOPEN` environment variable.\n+\n+The `--fail` flag can be used to suppress output and return with exit status\n+1 to facilitate falling back to some other preprocessor in case chroma\n+does not resolve a specific lexer to use for the given file. For example:\n+\n+```shell\n+export LESSOPEN='| p() { chroma --fail \"$1\" || cat \"$1\"; }; p \"%s\"'\n+```\n+\n+Replace `cat` with your favourite fallback preprocessor.\n+\n+When invoked as `.lessfilter`, the `--fail` flag is automatically turned\n+on under the hood for easy integration with [lesspipe shipping with\n+Debian and derivatives](https://manpages.debian.org/lesspipe#USER_DEFINED_FILTERS);\n+for that setup the `chroma` executable can be just symlinked to `~/.lessfilter`.\n+\n <a id=\"markdown-whats-missing-compared-to-pygments\" name=\"whats-missing-compared-to-pygments\"></a>\n ## What's missing compared to Pygments?\n \n - Quite a few lexers, for various reasons (pull-requests welcome):\n     - Pygments lexers for complex languages often include custom code to\n-      handle certain aspects, such as Perl6's ability to nest code inside\n+      handle certain aspects, such as Raku's ability to nest code inside\n       regular expressions. These require time and effort to convert.\n     - I mostly only converted languages I had heard of, to reduce the porting cost.\n - Some more esoteric features of Pygments are omitted for simplicity."
    },
    {
      "sha": "5121529ebbfaeb593caa95d0056f62b0b7162bd1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/formatters/html/html.go",
      "status": "modified",
      "additions": 21,
      "deletions": 5,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/formatters/html/html.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/formatters/html/html.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/formatters/html/html.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -131,7 +131,7 @@ var (\n \t}\n \tdefaultPreWrapper = preWrapper{\n \t\tstart: func(code bool, styleAttr string) string {\n-\t\t\treturn fmt.Sprintf(\"<pre%s>\", styleAttr)\n+\t\t\treturn fmt.Sprintf(`<pre tabindex=\"0\"%s>`, styleAttr)\n \t\t},\n \t\tend: func(code bool) string {\n \t\t\treturn \"</pre>\"\n@@ -211,7 +211,7 @@ func (f *Formatter) writeHTML(w io.Writer, style *chroma.Style, tokens []chroma.\n \t\t\t\tfmt.Fprintf(w, \"<span%s>\", f.styleAttr(css, chroma.LineHighlight))\n \t\t\t}\n \n-\t\t\tfmt.Fprintf(w, \"<span%s%s>%*d\\n</span>\", f.styleAttr(css, chroma.LineNumbersTable), f.lineIDAttribute(line), lineDigits, line)\n+\t\t\tfmt.Fprintf(w, \"<span%s%s>%s\\n</span>\", f.styleAttr(css, chroma.LineNumbersTable), f.lineIDAttribute(line), f.lineTitleWithLinkIfNeeded(lineDigits, line))\n \n \t\t\tif highlight {\n \t\t\t\tfmt.Fprintf(w, \"</span>\")\n@@ -237,7 +237,7 @@ func (f *Formatter) writeHTML(w io.Writer, style *chroma.Style, tokens []chroma.\n \t\t}\n \n \t\tif f.lineNumbers && !wrapInTable {\n-\t\t\tfmt.Fprintf(w, \"<span%s%s>%*d</span>\", f.styleAttr(css, chroma.LineNumbers), f.lineIDAttribute(line), lineDigits, line)\n+\t\t\tfmt.Fprintf(w, \"<span%s%s>%s</span>\", f.styleAttr(css, chroma.LineNumbers), f.lineIDAttribute(line), f.lineTitleWithLinkIfNeeded(lineDigits, line))\n \t\t}\n \n \t\tfor _, token := range tokens {\n@@ -272,7 +272,19 @@ func (f *Formatter) lineIDAttribute(line int) string {\n \tif !f.linkableLineNumbers {\n \t\treturn \"\"\n \t}\n-\treturn fmt.Sprintf(\" id=\\\"%s%d\\\"\", f.lineNumbersIDPrefix, line)\n+\treturn fmt.Sprintf(\" id=\\\"%s\\\"\", f.lineID(line))\n+}\n+\n+func (f *Formatter) lineTitleWithLinkIfNeeded(lineDigits, line int) string {\n+\ttitle := fmt.Sprintf(\"%*d\", lineDigits, line)\n+\tif !f.linkableLineNumbers {\n+\t\treturn title\n+\t}\n+\treturn fmt.Sprintf(\"<a style=\\\"outline: none; text-decoration:none; color:inherit\\\" href=\\\"#%s\\\">%s</a>\", f.lineID(line), title)\n+}\n+\n+func (f *Formatter) lineID(line int) string {\n+\treturn fmt.Sprintf(\"%s%d\", f.lineNumbersIDPrefix, line)\n }\n \n func (f *Formatter) shouldHighlight(highlightIndex, line int) (bool, bool) {\n@@ -366,8 +378,12 @@ func (f *Formatter) WriteCSS(w io.Writer, style *chroma.Style) error {\n \t\tif tt == chroma.Background {\n \t\t\tcontinue\n \t\t}\n+\t\tclass := f.class(tt)\n+\t\tif class == \"\" {\n+\t\t\tcontinue\n+\t\t}\n \t\tstyles := css[tt]\n-\t\tif _, err := fmt.Fprintf(w, \"/* %s */ .%schroma .%s { %s }\\n\", tt, f.prefix, f.class(tt), styles); err != nil {\n+\t\tif _, err := fmt.Fprintf(w, \"/* %s */ .%schroma .%s { %s }\\n\", tt, f.prefix, class, styles); err != nil {\n \t\t\treturn err\n \t\t}\n \t}"
    },
    {
      "sha": "3baf1cb5089da331ca68185677f84016fbeb70ac",
      "filename": "backend/vendor/github.com/alecthomas/chroma/go.mod",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/go.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/go.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/go.mod?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -5,13 +5,14 @@ go 1.13\n require (\n \tgithub.com/alecthomas/assert v0.0.0-20170929043011-405dbfeb8e38\n \tgithub.com/alecthomas/colour v0.0.0-20160524082231-60882d9e2721 // indirect\n-\tgithub.com/alecthomas/kong v0.2.1-0.20190708041108-0548c6b1afae\n+\tgithub.com/alecthomas/kong v0.2.4\n \tgithub.com/alecthomas/repr v0.0.0-20180818092828-117648cd9897 // indirect\n \tgithub.com/danwakefield/fnmatch v0.0.0-20160403171240-cbb64ac3d964\n-\tgithub.com/dlclark/regexp2 v1.1.6\n-\tgithub.com/mattn/go-colorable v0.0.9\n-\tgithub.com/mattn/go-isatty v0.0.4\n+\tgithub.com/dlclark/regexp2 v1.4.0\n+\tgithub.com/mattn/go-colorable v0.1.6\n+\tgithub.com/mattn/go-isatty v0.0.12\n+\tgithub.com/pkg/errors v0.9.1 // indirect\n \tgithub.com/sergi/go-diff v1.0.0 // indirect\n \tgithub.com/stretchr/testify v1.3.0 // indirect\n-\tgolang.org/x/sys v0.0.0-20181128092732-4ed8d59d0b35 // indirect\n+\tgolang.org/x/sys v0.0.0-20200413165638-669c56c373c4 // indirect\n )"
    },
    {
      "sha": "12000b74af338a02befe6702f035718c41420934",
      "filename": "backend/vendor/github.com/alecthomas/chroma/go.sum",
      "status": "modified",
      "additions": 14,
      "deletions": 13,
      "changes": 27,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/go.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/go.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/go.sum?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -2,32 +2,33 @@ github.com/alecthomas/assert v0.0.0-20170929043011-405dbfeb8e38 h1:smF2tmSOzy2Mm\n github.com/alecthomas/assert v0.0.0-20170929043011-405dbfeb8e38/go.mod h1:r7bzyVFMNntcxPZXK3/+KdruV1H5KSlyVY0gc+NgInI=\n github.com/alecthomas/colour v0.0.0-20160524082231-60882d9e2721 h1:JHZL0hZKJ1VENNfmXvHbgYlbUOvpzYzvy2aZU5gXVeo=\n github.com/alecthomas/colour v0.0.0-20160524082231-60882d9e2721/go.mod h1:QO9JBoKquHd+jz9nshCh40fOfO+JzsoXy8qTHF68zU0=\n-github.com/alecthomas/kong v0.2.1-0.20190708041108-0548c6b1afae h1:C4Q9m+oXOxcSWwYk9XzzafY2xAVAaeubZbUHJkw3PlY=\n-github.com/alecthomas/kong v0.2.1-0.20190708041108-0548c6b1afae/go.mod h1:+inYUSluD+p4L8KdviBSgzcqEjUQOfC5fQDRFuc36lI=\n+github.com/alecthomas/kong v0.2.4 h1:Y0ZBCHAvHhTHw7FFJ2FzCAAG4pkbTgA45nc7BpMhDNk=\n+github.com/alecthomas/kong v0.2.4/go.mod h1:kQOmtJgV+Lb4aj+I2LEn40cbtawdWJ9Y8QLq+lElKxE=\n github.com/alecthomas/repr v0.0.0-20180818092828-117648cd9897 h1:p9Sln00KOTlrYkxI1zYWl1QLnEqAqEARBEYa8FQnQcY=\n github.com/alecthomas/repr v0.0.0-20180818092828-117648cd9897/go.mod h1:xTS7Pm1pD1mvyM075QCDSRqH6qRLXylzS24ZTpRiSzQ=\n github.com/danwakefield/fnmatch v0.0.0-20160403171240-cbb64ac3d964 h1:y5HC9v93H5EPKqaS1UYVg1uYah5Xf51mBfIoWehClUQ=\n github.com/danwakefield/fnmatch v0.0.0-20160403171240-cbb64ac3d964/go.mod h1:Xd9hchkHSWYkEqJwUGisez3G1QY8Ryz0sdWrLPMGjLk=\n github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\n github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n-github.com/dlclark/regexp2 v1.1.6 h1:CqB4MjHw0MFCDj+PHHjiESmHX+N7t0tJzKvC6M97BRg=\n-github.com/dlclark/regexp2 v1.1.6/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\n-github.com/mattn/go-colorable v0.0.9 h1:UVL0vNpWh04HeJXV0KLcaT7r06gOH2l4OW6ddYRUIY4=\n-github.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=\n-github.com/mattn/go-isatty v0.0.4 h1:bnP0vzxcAdeI1zdubAl5PjU6zsERjGZb7raWodagDYs=\n-github.com/mattn/go-isatty v0.0.4/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\n-github.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\n-github.com/pkg/errors v0.8.1 h1:iURUrRGxPUNPdy5/HRSm+Yj6okJ6UtLINN0Q9M4+h3I=\n+github.com/dlclark/regexp2 v1.4.0 h1:F1rxgk7p4uKjwIQxBs9oAXe5CqrXlCduYEJvrF4u93E=\n+github.com/dlclark/regexp2 v1.4.0/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\n+github.com/mattn/go-colorable v0.1.6 h1:6Su7aK7lXmJ/U79bYtBjLNaha4Fs1Rg9plHpcH+vvnE=\n+github.com/mattn/go-colorable v0.1.6/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\n+github.com/mattn/go-isatty v0.0.12 h1:wuysRhFDzyxgEmMf5xjvJ2M9dZoWAXNNr5LSBS7uHXY=\n+github.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\n github.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n+github.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\n+github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\n github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\n github.com/sergi/go-diff v1.0.0 h1:Kpca3qRNrduNnOQeazBd0ysaKrUJiIuISHxogkT9RPQ=\n github.com/sergi/go-diff v1.0.0/go.mod h1:0CfEIISq7TuYL3j771MWULgwwjU+GofnZX9QAmXWZgo=\n github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\n-github.com/stretchr/testify v1.2.2 h1:bSDNvY7ZPG5RlJ8otE/7V6gMiyenm9RtJ7IUVIAoJ1w=\n github.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\n github.com/stretchr/testify v1.3.0 h1:TivCn/peBQ7UY8ooIcPgZFpTNSz0Q2U6UrFlUfqbe0Q=\n github.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\n-golang.org/x/sys v0.0.0-20181128092732-4ed8d59d0b35 h1:YAFjXN64LMvktoUZH9zgY4lGc/msGN7HQfoSuKCgaDU=\n-golang.org/x/sys v0.0.0-20181128092732-4ed8d59d0b35/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n+golang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n+golang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n+golang.org/x/sys v0.0.0-20200413165638-669c56c373c4 h1:opSr2sbRXk5X5/givKrrKj9HXxFpW2sdCiP8MJSKLQY=\n+golang.org/x/sys v0.0.0-20200413165638-669c56c373c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs="
    },
    {
      "sha": "d5175de89b6128e9ee1aa41aa90ba2cf561b6200",
      "filename": "backend/vendor/github.com/alecthomas/chroma/iterator.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/iterator.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/iterator.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/iterator.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -4,7 +4,7 @@ import \"strings\"\n \n // An Iterator across tokens.\n //\n-// nil will be returned at the end of the Token stream.\n+// EOF will be returned at the end of the Token stream.\n //\n // If an error occurs within an Iterator, it may propagate this in a panic. Formatters should recover.\n type Iterator func() Token"
    },
    {
      "sha": "fe625198e6d6f583b29ca20b8275633c1770e7ac",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexer.go",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexer.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexer.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexer.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -2,6 +2,7 @@ package chroma\n \n import (\n \t\"fmt\"\n+\t\"strings\"\n )\n \n var (\n@@ -98,9 +99,11 @@ type Lexer interface {\n // Lexers is a slice of lexers sortable by name.\n type Lexers []Lexer\n \n-func (l Lexers) Len() int           { return len(l) }\n-func (l Lexers) Swap(i, j int)      { l[i], l[j] = l[j], l[i] }\n-func (l Lexers) Less(i, j int) bool { return l[i].Config().Name < l[j].Config().Name }\n+func (l Lexers) Len() int      { return len(l) }\n+func (l Lexers) Swap(i, j int) { l[i], l[j] = l[j], l[i] }\n+func (l Lexers) Less(i, j int) bool {\n+\treturn strings.ToLower(l[i].Config().Name) < strings.ToLower(l[j].Config().Name)\n+}\n \n // PrioritisedLexers is a slice of lexers sortable by priority.\n type PrioritisedLexers []Lexer"
    },
    {
      "sha": "b4ed292b1e9a03d4fce3296dd729facd95c78f19",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/README.md",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/README.md",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/README.md?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -3,6 +3,9 @@\n The tests in this directory feed a known input `testdata/<name>.actual` into the parser for `<name>` and check\n that its output matches `<name>.exported`.\n \n+It is also possible to perform several tests on a same parser `<name>`, by placing know inputs `*.actual` into a\n+directory `testdata/<name>/`.\n+\n ## Running the tests\n \n Run the tests as normal:"
    },
    {
      "sha": "268aa6a5927b23a915ca3925a9e9dc55d12bcd5b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/abap.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/abap.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/abap.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/a/abap.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // ABAP lexer.\n-var Abap = internal.Register(MustNewLexer(\n+var Abap = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"ABAP\",\n \t\tAliases:         []string{\"abap\"},\n \t\tFilenames:       []string{\"*.abap\", \"*.ABAP\"},\n \t\tMimeTypes:       []string{\"text/x-abap\"},\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tabapRules,\n+))\n+\n+func abapRules() Rules {\n+\treturn Rules{\n \t\t\"common\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`^\\*.*$`, CommentSingle, nil},\n@@ -52,5 +56,5 @@ var Abap = internal.Register(MustNewLexer(\n \t\t\t{`[/;:()\\[\\],.]`, Punctuation, nil},\n \t\t\t{`(!)(\\w+)`, ByGroups(Operator, Name), nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "85c47afce291f96dca6aa51ad1ec42ee20f0314e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/abnf.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/abnf.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/abnf.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/a/abnf.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Abnf lexer.\n-var Abnf = internal.Register(MustNewLexer(\n+var Abnf = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"ABNF\",\n \t\tAliases:   []string{\"abnf\"},\n \t\tFilenames: []string{\"*.abnf\"},\n \t\tMimeTypes: []string{\"text/x-abnf\"},\n \t},\n-\tRules{\n+\tabnfRules,\n+))\n+\n+func abnfRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`;.*$`, CommentSingle, nil},\n \t\t\t{`(%[si])?\"[^\"]*\"`, Literal, nil},\n@@ -34,5 +38,5 @@ var Abnf = internal.Register(MustNewLexer(\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`.`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "df55d6daca94c2fddea1e83cf66ae728e7dac82c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/actionscript.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/actionscript.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/actionscript.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/a/actionscript.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,7 +6,7 @@ import (\n )\n \n // Actionscript lexer.\n-var Actionscript = internal.Register(MustNewLexer(\n+var Actionscript = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:         \"ActionScript\",\n \t\tAliases:      []string{\"as\", \"actionscript\"},\n@@ -15,7 +15,11 @@ var Actionscript = internal.Register(MustNewLexer(\n \t\tNotMultiline: true,\n \t\tDotAll:       true,\n \t},\n-\tRules{\n+\tactionscriptRules,\n+))\n+\n+func actionscriptRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`//.*?\\n`, CommentSingle, nil},\n@@ -35,5 +39,5 @@ var Actionscript = internal.Register(MustNewLexer(\n \t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n \t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "45596dcc17501cba2a80afd0545c58e676a0259a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/actionscript3.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/actionscript3.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/actionscript3.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/a/actionscript3.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Actionscript 3 lexer.\n-var Actionscript3 = internal.Register(MustNewLexer(\n+var Actionscript3 = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"ActionScript 3\",\n \t\tAliases:   []string{\"as3\", \"actionscript3\"},\n \t\tFilenames: []string{\"*.as\"},\n \t\tMimeTypes: []string{\"application/x-actionscript3\", \"text/x-actionscript3\", \"text/actionscript3\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\tactionscript3Rules,\n+))\n+\n+func actionscript3Rules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`(function\\s+)([$a-zA-Z_]\\w*)(\\s*)(\\()`, ByGroups(KeywordDeclaration, NameFunction, Text, Operator), Push(\"funcparams\")},\n@@ -52,5 +56,5 @@ var Actionscript3 = internal.Register(MustNewLexer(\n \t\t\t{`,`, Operator, Pop(1)},\n \t\t\tDefault(Pop(1)),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "916727124bfb761ba516ab0f49a33e8f8d6717aa",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/ada.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/ada.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/ada.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/a/ada.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Ada lexer.\n-var Ada = internal.Register(MustNewLexer(\n+var Ada = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"Ada\",\n \t\tAliases:         []string{\"ada\", \"ada95\", \"ada2005\"},\n \t\tFilenames:       []string{\"*.adb\", \"*.ads\", \"*.ada\"},\n \t\tMimeTypes:       []string{\"text/x-ada\"},\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tadaRules,\n+))\n+\n+func adaRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[^\\S\\n]+`, Text, nil},\n \t\t\t{`--.*?\\n`, CommentSingle, nil},\n@@ -110,5 +114,5 @@ var Ada = internal.Register(MustNewLexer(\n \t\t\t{`\\)`, Punctuation, Pop(1)},\n \t\t\tInclude(\"root\"),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "d70164449a63dba8933bd9db770bc5b4c8296c1a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/al.go",
      "status": "added",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/al.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/al.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/a/al.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,48 @@\n+package a\n+\n+import (\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+)\n+\n+// Al lexer.\n+var Al = internal.Register(MustNewLazyLexer(\n+\t&Config{\n+\t\tName:            \"AL\",\n+\t\tAliases:         []string{\"al\"},\n+\t\tFilenames:       []string{\"*.al\", \"*.dal\"},\n+\t\tMimeTypes:       []string{\"text/x-al\"},\n+\t\tDotAll:          true,\n+\t\tCaseInsensitive: true,\n+\t},\n+\talRules,\n+))\n+\n+// https://github.com/microsoft/AL/blob/master/grammar/alsyntax.tmlanguage\n+func alRules() Rules {\n+\treturn Rules{\n+\t\t\"root\": {\n+\t\t\t{`\\s+`, TextWhitespace, nil},\n+\t\t\t{`(?s)\\/\\*.*?\\\\*\\*\\/`, CommentMultiline, nil},\n+\t\t\t{`(?s)//.*?\\n`, CommentSingle, nil},\n+\t\t\t{`\\\"([^\\\"])*\\\"`, Text, nil},\n+\t\t\t{`'([^'])*'`, LiteralString, nil},\n+\t\t\t{`\\b(?i:(ARRAY|ASSERTERROR|BEGIN|BREAK|CASE|DO|DOWNTO|ELSE|END|EVENT|EXIT|FOR|FOREACH|FUNCTION|IF|IMPLEMENTS|IN|INDATASET|INTERFACE|INTERNAL|LOCAL|OF|PROCEDURE|PROGRAM|PROTECTED|REPEAT|RUNONCLIENT|SECURITYFILTERING|SUPPRESSDISPOSE|TEMPORARY|THEN|TO|TRIGGER|UNTIL|VAR|WHILE|WITH|WITHEVENTS))\\b`, Keyword, nil},\n+\t\t\t{`\\b(?i:(AND|DIV|MOD|NOT|OR|XOR))\\b`, OperatorWord, nil},\n+\t\t\t{`\\b(?i:(AVERAGE|CONST|COUNT|EXIST|FIELD|FILTER|LOOKUP|MAX|MIN|ORDER|SORTING|SUM|TABLEDATA|UPPERLIMIT|WHERE|ASCENDING|DESCENDING))\\b`, Keyword, nil},\n+\t\t\t// Added new objects types of BC 2021 wave 1 (REPORTEXTENSION|Entitlement|PermissionSet|PermissionSetExtension)\n+\t\t\t{`\\b(?i:(CODEUNIT|PAGE|PAGEEXTENSION|PAGECUSTOMIZATION|DOTNET|ENUM|ENUMEXTENSION|VALUE|QUERY|REPORT|TABLE|TABLEEXTENSION|XMLPORT|PROFILE|CONTROLADDIN|REPORTEXTENSION|Entitlement|PermissionSet|PermissionSetExtension))\\b`, Keyword, nil},\n+\t\t\t{`\\b(?i:(Action|Array|Automation|BigInteger|BigText|Blob|Boolean|Byte|Char|ClientType|Code|Codeunit|CompletionTriggerErrorLevel|ConnectionType|Database|DataClassification|DataScope|Date|DateFormula|DateTime|Decimal|DefaultLayout|Dialog|Dictionary|DotNet|DotNetAssembly|DotNetTypeDeclaration|Duration|Enum|ErrorInfo|ErrorType|ExecutionContext|ExecutionMode|FieldClass|FieldRef|FieldType|File|FilterPageBuilder|Guid|InStream|Integer|Joker|KeyRef|List|ModuleDependencyInfo|ModuleInfo|None|Notification|NotificationScope|ObjectType|Option|OutStream|Page|PageResult|Query|Record|RecordId|RecordRef|Report|ReportFormat|SecurityFilter|SecurityFiltering|Table|TableConnectionType|TableFilter|TestAction|TestField|TestFilterField|TestPage|TestPermissions|TestRequestPage|Text|TextBuilder|TextConst|TextEncoding|Time|TransactionModel|TransactionType|Variant|Verbosity|Version|XmlPort|HttpContent|HttpHeaders|HttpClient|HttpRequestMessage|HttpResponseMessage|JsonToken|JsonValue|JsonArray|JsonObject|View|Views|XmlAttribute|XmlAttributeCollection|XmlComment|XmlCData|XmlDeclaration|XmlDocument|XmlDocumentType|XmlElement|XmlNamespaceManager|XmlNameTable|XmlNode|XmlNodeList|XmlProcessingInstruction|XmlReadOptions|XmlText|XmlWriteOptions|WebServiceActionContext|WebServiceActionResultCode|SessionSettings))\\b`, Keyword, nil},\n+\t\t\t{`\\b([<>]=|<>|<|>)\\b?`, Operator, nil},\n+\t\t\t{`\\b(\\-|\\+|\\/|\\*)\\b`, Operator, nil},\n+\t\t\t{`\\s*(\\:=|\\+=|-=|\\/=|\\*=)\\s*?`, Operator, nil},\n+\t\t\t{`\\b(?i:(ADDFIRST|ADDLAST|ADDAFTER|ADDBEFORE|ACTION|ACTIONS|AREA|ASSEMBLY|CHARTPART|CUEGROUP|CUSTOMIZES|COLUMN|DATAITEM|DATASET|ELEMENTS|EXTENDS|FIELD|FIELDGROUP|FIELDATTRIBUTE|FIELDELEMENT|FIELDGROUPS|FIELDS|FILTER|FIXED|GRID|GROUP|MOVEAFTER|MOVEBEFORE|KEY|KEYS|LABEL|LABELS|LAYOUT|MODIFY|MOVEFIRST|MOVELAST|MOVEBEFORE|MOVEAFTER|PART|REPEATER|USERCONTROL|REQUESTPAGE|SCHEMA|SEPARATOR|SYSTEMPART|TABLEELEMENT|TEXTATTRIBUTE|TEXTELEMENT|TYPE))\\b`, Keyword, nil},\n+\t\t\t{`\\s*[(\\.\\.)&\\|]\\s*`, Operator, nil},\n+\t\t\t{`\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\b`, LiteralNumber, nil},\n+\t\t\t{`[;:,]`, Punctuation, nil},\n+\t\t\t{`#[ \\t]*(if|else|elif|endif|define|undef|region|endregion|pragma)\\b.*?\\n`, CommentPreproc, nil},\n+\t\t\t{`\\w+`, Text, nil},\n+\t\t\t{`.`, Text, nil},\n+\t\t},\n+\t}\n+}"
    },
    {
      "sha": "a947edad60a88a5fa9448e8eb3020c0bbeff0147",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/angular2.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/angular2.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/angular2.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/a/angular2.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Angular2 lexer.\n-var Angular2 = internal.Register(MustNewLexer(\n+var Angular2 = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Angular2\",\n \t\tAliases:   []string{\"ng2\"},\n \t\tFilenames: []string{},\n \t\tMimeTypes: []string{},\n \t},\n-\tRules{\n+\tangular2Rules,\n+))\n+\n+func angular2Rules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[^{([*#]+`, Other, nil},\n \t\t\t{`(\\{\\{)(\\s*)`, ByGroups(CommentPreproc, Text), Push(\"ngExpression\")},\n@@ -38,5 +42,5 @@ var Angular2 = internal.Register(MustNewLexer(\n \t\t\t{`'.*?'`, LiteralString, Pop(1)},\n \t\t\t{`[^\\s>]+`, LiteralString, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "c744353f1139bff5c454dbb9685cad5ee651e7cb",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/antlr.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/antlr.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/antlr.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/a/antlr.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // ANTLR lexer.\n-var ANTLR = internal.Register(MustNewLexer(\n+var ANTLR = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"ANTLR\",\n \t\tAliases:   []string{\"antlr\"},\n \t\tFilenames: []string{},\n \t\tMimeTypes: []string{},\n \t},\n-\tRules{\n+\tantlrRules,\n+))\n+\n+func antlrRules() Rules {\n+\treturn Rules{\n \t\t\"whitespace\": {\n \t\t\t{`\\s+`, TextWhitespace, nil},\n \t\t},\n@@ -97,5 +101,5 @@ var ANTLR = internal.Register(MustNewLexer(\n \t\t\t{`(\\$[a-zA-Z]+)(\\.?)(text|value)?`, ByGroups(NameVariable, Punctuation, NameProperty), nil},\n \t\t\t{`(\\\\\\\\|\\\\\\]|\\\\\\[|[^\\[\\]])+`, Other, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "5685eb15ce063cd8fbe5e5865774b9204c704809",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/apache.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/apache.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/apache.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/a/apache.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Apacheconf lexer.\n-var Apacheconf = internal.Register(MustNewLexer(\n+var Apacheconf = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"ApacheConf\",\n \t\tAliases:         []string{\"apacheconf\", \"aconf\", \"apache\"},\n \t\tFilenames:       []string{\".htaccess\", \"apache.conf\", \"apache2.conf\"},\n \t\tMimeTypes:       []string{\"text/x-apacheconf\"},\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tapacheconfRules,\n+))\n+\n+func apacheconfRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`(#.*?)$`, Comment, nil},\n@@ -34,5 +38,5 @@ var Apacheconf = internal.Register(MustNewLexer(\n \t\t\t{`\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"`, LiteralStringDouble, nil},\n \t\t\t{`[^\\s\"\\\\]+`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "6cf1ea05dfa5201b6c7cfc159ce968159b0279ef",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/apl.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/apl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/apl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/a/apl.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Apl lexer.\n-var Apl = internal.Register(MustNewLexer(\n+var Apl = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"APL\",\n \t\tAliases:   []string{\"apl\"},\n \t\tFilenames: []string{\"*.apl\"},\n \t\tMimeTypes: []string{},\n \t},\n-\tRules{\n+\taplRules,\n+))\n+\n+func aplRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`[⍝#].*$`, CommentSingle, nil},\n@@ -32,5 +36,5 @@ var Apl = internal.Register(MustNewLexer(\n \t\t\t{`[⍺⍵⍶⍹∇:]`, NameBuiltinPseudo, nil},\n \t\t\t{`[{}]`, KeywordType, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "b6a53c5ff824614c44756ce8d6500e1fef457961",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/applescript.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/applescript.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/applescript.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/a/applescript.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Applescript lexer.\n-var Applescript = internal.Register(MustNewLexer(\n+var Applescript = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"AppleScript\",\n \t\tAliases:   []string{\"applescript\"},\n \t\tFilenames: []string{\"*.applescript\"},\n \t\tMimeTypes: []string{},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\tapplescriptRules,\n+))\n+\n+func applescriptRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`¬\\n`, LiteralStringEscape, nil},\n@@ -51,5 +55,5 @@ var Applescript = internal.Register(MustNewLexer(\n \t\t\t{`[^*(]+`, CommentMultiline, nil},\n \t\t\t{`[*(]`, CommentMultiline, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "0edbe3f9343cf736c669ccfc937eeae284819d82",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/arduino.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/arduino.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/arduino.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/a/arduino.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Arduino lexer.\n-var Arduino = internal.Register(MustNewLexer(\n+var Arduino = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Arduino\",\n \t\tAliases:   []string{\"arduino\"},\n \t\tFilenames: []string{\"*.ino\"},\n \t\tMimeTypes: []string{\"text/x-arduino\"},\n \t\tEnsureNL:  true,\n \t},\n-\tRules{\n+\tarduinoRules,\n+))\n+\n+func arduinoRules() Rules {\n+\treturn Rules{\n \t\t\"statements\": {\n \t\t\t{Words(``, `\\b`, `catch`, `const_cast`, `delete`, `dynamic_cast`, `explicit`, `export`, `friend`, `mutable`, `namespace`, `new`, `operator`, `private`, `protected`, `public`, `reinterpret_cast`, `restrict`, `static_cast`, `template`, `this`, `throw`, `throws`, `try`, `typeid`, `typename`, `using`, `virtual`, `constexpr`, `nullptr`, `decltype`, `thread_local`, `alignas`, `alignof`, `static_assert`, `noexcept`, `override`, `final`), Keyword, nil},\n \t\t\t{`char(16_t|32_t)\\b`, KeywordType, nil},\n@@ -106,5 +110,5 @@ var Arduino = internal.Register(MustNewLexer(\n \t\t\t{`^\\s*#endif.*?(?<!\\\\)\\n`, CommentPreproc, Pop(1)},\n \t\t\t{`.*?\\n`, Comment, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "95afab2fed2c510fedaf5eb014addbba9e9a452e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/awk.go",
      "status": "modified",
      "additions": 13,
      "deletions": 9,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/awk.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/a/awk.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/a/awk.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Awk lexer.\n-var Awk = internal.Register(MustNewLexer(\n+var Awk = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Awk\",\n \t\tAliases:   []string{\"awk\", \"gawk\", \"mawk\", \"nawk\"},\n \t\tFilenames: []string{\"*.awk\"},\n \t\tMimeTypes: []string{\"application/x-awk\"},\n \t},\n-\tRules{\n+\tawkRules,\n+))\n+\n+func awkRules() Rules {\n+\treturn Rules{\n \t\t\"commentsandwhitespace\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`#.*$`, CommentSingle, nil},\n@@ -30,19 +34,19 @@ var Awk = internal.Register(MustNewLexer(\n \t\t\"root\": {\n \t\t\t{`^(?=\\s|/)`, Text, Push(\"slashstartsregex\")},\n \t\t\tInclude(\"commentsandwhitespace\"),\n-\t\t\t{`\\+\\+|--|\\|\\||&&|in\\b|\\$|!?~|(\\*\\*|[-<>+*%\\^/!=|])=?`, Operator, Push(\"slashstartsregex\")},\n+\t\t\t{`\\+\\+|--|\\|\\||&&|in\\b|\\$|!?~|\\|&|(\\*\\*|[-<>+*%\\^/!=|])=?`, Operator, Push(\"slashstartsregex\")},\n \t\t\t{`[{(\\[;,]`, Punctuation, Push(\"slashstartsregex\")},\n \t\t\t{`[})\\].]`, Punctuation, nil},\n-\t\t\t{`(break|continue|do|while|exit|for|if|else|return)\\b`, Keyword, Push(\"slashstartsregex\")},\n+\t\t\t{`(break|continue|do|while|exit|for|if|else|return|switch|case|default)\\b`, Keyword, Push(\"slashstartsregex\")},\n \t\t\t{`function\\b`, KeywordDeclaration, Push(\"slashstartsregex\")},\n-\t\t\t{`(atan2|cos|exp|int|log|rand|sin|sqrt|srand|gensub|gsub|index|length|match|split|sprintf|sub|substr|tolower|toupper|close|fflush|getline|next|nextfile|print|printf|strftime|systime|delete|system)\\b`, KeywordReserved, nil},\n-\t\t\t{`(ARGC|ARGIND|ARGV|BEGIN|CONVFMT|ENVIRON|END|ERRNO|FIELDWIDTHS|FILENAME|FNR|FS|IGNORECASE|NF|NR|OFMT|OFS|ORFS|RLENGTH|RS|RSTART|RT|SUBSEP)\\b`, NameBuiltin, nil},\n-\t\t\t{`[$a-zA-Z_]\\w*`, NameOther, nil},\n+\t\t\t{`(atan2|cos|exp|int|log|rand|sin|sqrt|srand|gensub|gsub|index|length|match|split|patsplit|sprintf|sub|substr|tolower|toupper|close|fflush|getline|next(file)|print|printf|strftime|systime|mktime|delete|system|strtonum|and|compl|lshift|or|rshift|asorti?|isarray|bindtextdomain|dcn?gettext|@(include|load|namespace))\\b`, KeywordReserved, nil},\n+\t\t\t{`(ARGC|ARGIND|ARGV|BEGIN(FILE)?|BINMODE|CONVFMT|ENVIRON|END(FILE)?|ERRNO|FIELDWIDTHS|FILENAME|FNR|FPAT|FS|IGNORECASE|LINT|NF|NR|OFMT|OFS|ORS|PROCINFO|RLENGTH|RS|RSTART|RT|SUBSEP|TEXTDOMAIN)\\b`, NameBuiltin, nil},\n+\t\t\t{`[@$a-zA-Z_]\\w*`, NameOther, nil},\n \t\t\t{`[0-9][0-9]*\\.[0-9]+([eE][0-9]+)?[fd]?`, LiteralNumberFloat, nil},\n \t\t\t{`0x[0-9a-fA-F]+`, LiteralNumberHex, nil},\n \t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n \t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n \t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "d8916d0e6b0e9ad05139bec78d9234b26c1ff77f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/b/ballerina.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/b/ballerina.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/b/ballerina.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/b/ballerina.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Ballerina lexer.\n-var Ballerina = internal.Register(MustNewLexer(\n+var Ballerina = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Ballerina\",\n \t\tAliases:   []string{\"ballerina\"},\n \t\tFilenames: []string{\"*.bal\"},\n \t\tMimeTypes: []string{\"text/x-ballerina\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\tballerinaRules,\n+))\n+\n+func ballerinaRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[^\\S\\n]+`, Text, nil},\n \t\t\t{`//.*?\\n`, CommentSingle, nil},\n@@ -42,5 +46,5 @@ var Ballerina = internal.Register(MustNewLexer(\n \t\t\"import\": {\n \t\t\t{`[\\w.]+`, NameNamespace, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "34b1e222d3bc84e86e3dc86e06329fcb6b69c2d3",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/b/bash.go",
      "status": "modified",
      "additions": 15,
      "deletions": 10,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/b/bash.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/b/bash.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/b/bash.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -7,17 +7,27 @@ import (\n \t\"github.com/alecthomas/chroma/lexers/internal\"\n )\n \n+// TODO(moorereason): can this be factored away?\n var bashAnalyserRe = regexp.MustCompile(`(?m)^#!.*/bin/(?:env |)(?:bash|zsh|sh|ksh)`)\n \n // Bash lexer.\n-var Bash = internal.Register(MustNewLexer(\n+var Bash = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Bash\",\n \t\tAliases:   []string{\"bash\", \"sh\", \"ksh\", \"zsh\", \"shell\"},\n-\t\tFilenames: []string{\"*.sh\", \"*.ksh\", \"*.bash\", \"*.ebuild\", \"*.eclass\", \"*.exheres-0\", \"*.exlib\", \"*.zsh\", \"*.zshrc\", \".bashrc\", \"bashrc\", \".bash_*\", \"bash_*\", \"zshrc\", \".zshrc\", \"PKGBUILD\"},\n+\t\tFilenames: []string{\"*.sh\", \"*.ksh\", \"*.bash\", \"*.ebuild\", \"*.eclass\", \".env\", \"*.env\", \"*.exheres-0\", \"*.exlib\", \"*.zsh\", \"*.zshrc\", \".bashrc\", \"bashrc\", \".bash_*\", \"bash_*\", \"zshrc\", \".zshrc\", \"PKGBUILD\"},\n \t\tMimeTypes: []string{\"application/x-sh\", \"application/x-shellscript\"},\n \t},\n-\tRules{\n+\tbashRules,\n+).SetAnalyser(func(text string) float32 {\n+\tif bashAnalyserRe.FindString(text) != \"\" {\n+\t\treturn 1.0\n+\t}\n+\treturn 0.0\n+}))\n+\n+func bashRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"basic\"),\n \t\t\t{\"`\", LiteralStringBacktick, Push(\"backticks\")},\n@@ -36,7 +46,7 @@ var Bash = internal.Register(MustNewLexer(\n \t\t\t{`\\b(if|fi|else|while|do|done|for|then|return|function|case|select|continue|until|esac|elif)(\\s*)\\b`, ByGroups(Keyword, Text), nil},\n \t\t\t{\"\\\\b(alias|bg|bind|break|builtin|caller|cd|command|compgen|complete|declare|dirs|disown|echo|enable|eval|exec|exit|export|false|fc|fg|getopts|hash|help|history|jobs|kill|let|local|logout|popd|printf|pushd|pwd|read|readonly|set|shift|shopt|source|suspend|test|time|times|trap|true|type|typeset|ulimit|umask|unalias|unset|wait)(?=[\\\\s)`])\", NameBuiltin, nil},\n \t\t\t{`\\A#!.+\\n`, CommentPreproc, nil},\n-\t\t\t{`#.*\\S`, CommentSingle, nil},\n+\t\t\t{`#.*(\\S|$)`, CommentSingle, nil},\n \t\t\t{`\\\\[\\w\\W]`, LiteralStringEscape, nil},\n \t\t\t{`(\\b\\w+)(\\s*)(\\+?=)`, ByGroups(NameVariable, Text, Operator), nil},\n \t\t\t{`[\\[\\]{}()=]`, Operator, nil},\n@@ -86,10 +96,5 @@ var Bash = internal.Register(MustNewLexer(\n \t\t\t{\"`\", LiteralStringBacktick, Pop(1)},\n \t\t\tInclude(\"root\"),\n \t\t},\n-\t},\n-).SetAnalyser(func(text string) float32 {\n-\tif bashAnalyserRe.FindString(text) != \"\" {\n-\t\treturn 1.0\n \t}\n-\treturn 0.0\n-}))\n+}"
    },
    {
      "sha": "f7a86776e5a9a1d160733110b3d36f600198fbc7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/b/batch.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/b/batch.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/b/batch.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/b/batch.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Batchfile lexer.\n-var Batchfile = internal.Register(MustNewLexer(\n+var Batchfile = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"Batchfile\",\n \t\tAliases:         []string{\"bat\", \"batch\", \"dosbatch\", \"winbatch\"},\n \t\tFilenames:       []string{\"*.bat\", \"*.cmd\"},\n \t\tMimeTypes:       []string{\"application/x-dos-batch\"},\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tbatchfileRules,\n+))\n+\n+func batchfileRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\)((?=\\()|(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a]))(?:(?:[^\\n\\x1a^]|\\^[\\n\\x1a]?[\\w\\W])*)`, CommentSingle, nil},\n \t\t\t{`(?=((?:(?<=^[^:])|^[^:]?)[\\t\\v\\f\\r ,;=\\xa0]*)(:))`, Text, Push(\"follow\")},\n@@ -190,5 +194,5 @@ var Batchfile = internal.Register(MustNewLexer(\n \t\t\t{`else(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a])`, Keyword, Pop(1)},\n \t\t\tDefault(Pop(1)),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "d6a0ae3347d58198e13a3f0f2d281ced9c48d5de",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/b/bibtex.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/b/bibtex.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/b/bibtex.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/b/bibtex.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,7 +6,7 @@ import (\n )\n \n // Bibtex lexer.\n-var Bibtex = internal.Register(MustNewLexer(\n+var Bibtex = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"BibTeX\",\n \t\tAliases:         []string{\"bib\", \"bibtex\"},\n@@ -15,7 +15,11 @@ var Bibtex = internal.Register(MustNewLexer(\n \t\tNotMultiline:    true,\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tbibtexRules,\n+))\n+\n+func bibtexRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"whitespace\"),\n \t\t\t{`@comment`, Comment, nil},\n@@ -72,5 +76,5 @@ var Bibtex = internal.Register(MustNewLexer(\n \t\t\"whitespace\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "119f96b09845a02647f7999e0d18e9330b897a39",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/b/blitz.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/b/blitz.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/b/blitz.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/b/blitz.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Blitzbasic lexer.\n-var Blitzbasic = internal.Register(MustNewLexer(\n+var Blitzbasic = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"BlitzBasic\",\n \t\tAliases:         []string{\"blitzbasic\", \"b3d\", \"bplus\"},\n \t\tFilenames:       []string{\"*.bb\", \"*.decls\"},\n \t\tMimeTypes:       []string{\"text/x-bb\"},\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tblitzbasicRules,\n+))\n+\n+func blitzbasicRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[ \\t]+`, Text, nil},\n \t\t\t{`;.*?\\n`, CommentSingle, nil},\n@@ -44,5 +48,5 @@ var Blitzbasic = internal.Register(MustNewLexer(\n \t\t\t{`\"C?`, LiteralStringDouble, Pop(1)},\n \t\t\t{`[^\"]+`, LiteralStringDouble, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "dcf7360c1d09e18eec3e3f0d61602b06e0ee88e6",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/b/bnf.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/b/bnf.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/b/bnf.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/b/bnf.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,19 +6,23 @@ import (\n )\n \n // Bnf lexer.\n-var Bnf = internal.Register(MustNewLexer(\n+var Bnf = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"BNF\",\n \t\tAliases:   []string{\"bnf\"},\n \t\tFilenames: []string{\"*.bnf\"},\n \t\tMimeTypes: []string{\"text/x-bnf\"},\n \t},\n-\tRules{\n+\tbnfRules,\n+))\n+\n+func bnfRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`(<)([ -;=?-~]+)(>)`, ByGroups(Punctuation, NameClass, Punctuation), nil},\n \t\t\t{`::=`, Operator, nil},\n \t\t\t{`[^<>:]+`, Text, nil},\n \t\t\t{`.`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "d35e9c6db974ab43cbb8cda671e99680447b5f0d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/b/brainfuck.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/b/brainfuck.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/b/brainfuck.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/b/brainfuck.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Brainfuck lexer.\n-var Brainfuck = internal.Register(MustNewLexer(\n+var Brainfuck = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Brainfuck\",\n \t\tAliases:   []string{\"brainfuck\", \"bf\"},\n \t\tFilenames: []string{\"*.bf\", \"*.b\"},\n \t\tMimeTypes: []string{\"application/x-brainfuck\"},\n \t},\n-\tRules{\n+\tbrainfuckRules,\n+))\n+\n+func brainfuckRules() Rules {\n+\treturn Rules{\n \t\t\"common\": {\n \t\t\t{`[.,]+`, NameTag, nil},\n \t\t\t{`[+-]+`, NameBuiltin, nil},\n@@ -30,5 +34,5 @@ var Brainfuck = internal.Register(MustNewLexer(\n \t\t\t{`\\]`, Keyword, Pop(1)},\n \t\t\tInclude(\"common\"),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "3698c4f2977196244bee4f4c2cf781ca9bd8af07",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/c.go",
      "status": "modified",
      "additions": 12,
      "deletions": 7,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/c.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/c.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/c.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,19 @@ import (\n )\n \n // C lexer.\n-var C = internal.Register(MustNewLexer(\n+var C = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"C\",\n \t\tAliases:   []string{\"c\"},\n-\t\tFilenames: []string{\"*.c\", \"*.h\", \"*.idc\"},\n-\t\tMimeTypes: []string{\"text/x-chdr\", \"text/x-csrc\"},\n+\t\tFilenames: []string{\"*.c\", \"*.h\", \"*.idc\", \"*.x[bp]m\"},\n+\t\tMimeTypes: []string{\"text/x-chdr\", \"text/x-csrc\", \"image/x-xbitmap\", \"image/x-xpixmap\"},\n+\t\tEnsureNL:  true,\n \t},\n-\tRules{\n+\tcRules,\n+))\n+\n+func cRules() Rules {\n+\treturn Rules{\n \t\t\"whitespace\": {\n \t\t\t{`^#if\\s+0`, CommentPreproc, Push(\"if0\")},\n \t\t\t{`^#`, CommentPreproc, Push(\"macro\")},\n@@ -38,7 +43,7 @@ var C = internal.Register(MustNewLexer(\n \t\t\t{`[~!%^&*+=|?:<>/-]`, Operator, nil},\n \t\t\t{`[()\\[\\],.]`, Punctuation, nil},\n \t\t\t{Words(``, `\\b`, `asm`, `auto`, `break`, `case`, `const`, `continue`, `default`, `do`, `else`, `enum`, `extern`, `for`, `goto`, `if`, `register`, `restricted`, `return`, `sizeof`, `static`, `struct`, `switch`, `typedef`, `union`, `volatile`, `while`), Keyword, nil},\n-\t\t\t{`(bool|int|long|float|short|double|char|unsigned|signed|void)\\b`, KeywordType, nil},\n+\t\t\t{`(bool|int|long|float|short|double|char((8|16|32)_t)?|unsigned|signed|void|u?int(_fast|_least|)(8|16|32|64)_t)\\b`, KeywordType, nil},\n \t\t\t{Words(``, `\\b`, `inline`, `_inline`, `__inline`, `naked`, `restrict`, `thread`, `typename`), KeywordReserved, nil},\n \t\t\t{`(__m(128i|128d|128|64))\\b`, KeywordReserved, nil},\n \t\t\t{Words(`__`, `\\b`, `asm`, `int8`, `based`, `except`, `int16`, `stdcall`, `cdecl`, `fastcall`, `int32`, `declspec`, `finally`, `int64`, `try`, `leave`, `wchar_t`, `w64`, `unaligned`, `raise`, `noop`, `identifier`, `forceinline`, `assume`), KeywordReserved, nil},\n@@ -87,5 +92,5 @@ var C = internal.Register(MustNewLexer(\n \t\t\t{`^\\s*#endif.*?(?<!\\\\)\\n`, CommentPreproc, Pop(1)},\n \t\t\t{`.*?\\n`, Comment, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "765947aacb6476f476e9ed35183f8a468e2feb42",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/caddyfile.go",
      "status": "added",
      "additions": 216,
      "deletions": 0,
      "changes": 216,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/caddyfile.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/caddyfile.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/caddyfile.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,216 @@\n+package c\n+\n+import (\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+)\n+\n+// caddyfileCommon are the rules common to both of the lexer variants\n+func caddyfileCommonRules() Rules {\n+\treturn Rules{\n+\t\t\"site_block_common\": {\n+\t\t\t// Import keyword\n+\t\t\t{`(import)(\\s+)([^\\s]+)`, ByGroups(Keyword, Text, NameVariableMagic), nil},\n+\t\t\t// Matcher definition\n+\t\t\t{`@[^\\s]+(?=\\s)`, NameDecorator, Push(\"matcher\")},\n+\t\t\t// Matcher token stub for docs\n+\t\t\t{`\\[\\<matcher\\>\\]`, NameDecorator, Push(\"matcher\")},\n+\t\t\t// These cannot have matchers but may have things that look like\n+\t\t\t// matchers in their arguments, so we just parse as a subdirective.\n+\t\t\t{`try_files`, Keyword, Push(\"subdirective\")},\n+\t\t\t// These are special, they can nest more directives\n+\t\t\t{`handle_errors|handle|route|handle_path|not`, Keyword, Push(\"nested_directive\")},\n+\t\t\t// Any other directive\n+\t\t\t{`[^\\s#]+`, Keyword, Push(\"directive\")},\n+\t\t\tInclude(\"base\"),\n+\t\t},\n+\t\t\"matcher\": {\n+\t\t\t{`\\{`, Punctuation, Push(\"block\")},\n+\t\t\t// Not can be one-liner\n+\t\t\t{`not`, Keyword, Push(\"deep_not_matcher\")},\n+\t\t\t// Any other same-line matcher\n+\t\t\t{`[^\\s#]+`, Keyword, Push(\"arguments\")},\n+\t\t\t// Terminators\n+\t\t\t{`\\n`, Text, Pop(1)},\n+\t\t\t{`\\}`, Punctuation, Pop(1)},\n+\t\t\tInclude(\"base\"),\n+\t\t},\n+\t\t\"block\": {\n+\t\t\t{`\\}`, Punctuation, Pop(2)},\n+\t\t\t// Not can be one-liner\n+\t\t\t{`not`, Keyword, Push(\"not_matcher\")},\n+\t\t\t// Any other subdirective\n+\t\t\t{`[^\\s#]+`, Keyword, Push(\"subdirective\")},\n+\t\t\tInclude(\"base\"),\n+\t\t},\n+\t\t\"nested_block\": {\n+\t\t\t{`\\}`, Punctuation, Pop(2)},\n+\t\t\t// Matcher definition\n+\t\t\t{`@[^\\s]+(?=\\s)`, NameDecorator, Push(\"matcher\")},\n+\t\t\t// Something that starts with literally < is probably a docs stub\n+\t\t\t{`\\<[^#]+\\>`, Keyword, Push(\"nested_directive\")},\n+\t\t\t// Any other directive\n+\t\t\t{`[^\\s#]+`, Keyword, Push(\"nested_directive\")},\n+\t\t\tInclude(\"base\"),\n+\t\t},\n+\t\t\"not_matcher\": {\n+\t\t\t{`\\}`, Punctuation, Pop(2)},\n+\t\t\t{`\\{(?=\\s)`, Punctuation, Push(\"block\")},\n+\t\t\t{`[^\\s#]+`, Keyword, Push(\"arguments\")},\n+\t\t\t{`\\s+`, Text, nil},\n+\t\t},\n+\t\t\"deep_not_matcher\": {\n+\t\t\t{`\\}`, Punctuation, Pop(2)},\n+\t\t\t{`\\{(?=\\s)`, Punctuation, Push(\"block\")},\n+\t\t\t{`[^\\s#]+`, Keyword, Push(\"deep_subdirective\")},\n+\t\t\t{`\\s+`, Text, nil},\n+\t\t},\n+\t\t\"directive\": {\n+\t\t\t{`\\{(?=\\s)`, Punctuation, Push(\"block\")},\n+\t\t\tInclude(\"matcher_token\"),\n+\t\t\tInclude(\"comments_pop_1\"),\n+\t\t\t{`\\n`, Text, Pop(1)},\n+\t\t\tInclude(\"base\"),\n+\t\t},\n+\t\t\"nested_directive\": {\n+\t\t\t{`\\{(?=\\s)`, Punctuation, Push(\"nested_block\")},\n+\t\t\tInclude(\"matcher_token\"),\n+\t\t\tInclude(\"comments_pop_1\"),\n+\t\t\t{`\\n`, Text, Pop(1)},\n+\t\t\tInclude(\"base\"),\n+\t\t},\n+\t\t\"subdirective\": {\n+\t\t\t{`\\{(?=\\s)`, Punctuation, Push(\"block\")},\n+\t\t\tInclude(\"comments_pop_1\"),\n+\t\t\t{`\\n`, Text, Pop(1)},\n+\t\t\tInclude(\"base\"),\n+\t\t},\n+\t\t\"arguments\": {\n+\t\t\t{`\\{(?=\\s)`, Punctuation, Push(\"block\")},\n+\t\t\tInclude(\"comments_pop_2\"),\n+\t\t\t{`\\\\\\n`, Text, nil}, // Skip escaped newlines\n+\t\t\t{`\\n`, Text, Pop(2)},\n+\t\t\tInclude(\"base\"),\n+\t\t},\n+\t\t\"deep_subdirective\": {\n+\t\t\t{`\\{(?=\\s)`, Punctuation, Push(\"block\")},\n+\t\t\tInclude(\"comments_pop_3\"),\n+\t\t\t{`\\n`, Text, Pop(3)},\n+\t\t\tInclude(\"base\"),\n+\t\t},\n+\t\t\"matcher_token\": {\n+\t\t\t{`@[^\\s]+`, NameDecorator, Push(\"arguments\")},         // Named matcher\n+\t\t\t{`/[^\\s]+`, NameDecorator, Push(\"arguments\")},         // Path matcher\n+\t\t\t{`\\*`, NameDecorator, Push(\"arguments\")},              // Wildcard path matcher\n+\t\t\t{`\\[\\<matcher\\>\\]`, NameDecorator, Push(\"arguments\")}, // Matcher token stub for docs\n+\t\t},\n+\t\t\"comments\": {\n+\t\t\t{`^#.*\\n`, CommentSingle, nil},   // Comment at start of line\n+\t\t\t{`\\s+#.*\\n`, CommentSingle, nil}, // Comment preceded by whitespace\n+\t\t},\n+\t\t\"comments_pop_1\": {\n+\t\t\t{`^#.*\\n`, CommentSingle, Pop(1)},   // Comment at start of line\n+\t\t\t{`\\s+#.*\\n`, CommentSingle, Pop(1)}, // Comment preceded by whitespace\n+\t\t},\n+\t\t\"comments_pop_2\": {\n+\t\t\t{`^#.*\\n`, CommentSingle, Pop(2)},   // Comment at start of line\n+\t\t\t{`\\s+#.*\\n`, CommentSingle, Pop(2)}, // Comment preceded by whitespace\n+\t\t},\n+\t\t\"comments_pop_3\": {\n+\t\t\t{`^#.*\\n`, CommentSingle, Pop(3)},   // Comment at start of line\n+\t\t\t{`\\s+#.*\\n`, CommentSingle, Pop(3)}, // Comment preceded by whitespace\n+\t\t},\n+\t\t\"base\": {\n+\t\t\tInclude(\"comments\"),\n+\t\t\t{`(on|off|first|last|before|after|internal|strip_prefix|strip_suffix|replace)\\b`, NameConstant, nil},\n+\t\t\t{`(https?://)?([a-z0-9.-]+)(:)([0-9]+)`, ByGroups(Name, Name, Punctuation, LiteralNumberInteger), nil},\n+\t\t\t{`[a-z-]+/[a-z-+]+`, LiteralString, nil},\n+\t\t\t{`[0-9]+[km]?\\b`, LiteralNumberInteger, nil},\n+\t\t\t{`\\{[\\w+.\\$-]+\\}`, LiteralStringEscape, nil}, // Placeholder\n+\t\t\t{`\\[(?=[^#{}$]+\\])`, Punctuation, nil},\n+\t\t\t{`\\]|\\|`, Punctuation, nil},\n+\t\t\t{`[^\\s#{}$\\]]+`, LiteralString, nil},\n+\t\t\t{`/[^\\s#]*`, Name, nil},\n+\t\t\t{`\\s+`, Text, nil},\n+\t\t},\n+\t}\n+}\n+\n+// Caddyfile lexer.\n+var Caddyfile = internal.Register(MustNewLazyLexer(\n+\t&Config{\n+\t\tName:      \"Caddyfile\",\n+\t\tAliases:   []string{\"caddyfile\", \"caddy\"},\n+\t\tFilenames: []string{\"Caddyfile*\"},\n+\t\tMimeTypes: []string{},\n+\t},\n+\tcaddyfileRules,\n+))\n+\n+func caddyfileRules() Rules {\n+\treturn Rules{\n+\t\t\"root\": {\n+\t\t\tInclude(\"comments\"),\n+\t\t\t// Global options block\n+\t\t\t{`^\\s*(\\{)\\s*$`, ByGroups(Punctuation), Push(\"globals\")},\n+\t\t\t// Snippets\n+\t\t\t{`(\\([^\\s#]+\\))(\\s*)(\\{)`, ByGroups(NameVariableAnonymous, Text, Punctuation), Push(\"snippet\")},\n+\t\t\t// Site label\n+\t\t\t{`[^#{(\\s,]+`, GenericHeading, Push(\"label\")},\n+\t\t\t// Site label with placeholder\n+\t\t\t{`\\{[\\w+.\\$-]+\\}`, LiteralStringEscape, Push(\"label\")},\n+\t\t\t{`\\s+`, Text, nil},\n+\t\t},\n+\t\t\"globals\": {\n+\t\t\t{`\\}`, Punctuation, Pop(1)},\n+\t\t\t{`[^\\s#]+`, Keyword, Push(\"directive\")},\n+\t\t\tInclude(\"base\"),\n+\t\t},\n+\t\t\"snippet\": {\n+\t\t\t{`\\}`, Punctuation, Pop(1)},\n+\t\t\t// Matcher definition\n+\t\t\t{`@[^\\s]+(?=\\s)`, NameDecorator, Push(\"matcher\")},\n+\t\t\t// Any directive\n+\t\t\t{`[^\\s#]+`, Keyword, Push(\"directive\")},\n+\t\t\tInclude(\"base\"),\n+\t\t},\n+\t\t\"label\": {\n+\t\t\t// Allow multiple labels, comma separated, newlines after\n+\t\t\t// a comma means another label is coming\n+\t\t\t{`,\\s*\\n?`, Text, nil},\n+\t\t\t{` `, Text, nil},\n+\t\t\t// Site label with placeholder\n+\t\t\t{`\\{[\\w+.\\$-]+\\}`, LiteralStringEscape, nil},\n+\t\t\t// Site label\n+\t\t\t{`[^#{(\\s,]+`, GenericHeading, nil},\n+\t\t\t// Comment after non-block label (hack because comments end in \\n)\n+\t\t\t{`#.*\\n`, CommentSingle, Push(\"site_block\")},\n+\t\t\t// Note: if \\n, we'll never pop out of the site_block, it's valid\n+\t\t\t{`\\{(?=\\s)|\\n`, Punctuation, Push(\"site_block\")},\n+\t\t},\n+\t\t\"site_block\": {\n+\t\t\t{`\\}`, Punctuation, Pop(2)},\n+\t\t\tInclude(\"site_block_common\"),\n+\t\t},\n+\t}.Merge(caddyfileCommonRules())\n+}\n+\n+// Caddyfile directive-only lexer.\n+var CaddyfileDirectives = internal.Register(MustNewLazyLexer(\n+\t&Config{\n+\t\tName:      \"Caddyfile Directives\",\n+\t\tAliases:   []string{\"caddyfile-directives\", \"caddyfile-d\", \"caddy-d\"},\n+\t\tFilenames: []string{},\n+\t\tMimeTypes: []string{},\n+\t},\n+\tcaddyfileDirectivesRules,\n+))\n+\n+func caddyfileDirectivesRules() Rules {\n+\treturn Rules{\n+\t\t// Same as \"site_block\" in Caddyfile\n+\t\t\"root\": {\n+\t\t\tInclude(\"site_block_common\"),\n+\t\t},\n+\t}.Merge(caddyfileCommonRules())\n+}"
    },
    {
      "sha": "ec0d892c0fa52b0a82afee74c53167c3ccd7b7c1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/capnproto.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/capnproto.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/capnproto.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/capnproto.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Cap'N'Proto Proto lexer.\n-var CapNProto = internal.Register(MustNewLexer(\n+var CapNProto = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Cap'n Proto\",\n \t\tAliases:   []string{\"capnp\"},\n \t\tFilenames: []string{\"*.capnp\"},\n \t\tMimeTypes: []string{},\n \t},\n-\tRules{\n+\tcapNProtoRules,\n+))\n+\n+func capNProtoRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`#.*?$`, CommentSingle, nil},\n \t\t\t{`@[0-9a-zA-Z]*`, NameDecorator, nil},\n@@ -57,5 +61,5 @@ var CapNProto = internal.Register(MustNewLexer(\n \t\t\t{`[])]`, NameAttribute, Pop(1)},\n \t\t\tDefault(Pop(1)),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "9d424d4b281837fd28cfce581ba2ad8aacccc013",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/ceylon.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/ceylon.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/ceylon.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/ceylon.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Ceylon lexer.\n-var Ceylon = internal.Register(MustNewLexer(\n+var Ceylon = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Ceylon\",\n \t\tAliases:   []string{\"ceylon\"},\n \t\tFilenames: []string{\"*.ceylon\"},\n \t\tMimeTypes: []string{\"text/x-ceylon\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\tceylonRules,\n+))\n+\n+func ceylonRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`^(\\s*(?:[a-zA-Z_][\\w.\\[\\]]*\\s+)+?)([a-zA-Z_]\\w*)(\\s*)(\\()`, ByGroups(UsingSelf(\"root\"), NameFunction, Text, Operator), nil},\n \t\t\t{`[^\\S\\n]+`, Text, nil},\n@@ -59,5 +63,5 @@ var Ceylon = internal.Register(MustNewLexer(\n \t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n \t\t\t{`[*/]`, CommentMultiline, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "f3050346f9e0f81504cfe15424db70686b8aa39e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/cfengine3.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/cfengine3.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/cfengine3.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/cfengine3.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Cfengine3 lexer.\n-var Cfengine3 = internal.Register(MustNewLexer(\n+var Cfengine3 = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"CFEngine3\",\n \t\tAliases:   []string{\"cfengine3\", \"cf3\"},\n \t\tFilenames: []string{\"*.cf\"},\n \t\tMimeTypes: []string{},\n \t},\n-\tRules{\n+\tcfengine3Rules,\n+))\n+\n+func cfengine3Rules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`#.*?\\n`, Comment, nil},\n \t\t\t{`(body)(\\s+)(\\S+)(\\s+)(control)`, ByGroups(Keyword, Text, Keyword, Text, Keyword), nil},\n@@ -52,5 +56,5 @@ var Cfengine3 = internal.Register(MustNewLexer(\n \t\t\t{`\\w+`, NameVariable, nil},\n \t\t\t{`\\s+`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "58db9aac9fd6bedacddbe0975f7059a466d16bd5",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/chaiscript.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/chaiscript.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/chaiscript.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/chaiscript.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Chaiscript lexer.\n-var Chaiscript = internal.Register(MustNewLexer(\n+var Chaiscript = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"ChaiScript\",\n \t\tAliases:   []string{\"chai\", \"chaiscript\"},\n \t\tFilenames: []string{\"*.chai\"},\n \t\tMimeTypes: []string{\"text/x-chaiscript\", \"application/x-chaiscript\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\tchaiscriptRules,\n+))\n+\n+func chaiscriptRules() Rules {\n+\treturn Rules{\n \t\t\"commentsandwhitespace\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`//.*?\\n`, CommentSingle, nil},\n@@ -59,5 +63,5 @@ var Chaiscript = internal.Register(MustNewLexer(\n \t\t\t{`[^\\\\\"$]+`, LiteralStringDouble, nil},\n \t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "bd5fb9d9cc75d2cc38a32577f60cecdf7ce60890",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/cheetah.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/cheetah.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/cheetah.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/cheetah.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -7,14 +7,18 @@ import (\n )\n \n // Cheetah lexer.\n-var Cheetah = internal.Register(MustNewLexer(\n+var Cheetah = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Cheetah\",\n \t\tAliases:   []string{\"cheetah\", \"spitfire\"},\n \t\tFilenames: []string{\"*.tmpl\", \"*.spt\"},\n \t\tMimeTypes: []string{\"application/x-cheetah\", \"application/x-spitfire\"},\n \t},\n-\tRules{\n+\tcheetahRules,\n+))\n+\n+func cheetahRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`(##[^\\n]*)$`, ByGroups(Comment), nil},\n \t\t\t{`#[*](.|\\n)*?[*]#`, Comment, nil},\n@@ -33,5 +37,5 @@ var Cheetah = internal.Register(MustNewLexer(\n             `, Other, nil},\n \t\t\t{`\\s+`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "bb162734ccaec7c78c1c2a96d19a52fb8d96adac",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/cl.go",
      "status": "modified",
      "additions": 16,
      "deletions": 12,
      "changes": 28,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/cl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/cl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/cl.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -230,15 +230,27 @@ var (\n )\n \n // Common Lisp lexer.\n-var CommonLisp = internal.Register(TypeRemappingLexer(MustNewLexer(\n+var CommonLisp = internal.Register(TypeRemappingLexer(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"Common Lisp\",\n \t\tAliases:         []string{\"common-lisp\", \"cl\", \"lisp\"},\n \t\tFilenames:       []string{\"*.cl\", \"*.lisp\"},\n \t\tMimeTypes:       []string{\"text/x-common-lisp\"},\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tcommonLispRules,\n+), TypeMapping{\n+\t{NameVariable, NameFunction, clBuiltinFunctions},\n+\t{NameVariable, Keyword, clSpecialForms},\n+\t{NameVariable, NameBuiltin, clMacros},\n+\t{NameVariable, Keyword, clLambdaListKeywords},\n+\t{NameVariable, Keyword, clDeclarations},\n+\t{NameVariable, KeywordType, clBuiltinTypes},\n+\t{NameVariable, NameClass, clBuiltinClasses},\n+}))\n+\n+func commonLispRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tDefault(Push(\"body\")),\n \t\t},\n@@ -294,13 +306,5 @@ var CommonLisp = internal.Register(TypeRemappingLexer(MustNewLexer(\n \t\t\t{`\\(`, Punctuation, Push(\"body\")},\n \t\t\t{`\\)`, Punctuation, Pop(1)},\n \t\t},\n-\t},\n-), TypeMapping{\n-\t{NameVariable, NameFunction, clBuiltinFunctions},\n-\t{NameVariable, Keyword, clSpecialForms},\n-\t{NameVariable, NameBuiltin, clMacros},\n-\t{NameVariable, Keyword, clLambdaListKeywords},\n-\t{NameVariable, Keyword, clDeclarations},\n-\t{NameVariable, KeywordType, clBuiltinTypes},\n-\t{NameVariable, NameClass, clBuiltinClasses},\n-}))\n+\t}\n+}"
    },
    {
      "sha": "f99f906c208ea386fe29284c2c517d4c8eacbd8d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/clojure.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/clojure.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/clojure.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/clojure.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Clojure lexer.\n-var Clojure = internal.Register(MustNewLexer(\n+var Clojure = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Clojure\",\n \t\tAliases:   []string{\"clojure\", \"clj\"},\n \t\tFilenames: []string{\"*.clj\"},\n \t\tMimeTypes: []string{\"text/x-clojure\", \"application/x-clojure\"},\n \t},\n-\tRules{\n+\tclojureRules,\n+))\n+\n+func clojureRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`;.*$`, CommentSingle, nil},\n \t\t\t{`[,\\s]+`, Text, nil},\n@@ -34,5 +38,5 @@ var Clojure = internal.Register(MustNewLexer(\n \t\t\t{`(\\{|\\})`, Punctuation, nil},\n \t\t\t{`(\\(|\\))`, Punctuation, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "0e0708db49f87302bbeb47bd8b3fb7055ed719f3",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/cmake.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/cmake.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/cmake.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/cmake.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Cmake lexer.\n-var Cmake = internal.Register(MustNewLexer(\n+var Cmake = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"CMake\",\n \t\tAliases:   []string{\"cmake\"},\n \t\tFilenames: []string{\"*.cmake\", \"CMakeLists.txt\"},\n \t\tMimeTypes: []string{\"text/x-cmake\"},\n \t},\n-\tRules{\n+\tcmakeRules,\n+))\n+\n+func cmakeRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\b(\\w+)([ \\t]*)(\\()`, ByGroups(NameBuiltin, Text, Punctuation), Push(\"args\")},\n \t\t\tInclude(\"keywords\"),\n@@ -40,5 +44,5 @@ var Cmake = internal.Register(MustNewLexer(\n \t\t\t{`[ \\t]+`, Text, nil},\n \t\t\t{`#.*\\n`, Comment, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "8b2f6d9bc781018ca8e0a122a32e761bbf6fc661",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/cobol.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/cobol.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/cobol.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/cobol.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Cobol lexer.\n-var Cobol = internal.Register(MustNewLexer(\n+var Cobol = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"COBOL\",\n \t\tAliases:         []string{\"cobol\"},\n \t\tFilenames:       []string{\"*.cob\", \"*.COB\", \"*.cpy\", \"*.CPY\"},\n \t\tMimeTypes:       []string{\"text/x-cobol\"},\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tcobolRules,\n+))\n+\n+func cobolRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"comment\"),\n \t\t\tInclude(\"strings\"),\n@@ -47,5 +51,5 @@ var Cobol = internal.Register(MustNewLexer(\n \t\t\t{`[+-]?\\d*\\.\\d+(E[-+]?\\d+)?`, LiteralNumberFloat, nil},\n \t\t\t{`[+-]?\\d+\\.\\d*(E[-+]?\\d+)?`, LiteralNumberFloat, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "381a8fed86dfa1eb0f2e270676974a1de1c70de1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/coffee.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/coffee.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/coffee.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/coffee.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,7 +6,7 @@ import (\n )\n \n // Coffeescript lexer.\n-var Coffeescript = internal.Register(MustNewLexer(\n+var Coffeescript = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:         \"CoffeeScript\",\n \t\tAliases:      []string{\"coffee-script\", \"coffeescript\", \"coffee\"},\n@@ -15,7 +15,11 @@ var Coffeescript = internal.Register(MustNewLexer(\n \t\tNotMultiline: true,\n \t\tDotAll:       true,\n \t},\n-\tRules{\n+\tcoffeescriptRules,\n+))\n+\n+func coffeescriptRules() Rules {\n+\treturn Rules{\n \t\t\"commentsandwhitespace\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`###[^#].*?###`, CommentMultiline, nil},\n@@ -87,5 +91,5 @@ var Coffeescript = internal.Register(MustNewLexer(\n \t\t\t{`#|\\\\.|\\'|\"`, LiteralString, nil},\n \t\t\tInclude(\"strings\"),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "bc28bc3baf2e133155b8257b806f924c70d64983",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/coldfusion.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/coldfusion.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/coldfusion.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/coldfusion.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,7 +6,7 @@ import (\n )\n \n // Cfstatement lexer.\n-var Cfstatement = internal.Register(MustNewLexer(\n+var Cfstatement = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"cfstatement\",\n \t\tAliases:         []string{\"cfs\"},\n@@ -15,7 +15,11 @@ var Cfstatement = internal.Register(MustNewLexer(\n \t\tNotMultiline:    true,\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tcfstatementRules,\n+))\n+\n+func cfstatementRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`//.*?\\n`, CommentSingle, nil},\n \t\t\t{`/\\*(?:.|\\n)*?\\*/`, CommentMultiline, nil},\n@@ -44,5 +48,5 @@ var Cfstatement = internal.Register(MustNewLexer(\n \t\t\t{`#`, LiteralStringDouble, nil},\n \t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "e0103ef66bcb6016983d3687f604cb9c2c5e90a0",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/coq.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/coq.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/coq.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/coq.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Coq lexer.\n-var Coq = internal.Register(MustNewLexer(\n+var Coq = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Coq\",\n \t\tAliases:   []string{\"coq\"},\n \t\tFilenames: []string{\"*.v\"},\n \t\tMimeTypes: []string{\"text/x-coq\"},\n \t},\n-\tRules{\n+\tcoqRules,\n+))\n+\n+func coqRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`false|true|\\(\\)|\\[\\]`, NameBuiltinPseudo, nil},\n@@ -59,5 +63,5 @@ var Coq = internal.Register(MustNewLexer(\n \t\t\t{`[a-z][a-z0-9_\\']*`, Name, Pop(1)},\n \t\t\tDefault(Pop(1)),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "3f4a1fde05cd6dd6a3d55a8b77f8407f7ed2b7e6",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/cpp.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/cpp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/cpp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/cpp.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // CPP lexer.\n-var CPP = internal.Register(MustNewLexer(\n+var CPP = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"C++\",\n \t\tAliases:   []string{\"cpp\", \"c++\"},\n \t\tFilenames: []string{\"*.cpp\", \"*.hpp\", \"*.c++\", \"*.h++\", \"*.cc\", \"*.hh\", \"*.cxx\", \"*.hxx\", \"*.C\", \"*.H\", \"*.cp\", \"*.CPP\"},\n \t\tMimeTypes: []string{\"text/x-c++hdr\", \"text/x-c++src\"},\n \t\tEnsureNL:  true,\n \t},\n-\tRules{\n+\tcppRules,\n+))\n+\n+func cppRules() Rules {\n+\treturn Rules{\n \t\t\"statements\": {\n \t\t\t{Words(``, `\\b`, `catch`, `const_cast`, `delete`, `dynamic_cast`, `explicit`, `export`, `friend`, `mutable`, `namespace`, `new`, `operator`, `private`, `protected`, `public`, `reinterpret_cast`, `restrict`, `static_cast`, `template`, `this`, `throw`, `throws`, `try`, `typeid`, `typename`, `using`, `virtual`, `constexpr`, `nullptr`, `decltype`, `thread_local`, `alignas`, `alignof`, `static_assert`, `noexcept`, `override`, `final`, `concept`, `requires`, `consteval`, `co_await`, `co_return`, `co_yield`), Keyword, nil},\n \t\t\t{`(enum)\\b(\\s+)(class)\\b(\\s*)`, ByGroups(Keyword, Text, Keyword, Text), Push(\"classname\")},\n@@ -102,5 +106,5 @@ var CPP = internal.Register(MustNewLexer(\n \t\t\t{`^\\s*#endif.*?(?<!\\\\)\\n`, CommentPreproc, Pop(1)},\n \t\t\t{`.*?\\n`, Comment, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "56de99f79a076c071e2842372715b59b89d0daf6",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/cql.go",
      "status": "modified",
      "additions": 10,
      "deletions": 5,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/cql.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/cql.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/cql.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,7 +6,7 @@ import (\n )\n \n // CassandraCQL lexer.\n-var CassandraCQL = internal.Register(MustNewLexer(\n+var CassandraCQL = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"Cassandra CQL\",\n \t\tAliases:         []string{\"cassandra\", \"cql\"},\n@@ -15,15 +15,20 @@ var CassandraCQL = internal.Register(MustNewLexer(\n \t\tNotMultiline:    true,\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tcassandraCQLRules,\n+))\n+\n+func cassandraCQLRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, TextWhitespace, nil},\n \t\t\t{`(--|\\/\\/).*\\n?`, CommentSingle, nil},\n \t\t\t{`/\\*`, CommentMultiline, Push(\"multiline-comments\")},\n \t\t\t{`(ascii|bigint|blob|boolean|counter|date|decimal|double|float|frozen|inet|int|list|map|set|smallint|text|time|timestamp|timeuuid|tinyint|tuple|uuid|varchar|varint)\\b`, NameBuiltin, nil},\n \t\t\t{Words(``, `\\b`, `ADD`, `AGGREGATE`, `ALL`, `ALLOW`, `ALTER`, `AND`, `ANY`, `APPLY`, `AS`, `ASC`, `AUTHORIZE`, `BATCH`, `BEGIN`, `BY`, `CLUSTERING`, `COLUMNFAMILY`, `COMPACT`, `CONSISTENCY`, `COUNT`, `CREATE`, `CUSTOM`, `DELETE`, `DESC`, `DISTINCT`, `DROP`, `EACH_QUORUM`, `ENTRIES`, `EXISTS`, `FILTERING`, `FROM`, `FULL`, `GRANT`, `IF`, `IN`, `INDEX`, `INFINITY`, `INSERT`, `INTO`, `KEY`, `KEYS`, `KEYSPACE`, `KEYSPACES`, `LEVEL`, `LIMIT`, `LOCAL_ONE`, `LOCAL_QUORUM`, `MATERIALIZED`, `MODIFY`, `NAN`, `NORECURSIVE`, `NOSUPERUSER`, `NOT`, `OF`, `ON`, `ONE`, `ORDER`, `PARTITION`, `PASSWORD`, `PER`, `PERMISSION`, `PERMISSIONS`, `PRIMARY`, `QUORUM`, `RENAME`, `REVOKE`, `SCHEMA`, `SELECT`, `STATIC`, `STORAGE`, `SUPERUSER`, `TABLE`, `THREE`, `TO`, `TOKEN`, `TRUNCATE`, `TTL`, `TWO`, `TYPE`, `UNLOGGED`, `UPDATE`, `USE`, `USER`, `USERS`, `USING`, `VALUES`, `VIEW`, `WHERE`, `WITH`, `WRITETIME`, `REPLICATION`, `OR`, `REPLACE`, `FUNCTION`, `CALLED`, `INPUT`, `RETURNS`, `LANGUAGE`, `ROLE`, `ROLES`, `TRIGGER`, `DURABLE_WRITES`, `LOGIN`, `OPTIONS`, `LOGGED`, `SFUNC`, `STYPE`, `FINALFUNC`, `INITCOND`, `IS`, `CONTAINS`, `JSON`, `PAGING`, `OFF`), Keyword, nil},\n \t\t\t{\"[+*/<>=~!@#%^&|`?-]+\", Operator, nil},\n-\t\t\t{`(?s)(java|javascript)(\\s+)(AS)(\\s+)('|\\$\\$)(.*?)(\\5)`,\n+\t\t\t{\n+\t\t\t\t`(?s)(java|javascript)(\\s+)(AS)(\\s+)('|\\$\\$)(.*?)(\\5)`,\n \t\t\t\tUsingByGroup(\n \t\t\t\t\tinternal.Get,\n \t\t\t\t\t1, 6,\n@@ -65,5 +70,5 @@ var CassandraCQL = internal.Register(MustNewLexer(\n \t\t\t{`[^\\$]+`, LiteralStringHeredoc, nil},\n \t\t\t{`\\$\\$`, LiteralStringHeredoc, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "f06830d2950a017f388809a21ae093ef18d7611b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/crystal.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/crystal.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/crystal.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/crystal.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Crystal lexer.\n-var Crystal = internal.Register(MustNewLexer(\n+var Crystal = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Crystal\",\n \t\tAliases:   []string{\"cr\", \"crystal\"},\n \t\tFilenames: []string{\"*.cr\"},\n \t\tMimeTypes: []string{\"text/x-crystal\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\tcrystalRules,\n+))\n+\n+func crystalRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`#.*?$`, CommentSingle, nil},\n \t\t\t{Words(``, `\\b`, `abstract`, `asm`, `as`, `begin`, `break`, `case`, `do`, `else`, `elsif`, `end`, `ensure`, `extend`, `ifdef`, `if`, `include`, `instance_sizeof`, `next`, `of`, `pointerof`, `private`, `protected`, `rescue`, `return`, `require`, `sizeof`, `super`, `then`, `typeof`, `unless`, `until`, `when`, `while`, `with`, `yield`), Keyword, nil},\n@@ -258,5 +262,5 @@ var Crystal = internal.Register(MustNewLexer(\n \t\t\t{`[\\\\#<>]`, LiteralStringRegex, nil},\n \t\t\t{`[^\\\\#<>]+`, LiteralStringRegex, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "725bcb86104ad832ade85e27ac1b610de05d4fe9",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/csharp.go",
      "status": "modified",
      "additions": 9,
      "deletions": 5,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/csharp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/csharp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/csharp.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,7 +6,7 @@ import (\n )\n \n // CSharp lexer.\n-var CSharp = internal.Register(MustNewLexer(\n+var CSharp = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"C#\",\n \t\tAliases:   []string{\"csharp\", \"c#\"},\n@@ -15,7 +15,11 @@ var CSharp = internal.Register(MustNewLexer(\n \t\tDotAll:    true,\n \t\tEnsureNL:  true,\n \t},\n-\tRules{\n+\tcSharpRules,\n+))\n+\n+func cSharpRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`^\\s*\\[.*?\\]`, NameAttribute, nil},\n \t\t\t{`[^\\S\\n]+`, Text, nil},\n@@ -29,7 +33,7 @@ var CSharp = internal.Register(MustNewLexer(\n \t\t\t{`\\$@?\"(\"\"|[^\"])*\"`, LiteralString, nil},\n \t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"\\n])*[\"\\n]`, LiteralString, nil},\n \t\t\t{`'\\\\.'|'[^\\\\]'`, LiteralStringChar, nil},\n-\t\t\t{`[0-9](\\.[0-9]*)?([eE][+-][0-9]+)?[flFLdD]?|0[xX][0-9a-fA-F]+[Ll]?`, LiteralNumber, nil},\n+\t\t\t{`0[xX][0-9a-fA-F]+[Ll]?|[0-9_](\\.[0-9]*)?([eE][+-]?[0-9]+)?[flFLdD]?`, LiteralNumber, nil},\n \t\t\t{`#[ \\t]*(if|endif|else|elif|define|undef|line|error|warning|region|endregion|pragma)\\b.*?\\n`, CommentPreproc, nil},\n \t\t\t{`\\b(extern)(\\s+)(alias)\\b`, ByGroups(Keyword, Text, Keyword), nil},\n \t\t\t{`(abstract|as|async|await|base|break|by|case|catch|checked|const|continue|default|delegate|do|else|enum|event|explicit|extern|false|finally|fixed|for|foreach|goto|if|implicit|in|interface|internal|is|let|lock|new|null|on|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|true|try|typeof|unchecked|unsafe|virtual|void|while|get|set|new|partial|yield|add|remove|value|alias|ascending|descending|from|group|into|orderby|select|thenby|where|join|equals)\\b`, Keyword, nil},\n@@ -47,5 +51,5 @@ var CSharp = internal.Register(MustNewLexer(\n \t\t\t{`(?=\\()`, Text, Pop(1)},\n \t\t\t{`(@?[_a-zA-Z]\\w*|\\.)+`, NameNamespace, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "9f3a01d5455dd49b621ca89ed78eefc6bcd944d2",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/css.go",
      "status": "modified",
      "additions": 21,
      "deletions": 4,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/css.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/css.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/css.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // CSS lexer.\n-var CSS = internal.Register(MustNewLexer(\n+var CSS = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"CSS\",\n \t\tAliases:   []string{\"css\"},\n \t\tFilenames: []string{\"*.css\"},\n \t\tMimeTypes: []string{\"text/css\"},\n \t},\n-\tRules{\n+\tcssRules,\n+))\n+\n+func cssRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"basics\"),\n \t\t},\n@@ -39,6 +43,18 @@ var CSS = internal.Register(MustNewLexer(\n \t\t\tInclude(\"basics\"),\n \t\t\t{`\\}`, Punctuation, Pop(2)},\n \t\t},\n+\t\t\"atparenthesis\": {\n+\t\t\tInclude(\"common-values\"),\n+\t\t\t{`/\\*(?:.|\\n)*?\\*/`, Comment, nil},\n+\t\t\tInclude(\"numeric-values\"),\n+\t\t\t{`[*+/-]`, Operator, nil},\n+\t\t\t{`[,]`, Punctuation, nil},\n+\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n+\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n+\t\t\t{`[a-zA-Z_-]\\w*`, Name, nil},\n+\t\t\t{`\\(`, Punctuation, Push(\"atparenthesis\")},\n+\t\t\t{`\\)`, Punctuation, Pop(1)},\n+\t\t},\n \t\t\"content\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`\\}`, Punctuation, Pop(1)},\n@@ -73,6 +89,7 @@ var CSS = internal.Register(MustNewLexer(\n \t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n \t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n \t\t\t{`[a-zA-Z_-]\\w*`, Name, nil},\n+\t\t\t{`\\(`, Punctuation, Push(\"atparenthesis\")},\n \t\t\t{`\\)`, Punctuation, Pop(1)},\n \t\t},\n \t\t\"common-values\": {\n@@ -100,5 +117,5 @@ var CSS = internal.Register(MustNewLexer(\n \t\t\t{`%`, KeywordType, nil},\n \t\t\tDefault(Pop(1)),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "0cce20410d4b2d775832e58a9ea3edd3c31aaedc",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/cython.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/cython.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/c/cython.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/c/cython.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Cython lexer.\n-var Cython = internal.Register(MustNewLexer(\n+var Cython = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Cython\",\n \t\tAliases:   []string{\"cython\", \"pyx\", \"pyrex\"},\n \t\tFilenames: []string{\"*.pyx\", \"*.pxd\", \"*.pxi\"},\n \t\tMimeTypes: []string{\"text/x-cython\", \"application/x-cython\"},\n \t},\n-\tRules{\n+\tcythonRules,\n+))\n+\n+func cythonRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\n`, Text, nil},\n \t\t\t{`^(\\s*)(\"\"\"(?:.|\\n)*?\"\"\")`, ByGroups(Text, LiteralStringDoc), nil},\n@@ -131,5 +135,5 @@ var Cython = internal.Register(MustNewLexer(\n \t\t\tInclude(\"strings\"),\n \t\t\tInclude(\"nl\"),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "517fb69077188def3d785be9d0264d004d8b9989",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/circular/php.go",
      "status": "modified",
      "additions": 14,
      "deletions": 19,
      "changes": 33,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/circular/php.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/circular/php.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/circular/php.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -1,15 +1,12 @@\n package circular\n \n import (\n-\t\"strings\"\n-\n \t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/h\"\n \t\"github.com/alecthomas/chroma/lexers/internal\"\n )\n \n-// PHP lexer.\n-var PHP = internal.Register(DelegatingLexer(h.HTML, MustNewLexer(\n+// PHP lexer for pure PHP code (not embedded in HTML).\n+var PHP = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"PHP\",\n \t\tAliases:         []string{\"php\", \"php3\", \"php4\", \"php5\"},\n@@ -19,12 +16,15 @@ var PHP = internal.Register(DelegatingLexer(h.HTML, MustNewLexer(\n \t\tCaseInsensitive: true,\n \t\tEnsureNL:        true,\n \t},\n-\tRules{\n-\t\t\"root\": {\n-\t\t\t{`<\\?(php)?`, CommentPreproc, Push(\"php\")},\n-\t\t\t{`[^<]+`, Other, nil},\n-\t\t\t{`<`, Other, nil},\n-\t\t},\n+\tphpRules,\n+))\n+\n+func phpRules() Rules {\n+\treturn phpCommonRules().Rename(\"php\", \"root\")\n+}\n+\n+func phpCommonRules() Rules {\n+\treturn Rules{\n \t\t\"php\": {\n \t\t\t{`\\?>`, CommentPreproc, Pop(1)},\n \t\t\t{`(<<<)([\\'\"]?)((?:[\\\\_a-z]|[^\\x00-\\x7f])(?:[\\\\\\w]|[^\\x00-\\x7f])*)(\\2\\n.*?\\n\\s*)(\\3)(;?)(\\n)`, ByGroups(LiteralString, LiteralString, LiteralStringDelimiter, LiteralString, LiteralStringDelimiter, Punctuation, Text), nil},\n@@ -51,8 +51,8 @@ var PHP = internal.Register(DelegatingLexer(h.HTML, MustNewLexer(\n \t\t\t{`(\\d+\\.\\d*|\\d*\\.\\d+)(e[+-]?[0-9]+)?`, LiteralNumberFloat, nil},\n \t\t\t{`\\d+e[+-]?[0-9]+`, LiteralNumberFloat, nil},\n \t\t\t{`0[0-7]+`, LiteralNumberOct, nil},\n-\t\t\t{`0x[a-f0-9]+`, LiteralNumberHex, nil},\n-\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n+\t\t\t{`0x[a-f0-9_]+`, LiteralNumberHex, nil},\n+\t\t\t{`[\\d_]+`, LiteralNumberInteger, nil},\n \t\t\t{`0b[01]+`, LiteralNumberBin, nil},\n \t\t\t{`'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)'`, LiteralStringSingle, nil},\n \t\t\t{\"`([^`\\\\\\\\]*(?:\\\\\\\\.[^`\\\\\\\\]*)*)`\", LiteralStringBacktick, nil},\n@@ -82,10 +82,5 @@ var PHP = internal.Register(DelegatingLexer(h.HTML, MustNewLexer(\n \t\t\t{`(\\$\\{)(\\S+)(\\})`, ByGroups(LiteralStringInterpol, NameVariable, LiteralStringInterpol), nil},\n \t\t\t{`[${\\\\]`, LiteralStringDouble, nil},\n \t\t},\n-\t},\n-).SetAnalyser(func(text string) float32 {\n-\tif strings.Contains(text, \"<?php\") {\n-\t\treturn 0.5\n \t}\n-\treturn 0.0\n-})))\n+}"
    },
    {
      "sha": "fc2e2eaf94fca4ee611008d862a200dfca6e3e91",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/circular/phtml.go",
      "status": "added",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/circular/phtml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/circular/phtml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/circular/phtml.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,39 @@\n+package circular\n+\n+import (\n+\t\"strings\"\n+\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/h\"\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+)\n+\n+// PHTML lexer is PHP in HTML.\n+var PHTML = internal.Register(DelegatingLexer(h.HTML, MustNewLazyLexer(\n+\t&Config{\n+\t\tName:            \"PHTML\",\n+\t\tAliases:         []string{\"phtml\"},\n+\t\tFilenames:       []string{\"*.phtml\", \"*.php\", \"*.php[345]\", \"*.inc\"},\n+\t\tMimeTypes:       []string{\"application/x-php\", \"application/x-httpd-php\", \"application/x-httpd-php3\", \"application/x-httpd-php4\", \"application/x-httpd-php5\", \"text/x-php\"},\n+\t\tDotAll:          true,\n+\t\tCaseInsensitive: true,\n+\t\tEnsureNL:        true,\n+\t\tPriority:        2,\n+\t},\n+\tphtmlRules,\n+).SetAnalyser(func(text string) float32 {\n+\tif strings.Contains(text, \"<?php\") {\n+\t\treturn 0.5\n+\t}\n+\treturn 0.0\n+})))\n+\n+func phtmlRules() Rules {\n+\treturn Rules{\n+\t\t\"root\": {\n+\t\t\t{`<\\?(php)?`, CommentPreproc, Push(\"php\")},\n+\t\t\t{`[^<]+`, Other, nil},\n+\t\t\t{`<`, Other, nil},\n+\t\t},\n+\t}.Merge(phpCommonRules())\n+}"
    },
    {
      "sha": "ac12d2e23631f6c5a57612045db1150ab34c5f5c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/d/d.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/d/d.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/d/d.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/d/d.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // D lexer. https://dlang.org/spec/lex.html\n-var D = internal.Register(MustNewLexer(\n+var D = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"D\",\n \t\tAliases:   []string{\"d\"},\n \t\tFilenames: []string{\"*.d\", \"*.di\"},\n \t\tMimeTypes: []string{\"text/x-d\"},\n \t\tEnsureNL:  true,\n \t},\n-\tRules{\n+\tdRules,\n+))\n+\n+func dRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[^\\S\\n]+`, Text, nil},\n \n@@ -65,5 +69,5 @@ var D = internal.Register(MustNewLexer(\n \t\t\"import\": {\n \t\t\t{`[\\w.]+\\*?`, NameNamespace, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "c1dbb5cd5e8d8a3516b744c0e042a48408484ccd",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/d/dart.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/d/dart.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/d/dart.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/d/dart.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Dart lexer.\n-var Dart = internal.Register(MustNewLexer(\n+var Dart = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Dart\",\n \t\tAliases:   []string{\"dart\"},\n \t\tFilenames: []string{\"*.dart\"},\n \t\tMimeTypes: []string{\"text/x-dart\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\tdartRules,\n+))\n+\n+func dartRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"string_literal\"),\n \t\t\t{`#!(.*?)$`, CommentPreproc, nil},\n@@ -87,5 +91,5 @@ var Dart = internal.Register(MustNewLexer(\n \t\t\tInclude(\"string_common\"),\n \t\t\t{`(\\$|\\')+`, LiteralStringSingle, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "d4d6db450ec5afc27c23db812c0628a2c44d1578",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/d/diff.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/d/diff.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/d/diff.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/d/diff.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Diff lexer.\n-var Diff = internal.Register(MustNewLexer(\n+var Diff = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Diff\",\n \t\tAliases:   []string{\"diff\", \"udiff\"},\n \t\tEnsureNL:  true,\n \t\tFilenames: []string{\"*.diff\", \"*.patch\"},\n \t\tMimeTypes: []string{\"text/x-diff\", \"text/x-patch\"},\n \t},\n-\tRules{\n+\tdiffRules,\n+))\n+\n+func diffRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{` .*\\n`, Text, nil},\n \t\t\t{`\\+.*\\n`, GenericInserted, nil},\n@@ -25,5 +29,5 @@ var Diff = internal.Register(MustNewLexer(\n \t\t\t{`=.*\\n`, GenericHeading, nil},\n \t\t\t{`.*\\n`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "5d3baa916391eba761dc9c0bddbded9a3b77482b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/d/django.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/d/django.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/d/django.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/d/django.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Django/Jinja lexer.\n-var DjangoJinja = internal.Register(MustNewLexer(\n+var DjangoJinja = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Django/Jinja\",\n \t\tAliases:   []string{\"django\", \"jinja\"},\n \t\tFilenames: []string{},\n \t\tMimeTypes: []string{\"application/x-django-templating\", \"application/x-jinja\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\tdjangoJinjaRules,\n+))\n+\n+func djangoJinjaRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[^{]+`, Other, nil},\n \t\t\t{`\\{\\{`, CommentPreproc, Push(\"var\")},\n@@ -49,5 +53,5 @@ var DjangoJinja = internal.Register(MustNewLexer(\n \t\t\tInclude(\"varnames\"),\n \t\t\t{`.`, Punctuation, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "ea808f047dc6864f65bae85d76f2938a3b962939",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/d/docker.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/d/docker.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/d/docker.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/d/docker.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -8,15 +8,19 @@ import (\n )\n \n // Docker lexer.\n-var Docker = internal.Register(MustNewLexer(\n+var Docker = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"Docker\",\n \t\tAliases:         []string{\"docker\", \"dockerfile\"},\n \t\tFilenames:       []string{\"Dockerfile\", \"*.docker\"},\n \t\tMimeTypes:       []string{\"text/x-dockerfile-config\"},\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tdockerRules,\n+))\n+\n+func dockerRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`#.*`, Comment, nil},\n \t\t\t{`(ONBUILD)((?:\\s*\\\\?\\s*))`, ByGroups(Keyword, Using(b.Bash)), nil},\n@@ -27,5 +31,5 @@ var Docker = internal.Register(MustNewLexer(\n \t\t\t{`((?:RUN|CMD|ENTRYPOINT|ENV|ARG|LABEL|ADD|COPY))`, Keyword, nil},\n \t\t\t{`(.*\\\\\\n)*.+`, Using(b.Bash), nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "aeec6b1d9ec53c2b5393dc11cfca71b24249fd9d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/d/dtd.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/d/dtd.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/d/dtd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/d/dtd.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Dtd lexer.\n-var Dtd = internal.Register(MustNewLexer(\n+var Dtd = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"DTD\",\n \t\tAliases:   []string{\"dtd\"},\n \t\tFilenames: []string{\"*.dtd\"},\n \t\tMimeTypes: []string{\"application/xml-dtd\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\tdtdRules,\n+))\n+\n+func dtdRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"common\"),\n \t\t\t{`(<!ELEMENT)(\\s+)(\\S+)`, ByGroups(Keyword, Text, NameTag), Push(\"element\")},\n@@ -65,5 +69,5 @@ var Dtd = internal.Register(MustNewLexer(\n \t\t\t{`[^>\\s|()?+*,]+`, NameAttribute, nil},\n \t\t\t{`>`, Keyword, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "feda74870e1812dd9440143f93133b1e6aef979c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/d/dylan.go",
      "status": "added",
      "additions": 76,
      "deletions": 0,
      "changes": 76,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/d/dylan.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/d/dylan.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/d/dylan.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,76 @@\n+package d\n+\n+import (\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+)\n+\n+// Dylan lexer.\n+var Dylan = internal.Register(MustNewLazyLexer(\n+\t&Config{\n+\t\tName:            \"Dylan\",\n+\t\tAliases:         []string{\"dylan\"},\n+\t\tFilenames:       []string{\"*.dylan\", \"*.dyl\", \"*.intr\"},\n+\t\tMimeTypes:       []string{\"text/x-dylan\"},\n+\t\tCaseInsensitive: true,\n+\t},\n+\tfunc() Rules {\n+\t\treturn Rules{\n+\t\t\t\"root\": {\n+\t\t\t\t{`\\s+`, Whitespace, nil},\n+\t\t\t\t{`//.*?\\n`, CommentSingle, nil},\n+\t\t\t\t{`([a-z0-9-]+:)([ \\t]*)(.*(?:\\n[ \\t].+)*)`, ByGroups(NameAttribute, Whitespace, LiteralString), nil},\n+\t\t\t\tDefault(Push(\"code\")),\n+\t\t\t},\n+\t\t\t\"code\": {\n+\t\t\t\t{`\\s+`, Whitespace, nil},\n+\t\t\t\t{`//.*?\\n`, CommentSingle, nil},\n+\t\t\t\t{`/\\*`, CommentMultiline, Push(\"comment\")},\n+\t\t\t\t{`\"`, LiteralString, Push(\"string\")},\n+\t\t\t\t{`'(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-f0-9]{1,2}|[^\\\\\\'\\n])'`, LiteralStringChar, nil},\n+\t\t\t\t{`#b[01]+`, LiteralNumberBin, nil},\n+\t\t\t\t{`#o[0-7]+`, LiteralNumberOct, nil},\n+\t\t\t\t{`[-+]?(\\d*\\.\\d+([ed][-+]?\\d+)?|\\d+(\\.\\d*)?e[-+]?\\d+)`, LiteralNumberFloat, nil},\n+\t\t\t\t{`[-+]?\\d+`, LiteralNumberInteger, nil},\n+\t\t\t\t{`#x[0-9a-f]+`, LiteralNumberHex, nil},\n+\n+\t\t\t\t{`(\\?\\\\?)([\\w!&*<>|^$%@+~?/=-]+)(:)(token|name|variable|expression|body|case-body|\\*)`,\n+\t\t\t\t\tByGroups(Operator, NameVariable, Operator, NameBuiltin), nil},\n+\t\t\t\t{`(\\?)(:)(token|name|variable|expression|body|case-body|\\*)`,\n+\t\t\t\t\tByGroups(Operator, Operator, NameVariable), nil},\n+\t\t\t\t{`(\\?\\\\?)([\\w!&*<>|^$%@+~?/=-]+)`, ByGroups(Operator, NameVariable), nil},\n+\n+\t\t\t\t{`(=>|::|#\\(|#\\[|##|\\?\\?|\\?=|\\?|[(){}\\[\\],.;])`, Punctuation, nil},\n+\t\t\t\t{`:=`, Operator, nil},\n+\t\t\t\t{`#[tf]`, Literal, nil},\n+\t\t\t\t{`#\"`, LiteralStringSymbol, Push(\"symbol\")},\n+\t\t\t\t{`#[a-z0-9-]+`, Keyword, nil},\n+\t\t\t\t{`#(all-keys|include|key|next|rest)`, Keyword, nil},\n+\t\t\t\t{`[\\w!&*<>|^$%@+~?/=-]+:`, KeywordConstant, nil},\n+\t\t\t\t{`<[\\w!&*<>|^$%@+~?/=-]+>`, NameClass, nil},\n+\t\t\t\t{`\\*[\\w!&*<>|^$%@+~?/=-]+\\*`, NameVariableGlobal, nil},\n+\t\t\t\t{`\\$[\\w!&*<>|^$%@+~?/=-]+`, NameConstant, nil},\n+\t\t\t\t{`(let|method|function)([ \\t]+)([\\w!&*<>|^$%@+~?/=-]+)`, ByGroups(NameBuiltin, Whitespace, NameVariable), nil},\n+\t\t\t\t{`(error|signal|return|break)`, NameException, nil},\n+\t\t\t\t{`(\\\\?)([\\w!&*<>|^$%@+~?/=-]+)`, ByGroups(Operator, Name), nil},\n+\t\t\t},\n+\t\t\t\"comment\": {\n+\t\t\t\t{`[^*/]`, CommentMultiline, nil},\n+\t\t\t\t{`/\\*`, CommentMultiline, Push()},\n+\t\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n+\t\t\t\t{`[*/]`, CommentMultiline, nil},\n+\t\t\t},\n+\t\t\t\"symbol\": {\n+\t\t\t\t{`\"`, LiteralStringSymbol, Pop(1)},\n+\t\t\t\t{`[^\\\\\"]+`, LiteralStringSymbol, nil},\n+\t\t\t},\n+\t\t\t\"string\": {\n+\t\t\t\t{`\"`, LiteralString, Pop(1)},\n+\t\t\t\t{`\\\\([\\\\abfnrtv\"\\']|x[a-f0-9]{2,4}|[0-7]{1,3})`, LiteralStringEscape, nil},\n+\t\t\t\t{`[^\\\\\"\\n]+`, LiteralString, nil},\n+\t\t\t\t{`\\\\\\n`, LiteralString, nil},\n+\t\t\t\t{`\\\\`, LiteralString, nil},\n+\t\t\t},\n+\t\t}\n+\t},\n+))"
    },
    {
      "sha": "5ccdd38ea3280b2ece8ee104f13b994eda78bd44",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/e/ebnf.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/e/ebnf.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/e/ebnf.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/e/ebnf.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Ebnf lexer.\n-var Ebnf = internal.Register(MustNewLexer(\n+var Ebnf = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"EBNF\",\n \t\tAliases:   []string{\"ebnf\"},\n \t\tFilenames: []string{\"*.ebnf\"},\n \t\tMimeTypes: []string{\"text/x-ebnf\"},\n \t},\n-\tRules{\n+\tebnfRules,\n+))\n+\n+func ebnfRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"whitespace\"),\n \t\t\tInclude(\"comment_start\"),\n@@ -47,5 +51,5 @@ var Ebnf = internal.Register(MustNewLexer(\n \t\t\"identifier\": {\n \t\t\t{`([a-zA-Z][\\w \\-]*)`, Keyword, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "f283f846bef0d73cc5317d7a8085d6e3c0625a84",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/e/elixir.go",
      "status": "modified",
      "additions": 15,
      "deletions": 4,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/e/elixir.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/e/elixir.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/e/elixir.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Elixir lexer.\n-var Elixir = internal.Register(MustNewLexer(\n+var Elixir = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Elixir\",\n \t\tAliases:   []string{\"elixir\", \"ex\", \"exs\"},\n \t\tFilenames: []string{\"*.ex\", \"*.exs\"},\n \t\tMimeTypes: []string{\"text/x-elixir\"},\n \t},\n-\tRules{\n+\telixirRules,\n+))\n+\n+func elixirRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`#.*$`, CommentSingle, nil},\n@@ -28,6 +32,13 @@ var Elixir = internal.Register(MustNewLexer(\n \t\t\t{`:\"`, LiteralStringSymbol, Push(\"string_double_atom\")},\n \t\t\t{`:'`, LiteralStringSymbol, Push(\"string_single_atom\")},\n \t\t\t{`((?:\\.\\.\\.|<<>>|%\\{\\}|%|\\{\\})|(?:(?:\\.\\.\\.|[a-z_]\\w*[!?]?)|[A-Z]\\w*(?:\\.[A-Z]\\w*)*|(?:\\<\\<\\<|\\>\\>\\>|\\|\\|\\||\\&\\&\\&|\\^\\^\\^|\\~\\~\\~|\\=\\=\\=|\\!\\=\\=|\\~\\>\\>|\\<\\~\\>|\\|\\~\\>|\\<\\|\\>|\\=\\=|\\!\\=|\\<\\=|\\>\\=|\\&\\&|\\|\\||\\<\\>|\\+\\+|\\-\\-|\\|\\>|\\=\\~|\\-\\>|\\<\\-|\\||\\.|\\=|\\~\\>|\\<\\~|\\<|\\>|\\+|\\-|\\*|\\/|\\!|\\^|\\&)))(:)(?=\\s|\\n)`, ByGroups(LiteralStringSymbol, Punctuation), nil},\n+\t\t\t{`(fn|do|end|after|else|rescue|catch)\\b`, Keyword, nil},\n+\t\t\t{`(not|and|or|when|in)\\b`, OperatorWord, nil},\n+\t\t\t{`(case|cond|for|if|unless|try|receive|raise|quote|unquote|unquote_splicing|throw|super|while)\\b`, Keyword, nil},\n+\t\t\t{`(def|defp|defmodule|defprotocol|defmacro|defmacrop|defdelegate|defexception|defstruct|defimpl|defcallback)\\b`, KeywordDeclaration, nil},\n+\t\t\t{`(import|require|use|alias)\\b`, KeywordNamespace, nil},\n+\t\t\t{`(nil|true|false)\\b`, NameConstant, nil},\n+\t\t\t{`(_|__MODULE__|__DIR__|__ENV__|__CALLER__)\\b`, NamePseudo, nil},\n \t\t\t{`@(?:\\.\\.\\.|[a-z_]\\w*[!?]?)`, NameAttribute, nil},\n \t\t\t{`(?:\\.\\.\\.|[a-z_]\\w*[!?]?)`, Name, nil},\n \t\t\t{`(%?)([A-Z]\\w*(?:\\.[A-Z]\\w*)*)`, ByGroups(Punctuation, NameClass), nil},\n@@ -266,5 +277,5 @@ var Elixir = internal.Register(MustNewLexer(\n \t\t\t{`\\\\.`, LiteralStringOther, nil},\n \t\t\t{`'[a-zA-Z]*`, LiteralStringOther, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "0fb6689537b664fe5b677d1961a97e47ac1fd6c7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/e/elm.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/e/elm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/e/elm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/e/elm.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Elm lexer.\n-var Elm = internal.Register(MustNewLexer(\n+var Elm = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Elm\",\n \t\tAliases:   []string{\"elm\"},\n \t\tFilenames: []string{\"*.elm\"},\n \t\tMimeTypes: []string{\"text/x-elm\"},\n \t},\n-\tRules{\n+\telmRules,\n+))\n+\n+func elmRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\{-`, CommentMultiline, Push(\"comment\")},\n \t\t\t{`--.*`, CommentSingle, nil},\n@@ -55,5 +59,5 @@ var Elm = internal.Register(MustNewLexer(\n \t\t\t{`\\|\\]`, NameEntity, Pop(1)},\n \t\t\t{`.*\\n`, NameEntity, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "51c49101dc4061959995c58e72b743212dffc719",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/e/emacs.go",
      "status": "modified",
      "additions": 14,
      "deletions": 10,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/e/emacs.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/e/emacs.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/e/emacs.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -522,14 +522,24 @@ var (\n )\n \n // EmacsLisp lexer.\n-var EmacsLisp = internal.Register(TypeRemappingLexer(MustNewLexer(\n+var EmacsLisp = internal.Register(TypeRemappingLexer(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"EmacsLisp\",\n \t\tAliases:   []string{\"emacs\", \"elisp\", \"emacs-lisp\"},\n \t\tFilenames: []string{\"*.el\"},\n \t\tMimeTypes: []string{\"text/x-elisp\", \"application/x-elisp\"},\n \t},\n-\tRules{\n+\temacsLispRules,\n+), TypeMapping{\n+\t{NameVariable, NameFunction, emacsBuiltinFunction},\n+\t{NameVariable, NameBuiltin, emacsSpecialForms},\n+\t{NameVariable, NameException, emacsErrorKeywords},\n+\t{NameVariable, NameBuiltin, append(emacsBuiltinFunctionHighlighted, emacsMacros...)},\n+\t{NameVariable, KeywordPseudo, emacsLambdaListKeywords},\n+}))\n+\n+func emacsLispRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tDefault(Push(\"body\")),\n \t\t},\n@@ -572,11 +582,5 @@ var EmacsLisp = internal.Register(TypeRemappingLexer(MustNewLexer(\n \t\t\t{`\\\\\\n`, LiteralString, nil},\n \t\t\t{`\"`, LiteralString, Pop(1)},\n \t\t},\n-\t},\n-), TypeMapping{\n-\t{NameVariable, NameFunction, emacsBuiltinFunction},\n-\t{NameVariable, NameBuiltin, emacsSpecialForms},\n-\t{NameVariable, NameException, emacsErrorKeywords},\n-\t{NameVariable, NameBuiltin, append(emacsBuiltinFunctionHighlighted, emacsMacros...)},\n-\t{NameVariable, KeywordPseudo, emacsLambdaListKeywords},\n-}))\n+\t}\n+}"
    },
    {
      "sha": "5f5c9caadc70295b828c01707619d4d08576857e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/e/erlang.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/e/erlang.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/e/erlang.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/e/erlang.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Erlang lexer.\n-var Erlang = internal.Register(MustNewLexer(\n+var Erlang = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Erlang\",\n \t\tAliases:   []string{\"erlang\"},\n \t\tFilenames: []string{\"*.erl\", \"*.hrl\", \"*.es\", \"*.escript\"},\n \t\tMimeTypes: []string{\"text/x-erlang\"},\n \t},\n-\tRules{\n+\terlangRules,\n+))\n+\n+func erlangRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`%.*\\n`, Comment, nil},\n@@ -62,5 +66,5 @@ var Erlang = internal.Register(MustNewLexer(\n \t\t\t{`,`, Punctuation, Pop(1)},\n \t\t\t{`(?=\\})`, Punctuation, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "d88beb231d17780a40be64403d9c5b242457284c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/f/factor.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/f/factor.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/f/factor.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/f/factor.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Factor lexer.\n-var Factor = internal.Register(MustNewLexer(\n+var Factor = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Factor\",\n \t\tAliases:   []string{\"factor\"},\n \t\tFilenames: []string{\"*.factor\"},\n \t\tMimeTypes: []string{\"text/x-factor\"},\n \t},\n-\tRules{\n+\tfactorRules,\n+))\n+\n+func factorRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`#!.*$`, CommentPreproc, nil},\n \t\t\tDefault(Push(\"base\")),\n@@ -111,5 +115,5 @@ var Factor = internal.Register(MustNewLexer(\n \t\t\t{`;\\s`, Keyword, Pop(1)},\n \t\t\t{`\\S+`, NameFunction, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "c35090000fa2d62f5bf9435f1c28a4ec00131b1e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/f/fish.go",
      "status": "modified",
      "additions": 44,
      "deletions": 11,
      "changes": 55,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/f/fish.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/f/fish.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/f/fish.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,43 +6,76 @@ import (\n )\n \n // Fish lexer.\n-var Fish = internal.Register(MustNewLexer(\n+var Fish = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Fish\",\n \t\tAliases:   []string{\"fish\", \"fishshell\"},\n \t\tFilenames: []string{\"*.fish\", \"*.load\"},\n \t\tMimeTypes: []string{\"application/x-fish\"},\n \t},\n-\tRules{\n+\tfishRules,\n+))\n+\n+func fishRules() Rules {\n+\tkeywords := []string{\n+\t\t`begin`, `end`, `if`, `else`, `while`, `break`, `for`, `return`, `function`, `block`,\n+\t\t`case`, `continue`, `switch`, `not`, `and`, `or`, `set`, `echo`, `exit`, `pwd`, `true`,\n+\t\t`false`, `cd`, `cdh`, `count`, `test`,\n+\t}\n+\tkeywordsPattern := Words(`\\b`, `\\b`, keywords...)\n+\n+\tbuiltins := []string{\n+\t\t`alias`, `bg`, `bind`, `breakpoint`, `builtin`, `argparse`, `abbr`, `string`, `command`,\n+\t\t`commandline`, `complete`, `contains`, `dirh`, `dirs`, `disown`, `emit`, `eval`, `exec`,\n+\t\t`fg`, `fish`, `fish_add_path`, `fish_breakpoint_prompt`, `fish_command_not_found`,\n+\t\t`fish_config`, `fish_git_prompt`, `fish_greeting`, `fish_hg_prompt`, `fish_indent`,\n+\t\t`fish_is_root_user`, `fish_key_reader`, `fish_mode_prompt`, `fish_opt`, `fish_pager`,\n+\t\t`fish_prompt`, `fish_right_prompt`, `fish_status_to_signal`, `fish_svn_prompt`,\n+\t\t`fish_title`, `fish_update_completions`, `fish_vcs_prompt`, `fishd`, `funced`,\n+\t\t`funcsave`, `functions`, `help`, `history`, `isatty`, `jobs`, `math`, `mimedb`, `nextd`,\n+\t\t`open`, `prompt_pwd`, `realpath`, `popd`, `prevd`, `psub`, `pushd`, `random`, `read`,\n+\t\t`set_color`, `source`, `status`, `suspend`, `trap`, `type`, `ulimit`, `umask`, `vared`,\n+\t\t`fc`, `getopts`, `hash`, `kill`, `printf`, `time`, `wait`,\n+\t}\n+\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"basic\"),\n-\t\t\tInclude(\"data\"),\n \t\t\tInclude(\"interp\"),\n+\t\t\tInclude(\"data\"),\n \t\t},\n \t\t\"interp\": {\n \t\t\t{`\\$\\(\\(`, Keyword, Push(\"math\")},\n \t\t\t{`\\(`, Keyword, Push(\"paren\")},\n \t\t\t{`\\$#?(\\w+|.)`, NameVariable, nil},\n \t\t},\n \t\t\"basic\": {\n-\t\t\t{`\\b(begin|end|if|else|while|break|for|in|return|function|block|case|continue|switch|not|and|or|set|echo|exit|pwd|true|false|cd|count|test)(\\s*)\\b`, ByGroups(Keyword, Text), nil},\n-\t\t\t{`\\b(alias|bg|bind|breakpoint|builtin|command|commandline|complete|contains|dirh|dirs|emit|eval|exec|fg|fish|fish_config|fish_indent|fish_pager|fish_prompt|fish_right_prompt|fish_update_completions|fishd|funced|funcsave|functions|help|history|isatty|jobs|math|mimedb|nextd|open|popd|prevd|psub|pushd|random|read|set_color|source|status|trap|type|ulimit|umask|vared|fc|getopts|hash|kill|printf|time|wait)\\s*\\b(?!\\.)`, NameBuiltin, nil},\n+\t\t\t{Words(`(?<=(?:^|\\A|;|&&|\\|\\||\\||`+keywordsPattern+`)\\s*)`, `(?=;?\\b)`, keywords...), Keyword, nil},\n+\t\t\t{`(?<=for\\s+\\S+\\s+)in\\b`, Keyword, nil},\n+\t\t\t{Words(`\\b`, `\\s*\\b(?!\\.)`, builtins...), NameBuiltin, nil},\n+\t\t\t{`#!.*\\n`, CommentHashbang, nil},\n \t\t\t{`#.*\\n`, Comment, nil},\n \t\t\t{`\\\\[\\w\\W]`, LiteralStringEscape, nil},\n \t\t\t{`(\\b\\w+)(\\s*)(=)`, ByGroups(NameVariable, Text, Operator), nil},\n-\t\t\t{`[\\[\\]()=]`, Operator, nil},\n+\t\t\t{`[\\[\\]()={}]`, Operator, nil},\n+\t\t\t{`(?<=\\[[^\\]]+)\\.\\.|-(?=[^\\[]+\\])`, Operator, nil},\n \t\t\t{`<<-?\\s*(\\'?)\\\\?(\\w+)[\\w\\W]+?\\2`, LiteralString, nil},\n+\t\t\t{`(?<=set\\s+(?:--?[^\\d\\W][\\w-]*\\s+)?)\\w+`, NameVariable, nil},\n+\t\t\t{`(?<=for\\s+)\\w[\\w-]*(?=\\s+in)`, NameVariable, nil},\n+\t\t\t{`(?<=function\\s+)\\w(?:[^\\n])*?(?= *[-\\n])`, NameFunction, nil},\n+\t\t\t{`(?<=(?:^|\\b(?:and|or|sudo)\\b|;|\\|\\||&&|\\||\\(|(?:\\b\\w+\\s*=\\S+\\s)) *)\\w[\\w-]*`, NameFunction, nil},\n \t\t},\n \t\t\"data\": {\n \t\t\t{`(?s)\\$?\"(\\\\\\\\|\\\\[0-7]+|\\\\.|[^\"\\\\$])*\"`, LiteralStringDouble, nil},\n \t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n \t\t\t{`(?s)\\$'(\\\\\\\\|\\\\[0-7]+|\\\\.|[^'\\\\])*'`, LiteralStringSingle, nil},\n \t\t\t{`(?s)'.*?'`, LiteralStringSingle, nil},\n \t\t\t{`;`, Punctuation, nil},\n-\t\t\t{`&|\\||\\^|<|>`, Operator, nil},\n+\t\t\t{`&&|\\|\\||&|\\||\\^|<|>`, Operator, nil},\n \t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\d+(?= |\\Z)`, LiteralNumber, nil},\n-\t\t\t{\"[^=\\\\s\\\\[\\\\]{}()$\\\"\\\\'`\\\\\\\\<&|;]+\", Text, nil},\n+\t\t\t{`\\b\\d+\\b`, LiteralNumber, nil},\n+\t\t\t{`--?[^\\d][\\w-]*`, NameAttribute, nil},\n+\t\t\t{\".+?\", Text, nil},\n \t\t},\n \t\t\"string\": {\n \t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n@@ -61,5 +94,5 @@ var Fish = internal.Register(MustNewLexer(\n \t\t\t{`\\d+`, LiteralNumber, nil},\n \t\t\tInclude(\"root\"),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "8d66708dccf4565dc93025c3f1237daca855b3e7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/f/forth.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/f/forth.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/f/forth.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/f/forth.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Forth lexer.\n-var Forth = internal.Register(MustNewLexer(\n+var Forth = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"Forth\",\n \t\tAliases:         []string{\"forth\"},\n \t\tFilenames:       []string{\"*.frt\", \"*.fth\", \"*.fs\"},\n \t\tMimeTypes:       []string{\"application/x-forth\"},\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tforthRules,\n+))\n+\n+func forthRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`\\\\.*?\\n`, CommentSingle, nil},\n@@ -36,5 +40,5 @@ var Forth = internal.Register(MustNewLexer(\n \t\t\"stringdef\": {\n \t\t\t{`[^\"]+`, LiteralString, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "af4a969ceec821a167e4ae69c6b614dd00106ce4",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/f/fortran.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/f/fortran.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/f/fortran.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/f/fortran.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Fortran lexer.\n-var Fortran = internal.Register(MustNewLexer(\n+var Fortran = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"Fortran\",\n \t\tAliases:         []string{\"fortran\"},\n \t\tFilenames:       []string{\"*.f03\", \"*.f90\", \"*.F03\", \"*.F90\"},\n \t\tMimeTypes:       []string{\"text/x-fortran\"},\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tfortranRules,\n+))\n+\n+func fortranRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`^#.*\\n`, CommentPreproc, nil},\n \t\t\t{`!.*\\n`, Comment, nil},\n@@ -43,5 +47,5 @@ var Fortran = internal.Register(MustNewLexer(\n \t\t\t{`[+-]?\\d*\\.\\d+([ed][-+]?\\d+)?(_[a-z]\\w+)?`, LiteralNumberFloat, nil},\n \t\t\t{`[+-]?\\d+\\.\\d*([ed][-+]?\\d+)?(_[a-z]\\w+)?`, LiteralNumberFloat, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "7c646386dce17759873db97c0465af4271593ed9",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/f/fortran_fixed.go",
      "status": "added",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/f/fortran_fixed.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/f/fortran_fixed.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/f/fortran_fixed.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,39 @@\n+package f\n+\n+import (\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+)\n+\n+// FortranFixed lexer.\n+var FortranFixed = internal.Register(MustNewLazyLexer(\n+\t&Config{\n+\t\tName:            \"FortranFixed\",\n+\t\tAliases:         []string{\"fortranfixed\"},\n+\t\tFilenames:       []string{\"*.f\", \"*.F\"},\n+\t\tMimeTypes:       []string{\"text/x-fortran\"},\n+\t\tNotMultiline:    true,\n+\t\tCaseInsensitive: true,\n+\t},\n+\tfunc() Rules {\n+\t\treturn Rules{\n+\t\t\t\"root\": {\n+\t\t\t\t{`[C*].*\\n`, Comment, nil},\n+\t\t\t\t{`#.*\\n`, CommentPreproc, nil},\n+\t\t\t\t{`[\\t ]*!.*\\n`, Comment, nil},\n+\t\t\t\t{`(.{5})`, NameLabel, Push(\"cont-char\")},\n+\t\t\t\t{`.*\\n`, Using(Fortran), nil},\n+\t\t\t},\n+\t\t\t\"cont-char\": {\n+\t\t\t\t{` `, Text, Push(\"code\")},\n+\t\t\t\t{`0`, Comment, Push(\"code\")},\n+\t\t\t\t{`.`, GenericStrong, Push(\"code\")},\n+\t\t\t},\n+\t\t\t\"code\": {\n+\t\t\t\t{`(.{66})(.*)(\\n)`, ByGroups(Using(Fortran), Comment, Text), Push(\"root\")},\n+\t\t\t\t{`.*\\n`, Using(Fortran), Push(\"root\")},\n+\t\t\t\tDefault(Push(\"root\")),\n+\t\t\t},\n+\t\t}\n+\t},\n+))"
    },
    {
      "sha": "44fced4d5b372a450ba8db656617a2a38808f39c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/f/fsharp.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/f/fsharp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/f/fsharp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/f/fsharp.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Fsharp lexer.\n-var Fsharp = internal.Register(MustNewLexer(\n+var Fsharp = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"FSharp\",\n \t\tAliases:   []string{\"fsharp\"},\n \t\tFilenames: []string{\"*.fs\", \"*.fsi\"},\n \t\tMimeTypes: []string{\"text/x-fsharp\"},\n \t},\n-\tRules{\n+\tfsharpRules,\n+))\n+\n+func fsharpRules() Rules {\n+\treturn Rules{\n \t\t\"escape-sequence\": {\n \t\t\t{`\\\\[\\\\\"\\'ntbrafv]`, LiteralStringEscape, nil},\n \t\t\t{`\\\\[0-9]{3}`, LiteralStringEscape, nil},\n@@ -90,5 +94,5 @@ var Fsharp = internal.Register(MustNewLexer(\n \t\t\t{`\"\"\"B?`, LiteralString, Pop(1)},\n \t\t\t{`\"`, LiteralString, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "1f733f6ac17a7ef8f5029ae1bf99dd911995cc81",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/g/gas.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/gas.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/gas.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/g/gas.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Gas lexer.\n-var Gas = internal.Register(MustNewLexer(\n+var Gas = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"GAS\",\n \t\tAliases:   []string{\"gas\", \"asm\"},\n \t\tFilenames: []string{\"*.s\", \"*.S\"},\n \t\tMimeTypes: []string{\"text/x-gas\"},\n \t},\n-\tRules{\n+\tgasRules,\n+))\n+\n+func gasRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"whitespace\"),\n \t\t\t{`(?:[a-zA-Z$_][\\w$.@-]*|\\.[\\w$.@-]+):`, NameLabel, nil},\n@@ -51,5 +55,5 @@ var Gas = internal.Register(MustNewLexer(\n \t\t\"punctuation\": {\n \t\t\t{`[-*,.()\\[\\]!:]+`, Punctuation, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "2b6af973fbee4fce522b11f4b6f033f5fcd47d0a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/g/gdscript.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/gdscript.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/gdscript.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/g/gdscript.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // GDScript lexer.\n-var GDScript = internal.Register(MustNewLexer(\n+var GDScript = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"GDScript\",\n \t\tAliases:   []string{\"gdscript\", \"gd\"},\n \t\tFilenames: []string{\"*.gd\"},\n \t\tMimeTypes: []string{\"text/x-gdscript\", \"application/x-gdscript\"},\n \t},\n-\tRules{\n+\tgdscriptRules,\n+))\n+\n+func gdscriptRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\n`, Text, nil},\n \t\t\t{`^(\\s*)([rRuUbB]{,2})(\"\"\"(?:.|\\n)*?\"\"\")`, ByGroups(Text, LiteralStringAffix, LiteralStringDoc), nil},\n@@ -120,5 +124,5 @@ var GDScript = internal.Register(MustNewLexer(\n \t\t\tInclude(\"strings-single\"),\n \t\t\t{`\\n`, LiteralStringSingle, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "dc4d4b17ded75b96a5baed3c84b6b791167999a8",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/g/genshi.go",
      "status": "modified",
      "additions": 61,
      "deletions": 55,
      "changes": 116,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/genshi.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/genshi.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/g/genshi.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -7,14 +7,18 @@ import (\n )\n \n // Genshi Text lexer.\n-var GenshiText = internal.Register(MustNewLexer(\n+var GenshiText = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Genshi Text\",\n \t\tAliases:   []string{\"genshitext\"},\n \t\tFilenames: []string{},\n \t\tMimeTypes: []string{\"application/x-genshi-text\", \"text/x-genshi\"},\n \t},\n-\tRules{\n+\tgenshiTextRules,\n+))\n+\n+func genshiTextRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[^#$\\s]+`, Other, nil},\n \t\t\t{`^(\\s*)(##.*)$`, ByGroups(Text, Comment), nil},\n@@ -33,11 +37,11 @@ var GenshiText = internal.Register(MustNewLexer(\n \t\t\t{`(?<!\\$)(\\$\\{)(.+?)(\\})`, ByGroups(CommentPreproc, Using(Python), CommentPreproc), nil},\n \t\t\t{`(?<!\\$)(\\$)([a-zA-Z_][\\w.]*)`, NameVariable, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}\n \n // Html+Genshi lexer.\n-var GenshiHTMLTemplate = internal.Register(MustNewLexer(\n+var GenshiHTMLTemplate = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:         \"Genshi HTML\",\n \t\tAliases:      []string{\"html+genshi\", \"html+kid\"},\n@@ -50,7 +54,7 @@ var GenshiHTMLTemplate = internal.Register(MustNewLexer(\n ))\n \n // Genshi lexer.\n-var Genshi = internal.Register(MustNewLexer(\n+var Genshi = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:         \"Genshi\",\n \t\tAliases:      []string{\"genshi\", \"kid\", \"xml+genshi\", \"xml+kid\"},\n@@ -62,53 +66,55 @@ var Genshi = internal.Register(MustNewLexer(\n \tgenshiMarkupRules,\n ))\n \n-var genshiMarkupRules = Rules{\n-\t\"root\": {\n-\t\t{`[^<$]+`, Other, nil},\n-\t\t{`(<\\?python)(.*?)(\\?>)`, ByGroups(CommentPreproc, Using(Python), CommentPreproc), nil},\n-\t\t{`<\\s*(script|style)\\s*.*?>.*?<\\s*/\\1\\s*>`, Other, nil},\n-\t\t{`<\\s*py:[a-zA-Z0-9]+`, NameTag, Push(\"pytag\")},\n-\t\t{`<\\s*[a-zA-Z0-9:.]+`, NameTag, Push(\"tag\")},\n-\t\tInclude(\"variable\"),\n-\t\t{`[<$]`, Other, nil},\n-\t},\n-\t\"pytag\": {\n-\t\t{`\\s+`, Text, nil},\n-\t\t{`[\\w:-]+\\s*=`, NameAttribute, Push(\"pyattr\")},\n-\t\t{`/?\\s*>`, NameTag, Pop(1)},\n-\t},\n-\t\"pyattr\": {\n-\t\t{`(\")(.*?)(\")`, ByGroups(LiteralString, Using(Python), LiteralString), Pop(1)},\n-\t\t{`(')(.*?)(')`, ByGroups(LiteralString, Using(Python), LiteralString), Pop(1)},\n-\t\t{`[^\\s>]+`, LiteralString, Pop(1)},\n-\t},\n-\t\"tag\": {\n-\t\t{`\\s+`, Text, nil},\n-\t\t{`py:[\\w-]+\\s*=`, NameAttribute, Push(\"pyattr\")},\n-\t\t{`[\\w:-]+\\s*=`, NameAttribute, Push(\"attr\")},\n-\t\t{`/?\\s*>`, NameTag, Pop(1)},\n-\t},\n-\t\"attr\": {\n-\t\t{`\"`, LiteralString, Push(\"attr-dstring\")},\n-\t\t{`'`, LiteralString, Push(\"attr-sstring\")},\n-\t\t{`[^\\s>]*`, LiteralString, Pop(1)},\n-\t},\n-\t\"attr-dstring\": {\n-\t\t{`\"`, LiteralString, Pop(1)},\n-\t\tInclude(\"strings\"),\n-\t\t{`'`, LiteralString, nil},\n-\t},\n-\t\"attr-sstring\": {\n-\t\t{`'`, LiteralString, Pop(1)},\n-\t\tInclude(\"strings\"),\n-\t\t{`'`, LiteralString, nil},\n-\t},\n-\t\"strings\": {\n-\t\t{`[^\"'$]+`, LiteralString, nil},\n-\t\tInclude(\"variable\"),\n-\t},\n-\t\"variable\": {\n-\t\t{`(?<!\\$)(\\$\\{)(.+?)(\\})`, ByGroups(CommentPreproc, Using(Python), CommentPreproc), nil},\n-\t\t{`(?<!\\$)(\\$)([a-zA-Z_][\\w\\.]*)`, NameVariable, nil},\n-\t},\n+func genshiMarkupRules() Rules {\n+\treturn Rules{\n+\t\t\"root\": {\n+\t\t\t{`[^<$]+`, Other, nil},\n+\t\t\t{`(<\\?python)(.*?)(\\?>)`, ByGroups(CommentPreproc, Using(Python), CommentPreproc), nil},\n+\t\t\t{`<\\s*(script|style)\\s*.*?>.*?<\\s*/\\1\\s*>`, Other, nil},\n+\t\t\t{`<\\s*py:[a-zA-Z0-9]+`, NameTag, Push(\"pytag\")},\n+\t\t\t{`<\\s*[a-zA-Z0-9:.]+`, NameTag, Push(\"tag\")},\n+\t\t\tInclude(\"variable\"),\n+\t\t\t{`[<$]`, Other, nil},\n+\t\t},\n+\t\t\"pytag\": {\n+\t\t\t{`\\s+`, Text, nil},\n+\t\t\t{`[\\w:-]+\\s*=`, NameAttribute, Push(\"pyattr\")},\n+\t\t\t{`/?\\s*>`, NameTag, Pop(1)},\n+\t\t},\n+\t\t\"pyattr\": {\n+\t\t\t{`(\")(.*?)(\")`, ByGroups(LiteralString, Using(Python), LiteralString), Pop(1)},\n+\t\t\t{`(')(.*?)(')`, ByGroups(LiteralString, Using(Python), LiteralString), Pop(1)},\n+\t\t\t{`[^\\s>]+`, LiteralString, Pop(1)},\n+\t\t},\n+\t\t\"tag\": {\n+\t\t\t{`\\s+`, Text, nil},\n+\t\t\t{`py:[\\w-]+\\s*=`, NameAttribute, Push(\"pyattr\")},\n+\t\t\t{`[\\w:-]+\\s*=`, NameAttribute, Push(\"attr\")},\n+\t\t\t{`/?\\s*>`, NameTag, Pop(1)},\n+\t\t},\n+\t\t\"attr\": {\n+\t\t\t{`\"`, LiteralString, Push(\"attr-dstring\")},\n+\t\t\t{`'`, LiteralString, Push(\"attr-sstring\")},\n+\t\t\t{`[^\\s>]*`, LiteralString, Pop(1)},\n+\t\t},\n+\t\t\"attr-dstring\": {\n+\t\t\t{`\"`, LiteralString, Pop(1)},\n+\t\t\tInclude(\"strings\"),\n+\t\t\t{`'`, LiteralString, nil},\n+\t\t},\n+\t\t\"attr-sstring\": {\n+\t\t\t{`'`, LiteralString, Pop(1)},\n+\t\t\tInclude(\"strings\"),\n+\t\t\t{`'`, LiteralString, nil},\n+\t\t},\n+\t\t\"strings\": {\n+\t\t\t{`[^\"'$]+`, LiteralString, nil},\n+\t\t\tInclude(\"variable\"),\n+\t\t},\n+\t\t\"variable\": {\n+\t\t\t{`(?<!\\$)(\\$\\{)(.+?)(\\})`, ByGroups(CommentPreproc, Using(Python), CommentPreproc), nil},\n+\t\t\t{`(?<!\\$)(\\$)([a-zA-Z_][\\w\\.]*)`, NameVariable, nil},\n+\t\t},\n+\t}\n }"
    },
    {
      "sha": "8ae45dcb606e7f50697147e0db535d26138490ad",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/g/gherkin.go",
      "status": "added",
      "additions": 122,
      "deletions": 0,
      "changes": 122,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/gherkin.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/gherkin.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/g/gherkin.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,122 @@\n+package g\n+\n+import (\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+)\n+\n+// Gherkin lexer.\n+var Gherkin = internal.Register(MustNewLazyLexer(\n+\t&Config{\n+\t\tName:      \"Gherkin\",\n+\t\tAliases:   []string{\"cucumber\", \"Cucumber\", \"gherkin\", \"Gherkin\"},\n+\t\tFilenames: []string{\"*.feature\", \"*.FEATURE\"},\n+\t\tMimeTypes: []string{\"text/x-gherkin\"},\n+\t},\n+\tgherkinRules,\n+))\n+\n+func gherkinRules() Rules {\n+\tstepKeywords := `^(\\s*)(하지만|조건|먼저|만일|만약|단|그리고|그러면|那麼|那么|而且|當|当|前提|假設|假设|假如|假定|但是|但し|並且|并且|同時|同时|もし|ならば|ただし|しかし|かつ|و |متى |لكن |عندما |ثم |بفرض |اذاً |כאשר |וגם |בהינתן |אזי |אז |אבל |Якщо |Унда |То |Припустимо, що |Припустимо |Онда |Но |Нехай |Лекин |Когато |Када |Кад |К тому же |И |Задато |Задати |Задате |Если |Допустим |Дадено |Ва |Бирок |Аммо |Али |Але |Агар |А |І |Și |És |Zatati |Zakładając |Zadato |Zadate |Zadano |Zadani |Zadan |Youse know when youse got |Youse know like when |Yna |Ya know how |Ya gotta |Y |Wun |Wtedy |When y'all |When |Wenn |WEN |Và |Ve |Und |Un |Thì |Then y'all |Then |Tapi |Tak |Tada |Tad |Så |Stel |Soit |Siis |Si |Sed |Se |Quando |Quand |Quan |Pryd |Pokud |Pokiaľ |Però |Pero |Pak |Oraz |Onda |Ond |Oletetaan |Og |Och |O zaman |Når |När |Niin |Nhưng |N |Mutta |Men |Mas |Maka |Majd |Mais |Maar |Ma |Lorsque |Lorsqu'|Kun |Kuid |Kui |Khi |Keď |Ketika |Když |Kaj |Kai |Kada |Kad |Jeżeli |Ja |Ir |I CAN HAZ |I |Ha |Givun |Givet |Given y'all |Given |Gitt |Gegeven |Gegeben sei |Fakat |Eğer ki |Etant donné |Et |Então |Entonces |Entao |En |Eeldades |E |Duota |Dun |Donitaĵo |Donat |Donada |Do |Diyelim ki |Dengan |Den youse gotta |De |Dato |Dar |Dann |Dan |Dado |Dacă |Daca |DEN |Când |Cuando |Cho |Cept |Cand |Cal |But y'all |But |Buh |Biết |Bet |BUT |Atès |Atunci |Atesa |Anrhegedig a |Angenommen |And y'all |And |An |Ama |Als |Alors |Allora |Ali |Aleshores |Ale |Akkor |Aber |AN |A také |A |\\* )`\n+\n+\tfeatureKeywords := `^(기능|機能|功能|フィーチャ|خاصية|תכונה|Функціонал|Функционалност|Функционал|Фича|Особина|Могућност|Özellik|Właściwość|Tính năng|Trajto|Savybė|Požiadavka|Požadavek|Osobina|Ominaisuus|Omadus|OH HAI|Mogućnost|Mogucnost|Jellemző|Fīča|Funzionalità|Funktionalität|Funkcionalnost|Funkcionalitāte|Funcționalitate|Functionaliteit|Functionalitate|Funcionalitat|Funcionalidade|Fonctionnalité|Fitur|Feature|Egenskap|Egenskab|Crikey|Característica|Arwedd)(:)(.*)$`\n+\n+\tfeatureElementKeywords := `^(\\s*)(시나리오 개요|시나리오|배경|背景|場景大綱|場景|场景大纲|场景|劇本大綱|劇本|剧本大纲|剧本|テンプレ|シナリオテンプレート|シナリオテンプレ|シナリオアウトライン|シナリオ|سيناريو مخطط|سيناريو|الخلفية|תרחיש|תבנית תרחיש|רקע|Тарих|Сценарій|Сценарио|Сценарий структураси|Сценарий|Структура сценарію|Структура сценарија|Структура сценария|Скица|Рамка на сценарий|Пример|Предыстория|Предистория|Позадина|Передумова|Основа|Концепт|Контекст|Założenia|Wharrimean is|Tình huống|The thing of it is|Tausta|Taust|Tapausaihio|Tapaus|Szenariogrundriss|Szenario|Szablon scenariusza|Stsenaarium|Struktura scenarija|Skica|Skenario konsep|Skenario|Situācija|Senaryo taslağı|Senaryo|Scénář|Scénario|Schema dello scenario|Scenārijs pēc parauga|Scenārijs|Scenár|Scenaro|Scenariusz|Scenariul de şablon|Scenariul de sablon|Scenariu|Scenario Outline|Scenario Amlinellol|Scenario|Scenarijus|Scenarijaus šablonas|Scenarij|Scenarie|Rerefons|Raamstsenaarium|Primer|Pozadí|Pozadina|Pozadie|Plan du scénario|Plan du Scénario|Osnova scénáře|Osnova|Náčrt Scénáře|Náčrt Scenáru|Mate|MISHUN SRSLY|MISHUN|Kịch bản|Konturo de la scenaro|Kontext|Konteksts|Kontekstas|Kontekst|Koncept|Khung tình huống|Khung kịch bản|Háttér|Grundlage|Geçmiş|Forgatókönyv vázlat|Forgatókönyv|Fono|Esquema do Cenário|Esquema do Cenario|Esquema del escenario|Esquema de l'escenari|Escenario|Escenari|Dis is what went down|Dasar|Contexto|Contexte|Contesto|Condiţii|Conditii|Cenário|Cenario|Cefndir|Bối cảnh|Blokes|Bakgrunn|Bakgrund|Baggrund|Background|B4|Antecedents|Antecedentes|All y'all|Achtergrond|Abstrakt Scenario|Abstract Scenario)(:)(.*)$`\n+\n+\texamplesKeywords := `^(\\s*)(예|例子|例|サンプル|امثلة|דוגמאות|Сценарији|Примери|Приклади|Мисоллар|Значения|Örnekler|Voorbeelden|Variantai|Tapaukset|Scenarios|Scenariji|Scenarijai|Příklady|Példák|Príklady|Przykłady|Primjeri|Primeri|Piemēri|Pavyzdžiai|Paraugs|Juhtumid|Exemplos|Exemples|Exemplele|Exempel|Examples|Esempi|Enghreifftiau|Ekzemploj|Eksempler|Ejemplos|EXAMPLZ|Dữ liệu|Contoh|Cobber|Beispiele)(:)(.*)$`\n+\n+\treturn Rules{\n+\t\t\"comments\": {\n+\t\t\t{`\\s*#.*$`, Comment, nil},\n+\t\t},\n+\t\t\"featureElements\": {\n+\t\t\t{stepKeywords, Keyword, Push(\"stepContentStack\")},\n+\t\t\tInclude(\"comments\"),\n+\t\t\t{`(\\s|.)`, NameFunction, nil},\n+\t\t},\n+\t\t\"featureElementsOnStack\": {\n+\t\t\t{stepKeywords, Keyword, Pop(2)},\n+\t\t\tInclude(\"comments\"),\n+\t\t\t{`(\\s|.)`, NameFunction, nil},\n+\t\t},\n+\t\t\"examplesTable\": {\n+\t\t\t{`\\s+\\|`, Keyword, Push(\"examplesTableHeader\")},\n+\t\t\tInclude(\"comments\"),\n+\t\t\t{`(\\s|.)`, NameFunction, nil},\n+\t\t},\n+\t\t\"examplesTableHeader\": {\n+\t\t\t{`\\s+\\|\\s*$`, Keyword, Pop(2)},\n+\t\t\tInclude(\"comments\"),\n+\t\t\t{`\\\\\\|`, NameVariable, nil},\n+\t\t\t{`\\s*\\|`, Keyword, nil},\n+\t\t\t{`[^|]`, NameVariable, nil},\n+\t\t},\n+\t\t\"scenarioSectionsOnStack\": {\n+\t\t\t{featureElementKeywords, ByGroups(NameFunction, Keyword, Keyword, NameFunction), Push(\"featureElementsOnStack\")},\n+\t\t},\n+\t\t\"narrative\": {\n+\t\t\tInclude(\"scenarioSectionsOnStack\"),\n+\t\t\t{`(\\s|.)`, NameFunction, nil},\n+\t\t},\n+\t\t\"tableVars\": {\n+\t\t\t{`(<[^>]+>)`, NameVariable, nil},\n+\t\t},\n+\t\t\"numbers\": {\n+\t\t\t{`(\\d+\\.?\\d*|\\d*\\.\\d+)([eE][+-]?[0-9]+)?`, LiteralString, nil},\n+\t\t},\n+\t\t\"string\": {\n+\t\t\tInclude(\"tableVars\"),\n+\t\t\t{`(\\s|.)`, LiteralString, nil},\n+\t\t},\n+\t\t\"pyString\": {\n+\t\t\t{`\"\"\"`, Keyword, Pop(1)},\n+\t\t\tInclude(\"string\"),\n+\t\t},\n+\t\t\"stepContentRoot\": {\n+\t\t\t{`$`, Keyword, Pop(1)},\n+\t\t\tInclude(\"stepContent\"),\n+\t\t},\n+\t\t\"stepContentStack\": {\n+\t\t\t{`$`, Keyword, Pop(2)},\n+\t\t\tInclude(\"stepContent\"),\n+\t\t},\n+\t\t\"stepContent\": {\n+\t\t\t{`\"`, NameFunction, Push(\"doubleString\")},\n+\t\t\tInclude(\"tableVars\"),\n+\t\t\tInclude(\"numbers\"),\n+\t\t\tInclude(\"comments\"),\n+\t\t\t{`(\\s|.)`, NameFunction, nil},\n+\t\t},\n+\t\t\"tableContent\": {\n+\t\t\t{`\\s+\\|\\s*$`, Keyword, Pop(1)},\n+\t\t\tInclude(\"comments\"),\n+\t\t\t{`\\\\\\|`, LiteralString, nil},\n+\t\t\t{`\\s*\\|`, Keyword, nil},\n+\t\t\t{`\"`, LiteralString, Push(\"doubleStringTable\")},\n+\t\t\tInclude(\"string\"),\n+\t\t},\n+\t\t\"doubleString\": {\n+\t\t\t{`\"`, NameFunction, Pop(1)},\n+\t\t\tInclude(\"string\"),\n+\t\t},\n+\t\t\"doubleStringTable\": {\n+\t\t\t{`\"`, LiteralString, Pop(1)},\n+\t\t\tInclude(\"string\"),\n+\t\t},\n+\t\t\"root\": {\n+\t\t\t{`\\n`, NameFunction, nil},\n+\t\t\tInclude(\"comments\"),\n+\t\t\t{`\"\"\"`, Keyword, Push(\"pyString\")},\n+\t\t\t{`\\s+\\|`, Keyword, Push(\"tableContent\")},\n+\t\t\t{`\"`, NameFunction, Push(\"doubleString\")},\n+\t\t\tInclude(\"tableVars\"),\n+\t\t\tInclude(\"numbers\"),\n+\t\t\t{`(\\s*)(@[^@\\r\\n\\t ]+)`, ByGroups(NameFunction, NameTag), nil},\n+\t\t\t{stepKeywords, ByGroups(NameFunction, Keyword), Push(\"stepContentRoot\")},\n+\t\t\t{featureKeywords, ByGroups(Keyword, Keyword, NameFunction), Push(\"narrative\")},\n+\t\t\t{featureElementKeywords, ByGroups(NameFunction, Keyword, Keyword, NameFunction), Push(\"featureElements\")},\n+\t\t\t{examplesKeywords, ByGroups(NameFunction, Keyword, Keyword, NameFunction), Push(\"examplesTable\")},\n+\t\t\t{`(\\s|.)`, NameFunction, nil},\n+\t\t},\n+\t}\n+}"
    },
    {
      "sha": "14aa58db3d9ee77d9e79af993f7b8175527636cf",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/g/glsl.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/glsl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/glsl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/g/glsl.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // GLSL lexer.\n-var GLSL = internal.Register(MustNewLexer(\n+var GLSL = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"GLSL\",\n \t\tAliases:   []string{\"glsl\"},\n \t\tFilenames: []string{\"*.vert\", \"*.frag\", \"*.geo\"},\n \t\tMimeTypes: []string{\"text/x-glslsrc\"},\n \t},\n-\tRules{\n+\tglslRules,\n+))\n+\n+func glslRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`^#.*`, CommentPreproc, nil},\n \t\t\t{`//.*`, CommentSingle, nil},\n@@ -33,5 +37,5 @@ var GLSL = internal.Register(MustNewLexer(\n \t\t\t{`\\.`, Punctuation, nil},\n \t\t\t{`\\s+`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "a7a25094188d80d64f0e7109a53f0a00f3c33f80",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/g/gnuplot.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/gnuplot.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/gnuplot.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/g/gnuplot.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Gnuplot lexer.\n-var Gnuplot = internal.Register(MustNewLexer(\n+var Gnuplot = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Gnuplot\",\n \t\tAliases:   []string{\"gnuplot\"},\n \t\tFilenames: []string{\"*.plot\", \"*.plt\"},\n \t\tMimeTypes: []string{\"text/x-gnuplot\"},\n \t},\n-\tRules{\n+\tgnuplotRules,\n+))\n+\n+func gnuplotRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"whitespace\"),\n \t\t\t{`bind\\b|bin\\b|bi\\b`, Keyword, Push(\"bind\")},\n@@ -113,5 +117,5 @@ var Gnuplot = internal.Register(MustNewLexer(\n \t\t\t{`functions\\b|function\\b|functio\\b|functi\\b|funct\\b|func\\b|fun\\b|fu\\b|f\\b|set\\b|se\\b|s\\b|terminal\\b|termina\\b|termin\\b|termi\\b|term\\b|ter\\b|te\\b|t\\b|variables\\b|variable\\b|variabl\\b|variab\\b|varia\\b|vari\\b|var\\b|va\\b|v\\b`, NameBuiltin, nil},\n \t\t\tInclude(\"genericargs\"),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "a927b5e099ef660f5336cd7d091484d63028dc93",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/g/go.go",
      "status": "modified",
      "additions": 60,
      "deletions": 53,
      "changes": 113,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/go.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/go.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/g/go.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -9,14 +9,27 @@ import (\n )\n \n // Go lexer.\n-var Go = internal.Register(MustNewLexer(\n+var Go = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Go\",\n \t\tAliases:   []string{\"go\", \"golang\"},\n \t\tFilenames: []string{\"*.go\"},\n \t\tMimeTypes: []string{\"text/x-gosrc\"},\n+\t\tEnsureNL:  true,\n \t},\n-\tRules{\n+\tgoRules,\n+).SetAnalyser(func(text string) float32 {\n+\tif strings.Contains(text, \"fmt.\") && strings.Contains(text, \"package \") {\n+\t\treturn 0.5\n+\t}\n+\tif strings.Contains(text, \"package \") {\n+\t\treturn 0.1\n+\t}\n+\treturn 0.0\n+}))\n+\n+func goRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\n`, Text, nil},\n \t\t\t{`\\s+`, Text, nil},\n@@ -36,8 +49,8 @@ var Go = internal.Register(MustNewLexer(\n \t\t\t{`\\d+(\\.\\d+[eE][+\\-]?\\d+|\\.\\d*|[eE][+\\-]?\\d+)`, LiteralNumberFloat, nil},\n \t\t\t{`\\.\\d+([eE][+\\-]?\\d+)?`, LiteralNumberFloat, nil},\n \t\t\t{`0[0-7]+`, LiteralNumberOct, nil},\n-\t\t\t{`0[xX][0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`(0|[1-9][0-9]*)`, LiteralNumberInteger, nil},\n+\t\t\t{`0[xX][0-9a-fA-F_]+`, LiteralNumberHex, nil},\n+\t\t\t{`(0|[1-9][0-9_]*)`, LiteralNumberInteger, nil},\n \t\t\t{`'(\\\\['\"\\\\abfnrtv]|\\\\x[0-9a-fA-F]{2}|\\\\[0-7]{1,3}|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}|[^\\\\])'`, LiteralStringChar, nil},\n \t\t\t{\"(`)([^`]*)(`)\", ByGroups(LiteralString, Using(TypeRemappingLexer(GoTextTemplate, TypeMapping{{Other, LiteralString, nil}})), LiteralString), nil},\n \t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n@@ -46,66 +59,60 @@ var Go = internal.Register(MustNewLexer(\n \t\t\t{`[|^<>=!()\\[\\]{}.,;:]`, Punctuation, nil},\n \t\t\t{`[^\\W\\d]\\w*`, NameOther, nil},\n \t\t},\n-\t},\n-).SetAnalyser(func(text string) float32 {\n-\tif strings.Contains(text, \"fmt.\") && strings.Contains(text, \"package \") {\n-\t\treturn 0.5\n-\t}\n-\tif strings.Contains(text, \"package \") {\n-\t\treturn 0.1\n \t}\n-\treturn 0.0\n-}))\n+}\n \n-var goTemplateRules = Rules{\n-\t\"root\": {\n-\t\t{`{{[-]?`, CommentPreproc, Push(\"template\")},\n-\t\t{`[^{]+`, Other, nil},\n-\t\t{`{`, Other, nil},\n-\t},\n-\t\"template\": {\n-\t\t{`[-]?}}`, CommentPreproc, Pop(1)},\n-\t\t{`/\\*.*?\\*/`, Comment, nil},\n-\t\t{`(?=}})`, CommentPreproc, Pop(1)}, // Terminate the pipeline\n-\t\t{`\\(`, Operator, Push(\"subexpression\")},\n-\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\tInclude(\"expression\"),\n-\t},\n-\t\"subexpression\": {\n-\t\t{`\\)`, Operator, Pop(1)},\n-\t\tInclude(\"expression\"),\n-\t},\n-\t\"expression\": {\n-\t\t{`\\s+`, Whitespace, nil},\n-\t\t{`\\(`, Operator, Push(\"subexpression\")},\n-\t\t{`(range|if|else|while|with|template|end|true|false|nil|and|call|html|index|js|len|not|or|print|printf|println|urlquery|eq|ne|lt|le|gt|ge)\\b`, Keyword, nil},\n-\t\t{`\\||:=`, Operator, nil},\n-\t\t{`[$]?[^\\W\\d]\\w*`, NameOther, nil},\n-\t\t{`[$]?\\.(?:[^\\W\\d]\\w*)?`, NameAttribute, nil},\n-\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t{`\\d+i`, LiteralNumber, nil},\n-\t\t{`\\d+\\.\\d*([Ee][-+]\\d+)?i`, LiteralNumber, nil},\n-\t\t{`\\.\\d+([Ee][-+]\\d+)?i`, LiteralNumber, nil},\n-\t\t{`\\d+[Ee][-+]\\d+i`, LiteralNumber, nil},\n-\t\t{`\\d+(\\.\\d+[eE][+\\-]?\\d+|\\.\\d*|[eE][+\\-]?\\d+)`, LiteralNumberFloat, nil},\n-\t\t{`\\.\\d+([eE][+\\-]?\\d+)?`, LiteralNumberFloat, nil},\n-\t\t{`0[0-7]+`, LiteralNumberOct, nil},\n-\t\t{`0[xX][0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t{`(0|[1-9][0-9]*)`, LiteralNumberInteger, nil},\n-\t\t{`'(\\\\['\"\\\\abfnrtv]|\\\\x[0-9a-fA-F]{2}|\\\\[0-7]{1,3}|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}|[^\\\\])'`, LiteralStringChar, nil},\n-\t\t{\"`[^`]*`\", LiteralString, nil},\n-\t},\n+func goTemplateRules() Rules {\n+\treturn Rules{\n+\t\t\"root\": {\n+\t\t\t{`{{(- )?/\\*(.|\\n)*?\\*/( -)?}}`, CommentMultiline, nil},\n+\t\t\t{`{{[-]?`, CommentPreproc, Push(\"template\")},\n+\t\t\t{`[^{]+`, Other, nil},\n+\t\t\t{`{`, Other, nil},\n+\t\t},\n+\t\t\"template\": {\n+\t\t\t{`[-]?}}`, CommentPreproc, Pop(1)},\n+\t\t\t{`(?=}})`, CommentPreproc, Pop(1)}, // Terminate the pipeline\n+\t\t\t{`\\(`, Operator, Push(\"subexpression\")},\n+\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n+\t\t\tInclude(\"expression\"),\n+\t\t},\n+\t\t\"subexpression\": {\n+\t\t\t{`\\)`, Operator, Pop(1)},\n+\t\t\tInclude(\"expression\"),\n+\t\t},\n+\t\t\"expression\": {\n+\t\t\t{`\\s+`, Whitespace, nil},\n+\t\t\t{`\\(`, Operator, Push(\"subexpression\")},\n+\t\t\t{`(range|if|else|while|with|template|end|true|false|nil|and|call|html|index|js|len|not|or|print|printf|println|urlquery|eq|ne|lt|le|gt|ge)\\b`, Keyword, nil},\n+\t\t\t{`\\||:?=|,`, Operator, nil},\n+\t\t\t{`[$]?[^\\W\\d]\\w*`, NameOther, nil},\n+\t\t\t{`\\$|[$]?\\.(?:[^\\W\\d]\\w*)?`, NameAttribute, nil},\n+\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n+\t\t\t{`-?\\d+i`, LiteralNumber, nil},\n+\t\t\t{`-?\\d+\\.\\d*([Ee][-+]\\d+)?i`, LiteralNumber, nil},\n+\t\t\t{`\\.\\d+([Ee][-+]\\d+)?i`, LiteralNumber, nil},\n+\t\t\t{`-?\\d+[Ee][-+]\\d+i`, LiteralNumber, nil},\n+\t\t\t{`-?\\d+(\\.\\d+[eE][+\\-]?\\d+|\\.\\d*|[eE][+\\-]?\\d+)`, LiteralNumberFloat, nil},\n+\t\t\t{`-?\\.\\d+([eE][+\\-]?\\d+)?`, LiteralNumberFloat, nil},\n+\t\t\t{`-?0[0-7]+`, LiteralNumberOct, nil},\n+\t\t\t{`-?0[xX][0-9a-fA-F]+`, LiteralNumberHex, nil},\n+\t\t\t{`-?(0|[1-9][0-9]*)`, LiteralNumberInteger, nil},\n+\t\t\t{`'(\\\\['\"\\\\abfnrtv]|\\\\x[0-9a-fA-F]{2}|\\\\[0-7]{1,3}|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}|[^\\\\])'`, LiteralStringChar, nil},\n+\t\t\t{\"`[^`]*`\", LiteralString, nil},\n+\t\t},\n+\t}\n }\n \n-var GoHTMLTemplate = internal.Register(DelegatingLexer(h.HTML, MustNewLexer(\n+var GoHTMLTemplate = internal.Register(DelegatingLexer(h.HTML, MustNewLazyLexer(\n \t&Config{\n \t\tName:    \"Go HTML Template\",\n \t\tAliases: []string{\"go-html-template\"},\n \t},\n \tgoTemplateRules,\n )))\n \n-var GoTextTemplate = internal.Register(MustNewLexer(\n+var GoTextTemplate = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:    \"Go Text Template\",\n \t\tAliases: []string{\"go-text-template\"},"
    },
    {
      "sha": "7d465cd4c17947031b4189e74eb2de465069777b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/g/graphql.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/graphql.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/graphql.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/g/graphql.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,13 +6,17 @@ import (\n )\n \n // Go lexer.\n-var Graphql = internal.Register(MustNewLexer(\n+var Graphql = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"GraphQL\",\n \t\tAliases:   []string{\"graphql\", \"graphqls\", \"gql\"},\n \t\tFilenames: []string{\"*.graphql\", \"*.graphqls\"},\n \t},\n-\tRules{\n+\tgraphqlRules,\n+))\n+\n+func graphqlRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`(query|mutation|subscription|fragment|scalar|implements|interface|union|enum|input|type)`, KeywordDeclaration, Push(\"type\")},\n \t\t\t{`(on|extend|schema|directive|\\.\\.\\.)`, KeywordDeclaration, nil},\n@@ -41,5 +45,5 @@ var Graphql = internal.Register(MustNewLexer(\n \t\t\t{`[^\\W\\d]\\w*`, NameClass, Pop(1)},\n \t\t\tInclude(\"root\"),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "65a70934f21076760aff3bd1623a6b25a5d93a54",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/g/groff.go",
      "status": "added",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/groff.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/groff.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/g/groff.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,47 @@\n+package g\n+\n+import (\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+)\n+\n+// Groff lexer.\n+var Groff = internal.Register(MustNewLazyLexer(\n+\t&Config{\n+\t\tName:      \"Groff\",\n+\t\tAliases:   []string{\"groff\", \"nroff\", \"man\"},\n+\t\tFilenames: []string{\"*.[1-9]\", \"*.1p\", \"*.3pm\", \"*.man\"},\n+\t\tMimeTypes: []string{\"application/x-troff\", \"text/troff\"},\n+\t},\n+\tfunc() Rules {\n+\t\treturn Rules{\n+\t\t\t\"root\": {\n+\t\t\t\t{`(\\.)(\\w+)`, ByGroups(Text, Keyword), Push(\"request\")},\n+\t\t\t\t{`\\.`, Punctuation, Push(\"request\")},\n+\t\t\t\t{`[^\\\\\\n]+`, Text, Push(\"textline\")},\n+\t\t\t\tDefault(Push(\"textline\")),\n+\t\t\t},\n+\t\t\t\"textline\": {\n+\t\t\t\tInclude(\"escapes\"),\n+\t\t\t\t{`[^\\\\\\n]+`, Text, nil},\n+\t\t\t\t{`\\n`, Text, Pop(1)},\n+\t\t\t},\n+\t\t\t\"escapes\": {\n+\t\t\t\t{`\\\\\"[^\\n]*`, Comment, nil},\n+\t\t\t\t{`\\\\[fn]\\w`, LiteralStringEscape, nil},\n+\t\t\t\t{`\\\\\\(.{2}`, LiteralStringEscape, nil},\n+\t\t\t\t{`\\\\.\\[.*\\]`, LiteralStringEscape, nil},\n+\t\t\t\t{`\\\\.`, LiteralStringEscape, nil},\n+\t\t\t\t{`\\\\\\n`, Text, Push(\"request\")},\n+\t\t\t},\n+\t\t\t\"request\": {\n+\t\t\t\t{`\\n`, Text, Pop(1)},\n+\t\t\t\tInclude(\"escapes\"),\n+\t\t\t\t{`\"[^\\n\"]+\"`, LiteralStringDouble, nil},\n+\t\t\t\t{`\\d+`, LiteralNumber, nil},\n+\t\t\t\t{`\\S+`, LiteralString, nil},\n+\t\t\t\t{`\\s+`, Text, nil},\n+\t\t\t},\n+\t\t}\n+\t},\n+))"
    },
    {
      "sha": "8d37bd87ed77794095749b873098d5edaf112f8e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/g/groovy.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/groovy.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/g/groovy.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/g/groovy.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Groovy lexer.\n-var Groovy = internal.Register(MustNewLexer(\n+var Groovy = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Groovy\",\n \t\tAliases:   []string{\"groovy\"},\n \t\tFilenames: []string{\"*.groovy\", \"*.gradle\"},\n \t\tMimeTypes: []string{\"text/x-groovy\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\tgroovyRules,\n+))\n+\n+func groovyRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`#!(.*?)$`, CommentPreproc, Push(\"base\")},\n \t\t\tDefault(Push(\"base\")),\n@@ -54,5 +58,5 @@ var Groovy = internal.Register(MustNewLexer(\n \t\t\"import\": {\n \t\t\t{`[\\w.]+\\*?`, NameNamespace, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "d34ef3a98fbe2d10142504891b5297fb761b0a7c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/h/handlebars.go",
      "status": "modified",
      "additions": 10,
      "deletions": 6,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/h/handlebars.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/h/handlebars.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/h/handlebars.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Handlebars lexer.\n-var Handlebars = internal.Register(MustNewLexer(\n+var Handlebars = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Handlebars\",\n-\t\tAliases:   []string{\"handlebars\"},\n-\t\tFilenames: []string{\"*.handlebars\"},\n+\t\tAliases:   []string{\"handlebars\", \"hbs\"},\n+\t\tFilenames: []string{\"*.handlebars\", \"*.hbs\"},\n \t\tMimeTypes: []string{},\n \t},\n-\tRules{\n+\thandlebarsRules,\n+))\n+\n+func handlebarsRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[^{]+`, Other, nil},\n \t\t\t{`\\{\\{!.*\\}\\}`, Comment, nil},\n@@ -52,5 +56,5 @@ var Handlebars = internal.Register(MustNewLexer(\n \t\t\t{`:?'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n \t\t\t{`[0-9](\\.[0-9]*)?(eE[+-][0-9])?[flFLdD]?|0[xX][0-9a-fA-F]+[Ll]?`, LiteralNumber, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "9780481aa28999c1f71c1cb4f6d481ce94435b4f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/h/haskell.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/h/haskell.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/h/haskell.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/h/haskell.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Haskell lexer.\n-var Haskell = internal.Register(MustNewLexer(\n+var Haskell = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Haskell\",\n \t\tAliases:   []string{\"haskell\", \"hs\"},\n \t\tFilenames: []string{\"*.hs\"},\n \t\tMimeTypes: []string{\"text/x-haskell\"},\n \t},\n-\tRules{\n+\thaskellRules,\n+))\n+\n+func haskellRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`--(?![!#$%&*+./<=>?@^|_~:\\\\]).*?$`, CommentSingle, nil},\n@@ -95,5 +99,5 @@ var Haskell = internal.Register(MustNewLexer(\n \t\t\t{`\\d+`, LiteralStringEscape, Pop(1)},\n \t\t\t{`\\s+\\\\`, LiteralStringEscape, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "cc8c693efedcde1a4251bbf70df5f0ea63a6218b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/h/haxe.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/h/haxe.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/h/haxe.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/h/haxe.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Haxe lexer.\n-var Haxe = internal.Register(MustNewLexer(\n+var Haxe = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Haxe\",\n \t\tAliases:   []string{\"hx\", \"haxe\", \"hxsl\"},\n \t\tFilenames: []string{\"*.hx\", \"*.hxsl\"},\n \t\tMimeTypes: []string{\"text/haxe\", \"text/x-haxe\", \"text/x-hx\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\thaxeRules,\n+))\n+\n+func haxeRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"spaces\"),\n \t\t\tInclude(\"meta\"),\n@@ -609,8 +613,8 @@ var Haxe = internal.Register(MustNewLexer(\n \t\t\t{`\\}`, Punctuation, Pop(1)},\n \t\t\t{`,`, Punctuation, Push(\"#pop\", \"object\")},\n \t\t},\n-\t},\n-))\n+\t}\n+}\n \n func haxePreProcMutator(state *LexerState) error {\n \tstack, ok := state.Get(\"haxe-pre-proc\").([][]string)"
    },
    {
      "sha": "7206fba0868e5687a1fbf29f40e43fee0372834d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/h/hcl.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/h/hcl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/h/hcl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/h/hcl.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // HCL lexer.\n-var HCL = internal.Register(MustNewLexer(\n+var HCL = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"HCL\",\n \t\tAliases:   []string{\"hcl\"},\n \t\tFilenames: []string{\"*.hcl\"},\n \t\tMimeTypes: []string{\"application/x-hcl\"},\n \t},\n-\tRules{\n+\thclRules,\n+))\n+\n+func hclRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"string\"),\n \t\t\tInclude(\"punctuation\"),\n@@ -65,5 +69,5 @@ var HCL = internal.Register(MustNewLexer(\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`\\\\\\n`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "089353749622be59ef3af2dd62b9da4d9f88e548",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/h/hexdump.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/h/hexdump.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/h/hexdump.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/h/hexdump.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Hexdump lexer.\n-var Hexdump = internal.Register(MustNewLexer(\n+var Hexdump = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Hexdump\",\n \t\tAliases:   []string{\"hexdump\"},\n \t\tFilenames: []string{},\n \t\tMimeTypes: []string{},\n \t},\n-\tRules{\n+\thexdumpRules,\n+))\n+\n+func hexdumpRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\n`, Text, nil},\n \t\t\tInclude(\"offset\"),\n@@ -63,5 +67,5 @@ var Hexdump = internal.Register(MustNewLexer(\n \t\t\t{`\\s`, Text, nil},\n \t\t\t{`^\\*`, Punctuation, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "6c5f6377157554d2fc429e462bd56dbeda0e4941",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/h/hlb.go",
      "status": "renamed",
      "additions": 9,
      "deletions": 5,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/h/hlb.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/h/hlb.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/h/hlb.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -1,19 +1,23 @@\n-package lexers\n+package h\n \n import (\n \t. \"github.com/alecthomas/chroma\" // nolint\n \t\"github.com/alecthomas/chroma/lexers/internal\"\n )\n \n // HLB lexer.\n-var HLB = internal.Register(MustNewLexer(\n+var HLB = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"HLB\",\n \t\tAliases:   []string{\"hlb\"},\n \t\tFilenames: []string{\"*.hlb\"},\n \t\tMimeTypes: []string{},\n \t},\n-\tRules{\n+\thlbRules,\n+))\n+\n+func hlbRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`(#.*)`, ByGroups(CommentSingle), nil},\n \t\t\t{`((\\b(0(b|B|o|O|x|X)[a-fA-F0-9]+)\\b)|(\\b(0|[1-9][0-9]*)\\b))`, ByGroups(LiteralNumber), nil},\n@@ -50,5 +54,5 @@ var HLB = internal.Register(MustNewLexer(\n \t\t\t{`(\\n|\\r|\\r\\n)`, Text, nil},\n \t\t\t{`.`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/lexers/hlb.go"
    },
    {
      "sha": "b9ca1e1d6f62f3c5788601522980f526e121bf16",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/h/html.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/h/html.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/h/html.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/h/html.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -8,7 +8,7 @@ import (\n )\n \n // HTML lexer.\n-var HTML = internal.Register(MustNewLexer(\n+var HTML = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"HTML\",\n \t\tAliases:         []string{\"html\"},\n@@ -18,7 +18,11 @@ var HTML = internal.Register(MustNewLexer(\n \t\tDotAll:          true,\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\thtmlRules,\n+))\n+\n+func htmlRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[^<&]+`, Text, nil},\n \t\t\t{`&\\S*?;`, NameEntity, nil},\n@@ -55,5 +59,5 @@ var HTML = internal.Register(MustNewLexer(\n \t\t\t{`'.*?'`, LiteralString, Pop(1)},\n \t\t\t{`[^\\s>]+`, LiteralString, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "c515ed4c1b935fb46e2604caf78c6840fe700bad",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/h/http.go",
      "status": "modified",
      "additions": 13,
      "deletions": 9,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/h/http.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/h/http.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/h/http.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -8,7 +8,7 @@ import (\n )\n \n // HTTP lexer.\n-var HTTP = internal.Register(httpBodyContentTypeLexer(MustNewLexer(\n+var HTTP = internal.Register(httpBodyContentTypeLexer(MustNewLazyLexer(\n \t&Config{\n \t\tName:         \"HTTP\",\n \t\tAliases:      []string{\"http\"},\n@@ -17,10 +17,14 @@ var HTTP = internal.Register(httpBodyContentTypeLexer(MustNewLexer(\n \t\tNotMultiline: true,\n \t\tDotAll:       true,\n \t},\n-\tRules{\n+\thttpRules,\n+)))\n+\n+func httpRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n-\t\t\t{`(GET|POST|PUT|DELETE|HEAD|OPTIONS|TRACE|PATCH|CONNECT)( +)([^ ]+)( +)(HTTP)(/)(1\\.[01])(\\r?\\n|\\Z)`, ByGroups(NameFunction, Text, NameNamespace, Text, KeywordReserved, Operator, LiteralNumber, Text), Push(\"headers\")},\n-\t\t\t{`(HTTP)(/)(1\\.[01])( +)(\\d{3})( +)([^\\r\\n]+)(\\r?\\n|\\Z)`, ByGroups(KeywordReserved, Operator, LiteralNumber, Text, LiteralNumber, Text, NameException, Text), Push(\"headers\")},\n+\t\t\t{`(GET|POST|PUT|DELETE|HEAD|OPTIONS|TRACE|PATCH|CONNECT)( +)([^ ]+)( +)(HTTP)(/)([12]\\.[01])(\\r?\\n|\\Z)`, ByGroups(NameFunction, Text, NameNamespace, Text, KeywordReserved, Operator, LiteralNumber, Text), Push(\"headers\")},\n+\t\t\t{`(HTTP)(/)([12]\\.[01])( +)(\\d{3})( +)([^\\r\\n]+)(\\r?\\n|\\Z)`, ByGroups(KeywordReserved, Operator, LiteralNumber, Text, LiteralNumber, Text, NameException, Text), Push(\"headers\")},\n \t\t},\n \t\t\"headers\": {\n \t\t\t{`([^\\s:]+)( *)(:)( *)([^\\r\\n]+)(\\r?\\n|\\Z)`, EmitterFunc(httpHeaderBlock), nil},\n@@ -30,17 +34,17 @@ var HTTP = internal.Register(httpBodyContentTypeLexer(MustNewLexer(\n \t\t\"content\": {\n \t\t\t{`.+`, EmitterFunc(httpContentBlock), nil},\n \t\t},\n-\t},\n-)))\n+\t}\n+}\n \n-func httpContentBlock(groups []string, lexer Lexer) Iterator {\n+func httpContentBlock(groups []string, state *LexerState) Iterator {\n \ttokens := []Token{\n \t\t{Generic, groups[0]},\n \t}\n \treturn Literator(tokens...)\n }\n \n-func httpHeaderBlock(groups []string, lexer Lexer) Iterator {\n+func httpHeaderBlock(groups []string, state *LexerState) Iterator {\n \ttokens := []Token{\n \t\t{Name, groups[1]},\n \t\t{Text, groups[2]},\n@@ -52,7 +56,7 @@ func httpHeaderBlock(groups []string, lexer Lexer) Iterator {\n \treturn Literator(tokens...)\n }\n \n-func httpContinuousHeaderBlock(groups []string, lexer Lexer) Iterator {\n+func httpContinuousHeaderBlock(groups []string, state *LexerState) Iterator {\n \ttokens := []Token{\n \t\t{Text, groups[1]},\n \t\t{Literal, groups[2]},"
    },
    {
      "sha": "7a078979938f7fdbb168276dcf0afd9c57326efc",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/h/hy.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/h/hy.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/h/hy.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/h/hy.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Hy lexer.\n-var Hy = internal.Register(MustNewLexer(\n+var Hy = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Hy\",\n \t\tAliases:   []string{\"hylang\"},\n \t\tFilenames: []string{\"*.hy\"},\n \t\tMimeTypes: []string{\"text/x-hy\", \"application/x-hy\"},\n \t},\n-\tRules{\n+\thyRules,\n+))\n+\n+func hyRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`;.*$`, CommentSingle, nil},\n \t\t\t{`[,\\s]+`, Text, nil},\n@@ -47,5 +51,5 @@ var Hy = internal.Register(MustNewLexer(\n \t\t\t{`(?<!\\.)(self|None|Ellipsis|NotImplemented|False|True|cls)\\b`, NameBuiltinPseudo, nil},\n \t\t\t{Words(`(?<!\\.)`, `\\b`, `ArithmeticError`, `AssertionError`, `AttributeError`, `BaseException`, `DeprecationWarning`, `EOFError`, `EnvironmentError`, `Exception`, `FloatingPointError`, `FutureWarning`, `GeneratorExit`, `IOError`, `ImportError`, `ImportWarning`, `IndentationError`, `IndexError`, `KeyError`, `KeyboardInterrupt`, `LookupError`, `MemoryError`, `NameError`, `NotImplemented`, `NotImplementedError`, `OSError`, `OverflowError`, `OverflowWarning`, `PendingDeprecationWarning`, `ReferenceError`, `RuntimeError`, `RuntimeWarning`, `StandardError`, `StopIteration`, `SyntaxError`, `SyntaxWarning`, `SystemError`, `SystemExit`, `TabError`, `TypeError`, `UnboundLocalError`, `UnicodeDecodeError`, `UnicodeEncodeError`, `UnicodeError`, `UnicodeTranslateError`, `UnicodeWarning`, `UserWarning`, `ValueError`, `VMSError`, `Warning`, `WindowsError`, `ZeroDivisionError`), NameException, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "fb5378e35bd8269299386a1ea5336a8e4e0c5cc6",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/i/idris.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/i/idris.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/i/idris.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/i/idris.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Idris lexer.\n-var Idris = internal.Register(MustNewLexer(\n+var Idris = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Idris\",\n \t\tAliases:   []string{\"idris\", \"idr\"},\n \t\tFilenames: []string{\"*.idr\"},\n \t\tMimeTypes: []string{\"text/x-idris\"},\n \t},\n-\tRules{\n+\tidrisRules,\n+))\n+\n+func idrisRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`^(\\s*)(%lib|link|flag|include|hide|freeze|access|default|logging|dynamic|name|error_handlers|language)`, ByGroups(Text, KeywordReserved), nil},\n \t\t\t{`(\\s*)(--(?![!#$%&*+./<=>?@^|_~:\\\\]).*?)$`, ByGroups(Text, CommentSingle), nil},\n@@ -76,5 +80,5 @@ var Idris = internal.Register(MustNewLexer(\n \t\t\t{`\\d+`, LiteralStringEscape, Pop(1)},\n \t\t\t{`\\s+\\\\`, LiteralStringEscape, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "bbb1d7230bf6a6ef697d596fce8d50180b36f9be",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/i/igor.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/i/igor.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/i/igor.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/i/igor.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Igor lexer.\n-var Igor = internal.Register(MustNewLexer(\n+var Igor = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"Igor\",\n \t\tAliases:         []string{\"igor\", \"igorpro\"},\n \t\tFilenames:       []string{\"*.ipf\"},\n \t\tMimeTypes:       []string{\"text/ipf\"},\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tigorRules,\n+))\n+\n+func igorRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`//.*$`, CommentSingle, nil},\n \t\t\t{`\"([^\"\\\\]|\\\\.)*\"`, LiteralString, nil},\n@@ -28,5 +32,5 @@ var Igor = internal.Register(MustNewLexer(\n \t\t\t{`.`, Text, nil},\n \t\t\t{`\\n|\\r`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "46b2ce23855035aacde8bedfeb7219c99ed5428d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/i/ini.go",
      "status": "modified",
      "additions": 9,
      "deletions": 5,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/i/ini.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/i/ini.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/i/ini.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,20 +6,24 @@ import (\n )\n \n // Ini lexer.\n-var Ini = internal.Register(MustNewLexer(\n+var Ini = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"INI\",\n \t\tAliases:   []string{\"ini\", \"cfg\", \"dosini\"},\n-\t\tFilenames: []string{\"*.ini\", \"*.cfg\", \"*.inf\", \".gitconfig\"},\n+\t\tFilenames: []string{\"*.ini\", \"*.cfg\", \"*.inf\", \".gitconfig\", \".editorconfig\"},\n \t\tMimeTypes: []string{\"text/x-ini\", \"text/inf\"},\n \t},\n-\tRules{\n+\tiniRules,\n+))\n+\n+func iniRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`[;#].*`, CommentSingle, nil},\n \t\t\t{`\\[.*?\\]$`, Keyword, nil},\n \t\t\t{`(.*?)([ \\t]*)(=)([ \\t]*)(.*(?:\\n[ \\t].+)*)`, ByGroups(NameAttribute, Text, Operator, Text, LiteralString), nil},\n \t\t\t{`(.+?)$`, NameAttribute, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "8b2e53a0742df2afa1630b9afa03fa55a06bf863",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/i/io.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/i/io.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/i/io.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/i/io.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Io lexer.\n-var Io = internal.Register(MustNewLexer(\n+var Io = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Io\",\n \t\tAliases:   []string{\"io\"},\n \t\tFilenames: []string{\"*.io\"},\n \t\tMimeTypes: []string{\"text/x-iosrc\"},\n \t},\n-\tRules{\n+\tioRules,\n+))\n+\n+func ioRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\n`, Text, nil},\n \t\t\t{`\\s+`, Text, nil},\n@@ -36,5 +40,5 @@ var Io = internal.Register(MustNewLexer(\n \t\t\t{`\\+/`, CommentMultiline, Pop(1)},\n \t\t\t{`[+/]`, CommentMultiline, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "5c7970aecc881cd623df9527dc6fc41dbd2449b3",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/internal/api.go",
      "status": "modified",
      "additions": 43,
      "deletions": 12,
      "changes": 55,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/internal/api.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/internal/api.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/internal/api.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -11,6 +11,19 @@ import (\n \t\"github.com/alecthomas/chroma\"\n )\n \n+var (\n+\tignoredSuffixes = [...]string{\n+\t\t// Editor backups\n+\t\t\"~\", \".bak\", \".old\", \".orig\",\n+\t\t// Debian and derivatives apt/dpkg backups\n+\t\t\".dpkg-dist\", \".dpkg-old\",\n+\t\t// Red Hat and derivatives rpm backups\n+\t\t\".rpmnew\", \".rpmorig\", \".rpmsave\",\n+\t\t// Build system input/template files\n+\t\t\".in\",\n+\t}\n+)\n+\n // Registry of Lexers.\n var Registry = struct {\n \tLexers  chroma.Lexers\n@@ -37,19 +50,20 @@ func Names(withAliases bool) []string {\n \n // Get a Lexer by name, alias or file extension.\n func Get(name string) chroma.Lexer {\n-\tcandidates := chroma.PrioritisedLexers{}\n \tif lexer := Registry.byName[name]; lexer != nil {\n-\t\tcandidates = append(candidates, lexer)\n+\t\treturn lexer\n \t}\n \tif lexer := Registry.byAlias[name]; lexer != nil {\n-\t\tcandidates = append(candidates, lexer)\n+\t\treturn lexer\n \t}\n \tif lexer := Registry.byName[strings.ToLower(name)]; lexer != nil {\n-\t\tcandidates = append(candidates, lexer)\n+\t\treturn lexer\n \t}\n \tif lexer := Registry.byAlias[strings.ToLower(name)]; lexer != nil {\n-\t\tcandidates = append(candidates, lexer)\n+\t\treturn lexer\n \t}\n+\n+\tcandidates := chroma.PrioritisedLexers{}\n \t// Try file extension.\n \tif lexer := Match(\"filename.\" + name); lexer != nil {\n \t\tcandidates = append(candidates, lexer)\n@@ -92,6 +106,13 @@ func Match(filename string) chroma.Lexer {\n \t\tfor _, glob := range config.Filenames {\n \t\t\tif fnmatch.Match(glob, filename, 0) {\n \t\t\t\tmatched = append(matched, lexer)\n+\t\t\t} else {\n+\t\t\t\tfor _, suf := range &ignoredSuffixes {\n+\t\t\t\t\tif fnmatch.Match(glob+suf, filename, 0) {\n+\t\t\t\t\t\tmatched = append(matched, lexer)\n+\t\t\t\t\t\tbreak\n+\t\t\t\t\t}\n+\t\t\t\t}\n \t\t\t}\n \t\t}\n \t}\n@@ -106,6 +127,13 @@ func Match(filename string) chroma.Lexer {\n \t\tfor _, glob := range config.AliasFilenames {\n \t\t\tif fnmatch.Match(glob, filename, 0) {\n \t\t\t\tmatched = append(matched, lexer)\n+\t\t\t} else {\n+\t\t\t\tfor _, suf := range &ignoredSuffixes {\n+\t\t\t\t\tif fnmatch.Match(glob+suf, filename, 0) {\n+\t\t\t\t\t\tmatched = append(matched, lexer)\n+\t\t\t\t\t\tbreak\n+\t\t\t\t\t}\n+\t\t\t\t}\n \t\t\t}\n \t\t}\n \t}\n@@ -145,16 +173,19 @@ func Register(lexer chroma.Lexer) chroma.Lexer {\n \treturn lexer\n }\n \n-// Used for the fallback lexer as well as the explicit plaintext lexer\n-var PlaintextRules = chroma.Rules{\n-\t\"root\": []chroma.Rule{\n-\t\t{`.+`, chroma.Text, nil},\n-\t\t{`\\n`, chroma.Text, nil},\n-\t},\n+// PlaintextRules is used for the fallback lexer as well as the explicit\n+// plaintext lexer.\n+func PlaintextRules() chroma.Rules {\n+\treturn chroma.Rules{\n+\t\t\"root\": []chroma.Rule{\n+\t\t\t{`.+`, chroma.Text, nil},\n+\t\t\t{`\\n`, chroma.Text, nil},\n+\t\t},\n+\t}\n }\n \n // Fallback lexer if no other is found.\n-var Fallback chroma.Lexer = chroma.MustNewLexer(&chroma.Config{\n+var Fallback chroma.Lexer = chroma.MustNewLazyLexer(&chroma.Config{\n \tName:      \"fallback\",\n \tFilenames: []string{\"*\"},\n }, PlaintextRules)"
    },
    {
      "sha": "9a2a4e3c044da2f9be376b7a4376e169d839378c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/j/j.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/j/j.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/j/j.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/j/j.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // J lexer.\n-var J = internal.Register(MustNewLexer(\n+var J = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"J\",\n \t\tAliases:   []string{\"j\"},\n \t\tFilenames: []string{\"*.ijs\"},\n \t\tMimeTypes: []string{\"text/x-j\"},\n \t},\n-\tRules{\n+\tjRules,\n+))\n+\n+func jRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`#!.*$`, CommentPreproc, nil},\n \t\t\t{`NB\\..*`, CommentSingle, nil},\n@@ -69,5 +73,5 @@ var J = internal.Register(MustNewLexer(\n \t\t\t{`''`, LiteralString, nil},\n \t\t\t{`'`, LiteralString, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "48a9d9fee84129338b71efd449d40b1b42a3fe6c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/j/java.go",
      "status": "modified",
      "additions": 9,
      "deletions": 4,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/j/java.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/j/java.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/j/java.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,20 @@ import (\n )\n \n // Java lexer.\n-var Java = internal.Register(MustNewLexer(\n+var Java = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Java\",\n \t\tAliases:   []string{\"java\"},\n \t\tFilenames: []string{\"*.java\"},\n \t\tMimeTypes: []string{\"text/x-java\"},\n \t\tDotAll:    true,\n+\t\tEnsureNL:  true,\n \t},\n-\tRules{\n+\tjavaRules,\n+))\n+\n+func javaRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[^\\S\\n]+`, Text, nil},\n \t\t\t{`//.*?\\n`, CommentSingle, nil},\n@@ -47,5 +52,5 @@ var Java = internal.Register(MustNewLexer(\n \t\t\"import\": {\n \t\t\t{`[\\w.]+\\*?`, NameNamespace, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "6bb3145c02a2ea71f71e2a5e89fbb83ed39f62f5",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/j/javascript.go",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/j/javascript.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/j/javascript.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/j/javascript.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -26,18 +26,18 @@ var JavascriptRules = Rules{\n \t\t{`\\A#! ?/.*?\\n`, CommentHashbang, nil},\n \t\t{`^(?=\\s|/|<!--)`, Text, Push(\"slashstartsregex\")},\n \t\tInclude(\"commentsandwhitespace\"),\n-\t\t{`(\\.\\d+|[0-9]+\\.[0-9]*)([eE][-+]?[0-9]+)?`, LiteralNumberFloat, nil},\n+\t\t{`\\d+(\\.\\d*|[eE][+\\-]?\\d+)`, LiteralNumberFloat, nil},\n \t\t{`0[bB][01]+`, LiteralNumberBin, nil},\n \t\t{`0[oO][0-7]+`, LiteralNumberOct, nil},\n \t\t{`0[xX][0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n+\t\t{`[0-9_]+`, LiteralNumberInteger, nil},\n \t\t{`\\.\\.\\.|=>`, Punctuation, nil},\n \t\t{`\\+\\+|--|~|&&|\\?|:|\\|\\||\\\\(?=\\n)|(<<|>>>?|==?|!=?|[-<>+*%&|^/])=?`, Operator, Push(\"slashstartsregex\")},\n \t\t{`[{(\\[;,]`, Punctuation, Push(\"slashstartsregex\")},\n \t\t{`[})\\].]`, Punctuation, nil},\n \t\t{`(for|in|while|do|break|return|continue|switch|case|default|if|else|throw|try|catch|finally|new|delete|typeof|instanceof|void|yield|this|of)\\b`, Keyword, Push(\"slashstartsregex\")},\n \t\t{`(var|let|with|function)\\b`, KeywordDeclaration, Push(\"slashstartsregex\")},\n-\t\t{`(abstract|boolean|byte|char|class|const|debugger|double|enum|export|extends|final|float|goto|implements|import|int|interface|long|native|package|private|protected|public|short|static|super|synchronized|throws|transient|volatile)\\b`, KeywordReserved, nil},\n+\t\t{`(abstract|async|await|boolean|byte|char|class|const|debugger|double|enum|export|extends|final|float|goto|implements|import|int|interface|long|native|package|private|protected|public|short|static|super|synchronized|throws|transient|volatile)\\b`, KeywordReserved, nil},\n \t\t{`(true|false|null|NaN|Infinity|undefined)\\b`, KeywordConstant, nil},\n \t\t{`(Array|Boolean|Date|Error|Function|Math|netscape|Number|Object|Packages|RegExp|String|Promise|Proxy|sun|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|Error|eval|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|document|this|window)\\b`, NameBuiltin, nil},\n \t\t{`(?:[$_A-ZÀ-ÖØ-ÞĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮİĲĴĶĹĻĽĿŁŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŸ-ŹŻŽƁ-ƂƄƆ-ƇƉ-ƋƎ-ƑƓ-ƔƖ-ƘƜ-ƝƟ-ƠƢƤƦ-ƧƩƬƮ-ƯƱ-ƳƵƷ-ƸƼǄǇǊǍǏǑǓǕǗǙǛǞǠǢǤǦǨǪǬǮǱǴǶ-ǸǺǼǾȀȂȄȆȈȊȌȎȐȒȔȖȘȚȜȞȠȢȤȦȨȪȬȮȰȲȺ-ȻȽ-ȾɁɃ-ɆɈɊɌɎͰͲͶͿΆΈ-ΊΌΎ-ΏΑ-ΡΣ-ΫϏϒ-ϔϘϚϜϞϠϢϤϦϨϪϬϮϴϷϹ-ϺϽ-ЯѠѢѤѦѨѪѬѮѰѲѴѶѸѺѼѾҀҊҌҎҐҒҔҖҘҚҜҞҠҢҤҦҨҪҬҮҰҲҴҶҸҺҼҾӀ-ӁӃӅӇӉӋӍӐӒӔӖӘӚӜӞӠӢӤӦӨӪӬӮӰӲӴӶӸӺӼӾԀԂԄԆԈԊԌԎԐԒԔԖԘԚԜԞԠԢԤԦԨԪԬԮԱ-ՖႠ-ჅჇჍᎠ-ᏵᲐ-ᲺᲽ-ᲿḀḂḄḆḈḊḌḎḐḒḔḖḘḚḜḞḠḢḤḦḨḪḬḮḰḲḴḶḸḺḼḾṀṂṄṆṈṊṌṎṐṒṔṖṘṚṜṞṠṢṤṦṨṪṬṮṰṲṴṶṸṺṼṾẀẂẄẆẈẊẌẎẐẒẔẞẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼẾỀỂỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪỬỮỰỲỴỶỸỺỼỾἈ-ἏἘ-ἝἨ-ἯἸ-ἿὈ-ὍὙὛὝὟὨ-ὯᾸ-ΆῈ-ΉῘ-ΊῨ-ῬῸ-Ώℂℇℋ-ℍℐ-ℒℕℙ-ℝℤΩℨK-ℭℰ-ℳℾ-ℿⅅↃⰀ-ⰮⱠⱢ-ⱤⱧⱩⱫⱭ-ⱰⱲⱵⱾ-ⲀⲂⲄⲆⲈⲊⲌⲎⲐⲒⲔⲖⲘⲚⲜⲞⲠⲢⲤⲦⲨⲪⲬⲮⲰⲲⲴⲶⲸⲺⲼⲾⳀⳂⳄⳆⳈⳊⳌⳎⳐⳒⳔⳖⳘⳚⳜⳞⳠⳢⳫⳭⳲꙀꙂꙄꙆꙈꙊꙌꙎꙐꙒꙔꙖꙘꙚꙜꙞꙠꙢꙤꙦꙨꙪꙬꚀꚂꚄꚆꚈꚊꚌꚎꚐꚒꚔꚖꚘꚚꜢꜤꜦꜨꜪꜬꜮꜲꜴꜶꜸꜺꜼꜾꝀꝂꝄꝆꝈꝊꝌꝎꝐꝒꝔꝖꝘꝚꝜꝞꝠꝢꝤꝦꝨꝪꝬꝮꝹꝻꝽ-ꝾꞀꞂꞄꞆꞋꞍꞐꞒꞖꞘꞚꞜꞞꞠꞢꞤꞦꞨꞪ-ꞮꞰ-ꞴꞶꞸＡ-Ｚ𐐀-𐐧𐒰-𐓓𐲀-𐲲𑢠-𑢿𖹀-𖹟𝐀-𝐙𝐴-𝑍𝑨-𝒁𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒵𝓐-𝓩𝔄-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔸-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕬-𝖅𝖠-𝖹𝗔-𝗭𝘈-𝘡𝘼-𝙕𝙰-𝚉𝚨-𝛀𝛢-𝛺𝜜-𝜴𝝖-𝝮𝞐-𝞨𝟊𞤀-𞤡a-zµß-öø-ÿāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįıĳĵķ-ĸĺļľŀłńņň-ŉŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷźżž-ƀƃƅƈƌ-ƍƒƕƙ-ƛƞơƣƥƨƪ-ƫƭưƴƶƹ-ƺƽ-ƿǆǉǌǎǐǒǔǖǘǚǜ-ǝǟǡǣǥǧǩǫǭǯ-ǰǳǵǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟȡȣȥȧȩȫȭȯȱȳ-ȹȼȿ-ɀɂɇɉɋɍɏ-ʓʕ-ʯͱͳͷͻ-ͽΐά-ώϐ-ϑϕ-ϗϙϛϝϟϡϣϥϧϩϫϭϯ-ϳϵϸϻ-ϼа-џѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎ-ӏӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯՠ-ֈა-ჺჽ-ჿᏸ-ᏽᲀ-ᲈᴀ-ᴫᵫ-ᵷᵹ-ᶚḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕ-ẝẟạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿ-ἇἐ-ἕἠ-ἧἰ-ἷὀ-ὅὐ-ὗὠ-ὧὰ-ώᾀ-ᾇᾐ-ᾗᾠ-ᾧᾰ-ᾴᾶ-ᾷιῂ-ῄῆ-ῇῐ-ΐῖ-ῗῠ-ῧῲ-ῴῶ-ῷℊℎ-ℏℓℯℴℹℼ-ℽⅆ-ⅉⅎↄⰰ-ⱞⱡⱥ-ⱦⱨⱪⱬⱱⱳ-ⱴⱶ-ⱻⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣ-ⳤⳬⳮⳳⴀ-ⴥⴧⴭꙁꙃꙅꙇꙉꙋꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛꜣꜥꜧꜩꜫꜭꜯ-ꜱꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯꝱ-ꝸꝺꝼꝿꞁꞃꞅꞇꞌꞎꞑꞓ-ꞕꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩꞯꞵꞷꞹꟺꬰ-ꭚꭠ-ꭥꭰ-ꮿﬀ-ﬆﬓ-ﬗａ-ｚ𐐨-𐑏𐓘-𐓻𐳀-𐳲𑣀-𑣟𖹠-𖹿𝐚-𝐳𝑎-𝑔𝑖-𝑧𝒂-𝒛𝒶-𝒹𝒻𝒽-𝓃𝓅-𝓏𝓪-𝔃𝔞-𝔷𝕒-𝕫𝖆-𝖟𝖺-𝗓𝗮-𝘇𝘢-𝘻𝙖-𝙯𝚊-𝚥𝛂-𝛚𝛜-𝛡𝛼-𝜔𝜖-𝜛𝜶-𝝎𝝐-𝝕𝝰-𝞈𝞊-𝞏𝞪-𝟂𝟄-𝟉𝟋𞤢-𞥃ǅǈǋǲᾈ-ᾏᾘ-ᾟᾨ-ᾯᾼῌῼʰ-ˁˆ-ˑˠ-ˤˬˮʹͺՙـۥ-ۦߴ-ߵߺࠚࠤࠨॱๆໆჼៗᡃᪧᱸ-ᱽᴬ-ᵪᵸᶛ-ᶿⁱⁿₐ-ₜⱼ-ⱽⵯⸯ々〱-〵〻ゝ-ゞー-ヾꀕꓸ-ꓽꘌꙿꚜ-ꚝꜗ-ꜟꝰꞈꟸ-ꟹꧏꧦꩰꫝꫳ-ꫴꭜ-ꭟｰﾞ-ﾟ𖭀-𖭃𖾓-𖾟𖿠-𖿡ªºƻǀ-ǃʔא-תׯ-ײؠ-ؿف-يٮ-ٯٱ-ۓەۮ-ۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪࠀ-ࠕࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॲ-ঀঅ-ঌএ-ঐও-নপ-রলশ-হঽৎড়-ঢ়য়-ৡৰ-ৱৼਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હઽૐૠ-ૡૹଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହଽଡ଼-ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠ-ౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠ-ೡೱ-ೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะา-ำเ-ๅກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ະາ-ຳຽເ-ໄໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥ-ၦၮ-ၰၵ-ႁႎᄀ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛱ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៜᠠ-ᡂᡄ-ᡸᢀ-ᢄᢇ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮ-ᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱷᳩ-ᳬᳮ-ᳱᳵ-ᳶℵ-ℸⴰ-ⵧⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ〆〼ぁ-ゖゟァ-ヺヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꀔꀖ-ꒌꓐ-ꓷꔀ-ꘋꘐ-ꘟꘪ-ꘫꙮꚠ-ꛥꞏꟷꟻ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽ-ꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧠ-ꧤꧧ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩯꩱ-ꩶꩺꩾ-ꪯꪱꪵ-ꪶꪹ-ꪽꫀꫂꫛ-ꫜꫠ-ꫪꫲꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎יִײַ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼｦ-ｯｱ-ﾝﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐊀-𐊜𐊠-𐋐𐌀-𐌟𐌭-𐍀𐍂-𐍉𐍐-𐍵𐎀-𐎝𐎠-𐏃𐏈-𐏏𐑐-𐒝𐔀-𐔧𐔰-𐕣𐘀-𐜶𐝀-𐝕𐝠-𐝧𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐡠-𐡶𐢀-𐢞𐣠-𐣲𐣴-𐣵𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀𐨐-𐨓𐨕-𐨗𐨙-𐨵𐩠-𐩼𐪀-𐪜𐫀-𐫇𐫉-𐫤𐬀-𐬵𐭀-𐭕𐭠-𐭲𐮀-𐮑𐰀-𐱈𐴀-𐴣𐼀-𐼜𐼧𐼰-𐽅𑀃-𑀷𑂃-𑂯𑃐-𑃨𑄃-𑄦𑅄𑅐-𑅲𑅶𑆃-𑆲𑇁-𑇄𑇚𑇜𑈀-𑈑𑈓-𑈫𑊀-𑊆𑊈𑊊-𑊍𑊏-𑊝𑊟-𑊨𑊰-𑋞𑌅-𑌌𑌏-𑌐𑌓-𑌨𑌪-𑌰𑌲-𑌳𑌵-𑌹𑌽𑍐𑍝-𑍡𑐀-𑐴𑑇-𑑊𑒀-𑒯𑓄-𑓅𑓇𑖀-𑖮𑗘-𑗛𑘀-𑘯𑙄𑚀-𑚪𑜀-𑜚𑠀-𑠫𑣿𑨀𑨋-𑨲𑨺𑩐𑩜-𑪃𑪆-𑪉𑪝𑫀-𑫸𑰀-𑰈𑰊-𑰮𑱀𑱲-𑲏𑴀-𑴆𑴈-𑴉𑴋-𑴰𑵆𑵠-𑵥𑵧-𑵨𑵪-𑶉𑶘𑻠-𑻲𒀀-𒎙𒒀-𒕃𓀀-𓐮𔐀-𔙆𖠀-𖨸𖩀-𖩞𖫐-𖫭𖬀-𖬯𖭣-𖭷𖭽-𖮏𖼀-𖽄𖽐𗀀-𘟱𘠀-𘫲𛀀-𛄞𛅰-𛋻𛰀-𛱪𛱰-𛱼𛲀-𛲈𛲐-𛲙𞠀-𞣄𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝𫠠-𬺡𬺰-𮯠丽-𪘀ᛮ-ᛰⅠ-ↂↅ-ↈ〇〡-〩〸-〺ꛦ-ꛯ𐅀-𐅴𐍁𐍊𐏑-𐏕𒐀-𒑮]|\\\\u[a-fA-F0-9]{4})(?:(?:[$A-ZÀ-ÖØ-ÞĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮİĲĴĶĹĻĽĿŁŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŸ-ŹŻŽƁ-ƂƄƆ-ƇƉ-ƋƎ-ƑƓ-ƔƖ-ƘƜ-ƝƟ-ƠƢƤƦ-ƧƩƬƮ-ƯƱ-ƳƵƷ-ƸƼǄǇǊǍǏǑǓǕǗǙǛǞǠǢǤǦǨǪǬǮǱǴǶ-ǸǺǼǾȀȂȄȆȈȊȌȎȐȒȔȖȘȚȜȞȠȢȤȦȨȪȬȮȰȲȺ-ȻȽ-ȾɁɃ-ɆɈɊɌɎͰͲͶͿΆΈ-ΊΌΎ-ΏΑ-ΡΣ-ΫϏϒ-ϔϘϚϜϞϠϢϤϦϨϪϬϮϴϷϹ-ϺϽ-ЯѠѢѤѦѨѪѬѮѰѲѴѶѸѺѼѾҀҊҌҎҐҒҔҖҘҚҜҞҠҢҤҦҨҪҬҮҰҲҴҶҸҺҼҾӀ-ӁӃӅӇӉӋӍӐӒӔӖӘӚӜӞӠӢӤӦӨӪӬӮӰӲӴӶӸӺӼӾԀԂԄԆԈԊԌԎԐԒԔԖԘԚԜԞԠԢԤԦԨԪԬԮԱ-ՖႠ-ჅჇჍᎠ-ᏵᲐ-ᲺᲽ-ᲿḀḂḄḆḈḊḌḎḐḒḔḖḘḚḜḞḠḢḤḦḨḪḬḮḰḲḴḶḸḺḼḾṀṂṄṆṈṊṌṎṐṒṔṖṘṚṜṞṠṢṤṦṨṪṬṮṰṲṴṶṸṺṼṾẀẂẄẆẈẊẌẎẐẒẔẞẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼẾỀỂỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪỬỮỰỲỴỶỸỺỼỾἈ-ἏἘ-ἝἨ-ἯἸ-ἿὈ-ὍὙὛὝὟὨ-ὯᾸ-ΆῈ-ΉῘ-ΊῨ-ῬῸ-Ώℂℇℋ-ℍℐ-ℒℕℙ-ℝℤΩℨK-ℭℰ-ℳℾ-ℿⅅↃⰀ-ⰮⱠⱢ-ⱤⱧⱩⱫⱭ-ⱰⱲⱵⱾ-ⲀⲂⲄⲆⲈⲊⲌⲎⲐⲒⲔⲖⲘⲚⲜⲞⲠⲢⲤⲦⲨⲪⲬⲮⲰⲲⲴⲶⲸⲺⲼⲾⳀⳂⳄⳆⳈⳊⳌⳎⳐⳒⳔⳖⳘⳚⳜⳞⳠⳢⳫⳭⳲꙀꙂꙄꙆꙈꙊꙌꙎꙐꙒꙔꙖꙘꙚꙜꙞꙠꙢꙤꙦꙨꙪꙬꚀꚂꚄꚆꚈꚊꚌꚎꚐꚒꚔꚖꚘꚚꜢꜤꜦꜨꜪꜬꜮꜲꜴꜶꜸꜺꜼꜾꝀꝂꝄꝆꝈꝊꝌꝎꝐꝒꝔꝖꝘꝚꝜꝞꝠꝢꝤꝦꝨꝪꝬꝮꝹꝻꝽ-ꝾꞀꞂꞄꞆꞋꞍꞐꞒꞖꞘꞚꞜꞞꞠꞢꞤꞦꞨꞪ-ꞮꞰ-ꞴꞶꞸＡ-Ｚ𐐀-𐐧𐒰-𐓓𐲀-𐲲𑢠-𑢿𖹀-𖹟𝐀-𝐙𝐴-𝑍𝑨-𝒁𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒵𝓐-𝓩𝔄-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔸-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕬-𝖅𝖠-𝖹𝗔-𝗭𝘈-𝘡𝘼-𝙕𝙰-𝚉𝚨-𝛀𝛢-𝛺𝜜-𝜴𝝖-𝝮𝞐-𝞨𝟊𞤀-𞤡a-zµß-öø-ÿāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįıĳĵķ-ĸĺļľŀłńņň-ŉŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷźżž-ƀƃƅƈƌ-ƍƒƕƙ-ƛƞơƣƥƨƪ-ƫƭưƴƶƹ-ƺƽ-ƿǆǉǌǎǐǒǔǖǘǚǜ-ǝǟǡǣǥǧǩǫǭǯ-ǰǳǵǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟȡȣȥȧȩȫȭȯȱȳ-ȹȼȿ-ɀɂɇɉɋɍɏ-ʓʕ-ʯͱͳͷͻ-ͽΐά-ώϐ-ϑϕ-ϗϙϛϝϟϡϣϥϧϩϫϭϯ-ϳϵϸϻ-ϼа-џѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎ-ӏӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯՠ-ֈა-ჺჽ-ჿᏸ-ᏽᲀ-ᲈᴀ-ᴫᵫ-ᵷᵹ-ᶚḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕ-ẝẟạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿ-ἇἐ-ἕἠ-ἧἰ-ἷὀ-ὅὐ-ὗὠ-ὧὰ-ώᾀ-ᾇᾐ-ᾗᾠ-ᾧᾰ-ᾴᾶ-ᾷιῂ-ῄῆ-ῇῐ-ΐῖ-ῗῠ-ῧῲ-ῴῶ-ῷℊℎ-ℏℓℯℴℹℼ-ℽⅆ-ⅉⅎↄⰰ-ⱞⱡⱥ-ⱦⱨⱪⱬⱱⱳ-ⱴⱶ-ⱻⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣ-ⳤⳬⳮⳳⴀ-ⴥⴧⴭꙁꙃꙅꙇꙉꙋꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛꜣꜥꜧꜩꜫꜭꜯ-ꜱꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯꝱ-ꝸꝺꝼꝿꞁꞃꞅꞇꞌꞎꞑꞓ-ꞕꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩꞯꞵꞷꞹꟺꬰ-ꭚꭠ-ꭥꭰ-ꮿﬀ-ﬆﬓ-ﬗａ-ｚ𐐨-𐑏𐓘-𐓻𐳀-𐳲𑣀-𑣟𖹠-𖹿𝐚-𝐳𝑎-𝑔𝑖-𝑧𝒂-𝒛𝒶-𝒹𝒻𝒽-𝓃𝓅-𝓏𝓪-𝔃𝔞-𝔷𝕒-𝕫𝖆-𝖟𝖺-𝗓𝗮-𝘇𝘢-𝘻𝙖-𝙯𝚊-𝚥𝛂-𝛚𝛜-𝛡𝛼-𝜔𝜖-𝜛𝜶-𝝎𝝐-𝝕𝝰-𝞈𝞊-𝞏𝞪-𝟂𝟄-𝟉𝟋𞤢-𞥃ǅǈǋǲᾈ-ᾏᾘ-ᾟᾨ-ᾯᾼῌῼʰ-ˁˆ-ˑˠ-ˤˬˮʹͺՙـۥ-ۦߴ-ߵߺࠚࠤࠨॱๆໆჼៗᡃᪧᱸ-ᱽᴬ-ᵪᵸᶛ-ᶿⁱⁿₐ-ₜⱼ-ⱽⵯⸯ々〱-〵〻ゝ-ゞー-ヾꀕꓸ-ꓽꘌꙿꚜ-ꚝꜗ-ꜟꝰꞈꟸ-ꟹꧏꧦꩰꫝꫳ-ꫴꭜ-ꭟｰﾞ-ﾟ𖭀-𖭃𖾓-𖾟𖿠-𖿡ªºƻǀ-ǃʔא-תׯ-ײؠ-ؿف-يٮ-ٯٱ-ۓەۮ-ۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪࠀ-ࠕࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॲ-ঀঅ-ঌএ-ঐও-নপ-রলশ-হঽৎড়-ঢ়য়-ৡৰ-ৱৼਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હઽૐૠ-ૡૹଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହଽଡ଼-ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠ-ౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠ-ೡೱ-ೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะา-ำเ-ๅກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ະາ-ຳຽເ-ໄໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥ-ၦၮ-ၰၵ-ႁႎᄀ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛱ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៜᠠ-ᡂᡄ-ᡸᢀ-ᢄᢇ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮ-ᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱷᳩ-ᳬᳮ-ᳱᳵ-ᳶℵ-ℸⴰ-ⵧⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ〆〼ぁ-ゖゟァ-ヺヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꀔꀖ-ꒌꓐ-ꓷꔀ-ꘋꘐ-ꘟꘪ-ꘫꙮꚠ-ꛥꞏꟷꟻ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽ-ꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧠ-ꧤꧧ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩯꩱ-ꩶꩺꩾ-ꪯꪱꪵ-ꪶꪹ-ꪽꫀꫂꫛ-ꫜꫠ-ꫪꫲꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎יִײַ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼｦ-ｯｱ-ﾝﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐊀-𐊜𐊠-𐋐𐌀-𐌟𐌭-𐍀𐍂-𐍉𐍐-𐍵𐎀-𐎝𐎠-𐏃𐏈-𐏏𐑐-𐒝𐔀-𐔧𐔰-𐕣𐘀-𐜶𐝀-𐝕𐝠-𐝧𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐡠-𐡶𐢀-𐢞𐣠-𐣲𐣴-𐣵𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀𐨐-𐨓𐨕-𐨗𐨙-𐨵𐩠-𐩼𐪀-𐪜𐫀-𐫇𐫉-𐫤𐬀-𐬵𐭀-𐭕𐭠-𐭲𐮀-𐮑𐰀-𐱈𐴀-𐴣𐼀-𐼜𐼧𐼰-𐽅𑀃-𑀷𑂃-𑂯𑃐-𑃨𑄃-𑄦𑅄𑅐-𑅲𑅶𑆃-𑆲𑇁-𑇄𑇚𑇜𑈀-𑈑𑈓-𑈫𑊀-𑊆𑊈𑊊-𑊍𑊏-𑊝𑊟-𑊨𑊰-𑋞𑌅-𑌌𑌏-𑌐𑌓-𑌨𑌪-𑌰𑌲-𑌳𑌵-𑌹𑌽𑍐𑍝-𑍡𑐀-𑐴𑑇-𑑊𑒀-𑒯𑓄-𑓅𑓇𑖀-𑖮𑗘-𑗛𑘀-𑘯𑙄𑚀-𑚪𑜀-𑜚𑠀-𑠫𑣿𑨀𑨋-𑨲𑨺𑩐𑩜-𑪃𑪆-𑪉𑪝𑫀-𑫸𑰀-𑰈𑰊-𑰮𑱀𑱲-𑲏𑴀-𑴆𑴈-𑴉𑴋-𑴰𑵆𑵠-𑵥𑵧-𑵨𑵪-𑶉𑶘𑻠-𑻲𒀀-𒎙𒒀-𒕃𓀀-𓐮𔐀-𔙆𖠀-𖨸𖩀-𖩞𖫐-𖫭𖬀-𖬯𖭣-𖭷𖭽-𖮏𖼀-𖽄𖽐𗀀-𘟱𘠀-𘫲𛀀-𛄞𛅰-𛋻𛰀-𛱪𛱰-𛱼𛲀-𛲈𛲐-𛲙𞠀-𞣄𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝𫠠-𬺡𬺰-𮯠丽-𪘀ᛮ-ᛰⅠ-ↂↅ-ↈ〇〡-〩〸-〺ꛦ-ꛯ𐅀-𐅴𐍁𐍊𐏑-𐏕𒐀-𒑮̀-ͯ҃-֑҇-ֽֿׁ-ׂׄ-ׇׅؐ-ًؚ-ٰٟۖ-ۜ۟-ۤۧ-۪ۨ-ܑۭܰ-݊ަ-ް߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ंऺ़ु-ै्॑-ॗॢ-ॣঁ়ু-ৄ্ৢ-ৣ৾ਁ-ਂ਼ੁ-ੂੇ-ੈੋ-੍ੑੰ-ੱੵઁ-ં઼ુ-ૅે-ૈ્ૢ-ૣૺ-૿ଁ଼ିୁ-ୄ୍ୖୢ-ୣஂீ்ఀఄా-ీె-ైొ-్ౕ-ౖౢ-ౣಁ಼ಿೆೌ-್ೢ-ೣഀ-ഁ഻-഼ു-ൄ്ൢ-ൣ්ි-ුූัิ-ฺ็-๎ັິ-ູົ-ຼ່-ໍ༘-ཱ༹༙༵༷-ཾྀ-྄྆-྇ྍ-ྗྙ-ྼ࿆ိ-ူဲ-့္-်ွ-ှၘ-ၙၞ-ၠၱ-ၴႂႅ-ႆႍႝ፝-፟ᜒ-᜔ᜲ-᜴ᝒ-ᝓᝲ-ᝳ឴-឵ិ-ួំ៉-៓៝᠋-᠍ᢅ-ᢆᢩᤠ-ᤢᤧ-ᤨᤲ᤹-᤻ᨗ-ᨘᨛᩖᩘ-ᩞ᩠ᩢᩥ-ᩬᩳ-᩿᩼᪰-᪽ᬀ-ᬃ᬴ᬶ-ᬺᬼᭂ᭫-᭳ᮀ-ᮁᮢ-ᮥᮨ-ᮩ᮫-ᮭ᯦ᯨ-ᯩᯭᯯ-ᯱᰬ-ᰳᰶ-᰷᳐-᳔᳒-᳢᳠-᳨᳭᳴᳸-᳹᷀-᷹᷻-᷿⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙〭-゚꙯ꙴ-꙽ꚞ-ꚟ꛰-꛱ꠂ꠆ꠋꠥ-ꠦ꣄-ꣅ꣠-꣱ꣿꤦ-꤭ꥇ-ꥑꦀ-ꦂ꦳ꦶ-ꦹꦼꧥꨩ-ꨮꨱ-ꨲꨵ-ꨶꩃꩌꩼꪰꪲ-ꪴꪷ-ꪸꪾ-꪿꫁ꫬ-ꫭ꫶ꯥꯨ꯭ﬞ︀-️︠-𐇽𐋠︯𐍶-𐍺𐨁-𐨃𐨅-𐨆𐨌-𐨏𐨸-𐨿𐨺𐫥-𐫦𐴤-𐽆𐴧-𐽐𑀁𑀸-𑁆𑁿-𑂁𑂳-𑂶𑂹-𑂺𑄀-𑄂𑄧-𑄫𑄭-𑅳𑄴𑆀-𑆁𑆶-𑆾𑇉-𑇌𑈯-𑈱𑈴𑈶-𑈷𑈾𑋟𑋣-𑋪𑌀-𑌁𑌻-𑌼𑍀𑍦-𑍬𑍰-𑍴𑐸-𑐿𑑂-𑑄𑑆𑑞𑒳-𑒸𑒺𑒿-𑓀𑓂-𑓃𑖲-𑖵𑖼-𑖽𑖿-𑗀𑗜-𑗝𑘳-𑘺𑘽𑘿-𑙀𑚫𑚭𑚰-𑚵𑚷𑜝-𑜟𑜢-𑜥𑜧-𑜫𑠯-𑠷𑠹-𑠺𑨁-𑨊𑨳-𑨸𑨻-𑨾𑩇𑩑-𑩖𑩙-𑩛𑪊-𑪖𑪘-𑪙𑰰-𑰶𑰸-𑰽𑰿𑲒-𑲧𑲪-𑲰𑲲-𑲳𑲵-𑲶𑴱-𑴶𑴺𑴼-𑴽𑴿-𑵅𑵇𑶐-𑶑𑶕𑶗𑻳-𑻴𖫰-𖫴𖬰-𖬶𖾏-𖾒𛲝-𛲞𝅧-𝅩𝅻-𝆂𝆅-𝆋𝆪-𝆭𝉂-𝉄𝨀-𝨶𝨻-𝩬𝩵𝪄𝪛-𝪟𝪡-𝪯𞀀-𞀆𞀈-𞀘𞀛-𞀡𞀣-𞀤𞀦-𞣐𞀪-𞣖𞥄-𞥊󠄀-󠇯ःऻा-ीॉ-ौॎ-ॏং-ঃা-ীে-ৈো-ৌৗਃਾ-ੀઃા-ીૉો-ૌଂ-ଃାୀେ-ୈୋ-ୌୗா-ிு-ூெ-ைொ-ௌௗఁ-ఃు-ౄಂ-ಃಾೀ-ೄೇ-ೈೊ-ೋೕ-ೖം-ഃാ-ീെ-ൈൊ-ൌൗං-ඃා-ෑෘ-ෟෲ-ෳ༾-༿ཿါ-ာေးျ-ြၖ-ၗၢ-ၤၧ-ၭႃ-ႄႇ-ႌႏႚ-ႜាើ-ៅះ-ៈᤣ-ᤦᤩ-ᤫᤰ-ᤱᤳ-ᤸᨙ-ᨚᩕᩗᩡᩣ-ᩤᩭ-ᩲᬄᬵᬻᬽ-ᭁᭃ-᭄ᮂᮡᮦ-ᮧ᮪ᯧᯪ-ᯬᯮ᯲-᯳ᰤ-ᰫᰴ-ᰵ᳡ᳲ-ᳳ᳷〮-〯ꠣ-ꠤꠧꢀ-ꢁꢴ-ꣃꥒ-꥓ꦃꦴ-ꦵꦺ-ꦻꦽ-꧀ꨯ-ꨰꨳ-ꨴꩍꩻꩽꫫꫮ-ꫯꫵꯣ-ꯤꯦ-ꯧꯩ-ꯪ꯬𑀀𑀂𑂂𑂰-𑂲𑂷-𑂸𑄬𑅅-𑅆𑆂𑆳-𑆵𑆿-𑇀𑈬-𑈮𑈲-𑈳𑈵𑋠-𑋢𑌂-𑌃𑌾-𑌿𑍁-𑍄𑍇-𑍈𑍋-𑍍𑍗𑍢-𑍣𑐵-𑐷𑑀-𑑁𑑅𑒰-𑒲𑒹𑒻-𑒾𑓁𑖯-𑖱𑖸-𑖻𑖾𑘰-𑘲𑘻-𑘼𑘾𑚬𑚮-𑚯𑚶𑜠-𑜡𑜦𑠬-𑠮𑠸𑨹𑩗-𑩘𑪗𑰯𑰾𑲩𑲱𑲴𑶊-𑶎𑶓-𑶔𑶖𑻵-𑻶𖽑-𖽾𝅥-𝅦𝅭-𝅲0-9٠-٩۰-۹߀-߉०-९০-৯੦-੯૦-૯୦-୯௦-௯౦-౯೦-೯൦-൯෦-෯๐-๙໐-໙༠-༩၀-၉႐-႙០-៩᠐-᠙᥆-᥏᧐-᧙᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙꘠-꘩꣐-꣙꤀-꤉꧐-꧙꧰-꧹꩐-꩙꯰-꯹０-９𐒠-𐒩𐴰-𐴹𑁦-𑁯𑃰-𑃹𑄶-𑄿𑇐-𑇙𑋰-𑋹𑑐-𑑙𑓐-𑓙𑙐-𑙙𑛀-𑛉𑜰-𑜹𑣠-𑣩𑱐-𑱙𑵐-𑵙𑶠-𑶩𖩠-𖩩𖭐-𖭙𝟎-𝟿𞥐-𞥙_‿-⁀⁔︳-︴﹍-﹏＿‌‍]|\\\\u[a-fA-F0-9]{4}))*`, NameOther, nil},\n@@ -49,6 +49,7 @@ var JavascriptRules = Rules{\n \t\t{\"`\", LiteralStringBacktick, Pop(1)},\n \t\t{`\\\\\\\\`, LiteralStringBacktick, nil},\n \t\t{\"\\\\\\\\`\", LiteralStringBacktick, nil},\n+\t\t{\"\\\\\\\\[^`\\\\\\\\]\", LiteralStringBacktick, nil},\n \t\t{`\\$\\{`, LiteralStringInterpol, Push(\"interp-inside\")},\n \t\t{`\\$`, LiteralStringBacktick, nil},\n \t\t{\"[^`\\\\\\\\$]+\", LiteralStringBacktick, nil},\n@@ -60,11 +61,11 @@ var JavascriptRules = Rules{\n }\n \n // Javascript lexer.\n-var Javascript = internal.Register(MustNewLexer(\n+var Javascript = internal.Register(MustNewLexer( // nolint: forbidigo\n \t&Config{\n \t\tName:      \"JavaScript\",\n \t\tAliases:   []string{\"js\", \"javascript\"},\n-\t\tFilenames: []string{\"*.js\", \"*.jsm\"},\n+\t\tFilenames: []string{\"*.js\", \"*.jsm\", \"*.mjs\"},\n \t\tMimeTypes: []string{\"application/javascript\", \"application/x-javascript\", \"text/x-javascript\", \"text/javascript\"},\n \t\tDotAll:    true,\n \t\tEnsureNL:  true,"
    },
    {
      "sha": "9a4a3eed18e05983d6546bfa5eeada72899d69fc",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/j/json.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/j/json.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/j/json.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/j/json.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,7 +6,7 @@ import (\n )\n \n // JSON lexer.\n-var JSON = internal.Register(MustNewLexer(\n+var JSON = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:         \"JSON\",\n \t\tAliases:      []string{\"json\"},\n@@ -15,7 +15,11 @@ var JSON = internal.Register(MustNewLexer(\n \t\tNotMultiline: true,\n \t\tDotAll:       true,\n \t},\n-\tRules{\n+\tjsonRules,\n+))\n+\n+func jsonRules() Rules {\n+\treturn Rules{\n \t\t\"whitespace\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t},\n@@ -51,5 +55,5 @@ var JSON = internal.Register(MustNewLexer(\n \t\t\"root\": {\n \t\t\tInclude(\"value\"),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "2347538d9db28fe179507f29f9dc26d966e05567",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/j/jsx.go",
      "status": "modified",
      "additions": 12,
      "deletions": 7,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/j/jsx.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/j/jsx.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/j/jsx.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -8,15 +8,19 @@ import (\n // JSX lexer.\n //\n // This was generated from https://github.com/fcurella/jsx-lexer\n-var JSX = internal.Register(MustNewLexer(\n+var JSX = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"react\",\n \t\tAliases:   []string{\"jsx\", \"react\"},\n \t\tFilenames: []string{\"*.jsx\", \"*.react\"},\n \t\tMimeTypes: []string{\"text/jsx\", \"text/typescript-jsx\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\tjsxRules,\n+))\n+\n+func jsxRules() Rules {\n+\treturn Rules{\n \t\t\"commentsandwhitespace\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`<!--`, Comment, nil},\n@@ -48,7 +52,7 @@ var JSX = internal.Register(MustNewLexer(\n \t\t\t{`[})\\].]`, Punctuation, nil},\n \t\t\t{`(for|in|while|do|break|return|continue|switch|case|default|if|else|throw|try|catch|finally|new|delete|typeof|instanceof|void|yield|this|of)\\b`, Keyword, Push(\"slashstartsregex\")},\n \t\t\t{`(var|let|with|function)\\b`, KeywordDeclaration, Push(\"slashstartsregex\")},\n-\t\t\t{`(abstract|boolean|byte|char|class|const|debugger|double|enum|export|extends|final|float|goto|implements|import|int|interface|long|native|package|private|protected|public|short|static|super|synchronized|throws|transient|volatile)\\b`, KeywordReserved, nil},\n+\t\t\t{`(abstract|async|await|boolean|byte|char|class|const|debugger|double|enum|export|extends|final|float|goto|implements|import|int|interface|long|native|package|private|protected|public|short|static|super|synchronized|throws|transient|volatile)\\b`, KeywordReserved, nil},\n \t\t\t{`(true|false|null|NaN|Infinity|undefined)\\b`, KeywordConstant, nil},\n \t\t\t{`(Array|Boolean|Date|Error|Function|Math|netscape|Number|Object|Packages|RegExp|String|Promise|Proxy|sun|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|Error|eval|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|document|this|window)\\b`, NameBuiltin, nil},\n \t\t\t{`(?:[$_A-ZÀ-ÖØ-ÞĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮİĲĴĶĹĻĽĿŁŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŸ-ŹŻŽƁ-ƂƄƆ-ƇƉ-ƋƎ-ƑƓ-ƔƖ-ƘƜ-ƝƟ-ƠƢƤƦ-ƧƩƬƮ-ƯƱ-ƳƵƷ-ƸƼǄǇǊǍǏǑǓǕǗǙǛǞǠǢǤǦǨǪǬǮǱǴǶ-ǸǺǼǾȀȂȄȆȈȊȌȎȐȒȔȖȘȚȜȞȠȢȤȦȨȪȬȮȰȲȺ-ȻȽ-ȾɁɃ-ɆɈɊɌɎͰͲͶͿΆΈ-ΊΌΎ-ΏΑ-ΡΣ-ΫϏϒ-ϔϘϚϜϞϠϢϤϦϨϪϬϮϴϷϹ-ϺϽ-ЯѠѢѤѦѨѪѬѮѰѲѴѶѸѺѼѾҀҊҌҎҐҒҔҖҘҚҜҞҠҢҤҦҨҪҬҮҰҲҴҶҸҺҼҾӀ-ӁӃӅӇӉӋӍӐӒӔӖӘӚӜӞӠӢӤӦӨӪӬӮӰӲӴӶӸӺӼӾԀԂԄԆԈԊԌԎԐԒԔԖԘԚԜԞԠԢԤԦԨԪԬԮԱ-ՖႠ-ჅჇჍᎠ-ᏵᲐ-ᲺᲽ-ᲿḀḂḄḆḈḊḌḎḐḒḔḖḘḚḜḞḠḢḤḦḨḪḬḮḰḲḴḶḸḺḼḾṀṂṄṆṈṊṌṎṐṒṔṖṘṚṜṞṠṢṤṦṨṪṬṮṰṲṴṶṸṺṼṾẀẂẄẆẈẊẌẎẐẒẔẞẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼẾỀỂỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪỬỮỰỲỴỶỸỺỼỾἈ-ἏἘ-ἝἨ-ἯἸ-ἿὈ-ὍὙὛὝὟὨ-ὯᾸ-ΆῈ-ΉῘ-ΊῨ-ῬῸ-Ώℂℇℋ-ℍℐ-ℒℕℙ-ℝℤΩℨK-ℭℰ-ℳℾ-ℿⅅↃⰀ-ⰮⱠⱢ-ⱤⱧⱩⱫⱭ-ⱰⱲⱵⱾ-ⲀⲂⲄⲆⲈⲊⲌⲎⲐⲒⲔⲖⲘⲚⲜⲞⲠⲢⲤⲦⲨⲪⲬⲮⲰⲲⲴⲶⲸⲺⲼⲾⳀⳂⳄⳆⳈⳊⳌⳎⳐⳒⳔⳖⳘⳚⳜⳞⳠⳢⳫⳭⳲꙀꙂꙄꙆꙈꙊꙌꙎꙐꙒꙔꙖꙘꙚꙜꙞꙠꙢꙤꙦꙨꙪꙬꚀꚂꚄꚆꚈꚊꚌꚎꚐꚒꚔꚖꚘꚚꜢꜤꜦꜨꜪꜬꜮꜲꜴꜶꜸꜺꜼꜾꝀꝂꝄꝆꝈꝊꝌꝎꝐꝒꝔꝖꝘꝚꝜꝞꝠꝢꝤꝦꝨꝪꝬꝮꝹꝻꝽ-ꝾꞀꞂꞄꞆꞋꞍꞐꞒꞖꞘꞚꞜꞞꞠꞢꞤꞦꞨꞪ-ꞮꞰ-ꞴꞶꞸＡ-Ｚ𐐀-𐐧𐒰-𐓓𐲀-𐲲𑢠-𑢿𖹀-𖹟𝐀-𝐙𝐴-𝑍𝑨-𝒁𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒵𝓐-𝓩𝔄-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔸-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕬-𝖅𝖠-𝖹𝗔-𝗭𝘈-𝘡𝘼-𝙕𝙰-𝚉𝚨-𝛀𝛢-𝛺𝜜-𝜴𝝖-𝝮𝞐-𝞨𝟊𞤀-𞤡a-zµß-öø-ÿāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįıĳĵķ-ĸĺļľŀłńņň-ŉŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷźżž-ƀƃƅƈƌ-ƍƒƕƙ-ƛƞơƣƥƨƪ-ƫƭưƴƶƹ-ƺƽ-ƿǆǉǌǎǐǒǔǖǘǚǜ-ǝǟǡǣǥǧǩǫǭǯ-ǰǳǵǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟȡȣȥȧȩȫȭȯȱȳ-ȹȼȿ-ɀɂɇɉɋɍɏ-ʓʕ-ʯͱͳͷͻ-ͽΐά-ώϐ-ϑϕ-ϗϙϛϝϟϡϣϥϧϩϫϭϯ-ϳϵϸϻ-ϼа-џѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎ-ӏӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯՠ-ֈა-ჺჽ-ჿᏸ-ᏽᲀ-ᲈᴀ-ᴫᵫ-ᵷᵹ-ᶚḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕ-ẝẟạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿ-ἇἐ-ἕἠ-ἧἰ-ἷὀ-ὅὐ-ὗὠ-ὧὰ-ώᾀ-ᾇᾐ-ᾗᾠ-ᾧᾰ-ᾴᾶ-ᾷιῂ-ῄῆ-ῇῐ-ΐῖ-ῗῠ-ῧῲ-ῴῶ-ῷℊℎ-ℏℓℯℴℹℼ-ℽⅆ-ⅉⅎↄⰰ-ⱞⱡⱥ-ⱦⱨⱪⱬⱱⱳ-ⱴⱶ-ⱻⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣ-ⳤⳬⳮⳳⴀ-ⴥⴧⴭꙁꙃꙅꙇꙉꙋꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛꜣꜥꜧꜩꜫꜭꜯ-ꜱꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯꝱ-ꝸꝺꝼꝿꞁꞃꞅꞇꞌꞎꞑꞓ-ꞕꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩꞯꞵꞷꞹꟺꬰ-ꭚꭠ-ꭥꭰ-ꮿﬀ-ﬆﬓ-ﬗａ-ｚ𐐨-𐑏𐓘-𐓻𐳀-𐳲𑣀-𑣟𖹠-𖹿𝐚-𝐳𝑎-𝑔𝑖-𝑧𝒂-𝒛𝒶-𝒹𝒻𝒽-𝓃𝓅-𝓏𝓪-𝔃𝔞-𝔷𝕒-𝕫𝖆-𝖟𝖺-𝗓𝗮-𝘇𝘢-𝘻𝙖-𝙯𝚊-𝚥𝛂-𝛚𝛜-𝛡𝛼-𝜔𝜖-𝜛𝜶-𝝎𝝐-𝝕𝝰-𝞈𝞊-𝞏𝞪-𝟂𝟄-𝟉𝟋𞤢-𞥃ǅǈǋǲᾈ-ᾏᾘ-ᾟᾨ-ᾯᾼῌῼʰ-ˁˆ-ˑˠ-ˤˬˮʹͺՙـۥ-ۦߴ-ߵߺࠚࠤࠨॱๆໆჼៗᡃᪧᱸ-ᱽᴬ-ᵪᵸᶛ-ᶿⁱⁿₐ-ₜⱼ-ⱽⵯⸯ々〱-〵〻ゝ-ゞー-ヾꀕꓸ-ꓽꘌꙿꚜ-ꚝꜗ-ꜟꝰꞈꟸ-ꟹꧏꧦꩰꫝꫳ-ꫴꭜ-ꭟｰﾞ-ﾟ𖭀-𖭃𖾓-𖾟𖿠-𖿡ªºƻǀ-ǃʔא-תׯ-ײؠ-ؿف-يٮ-ٯٱ-ۓەۮ-ۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪࠀ-ࠕࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॲ-ঀঅ-ঌএ-ঐও-নপ-রলশ-হঽৎড়-ঢ়য়-ৡৰ-ৱৼਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હઽૐૠ-ૡૹଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହଽଡ଼-ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠ-ౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠ-ೡೱ-ೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะา-ำเ-ๅກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ະາ-ຳຽເ-ໄໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥ-ၦၮ-ၰၵ-ႁႎᄀ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛱ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៜᠠ-ᡂᡄ-ᡸᢀ-ᢄᢇ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮ-ᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱷᳩ-ᳬᳮ-ᳱᳵ-ᳶℵ-ℸⴰ-ⵧⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ〆〼ぁ-ゖゟァ-ヺヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꀔꀖ-ꒌꓐ-ꓷꔀ-ꘋꘐ-ꘟꘪ-ꘫꙮꚠ-ꛥꞏꟷꟻ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽ-ꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧠ-ꧤꧧ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩯꩱ-ꩶꩺꩾ-ꪯꪱꪵ-ꪶꪹ-ꪽꫀꫂꫛ-ꫜꫠ-ꫪꫲꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎יִײַ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼｦ-ｯｱ-ﾝﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐊀-𐊜𐊠-𐋐𐌀-𐌟𐌭-𐍀𐍂-𐍉𐍐-𐍵𐎀-𐎝𐎠-𐏃𐏈-𐏏𐑐-𐒝𐔀-𐔧𐔰-𐕣𐘀-𐜶𐝀-𐝕𐝠-𐝧𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐡠-𐡶𐢀-𐢞𐣠-𐣲𐣴-𐣵𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀𐨐-𐨓𐨕-𐨗𐨙-𐨵𐩠-𐩼𐪀-𐪜𐫀-𐫇𐫉-𐫤𐬀-𐬵𐭀-𐭕𐭠-𐭲𐮀-𐮑𐰀-𐱈𐴀-𐴣𐼀-𐼜𐼧𐼰-𐽅𑀃-𑀷𑂃-𑂯𑃐-𑃨𑄃-𑄦𑅄𑅐-𑅲𑅶𑆃-𑆲𑇁-𑇄𑇚𑇜𑈀-𑈑𑈓-𑈫𑊀-𑊆𑊈𑊊-𑊍𑊏-𑊝𑊟-𑊨𑊰-𑋞𑌅-𑌌𑌏-𑌐𑌓-𑌨𑌪-𑌰𑌲-𑌳𑌵-𑌹𑌽𑍐𑍝-𑍡𑐀-𑐴𑑇-𑑊𑒀-𑒯𑓄-𑓅𑓇𑖀-𑖮𑗘-𑗛𑘀-𑘯𑙄𑚀-𑚪𑜀-𑜚𑠀-𑠫𑣿𑨀𑨋-𑨲𑨺𑩐𑩜-𑪃𑪆-𑪉𑪝𑫀-𑫸𑰀-𑰈𑰊-𑰮𑱀𑱲-𑲏𑴀-𑴆𑴈-𑴉𑴋-𑴰𑵆𑵠-𑵥𑵧-𑵨𑵪-𑶉𑶘𑻠-𑻲𒀀-𒎙𒒀-𒕃𓀀-𓐮𔐀-𔙆𖠀-𖨸𖩀-𖩞𖫐-𖫭𖬀-𖬯𖭣-𖭷𖭽-𖮏𖼀-𖽄𖽐𗀀-𘟱𘠀-𘫲𛀀-𛄞𛅰-𛋻𛰀-𛱪𛱰-𛱼𛲀-𛲈𛲐-𛲙𞠀-𞣄𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝𫠠-𬺡𬺰-𮯠丽-𪘀ᛮ-ᛰⅠ-ↂↅ-ↈ〇〡-〩〸-〺ꛦ-ꛯ𐅀-𐅴𐍁𐍊𐏑-𐏕𒐀-𒑮]|\\\\u[a-fA-F0-9]{4})(?:(?:[$A-ZÀ-ÖØ-ÞĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮİĲĴĶĹĻĽĿŁŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŸ-ŹŻŽƁ-ƂƄƆ-ƇƉ-ƋƎ-ƑƓ-ƔƖ-ƘƜ-ƝƟ-ƠƢƤƦ-ƧƩƬƮ-ƯƱ-ƳƵƷ-ƸƼǄǇǊǍǏǑǓǕǗǙǛǞǠǢǤǦǨǪǬǮǱǴǶ-ǸǺǼǾȀȂȄȆȈȊȌȎȐȒȔȖȘȚȜȞȠȢȤȦȨȪȬȮȰȲȺ-ȻȽ-ȾɁɃ-ɆɈɊɌɎͰͲͶͿΆΈ-ΊΌΎ-ΏΑ-ΡΣ-ΫϏϒ-ϔϘϚϜϞϠϢϤϦϨϪϬϮϴϷϹ-ϺϽ-ЯѠѢѤѦѨѪѬѮѰѲѴѶѸѺѼѾҀҊҌҎҐҒҔҖҘҚҜҞҠҢҤҦҨҪҬҮҰҲҴҶҸҺҼҾӀ-ӁӃӅӇӉӋӍӐӒӔӖӘӚӜӞӠӢӤӦӨӪӬӮӰӲӴӶӸӺӼӾԀԂԄԆԈԊԌԎԐԒԔԖԘԚԜԞԠԢԤԦԨԪԬԮԱ-ՖႠ-ჅჇჍᎠ-ᏵᲐ-ᲺᲽ-ᲿḀḂḄḆḈḊḌḎḐḒḔḖḘḚḜḞḠḢḤḦḨḪḬḮḰḲḴḶḸḺḼḾṀṂṄṆṈṊṌṎṐṒṔṖṘṚṜṞṠṢṤṦṨṪṬṮṰṲṴṶṸṺṼṾẀẂẄẆẈẊẌẎẐẒẔẞẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼẾỀỂỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪỬỮỰỲỴỶỸỺỼỾἈ-ἏἘ-ἝἨ-ἯἸ-ἿὈ-ὍὙὛὝὟὨ-ὯᾸ-ΆῈ-ΉῘ-ΊῨ-ῬῸ-Ώℂℇℋ-ℍℐ-ℒℕℙ-ℝℤΩℨK-ℭℰ-ℳℾ-ℿⅅↃⰀ-ⰮⱠⱢ-ⱤⱧⱩⱫⱭ-ⱰⱲⱵⱾ-ⲀⲂⲄⲆⲈⲊⲌⲎⲐⲒⲔⲖⲘⲚⲜⲞⲠⲢⲤⲦⲨⲪⲬⲮⲰⲲⲴⲶⲸⲺⲼⲾⳀⳂⳄⳆⳈⳊⳌⳎⳐⳒⳔⳖⳘⳚⳜⳞⳠⳢⳫⳭⳲꙀꙂꙄꙆꙈꙊꙌꙎꙐꙒꙔꙖꙘꙚꙜꙞꙠꙢꙤꙦꙨꙪꙬꚀꚂꚄꚆꚈꚊꚌꚎꚐꚒꚔꚖꚘꚚꜢꜤꜦꜨꜪꜬꜮꜲꜴꜶꜸꜺꜼꜾꝀꝂꝄꝆꝈꝊꝌꝎꝐꝒꝔꝖꝘꝚꝜꝞꝠꝢꝤꝦꝨꝪꝬꝮꝹꝻꝽ-ꝾꞀꞂꞄꞆꞋꞍꞐꞒꞖꞘꞚꞜꞞꞠꞢꞤꞦꞨꞪ-ꞮꞰ-ꞴꞶꞸＡ-Ｚ𐐀-𐐧𐒰-𐓓𐲀-𐲲𑢠-𑢿𖹀-𖹟𝐀-𝐙𝐴-𝑍𝑨-𝒁𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒵𝓐-𝓩𝔄-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔸-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕬-𝖅𝖠-𝖹𝗔-𝗭𝘈-𝘡𝘼-𝙕𝙰-𝚉𝚨-𝛀𝛢-𝛺𝜜-𝜴𝝖-𝝮𝞐-𝞨𝟊𞤀-𞤡a-zµß-öø-ÿāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįıĳĵķ-ĸĺļľŀłńņň-ŉŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷźżž-ƀƃƅƈƌ-ƍƒƕƙ-ƛƞơƣƥƨƪ-ƫƭưƴƶƹ-ƺƽ-ƿǆǉǌǎǐǒǔǖǘǚǜ-ǝǟǡǣǥǧǩǫǭǯ-ǰǳǵǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟȡȣȥȧȩȫȭȯȱȳ-ȹȼȿ-ɀɂɇɉɋɍɏ-ʓʕ-ʯͱͳͷͻ-ͽΐά-ώϐ-ϑϕ-ϗϙϛϝϟϡϣϥϧϩϫϭϯ-ϳϵϸϻ-ϼа-џѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎ-ӏӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯՠ-ֈა-ჺჽ-ჿᏸ-ᏽᲀ-ᲈᴀ-ᴫᵫ-ᵷᵹ-ᶚḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕ-ẝẟạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿ-ἇἐ-ἕἠ-ἧἰ-ἷὀ-ὅὐ-ὗὠ-ὧὰ-ώᾀ-ᾇᾐ-ᾗᾠ-ᾧᾰ-ᾴᾶ-ᾷιῂ-ῄῆ-ῇῐ-ΐῖ-ῗῠ-ῧῲ-ῴῶ-ῷℊℎ-ℏℓℯℴℹℼ-ℽⅆ-ⅉⅎↄⰰ-ⱞⱡⱥ-ⱦⱨⱪⱬⱱⱳ-ⱴⱶ-ⱻⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣ-ⳤⳬⳮⳳⴀ-ⴥⴧⴭꙁꙃꙅꙇꙉꙋꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛꜣꜥꜧꜩꜫꜭꜯ-ꜱꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯꝱ-ꝸꝺꝼꝿꞁꞃꞅꞇꞌꞎꞑꞓ-ꞕꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩꞯꞵꞷꞹꟺꬰ-ꭚꭠ-ꭥꭰ-ꮿﬀ-ﬆﬓ-ﬗａ-ｚ𐐨-𐑏𐓘-𐓻𐳀-𐳲𑣀-𑣟𖹠-𖹿𝐚-𝐳𝑎-𝑔𝑖-𝑧𝒂-𝒛𝒶-𝒹𝒻𝒽-𝓃𝓅-𝓏𝓪-𝔃𝔞-𝔷𝕒-𝕫𝖆-𝖟𝖺-𝗓𝗮-𝘇𝘢-𝘻𝙖-𝙯𝚊-𝚥𝛂-𝛚𝛜-𝛡𝛼-𝜔𝜖-𝜛𝜶-𝝎𝝐-𝝕𝝰-𝞈𝞊-𝞏𝞪-𝟂𝟄-𝟉𝟋𞤢-𞥃ǅǈǋǲᾈ-ᾏᾘ-ᾟᾨ-ᾯᾼῌῼʰ-ˁˆ-ˑˠ-ˤˬˮʹͺՙـۥ-ۦߴ-ߵߺࠚࠤࠨॱๆໆჼៗᡃᪧᱸ-ᱽᴬ-ᵪᵸᶛ-ᶿⁱⁿₐ-ₜⱼ-ⱽⵯⸯ々〱-〵〻ゝ-ゞー-ヾꀕꓸ-ꓽꘌꙿꚜ-ꚝꜗ-ꜟꝰꞈꟸ-ꟹꧏꧦꩰꫝꫳ-ꫴꭜ-ꭟｰﾞ-ﾟ𖭀-𖭃𖾓-𖾟𖿠-𖿡ªºƻǀ-ǃʔא-תׯ-ײؠ-ؿف-يٮ-ٯٱ-ۓەۮ-ۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪࠀ-ࠕࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॲ-ঀঅ-ঌএ-ঐও-নপ-রলশ-হঽৎড়-ঢ়য়-ৡৰ-ৱৼਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હઽૐૠ-ૡૹଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହଽଡ଼-ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠ-ౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠ-ೡೱ-ೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะา-ำเ-ๅກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ະາ-ຳຽເ-ໄໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥ-ၦၮ-ၰၵ-ႁႎᄀ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛱ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៜᠠ-ᡂᡄ-ᡸᢀ-ᢄᢇ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮ-ᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱷᳩ-ᳬᳮ-ᳱᳵ-ᳶℵ-ℸⴰ-ⵧⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ〆〼ぁ-ゖゟァ-ヺヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꀔꀖ-ꒌꓐ-ꓷꔀ-ꘋꘐ-ꘟꘪ-ꘫꙮꚠ-ꛥꞏꟷꟻ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽ-ꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧠ-ꧤꧧ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩯꩱ-ꩶꩺꩾ-ꪯꪱꪵ-ꪶꪹ-ꪽꫀꫂꫛ-ꫜꫠ-ꫪꫲꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎יִײַ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼｦ-ｯｱ-ﾝﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐊀-𐊜𐊠-𐋐𐌀-𐌟𐌭-𐍀𐍂-𐍉𐍐-𐍵𐎀-𐎝𐎠-𐏃𐏈-𐏏𐑐-𐒝𐔀-𐔧𐔰-𐕣𐘀-𐜶𐝀-𐝕𐝠-𐝧𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐡠-𐡶𐢀-𐢞𐣠-𐣲𐣴-𐣵𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀𐨐-𐨓𐨕-𐨗𐨙-𐨵𐩠-𐩼𐪀-𐪜𐫀-𐫇𐫉-𐫤𐬀-𐬵𐭀-𐭕𐭠-𐭲𐮀-𐮑𐰀-𐱈𐴀-𐴣𐼀-𐼜𐼧𐼰-𐽅𑀃-𑀷𑂃-𑂯𑃐-𑃨𑄃-𑄦𑅄𑅐-𑅲𑅶𑆃-𑆲𑇁-𑇄𑇚𑇜𑈀-𑈑𑈓-𑈫𑊀-𑊆𑊈𑊊-𑊍𑊏-𑊝𑊟-𑊨𑊰-𑋞𑌅-𑌌𑌏-𑌐𑌓-𑌨𑌪-𑌰𑌲-𑌳𑌵-𑌹𑌽𑍐𑍝-𑍡𑐀-𑐴𑑇-𑑊𑒀-𑒯𑓄-𑓅𑓇𑖀-𑖮𑗘-𑗛𑘀-𑘯𑙄𑚀-𑚪𑜀-𑜚𑠀-𑠫𑣿𑨀𑨋-𑨲𑨺𑩐𑩜-𑪃𑪆-𑪉𑪝𑫀-𑫸𑰀-𑰈𑰊-𑰮𑱀𑱲-𑲏𑴀-𑴆𑴈-𑴉𑴋-𑴰𑵆𑵠-𑵥𑵧-𑵨𑵪-𑶉𑶘𑻠-𑻲𒀀-𒎙𒒀-𒕃𓀀-𓐮𔐀-𔙆𖠀-𖨸𖩀-𖩞𖫐-𖫭𖬀-𖬯𖭣-𖭷𖭽-𖮏𖼀-𖽄𖽐𗀀-𘟱𘠀-𘫲𛀀-𛄞𛅰-𛋻𛰀-𛱪𛱰-𛱼𛲀-𛲈𛲐-𛲙𞠀-𞣄𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝𫠠-𬺡𬺰-𮯠丽-𪘀ᛮ-ᛰⅠ-ↂↅ-ↈ〇〡-〩〸-〺ꛦ-ꛯ𐅀-𐅴𐍁𐍊𐏑-𐏕𒐀-𒑮̀-ͯ҃-֑҇-ֽֿׁ-ׂׄ-ׇׅؐ-ًؚ-ٰٟۖ-ۜ۟-ۤۧ-۪ۨ-ܑۭܰ-݊ަ-ް߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ंऺ़ु-ै्॑-ॗॢ-ॣঁ়ু-ৄ্ৢ-ৣ৾ਁ-ਂ਼ੁ-ੂੇ-ੈੋ-੍ੑੰ-ੱੵઁ-ં઼ુ-ૅે-ૈ્ૢ-ૣૺ-૿ଁ଼ିୁ-ୄ୍ୖୢ-ୣஂீ்ఀఄా-ీె-ైొ-్ౕ-ౖౢ-ౣಁ಼ಿೆೌ-್ೢ-ೣഀ-ഁ഻-഼ു-ൄ്ൢ-ൣ්ි-ුූัิ-ฺ็-๎ັິ-ູົ-ຼ່-ໍ༘-ཱ༹༙༵༷-ཾྀ-྄྆-྇ྍ-ྗྙ-ྼ࿆ိ-ူဲ-့္-်ွ-ှၘ-ၙၞ-ၠၱ-ၴႂႅ-ႆႍႝ፝-፟ᜒ-᜔ᜲ-᜴ᝒ-ᝓᝲ-ᝳ឴-឵ិ-ួំ៉-៓៝᠋-᠍ᢅ-ᢆᢩᤠ-ᤢᤧ-ᤨᤲ᤹-᤻ᨗ-ᨘᨛᩖᩘ-ᩞ᩠ᩢᩥ-ᩬᩳ-᩿᩼᪰-᪽ᬀ-ᬃ᬴ᬶ-ᬺᬼᭂ᭫-᭳ᮀ-ᮁᮢ-ᮥᮨ-ᮩ᮫-ᮭ᯦ᯨ-ᯩᯭᯯ-ᯱᰬ-ᰳᰶ-᰷᳐-᳔᳒-᳢᳠-᳨᳭᳴᳸-᳹᷀-᷹᷻-᷿⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙〭-゚꙯ꙴ-꙽ꚞ-ꚟ꛰-꛱ꠂ꠆ꠋꠥ-ꠦ꣄-ꣅ꣠-꣱ꣿꤦ-꤭ꥇ-ꥑꦀ-ꦂ꦳ꦶ-ꦹꦼꧥꨩ-ꨮꨱ-ꨲꨵ-ꨶꩃꩌꩼꪰꪲ-ꪴꪷ-ꪸꪾ-꪿꫁ꫬ-ꫭ꫶ꯥꯨ꯭ﬞ︀-️︠-𐇽𐋠︯𐍶-𐍺𐨁-𐨃𐨅-𐨆𐨌-𐨏𐨸-𐨿𐨺𐫥-𐫦𐴤-𐽆𐴧-𐽐𑀁𑀸-𑁆𑁿-𑂁𑂳-𑂶𑂹-𑂺𑄀-𑄂𑄧-𑄫𑄭-𑅳𑄴𑆀-𑆁𑆶-𑆾𑇉-𑇌𑈯-𑈱𑈴𑈶-𑈷𑈾𑋟𑋣-𑋪𑌀-𑌁𑌻-𑌼𑍀𑍦-𑍬𑍰-𑍴𑐸-𑐿𑑂-𑑄𑑆𑑞𑒳-𑒸𑒺𑒿-𑓀𑓂-𑓃𑖲-𑖵𑖼-𑖽𑖿-𑗀𑗜-𑗝𑘳-𑘺𑘽𑘿-𑙀𑚫𑚭𑚰-𑚵𑚷𑜝-𑜟𑜢-𑜥𑜧-𑜫𑠯-𑠷𑠹-𑠺𑨁-𑨊𑨳-𑨸𑨻-𑨾𑩇𑩑-𑩖𑩙-𑩛𑪊-𑪖𑪘-𑪙𑰰-𑰶𑰸-𑰽𑰿𑲒-𑲧𑲪-𑲰𑲲-𑲳𑲵-𑲶𑴱-𑴶𑴺𑴼-𑴽𑴿-𑵅𑵇𑶐-𑶑𑶕𑶗𑻳-𑻴𖫰-𖫴𖬰-𖬶𖾏-𖾒𛲝-𛲞𝅧-𝅩𝅻-𝆂𝆅-𝆋𝆪-𝆭𝉂-𝉄𝨀-𝨶𝨻-𝩬𝩵𝪄𝪛-𝪟𝪡-𝪯𞀀-𞀆𞀈-𞀘𞀛-𞀡𞀣-𞀤𞀦-𞣐𞀪-𞣖𞥄-𞥊󠄀-󠇯ःऻा-ीॉ-ौॎ-ॏং-ঃা-ীে-ৈো-ৌৗਃਾ-ੀઃા-ીૉો-ૌଂ-ଃାୀେ-ୈୋ-ୌୗா-ிு-ூெ-ைொ-ௌௗఁ-ఃు-ౄಂ-ಃಾೀ-ೄೇ-ೈೊ-ೋೕ-ೖം-ഃാ-ീെ-ൈൊ-ൌൗං-ඃා-ෑෘ-ෟෲ-ෳ༾-༿ཿါ-ာေးျ-ြၖ-ၗၢ-ၤၧ-ၭႃ-ႄႇ-ႌႏႚ-ႜាើ-ៅះ-ៈᤣ-ᤦᤩ-ᤫᤰ-ᤱᤳ-ᤸᨙ-ᨚᩕᩗᩡᩣ-ᩤᩭ-ᩲᬄᬵᬻᬽ-ᭁᭃ-᭄ᮂᮡᮦ-ᮧ᮪ᯧᯪ-ᯬᯮ᯲-᯳ᰤ-ᰫᰴ-ᰵ᳡ᳲ-ᳳ᳷〮-〯ꠣ-ꠤꠧꢀ-ꢁꢴ-ꣃꥒ-꥓ꦃꦴ-ꦵꦺ-ꦻꦽ-꧀ꨯ-ꨰꨳ-ꨴꩍꩻꩽꫫꫮ-ꫯꫵꯣ-ꯤꯦ-ꯧꯩ-ꯪ꯬𑀀𑀂𑂂𑂰-𑂲𑂷-𑂸𑄬𑅅-𑅆𑆂𑆳-𑆵𑆿-𑇀𑈬-𑈮𑈲-𑈳𑈵𑋠-𑋢𑌂-𑌃𑌾-𑌿𑍁-𑍄𑍇-𑍈𑍋-𑍍𑍗𑍢-𑍣𑐵-𑐷𑑀-𑑁𑑅𑒰-𑒲𑒹𑒻-𑒾𑓁𑖯-𑖱𑖸-𑖻𑖾𑘰-𑘲𑘻-𑘼𑘾𑚬𑚮-𑚯𑚶𑜠-𑜡𑜦𑠬-𑠮𑠸𑨹𑩗-𑩘𑪗𑰯𑰾𑲩𑲱𑲴𑶊-𑶎𑶓-𑶔𑶖𑻵-𑻶𖽑-𖽾𝅥-𝅦𝅭-𝅲0-9٠-٩۰-۹߀-߉०-९০-৯੦-੯૦-૯୦-୯௦-௯౦-౯೦-೯൦-൯෦-෯๐-๙໐-໙༠-༩၀-၉႐-႙០-៩᠐-᠙᥆-᥏᧐-᧙᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙꘠-꘩꣐-꣙꤀-꤉꧐-꧙꧰-꧹꩐-꩙꯰-꯹０-９𐒠-𐒩𐴰-𐴹𑁦-𑁯𑃰-𑃹𑄶-𑄿𑇐-𑇙𑋰-𑋹𑑐-𑑙𑓐-𑓙𑙐-𑙙𑛀-𑛉𑜰-𑜹𑣠-𑣩𑱐-𑱙𑵐-𑵙𑶠-𑶩𖩠-𖩩𖭐-𖭙𝟎-𝟿𞥐-𞥙_‿-⁀⁔︳-︴﹍-﹏＿‌‍]|\\\\u[a-fA-F0-9]{4}))*`, NameOther, nil},\n@@ -69,8 +73,9 @@ var JSX = internal.Register(MustNewLexer(\n \t\t\tInclude(\"root\"),\n \t\t},\n \t\t\"jsx\": {\n-\t\t\t{`(<)([\\w]+)`, ByGroups(Punctuation, NameTag), Push(\"tag\")},\n-\t\t\t{`(<)(/)([\\w]+)(>)`, ByGroups(Punctuation, Punctuation, NameTag, Punctuation), nil},\n+\t\t\t{`(<)(/?)(>)`, ByGroups(Punctuation, Punctuation, Punctuation), nil},\n+\t\t\t{`(<)([\\w\\.]+)`, ByGroups(Punctuation, NameTag), Push(\"tag\")},\n+\t\t\t{`(<)(/)([\\w\\.]+)(>)`, ByGroups(Punctuation, Punctuation, NameTag, Punctuation), nil},\n \t\t},\n \t\t\"tag\": {\n \t\t\t{`\\s+`, Text, nil},\n@@ -90,5 +95,5 @@ var JSX = internal.Register(MustNewLexer(\n \t\t\t{`}`, Punctuation, Pop(1)},\n \t\t\tInclude(\"root\"),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "6ea954e4fed2258fa5e9ee452015a32af88d513e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/j/julia.go",
      "status": "modified",
      "additions": 92,
      "deletions": 53,
      "changes": 145,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/j/julia.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/j/julia.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/j/julia.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,90 +6,129 @@ import (\n )\n \n // Julia lexer.\n-var Julia = internal.Register(MustNewLexer(\n+var Julia = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Julia\",\n \t\tAliases:   []string{\"julia\", \"jl\"},\n \t\tFilenames: []string{\"*.jl\"},\n \t\tMimeTypes: []string{\"text/x-julia\", \"application/x-julia\"},\n \t},\n-\tRules{\n+\tjuliaRules,\n+))\n+\n+func juliaRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\n`, Text, nil},\n \t\t\t{`[^\\S\\n]+`, Text, nil},\n \t\t\t{`#=`, CommentMultiline, Push(\"blockcomment\")},\n \t\t\t{`#.*$`, Comment, nil},\n-\t\t\t{`[\\[\\]{}(),;]`, Punctuation, nil},\n-\t\t\t{`in\\b`, KeywordPseudo, nil},\n-\t\t\t{`isa\\b`, KeywordPseudo, nil},\n-\t\t\t{`(true|false)\\b`, KeywordConstant, nil},\n-\t\t\t{`(local|global|const)\\b`, KeywordDeclaration, nil},\n-\t\t\t{Words(``, `\\b`, `function`, `abstract type`, `primitive type`, `baremodule`, `begin`, `bitstype`, `break`, `catch`, `ccall`, `continue`, `do`, `else`, `elseif`, `end`, `export`, `finally`, `for`, `if`, `import`, `let`, `macro`, `module`, `mutable`, `quote`, `return`, `struct`, `try`, `using`, `while`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `ASCIIString`, `AbstractArray`, `AbstractChannel`, `AbstractDict`, `AbstractFloat`, `AbstractMatrix`, `AbstractRNG`, `AbstractSparseArray`, `AbstractSparseMatrix`, `AbstractSparseVector`, `AbstractString`, `AbstractVecOrMat`, `AbstractVector`, `Any`, `ArgumentError`, `Array`, `AssertionError`, `Base64DecodePipe`, `Base64EncodePipe`, `Bidiagonal`, `BigFloat`, `BigInt`, `BitArray`, `BitMatrix`, `BitVector`, `Bool`, `BoundsError`, `Box`, `BufferStream`, `CapturedException`, `CartesianIndex`, `CartesianRange`, `Cchar`, `Cdouble`, `Cfloat`, `Channel`, `Char`, `Cint`, `Cintmax_t`, `Clong`, `Clonglong`, `ClusterManager`, `Cmd`, `Coff_t`, `Colon`, `Complex`, `Complex128`, `Complex32`, `Complex64`, `CompositeException`, `Condition`, `Cptrdiff_t`, `Cshort`, `Csize_t`, `Cssize_t`, `Cstring`, `Cuchar`, `Cuint`, `Cuintmax_t`, `Culong`, `Culonglong`, `Cushort`, `Cwchar_t`, `Cwstring`, `DataType`, `Date`, `DateTime`, `DenseArray`, `DenseMatrix`, `DenseVecOrMat`, `DenseVector`, `Diagonal`, `Dict`, `DimensionMismatch`, `Dims`, `DirectIndexString`, `Display`, `DivideError`, `DomainError`, `EOFError`, `EachLine`, `Enum`, `Enumerate`, `ErrorException`, `Exception`, `Expr`, `Factorization`, `FileMonitor`, `FileOffset`, `Filter`, `Float16`, `Float32`, `Float64`, `FloatRange`, `Function`, `GenSym`, `GlobalRef`, `GotoNode`, `HTML`, `Hermitian`, `IO`, `IOBuffer`, `IOStream`, `IPv4`, `IPv6`, `InexactError`, `InitError`, `Int`, `Int128`, `Int16`, `Int32`, `Int64`, `Int8`, `IntSet`, `Integer`, `InterruptException`, `IntrinsicFunction`, `InvalidStateException`, `Irrational`, `KeyError`, `LabelNode`, `LambdaStaticData`, `LinSpace`, `LineNumberNode`, `LoadError`, `LocalProcess`, `LowerTriangular`, `MIME`, `Matrix`, `MersenneTwister`, `Method`, `MethodError`, `MethodTable`, `Module`, `NTuple`, `NewvarNode`, `NullException`, `Nullable`, `Number`, `ObjectIdDict`, `OrdinalRange`, `OutOfMemoryError`, `OverflowError`, `Pair`, `ParseError`, `PartialQuickSort`, `Pipe`, `PollingFileWatcher`, `ProcessExitedException`, `ProcessGroup`, `Ptr`, `QuoteNode`, `RandomDevice`, `Range`, `Rational`, `RawFD`, `ReadOnlyMemoryError`, `Real`, `ReentrantLock`, `Ref`, `Regex`, `RegexMatch`, `RemoteException`, `RemoteRef`, `RepString`, `RevString`, `RopeString`, `RoundingMode`, `SegmentationFault`, `SerializationState`, `Set`, `SharedArray`, `SharedMatrix`, `SharedVector`, `Signed`, `SimpleVector`, `SparseMatrixCSC`, `StackOverflowError`, `StatStruct`, `StepRange`, `StridedArray`, `StridedMatrix`, `StridedVecOrMat`, `StridedVector`, `SubArray`, `SubString`, `SymTridiagonal`, `Symbol`, `SymbolNode`, `Symmetric`, `SystemError`, `TCPSocket`, `Task`, `Text`, `TextDisplay`, `Timer`, `TopNode`, `Tridiagonal`, `Tuple`, `Type`, `TypeConstructor`, `TypeError`, `TypeName`, `TypeVar`, `UDPSocket`, `UInt`, `UInt128`, `UInt16`, `UInt32`, `UInt64`, `UInt8`, `UTF16String`, `UTF32String`, `UTF8String`, `UndefRefError`, `UndefVarError`, `UnicodeError`, `UniformScaling`, `Union`, `UnitRange`, `Unsigned`, `UpperTriangular`, `Val`, `Vararg`, `VecOrMat`, `Vector`, `VersionNumber`, `Void`, `WString`, `WeakKeyDict`, `WeakRef`, `WorkerConfig`, `Zip`), KeywordType, nil},\n-\t\t\t{Words(``, `\\b`, `ARGS`, `CPU_CORES`, `C_NULL`, `DevNull`, `ENDIAN_BOM`, `ENV`, `I`, `Inf`, `Inf16`, `Inf32`, `Inf64`, `InsertionSort`, `JULIA_HOME`, `LOAD_PATH`, `MergeSort`, `NaN`, `NaN16`, `NaN32`, `NaN64`, `OS_NAME`, `QuickSort`, `RoundDown`, `RoundFromZero`, `RoundNearest`, `RoundNearestTiesAway`, `RoundNearestTiesUp`, `RoundToZero`, `RoundUp`, `STDERR`, `STDIN`, `STDOUT`, `VERSION`, `WORD_SIZE`, `catalan`, `e`, `eu`, `eulergamma`, `golden`, `im`, `nothing`, `pi`, `γ`, `π`, `φ`), NameBuiltin, nil},\n-\t\t\t{Words(``, ``, `=`, `:=`, `+=`, `-=`, `*=`, `/=`, `//=`, `.//=`, `.*=`, `./=`, `\\=`, `.\\=`, `^=`, `.^=`, `÷=`, `.÷=`, `%=`, `.%=`, `|=`, `&=`, `$=`, `=>`, `<<=`, `>>=`, `>>>=`, `~`, `.+=`, `.-=`, `?`, `--`, `-->`, `||`, `&&`, `>`, `<`, `>=`, `≥`, `<=`, `≤`, `==`, `===`, `≡`, `!=`, `≠`, `!==`, `≢`, `.>`, `.<`, `.>=`, `.≥`, `.<=`, `.≤`, `.==`, `.!=`, `.≠`, `.=`, `.!`, `<:`, `>:`, `∈`, `∉`, `∋`, `∌`, `⊆`, `⊈`, `⊂`, `⊄`, `⊊`, `|>`, `<|`, `:`, `+`, `-`, `.+`, `.-`, `|`, `∪`, `$`, `<<`, `>>`, `>>>`, `.<<`, `.>>`, `.>>>`, `*`, `/`, `./`, `÷`, `.÷`, `%`, `⋅`, `.%`, `.*`, `\\`, `.\\`, `&`, `∩`, `//`, `.//`, `^`, `.^`, `::`, `.`, `+`, `-`, `!`, `√`, `∛`, `∜`), Operator, nil},\n+\t\t\t{`[\\[\\](),;]`, Punctuation, nil},\n+\t\t\t{`((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))(\\s*)(:)((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))`, ByGroups(Name, Text, Operator, Name), nil},\n+\t\t\t{`(?<![\\]):<>\\d.])(:(?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))`, LiteralStringSymbol, nil},\n+\t\t\t{`(?<=::)(\\s*)((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))\\b(?![(\\[])`, ByGroups(Text, KeywordType), nil},\n+\t\t\t{`((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))(\\s*)([<>]:)(\\s*)((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))\\b(?![(\\[])`, ByGroups(KeywordType, Text, Operator, Text, KeywordType), nil},\n+\t\t\t{`([<>]:)(\\s*)((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))\\b(?![(\\[])`, ByGroups(Operator, Text, KeywordType), nil},\n+\t\t\t{`\\b((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))(\\s*)([<>]:)`, ByGroups(KeywordType, Text, Operator), nil},\n+\t\t\t{Words(``, `[²³¹ʰʲʳʷʸˡˢˣᴬᴮᴰᴱᴳᴴᴵᴶᴷᴸᴹᴺᴼᴾᴿᵀᵁᵂᵃᵇᵈᵉᵍᵏᵐᵒᵖᵗᵘᵛᵝᵞᵟᵠᵡᵢᵣᵤᵥᵦᵧᵨᵩᵪᶜᶠᶥᶦᶫᶰᶸᶻᶿ′″‴‵‶‷⁗⁰ⁱ⁴⁵⁶⁷⁸⁹⁺⁻⁼⁽⁾ⁿ₀₁₂₃₄₅₆₇₈₉₊₋₌₍₎ₐₑₒₓₕₖₗₘₙₚₛₜⱼⱽ]*`, `->`, `:=`, `$=`, `?`, `||`, `&&`, `:`, `$`, `::`, `=`, `+=`, `-=`, `*=`, `/=`, `//=`, `\\=`, `^=`, `÷=`, `%=`, `<<=`, `>>=`, `>>>=`, `|=`, `&=`, `⊻=`, `≔`, `⩴`, `≕'`, `~`, `=>`, `→`, `↔`, `↚`, `↛`, `↞`, `↠`, `↢`, `↣`, `↦`, `↤`, `↮`, `⇎`, `⇍`, `⇏`, `⇐`, `⇒`, `⇔`, `⇴`, `⇶`, `⇷`, `⇸`, `⇹`, `⇺`, `⇻`, `⇼`, `⇽`, `⇾`, `⇿`, `⟵`, `⟶`, `⟷`, `⟹`, `⟺`, `⟻`, `⟼`, `⟽`, `⟾`, `⟿`, `⤀`, `⤁`, `⤂`, `⤃`, `⤄`, `⤅`, `⤆`, `⤇`, `⤌`, `⤍`, `⤎`, `⤏`, `⤐`, `⤑`, `⤔`, `⤕`, `⤖`, `⤗`, `⤘`, `⤝`, `⤞`, `⤟`, `⤠`, `⥄`, `⥅`, `⥆`, `⥇`, `⥈`, `⥊`, `⥋`, `⥎`, `⥐`, `⥒`, `⥓`, `⥖`, `⥗`, `⥚`, `⥛`, `⥞`, `⥟`, `⥢`, `⥤`, `⥦`, `⥧`, `⥨`, `⥩`, `⥪`, `⥫`, `⥬`, `⥭`, `⥰`, `⧴`, `⬱`, `⬰`, `⬲`, `⬳`, `⬴`, `⬵`, `⬶`, `⬷`, `⬸`, `⬹`, `⬺`, `⬻`, `⬼`, `⬽`, `⬾`, `⬿`, `⭀`, `⭁`, `⭂`, `⭃`, `⭄`, `⭇`, `⭈`, `⭉`, `⭊`, `⭋`, `⭌`, `￩`, `￫`, `⇜`, `⇝`, `↜`, `↝`, `↩`, `↪`, `↫`, `↬`, `↼`, `↽`, `⇀`, `⇁`, `⇄`, `⇆`, `⇇`, `⇉`, `⇋`, `⇌`, `⇚`, `⇛`, `⇠`, `⇢`, `↷`, `↶`, `↺`, `↻`, `-->`, `<--`, `<-->`, `>`, `<`, `>=`, `≥`, `<=`, `≤`, `==`, `===`, `≡`, `!=`, `≠`, `!==`, `≢`, `∈`, `∉`, `∋`, `∌`, `⊆`, `⊈`, `⊂`, `⊄`, `⊊`, `∝`, `∊`, `∍`, `∥`, `∦`, `∷`, `∺`, `∻`, `∽`, `∾`, `≁`, `≃`, `≂`, `≄`, `≅`, `≆`, `≇`, `≈`, `≉`, `≊`, `≋`, `≌`, `≍`, `≎`, `≐`, `≑`, `≒`, `≓`, `≖`, `≗`, `≘`, `≙`, `≚`, `≛`, `≜`, `≝`, `≞`, `≟`, `≣`, `≦`, `≧`, `≨`, `≩`, `≪`, `≫`, `≬`, `≭`, `≮`, `≯`, `≰`, `≱`, `≲`, `≳`, `≴`, `≵`, `≶`, `≷`, `≸`, `≹`, `≺`, `≻`, `≼`, `≽`, `≾`, `≿`, `⊀`, `⊁`, `⊃`, `⊅`, `⊇`, `⊉`, `⊋`, `⊏`, `⊐`, `⊑`, `⊒`, `⊜`, `⊩`, `⊬`, `⊮`, `⊰`, `⊱`, `⊲`, `⊳`, `⊴`, `⊵`, `⊶`, `⊷`, `⋍`, `⋐`, `⋑`, `⋕`, `⋖`, `⋗`, `⋘`, `⋙`, `⋚`, `⋛`, `⋜`, `⋝`, `⋞`, `⋟`, `⋠`, `⋡`, `⋢`, `⋣`, `⋤`, `⋥`, `⋦`, `⋧`, `⋨`, `⋩`, `⋪`, `⋫`, `⋬`, `⋭`, `⋲`, `⋳`, `⋴`, `⋵`, `⋶`, `⋷`, `⋸`, `⋹`, `⋺`, `⋻`, `⋼`, `⋽`, `⋾`, `⋿`, `⟈`, `⟉`, `⟒`, `⦷`, `⧀`, `⧁`, `⧡`, `⧣`, `⧤`, `⧥`, `⩦`, `⩧`, `⩪`, `⩫`, `⩬`, `⩭`, `⩮`, `⩯`, `⩰`, `⩱`, `⩲`, `⩳`, `⩵`, `⩶`, `⩷`, `⩸`, `⩹`, `⩺`, `⩻`, `⩼`, `⩽`, `⩾`, `⩿`, `⪀`, `⪁`, `⪂`, `⪃`, `⪄`, `⪅`, `⪆`, `⪇`, `⪈`, `⪉`, `⪊`, `⪋`, `⪌`, `⪍`, `⪎`, `⪏`, `⪐`, `⪑`, `⪒`, `⪓`, `⪔`, `⪕`, `⪖`, `⪗`, `⪘`, `⪙`, `⪚`, `⪛`, `⪜`, `⪝`, `⪞`, `⪟`, `⪠`, `⪡`, `⪢`, `⪣`, `⪤`, `⪥`, `⪦`, `⪧`, `⪨`, `⪩`, `⪪`, `⪫`, `⪬`, `⪭`, `⪮`, `⪯`, `⪰`, `⪱`, `⪲`, `⪳`, `⪴`, `⪵`, `⪶`, `⪷`, `⪸`, `⪹`, `⪺`, `⪻`, `⪼`, `⪽`, `⪾`, `⪿`, `⫀`, `⫁`, `⫂`, `⫃`, `⫄`, `⫅`, `⫆`, `⫇`, `⫈`, `⫉`, `⫊`, `⫋`, `⫌`, `⫍`, `⫎`, `⫏`, `⫐`, `⫑`, `⫒`, `⫓`, `⫔`, `⫕`, `⫖`, `⫗`, `⫘`, `⫙`, `⫷`, `⫸`, `⫹`, `⫺`, `⊢`, `⊣`, `⟂`, `<:`, `>:`, `<|`, `|>`, `…`, `⁝`, `⋮`, `⋱`, `⋰`, `⋯`, `+`, `-`, `¦`, `|`, `⊕`, `⊖`, `⊞`, `⊟`, `++`, `∪`, `∨`, `⊔`, `±`, `∓`, `∔`, `∸`, `≏`, `⊎`, `⊻`, `⊽`, `⋎`, `⋓`, `⧺`, `⧻`, `⨈`, `⨢`, `⨣`, `⨤`, `⨥`, `⨦`, `⨧`, `⨨`, `⨩`, `⨪`, `⨫`, `⨬`, `⨭`, `⨮`, `⨹`, `⨺`, `⩁`, `⩂`, `⩅`, `⩊`, `⩌`, `⩏`, `⩐`, `⩒`, `⩔`, `⩖`, `⩗`, `⩛`, `⩝`, `⩡`, `⩢`, `⩣`, `*`, `/`, `⌿`, `÷`, `%`, `&`, `⋅`, `∘`, `×`, `\\`, `∩`, `∧`, `⊗`, `⊘`, `⊙`, `⊚`, `⊛`, `⊠`, `⊡`, `⊓`, `∗`, `∙`, `∤`, `⅋`, `≀`, `⊼`, `⋄`, `⋆`, `⋇`, `⋉`, `⋊`, `⋋`, `⋌`, `⋏`, `⋒`, `⟑`, `⦸`, `⦼`, `⦾`, `⦿`, `⧶`, `⧷`, `⨇`, `⨰`, `⨱`, `⨲`, `⨳`, `⨴`, `⨵`, `⨶`, `⨷`, `⨸`, `⨻`, `⨼`, `⨽`, `⩀`, `⩃`, `⩄`, `⩋`, `⩍`, `⩎`, `⩑`, `⩓`, `⩕`, `⩘`, `⩚`, `⩜`, `⩞`, `⩟`, `⩠`, `⫛`, `⊍`, `▷`, `⨝`, `⟕`, `⟖`, `⟗`, `⨟`, `//`, `>>`, `<<`, `>>>`, `^`, `↑`, `↓`, `⇵`, `⟰`, `⟱`, `⤈`, `⤉`, `⤊`, `⤋`, `⤒`, `⤓`, `⥉`, `⥌`, `⥍`, `⥏`, `⥑`, `⥔`, `⥕`, `⥘`, `⥙`, `⥜`, `⥝`, `⥠`, `⥡`, `⥣`, `⥥`, `⥮`, `⥯`, `￪`, `￬`, `!`, `¬`, `√`, `∛`, `∜`), Operator, nil},\n+\t\t\t{Words(``, `[²³¹ʰʲʳʷʸˡˢˣᴬᴮᴰᴱᴳᴴᴵᴶᴷᴸᴹᴺᴼᴾᴿᵀᵁᵂᵃᵇᵈᵉᵍᵏᵐᵒᵖᵗᵘᵛᵝᵞᵟᵠᵡᵢᵣᵤᵥᵦᵧᵨᵩᵪᶜᶠᶥᶦᶫᶰᶸᶻᶿ′″‴‵‶‷⁗⁰ⁱ⁴⁵⁶⁷⁸⁹⁺⁻⁼⁽⁾ⁿ₀₁₂₃₄₅₆₇₈₉₊₋₌₍₎ₐₑₒₓₕₖₗₘₙₚₛₜⱼⱽ]*`, `.=`, `.+=`, `.-=`, `.*=`, `./=`, `.//=`, `.\\=`, `.^=`, `.÷=`, `.%=`, `.<<=`, `.>>=`, `.>>>=`, `.|=`, `.&=`, `.⊻=`, `.≔`, `.⩴`, `.≕'`, `.~`, `.=>`, `.→`, `.↔`, `.↚`, `.↛`, `.↞`, `.↠`, `.↢`, `.↣`, `.↦`, `.↤`, `.↮`, `.⇎`, `.⇍`, `.⇏`, `.⇐`, `.⇒`, `.⇔`, `.⇴`, `.⇶`, `.⇷`, `.⇸`, `.⇹`, `.⇺`, `.⇻`, `.⇼`, `.⇽`, `.⇾`, `.⇿`, `.⟵`, `.⟶`, `.⟷`, `.⟹`, `.⟺`, `.⟻`, `.⟼`, `.⟽`, `.⟾`, `.⟿`, `.⤀`, `.⤁`, `.⤂`, `.⤃`, `.⤄`, `.⤅`, `.⤆`, `.⤇`, `.⤌`, `.⤍`, `.⤎`, `.⤏`, `.⤐`, `.⤑`, `.⤔`, `.⤕`, `.⤖`, `.⤗`, `.⤘`, `.⤝`, `.⤞`, `.⤟`, `.⤠`, `.⥄`, `.⥅`, `.⥆`, `.⥇`, `.⥈`, `.⥊`, `.⥋`, `.⥎`, `.⥐`, `.⥒`, `.⥓`, `.⥖`, `.⥗`, `.⥚`, `.⥛`, `.⥞`, `.⥟`, `.⥢`, `.⥤`, `.⥦`, `.⥧`, `.⥨`, `.⥩`, `.⥪`, `.⥫`, `.⥬`, `.⥭`, `.⥰`, `.⧴`, `.⬱`, `.⬰`, `.⬲`, `.⬳`, `.⬴`, `.⬵`, `.⬶`, `.⬷`, `.⬸`, `.⬹`, `.⬺`, `.⬻`, `.⬼`, `.⬽`, `.⬾`, `.⬿`, `.⭀`, `.⭁`, `.⭂`, `.⭃`, `.⭄`, `.⭇`, `.⭈`, `.⭉`, `.⭊`, `.⭋`, `.⭌`, `.￩`, `.￫`, `.⇜`, `.⇝`, `.↜`, `.↝`, `.↩`, `.↪`, `.↫`, `.↬`, `.↼`, `.↽`, `.⇀`, `.⇁`, `.⇄`, `.⇆`, `.⇇`, `.⇉`, `.⇋`, `.⇌`, `.⇚`, `.⇛`, `.⇠`, `.⇢`, `.↷`, `.↶`, `.↺`, `.↻`, `.-->`, `.<--`, `.<-->`, `.>`, `.<`, `.>=`, `.≥`, `.<=`, `.≤`, `.==`, `.===`, `.≡`, `.!=`, `.≠`, `.!==`, `.≢`, `.∈`, `.∉`, `.∋`, `.∌`, `.⊆`, `.⊈`, `.⊂`, `.⊄`, `.⊊`, `.∝`, `.∊`, `.∍`, `.∥`, `.∦`, `.∷`, `.∺`, `.∻`, `.∽`, `.∾`, `.≁`, `.≃`, `.≂`, `.≄`, `.≅`, `.≆`, `.≇`, `.≈`, `.≉`, `.≊`, `.≋`, `.≌`, `.≍`, `.≎`, `.≐`, `.≑`, `.≒`, `.≓`, `.≖`, `.≗`, `.≘`, `.≙`, `.≚`, `.≛`, `.≜`, `.≝`, `.≞`, `.≟`, `.≣`, `.≦`, `.≧`, `.≨`, `.≩`, `.≪`, `.≫`, `.≬`, `.≭`, `.≮`, `.≯`, `.≰`, `.≱`, `.≲`, `.≳`, `.≴`, `.≵`, `.≶`, `.≷`, `.≸`, `.≹`, `.≺`, `.≻`, `.≼`, `.≽`, `.≾`, `.≿`, `.⊀`, `.⊁`, `.⊃`, `.⊅`, `.⊇`, `.⊉`, `.⊋`, `.⊏`, `.⊐`, `.⊑`, `.⊒`, `.⊜`, `.⊩`, `.⊬`, `.⊮`, `.⊰`, `.⊱`, `.⊲`, `.⊳`, `.⊴`, `.⊵`, `.⊶`, `.⊷`, `.⋍`, `.⋐`, `.⋑`, `.⋕`, `.⋖`, `.⋗`, `.⋘`, `.⋙`, `.⋚`, `.⋛`, `.⋜`, `.⋝`, `.⋞`, `.⋟`, `.⋠`, `.⋡`, `.⋢`, `.⋣`, `.⋤`, `.⋥`, `.⋦`, `.⋧`, `.⋨`, `.⋩`, `.⋪`, `.⋫`, `.⋬`, `.⋭`, `.⋲`, `.⋳`, `.⋴`, `.⋵`, `.⋶`, `.⋷`, `.⋸`, `.⋹`, `.⋺`, `.⋻`, `.⋼`, `.⋽`, `.⋾`, `.⋿`, `.⟈`, `.⟉`, `.⟒`, `.⦷`, `.⧀`, `.⧁`, `.⧡`, `.⧣`, `.⧤`, `.⧥`, `.⩦`, `.⩧`, `.⩪`, `.⩫`, `.⩬`, `.⩭`, `.⩮`, `.⩯`, `.⩰`, `.⩱`, `.⩲`, `.⩳`, `.⩵`, `.⩶`, `.⩷`, `.⩸`, `.⩹`, `.⩺`, `.⩻`, `.⩼`, `.⩽`, `.⩾`, `.⩿`, `.⪀`, `.⪁`, `.⪂`, `.⪃`, `.⪄`, `.⪅`, `.⪆`, `.⪇`, `.⪈`, `.⪉`, `.⪊`, `.⪋`, `.⪌`, `.⪍`, `.⪎`, `.⪏`, `.⪐`, `.⪑`, `.⪒`, `.⪓`, `.⪔`, `.⪕`, `.⪖`, `.⪗`, `.⪘`, `.⪙`, `.⪚`, `.⪛`, `.⪜`, `.⪝`, `.⪞`, `.⪟`, `.⪠`, `.⪡`, `.⪢`, `.⪣`, `.⪤`, `.⪥`, `.⪦`, `.⪧`, `.⪨`, `.⪩`, `.⪪`, `.⪫`, `.⪬`, `.⪭`, `.⪮`, `.⪯`, `.⪰`, `.⪱`, `.⪲`, `.⪳`, `.⪴`, `.⪵`, `.⪶`, `.⪷`, `.⪸`, `.⪹`, `.⪺`, `.⪻`, `.⪼`, `.⪽`, `.⪾`, `.⪿`, `.⫀`, `.⫁`, `.⫂`, `.⫃`, `.⫄`, `.⫅`, `.⫆`, `.⫇`, `.⫈`, `.⫉`, `.⫊`, `.⫋`, `.⫌`, `.⫍`, `.⫎`, `.⫏`, `.⫐`, `.⫑`, `.⫒`, `.⫓`, `.⫔`, `.⫕`, `.⫖`, `.⫗`, `.⫘`, `.⫙`, `.⫷`, `.⫸`, `.⫹`, `.⫺`, `.⊢`, `.⊣`, `.⟂`, `.<:`, `.>:`, `.<|`, `.|>`, `.…`, `.⁝`, `.⋮`, `.⋱`, `.⋰`, `.⋯`, `.+`, `.-`, `.¦`, `.|`, `.⊕`, `.⊖`, `.⊞`, `.⊟`, `.++`, `.∪`, `.∨`, `.⊔`, `.±`, `.∓`, `.∔`, `.∸`, `.≏`, `.⊎`, `.⊻`, `.⊽`, `.⋎`, `.⋓`, `.⧺`, `.⧻`, `.⨈`, `.⨢`, `.⨣`, `.⨤`, `.⨥`, `.⨦`, `.⨧`, `.⨨`, `.⨩`, `.⨪`, `.⨫`, `.⨬`, `.⨭`, `.⨮`, `.⨹`, `.⨺`, `.⩁`, `.⩂`, `.⩅`, `.⩊`, `.⩌`, `.⩏`, `.⩐`, `.⩒`, `.⩔`, `.⩖`, `.⩗`, `.⩛`, `.⩝`, `.⩡`, `.⩢`, `.⩣`, `.*`, `./`, `.⌿`, `.÷`, `.%`, `.&`, `.⋅`, `.∘`, `.×`, `.\\`, `.∩`, `.∧`, `.⊗`, `.⊘`, `.⊙`, `.⊚`, `.⊛`, `.⊠`, `.⊡`, `.⊓`, `.∗`, `.∙`, `.∤`, `.⅋`, `.≀`, `.⊼`, `.⋄`, `.⋆`, `.⋇`, `.⋉`, `.⋊`, `.⋋`, `.⋌`, `.⋏`, `.⋒`, `.⟑`, `.⦸`, `.⦼`, `.⦾`, `.⦿`, `.⧶`, `.⧷`, `.⨇`, `.⨰`, `.⨱`, `.⨲`, `.⨳`, `.⨴`, `.⨵`, `.⨶`, `.⨷`, `.⨸`, `.⨻`, `.⨼`, `.⨽`, `.⩀`, `.⩃`, `.⩄`, `.⩋`, `.⩍`, `.⩎`, `.⩑`, `.⩓`, `.⩕`, `.⩘`, `.⩚`, `.⩜`, `.⩞`, `.⩟`, `.⩠`, `.⫛`, `.⊍`, `.▷`, `.⨝`, `.⟕`, `.⟖`, `.⟗`, `.⨟`, `.//`, `.>>`, `.<<`, `.>>>`, `.^`, `.↑`, `.↓`, `.⇵`, `.⟰`, `.⟱`, `.⤈`, `.⤉`, `.⤊`, `.⤋`, `.⤒`, `.⤓`, `.⥉`, `.⥌`, `.⥍`, `.⥏`, `.⥑`, `.⥔`, `.⥕`, `.⥘`, `.⥙`, `.⥜`, `.⥝`, `.⥠`, `.⥡`, `.⥣`, `.⥥`, `.⥮`, `.⥯`, `.￪`, `.￬`, `.!`, `.¬`, `.√`, `.∛`, `.∜`), Operator, nil},\n+\t\t\t{Words(``, ``, `...`, `..`), Operator, nil},\n \t\t\t{`'(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-fA-F0-9]{1,3}|\\\\u[a-fA-F0-9]{1,4}|\\\\U[a-fA-F0-9]{1,6}|[^\\\\\\'\\n])'`, LiteralStringChar, nil},\n-\t\t\t{`(?<=[.\\w)\\]])\\'+`, Operator, nil},\n-\t\t\t{`\"\"\"`, LiteralString, Push(\"tqstring\")},\n-\t\t\t{`\"`, LiteralString, Push(\"string\")},\n-\t\t\t{`r\"\"\"`, LiteralStringRegex, Push(\"tqregex\")},\n-\t\t\t{`r\"`, LiteralStringRegex, Push(\"regex\")},\n-\t\t\t{\"`\", LiteralStringBacktick, Push(\"command\")},\n-\t\t\t{`((?:[a-zA-Z_¡-￿]|[𐀀-􏿿])(?:[a-zA-Z_0-9¡-￿]|[𐀀-􏿿])*!*)(')?`, ByGroups(Name, Operator), nil},\n-\t\t\t{`(@(?:[a-zA-Z_¡-￿]|[𐀀-􏿿])(?:[a-zA-Z_0-9¡-￿]|[𐀀-􏿿])*!*)(')?`, ByGroups(NameDecorator, Operator), nil},\n-\t\t\t{`(\\d+(_\\d+)+\\.\\d*|\\d*\\.\\d+(_\\d+)+)([eEf][+-]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\d*\\.\\d+)([eEf][+-]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+(_\\d+)+[eEf][+-]?[0-9]+`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+[eEf][+-]?[0-9]+`, LiteralNumberFloat, nil},\n-\t\t\t{`0b[01]+(_[01]+)+`, LiteralNumberBin, nil},\n-\t\t\t{`0b[01]+`, LiteralNumberBin, nil},\n-\t\t\t{`0o[0-7]+(_[0-7]+)+`, LiteralNumberOct, nil},\n-\t\t\t{`0o[0-7]+`, LiteralNumberOct, nil},\n-\t\t\t{`0x[a-fA-F0-9]+(_[a-fA-F0-9]+)+`, LiteralNumberHex, nil},\n-\t\t\t{`0x[a-fA-F0-9]+`, LiteralNumberHex, nil},\n-\t\t\t{`\\d+(_\\d+)+`, LiteralNumberInteger, nil},\n-\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n+\t\t\t{`(?<=[.\\w)\\]])(\\'[²³¹ʰʲʳʷʸˡˢˣᴬᴮᴰᴱᴳᴴᴵᴶᴷᴸᴹᴺᴼᴾᴿᵀᵁᵂᵃᵇᵈᵉᵍᵏᵐᵒᵖᵗᵘᵛᵝᵞᵟᵠᵡᵢᵣᵤᵥᵦᵧᵨᵩᵪᶜᶠᶥᶦᶫᶰᶸᶻᶿ′″‴‵‶‷⁗⁰ⁱ⁴⁵⁶⁷⁸⁹⁺⁻⁼⁽⁾ⁿ₀₁₂₃₄₅₆₇₈₉₊₋₌₍₎ₐₑₒₓₕₖₗₘₙₚₛₜⱼⱽ]*)+`, Operator, nil},\n+\t\t\t{`(raw)(\"\"\")`, ByGroups(LiteralStringAffix, LiteralString), Push(\"tqrawstring\")},\n+\t\t\t{`(raw)(\")`, ByGroups(LiteralStringAffix, LiteralString), Push(\"rawstring\")},\n+\t\t\t{`(r)(\"\"\")`, ByGroups(LiteralStringAffix, LiteralStringRegex), Push(\"tqregex\")},\n+\t\t\t{`(r)(\")`, ByGroups(LiteralStringAffix, LiteralStringRegex), Push(\"regex\")},\n+\t\t\t{`((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))?(\"\"\")`, ByGroups(LiteralStringAffix, LiteralString), Push(\"tqstring\")},\n+\t\t\t{`((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))?(\")`, ByGroups(LiteralStringAffix, LiteralString), Push(\"string\")},\n+\t\t\t{\"((?:[a-zA-Z_\\u00a1-\\U0010ffff][a-zA-Z_0-9!\\u00a1-\\U0010ffff]*))?(```)\", ByGroups(LiteralStringAffix, LiteralStringBacktick), Push(\"tqcommand\")},\n+\t\t\t{\"((?:[a-zA-Z_\\u00a1-\\U0010ffff][a-zA-Z_0-9!\\u00a1-\\U0010ffff]*))?(`)\", ByGroups(LiteralStringAffix, LiteralStringBacktick), Push(\"command\")},\n+\t\t\t{`((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))(\\{)`, ByGroups(KeywordType, Punctuation), Push(\"curly\")},\n+\t\t\t{`(where)(\\s+)((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))`, ByGroups(Keyword, Text, KeywordType), nil},\n+\t\t\t{`(\\{)`, Punctuation, Push(\"curly\")},\n+\t\t\t{`(abstract[ \\t]+type|primitive[ \\t]+type|mutable[ \\t]+struct|struct)([\\s()]+)((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))`, ByGroups(Keyword, Text, KeywordType), nil},\n+\t\t\t{`@(?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*)`, NameDecorator, nil},\n+\t\t\t{Words(`@`, `[²³¹ʰʲʳʷʸˡˢˣᴬᴮᴰᴱᴳᴴᴵᴶᴷᴸᴹᴺᴼᴾᴿᵀᵁᵂᵃᵇᵈᵉᵍᵏᵐᵒᵖᵗᵘᵛᵝᵞᵟᵠᵡᵢᵣᵤᵥᵦᵧᵨᵩᵪᶜᶠᶥᶦᶫᶰᶸᶻᶿ′″‴‵‶‷⁗⁰ⁱ⁴⁵⁶⁷⁸⁹⁺⁻⁼⁽⁾ⁿ₀₁₂₃₄₅₆₇₈₉₊₋₌₍₎ₐₑₒₓₕₖₗₘₙₚₛₜⱼⱽ]*`, `->`, `:=`, `$=`, `?`, `||`, `&&`, `:`, `$`, `::`, `..`, `.`, `=`, `+=`, `-=`, `*=`, `/=`, `//=`, `\\=`, `^=`, `÷=`, `%=`, `<<=`, `>>=`, `>>>=`, `|=`, `&=`, `⊻=`, `≔`, `⩴`, `≕'`, `~`, `=>`, `→`, `↔`, `↚`, `↛`, `↞`, `↠`, `↢`, `↣`, `↦`, `↤`, `↮`, `⇎`, `⇍`, `⇏`, `⇐`, `⇒`, `⇔`, `⇴`, `⇶`, `⇷`, `⇸`, `⇹`, `⇺`, `⇻`, `⇼`, `⇽`, `⇾`, `⇿`, `⟵`, `⟶`, `⟷`, `⟹`, `⟺`, `⟻`, `⟼`, `⟽`, `⟾`, `⟿`, `⤀`, `⤁`, `⤂`, `⤃`, `⤄`, `⤅`, `⤆`, `⤇`, `⤌`, `⤍`, `⤎`, `⤏`, `⤐`, `⤑`, `⤔`, `⤕`, `⤖`, `⤗`, `⤘`, `⤝`, `⤞`, `⤟`, `⤠`, `⥄`, `⥅`, `⥆`, `⥇`, `⥈`, `⥊`, `⥋`, `⥎`, `⥐`, `⥒`, `⥓`, `⥖`, `⥗`, `⥚`, `⥛`, `⥞`, `⥟`, `⥢`, `⥤`, `⥦`, `⥧`, `⥨`, `⥩`, `⥪`, `⥫`, `⥬`, `⥭`, `⥰`, `⧴`, `⬱`, `⬰`, `⬲`, `⬳`, `⬴`, `⬵`, `⬶`, `⬷`, `⬸`, `⬹`, `⬺`, `⬻`, `⬼`, `⬽`, `⬾`, `⬿`, `⭀`, `⭁`, `⭂`, `⭃`, `⭄`, `⭇`, `⭈`, `⭉`, `⭊`, `⭋`, `⭌`, `￩`, `￫`, `⇜`, `⇝`, `↜`, `↝`, `↩`, `↪`, `↫`, `↬`, `↼`, `↽`, `⇀`, `⇁`, `⇄`, `⇆`, `⇇`, `⇉`, `⇋`, `⇌`, `⇚`, `⇛`, `⇠`, `⇢`, `↷`, `↶`, `↺`, `↻`, `-->`, `<--`, `<-->`, `>`, `<`, `>=`, `≥`, `<=`, `≤`, `==`, `===`, `≡`, `!=`, `≠`, `!==`, `≢`, `∈`, `∉`, `∋`, `∌`, `⊆`, `⊈`, `⊂`, `⊄`, `⊊`, `∝`, `∊`, `∍`, `∥`, `∦`, `∷`, `∺`, `∻`, `∽`, `∾`, `≁`, `≃`, `≂`, `≄`, `≅`, `≆`, `≇`, `≈`, `≉`, `≊`, `≋`, `≌`, `≍`, `≎`, `≐`, `≑`, `≒`, `≓`, `≖`, `≗`, `≘`, `≙`, `≚`, `≛`, `≜`, `≝`, `≞`, `≟`, `≣`, `≦`, `≧`, `≨`, `≩`, `≪`, `≫`, `≬`, `≭`, `≮`, `≯`, `≰`, `≱`, `≲`, `≳`, `≴`, `≵`, `≶`, `≷`, `≸`, `≹`, `≺`, `≻`, `≼`, `≽`, `≾`, `≿`, `⊀`, `⊁`, `⊃`, `⊅`, `⊇`, `⊉`, `⊋`, `⊏`, `⊐`, `⊑`, `⊒`, `⊜`, `⊩`, `⊬`, `⊮`, `⊰`, `⊱`, `⊲`, `⊳`, `⊴`, `⊵`, `⊶`, `⊷`, `⋍`, `⋐`, `⋑`, `⋕`, `⋖`, `⋗`, `⋘`, `⋙`, `⋚`, `⋛`, `⋜`, `⋝`, `⋞`, `⋟`, `⋠`, `⋡`, `⋢`, `⋣`, `⋤`, `⋥`, `⋦`, `⋧`, `⋨`, `⋩`, `⋪`, `⋫`, `⋬`, `⋭`, `⋲`, `⋳`, `⋴`, `⋵`, `⋶`, `⋷`, `⋸`, `⋹`, `⋺`, `⋻`, `⋼`, `⋽`, `⋾`, `⋿`, `⟈`, `⟉`, `⟒`, `⦷`, `⧀`, `⧁`, `⧡`, `⧣`, `⧤`, `⧥`, `⩦`, `⩧`, `⩪`, `⩫`, `⩬`, `⩭`, `⩮`, `⩯`, `⩰`, `⩱`, `⩲`, `⩳`, `⩵`, `⩶`, `⩷`, `⩸`, `⩹`, `⩺`, `⩻`, `⩼`, `⩽`, `⩾`, `⩿`, `⪀`, `⪁`, `⪂`, `⪃`, `⪄`, `⪅`, `⪆`, `⪇`, `⪈`, `⪉`, `⪊`, `⪋`, `⪌`, `⪍`, `⪎`, `⪏`, `⪐`, `⪑`, `⪒`, `⪓`, `⪔`, `⪕`, `⪖`, `⪗`, `⪘`, `⪙`, `⪚`, `⪛`, `⪜`, `⪝`, `⪞`, `⪟`, `⪠`, `⪡`, `⪢`, `⪣`, `⪤`, `⪥`, `⪦`, `⪧`, `⪨`, `⪩`, `⪪`, `⪫`, `⪬`, `⪭`, `⪮`, `⪯`, `⪰`, `⪱`, `⪲`, `⪳`, `⪴`, `⪵`, `⪶`, `⪷`, `⪸`, `⪹`, `⪺`, `⪻`, `⪼`, `⪽`, `⪾`, `⪿`, `⫀`, `⫁`, `⫂`, `⫃`, `⫄`, `⫅`, `⫆`, `⫇`, `⫈`, `⫉`, `⫊`, `⫋`, `⫌`, `⫍`, `⫎`, `⫏`, `⫐`, `⫑`, `⫒`, `⫓`, `⫔`, `⫕`, `⫖`, `⫗`, `⫘`, `⫙`, `⫷`, `⫸`, `⫹`, `⫺`, `⊢`, `⊣`, `⟂`, `<:`, `>:`, `<|`, `|>`, `…`, `⁝`, `⋮`, `⋱`, `⋰`, `⋯`, `+`, `-`, `¦`, `|`, `⊕`, `⊖`, `⊞`, `⊟`, `++`, `∪`, `∨`, `⊔`, `±`, `∓`, `∔`, `∸`, `≏`, `⊎`, `⊻`, `⊽`, `⋎`, `⋓`, `⧺`, `⧻`, `⨈`, `⨢`, `⨣`, `⨤`, `⨥`, `⨦`, `⨧`, `⨨`, `⨩`, `⨪`, `⨫`, `⨬`, `⨭`, `⨮`, `⨹`, `⨺`, `⩁`, `⩂`, `⩅`, `⩊`, `⩌`, `⩏`, `⩐`, `⩒`, `⩔`, `⩖`, `⩗`, `⩛`, `⩝`, `⩡`, `⩢`, `⩣`, `*`, `/`, `⌿`, `÷`, `%`, `&`, `⋅`, `∘`, `×`, `\\`, `∩`, `∧`, `⊗`, `⊘`, `⊙`, `⊚`, `⊛`, `⊠`, `⊡`, `⊓`, `∗`, `∙`, `∤`, `⅋`, `≀`, `⊼`, `⋄`, `⋆`, `⋇`, `⋉`, `⋊`, `⋋`, `⋌`, `⋏`, `⋒`, `⟑`, `⦸`, `⦼`, `⦾`, `⦿`, `⧶`, `⧷`, `⨇`, `⨰`, `⨱`, `⨲`, `⨳`, `⨴`, `⨵`, `⨶`, `⨷`, `⨸`, `⨻`, `⨼`, `⨽`, `⩀`, `⩃`, `⩄`, `⩋`, `⩍`, `⩎`, `⩑`, `⩓`, `⩕`, `⩘`, `⩚`, `⩜`, `⩞`, `⩟`, `⩠`, `⫛`, `⊍`, `▷`, `⨝`, `⟕`, `⟖`, `⟗`, `⨟`, `//`, `>>`, `<<`, `>>>`, `^`, `↑`, `↓`, `⇵`, `⟰`, `⟱`, `⤈`, `⤉`, `⤊`, `⤋`, `⤒`, `⤓`, `⥉`, `⥌`, `⥍`, `⥏`, `⥑`, `⥔`, `⥕`, `⥘`, `⥙`, `⥜`, `⥝`, `⥠`, `⥡`, `⥣`, `⥥`, `⥮`, `⥯`, `￪`, `￬`, `!`, `¬`, `√`, `∛`, `∜`), NameDecorator, nil},\n+\t\t\t{Words(``, `\\b`, `baremodule`, `begin`, `break`, `catch`, `ccall`, `const`, `continue`, `do`, `else`, `elseif`, `end`, `export`, `finally`, `for`, `function`, `global`, `if`, `import`, `in`, `isa`, `let`, `local`, `macro`, `module`, `quote`, `return`, `try`, `using`, `where`, `while`), Keyword, nil},\n+\t\t\t{Words(``, `\\b`, `AbstractArray`, `AbstractChannel`, `AbstractChar`, `AbstractDict`, `AbstractDisplay`, `AbstractFloat`, `AbstractIrrational`, `AbstractMatch`, `AbstractMatrix`, `AbstractPattern`, `AbstractRange`, `AbstractSet`, `AbstractString`, `AbstractUnitRange`, `AbstractVecOrMat`, `AbstractVector`, `Any`, `ArgumentError`, `Array`, `AssertionError`, `BigFloat`, `BigInt`, `BitArray`, `BitMatrix`, `BitSet`, `BitVector`, `Bool`, `BoundsError`, `CapturedException`, `CartesianIndex`, `CartesianIndices`, `Cchar`, `Cdouble`, `Cfloat`, `Channel`, `Char`, `Cint`, `Cintmax_t`, `Clong`, `Clonglong`, `Cmd`, `Colon`, `Complex`, `ComplexF16`, `ComplexF32`, `ComplexF64`, `ComposedFunction`, `CompositeException`, `Condition`, `Cptrdiff_t`, `Cshort`, `Csize_t`, `Cssize_t`, `Cstring`, `Cuchar`, `Cuint`, `Cuintmax_t`, `Culong`, `Culonglong`, `Cushort`, `Cvoid`, `Cwchar_t`, `Cwstring`, `DataType`, `DenseArray`, `DenseMatrix`, `DenseVecOrMat`, `DenseVector`, `Dict`, `DimensionMismatch`, `Dims`, `DivideError`, `DomainError`, `EOFError`, `Enum`, `ErrorException`, `Exception`, `ExponentialBackOff`, `Expr`, `Float16`, `Float32`, `Float64`, `Function`, `GlobalRef`, `HTML`, `IO`, `IOBuffer`, `IOContext`, `IOStream`, `IdDict`, `IndexCartesian`, `IndexLinear`, `IndexStyle`, `InexactError`, `InitError`, `Int`, `Int128`, `Int16`, `Int32`, `Int64`, `Int8`, `Integer`, `InterruptException`, `InvalidStateException`, `Irrational`, `KeyError`, `LinRange`, `LineNumberNode`, `LinearIndices`, `LoadError`, `MIME`, `Matrix`, `Method`, `MethodError`, `Missing`, `MissingException`, `Module`, `NTuple`, `NamedTuple`, `Nothing`, `Number`, `OrdinalRange`, `OutOfMemoryError`, `OverflowError`, `Pair`, `PartialQuickSort`, `PermutedDimsArray`, `Pipe`, `ProcessFailedException`, `Ptr`, `QuoteNode`, `Rational`, `RawFD`, `ReadOnlyMemoryError`, `Real`, `ReentrantLock`, `Ref`, `Regex`, `RegexMatch`, `RoundingMode`, `SegmentationFault`, `Set`, `Signed`, `Some`, `StackOverflowError`, `StepRange`, `StepRangeLen`, `StridedArray`, `StridedMatrix`, `StridedVecOrMat`, `StridedVector`, `String`, `StringIndexError`, `SubArray`, `SubString`, `SubstitutionString`, `Symbol`, `SystemError`, `Task`, `TaskFailedException`, `Text`, `TextDisplay`, `Timer`, `Tuple`, `Type`, `TypeError`, `TypeVar`, `UInt`, `UInt128`, `UInt16`, `UInt32`, `UInt64`, `UInt8`, `UndefInitializer`, `UndefKeywordError`, `UndefRefError`, `UndefVarError`, `Union`, `UnionAll`, `UnitRange`, `Unsigned`, `Val`, `Vararg`, `VecElement`, `VecOrMat`, `Vector`, `VersionNumber`, `WeakKeyDict`, `WeakRef`), KeywordType, nil},\n+\t\t\t{Words(``, `\\b`, `ARGS`, `C_NULL`, `DEPOT_PATH`, `ENDIAN_BOM`, `ENV`, `Inf`, `Inf16`, `Inf32`, `Inf64`, `InsertionSort`, `LOAD_PATH`, `MergeSort`, `NaN`, `NaN16`, `NaN32`, `NaN64`, `PROGRAM_FILE`, `QuickSort`, `RoundDown`, `RoundFromZero`, `RoundNearest`, `RoundNearestTiesAway`, `RoundNearestTiesUp`, `RoundToZero`, `RoundUp`, `VERSION`, `devnull`, `false`, `im`, `missing`, `nothing`, `pi`, `stderr`, `stdin`, `stdout`, `true`, `undef`, `π`, `ℯ`), NameBuiltin, nil},\n+\t\t\t{`(?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*)`, Name, nil},\n+\t\t\t{`(\\d+((_\\d+)+)?\\.(?!\\.)(\\d+((_\\d+)+)?)?|\\.\\d+((_\\d+)+)?)([eEf][+-]?[0-9]+)?`, LiteralNumberFloat, nil},\n+\t\t\t{`\\d+((_\\d+)+)?[eEf][+-]?[0-9]+`, LiteralNumberFloat, nil},\n+\t\t\t{`0x[a-fA-F0-9]+((_[a-fA-F0-9]+)+)?(\\.([a-fA-F0-9]+((_[a-fA-F0-9]+)+)?)?)?p[+-]?\\d+`, LiteralNumberFloat, nil},\n+\t\t\t{`0b[01]+((_[01]+)+)?`, LiteralNumberBin, nil},\n+\t\t\t{`0o[0-7]+((_[0-7]+)+)?`, LiteralNumberOct, nil},\n+\t\t\t{`0x[a-fA-F0-9]+((_[a-fA-F0-9]+)+)?`, LiteralNumberHex, nil},\n+\t\t\t{`\\d+((_\\d+)+)?`, LiteralNumberInteger, nil},\n+\t\t\t{Words(``, ``, `.`), Operator, nil},\n \t\t},\n \t\t\"blockcomment\": {\n \t\t\t{`[^=#]`, CommentMultiline, nil},\n \t\t\t{`#=`, CommentMultiline, Push()},\n \t\t\t{`=#`, CommentMultiline, Pop(1)},\n \t\t\t{`[=#]`, CommentMultiline, nil},\n \t\t},\n-\t\t\"string\": {\n+\t\t\"curly\": {\n+\t\t\t{`\\{`, Punctuation, Push()},\n+\t\t\t{`\\}`, Punctuation, Pop(1)},\n+\t\t\t{`(?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*)`, KeywordType, nil},\n+\t\t\tInclude(\"root\"),\n+\t\t},\n+\t\t\"tqrawstring\": {\n+\t\t\t{`\"\"\"`, LiteralString, Pop(1)},\n+\t\t\t{`([^\"]|\"[^\"][^\"])+`, LiteralString, nil},\n+\t\t},\n+\t\t\"rawstring\": {\n \t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`\\\\([\\\\\"\\'$nrbtfav]|(x|u|U)[a-fA-F0-9]+|\\d+)`, LiteralStringEscape, nil},\n-\t\t\t{`\\$(?:[a-zA-Z_¡-￿]|[𐀀-􏿿])(?:[a-zA-Z_0-9¡-￿]|[𐀀-􏿿])*!*`, LiteralStringInterpol, nil},\n+\t\t\t{`\\\\\"`, LiteralStringEscape, nil},\n+\t\t\t{`([^\"\\\\]|\\\\[^\"])+`, LiteralString, nil},\n+\t\t},\n+\t\t\"interp\": {\n+\t\t\t{`\\$(?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*)`, LiteralStringInterpol, nil},\n \t\t\t{`(\\$)(\\()`, ByGroups(LiteralStringInterpol, Punctuation), Push(\"in-intp\")},\n+\t\t},\n+\t\t\"in-intp\": {\n+\t\t\t{`\\(`, Punctuation, Push()},\n+\t\t\t{`\\)`, Punctuation, Pop(1)},\n+\t\t\tInclude(\"root\"),\n+\t\t},\n+\t\t\"string\": {\n+\t\t\t{`(\")((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*)|\\d+)?`, ByGroups(LiteralString, LiteralStringAffix), Pop(1)},\n+\t\t\t{`\\\\([\\\\\"\\'$nrbtfav]|(x|u|U)[a-fA-F0-9]+|\\d+)`, LiteralStringEscape, nil},\n+\t\t\tInclude(\"interp\"),\n \t\t\t{`%[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsux%]`, LiteralStringInterpol, nil},\n-\t\t\t{`.|\\s`, LiteralString, nil},\n+\t\t\t{`[^\"$%\\\\]+`, LiteralString, nil},\n+\t\t\t{`.`, LiteralString, nil},\n \t\t},\n \t\t\"tqstring\": {\n-\t\t\t{`\"\"\"`, LiteralString, Pop(1)},\n+\t\t\t{`(\"\"\")((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*)|\\d+)?`, ByGroups(LiteralString, LiteralStringAffix), Pop(1)},\n \t\t\t{`\\\\([\\\\\"\\'$nrbtfav]|(x|u|U)[a-fA-F0-9]+|\\d+)`, LiteralStringEscape, nil},\n-\t\t\t{`\\$(?:[a-zA-Z_¡-￿]|[𐀀-􏿿])(?:[a-zA-Z_0-9¡-￿]|[𐀀-􏿿])*!*`, LiteralStringInterpol, nil},\n-\t\t\t{`(\\$)(\\()`, ByGroups(LiteralStringInterpol, Punctuation), Push(\"in-intp\")},\n-\t\t\t{`.|\\s`, LiteralString, nil},\n+\t\t\tInclude(\"interp\"),\n+\t\t\t{`[^\"$%\\\\]+`, LiteralString, nil},\n+\t\t\t{`.`, LiteralString, nil},\n \t\t},\n \t\t\"regex\": {\n-\t\t\t{`\"`, LiteralStringRegex, Pop(1)},\n+\t\t\t{`(\")([imsxa]*)?`, ByGroups(LiteralStringRegex, LiteralStringAffix), Pop(1)},\n \t\t\t{`\\\\\"`, LiteralStringRegex, nil},\n-\t\t\t{`.|\\s`, LiteralStringRegex, nil},\n+\t\t\t{`[^\\\\\"]+`, LiteralStringRegex, nil},\n \t\t},\n \t\t\"tqregex\": {\n-\t\t\t{`\"\"\"`, LiteralStringRegex, Pop(1)},\n-\t\t\t{`.|\\s`, LiteralStringRegex, nil},\n+\t\t\t{`(\"\"\")([imsxa]*)?`, ByGroups(LiteralStringRegex, LiteralStringAffix), Pop(1)},\n+\t\t\t{`[^\"]+`, LiteralStringRegex, nil},\n \t\t},\n \t\t\"command\": {\n-\t\t\t{\"`\", LiteralStringBacktick, Pop(1)},\n-\t\t\t{`\\$(?:[a-zA-Z_¡-￿]|[𐀀-􏿿])(?:[a-zA-Z_0-9¡-￿]|[𐀀-􏿿])*!*`, LiteralStringInterpol, nil},\n-\t\t\t{`(\\$)(\\()`, ByGroups(LiteralStringInterpol, Punctuation), Push(\"in-intp\")},\n-\t\t\t{`.|\\s`, LiteralStringBacktick, nil},\n+\t\t\t{\"(`)((?:[a-zA-Z_\\u00a1-\\U0010ffff][a-zA-Z_0-9!\\u00a1-\\U0010ffff]*)|\\\\d+)?\", ByGroups(LiteralStringBacktick, LiteralStringAffix), Pop(1)},\n+\t\t\t{\"\\\\\\\\[`$]\", LiteralStringEscape, nil},\n+\t\t\tInclude(\"interp\"),\n+\t\t\t{\"[^\\\\\\\\`$]+\", LiteralStringBacktick, nil},\n+\t\t\t{`.`, LiteralStringBacktick, nil},\n \t\t},\n-\t\t\"in-intp\": {\n-\t\t\t{`\\(`, Punctuation, Push()},\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t\tInclude(\"root\"),\n+\t\t\"tqcommand\": {\n+\t\t\t{\"(```)((?:[a-zA-Z_\\u00a1-\\U0010ffff][a-zA-Z_0-9!\\u00a1-\\U0010ffff]*)|\\\\d+)?\", ByGroups(LiteralStringBacktick, LiteralStringAffix), Pop(1)},\n+\t\t\t{`\\\\\\$`, LiteralStringEscape, nil},\n+\t\t\tInclude(\"interp\"),\n+\t\t\t{\"[^\\\\\\\\`$]+\", LiteralStringBacktick, nil},\n+\t\t\t{`.`, LiteralStringBacktick, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "5dbda9fbad69a2bd4d1a2120a667c95aa5033314",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/j/jungle.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/j/jungle.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/j/jungle.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/j/jungle.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -5,14 +5,18 @@ import (\n \t\"github.com/alecthomas/chroma/lexers/internal\"\n )\n \n-var Jungle = internal.Register(MustNewLexer(\n+var Jungle = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Jungle\",\n \t\tAliases:   []string{\"jungle\"},\n \t\tFilenames: []string{\"*.jungle\"},\n \t\tMimeTypes: []string{\"text/x-jungle\"},\n \t},\n-\tRules{\n+\tjungleRules,\n+))\n+\n+func jungleRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[^\\S\\n]+`, Text, nil},\n \t\t\t{`\\n`, Text, nil},\n@@ -46,5 +50,5 @@ var Jungle = internal.Register(MustNewLexer(\n \t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n \t\t\tDefault(Pop(1)),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "671f85e0a42b42b72f87dfa552c6e3c191140d1d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/k/kotlin.go",
      "status": "modified",
      "additions": 59,
      "deletions": 16,
      "changes": 75,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/k/kotlin.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/k/kotlin.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/k/kotlin.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -5,51 +5,94 @@ import (\n \t\"github.com/alecthomas/chroma/lexers/internal\"\n )\n \n-var kotlinIdentifier = \"_A-Z\\u00c0-\\u00d6\\u00d8-\\u00de\\u0100\\u0102\\u0104\\u0106\\u0108\\u010a\\u010c\\u010e\\u0110\\u0112\\u0114\\u0116\\u0118\\u011a\\u011c\\u011e\\u0120\\u0122\\u0124\\u0126\\u0128\\u012a\\u012c\\u012e\\u0130\\u0132\\u0134\\u0136\\u0139\\u013b\\u013d\\u013f\\u0141\\u0143\\u0145\\u0147\\u014a\\u014c\\u014e\\u0150\\u0152\\u0154\\u0156\\u0158\\u015a\\u015c\\u015e\\u0160\\u0162\\u0164\\u0166\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u0174\\u0176\\u0178-\\u0179\\u017b\\u017d\\u0181-\\u0182\\u0184\\u0186-\\u0187\\u0189-\\u018b\\u018e-\\u0191\\u0193-\\u0194\\u0196-\\u0198\\u019c-\\u019d\\u019f-\\u01a0\\u01a2\\u01a4\\u01a6-\\u01a7\\u01a9\\u01ac\\u01ae-\\u01af\\u01b1-\\u01b3\\u01b5\\u01b7-\\u01b8\\u01bc\\u01c4\\u01c7\\u01ca\\u01cd\\u01cf\\u01d1\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u01de\\u01e0\\u01e2\\u01e4\\u01e6\\u01e8\\u01ea\\u01ec\\u01ee\\u01f1\\u01f4\\u01f6-\\u01f8\\u01fa\\u01fc\\u01fe\\u0200\\u0202\\u0204\\u0206\\u0208\\u020a\\u020c\\u020e\\u0210\\u0212\\u0214\\u0216\\u0218\\u021a\\u021c\\u021e\\u0220\\u0222\\u0224\\u0226\\u0228\\u022a\\u022c\\u022e\\u0230\\u0232\\u023a-\\u023b\\u023d-\\u023e\\u0241\\u0243-\\u0246\\u0248\\u024a\\u024c\\u024e\\u0370\\u0372\\u0376\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u038f\\u0391-\\u03a1\\u03a3-\\u03ab\\u03cf\\u03d2-\\u03d4\\u03d8\\u03da\\u03dc\\u03de\\u03e0\\u03e2\\u03e4\\u03e6\\u03e8\\u03ea\\u03ec\\u03ee\\u03f4\\u03f7\\u03f9-\\u03fa\\u03fd-\\u042f\\u0460\\u0462\\u0464\\u0466\\u0468\\u046a\\u046c\\u046e\\u0470\\u0472\\u0474\\u0476\\u0478\\u047a\\u047c\\u047e\\u0480\\u048a\\u048c\\u048e\\u0490\\u0492\\u0494\\u0496\\u0498\\u049a\\u049c\\u049e\\u04a0\\u04a2\\u04a4\\u04a6\\u04a8\\u04aa\\u04ac\\u04ae\\u04b0\\u04b2\\u04b4\\u04b6\\u04b8\\u04ba\\u04bc\\u04be\\u04c0-\\u04c1\\u04c3\\u04c5\\u04c7\\u04c9\\u04cb\\u04cd\\u04d0\\u04d2\\u04d4\\u04d6\\u04d8\\u04da\\u04dc\\u04de\\u04e0\\u04e2\\u04e4\\u04e6\\u04e8\\u04ea\\u04ec\\u04ee\\u04f0\\u04f2\\u04f4\\u04f6\\u04f8\\u04fa\\u04fc\\u04fe\\u0500\\u0502\\u0504\\u0506\\u0508\\u050a\\u050c\\u050e\\u0510\\u0512\\u0514\\u0516\\u0518\\u051a\\u051c\\u051e\\u0520\\u0522\\u0524\\u0526\\u0531-\\u0556\\u10a0-\\u10c5\\u10c7\\u10cd\\u1e00\\u1e02\\u1e04\\u1e06\\u1e08\\u1e0a\\u1e0c\\u1e0e\\u1e10\\u1e12\\u1e14\\u1e16\\u1e18\\u1e1a\\u1e1c\\u1e1e\\u1e20\\u1e22\\u1e24\\u1e26\\u1e28\\u1e2a\\u1e2c\\u1e2e\\u1e30\\u1e32\\u1e34\\u1e36\\u1e38\\u1e3a\\u1e3c\\u1e3e\\u1e40\\u1e42\\u1e44\\u1e46\\u1e48\\u1e4a\\u1e4c\\u1e4e\\u1e50\\u1e52\\u1e54\\u1e56\\u1e58\\u1e5a\\u1e5c\\u1e5e\\u1e60\\u1e62\\u1e64\\u1e66\\u1e68\\u1e6a\\u1e6c\\u1e6e\\u1e70\\u1e72\\u1e74\\u1e76\\u1e78\\u1e7a\\u1e7c\\u1e7e\\u1e80\\u1e82\\u1e84\\u1e86\\u1e88\\u1e8a\\u1e8c\\u1e8e\\u1e90\\u1e92\\u1e94\\u1e9e\\u1ea0\\u1ea2\\u1ea4\\u1ea6\\u1ea8\\u1eaa\\u1eac\\u1eae\\u1eb0\\u1eb2\\u1eb4\\u1eb6\\u1eb8\\u1eba\\u1ebc\\u1ebe\\u1ec0\\u1ec2\\u1ec4\\u1ec6\\u1ec8\\u1eca\\u1ecc\\u1ece\\u1ed0\\u1ed2\\u1ed4\\u1ed6\\u1ed8\\u1eda\\u1edc\\u1ede\\u1ee0\\u1ee2\\u1ee4\\u1ee6\\u1ee8\\u1eea\\u1eec\\u1eee\\u1ef0\\u1ef2\\u1ef4\\u1ef6\\u1ef8\\u1efa\\u1efc\\u1efe\\u1f08-\\u1f0f\\u1f18-\\u1f1d\\u1f28-\\u1f2f\\u1f38-\\u1f3f\\u1f48-\\u1f4d\\u1f59\\u1f5b\\u1f5d\\u1f5f\\u1f68-\\u1f6f\\u1fb8-\\u1fbb\\u1fc8-\\u1fcb\\u1fd8-\\u1fdb\\u1fe8-\\u1fec\\u1ff8-\\u1ffb\\u2102\\u2107\\u210b-\\u210d\\u2110-\\u2112\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u2130-\\u2133\\u213e-\\u213f\\u2145\\u2183\\u2c00-\\u2c2e\\u2c60\\u2c62-\\u2c64\\u2c67\\u2c69\\u2c6b\\u2c6d-\\u2c70\\u2c72\\u2c75\\u2c7e-\\u2c80\\u2c82\\u2c84\\u2c86\\u2c88\\u2c8a\\u2c8c\\u2c8e\\u2c90\\u2c92\\u2c94\\u2c96\\u2c98\\u2c9a\\u2c9c\\u2c9e\\u2ca0\\u2ca2\\u2ca4\\u2ca6\\u2ca8\\u2caa\\u2cac\\u2cae\\u2cb0\\u2cb2\\u2cb4\\u2cb6\\u2cb8\\u2cba\\u2cbc\\u2cbe\\u2cc0\\u2cc2\\u2cc4\\u2cc6\\u2cc8\\u2cca\\u2ccc\\u2cce\\u2cd0\\u2cd2\\u2cd4\\u2cd6\\u2cd8\\u2cda\\u2cdc\\u2cde\\u2ce0\\u2ce2\\u2ceb\\u2ced\\u2cf2\\ua640\\ua642\\ua644\\ua646\\ua648\\ua64a\\ua64c\\ua64e\\ua650\\ua652\\ua654\\ua656\\ua658\\ua65a\\ua65c\\ua65e\\ua660\\ua662\\ua664\\ua666\\ua668\\ua66a\\ua66c\\ua680\\ua682\\ua684\\ua686\\ua688\\ua68a\\ua68c\\ua68e\\ua690\\ua692\\ua694\\ua696\\ua722\\ua724\\ua726\\ua728\\ua72a\\ua72c\\ua72e\\ua732\\ua734\\ua736\\ua738\\ua73a\\ua73c\\ua73e\\ua740\\ua742\\ua744\\ua746\\ua748\\ua74a\\ua74c\\ua74e\\ua750\\ua752\\ua754\\ua756\\ua758\\ua75a\\ua75c\\ua75e\\ua760\\ua762\\ua764\\ua766\\ua768\\ua76a\\ua76c\\ua76e\\ua779\\ua77b\\ua77d-\\ua77e\\ua780\\ua782\\ua784\\ua786\\ua78b\\ua78d\\ua790\\ua792\\ua7a0\\ua7a2\\ua7a4\\ua7a6\\ua7a8\\ua7aa\\uff21-\\uff3aa-z\\u00b5\\u00df-\\u00f6\\u00f8-\\u00ff\\u0101\\u0103\\u0105\\u0107\\u0109\\u010b\\u010d\\u010f\\u0111\\u0113\\u0115\\u0117\\u0119\\u011b\\u011d\\u011f\\u0121\\u0123\\u0125\\u0127\\u0129\\u012b\\u012d\\u012f\\u0131\\u0133\\u0135\\u0137-\\u0138\\u013a\\u013c\\u013e\\u0140\\u0142\\u0144\\u0146\\u0148-\\u0149\\u014b\\u014d\\u014f\\u0151\\u0153\\u0155\\u0157\\u0159\\u015b\\u015d\\u015f\\u0161\\u0163\\u0165\\u0167\\u0169\\u016b\\u016d\\u016f\\u0171\\u0173\\u0175\\u0177\\u017a\\u017c\\u017e-\\u0180\\u0183\\u0185\\u0188\\u018c-\\u018d\\u0192\\u0195\\u0199-\\u019b\\u019e\\u01a1\\u01a3\\u01a5\\u01a8\\u01aa-\\u01ab\\u01ad\\u01b0\\u01b4\\u01b6\\u01b9-\\u01ba\\u01bd-\\u01bf\\u01c6\\u01c9\\u01cc\\u01ce\\u01d0\\u01d2\\u01d4\\u01d6\\u01d8\\u01da\\u01dc-\\u01dd\\u01df\\u01e1\\u01e3\\u01e5\\u01e7\\u01e9\\u01eb\\u01ed\\u01ef-\\u01f0\\u01f3\\u01f5\\u01f9\\u01fb\\u01fd\\u01ff\\u0201\\u0203\\u0205\\u0207\\u0209\\u020b\\u020d\\u020f\\u0211\\u0213\\u0215\\u0217\\u0219\\u021b\\u021d\\u021f\\u0221\\u0223\\u0225\\u0227\\u0229\\u022b\\u022d\\u022f\\u0231\\u0233-\\u0239\\u023c\\u023f-\\u0240\\u0242\\u0247\\u0249\\u024b\\u024d\\u024f-\\u0293\\u0295-\\u02af\\u0371\\u0373\\u0377\\u037b-\\u037d\\u0390\\u03ac-\\u03ce\\u03d0-\\u03d1\\u03d5-\\u03d7\\u03d9\\u03db\\u03dd\\u03df\\u03e1\\u03e3\\u03e5\\u03e7\\u03e9\\u03eb\\u03ed\\u03ef-\\u03f3\\u03f5\\u03f8\\u03fb-\\u03fc\\u0430-\\u045f\\u0461\\u0463\\u0465\\u0467\\u0469\\u046b\\u046d\\u046f\\u0471\\u0473\\u0475\\u0477\\u0479\\u047b\\u047d\\u047f\\u0481\\u048b\\u048d\\u048f\\u0491\\u0493\\u0495\\u0497\\u0499\\u049b\\u049d\\u049f\\u04a1\\u04a3\\u04a5\\u04a7\\u04a9\\u04ab\\u04ad\\u04af\\u04b1\\u04b3\\u04b5\\u04b7\\u04b9\\u04bb\\u04bd\\u04bf\\u04c2\\u04c4\\u04c6\\u04c8\\u04ca\\u04cc\\u04ce-\\u04cf\\u04d1\\u04d3\\u04d5\\u04d7\\u04d9\\u04db\\u04dd\\u04df\\u04e1\\u04e3\\u04e5\\u04e7\\u04e9\\u04eb\\u04ed\\u04ef\\u04f1\\u04f3\\u04f5\\u04f7\\u04f9\\u04fb\\u04fd\\u04ff\\u0501\\u0503\\u0505\\u0507\\u0509\\u050b\\u050d\\u050f\\u0511\\u0513\\u0515\\u0517\\u0519\\u051b\\u051d\\u051f\\u0521\\u0523\\u0525\\u0527\\u0561-\\u0587\\u1d00-\\u1d2b\\u1d6b-\\u1d77\\u1d79-\\u1d9a\\u1e01\\u1e03\\u1e05\\u1e07\\u1e09\\u1e0b\\u1e0d\\u1e0f\\u1e11\\u1e13\\u1e15\\u1e17\\u1e19\\u1e1b\\u1e1d\\u1e1f\\u1e21\\u1e23\\u1e25\\u1e27\\u1e29\\u1e2b\\u1e2d\\u1e2f\\u1e31\\u1e33\\u1e35\\u1e37\\u1e39\\u1e3b\\u1e3d\\u1e3f\\u1e41\\u1e43\\u1e45\\u1e47\\u1e49\\u1e4b\\u1e4d\\u1e4f\\u1e51\\u1e53\\u1e55\\u1e57\\u1e59\\u1e5b\\u1e5d\\u1e5f\\u1e61\\u1e63\\u1e65\\u1e67\\u1e69\\u1e6b\\u1e6d\\u1e6f\\u1e71\\u1e73\\u1e75\\u1e77\\u1e79\\u1e7b\\u1e7d\\u1e7f\\u1e81\\u1e83\\u1e85\\u1e87\\u1e89\\u1e8b\\u1e8d\\u1e8f\\u1e91\\u1e93\\u1e95-\\u1e9d\\u1e9f\\u1ea1\\u1ea3\\u1ea5\\u1ea7\\u1ea9\\u1eab\\u1ead\\u1eaf\\u1eb1\\u1eb3\\u1eb5\\u1eb7\\u1eb9\\u1ebb\\u1ebd\\u1ebf\\u1ec1\\u1ec3\\u1ec5\\u1ec7\\u1ec9\\u1ecb\\u1ecd\\u1ecf\\u1ed1\\u1ed3\\u1ed5\\u1ed7\\u1ed9\\u1edb\\u1edd\\u1edf\\u1ee1\\u1ee3\\u1ee5\\u1ee7\\u1ee9\\u1eeb\\u1eed\\u1eef\\u1ef1\\u1ef3\\u1ef5\\u1ef7\\u1ef9\\u1efb\\u1efd\\u1eff-\\u1f07\\u1f10-\\u1f15\\u1f20-\\u1f27\\u1f30-\\u1f37\\u1f40-\\u1f45\\u1f50-\\u1f57\\u1f60-\\u1f67\\u1f70-\\u1f7d\\u1f80-\\u1f87\\u1f90-\\u1f97\\u1fa0-\\u1fa7\\u1fb0-\\u1fb4\\u1fb6-\\u1fb7\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fc7\\u1fd0-\\u1fd3\\u1fd6-\\u1fd7\\u1fe0-\\u1fe7\\u1ff2-\\u1ff4\\u1ff6-\\u1ff7\\u210a\\u210e-\\u210f\\u2113\\u212f\\u2134\\u2139\\u213c-\\u213d\\u2146-\\u2149\\u214e\\u2184\\u2c30-\\u2c5e\\u2c61\\u2c65-\\u2c66\\u2c68\\u2c6a\\u2c6c\\u2c71\\u2c73-\\u2c74\\u2c76-\\u2c7b\\u2c81\\u2c83\\u2c85\\u2c87\\u2c89\\u2c8b\\u2c8d\\u2c8f\\u2c91\\u2c93\\u2c95\\u2c97\\u2c99\\u2c9b\\u2c9d\\u2c9f\\u2ca1\\u2ca3\\u2ca5\\u2ca7\\u2ca9\\u2cab\\u2cad\\u2caf\\u2cb1\\u2cb3\\u2cb5\\u2cb7\\u2cb9\\u2cbb\\u2cbd\\u2cbf\\u2cc1\\u2cc3\\u2cc5\\u2cc7\\u2cc9\\u2ccb\\u2ccd\\u2ccf\\u2cd1\\u2cd3\\u2cd5\\u2cd7\\u2cd9\\u2cdb\\u2cdd\\u2cdf\\u2ce1\\u2ce3-\\u2ce4\\u2cec\\u2cee\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\ua641\\ua643\\ua645\\ua647\\ua649\\ua64b\\ua64d\\ua64f\\ua651\\ua653\\ua655\\ua657\\ua659\\ua65b\\ua65d\\ua65f\\ua661\\ua663\\ua665\\ua667\\ua669\\ua66b\\ua66d\\ua681\\ua683\\ua685\\ua687\\ua689\\ua68b\\ua68d\\ua68f\\ua691\\ua693\\ua695\\ua697\\ua723\\ua725\\ua727\\ua729\\ua72b\\ua72d\\ua72f-\\ua731\\ua733\\ua735\\ua737\\ua739\\ua73b\\ua73d\\ua73f\\ua741\\ua743\\ua745\\ua747\\ua749\\ua74b\\ua74d\\ua74f\\ua751\\ua753\\ua755\\ua757\\ua759\\ua75b\\ua75d\\ua75f\\ua761\\ua763\\ua765\\ua767\\ua769\\ua76b\\ua76d\\ua76f\\ua771-\\ua778\\ua77a\\ua77c\\ua77f\\ua781\\ua783\\ua785\\ua787\\ua78c\\ua78e\\ua791\\ua793\\ua7a1\\ua7a3\\ua7a5\\ua7a7\\ua7a9\\ua7fa\\ufb00-\\ufb06\\ufb13-\\ufb17\\uff41-\\uff5a\\u01c5\\u01c8\\u01cb\\u01f2\\u1f88-\\u1f8f\\u1f98-\\u1f9f\\u1fa8-\\u1faf\\u1fbc\\u1fcc\\u1ffc\\u02b0-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0374\\u037a\\u0559\\u0640\\u06e5-\\u06e6\\u07f4-\\u07f5\\u07fa\\u081a\\u0824\\u0828\\u0971\\u0e46\\u0ec6\\u10fc\\u17d7\\u1843\\u1aa7\\u1c78-\\u1c7d\\u1d2c-\\u1d6a\\u1d78\\u1d9b-\\u1dbf\\u2071\\u207f\\u2090-\\u209c\\u2c7c-\\u2c7d\\u2d6f\\u2e2f\\u3005\\u3031-\\u3035\\u303b\\u309d-\\u309e\\u30fc-\\u30fe\\ua015\\ua4f8-\\ua4fd\\ua60c\\ua67f\\ua717-\\ua71f\\ua770\\ua788\\ua7f8-\\ua7f9\\ua9cf\\uaa70\\uaadd\\uaaf3-\\uaaf4\\uff70\\uff9e-\\uff9f\\u16ee-\\u16f0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303a\\ua6e6-\\ua6ef][A-Z\\u00c0-\\u00d6\\u00d8-\\u00de\\u0100\\u0102\\u0104\\u0106\\u0108\\u010a\\u010c\\u010e\\u0110\\u0112\\u0114\\u0116\\u0118\\u011a\\u011c\\u011e\\u0120\\u0122\\u0124\\u0126\\u0128\\u012a\\u012c\\u012e\\u0130\\u0132\\u0134\\u0136\\u0139\\u013b\\u013d\\u013f\\u0141\\u0143\\u0145\\u0147\\u014a\\u014c\\u014e\\u0150\\u0152\\u0154\\u0156\\u0158\\u015a\\u015c\\u015e\\u0160\\u0162\\u0164\\u0166\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u0174\\u0176\\u0178-\\u0179\\u017b\\u017d\\u0181-\\u0182\\u0184\\u0186-\\u0187\\u0189-\\u018b\\u018e-\\u0191\\u0193-\\u0194\\u0196-\\u0198\\u019c-\\u019d\\u019f-\\u01a0\\u01a2\\u01a4\\u01a6-\\u01a7\\u01a9\\u01ac\\u01ae-\\u01af\\u01b1-\\u01b3\\u01b5\\u01b7-\\u01b8\\u01bc\\u01c4\\u01c7\\u01ca\\u01cd\\u01cf\\u01d1\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u01de\\u01e0\\u01e2\\u01e4\\u01e6\\u01e8\\u01ea\\u01ec\\u01ee\\u01f1\\u01f4\\u01f6-\\u01f8\\u01fa\\u01fc\\u01fe\\u0200\\u0202\\u0204\\u0206\\u0208\\u020a\\u020c\\u020e\\u0210\\u0212\\u0214\\u0216\\u0218\\u021a\\u021c\\u021e\\u0220\\u0222\\u0224\\u0226\\u0228\\u022a\\u022c\\u022e\\u0230\\u0232\\u023a-\\u023b\\u023d-\\u023e\\u0241\\u0243-\\u0246\\u0248\\u024a\\u024c\\u024e\\u0370\\u0372\\u0376\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u038f\\u0391-\\u03a1\\u03a3-\\u03ab\\u03cf\\u03d2-\\u03d4\\u03d8\\u03da\\u03dc\\u03de\\u03e0\\u03e2\\u03e4\\u03e6\\u03e8\\u03ea\\u03ec\\u03ee\\u03f4\\u03f7\\u03f9-\\u03fa\\u03fd-\\u042f\\u0460\\u0462\\u0464\\u0466\\u0468\\u046a\\u046c\\u046e\\u0470\\u0472\\u0474\\u0476\\u0478\\u047a\\u047c\\u047e\\u0480\\u048a\\u048c\\u048e\\u0490\\u0492\\u0494\\u0496\\u0498\\u049a\\u049c\\u049e\\u04a0\\u04a2\\u04a4\\u04a6\\u04a8\\u04aa\\u04ac\\u04ae\\u04b0\\u04b2\\u04b4\\u04b6\\u04b8\\u04ba\\u04bc\\u04be\\u04c0-\\u04c1\\u04c3\\u04c5\\u04c7\\u04c9\\u04cb\\u04cd\\u04d0\\u04d2\\u04d4\\u04d6\\u04d8\\u04da\\u04dc\\u04de\\u04e0\\u04e2\\u04e4\\u04e6\\u04e8\\u04ea\\u04ec\\u04ee\\u04f0\\u04f2\\u04f4\\u04f6\\u04f8\\u04fa\\u04fc\\u04fe\\u0500\\u0502\\u0504\\u0506\\u0508\\u050a\\u050c\\u050e\\u0510\\u0512\\u0514\\u0516\\u0518\\u051a\\u051c\\u051e\\u0520\\u0522\\u0524\\u0526\\u0531-\\u0556\\u10a0-\\u10c5\\u10c7\\u10cd\\u1e00\\u1e02\\u1e04\\u1e06\\u1e08\\u1e0a\\u1e0c\\u1e0e\\u1e10\\u1e12\\u1e14\\u1e16\\u1e18\\u1e1a\\u1e1c\\u1e1e\\u1e20\\u1e22\\u1e24\\u1e26\\u1e28\\u1e2a\\u1e2c\\u1e2e\\u1e30\\u1e32\\u1e34\\u1e36\\u1e38\\u1e3a\\u1e3c\\u1e3e\\u1e40\\u1e42\\u1e44\\u1e46\\u1e48\\u1e4a\\u1e4c\\u1e4e\\u1e50\\u1e52\\u1e54\\u1e56\\u1e58\\u1e5a\\u1e5c\\u1e5e\\u1e60\\u1e62\\u1e64\\u1e66\\u1e68\\u1e6a\\u1e6c\\u1e6e\\u1e70\\u1e72\\u1e74\\u1e76\\u1e78\\u1e7a\\u1e7c\\u1e7e\\u1e80\\u1e82\\u1e84\\u1e86\\u1e88\\u1e8a\\u1e8c\\u1e8e\\u1e90\\u1e92\\u1e94\\u1e9e\\u1ea0\\u1ea2\\u1ea4\\u1ea6\\u1ea8\\u1eaa\\u1eac\\u1eae\\u1eb0\\u1eb2\\u1eb4\\u1eb6\\u1eb8\\u1eba\\u1ebc\\u1ebe\\u1ec0\\u1ec2\\u1ec4\\u1ec6\\u1ec8\\u1eca\\u1ecc\\u1ece\\u1ed0\\u1ed2\\u1ed4\\u1ed6\\u1ed8\\u1eda\\u1edc\\u1ede\\u1ee0\\u1ee2\\u1ee4\\u1ee6\\u1ee8\\u1eea\\u1eec\\u1eee\\u1ef0\\u1ef2\\u1ef4\\u1ef6\\u1ef8\\u1efa\\u1efc\\u1efe\\u1f08-\\u1f0f\\u1f18-\\u1f1d\\u1f28-\\u1f2f\\u1f38-\\u1f3f\\u1f48-\\u1f4d\\u1f59\\u1f5b\\u1f5d\\u1f5f\\u1f68-\\u1f6f\\u1fb8-\\u1fbb\\u1fc8-\\u1fcb\\u1fd8-\\u1fdb\\u1fe8-\\u1fec\\u1ff8-\\u1ffb\\u2102\\u2107\\u210b-\\u210d\\u2110-\\u2112\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u2130-\\u2133\\u213e-\\u213f\\u2145\\u2183\\u2c00-\\u2c2e\\u2c60\\u2c62-\\u2c64\\u2c67\\u2c69\\u2c6b\\u2c6d-\\u2c70\\u2c72\\u2c75\\u2c7e-\\u2c80\\u2c82\\u2c84\\u2c86\\u2c88\\u2c8a\\u2c8c\\u2c8e\\u2c90\\u2c92\\u2c94\\u2c96\\u2c98\\u2c9a\\u2c9c\\u2c9e\\u2ca0\\u2ca2\\u2ca4\\u2ca6\\u2ca8\\u2caa\\u2cac\\u2cae\\u2cb0\\u2cb2\\u2cb4\\u2cb6\\u2cb8\\u2cba\\u2cbc\\u2cbe\\u2cc0\\u2cc2\\u2cc4\\u2cc6\\u2cc8\\u2cca\\u2ccc\\u2cce\\u2cd0\\u2cd2\\u2cd4\\u2cd6\\u2cd8\\u2cda\\u2cdc\\u2cde\\u2ce0\\u2ce2\\u2ceb\\u2ced\\u2cf2\\ua640\\ua642\\ua644\\ua646\\ua648\\ua64a\\ua64c\\ua64e\\ua650\\ua652\\ua654\\ua656\\ua658\\ua65a\\ua65c\\ua65e\\ua660\\ua662\\ua664\\ua666\\ua668\\ua66a\\ua66c\\ua680\\ua682\\ua684\\ua686\\ua688\\ua68a\\ua68c\\ua68e\\ua690\\ua692\\ua694\\ua696\\ua722\\ua724\\ua726\\ua728\\ua72a\\ua72c\\ua72e\\ua732\\ua734\\ua736\\ua738\\ua73a\\ua73c\\ua73e\\ua740\\ua742\\ua744\\ua746\\ua748\\ua74a\\ua74c\\ua74e\\ua750\\ua752\\ua754\\ua756\\ua758\\ua75a\\ua75c\\ua75e\\ua760\\ua762\\ua764\\ua766\\ua768\\ua76a\\ua76c\\ua76e\\ua779\\ua77b\\ua77d-\\ua77e\\ua780\\ua782\\ua784\\ua786\\ua78b\\ua78d\\ua790\\ua792\\ua7a0\\ua7a2\\ua7a4\\ua7a6\\ua7a8\\ua7aa\\uff21-\\uff3aa-z\\u00b5\\u00df-\\u00f6\\u00f8-\\u00ff\\u0101\\u0103\\u0105\\u0107\\u0109\\u010b\\u010d\\u010f\\u0111\\u0113\\u0115\\u0117\\u0119\\u011b\\u011d\\u011f\\u0121\\u0123\\u0125\\u0127\\u0129\\u012b\\u012d\\u012f\\u0131\\u0133\\u0135\\u0137-\\u0138\\u013a\\u013c\\u013e\\u0140\\u0142\\u0144\\u0146\\u0148-\\u0149\\u014b\\u014d\\u014f\\u0151\\u0153\\u0155\\u0157\\u0159\\u015b\\u015d\\u015f\\u0161\\u0163\\u0165\\u0167\\u0169\\u016b\\u016d\\u016f\\u0171\\u0173\\u0175\\u0177\\u017a\\u017c\\u017e-\\u0180\\u0183\\u0185\\u0188\\u018c-\\u018d\\u0192\\u0195\\u0199-\\u019b\\u019e\\u01a1\\u01a3\\u01a5\\u01a8\\u01aa-\\u01ab\\u01ad\\u01b0\\u01b4\\u01b6\\u01b9-\\u01ba\\u01bd-\\u01bf\\u01c6\\u01c9\\u01cc\\u01ce\\u01d0\\u01d2\\u01d4\\u01d6\\u01d8\\u01da\\u01dc-\\u01dd\\u01df\\u01e1\\u01e3\\u01e5\\u01e7\\u01e9\\u01eb\\u01ed\\u01ef-\\u01f0\\u01f3\\u01f5\\u01f9\\u01fb\\u01fd\\u01ff\\u0201\\u0203\\u0205\\u0207\\u0209\\u020b\\u020d\\u020f\\u0211\\u0213\\u0215\\u0217\\u0219\\u021b\\u021d\\u021f\\u0221\\u0223\\u0225\\u0227\\u0229\\u022b\\u022d\\u022f\\u0231\\u0233-\\u0239\\u023c\\u023f-\\u0240\\u0242\\u0247\\u0249\\u024b\\u024d\\u024f-\\u0293\\u0295-\\u02af\\u0371\\u0373\\u0377\\u037b-\\u037d\\u0390\\u03ac-\\u03ce\\u03d0-\\u03d1\\u03d5-\\u03d7\\u03d9\\u03db\\u03dd\\u03df\\u03e1\\u03e3\\u03e5\\u03e7\\u03e9\\u03eb\\u03ed\\u03ef-\\u03f3\\u03f5\\u03f8\\u03fb-\\u03fc\\u0430-\\u045f\\u0461\\u0463\\u0465\\u0467\\u0469\\u046b\\u046d\\u046f\\u0471\\u0473\\u0475\\u0477\\u0479\\u047b\\u047d\\u047f\\u0481\\u048b\\u048d\\u048f\\u0491\\u0493\\u0495\\u0497\\u0499\\u049b\\u049d\\u049f\\u04a1\\u04a3\\u04a5\\u04a7\\u04a9\\u04ab\\u04ad\\u04af\\u04b1\\u04b3\\u04b5\\u04b7\\u04b9\\u04bb\\u04bd\\u04bf\\u04c2\\u04c4\\u04c6\\u04c8\\u04ca\\u04cc\\u04ce-\\u04cf\\u04d1\\u04d3\\u04d5\\u04d7\\u04d9\\u04db\\u04dd\\u04df\\u04e1\\u04e3\\u04e5\\u04e7\\u04e9\\u04eb\\u04ed\\u04ef\\u04f1\\u04f3\\u04f5\\u04f7\\u04f9\\u04fb\\u04fd\\u04ff\\u0501\\u0503\\u0505\\u0507\\u0509\\u050b\\u050d\\u050f\\u0511\\u0513\\u0515\\u0517\\u0519\\u051b\\u051d\\u051f\\u0521\\u0523\\u0525\\u0527\\u0561-\\u0587\\u1d00-\\u1d2b\\u1d6b-\\u1d77\\u1d79-\\u1d9a\\u1e01\\u1e03\\u1e05\\u1e07\\u1e09\\u1e0b\\u1e0d\\u1e0f\\u1e11\\u1e13\\u1e15\\u1e17\\u1e19\\u1e1b\\u1e1d\\u1e1f\\u1e21\\u1e23\\u1e25\\u1e27\\u1e29\\u1e2b\\u1e2d\\u1e2f\\u1e31\\u1e33\\u1e35\\u1e37\\u1e39\\u1e3b\\u1e3d\\u1e3f\\u1e41\\u1e43\\u1e45\\u1e47\\u1e49\\u1e4b\\u1e4d\\u1e4f\\u1e51\\u1e53\\u1e55\\u1e57\\u1e59\\u1e5b\\u1e5d\\u1e5f\\u1e61\\u1e63\\u1e65\\u1e67\\u1e69\\u1e6b\\u1e6d\\u1e6f\\u1e71\\u1e73\\u1e75\\u1e77\\u1e79\\u1e7b\\u1e7d\\u1e7f\\u1e81\\u1e83\\u1e85\\u1e87\\u1e89\\u1e8b\\u1e8d\\u1e8f\\u1e91\\u1e93\\u1e95-\\u1e9d\\u1e9f\\u1ea1\\u1ea3\\u1ea5\\u1ea7\\u1ea9\\u1eab\\u1ead\\u1eaf\\u1eb1\\u1eb3\\u1eb5\\u1eb7\\u1eb9\\u1ebb\\u1ebd\\u1ebf\\u1ec1\\u1ec3\\u1ec5\\u1ec7\\u1ec9\\u1ecb\\u1ecd\\u1ecf\\u1ed1\\u1ed3\\u1ed5\\u1ed7\\u1ed9\\u1edb\\u1edd\\u1edf\\u1ee1\\u1ee3\\u1ee5\\u1ee7\\u1ee9\\u1eeb\\u1eed\\u1eef\\u1ef1\\u1ef3\\u1ef5\\u1ef7\\u1ef9\\u1efb\\u1efd\\u1eff-\\u1f07\\u1f10-\\u1f15\\u1f20-\\u1f27\\u1f30-\\u1f37\\u1f40-\\u1f45\\u1f50-\\u1f57\\u1f60-\\u1f67\\u1f70-\\u1f7d\\u1f80-\\u1f87\\u1f90-\\u1f97\\u1fa0-\\u1fa7\\u1fb0-\\u1fb4\\u1fb6-\\u1fb7\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fc7\\u1fd0-\\u1fd3\\u1fd6-\\u1fd7\\u1fe0-\\u1fe7\\u1ff2-\\u1ff4\\u1ff6-\\u1ff7\\u210a\\u210e-\\u210f\\u2113\\u212f\\u2134\\u2139\\u213c-\\u213d\\u2146-\\u2149\\u214e\\u2184\\u2c30-\\u2c5e\\u2c61\\u2c65-\\u2c66\\u2c68\\u2c6a\\u2c6c\\u2c71\\u2c73-\\u2c74\\u2c76-\\u2c7b\\u2c81\\u2c83\\u2c85\\u2c87\\u2c89\\u2c8b\\u2c8d\\u2c8f\\u2c91\\u2c93\\u2c95\\u2c97\\u2c99\\u2c9b\\u2c9d\\u2c9f\\u2ca1\\u2ca3\\u2ca5\\u2ca7\\u2ca9\\u2cab\\u2cad\\u2caf\\u2cb1\\u2cb3\\u2cb5\\u2cb7\\u2cb9\\u2cbb\\u2cbd\\u2cbf\\u2cc1\\u2cc3\\u2cc5\\u2cc7\\u2cc9\\u2ccb\\u2ccd\\u2ccf\\u2cd1\\u2cd3\\u2cd5\\u2cd7\\u2cd9\\u2cdb\\u2cdd\\u2cdf\\u2ce1\\u2ce3-\\u2ce4\\u2cec\\u2cee\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\ua641\\ua643\\ua645\\ua647\\ua649\\ua64b\\ua64d\\ua64f\\ua651\\ua653\\ua655\\ua657\\ua659\\ua65b\\ua65d\\ua65f\\ua661\\ua663\\ua665\\ua667\\ua669\\ua66b\\ua66d\\ua681\\ua683\\ua685\\ua687\\ua689\\ua68b\\ua68d\\ua68f\\ua691\\ua693\\ua695\\ua697\\ua723\\ua725\\ua727\\ua729\\ua72b\\ua72d\\ua72f-\\ua731\\ua733\\ua735\\ua737\\ua739\\ua73b\\ua73d\\ua73f\\ua741\\ua743\\ua745\\ua747\\ua749\\ua74b\\ua74d\\ua74f\\ua751\\ua753\\ua755\\ua757\\ua759\\ua75b\\ua75d\\ua75f\\ua761\\ua763\\ua765\\ua767\\ua769\\ua76b\\ua76d\\ua76f\\ua771-\\ua778\\ua77a\\ua77c\\ua77f\\ua781\\ua783\\ua785\\ua787\\ua78c\\ua78e\\ua791\\ua793\\ua7a1\\ua7a3\\ua7a5\\ua7a7\\ua7a9\\ua7fa\\ufb00-\\ufb06\\ufb13-\\ufb17\\uff41-\\uff5a\\u01c5\\u01c8\\u01cb\\u01f2\\u1f88-\\u1f8f\\u1f98-\\u1f9f\\u1fa8-\\u1faf\\u1fbc\\u1fcc\\u1ffc\\u02b0-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0374\\u037a\\u0559\\u0640\\u06e5-\\u06e6\\u07f4-\\u07f5\\u07fa\\u081a\\u0824\\u0828\\u0971\\u0e46\\u0ec6\\u10fc\\u17d7\\u1843\\u1aa7\\u1c78-\\u1c7d\\u1d2c-\\u1d6a\\u1d78\\u1d9b-\\u1dbf\\u2071\\u207f\\u2090-\\u209c\\u2c7c-\\u2c7d\\u2d6f\\u2e2f\\u3005\\u3031-\\u3035\\u303b\\u309d-\\u309e\\u30fc-\\u30fe\\ua015\\ua4f8-\\ua4fd\\ua60c\\ua67f\\ua717-\\ua71f\\ua770\\ua788\\ua7f8-\\ua7f9\\ua9cf\\uaa70\\uaadd\\uaaf3-\\uaaf4\\uff70\\uff9e-\\uff9f\\u16ee-\\u16f0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303a\\ua6e6-\\ua6ef0-9\\u0660-\\u0669\\u06f0-\\u06f9\\u07c0-\\u07c9\\u0966-\\u096f\\u09e6-\\u09ef\\u0a66-\\u0a6f\\u0ae6-\\u0aef\\u0b66-\\u0b6f\\u0be6-\\u0bef\\u0c66-\\u0c6f\\u0ce6-\\u0cef\\u0d66-\\u0d6f\\u0e50-\\u0e59\\u0ed0-\\u0ed9\\u0f20-\\u0f29\\u1040-\\u1049\\u1090-\\u1099\\u17e0-\\u17e9\\u1810-\\u1819\\u1946-\\u194f\\u19d0-\\u19d9\\u1a80-\\u1a89\\u1a90-\\u1a99\\u1b50-\\u1b59\\u1bb0-\\u1bb9\\u1c40-\\u1c49\\u1c50-\\u1c59\\ua620-\\ua629\\ua8d0-\\ua8d9\\ua900-\\ua909\\ua9d0-\\ua9d9\\uaa50-\\uaa59\\uabf0-\\uabf9\\uff10-\\uff19_\\u203f-\\u2040\\u2054\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\uff3f\\u00ad\\u0600-\\u0604\\u061c\\u06dd\\u070f\\u180e\\u200b-\\u200f\\u202a-\\u202e\\u2060-\\u2064\\u2066-\\u206f\\ufeff\\ufff9-\\ufffb\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u065f\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7-\\u06e8\\u06ea-\\u06ed\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0902\\u093a\\u093c\\u0941-\\u0948\\u094d\\u0951-\\u0957\\u0962-\\u0963\\u0981\\u09bc\\u09c1-\\u09c4\\u09cd\\u09e2-\\u09e3\\u0a01-\\u0a02\\u0a3c\\u0a41-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a70-\\u0a71\\u0a75\\u0a81-\\u0a82\\u0abc\\u0ac1-\\u0ac5\\u0ac7-\\u0ac8\\u0acd\\u0ae2-\\u0ae3\\u0b01\\u0b3c\\u0b3f\\u0b41-\\u0b44\\u0b4d\\u0b56\\u0b62-\\u0b63\\u0b82\\u0bc0\\u0bcd\\u0c3e-\\u0c40\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c62-\\u0c63\\u0cbc\\u0cbf\\u0cc6\\u0ccc-\\u0ccd\\u0ce2-\\u0ce3\\u0d41-\\u0d44\\u0d4d\\u0d62-\\u0d63\\u0dca\\u0dd2-\\u0dd4\\u0dd6\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0eb1\\u0eb4-\\u0eb9\\u0ebb-\\u0ebc\\u0ec8-\\u0ecd\\u0f18-\\u0f19\\u0f35\\u0f37\\u0f39\\u0f71-\\u0f7e\\u0f80-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102d-\\u1030\\u1032-\\u1037\\u1039-\\u103a\\u103d-\\u103e\\u1058-\\u1059\\u105e-\\u1060\\u1071-\\u1074\\u1082\\u1085-\\u1086\\u108d\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752-\\u1753\\u1772-\\u1773\\u17b4-\\u17b5\\u17b7-\\u17bd\\u17c6\\u17c9-\\u17d3\\u17dd\\u180b-\\u180d\\u18a9\\u1920-\\u1922\\u1927-\\u1928\\u1932\\u1939-\\u193b\\u1a17-\\u1a18\\u1a1b\\u1a56\\u1a58-\\u1a5e\\u1a60\\u1a62\\u1a65-\\u1a6c\\u1a73-\\u1a7c\\u1a7f\\u1b00-\\u1b03\\u1b34\\u1b36-\\u1b3a\\u1b3c\\u1b42\\u1b6b-\\u1b73\\u1b80-\\u1b81\\u1ba2-\\u1ba5\\u1ba8-\\u1ba9\\u1bab\\u1be6\\u1be8-\\u1be9\\u1bed\\u1bef-\\u1bf1\\u1c2c-\\u1c33\\u1c36-\\u1c37\\u1cd0-\\u1cd2\\u1cd4-\\u1ce0\\u1ce2-\\u1ce8\\u1ced\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302d\\u3099-\\u309a\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua802\\ua806\\ua80b\\ua825-\\ua826\\ua8c4\\ua8e0-\\ua8f1\\ua926-\\ua92d\\ua947-\\ua951\\ua980-\\ua982\\ua9b3\\ua9b6-\\ua9b9\\ua9bc\\uaa29-\\uaa2e\\uaa31-\\uaa32\\uaa35-\\uaa36\\uaa43\\uaa4c\\uaab0\\uaab2-\\uaab4\\uaab7-\\uaab8\\uaabe-\\uaabf\\uaac1\\uaaec-\\uaaed\\uaaf6\\uabe5\\uabe8\\uabed\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\u0903\\u093b\\u093e-\\u0940\\u0949-\\u094c\\u094e-\\u094f\\u0982-\\u0983\\u09be-\\u09c0\\u09c7-\\u09c8\\u09cb-\\u09cc\\u09d7\\u0a03\\u0a3e-\\u0a40\\u0a83\\u0abe-\\u0ac0\\u0ac9\\u0acb-\\u0acc\\u0b02-\\u0b03\\u0b3e\\u0b40\\u0b47-\\u0b48\\u0b4b-\\u0b4c\\u0b57\\u0bbe-\\u0bbf\\u0bc1-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcc\\u0bd7\\u0c01-\\u0c03\\u0c41-\\u0c44\\u0c82-\\u0c83\\u0cbe\\u0cc0-\\u0cc4\\u0cc7-\\u0cc8\\u0cca-\\u0ccb\\u0cd5-\\u0cd6\\u0d02-\\u0d03\\u0d3e-\\u0d40\\u0d46-\\u0d48\\u0d4a-\\u0d4c\\u0d57\\u0d82-\\u0d83\\u0dcf-\\u0dd1\\u0dd8-\\u0ddf\\u0df2-\\u0df3\\u0f3e-\\u0f3f\\u0f7f\\u102b-\\u102c\\u1031\\u1038\\u103b-\\u103c\\u1056-\\u1057\\u1062-\\u1064\\u1067-\\u106d\\u1083-\\u1084\\u1087-\\u108c\\u108f\\u109a-\\u109c\\u17b6\\u17be-\\u17c5\\u17c7-\\u17c8\\u1923-\\u1926\\u1929-\\u192b\\u1930-\\u1931\\u1933-\\u1938\\u19b0-\\u19c0\\u19c8-\\u19c9\\u1a19-\\u1a1a\\u1a55\\u1a57\\u1a61\\u1a63-\\u1a64\\u1a6d-\\u1a72\\u1b04\\u1b35\\u1b3b\\u1b3d-\\u1b41\\u1b43-\\u1b44\\u1b82\\u1ba1\\u1ba6-\\u1ba7\\u1baa\\u1bac-\\u1bad\\u1be7\\u1bea-\\u1bec\\u1bee\\u1bf2-\\u1bf3\\u1c24-\\u1c2b\\u1c34-\\u1c35\\u1ce1\\u1cf2-\\u1cf3\\u302e-\\u302f\\ua823-\\ua824\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c3\\ua952-\\ua953\\ua983\\ua9b4-\\ua9b5\\ua9ba-\\ua9bb\\ua9bd-\\ua9c0\\uaa2f-\\uaa30\\uaa33-\\uaa34\\uaa4d\\uaa7b\\uaaeb\\uaaee-\\uaaef\\uaaf5\\uabe3-\\uabe4\\uabe6-\\uabe7\\uabe9-\\uabea\\uabec]*|`@?[_A-Z\\u00c0-\\u00d6\\u00d8-\\u00de\\u0100\\u0102\\u0104\\u0106\\u0108\\u010a\\u010c\\u010e\\u0110\\u0112\\u0114\\u0116\\u0118\\u011a\\u011c\\u011e\\u0120\\u0122\\u0124\\u0126\\u0128\\u012a\\u012c\\u012e\\u0130\\u0132\\u0134\\u0136\\u0139\\u013b\\u013d\\u013f\\u0141\\u0143\\u0145\\u0147\\u014a\\u014c\\u014e\\u0150\\u0152\\u0154\\u0156\\u0158\\u015a\\u015c\\u015e\\u0160\\u0162\\u0164\\u0166\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u0174\\u0176\\u0178-\\u0179\\u017b\\u017d\\u0181-\\u0182\\u0184\\u0186-\\u0187\\u0189-\\u018b\\u018e-\\u0191\\u0193-\\u0194\\u0196-\\u0198\\u019c-\\u019d\\u019f-\\u01a0\\u01a2\\u01a4\\u01a6-\\u01a7\\u01a9\\u01ac\\u01ae-\\u01af\\u01b1-\\u01b3\\u01b5\\u01b7-\\u01b8\\u01bc\\u01c4\\u01c7\\u01ca\\u01cd\\u01cf\\u01d1\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u01de\\u01e0\\u01e2\\u01e4\\u01e6\\u01e8\\u01ea\\u01ec\\u01ee\\u01f1\\u01f4\\u01f6-\\u01f8\\u01fa\\u01fc\\u01fe\\u0200\\u0202\\u0204\\u0206\\u0208\\u020a\\u020c\\u020e\\u0210\\u0212\\u0214\\u0216\\u0218\\u021a\\u021c\\u021e\\u0220\\u0222\\u0224\\u0226\\u0228\\u022a\\u022c\\u022e\\u0230\\u0232\\u023a-\\u023b\\u023d-\\u023e\\u0241\\u0243-\\u0246\\u0248\\u024a\\u024c\\u024e\\u0370\\u0372\\u0376\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u038f\\u0391-\\u03a1\\u03a3-\\u03ab\\u03cf\\u03d2-\\u03d4\\u03d8\\u03da\\u03dc\\u03de\\u03e0\\u03e2\\u03e4\\u03e6\\u03e8\\u03ea\\u03ec\\u03ee\\u03f4\\u03f7\\u03f9-\\u03fa\\u03fd-\\u042f\\u0460\\u0462\\u0464\\u0466\\u0468\\u046a\\u046c\\u046e\\u0470\\u0472\\u0474\\u0476\\u0478\\u047a\\u047c\\u047e\\u0480\\u048a\\u048c\\u048e\\u0490\\u0492\\u0494\\u0496\\u0498\\u049a\\u049c\\u049e\\u04a0\\u04a2\\u04a4\\u04a6\\u04a8\\u04aa\\u04ac\\u04ae\\u04b0\\u04b2\\u04b4\\u04b6\\u04b8\\u04ba\\u04bc\\u04be\\u04c0-\\u04c1\\u04c3\\u04c5\\u04c7\\u04c9\\u04cb\\u04cd\\u04d0\\u04d2\\u04d4\\u04d6\\u04d8\\u04da\\u04dc\\u04de\\u04e0\\u04e2\\u04e4\\u04e6\\u04e8\\u04ea\\u04ec\\u04ee\\u04f0\\u04f2\\u04f4\\u04f6\\u04f8\\u04fa\\u04fc\\u04fe\\u0500\\u0502\\u0504\\u0506\\u0508\\u050a\\u050c\\u050e\\u0510\\u0512\\u0514\\u0516\\u0518\\u051a\\u051c\\u051e\\u0520\\u0522\\u0524\\u0526\\u0531-\\u0556\\u10a0-\\u10c5\\u10c7\\u10cd\\u1e00\\u1e02\\u1e04\\u1e06\\u1e08\\u1e0a\\u1e0c\\u1e0e\\u1e10\\u1e12\\u1e14\\u1e16\\u1e18\\u1e1a\\u1e1c\\u1e1e\\u1e20\\u1e22\\u1e24\\u1e26\\u1e28\\u1e2a\\u1e2c\\u1e2e\\u1e30\\u1e32\\u1e34\\u1e36\\u1e38\\u1e3a\\u1e3c\\u1e3e\\u1e40\\u1e42\\u1e44\\u1e46\\u1e48\\u1e4a\\u1e4c\\u1e4e\\u1e50\\u1e52\\u1e54\\u1e56\\u1e58\\u1e5a\\u1e5c\\u1e5e\\u1e60\\u1e62\\u1e64\\u1e66\\u1e68\\u1e6a\\u1e6c\\u1e6e\\u1e70\\u1e72\\u1e74\\u1e76\\u1e78\\u1e7a\\u1e7c\\u1e7e\\u1e80\\u1e82\\u1e84\\u1e86\\u1e88\\u1e8a\\u1e8c\\u1e8e\\u1e90\\u1e92\\u1e94\\u1e9e\\u1ea0\\u1ea2\\u1ea4\\u1ea6\\u1ea8\\u1eaa\\u1eac\\u1eae\\u1eb0\\u1eb2\\u1eb4\\u1eb6\\u1eb8\\u1eba\\u1ebc\\u1ebe\\u1ec0\\u1ec2\\u1ec4\\u1ec6\\u1ec8\\u1eca\\u1ecc\\u1ece\\u1ed0\\u1ed2\\u1ed4\\u1ed6\\u1ed8\\u1eda\\u1edc\\u1ede\\u1ee0\\u1ee2\\u1ee4\\u1ee6\\u1ee8\\u1eea\\u1eec\\u1eee\\u1ef0\\u1ef2\\u1ef4\\u1ef6\\u1ef8\\u1efa\\u1efc\\u1efe\\u1f08-\\u1f0f\\u1f18-\\u1f1d\\u1f28-\\u1f2f\\u1f38-\\u1f3f\\u1f48-\\u1f4d\\u1f59\\u1f5b\\u1f5d\\u1f5f\\u1f68-\\u1f6f\\u1fb8-\\u1fbb\\u1fc8-\\u1fcb\\u1fd8-\\u1fdb\\u1fe8-\\u1fec\\u1ff8-\\u1ffb\\u2102\\u2107\\u210b-\\u210d\\u2110-\\u2112\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u2130-\\u2133\\u213e-\\u213f\\u2145\\u2183\\u2c00-\\u2c2e\\u2c60\\u2c62-\\u2c64\\u2c67\\u2c69\\u2c6b\\u2c6d-\\u2c70\\u2c72\\u2c75\\u2c7e-\\u2c80\\u2c82\\u2c84\\u2c86\\u2c88\\u2c8a\\u2c8c\\u2c8e\\u2c90\\u2c92\\u2c94\\u2c96\\u2c98\\u2c9a\\u2c9c\\u2c9e\\u2ca0\\u2ca2\\u2ca4\\u2ca6\\u2ca8\\u2caa\\u2cac\\u2cae\\u2cb0\\u2cb2\\u2cb4\\u2cb6\\u2cb8\\u2cba\\u2cbc\\u2cbe\\u2cc0\\u2cc2\\u2cc4\\u2cc6\\u2cc8\\u2cca\\u2ccc\\u2cce\\u2cd0\\u2cd2\\u2cd4\\u2cd6\\u2cd8\\u2cda\\u2cdc\\u2cde\\u2ce0\\u2ce2\\u2ceb\\u2ced\\u2cf2\\ua640\\ua642\\ua644\\ua646\\ua648\\ua64a\\ua64c\\ua64e\\ua650\\ua652\\ua654\\ua656\\ua658\\ua65a\\ua65c\\ua65e\\ua660\\ua662\\ua664\\ua666\\ua668\\ua66a\\ua66c\\ua680\\ua682\\ua684\\ua686\\ua688\\ua68a\\ua68c\\ua68e\\ua690\\ua692\\ua694\\ua696\\ua722\\ua724\\ua726\\ua728\\ua72a\\ua72c\\ua72e\\ua732\\ua734\\ua736\\ua738\\ua73a\\ua73c\\ua73e\\ua740\\ua742\\ua744\\ua746\\ua748\\ua74a\\ua74c\\ua74e\\ua750\\ua752\\ua754\\ua756\\ua758\\ua75a\\ua75c\\ua75e\\ua760\\ua762\\ua764\\ua766\\ua768\\ua76a\\ua76c\\ua76e\\ua779\\ua77b\\ua77d-\\ua77e\\ua780\\ua782\\ua784\\ua786\\ua78b\\ua78d\\ua790\\ua792\\ua7a0\\ua7a2\\ua7a4\\ua7a6\\ua7a8\\ua7aa\\uff21-\\uff3aa-z\\u00b5\\u00df-\\u00f6\\u00f8-\\u00ff\\u0101\\u0103\\u0105\\u0107\\u0109\\u010b\\u010d\\u010f\\u0111\\u0113\\u0115\\u0117\\u0119\\u011b\\u011d\\u011f\\u0121\\u0123\\u0125\\u0127\\u0129\\u012b\\u012d\\u012f\\u0131\\u0133\\u0135\\u0137-\\u0138\\u013a\\u013c\\u013e\\u0140\\u0142\\u0144\\u0146\\u0148-\\u0149\\u014b\\u014d\\u014f\\u0151\\u0153\\u0155\\u0157\\u0159\\u015b\\u015d\\u015f\\u0161\\u0163\\u0165\\u0167\\u0169\\u016b\\u016d\\u016f\\u0171\\u0173\\u0175\\u0177\\u017a\\u017c\\u017e-\\u0180\\u0183\\u0185\\u0188\\u018c-\\u018d\\u0192\\u0195\\u0199-\\u019b\\u019e\\u01a1\\u01a3\\u01a5\\u01a8\\u01aa-\\u01ab\\u01ad\\u01b0\\u01b4\\u01b6\\u01b9-\\u01ba\\u01bd-\\u01bf\\u01c6\\u01c9\\u01cc\\u01ce\\u01d0\\u01d2\\u01d4\\u01d6\\u01d8\\u01da\\u01dc-\\u01dd\\u01df\\u01e1\\u01e3\\u01e5\\u01e7\\u01e9\\u01eb\\u01ed\\u01ef-\\u01f0\\u01f3\\u01f5\\u01f9\\u01fb\\u01fd\\u01ff\\u0201\\u0203\\u0205\\u0207\\u0209\\u020b\\u020d\\u020f\\u0211\\u0213\\u0215\\u0217\\u0219\\u021b\\u021d\\u021f\\u0221\\u0223\\u0225\\u0227\\u0229\\u022b\\u022d\\u022f\\u0231\\u0233-\\u0239\\u023c\\u023f-\\u0240\\u0242\\u0247\\u0249\\u024b\\u024d\\u024f-\\u0293\\u0295-\\u02af\\u0371\\u0373\\u0377\\u037b-\\u037d\\u0390\\u03ac-\\u03ce\\u03d0-\\u03d1\\u03d5-\\u03d7\\u03d9\\u03db\\u03dd\\u03df\\u03e1\\u03e3\\u03e5\\u03e7\\u03e9\\u03eb\\u03ed\\u03ef-\\u03f3\\u03f5\\u03f8\\u03fb-\\u03fc\\u0430-\\u045f\\u0461\\u0463\\u0465\\u0467\\u0469\\u046b\\u046d\\u046f\\u0471\\u0473\\u0475\\u0477\\u0479\\u047b\\u047d\\u047f\\u0481\\u048b\\u048d\\u048f\\u0491\\u0493\\u0495\\u0497\\u0499\\u049b\\u049d\\u049f\\u04a1\\u04a3\\u04a5\\u04a7\\u04a9\\u04ab\\u04ad\\u04af\\u04b1\\u04b3\\u04b5\\u04b7\\u04b9\\u04bb\\u04bd\\u04bf\\u04c2\\u04c4\\u04c6\\u04c8\\u04ca\\u04cc\\u04ce-\\u04cf\\u04d1\\u04d3\\u04d5\\u04d7\\u04d9\\u04db\\u04dd\\u04df\\u04e1\\u04e3\\u04e5\\u04e7\\u04e9\\u04eb\\u04ed\\u04ef\\u04f1\\u04f3\\u04f5\\u04f7\\u04f9\\u04fb\\u04fd\\u04ff\\u0501\\u0503\\u0505\\u0507\\u0509\\u050b\\u050d\\u050f\\u0511\\u0513\\u0515\\u0517\\u0519\\u051b\\u051d\\u051f\\u0521\\u0523\\u0525\\u0527\\u0561-\\u0587\\u1d00-\\u1d2b\\u1d6b-\\u1d77\\u1d79-\\u1d9a\\u1e01\\u1e03\\u1e05\\u1e07\\u1e09\\u1e0b\\u1e0d\\u1e0f\\u1e11\\u1e13\\u1e15\\u1e17\\u1e19\\u1e1b\\u1e1d\\u1e1f\\u1e21\\u1e23\\u1e25\\u1e27\\u1e29\\u1e2b\\u1e2d\\u1e2f\\u1e31\\u1e33\\u1e35\\u1e37\\u1e39\\u1e3b\\u1e3d\\u1e3f\\u1e41\\u1e43\\u1e45\\u1e47\\u1e49\\u1e4b\\u1e4d\\u1e4f\\u1e51\\u1e53\\u1e55\\u1e57\\u1e59\\u1e5b\\u1e5d\\u1e5f\\u1e61\\u1e63\\u1e65\\u1e67\\u1e69\\u1e6b\\u1e6d\\u1e6f\\u1e71\\u1e73\\u1e75\\u1e77\\u1e79\\u1e7b\\u1e7d\\u1e7f\\u1e81\\u1e83\\u1e85\\u1e87\\u1e89\\u1e8b\\u1e8d\\u1e8f\\u1e91\\u1e93\\u1e95-\\u1e9d\\u1e9f\\u1ea1\\u1ea3\\u1ea5\\u1ea7\\u1ea9\\u1eab\\u1ead\\u1eaf\\u1eb1\\u1eb3\\u1eb5\\u1eb7\\u1eb9\\u1ebb\\u1ebd\\u1ebf\\u1ec1\\u1ec3\\u1ec5\\u1ec7\\u1ec9\\u1ecb\\u1ecd\\u1ecf\\u1ed1\\u1ed3\\u1ed5\\u1ed7\\u1ed9\\u1edb\\u1edd\\u1edf\\u1ee1\\u1ee3\\u1ee5\\u1ee7\\u1ee9\\u1eeb\\u1eed\\u1eef\\u1ef1\\u1ef3\\u1ef5\\u1ef7\\u1ef9\\u1efb\\u1efd\\u1eff-\\u1f07\\u1f10-\\u1f15\\u1f20-\\u1f27\\u1f30-\\u1f37\\u1f40-\\u1f45\\u1f50-\\u1f57\\u1f60-\\u1f67\\u1f70-\\u1f7d\\u1f80-\\u1f87\\u1f90-\\u1f97\\u1fa0-\\u1fa7\\u1fb0-\\u1fb4\\u1fb6-\\u1fb7\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fc7\\u1fd0-\\u1fd3\\u1fd6-\\u1fd7\\u1fe0-\\u1fe7\\u1ff2-\\u1ff4\\u1ff6-\\u1ff7\\u210a\\u210e-\\u210f\\u2113\\u212f\\u2134\\u2139\\u213c-\\u213d\\u2146-\\u2149\\u214e\\u2184\\u2c30-\\u2c5e\\u2c61\\u2c65-\\u2c66\\u2c68\\u2c6a\\u2c6c\\u2c71\\u2c73-\\u2c74\\u2c76-\\u2c7b\\u2c81\\u2c83\\u2c85\\u2c87\\u2c89\\u2c8b\\u2c8d\\u2c8f\\u2c91\\u2c93\\u2c95\\u2c97\\u2c99\\u2c9b\\u2c9d\\u2c9f\\u2ca1\\u2ca3\\u2ca5\\u2ca7\\u2ca9\\u2cab\\u2cad\\u2caf\\u2cb1\\u2cb3\\u2cb5\\u2cb7\\u2cb9\\u2cbb\\u2cbd\\u2cbf\\u2cc1\\u2cc3\\u2cc5\\u2cc7\\u2cc9\\u2ccb\\u2ccd\\u2ccf\\u2cd1\\u2cd3\\u2cd5\\u2cd7\\u2cd9\\u2cdb\\u2cdd\\u2cdf\\u2ce1\\u2ce3-\\u2ce4\\u2cec\\u2cee\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\ua641\\ua643\\ua645\\ua647\\ua649\\ua64b\\ua64d\\ua64f\\ua651\\ua653\\ua655\\ua657\\ua659\\ua65b\\ua65d\\ua65f\\ua661\\ua663\\ua665\\ua667\\ua669\\ua66b\\ua66d\\ua681\\ua683\\ua685\\ua687\\ua689\\ua68b\\ua68d\\ua68f\\ua691\\ua693\\ua695\\ua697\\ua723\\ua725\\ua727\\ua729\\ua72b\\ua72d\\ua72f-\\ua731\\ua733\\ua735\\ua737\\ua739\\ua73b\\ua73d\\ua73f\\ua741\\ua743\\ua745\\ua747\\ua749\\ua74b\\ua74d\\ua74f\\ua751\\ua753\\ua755\\ua757\\ua759\\ua75b\\ua75d\\ua75f\\ua761\\ua763\\ua765\\ua767\\ua769\\ua76b\\ua76d\\ua76f\\ua771-\\ua778\\ua77a\\ua77c\\ua77f\\ua781\\ua783\\ua785\\ua787\\ua78c\\ua78e\\ua791\\ua793\\ua7a1\\ua7a3\\ua7a5\\ua7a7\\ua7a9\\ua7fa\\ufb00-\\ufb06\\ufb13-\\ufb17\\uff41-\\uff5a\\u01c5\\u01c8\\u01cb\\u01f2\\u1f88-\\u1f8f\\u1f98-\\u1f9f\\u1fa8-\\u1faf\\u1fbc\\u1fcc\\u1ffc\\u02b0-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0374\\u037a\\u0559\\u0640\\u06e5-\\u06e6\\u07f4-\\u07f5\\u07fa\\u081a\\u0824\\u0828\\u0971\\u0e46\\u0ec6\\u10fc\\u17d7\\u1843\\u1aa7\\u1c78-\\u1c7d\\u1d2c-\\u1d6a\\u1d78\\u1d9b-\\u1dbf\\u2071\\u207f\\u2090-\\u209c\\u2c7c-\\u2c7d\\u2d6f\\u2e2f\\u3005\\u3031-\\u3035\\u303b\\u309d-\\u309e\\u30fc-\\u30fe\\ua015\\ua4f8-\\ua4fd\\ua60c\\ua67f\\ua717-\\ua71f\\ua770\\ua788\\ua7f8-\\ua7f9\\ua9cf\\uaa70\\uaadd\\uaaf3-\\uaaf4\\uff70\\uff9e-\\uff9f\\u16ee-\\u16f0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303a\\ua6e6-\\ua6ef][A-Z\\u00c0-\\u00d6\\u00d8-\\u00de\\u0100\\u0102\\u0104\\u0106\\u0108\\u010a\\u010c\\u010e\\u0110\\u0112\\u0114\\u0116\\u0118\\u011a\\u011c\\u011e\\u0120\\u0122\\u0124\\u0126\\u0128\\u012a\\u012c\\u012e\\u0130\\u0132\\u0134\\u0136\\u0139\\u013b\\u013d\\u013f\\u0141\\u0143\\u0145\\u0147\\u014a\\u014c\\u014e\\u0150\\u0152\\u0154\\u0156\\u0158\\u015a\\u015c\\u015e\\u0160\\u0162\\u0164\\u0166\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u0174\\u0176\\u0178-\\u0179\\u017b\\u017d\\u0181-\\u0182\\u0184\\u0186-\\u0187\\u0189-\\u018b\\u018e-\\u0191\\u0193-\\u0194\\u0196-\\u0198\\u019c-\\u019d\\u019f-\\u01a0\\u01a2\\u01a4\\u01a6-\\u01a7\\u01a9\\u01ac\\u01ae-\\u01af\\u01b1-\\u01b3\\u01b5\\u01b7-\\u01b8\\u01bc\\u01c4\\u01c7\\u01ca\\u01cd\\u01cf\\u01d1\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u01de\\u01e0\\u01e2\\u01e4\\u01e6\\u01e8\\u01ea\\u01ec\\u01ee\\u01f1\\u01f4\\u01f6-\\u01f8\\u01fa\\u01fc\\u01fe\\u0200\\u0202\\u0204\\u0206\\u0208\\u020a\\u020c\\u020e\\u0210\\u0212\\u0214\\u0216\\u0218\\u021a\\u021c\\u021e\\u0220\\u0222\\u0224\\u0226\\u0228\\u022a\\u022c\\u022e\\u0230\\u0232\\u023a-\\u023b\\u023d-\\u023e\\u0241\\u0243-\\u0246\\u0248\\u024a\\u024c\\u024e\\u0370\\u0372\\u0376\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u038f\\u0391-\\u03a1\\u03a3-\\u03ab\\u03cf\\u03d2-\\u03d4\\u03d8\\u03da\\u03dc\\u03de\\u03e0\\u03e2\\u03e4\\u03e6\\u03e8\\u03ea\\u03ec\\u03ee\\u03f4\\u03f7\\u03f9-\\u03fa\\u03fd-\\u042f\\u0460\\u0462\\u0464\\u0466\\u0468\\u046a\\u046c\\u046e\\u0470\\u0472\\u0474\\u0476\\u0478\\u047a\\u047c\\u047e\\u0480\\u048a\\u048c\\u048e\\u0490\\u0492\\u0494\\u0496\\u0498\\u049a\\u049c\\u049e\\u04a0\\u04a2\\u04a4\\u04a6\\u04a8\\u04aa\\u04ac\\u04ae\\u04b0\\u04b2\\u04b4\\u04b6\\u04b8\\u04ba\\u04bc\\u04be\\u04c0-\\u04c1\\u04c3\\u04c5\\u04c7\\u04c9\\u04cb\\u04cd\\u04d0\\u04d2\\u04d4\\u04d6\\u04d8\\u04da\\u04dc\\u04de\\u04e0\\u04e2\\u04e4\\u04e6\\u04e8\\u04ea\\u04ec\\u04ee\\u04f0\\u04f2\\u04f4\\u04f6\\u04f8\\u04fa\\u04fc\\u04fe\\u0500\\u0502\\u0504\\u0506\\u0508\\u050a\\u050c\\u050e\\u0510\\u0512\\u0514\\u0516\\u0518\\u051a\\u051c\\u051e\\u0520\\u0522\\u0524\\u0526\\u0531-\\u0556\\u10a0-\\u10c5\\u10c7\\u10cd\\u1e00\\u1e02\\u1e04\\u1e06\\u1e08\\u1e0a\\u1e0c\\u1e0e\\u1e10\\u1e12\\u1e14\\u1e16\\u1e18\\u1e1a\\u1e1c\\u1e1e\\u1e20\\u1e22\\u1e24\\u1e26\\u1e28\\u1e2a\\u1e2c\\u1e2e\\u1e30\\u1e32\\u1e34\\u1e36\\u1e38\\u1e3a\\u1e3c\\u1e3e\\u1e40\\u1e42\\u1e44\\u1e46\\u1e48\\u1e4a\\u1e4c\\u1e4e\\u1e50\\u1e52\\u1e54\\u1e56\\u1e58\\u1e5a\\u1e5c\\u1e5e\\u1e60\\u1e62\\u1e64\\u1e66\\u1e68\\u1e6a\\u1e6c\\u1e6e\\u1e70\\u1e72\\u1e74\\u1e76\\u1e78\\u1e7a\\u1e7c\\u1e7e\\u1e80\\u1e82\\u1e84\\u1e86\\u1e88\\u1e8a\\u1e8c\\u1e8e\\u1e90\\u1e92\\u1e94\\u1e9e\\u1ea0\\u1ea2\\u1ea4\\u1ea6\\u1ea8\\u1eaa\\u1eac\\u1eae\\u1eb0\\u1eb2\\u1eb4\\u1eb6\\u1eb8\\u1eba\\u1ebc\\u1ebe\\u1ec0\\u1ec2\\u1ec4\\u1ec6\\u1ec8\\u1eca\\u1ecc\\u1ece\\u1ed0\\u1ed2\\u1ed4\\u1ed6\\u1ed8\\u1eda\\u1edc\\u1ede\\u1ee0\\u1ee2\\u1ee4\\u1ee6\\u1ee8\\u1eea\\u1eec\\u1eee\\u1ef0\\u1ef2\\u1ef4\\u1ef6\\u1ef8\\u1efa\\u1efc\\u1efe\\u1f08-\\u1f0f\\u1f18-\\u1f1d\\u1f28-\\u1f2f\\u1f38-\\u1f3f\\u1f48-\\u1f4d\\u1f59\\u1f5b\\u1f5d\\u1f5f\\u1f68-\\u1f6f\\u1fb8-\\u1fbb\\u1fc8-\\u1fcb\\u1fd8-\\u1fdb\\u1fe8-\\u1fec\\u1ff8-\\u1ffb\\u2102\\u2107\\u210b-\\u210d\\u2110-\\u2112\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u2130-\\u2133\\u213e-\\u213f\\u2145\\u2183\\u2c00-\\u2c2e\\u2c60\\u2c62-\\u2c64\\u2c67\\u2c69\\u2c6b\\u2c6d-\\u2c70\\u2c72\\u2c75\\u2c7e-\\u2c80\\u2c82\\u2c84\\u2c86\\u2c88\\u2c8a\\u2c8c\\u2c8e\\u2c90\\u2c92\\u2c94\\u2c96\\u2c98\\u2c9a\\u2c9c\\u2c9e\\u2ca0\\u2ca2\\u2ca4\\u2ca6\\u2ca8\\u2caa\\u2cac\\u2cae\\u2cb0\\u2cb2\\u2cb4\\u2cb6\\u2cb8\\u2cba\\u2cbc\\u2cbe\\u2cc0\\u2cc2\\u2cc4\\u2cc6\\u2cc8\\u2cca\\u2ccc\\u2cce\\u2cd0\\u2cd2\\u2cd4\\u2cd6\\u2cd8\\u2cda\\u2cdc\\u2cde\\u2ce0\\u2ce2\\u2ceb\\u2ced\\u2cf2\\ua640\\ua642\\ua644\\ua646\\ua648\\ua64a\\ua64c\\ua64e\\ua650\\ua652\\ua654\\ua656\\ua658\\ua65a\\ua65c\\ua65e\\ua660\\ua662\\ua664\\ua666\\ua668\\ua66a\\ua66c\\ua680\\ua682\\ua684\\ua686\\ua688\\ua68a\\ua68c\\ua68e\\ua690\\ua692\\ua694\\ua696\\ua722\\ua724\\ua726\\ua728\\ua72a\\ua72c\\ua72e\\ua732\\ua734\\ua736\\ua738\\ua73a\\ua73c\\ua73e\\ua740\\ua742\\ua744\\ua746\\ua748\\ua74a\\ua74c\\ua74e\\ua750\\ua752\\ua754\\ua756\\ua758\\ua75a\\ua75c\\ua75e\\ua760\\ua762\\ua764\\ua766\\ua768\\ua76a\\ua76c\\ua76e\\ua779\\ua77b\\ua77d-\\ua77e\\ua780\\ua782\\ua784\\ua786\\ua78b\\ua78d\\ua790\\ua792\\ua7a0\\ua7a2\\ua7a4\\ua7a6\\ua7a8\\ua7aa\\uff21-\\uff3aa-z\\u00b5\\u00df-\\u00f6\\u00f8-\\u00ff\\u0101\\u0103\\u0105\\u0107\\u0109\\u010b\\u010d\\u010f\\u0111\\u0113\\u0115\\u0117\\u0119\\u011b\\u011d\\u011f\\u0121\\u0123\\u0125\\u0127\\u0129\\u012b\\u012d\\u012f\\u0131\\u0133\\u0135\\u0137-\\u0138\\u013a\\u013c\\u013e\\u0140\\u0142\\u0144\\u0146\\u0148-\\u0149\\u014b\\u014d\\u014f\\u0151\\u0153\\u0155\\u0157\\u0159\\u015b\\u015d\\u015f\\u0161\\u0163\\u0165\\u0167\\u0169\\u016b\\u016d\\u016f\\u0171\\u0173\\u0175\\u0177\\u017a\\u017c\\u017e-\\u0180\\u0183\\u0185\\u0188\\u018c-\\u018d\\u0192\\u0195\\u0199-\\u019b\\u019e\\u01a1\\u01a3\\u01a5\\u01a8\\u01aa-\\u01ab\\u01ad\\u01b0\\u01b4\\u01b6\\u01b9-\\u01ba\\u01bd-\\u01bf\\u01c6\\u01c9\\u01cc\\u01ce\\u01d0\\u01d2\\u01d4\\u01d6\\u01d8\\u01da\\u01dc-\\u01dd\\u01df\\u01e1\\u01e3\\u01e5\\u01e7\\u01e9\\u01eb\\u01ed\\u01ef-\\u01f0\\u01f3\\u01f5\\u01f9\\u01fb\\u01fd\\u01ff\\u0201\\u0203\\u0205\\u0207\\u0209\\u020b\\u020d\\u020f\\u0211\\u0213\\u0215\\u0217\\u0219\\u021b\\u021d\\u021f\\u0221\\u0223\\u0225\\u0227\\u0229\\u022b\\u022d\\u022f\\u0231\\u0233-\\u0239\\u023c\\u023f-\\u0240\\u0242\\u0247\\u0249\\u024b\\u024d\\u024f-\\u0293\\u0295-\\u02af\\u0371\\u0373\\u0377\\u037b-\\u037d\\u0390\\u03ac-\\u03ce\\u03d0-\\u03d1\\u03d5-\\u03d7\\u03d9\\u03db\\u03dd\\u03df\\u03e1\\u03e3\\u03e5\\u03e7\\u03e9\\u03eb\\u03ed\\u03ef-\\u03f3\\u03f5\\u03f8\\u03fb-\\u03fc\\u0430-\\u045f\\u0461\\u0463\\u0465\\u0467\\u0469\\u046b\\u046d\\u046f\\u0471\\u0473\\u0475\\u0477\\u0479\\u047b\\u047d\\u047f\\u0481\\u048b\\u048d\\u048f\\u0491\\u0493\\u0495\\u0497\\u0499\\u049b\\u049d\\u049f\\u04a1\\u04a3\\u04a5\\u04a7\\u04a9\\u04ab\\u04ad\\u04af\\u04b1\\u04b3\\u04b5\\u04b7\\u04b9\\u04bb\\u04bd\\u04bf\\u04c2\\u04c4\\u04c6\\u04c8\\u04ca\\u04cc\\u04ce-\\u04cf\\u04d1\\u04d3\\u04d5\\u04d7\\u04d9\\u04db\\u04dd\\u04df\\u04e1\\u04e3\\u04e5\\u04e7\\u04e9\\u04eb\\u04ed\\u04ef\\u04f1\\u04f3\\u04f5\\u04f7\\u04f9\\u04fb\\u04fd\\u04ff\\u0501\\u0503\\u0505\\u0507\\u0509\\u050b\\u050d\\u050f\\u0511\\u0513\\u0515\\u0517\\u0519\\u051b\\u051d\\u051f\\u0521\\u0523\\u0525\\u0527\\u0561-\\u0587\\u1d00-\\u1d2b\\u1d6b-\\u1d77\\u1d79-\\u1d9a\\u1e01\\u1e03\\u1e05\\u1e07\\u1e09\\u1e0b\\u1e0d\\u1e0f\\u1e11\\u1e13\\u1e15\\u1e17\\u1e19\\u1e1b\\u1e1d\\u1e1f\\u1e21\\u1e23\\u1e25\\u1e27\\u1e29\\u1e2b\\u1e2d\\u1e2f\\u1e31\\u1e33\\u1e35\\u1e37\\u1e39\\u1e3b\\u1e3d\\u1e3f\\u1e41\\u1e43\\u1e45\\u1e47\\u1e49\\u1e4b\\u1e4d\\u1e4f\\u1e51\\u1e53\\u1e55\\u1e57\\u1e59\\u1e5b\\u1e5d\\u1e5f\\u1e61\\u1e63\\u1e65\\u1e67\\u1e69\\u1e6b\\u1e6d\\u1e6f\\u1e71\\u1e73\\u1e75\\u1e77\\u1e79\\u1e7b\\u1e7d\\u1e7f\\u1e81\\u1e83\\u1e85\\u1e87\\u1e89\\u1e8b\\u1e8d\\u1e8f\\u1e91\\u1e93\\u1e95-\\u1e9d\\u1e9f\\u1ea1\\u1ea3\\u1ea5\\u1ea7\\u1ea9\\u1eab\\u1ead\\u1eaf\\u1eb1\\u1eb3\\u1eb5\\u1eb7\\u1eb9\\u1ebb\\u1ebd\\u1ebf\\u1ec1\\u1ec3\\u1ec5\\u1ec7\\u1ec9\\u1ecb\\u1ecd\\u1ecf\\u1ed1\\u1ed3\\u1ed5\\u1ed7\\u1ed9\\u1edb\\u1edd\\u1edf\\u1ee1\\u1ee3\\u1ee5\\u1ee7\\u1ee9\\u1eeb\\u1eed\\u1eef\\u1ef1\\u1ef3\\u1ef5\\u1ef7\\u1ef9\\u1efb\\u1efd\\u1eff-\\u1f07\\u1f10-\\u1f15\\u1f20-\\u1f27\\u1f30-\\u1f37\\u1f40-\\u1f45\\u1f50-\\u1f57\\u1f60-\\u1f67\\u1f70-\\u1f7d\\u1f80-\\u1f87\\u1f90-\\u1f97\\u1fa0-\\u1fa7\\u1fb0-\\u1fb4\\u1fb6-\\u1fb7\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fc7\\u1fd0-\\u1fd3\\u1fd6-\\u1fd7\\u1fe0-\\u1fe7\\u1ff2-\\u1ff4\\u1ff6-\\u1ff7\\u210a\\u210e-\\u210f\\u2113\\u212f\\u2134\\u2139\\u213c-\\u213d\\u2146-\\u2149\\u214e\\u2184\\u2c30-\\u2c5e\\u2c61\\u2c65-\\u2c66\\u2c68\\u2c6a\\u2c6c\\u2c71\\u2c73-\\u2c74\\u2c76-\\u2c7b\\u2c81\\u2c83\\u2c85\\u2c87\\u2c89\\u2c8b\\u2c8d\\u2c8f\\u2c91\\u2c93\\u2c95\\u2c97\\u2c99\\u2c9b\\u2c9d\\u2c9f\\u2ca1\\u2ca3\\u2ca5\\u2ca7\\u2ca9\\u2cab\\u2cad\\u2caf\\u2cb1\\u2cb3\\u2cb5\\u2cb7\\u2cb9\\u2cbb\\u2cbd\\u2cbf\\u2cc1\\u2cc3\\u2cc5\\u2cc7\\u2cc9\\u2ccb\\u2ccd\\u2ccf\\u2cd1\\u2cd3\\u2cd5\\u2cd7\\u2cd9\\u2cdb\\u2cdd\\u2cdf\\u2ce1\\u2ce3-\\u2ce4\\u2cec\\u2cee\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\ua641\\ua643\\ua645\\ua647\\ua649\\ua64b\\ua64d\\ua64f\\ua651\\ua653\\ua655\\ua657\\ua659\\ua65b\\ua65d\\ua65f\\ua661\\ua663\\ua665\\ua667\\ua669\\ua66b\\ua66d\\ua681\\ua683\\ua685\\ua687\\ua689\\ua68b\\ua68d\\ua68f\\ua691\\ua693\\ua695\\ua697\\ua723\\ua725\\ua727\\ua729\\ua72b\\ua72d\\ua72f-\\ua731\\ua733\\ua735\\ua737\\ua739\\ua73b\\ua73d\\ua73f\\ua741\\ua743\\ua745\\ua747\\ua749\\ua74b\\ua74d\\ua74f\\ua751\\ua753\\ua755\\ua757\\ua759\\ua75b\\ua75d\\ua75f\\ua761\\ua763\\ua765\\ua767\\ua769\\ua76b\\ua76d\\ua76f\\ua771-\\ua778\\ua77a\\ua77c\\ua77f\\ua781\\ua783\\ua785\\ua787\\ua78c\\ua78e\\ua791\\ua793\\ua7a1\\ua7a3\\ua7a5\\ua7a7\\ua7a9\\ua7fa\\ufb00-\\ufb06\\ufb13-\\ufb17\\uff41-\\uff5a\\u01c5\\u01c8\\u01cb\\u01f2\\u1f88-\\u1f8f\\u1f98-\\u1f9f\\u1fa8-\\u1faf\\u1fbc\\u1fcc\\u1ffc\\u02b0-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0374\\u037a\\u0559\\u0640\\u06e5-\\u06e6\\u07f4-\\u07f5\\u07fa\\u081a\\u0824\\u0828\\u0971\\u0e46\\u0ec6\\u10fc\\u17d7\\u1843\\u1aa7\\u1c78-\\u1c7d\\u1d2c-\\u1d6a\\u1d78\\u1d9b-\\u1dbf\\u2071\\u207f\\u2090-\\u209c\\u2c7c-\\u2c7d\\u2d6f\\u2e2f\\u3005\\u3031-\\u3035\\u303b\\u309d-\\u309e\\u30fc-\\u30fe\\ua015\\ua4f8-\\ua4fd\\ua60c\\ua67f\\ua717-\\ua71f\\ua770\\ua788\\ua7f8-\\ua7f9\\ua9cf\\uaa70\\uaadd\\uaaf3-\\uaaf4\\uff70\\uff9e-\\uff9f\\u16ee-\\u16f0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303a\\ua6e6-\\ua6ef0-9\\u0660-\\u0669\\u06f0-\\u06f9\\u07c0-\\u07c9\\u0966-\\u096f\\u09e6-\\u09ef\\u0a66-\\u0a6f\\u0ae6-\\u0aef\\u0b66-\\u0b6f\\u0be6-\\u0bef\\u0c66-\\u0c6f\\u0ce6-\\u0cef\\u0d66-\\u0d6f\\u0e50-\\u0e59\\u0ed0-\\u0ed9\\u0f20-\\u0f29\\u1040-\\u1049\\u1090-\\u1099\\u17e0-\\u17e9\\u1810-\\u1819\\u1946-\\u194f\\u19d0-\\u19d9\\u1a80-\\u1a89\\u1a90-\\u1a99\\u1b50-\\u1b59\\u1bb0-\\u1bb9\\u1c40-\\u1c49\\u1c50-\\u1c59\\ua620-\\ua629\\ua8d0-\\ua8d9\\ua900-\\ua909\\ua9d0-\\ua9d9\\uaa50-\\uaa59\\uabf0-\\uabf9\\uff10-\\uff19_\\u203f-\\u2040\\u2054\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\uff3f\\u00ad\\u0600-\\u0604\\u061c\\u06dd\\u070f\\u180e\\u200b-\\u200f\\u202a-\\u202e\\u2060-\\u2064\\u2066-\\u206f\\ufeff\\ufff9-\\ufffb\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u065f\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7-\\u06e8\\u06ea-\\u06ed\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0902\\u093a\\u093c\\u0941-\\u0948\\u094d\\u0951-\\u0957\\u0962-\\u0963\\u0981\\u09bc\\u09c1-\\u09c4\\u09cd\\u09e2-\\u09e3\\u0a01-\\u0a02\\u0a3c\\u0a41-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a70-\\u0a71\\u0a75\\u0a81-\\u0a82\\u0abc\\u0ac1-\\u0ac5\\u0ac7-\\u0ac8\\u0acd\\u0ae2-\\u0ae3\\u0b01\\u0b3c\\u0b3f\\u0b41-\\u0b44\\u0b4d\\u0b56\\u0b62-\\u0b63\\u0b82\\u0bc0\\u0bcd\\u0c3e-\\u0c40\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c62-\\u0c63\\u0cbc\\u0cbf\\u0cc6\\u0ccc-\\u0ccd\\u0ce2-\\u0ce3\\u0d41-\\u0d44\\u0d4d\\u0d62-\\u0d63\\u0dca\\u0dd2-\\u0dd4\\u0dd6\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0eb1\\u0eb4-\\u0eb9\\u0ebb-\\u0ebc\\u0ec8-\\u0ecd\\u0f18-\\u0f19\\u0f35\\u0f37\\u0f39\\u0f71-\\u0f7e\\u0f80-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102d-\\u1030\\u1032-\\u1037\\u1039-\\u103a\\u103d-\\u103e\\u1058-\\u1059\\u105e-\\u1060\\u1071-\\u1074\\u1082\\u1085-\\u1086\\u108d\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752-\\u1753\\u1772-\\u1773\\u17b4-\\u17b5\\u17b7-\\u17bd\\u17c6\\u17c9-\\u17d3\\u17dd\\u180b-\\u180d\\u18a9\\u1920-\\u1922\\u1927-\\u1928\\u1932\\u1939-\\u193b\\u1a17-\\u1a18\\u1a1b\\u1a56\\u1a58-\\u1a5e\\u1a60\\u1a62\\u1a65-\\u1a6c\\u1a73-\\u1a7c\\u1a7f\\u1b00-\\u1b03\\u1b34\\u1b36-\\u1b3a\\u1b3c\\u1b42\\u1b6b-\\u1b73\\u1b80-\\u1b81\\u1ba2-\\u1ba5\\u1ba8-\\u1ba9\\u1bab\\u1be6\\u1be8-\\u1be9\\u1bed\\u1bef-\\u1bf1\\u1c2c-\\u1c33\\u1c36-\\u1c37\\u1cd0-\\u1cd2\\u1cd4-\\u1ce0\\u1ce2-\\u1ce8\\u1ced\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302d\\u3099-\\u309a\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua802\\ua806\\ua80b\\ua825-\\ua826\\ua8c4\\ua8e0-\\ua8f1\\ua926-\\ua92d\\ua947-\\ua951\\ua980-\\ua982\\ua9b3\\ua9b6-\\ua9b9\\ua9bc\\uaa29-\\uaa2e\\uaa31-\\uaa32\\uaa35-\\uaa36\\uaa43\\uaa4c\\uaab0\\uaab2-\\uaab4\\uaab7-\\uaab8\\uaabe-\\uaabf\\uaac1\\uaaec-\\uaaed\\uaaf6\\uabe5\\uabe8\\uabed\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\u0903\\u093b\\u093e-\\u0940\\u0949-\\u094c\\u094e-\\u094f\\u0982-\\u0983\\u09be-\\u09c0\\u09c7-\\u09c8\\u09cb-\\u09cc\\u09d7\\u0a03\\u0a3e-\\u0a40\\u0a83\\u0abe-\\u0ac0\\u0ac9\\u0acb-\\u0acc\\u0b02-\\u0b03\\u0b3e\\u0b40\\u0b47-\\u0b48\\u0b4b-\\u0b4c\\u0b57\\u0bbe-\\u0bbf\\u0bc1-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcc\\u0bd7\\u0c01-\\u0c03\\u0c41-\\u0c44\\u0c82-\\u0c83\\u0cbe\\u0cc0-\\u0cc4\\u0cc7-\\u0cc8\\u0cca-\\u0ccb\\u0cd5-\\u0cd6\\u0d02-\\u0d03\\u0d3e-\\u0d40\\u0d46-\\u0d48\\u0d4a-\\u0d4c\\u0d57\\u0d82-\\u0d83\\u0dcf-\\u0dd1\\u0dd8-\\u0ddf\\u0df2-\\u0df3\\u0f3e-\\u0f3f\\u0f7f\\u102b-\\u102c\\u1031\\u1038\\u103b-\\u103c\\u1056-\\u1057\\u1062-\\u1064\\u1067-\\u106d\\u1083-\\u1084\\u1087-\\u108c\\u108f\\u109a-\\u109c\\u17b6\\u17be-\\u17c5\\u17c7-\\u17c8\\u1923-\\u1926\\u1929-\\u192b\\u1930-\\u1931\\u1933-\\u1938\\u19b0-\\u19c0\\u19c8-\\u19c9\\u1a19-\\u1a1a\\u1a55\\u1a57\\u1a61\\u1a63-\\u1a64\\u1a6d-\\u1a72\\u1b04\\u1b35\\u1b3b\\u1b3d-\\u1b41\\u1b43-\\u1b44\\u1b82\\u1ba1\\u1ba6-\\u1ba7\\u1baa\\u1bac-\\u1bad\\u1be7\\u1bea-\\u1bec\\u1bee\\u1bf2-\\u1bf3\\u1c24-\\u1c2b\\u1c34-\\u1c35\\u1ce1\\u1cf2-\\u1cf3\\u302e-\\u302f\\ua823-\\ua824\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c3\\ua952-\\ua953\\ua983\\ua9b4-\\ua9b5\\ua9ba-\\ua9bb\\ua9bd-\\ua9c0\\uaa2f-\\uaa30\\uaa33-\\uaa34\\uaa4d\\uaa7b\\uaaeb\\uaaee-\\uaaef\\uaaf5\\uabe3-\\uabe4\\uabe6-\\uabe7\\uabe9-\\uabea\\uabec\"\n-\n // Kotlin lexer.\n-var Kotlin = internal.Register(MustNewLexer(\n+var Kotlin = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Kotlin\",\n \t\tAliases:   []string{\"kotlin\"},\n \t\tFilenames: []string{\"*.kt\"},\n \t\tMimeTypes: []string{\"text/x-kotlin\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\tkotlinRules,\n+))\n+\n+func kotlinRules() Rules {\n+\tconst kotlinIdentifier = \"_A-Z\\u00c0-\\u00d6\\u00d8-\\u00de\\u0100\\u0102\\u0104\\u0106\\u0108\\u010a\\u010c\\u010e\\u0110\\u0112\\u0114\\u0116\\u0118\\u011a\\u011c\\u011e\\u0120\\u0122\\u0124\\u0126\\u0128\\u012a\\u012c\\u012e\\u0130\\u0132\\u0134\\u0136\\u0139\\u013b\\u013d\\u013f\\u0141\\u0143\\u0145\\u0147\\u014a\\u014c\\u014e\\u0150\\u0152\\u0154\\u0156\\u0158\\u015a\\u015c\\u015e\\u0160\\u0162\\u0164\\u0166\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u0174\\u0176\\u0178-\\u0179\\u017b\\u017d\\u0181-\\u0182\\u0184\\u0186-\\u0187\\u0189-\\u018b\\u018e-\\u0191\\u0193-\\u0194\\u0196-\\u0198\\u019c-\\u019d\\u019f-\\u01a0\\u01a2\\u01a4\\u01a6-\\u01a7\\u01a9\\u01ac\\u01ae-\\u01af\\u01b1-\\u01b3\\u01b5\\u01b7-\\u01b8\\u01bc\\u01c4\\u01c7\\u01ca\\u01cd\\u01cf\\u01d1\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u01de\\u01e0\\u01e2\\u01e4\\u01e6\\u01e8\\u01ea\\u01ec\\u01ee\\u01f1\\u01f4\\u01f6-\\u01f8\\u01fa\\u01fc\\u01fe\\u0200\\u0202\\u0204\\u0206\\u0208\\u020a\\u020c\\u020e\\u0210\\u0212\\u0214\\u0216\\u0218\\u021a\\u021c\\u021e\\u0220\\u0222\\u0224\\u0226\\u0228\\u022a\\u022c\\u022e\\u0230\\u0232\\u023a-\\u023b\\u023d-\\u023e\\u0241\\u0243-\\u0246\\u0248\\u024a\\u024c\\u024e\\u0370\\u0372\\u0376\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u038f\\u0391-\\u03a1\\u03a3-\\u03ab\\u03cf\\u03d2-\\u03d4\\u03d8\\u03da\\u03dc\\u03de\\u03e0\\u03e2\\u03e4\\u03e6\\u03e8\\u03ea\\u03ec\\u03ee\\u03f4\\u03f7\\u03f9-\\u03fa\\u03fd-\\u042f\\u0460\\u0462\\u0464\\u0466\\u0468\\u046a\\u046c\\u046e\\u0470\\u0472\\u0474\\u0476\\u0478\\u047a\\u047c\\u047e\\u0480\\u048a\\u048c\\u048e\\u0490\\u0492\\u0494\\u0496\\u0498\\u049a\\u049c\\u049e\\u04a0\\u04a2\\u04a4\\u04a6\\u04a8\\u04aa\\u04ac\\u04ae\\u04b0\\u04b2\\u04b4\\u04b6\\u04b8\\u04ba\\u04bc\\u04be\\u04c0-\\u04c1\\u04c3\\u04c5\\u04c7\\u04c9\\u04cb\\u04cd\\u04d0\\u04d2\\u04d4\\u04d6\\u04d8\\u04da\\u04dc\\u04de\\u04e0\\u04e2\\u04e4\\u04e6\\u04e8\\u04ea\\u04ec\\u04ee\\u04f0\\u04f2\\u04f4\\u04f6\\u04f8\\u04fa\\u04fc\\u04fe\\u0500\\u0502\\u0504\\u0506\\u0508\\u050a\\u050c\\u050e\\u0510\\u0512\\u0514\\u0516\\u0518\\u051a\\u051c\\u051e\\u0520\\u0522\\u0524\\u0526\\u0531-\\u0556\\u10a0-\\u10c5\\u10c7\\u10cd\\u1e00\\u1e02\\u1e04\\u1e06\\u1e08\\u1e0a\\u1e0c\\u1e0e\\u1e10\\u1e12\\u1e14\\u1e16\\u1e18\\u1e1a\\u1e1c\\u1e1e\\u1e20\\u1e22\\u1e24\\u1e26\\u1e28\\u1e2a\\u1e2c\\u1e2e\\u1e30\\u1e32\\u1e34\\u1e36\\u1e38\\u1e3a\\u1e3c\\u1e3e\\u1e40\\u1e42\\u1e44\\u1e46\\u1e48\\u1e4a\\u1e4c\\u1e4e\\u1e50\\u1e52\\u1e54\\u1e56\\u1e58\\u1e5a\\u1e5c\\u1e5e\\u1e60\\u1e62\\u1e64\\u1e66\\u1e68\\u1e6a\\u1e6c\\u1e6e\\u1e70\\u1e72\\u1e74\\u1e76\\u1e78\\u1e7a\\u1e7c\\u1e7e\\u1e80\\u1e82\\u1e84\\u1e86\\u1e88\\u1e8a\\u1e8c\\u1e8e\\u1e90\\u1e92\\u1e94\\u1e9e\\u1ea0\\u1ea2\\u1ea4\\u1ea6\\u1ea8\\u1eaa\\u1eac\\u1eae\\u1eb0\\u1eb2\\u1eb4\\u1eb6\\u1eb8\\u1eba\\u1ebc\\u1ebe\\u1ec0\\u1ec2\\u1ec4\\u1ec6\\u1ec8\\u1eca\\u1ecc\\u1ece\\u1ed0\\u1ed2\\u1ed4\\u1ed6\\u1ed8\\u1eda\\u1edc\\u1ede\\u1ee0\\u1ee2\\u1ee4\\u1ee6\\u1ee8\\u1eea\\u1eec\\u1eee\\u1ef0\\u1ef2\\u1ef4\\u1ef6\\u1ef8\\u1efa\\u1efc\\u1efe\\u1f08-\\u1f0f\\u1f18-\\u1f1d\\u1f28-\\u1f2f\\u1f38-\\u1f3f\\u1f48-\\u1f4d\\u1f59\\u1f5b\\u1f5d\\u1f5f\\u1f68-\\u1f6f\\u1fb8-\\u1fbb\\u1fc8-\\u1fcb\\u1fd8-\\u1fdb\\u1fe8-\\u1fec\\u1ff8-\\u1ffb\\u2102\\u2107\\u210b-\\u210d\\u2110-\\u2112\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u2130-\\u2133\\u213e-\\u213f\\u2145\\u2183\\u2c00-\\u2c2e\\u2c60\\u2c62-\\u2c64\\u2c67\\u2c69\\u2c6b\\u2c6d-\\u2c70\\u2c72\\u2c75\\u2c7e-\\u2c80\\u2c82\\u2c84\\u2c86\\u2c88\\u2c8a\\u2c8c\\u2c8e\\u2c90\\u2c92\\u2c94\\u2c96\\u2c98\\u2c9a\\u2c9c\\u2c9e\\u2ca0\\u2ca2\\u2ca4\\u2ca6\\u2ca8\\u2caa\\u2cac\\u2cae\\u2cb0\\u2cb2\\u2cb4\\u2cb6\\u2cb8\\u2cba\\u2cbc\\u2cbe\\u2cc0\\u2cc2\\u2cc4\\u2cc6\\u2cc8\\u2cca\\u2ccc\\u2cce\\u2cd0\\u2cd2\\u2cd4\\u2cd6\\u2cd8\\u2cda\\u2cdc\\u2cde\\u2ce0\\u2ce2\\u2ceb\\u2ced\\u2cf2\\ua640\\ua642\\ua644\\ua646\\ua648\\ua64a\\ua64c\\ua64e\\ua650\\ua652\\ua654\\ua656\\ua658\\ua65a\\ua65c\\ua65e\\ua660\\ua662\\ua664\\ua666\\ua668\\ua66a\\ua66c\\ua680\\ua682\\ua684\\ua686\\ua688\\ua68a\\ua68c\\ua68e\\ua690\\ua692\\ua694\\ua696\\ua722\\ua724\\ua726\\ua728\\ua72a\\ua72c\\ua72e\\ua732\\ua734\\ua736\\ua738\\ua73a\\ua73c\\ua73e\\ua740\\ua742\\ua744\\ua746\\ua748\\ua74a\\ua74c\\ua74e\\ua750\\ua752\\ua754\\ua756\\ua758\\ua75a\\ua75c\\ua75e\\ua760\\ua762\\ua764\\ua766\\ua768\\ua76a\\ua76c\\ua76e\\ua779\\ua77b\\ua77d-\\ua77e\\ua780\\ua782\\ua784\\ua786\\ua78b\\ua78d\\ua790\\ua792\\ua7a0\\ua7a2\\ua7a4\\ua7a6\\ua7a8\\ua7aa\\uff21-\\uff3aa-z\\u00b5\\u00df-\\u00f6\\u00f8-\\u00ff\\u0101\\u0103\\u0105\\u0107\\u0109\\u010b\\u010d\\u010f\\u0111\\u0113\\u0115\\u0117\\u0119\\u011b\\u011d\\u011f\\u0121\\u0123\\u0125\\u0127\\u0129\\u012b\\u012d\\u012f\\u0131\\u0133\\u0135\\u0137-\\u0138\\u013a\\u013c\\u013e\\u0140\\u0142\\u0144\\u0146\\u0148-\\u0149\\u014b\\u014d\\u014f\\u0151\\u0153\\u0155\\u0157\\u0159\\u015b\\u015d\\u015f\\u0161\\u0163\\u0165\\u0167\\u0169\\u016b\\u016d\\u016f\\u0171\\u0173\\u0175\\u0177\\u017a\\u017c\\u017e-\\u0180\\u0183\\u0185\\u0188\\u018c-\\u018d\\u0192\\u0195\\u0199-\\u019b\\u019e\\u01a1\\u01a3\\u01a5\\u01a8\\u01aa-\\u01ab\\u01ad\\u01b0\\u01b4\\u01b6\\u01b9-\\u01ba\\u01bd-\\u01bf\\u01c6\\u01c9\\u01cc\\u01ce\\u01d0\\u01d2\\u01d4\\u01d6\\u01d8\\u01da\\u01dc-\\u01dd\\u01df\\u01e1\\u01e3\\u01e5\\u01e7\\u01e9\\u01eb\\u01ed\\u01ef-\\u01f0\\u01f3\\u01f5\\u01f9\\u01fb\\u01fd\\u01ff\\u0201\\u0203\\u0205\\u0207\\u0209\\u020b\\u020d\\u020f\\u0211\\u0213\\u0215\\u0217\\u0219\\u021b\\u021d\\u021f\\u0221\\u0223\\u0225\\u0227\\u0229\\u022b\\u022d\\u022f\\u0231\\u0233-\\u0239\\u023c\\u023f-\\u0240\\u0242\\u0247\\u0249\\u024b\\u024d\\u024f-\\u0293\\u0295-\\u02af\\u0371\\u0373\\u0377\\u037b-\\u037d\\u0390\\u03ac-\\u03ce\\u03d0-\\u03d1\\u03d5-\\u03d7\\u03d9\\u03db\\u03dd\\u03df\\u03e1\\u03e3\\u03e5\\u03e7\\u03e9\\u03eb\\u03ed\\u03ef-\\u03f3\\u03f5\\u03f8\\u03fb-\\u03fc\\u0430-\\u045f\\u0461\\u0463\\u0465\\u0467\\u0469\\u046b\\u046d\\u046f\\u0471\\u0473\\u0475\\u0477\\u0479\\u047b\\u047d\\u047f\\u0481\\u048b\\u048d\\u048f\\u0491\\u0493\\u0495\\u0497\\u0499\\u049b\\u049d\\u049f\\u04a1\\u04a3\\u04a5\\u04a7\\u04a9\\u04ab\\u04ad\\u04af\\u04b1\\u04b3\\u04b5\\u04b7\\u04b9\\u04bb\\u04bd\\u04bf\\u04c2\\u04c4\\u04c6\\u04c8\\u04ca\\u04cc\\u04ce-\\u04cf\\u04d1\\u04d3\\u04d5\\u04d7\\u04d9\\u04db\\u04dd\\u04df\\u04e1\\u04e3\\u04e5\\u04e7\\u04e9\\u04eb\\u04ed\\u04ef\\u04f1\\u04f3\\u04f5\\u04f7\\u04f9\\u04fb\\u04fd\\u04ff\\u0501\\u0503\\u0505\\u0507\\u0509\\u050b\\u050d\\u050f\\u0511\\u0513\\u0515\\u0517\\u0519\\u051b\\u051d\\u051f\\u0521\\u0523\\u0525\\u0527\\u0561-\\u0587\\u1d00-\\u1d2b\\u1d6b-\\u1d77\\u1d79-\\u1d9a\\u1e01\\u1e03\\u1e05\\u1e07\\u1e09\\u1e0b\\u1e0d\\u1e0f\\u1e11\\u1e13\\u1e15\\u1e17\\u1e19\\u1e1b\\u1e1d\\u1e1f\\u1e21\\u1e23\\u1e25\\u1e27\\u1e29\\u1e2b\\u1e2d\\u1e2f\\u1e31\\u1e33\\u1e35\\u1e37\\u1e39\\u1e3b\\u1e3d\\u1e3f\\u1e41\\u1e43\\u1e45\\u1e47\\u1e49\\u1e4b\\u1e4d\\u1e4f\\u1e51\\u1e53\\u1e55\\u1e57\\u1e59\\u1e5b\\u1e5d\\u1e5f\\u1e61\\u1e63\\u1e65\\u1e67\\u1e69\\u1e6b\\u1e6d\\u1e6f\\u1e71\\u1e73\\u1e75\\u1e77\\u1e79\\u1e7b\\u1e7d\\u1e7f\\u1e81\\u1e83\\u1e85\\u1e87\\u1e89\\u1e8b\\u1e8d\\u1e8f\\u1e91\\u1e93\\u1e95-\\u1e9d\\u1e9f\\u1ea1\\u1ea3\\u1ea5\\u1ea7\\u1ea9\\u1eab\\u1ead\\u1eaf\\u1eb1\\u1eb3\\u1eb5\\u1eb7\\u1eb9\\u1ebb\\u1ebd\\u1ebf\\u1ec1\\u1ec3\\u1ec5\\u1ec7\\u1ec9\\u1ecb\\u1ecd\\u1ecf\\u1ed1\\u1ed3\\u1ed5\\u1ed7\\u1ed9\\u1edb\\u1edd\\u1edf\\u1ee1\\u1ee3\\u1ee5\\u1ee7\\u1ee9\\u1eeb\\u1eed\\u1eef\\u1ef1\\u1ef3\\u1ef5\\u1ef7\\u1ef9\\u1efb\\u1efd\\u1eff-\\u1f07\\u1f10-\\u1f15\\u1f20-\\u1f27\\u1f30-\\u1f37\\u1f40-\\u1f45\\u1f50-\\u1f57\\u1f60-\\u1f67\\u1f70-\\u1f7d\\u1f80-\\u1f87\\u1f90-\\u1f97\\u1fa0-\\u1fa7\\u1fb0-\\u1fb4\\u1fb6-\\u1fb7\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fc7\\u1fd0-\\u1fd3\\u1fd6-\\u1fd7\\u1fe0-\\u1fe7\\u1ff2-\\u1ff4\\u1ff6-\\u1ff7\\u210a\\u210e-\\u210f\\u2113\\u212f\\u2134\\u2139\\u213c-\\u213d\\u2146-\\u2149\\u214e\\u2184\\u2c30-\\u2c5e\\u2c61\\u2c65-\\u2c66\\u2c68\\u2c6a\\u2c6c\\u2c71\\u2c73-\\u2c74\\u2c76-\\u2c7b\\u2c81\\u2c83\\u2c85\\u2c87\\u2c89\\u2c8b\\u2c8d\\u2c8f\\u2c91\\u2c93\\u2c95\\u2c97\\u2c99\\u2c9b\\u2c9d\\u2c9f\\u2ca1\\u2ca3\\u2ca5\\u2ca7\\u2ca9\\u2cab\\u2cad\\u2caf\\u2cb1\\u2cb3\\u2cb5\\u2cb7\\u2cb9\\u2cbb\\u2cbd\\u2cbf\\u2cc1\\u2cc3\\u2cc5\\u2cc7\\u2cc9\\u2ccb\\u2ccd\\u2ccf\\u2cd1\\u2cd3\\u2cd5\\u2cd7\\u2cd9\\u2cdb\\u2cdd\\u2cdf\\u2ce1\\u2ce3-\\u2ce4\\u2cec\\u2cee\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\ua641\\ua643\\ua645\\ua647\\ua649\\ua64b\\ua64d\\ua64f\\ua651\\ua653\\ua655\\ua657\\ua659\\ua65b\\ua65d\\ua65f\\ua661\\ua663\\ua665\\ua667\\ua669\\ua66b\\ua66d\\ua681\\ua683\\ua685\\ua687\\ua689\\ua68b\\ua68d\\ua68f\\ua691\\ua693\\ua695\\ua697\\ua723\\ua725\\ua727\\ua729\\ua72b\\ua72d\\ua72f-\\ua731\\ua733\\ua735\\ua737\\ua739\\ua73b\\ua73d\\ua73f\\ua741\\ua743\\ua745\\ua747\\ua749\\ua74b\\ua74d\\ua74f\\ua751\\ua753\\ua755\\ua757\\ua759\\ua75b\\ua75d\\ua75f\\ua761\\ua763\\ua765\\ua767\\ua769\\ua76b\\ua76d\\ua76f\\ua771-\\ua778\\ua77a\\ua77c\\ua77f\\ua781\\ua783\\ua785\\ua787\\ua78c\\ua78e\\ua791\\ua793\\ua7a1\\ua7a3\\ua7a5\\ua7a7\\ua7a9\\ua7fa\\ufb00-\\ufb06\\ufb13-\\ufb17\\uff41-\\uff5a\\u01c5\\u01c8\\u01cb\\u01f2\\u1f88-\\u1f8f\\u1f98-\\u1f9f\\u1fa8-\\u1faf\\u1fbc\\u1fcc\\u1ffc\\u02b0-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0374\\u037a\\u0559\\u0640\\u06e5-\\u06e6\\u07f4-\\u07f5\\u07fa\\u081a\\u0824\\u0828\\u0971\\u0e46\\u0ec6\\u10fc\\u17d7\\u1843\\u1aa7\\u1c78-\\u1c7d\\u1d2c-\\u1d6a\\u1d78\\u1d9b-\\u1dbf\\u2071\\u207f\\u2090-\\u209c\\u2c7c-\\u2c7d\\u2d6f\\u2e2f\\u3005\\u3031-\\u3035\\u303b\\u309d-\\u309e\\u30fc-\\u30fe\\ua015\\ua4f8-\\ua4fd\\ua60c\\ua67f\\ua717-\\ua71f\\ua770\\ua788\\ua7f8-\\ua7f9\\ua9cf\\uaa70\\uaadd\\uaaf3-\\uaaf4\\uff70\\uff9e-\\uff9f\\u16ee-\\u16f0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303a\\ua6e6-\\ua6ef][A-Z\\u00c0-\\u00d6\\u00d8-\\u00de\\u0100\\u0102\\u0104\\u0106\\u0108\\u010a\\u010c\\u010e\\u0110\\u0112\\u0114\\u0116\\u0118\\u011a\\u011c\\u011e\\u0120\\u0122\\u0124\\u0126\\u0128\\u012a\\u012c\\u012e\\u0130\\u0132\\u0134\\u0136\\u0139\\u013b\\u013d\\u013f\\u0141\\u0143\\u0145\\u0147\\u014a\\u014c\\u014e\\u0150\\u0152\\u0154\\u0156\\u0158\\u015a\\u015c\\u015e\\u0160\\u0162\\u0164\\u0166\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u0174\\u0176\\u0178-\\u0179\\u017b\\u017d\\u0181-\\u0182\\u0184\\u0186-\\u0187\\u0189-\\u018b\\u018e-\\u0191\\u0193-\\u0194\\u0196-\\u0198\\u019c-\\u019d\\u019f-\\u01a0\\u01a2\\u01a4\\u01a6-\\u01a7\\u01a9\\u01ac\\u01ae-\\u01af\\u01b1-\\u01b3\\u01b5\\u01b7-\\u01b8\\u01bc\\u01c4\\u01c7\\u01ca\\u01cd\\u01cf\\u01d1\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u01de\\u01e0\\u01e2\\u01e4\\u01e6\\u01e8\\u01ea\\u01ec\\u01ee\\u01f1\\u01f4\\u01f6-\\u01f8\\u01fa\\u01fc\\u01fe\\u0200\\u0202\\u0204\\u0206\\u0208\\u020a\\u020c\\u020e\\u0210\\u0212\\u0214\\u0216\\u0218\\u021a\\u021c\\u021e\\u0220\\u0222\\u0224\\u0226\\u0228\\u022a\\u022c\\u022e\\u0230\\u0232\\u023a-\\u023b\\u023d-\\u023e\\u0241\\u0243-\\u0246\\u0248\\u024a\\u024c\\u024e\\u0370\\u0372\\u0376\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u038f\\u0391-\\u03a1\\u03a3-\\u03ab\\u03cf\\u03d2-\\u03d4\\u03d8\\u03da\\u03dc\\u03de\\u03e0\\u03e2\\u03e4\\u03e6\\u03e8\\u03ea\\u03ec\\u03ee\\u03f4\\u03f7\\u03f9-\\u03fa\\u03fd-\\u042f\\u0460\\u0462\\u0464\\u0466\\u0468\\u046a\\u046c\\u046e\\u0470\\u0472\\u0474\\u0476\\u0478\\u047a\\u047c\\u047e\\u0480\\u048a\\u048c\\u048e\\u0490\\u0492\\u0494\\u0496\\u0498\\u049a\\u049c\\u049e\\u04a0\\u04a2\\u04a4\\u04a6\\u04a8\\u04aa\\u04ac\\u04ae\\u04b0\\u04b2\\u04b4\\u04b6\\u04b8\\u04ba\\u04bc\\u04be\\u04c0-\\u04c1\\u04c3\\u04c5\\u04c7\\u04c9\\u04cb\\u04cd\\u04d0\\u04d2\\u04d4\\u04d6\\u04d8\\u04da\\u04dc\\u04de\\u04e0\\u04e2\\u04e4\\u04e6\\u04e8\\u04ea\\u04ec\\u04ee\\u04f0\\u04f2\\u04f4\\u04f6\\u04f8\\u04fa\\u04fc\\u04fe\\u0500\\u0502\\u0504\\u0506\\u0508\\u050a\\u050c\\u050e\\u0510\\u0512\\u0514\\u0516\\u0518\\u051a\\u051c\\u051e\\u0520\\u0522\\u0524\\u0526\\u0531-\\u0556\\u10a0-\\u10c5\\u10c7\\u10cd\\u1e00\\u1e02\\u1e04\\u1e06\\u1e08\\u1e0a\\u1e0c\\u1e0e\\u1e10\\u1e12\\u1e14\\u1e16\\u1e18\\u1e1a\\u1e1c\\u1e1e\\u1e20\\u1e22\\u1e24\\u1e26\\u1e28\\u1e2a\\u1e2c\\u1e2e\\u1e30\\u1e32\\u1e34\\u1e36\\u1e38\\u1e3a\\u1e3c\\u1e3e\\u1e40\\u1e42\\u1e44\\u1e46\\u1e48\\u1e4a\\u1e4c\\u1e4e\\u1e50\\u1e52\\u1e54\\u1e56\\u1e58\\u1e5a\\u1e5c\\u1e5e\\u1e60\\u1e62\\u1e64\\u1e66\\u1e68\\u1e6a\\u1e6c\\u1e6e\\u1e70\\u1e72\\u1e74\\u1e76\\u1e78\\u1e7a\\u1e7c\\u1e7e\\u1e80\\u1e82\\u1e84\\u1e86\\u1e88\\u1e8a\\u1e8c\\u1e8e\\u1e90\\u1e92\\u1e94\\u1e9e\\u1ea0\\u1ea2\\u1ea4\\u1ea6\\u1ea8\\u1eaa\\u1eac\\u1eae\\u1eb0\\u1eb2\\u1eb4\\u1eb6\\u1eb8\\u1eba\\u1ebc\\u1ebe\\u1ec0\\u1ec2\\u1ec4\\u1ec6\\u1ec8\\u1eca\\u1ecc\\u1ece\\u1ed0\\u1ed2\\u1ed4\\u1ed6\\u1ed8\\u1eda\\u1edc\\u1ede\\u1ee0\\u1ee2\\u1ee4\\u1ee6\\u1ee8\\u1eea\\u1eec\\u1eee\\u1ef0\\u1ef2\\u1ef4\\u1ef6\\u1ef8\\u1efa\\u1efc\\u1efe\\u1f08-\\u1f0f\\u1f18-\\u1f1d\\u1f28-\\u1f2f\\u1f38-\\u1f3f\\u1f48-\\u1f4d\\u1f59\\u1f5b\\u1f5d\\u1f5f\\u1f68-\\u1f6f\\u1fb8-\\u1fbb\\u1fc8-\\u1fcb\\u1fd8-\\u1fdb\\u1fe8-\\u1fec\\u1ff8-\\u1ffb\\u2102\\u2107\\u210b-\\u210d\\u2110-\\u2112\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u2130-\\u2133\\u213e-\\u213f\\u2145\\u2183\\u2c00-\\u2c2e\\u2c60\\u2c62-\\u2c64\\u2c67\\u2c69\\u2c6b\\u2c6d-\\u2c70\\u2c72\\u2c75\\u2c7e-\\u2c80\\u2c82\\u2c84\\u2c86\\u2c88\\u2c8a\\u2c8c\\u2c8e\\u2c90\\u2c92\\u2c94\\u2c96\\u2c98\\u2c9a\\u2c9c\\u2c9e\\u2ca0\\u2ca2\\u2ca4\\u2ca6\\u2ca8\\u2caa\\u2cac\\u2cae\\u2cb0\\u2cb2\\u2cb4\\u2cb6\\u2cb8\\u2cba\\u2cbc\\u2cbe\\u2cc0\\u2cc2\\u2cc4\\u2cc6\\u2cc8\\u2cca\\u2ccc\\u2cce\\u2cd0\\u2cd2\\u2cd4\\u2cd6\\u2cd8\\u2cda\\u2cdc\\u2cde\\u2ce0\\u2ce2\\u2ceb\\u2ced\\u2cf2\\ua640\\ua642\\ua644\\ua646\\ua648\\ua64a\\ua64c\\ua64e\\ua650\\ua652\\ua654\\ua656\\ua658\\ua65a\\ua65c\\ua65e\\ua660\\ua662\\ua664\\ua666\\ua668\\ua66a\\ua66c\\ua680\\ua682\\ua684\\ua686\\ua688\\ua68a\\ua68c\\ua68e\\ua690\\ua692\\ua694\\ua696\\ua722\\ua724\\ua726\\ua728\\ua72a\\ua72c\\ua72e\\ua732\\ua734\\ua736\\ua738\\ua73a\\ua73c\\ua73e\\ua740\\ua742\\ua744\\ua746\\ua748\\ua74a\\ua74c\\ua74e\\ua750\\ua752\\ua754\\ua756\\ua758\\ua75a\\ua75c\\ua75e\\ua760\\ua762\\ua764\\ua766\\ua768\\ua76a\\ua76c\\ua76e\\ua779\\ua77b\\ua77d-\\ua77e\\ua780\\ua782\\ua784\\ua786\\ua78b\\ua78d\\ua790\\ua792\\ua7a0\\ua7a2\\ua7a4\\ua7a6\\ua7a8\\ua7aa\\uff21-\\uff3aa-z\\u00b5\\u00df-\\u00f6\\u00f8-\\u00ff\\u0101\\u0103\\u0105\\u0107\\u0109\\u010b\\u010d\\u010f\\u0111\\u0113\\u0115\\u0117\\u0119\\u011b\\u011d\\u011f\\u0121\\u0123\\u0125\\u0127\\u0129\\u012b\\u012d\\u012f\\u0131\\u0133\\u0135\\u0137-\\u0138\\u013a\\u013c\\u013e\\u0140\\u0142\\u0144\\u0146\\u0148-\\u0149\\u014b\\u014d\\u014f\\u0151\\u0153\\u0155\\u0157\\u0159\\u015b\\u015d\\u015f\\u0161\\u0163\\u0165\\u0167\\u0169\\u016b\\u016d\\u016f\\u0171\\u0173\\u0175\\u0177\\u017a\\u017c\\u017e-\\u0180\\u0183\\u0185\\u0188\\u018c-\\u018d\\u0192\\u0195\\u0199-\\u019b\\u019e\\u01a1\\u01a3\\u01a5\\u01a8\\u01aa-\\u01ab\\u01ad\\u01b0\\u01b4\\u01b6\\u01b9-\\u01ba\\u01bd-\\u01bf\\u01c6\\u01c9\\u01cc\\u01ce\\u01d0\\u01d2\\u01d4\\u01d6\\u01d8\\u01da\\u01dc-\\u01dd\\u01df\\u01e1\\u01e3\\u01e5\\u01e7\\u01e9\\u01eb\\u01ed\\u01ef-\\u01f0\\u01f3\\u01f5\\u01f9\\u01fb\\u01fd\\u01ff\\u0201\\u0203\\u0205\\u0207\\u0209\\u020b\\u020d\\u020f\\u0211\\u0213\\u0215\\u0217\\u0219\\u021b\\u021d\\u021f\\u0221\\u0223\\u0225\\u0227\\u0229\\u022b\\u022d\\u022f\\u0231\\u0233-\\u0239\\u023c\\u023f-\\u0240\\u0242\\u0247\\u0249\\u024b\\u024d\\u024f-\\u0293\\u0295-\\u02af\\u0371\\u0373\\u0377\\u037b-\\u037d\\u0390\\u03ac-\\u03ce\\u03d0-\\u03d1\\u03d5-\\u03d7\\u03d9\\u03db\\u03dd\\u03df\\u03e1\\u03e3\\u03e5\\u03e7\\u03e9\\u03eb\\u03ed\\u03ef-\\u03f3\\u03f5\\u03f8\\u03fb-\\u03fc\\u0430-\\u045f\\u0461\\u0463\\u0465\\u0467\\u0469\\u046b\\u046d\\u046f\\u0471\\u0473\\u0475\\u0477\\u0479\\u047b\\u047d\\u047f\\u0481\\u048b\\u048d\\u048f\\u0491\\u0493\\u0495\\u0497\\u0499\\u049b\\u049d\\u049f\\u04a1\\u04a3\\u04a5\\u04a7\\u04a9\\u04ab\\u04ad\\u04af\\u04b1\\u04b3\\u04b5\\u04b7\\u04b9\\u04bb\\u04bd\\u04bf\\u04c2\\u04c4\\u04c6\\u04c8\\u04ca\\u04cc\\u04ce-\\u04cf\\u04d1\\u04d3\\u04d5\\u04d7\\u04d9\\u04db\\u04dd\\u04df\\u04e1\\u04e3\\u04e5\\u04e7\\u04e9\\u04eb\\u04ed\\u04ef\\u04f1\\u04f3\\u04f5\\u04f7\\u04f9\\u04fb\\u04fd\\u04ff\\u0501\\u0503\\u0505\\u0507\\u0509\\u050b\\u050d\\u050f\\u0511\\u0513\\u0515\\u0517\\u0519\\u051b\\u051d\\u051f\\u0521\\u0523\\u0525\\u0527\\u0561-\\u0587\\u1d00-\\u1d2b\\u1d6b-\\u1d77\\u1d79-\\u1d9a\\u1e01\\u1e03\\u1e05\\u1e07\\u1e09\\u1e0b\\u1e0d\\u1e0f\\u1e11\\u1e13\\u1e15\\u1e17\\u1e19\\u1e1b\\u1e1d\\u1e1f\\u1e21\\u1e23\\u1e25\\u1e27\\u1e29\\u1e2b\\u1e2d\\u1e2f\\u1e31\\u1e33\\u1e35\\u1e37\\u1e39\\u1e3b\\u1e3d\\u1e3f\\u1e41\\u1e43\\u1e45\\u1e47\\u1e49\\u1e4b\\u1e4d\\u1e4f\\u1e51\\u1e53\\u1e55\\u1e57\\u1e59\\u1e5b\\u1e5d\\u1e5f\\u1e61\\u1e63\\u1e65\\u1e67\\u1e69\\u1e6b\\u1e6d\\u1e6f\\u1e71\\u1e73\\u1e75\\u1e77\\u1e79\\u1e7b\\u1e7d\\u1e7f\\u1e81\\u1e83\\u1e85\\u1e87\\u1e89\\u1e8b\\u1e8d\\u1e8f\\u1e91\\u1e93\\u1e95-\\u1e9d\\u1e9f\\u1ea1\\u1ea3\\u1ea5\\u1ea7\\u1ea9\\u1eab\\u1ead\\u1eaf\\u1eb1\\u1eb3\\u1eb5\\u1eb7\\u1eb9\\u1ebb\\u1ebd\\u1ebf\\u1ec1\\u1ec3\\u1ec5\\u1ec7\\u1ec9\\u1ecb\\u1ecd\\u1ecf\\u1ed1\\u1ed3\\u1ed5\\u1ed7\\u1ed9\\u1edb\\u1edd\\u1edf\\u1ee1\\u1ee3\\u1ee5\\u1ee7\\u1ee9\\u1eeb\\u1eed\\u1eef\\u1ef1\\u1ef3\\u1ef5\\u1ef7\\u1ef9\\u1efb\\u1efd\\u1eff-\\u1f07\\u1f10-\\u1f15\\u1f20-\\u1f27\\u1f30-\\u1f37\\u1f40-\\u1f45\\u1f50-\\u1f57\\u1f60-\\u1f67\\u1f70-\\u1f7d\\u1f80-\\u1f87\\u1f90-\\u1f97\\u1fa0-\\u1fa7\\u1fb0-\\u1fb4\\u1fb6-\\u1fb7\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fc7\\u1fd0-\\u1fd3\\u1fd6-\\u1fd7\\u1fe0-\\u1fe7\\u1ff2-\\u1ff4\\u1ff6-\\u1ff7\\u210a\\u210e-\\u210f\\u2113\\u212f\\u2134\\u2139\\u213c-\\u213d\\u2146-\\u2149\\u214e\\u2184\\u2c30-\\u2c5e\\u2c61\\u2c65-\\u2c66\\u2c68\\u2c6a\\u2c6c\\u2c71\\u2c73-\\u2c74\\u2c76-\\u2c7b\\u2c81\\u2c83\\u2c85\\u2c87\\u2c89\\u2c8b\\u2c8d\\u2c8f\\u2c91\\u2c93\\u2c95\\u2c97\\u2c99\\u2c9b\\u2c9d\\u2c9f\\u2ca1\\u2ca3\\u2ca5\\u2ca7\\u2ca9\\u2cab\\u2cad\\u2caf\\u2cb1\\u2cb3\\u2cb5\\u2cb7\\u2cb9\\u2cbb\\u2cbd\\u2cbf\\u2cc1\\u2cc3\\u2cc5\\u2cc7\\u2cc9\\u2ccb\\u2ccd\\u2ccf\\u2cd1\\u2cd3\\u2cd5\\u2cd7\\u2cd9\\u2cdb\\u2cdd\\u2cdf\\u2ce1\\u2ce3-\\u2ce4\\u2cec\\u2cee\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\ua641\\ua643\\ua645\\ua647\\ua649\\ua64b\\ua64d\\ua64f\\ua651\\ua653\\ua655\\ua657\\ua659\\ua65b\\ua65d\\ua65f\\ua661\\ua663\\ua665\\ua667\\ua669\\ua66b\\ua66d\\ua681\\ua683\\ua685\\ua687\\ua689\\ua68b\\ua68d\\ua68f\\ua691\\ua693\\ua695\\ua697\\ua723\\ua725\\ua727\\ua729\\ua72b\\ua72d\\ua72f-\\ua731\\ua733\\ua735\\ua737\\ua739\\ua73b\\ua73d\\ua73f\\ua741\\ua743\\ua745\\ua747\\ua749\\ua74b\\ua74d\\ua74f\\ua751\\ua753\\ua755\\ua757\\ua759\\ua75b\\ua75d\\ua75f\\ua761\\ua763\\ua765\\ua767\\ua769\\ua76b\\ua76d\\ua76f\\ua771-\\ua778\\ua77a\\ua77c\\ua77f\\ua781\\ua783\\ua785\\ua787\\ua78c\\ua78e\\ua791\\ua793\\ua7a1\\ua7a3\\ua7a5\\ua7a7\\ua7a9\\ua7fa\\ufb00-\\ufb06\\ufb13-\\ufb17\\uff41-\\uff5a\\u01c5\\u01c8\\u01cb\\u01f2\\u1f88-\\u1f8f\\u1f98-\\u1f9f\\u1fa8-\\u1faf\\u1fbc\\u1fcc\\u1ffc\\u02b0-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0374\\u037a\\u0559\\u0640\\u06e5-\\u06e6\\u07f4-\\u07f5\\u07fa\\u081a\\u0824\\u0828\\u0971\\u0e46\\u0ec6\\u10fc\\u17d7\\u1843\\u1aa7\\u1c78-\\u1c7d\\u1d2c-\\u1d6a\\u1d78\\u1d9b-\\u1dbf\\u2071\\u207f\\u2090-\\u209c\\u2c7c-\\u2c7d\\u2d6f\\u2e2f\\u3005\\u3031-\\u3035\\u303b\\u309d-\\u309e\\u30fc-\\u30fe\\ua015\\ua4f8-\\ua4fd\\ua60c\\ua67f\\ua717-\\ua71f\\ua770\\ua788\\ua7f8-\\ua7f9\\ua9cf\\uaa70\\uaadd\\uaaf3-\\uaaf4\\uff70\\uff9e-\\uff9f\\u16ee-\\u16f0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303a\\ua6e6-\\ua6ef0-9\\u0660-\\u0669\\u06f0-\\u06f9\\u07c0-\\u07c9\\u0966-\\u096f\\u09e6-\\u09ef\\u0a66-\\u0a6f\\u0ae6-\\u0aef\\u0b66-\\u0b6f\\u0be6-\\u0bef\\u0c66-\\u0c6f\\u0ce6-\\u0cef\\u0d66-\\u0d6f\\u0e50-\\u0e59\\u0ed0-\\u0ed9\\u0f20-\\u0f29\\u1040-\\u1049\\u1090-\\u1099\\u17e0-\\u17e9\\u1810-\\u1819\\u1946-\\u194f\\u19d0-\\u19d9\\u1a80-\\u1a89\\u1a90-\\u1a99\\u1b50-\\u1b59\\u1bb0-\\u1bb9\\u1c40-\\u1c49\\u1c50-\\u1c59\\ua620-\\ua629\\ua8d0-\\ua8d9\\ua900-\\ua909\\ua9d0-\\ua9d9\\uaa50-\\uaa59\\uabf0-\\uabf9\\uff10-\\uff19_\\u203f-\\u2040\\u2054\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\uff3f\\u00ad\\u0600-\\u0604\\u061c\\u06dd\\u070f\\u180e\\u200b-\\u200f\\u202a-\\u202e\\u2060-\\u2064\\u2066-\\u206f\\ufeff\\ufff9-\\ufffb\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u065f\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7-\\u06e8\\u06ea-\\u06ed\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0902\\u093a\\u093c\\u0941-\\u0948\\u094d\\u0951-\\u0957\\u0962-\\u0963\\u0981\\u09bc\\u09c1-\\u09c4\\u09cd\\u09e2-\\u09e3\\u0a01-\\u0a02\\u0a3c\\u0a41-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a70-\\u0a71\\u0a75\\u0a81-\\u0a82\\u0abc\\u0ac1-\\u0ac5\\u0ac7-\\u0ac8\\u0acd\\u0ae2-\\u0ae3\\u0b01\\u0b3c\\u0b3f\\u0b41-\\u0b44\\u0b4d\\u0b56\\u0b62-\\u0b63\\u0b82\\u0bc0\\u0bcd\\u0c3e-\\u0c40\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c62-\\u0c63\\u0cbc\\u0cbf\\u0cc6\\u0ccc-\\u0ccd\\u0ce2-\\u0ce3\\u0d41-\\u0d44\\u0d4d\\u0d62-\\u0d63\\u0dca\\u0dd2-\\u0dd4\\u0dd6\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0eb1\\u0eb4-\\u0eb9\\u0ebb-\\u0ebc\\u0ec8-\\u0ecd\\u0f18-\\u0f19\\u0f35\\u0f37\\u0f39\\u0f71-\\u0f7e\\u0f80-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102d-\\u1030\\u1032-\\u1037\\u1039-\\u103a\\u103d-\\u103e\\u1058-\\u1059\\u105e-\\u1060\\u1071-\\u1074\\u1082\\u1085-\\u1086\\u108d\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752-\\u1753\\u1772-\\u1773\\u17b4-\\u17b5\\u17b7-\\u17bd\\u17c6\\u17c9-\\u17d3\\u17dd\\u180b-\\u180d\\u18a9\\u1920-\\u1922\\u1927-\\u1928\\u1932\\u1939-\\u193b\\u1a17-\\u1a18\\u1a1b\\u1a56\\u1a58-\\u1a5e\\u1a60\\u1a62\\u1a65-\\u1a6c\\u1a73-\\u1a7c\\u1a7f\\u1b00-\\u1b03\\u1b34\\u1b36-\\u1b3a\\u1b3c\\u1b42\\u1b6b-\\u1b73\\u1b80-\\u1b81\\u1ba2-\\u1ba5\\u1ba8-\\u1ba9\\u1bab\\u1be6\\u1be8-\\u1be9\\u1bed\\u1bef-\\u1bf1\\u1c2c-\\u1c33\\u1c36-\\u1c37\\u1cd0-\\u1cd2\\u1cd4-\\u1ce0\\u1ce2-\\u1ce8\\u1ced\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302d\\u3099-\\u309a\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua802\\ua806\\ua80b\\ua825-\\ua826\\ua8c4\\ua8e0-\\ua8f1\\ua926-\\ua92d\\ua947-\\ua951\\ua980-\\ua982\\ua9b3\\ua9b6-\\ua9b9\\ua9bc\\uaa29-\\uaa2e\\uaa31-\\uaa32\\uaa35-\\uaa36\\uaa43\\uaa4c\\uaab0\\uaab2-\\uaab4\\uaab7-\\uaab8\\uaabe-\\uaabf\\uaac1\\uaaec-\\uaaed\\uaaf6\\uabe5\\uabe8\\uabed\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\u0903\\u093b\\u093e-\\u0940\\u0949-\\u094c\\u094e-\\u094f\\u0982-\\u0983\\u09be-\\u09c0\\u09c7-\\u09c8\\u09cb-\\u09cc\\u09d7\\u0a03\\u0a3e-\\u0a40\\u0a83\\u0abe-\\u0ac0\\u0ac9\\u0acb-\\u0acc\\u0b02-\\u0b03\\u0b3e\\u0b40\\u0b47-\\u0b48\\u0b4b-\\u0b4c\\u0b57\\u0bbe-\\u0bbf\\u0bc1-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcc\\u0bd7\\u0c01-\\u0c03\\u0c41-\\u0c44\\u0c82-\\u0c83\\u0cbe\\u0cc0-\\u0cc4\\u0cc7-\\u0cc8\\u0cca-\\u0ccb\\u0cd5-\\u0cd6\\u0d02-\\u0d03\\u0d3e-\\u0d40\\u0d46-\\u0d48\\u0d4a-\\u0d4c\\u0d57\\u0d82-\\u0d83\\u0dcf-\\u0dd1\\u0dd8-\\u0ddf\\u0df2-\\u0df3\\u0f3e-\\u0f3f\\u0f7f\\u102b-\\u102c\\u1031\\u1038\\u103b-\\u103c\\u1056-\\u1057\\u1062-\\u1064\\u1067-\\u106d\\u1083-\\u1084\\u1087-\\u108c\\u108f\\u109a-\\u109c\\u17b6\\u17be-\\u17c5\\u17c7-\\u17c8\\u1923-\\u1926\\u1929-\\u192b\\u1930-\\u1931\\u1933-\\u1938\\u19b0-\\u19c0\\u19c8-\\u19c9\\u1a19-\\u1a1a\\u1a55\\u1a57\\u1a61\\u1a63-\\u1a64\\u1a6d-\\u1a72\\u1b04\\u1b35\\u1b3b\\u1b3d-\\u1b41\\u1b43-\\u1b44\\u1b82\\u1ba1\\u1ba6-\\u1ba7\\u1baa\\u1bac-\\u1bad\\u1be7\\u1bea-\\u1bec\\u1bee\\u1bf2-\\u1bf3\\u1c24-\\u1c2b\\u1c34-\\u1c35\\u1ce1\\u1cf2-\\u1cf3\\u302e-\\u302f\\ua823-\\ua824\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c3\\ua952-\\ua953\\ua983\\ua9b4-\\ua9b5\\ua9ba-\\ua9bb\\ua9bd-\\ua9c0\\uaa2f-\\uaa30\\uaa33-\\uaa34\\uaa4d\\uaa7b\\uaaeb\\uaaee-\\uaaef\\uaaf5\\uabe3-\\uabe4\\uabe6-\\uabe7\\uabe9-\\uabea\\uabec]*|`@?[_A-Z\\u00c0-\\u00d6\\u00d8-\\u00de\\u0100\\u0102\\u0104\\u0106\\u0108\\u010a\\u010c\\u010e\\u0110\\u0112\\u0114\\u0116\\u0118\\u011a\\u011c\\u011e\\u0120\\u0122\\u0124\\u0126\\u0128\\u012a\\u012c\\u012e\\u0130\\u0132\\u0134\\u0136\\u0139\\u013b\\u013d\\u013f\\u0141\\u0143\\u0145\\u0147\\u014a\\u014c\\u014e\\u0150\\u0152\\u0154\\u0156\\u0158\\u015a\\u015c\\u015e\\u0160\\u0162\\u0164\\u0166\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u0174\\u0176\\u0178-\\u0179\\u017b\\u017d\\u0181-\\u0182\\u0184\\u0186-\\u0187\\u0189-\\u018b\\u018e-\\u0191\\u0193-\\u0194\\u0196-\\u0198\\u019c-\\u019d\\u019f-\\u01a0\\u01a2\\u01a4\\u01a6-\\u01a7\\u01a9\\u01ac\\u01ae-\\u01af\\u01b1-\\u01b3\\u01b5\\u01b7-\\u01b8\\u01bc\\u01c4\\u01c7\\u01ca\\u01cd\\u01cf\\u01d1\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u01de\\u01e0\\u01e2\\u01e4\\u01e6\\u01e8\\u01ea\\u01ec\\u01ee\\u01f1\\u01f4\\u01f6-\\u01f8\\u01fa\\u01fc\\u01fe\\u0200\\u0202\\u0204\\u0206\\u0208\\u020a\\u020c\\u020e\\u0210\\u0212\\u0214\\u0216\\u0218\\u021a\\u021c\\u021e\\u0220\\u0222\\u0224\\u0226\\u0228\\u022a\\u022c\\u022e\\u0230\\u0232\\u023a-\\u023b\\u023d-\\u023e\\u0241\\u0243-\\u0246\\u0248\\u024a\\u024c\\u024e\\u0370\\u0372\\u0376\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u038f\\u0391-\\u03a1\\u03a3-\\u03ab\\u03cf\\u03d2-\\u03d4\\u03d8\\u03da\\u03dc\\u03de\\u03e0\\u03e2\\u03e4\\u03e6\\u03e8\\u03ea\\u03ec\\u03ee\\u03f4\\u03f7\\u03f9-\\u03fa\\u03fd-\\u042f\\u0460\\u0462\\u0464\\u0466\\u0468\\u046a\\u046c\\u046e\\u0470\\u0472\\u0474\\u0476\\u0478\\u047a\\u047c\\u047e\\u0480\\u048a\\u048c\\u048e\\u0490\\u0492\\u0494\\u0496\\u0498\\u049a\\u049c\\u049e\\u04a0\\u04a2\\u04a4\\u04a6\\u04a8\\u04aa\\u04ac\\u04ae\\u04b0\\u04b2\\u04b4\\u04b6\\u04b8\\u04ba\\u04bc\\u04be\\u04c0-\\u04c1\\u04c3\\u04c5\\u04c7\\u04c9\\u04cb\\u04cd\\u04d0\\u04d2\\u04d4\\u04d6\\u04d8\\u04da\\u04dc\\u04de\\u04e0\\u04e2\\u04e4\\u04e6\\u04e8\\u04ea\\u04ec\\u04ee\\u04f0\\u04f2\\u04f4\\u04f6\\u04f8\\u04fa\\u04fc\\u04fe\\u0500\\u0502\\u0504\\u0506\\u0508\\u050a\\u050c\\u050e\\u0510\\u0512\\u0514\\u0516\\u0518\\u051a\\u051c\\u051e\\u0520\\u0522\\u0524\\u0526\\u0531-\\u0556\\u10a0-\\u10c5\\u10c7\\u10cd\\u1e00\\u1e02\\u1e04\\u1e06\\u1e08\\u1e0a\\u1e0c\\u1e0e\\u1e10\\u1e12\\u1e14\\u1e16\\u1e18\\u1e1a\\u1e1c\\u1e1e\\u1e20\\u1e22\\u1e24\\u1e26\\u1e28\\u1e2a\\u1e2c\\u1e2e\\u1e30\\u1e32\\u1e34\\u1e36\\u1e38\\u1e3a\\u1e3c\\u1e3e\\u1e40\\u1e42\\u1e44\\u1e46\\u1e48\\u1e4a\\u1e4c\\u1e4e\\u1e50\\u1e52\\u1e54\\u1e56\\u1e58\\u1e5a\\u1e5c\\u1e5e\\u1e60\\u1e62\\u1e64\\u1e66\\u1e68\\u1e6a\\u1e6c\\u1e6e\\u1e70\\u1e72\\u1e74\\u1e76\\u1e78\\u1e7a\\u1e7c\\u1e7e\\u1e80\\u1e82\\u1e84\\u1e86\\u1e88\\u1e8a\\u1e8c\\u1e8e\\u1e90\\u1e92\\u1e94\\u1e9e\\u1ea0\\u1ea2\\u1ea4\\u1ea6\\u1ea8\\u1eaa\\u1eac\\u1eae\\u1eb0\\u1eb2\\u1eb4\\u1eb6\\u1eb8\\u1eba\\u1ebc\\u1ebe\\u1ec0\\u1ec2\\u1ec4\\u1ec6\\u1ec8\\u1eca\\u1ecc\\u1ece\\u1ed0\\u1ed2\\u1ed4\\u1ed6\\u1ed8\\u1eda\\u1edc\\u1ede\\u1ee0\\u1ee2\\u1ee4\\u1ee6\\u1ee8\\u1eea\\u1eec\\u1eee\\u1ef0\\u1ef2\\u1ef4\\u1ef6\\u1ef8\\u1efa\\u1efc\\u1efe\\u1f08-\\u1f0f\\u1f18-\\u1f1d\\u1f28-\\u1f2f\\u1f38-\\u1f3f\\u1f48-\\u1f4d\\u1f59\\u1f5b\\u1f5d\\u1f5f\\u1f68-\\u1f6f\\u1fb8-\\u1fbb\\u1fc8-\\u1fcb\\u1fd8-\\u1fdb\\u1fe8-\\u1fec\\u1ff8-\\u1ffb\\u2102\\u2107\\u210b-\\u210d\\u2110-\\u2112\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u2130-\\u2133\\u213e-\\u213f\\u2145\\u2183\\u2c00-\\u2c2e\\u2c60\\u2c62-\\u2c64\\u2c67\\u2c69\\u2c6b\\u2c6d-\\u2c70\\u2c72\\u2c75\\u2c7e-\\u2c80\\u2c82\\u2c84\\u2c86\\u2c88\\u2c8a\\u2c8c\\u2c8e\\u2c90\\u2c92\\u2c94\\u2c96\\u2c98\\u2c9a\\u2c9c\\u2c9e\\u2ca0\\u2ca2\\u2ca4\\u2ca6\\u2ca8\\u2caa\\u2cac\\u2cae\\u2cb0\\u2cb2\\u2cb4\\u2cb6\\u2cb8\\u2cba\\u2cbc\\u2cbe\\u2cc0\\u2cc2\\u2cc4\\u2cc6\\u2cc8\\u2cca\\u2ccc\\u2cce\\u2cd0\\u2cd2\\u2cd4\\u2cd6\\u2cd8\\u2cda\\u2cdc\\u2cde\\u2ce0\\u2ce2\\u2ceb\\u2ced\\u2cf2\\ua640\\ua642\\ua644\\ua646\\ua648\\ua64a\\ua64c\\ua64e\\ua650\\ua652\\ua654\\ua656\\ua658\\ua65a\\ua65c\\ua65e\\ua660\\ua662\\ua664\\ua666\\ua668\\ua66a\\ua66c\\ua680\\ua682\\ua684\\ua686\\ua688\\ua68a\\ua68c\\ua68e\\ua690\\ua692\\ua694\\ua696\\ua722\\ua724\\ua726\\ua728\\ua72a\\ua72c\\ua72e\\ua732\\ua734\\ua736\\ua738\\ua73a\\ua73c\\ua73e\\ua740\\ua742\\ua744\\ua746\\ua748\\ua74a\\ua74c\\ua74e\\ua750\\ua752\\ua754\\ua756\\ua758\\ua75a\\ua75c\\ua75e\\ua760\\ua762\\ua764\\ua766\\ua768\\ua76a\\ua76c\\ua76e\\ua779\\ua77b\\ua77d-\\ua77e\\ua780\\ua782\\ua784\\ua786\\ua78b\\ua78d\\ua790\\ua792\\ua7a0\\ua7a2\\ua7a4\\ua7a6\\ua7a8\\ua7aa\\uff21-\\uff3aa-z\\u00b5\\u00df-\\u00f6\\u00f8-\\u00ff\\u0101\\u0103\\u0105\\u0107\\u0109\\u010b\\u010d\\u010f\\u0111\\u0113\\u0115\\u0117\\u0119\\u011b\\u011d\\u011f\\u0121\\u0123\\u0125\\u0127\\u0129\\u012b\\u012d\\u012f\\u0131\\u0133\\u0135\\u0137-\\u0138\\u013a\\u013c\\u013e\\u0140\\u0142\\u0144\\u0146\\u0148-\\u0149\\u014b\\u014d\\u014f\\u0151\\u0153\\u0155\\u0157\\u0159\\u015b\\u015d\\u015f\\u0161\\u0163\\u0165\\u0167\\u0169\\u016b\\u016d\\u016f\\u0171\\u0173\\u0175\\u0177\\u017a\\u017c\\u017e-\\u0180\\u0183\\u0185\\u0188\\u018c-\\u018d\\u0192\\u0195\\u0199-\\u019b\\u019e\\u01a1\\u01a3\\u01a5\\u01a8\\u01aa-\\u01ab\\u01ad\\u01b0\\u01b4\\u01b6\\u01b9-\\u01ba\\u01bd-\\u01bf\\u01c6\\u01c9\\u01cc\\u01ce\\u01d0\\u01d2\\u01d4\\u01d6\\u01d8\\u01da\\u01dc-\\u01dd\\u01df\\u01e1\\u01e3\\u01e5\\u01e7\\u01e9\\u01eb\\u01ed\\u01ef-\\u01f0\\u01f3\\u01f5\\u01f9\\u01fb\\u01fd\\u01ff\\u0201\\u0203\\u0205\\u0207\\u0209\\u020b\\u020d\\u020f\\u0211\\u0213\\u0215\\u0217\\u0219\\u021b\\u021d\\u021f\\u0221\\u0223\\u0225\\u0227\\u0229\\u022b\\u022d\\u022f\\u0231\\u0233-\\u0239\\u023c\\u023f-\\u0240\\u0242\\u0247\\u0249\\u024b\\u024d\\u024f-\\u0293\\u0295-\\u02af\\u0371\\u0373\\u0377\\u037b-\\u037d\\u0390\\u03ac-\\u03ce\\u03d0-\\u03d1\\u03d5-\\u03d7\\u03d9\\u03db\\u03dd\\u03df\\u03e1\\u03e3\\u03e5\\u03e7\\u03e9\\u03eb\\u03ed\\u03ef-\\u03f3\\u03f5\\u03f8\\u03fb-\\u03fc\\u0430-\\u045f\\u0461\\u0463\\u0465\\u0467\\u0469\\u046b\\u046d\\u046f\\u0471\\u0473\\u0475\\u0477\\u0479\\u047b\\u047d\\u047f\\u0481\\u048b\\u048d\\u048f\\u0491\\u0493\\u0495\\u0497\\u0499\\u049b\\u049d\\u049f\\u04a1\\u04a3\\u04a5\\u04a7\\u04a9\\u04ab\\u04ad\\u04af\\u04b1\\u04b3\\u04b5\\u04b7\\u04b9\\u04bb\\u04bd\\u04bf\\u04c2\\u04c4\\u04c6\\u04c8\\u04ca\\u04cc\\u04ce-\\u04cf\\u04d1\\u04d3\\u04d5\\u04d7\\u04d9\\u04db\\u04dd\\u04df\\u04e1\\u04e3\\u04e5\\u04e7\\u04e9\\u04eb\\u04ed\\u04ef\\u04f1\\u04f3\\u04f5\\u04f7\\u04f9\\u04fb\\u04fd\\u04ff\\u0501\\u0503\\u0505\\u0507\\u0509\\u050b\\u050d\\u050f\\u0511\\u0513\\u0515\\u0517\\u0519\\u051b\\u051d\\u051f\\u0521\\u0523\\u0525\\u0527\\u0561-\\u0587\\u1d00-\\u1d2b\\u1d6b-\\u1d77\\u1d79-\\u1d9a\\u1e01\\u1e03\\u1e05\\u1e07\\u1e09\\u1e0b\\u1e0d\\u1e0f\\u1e11\\u1e13\\u1e15\\u1e17\\u1e19\\u1e1b\\u1e1d\\u1e1f\\u1e21\\u1e23\\u1e25\\u1e27\\u1e29\\u1e2b\\u1e2d\\u1e2f\\u1e31\\u1e33\\u1e35\\u1e37\\u1e39\\u1e3b\\u1e3d\\u1e3f\\u1e41\\u1e43\\u1e45\\u1e47\\u1e49\\u1e4b\\u1e4d\\u1e4f\\u1e51\\u1e53\\u1e55\\u1e57\\u1e59\\u1e5b\\u1e5d\\u1e5f\\u1e61\\u1e63\\u1e65\\u1e67\\u1e69\\u1e6b\\u1e6d\\u1e6f\\u1e71\\u1e73\\u1e75\\u1e77\\u1e79\\u1e7b\\u1e7d\\u1e7f\\u1e81\\u1e83\\u1e85\\u1e87\\u1e89\\u1e8b\\u1e8d\\u1e8f\\u1e91\\u1e93\\u1e95-\\u1e9d\\u1e9f\\u1ea1\\u1ea3\\u1ea5\\u1ea7\\u1ea9\\u1eab\\u1ead\\u1eaf\\u1eb1\\u1eb3\\u1eb5\\u1eb7\\u1eb9\\u1ebb\\u1ebd\\u1ebf\\u1ec1\\u1ec3\\u1ec5\\u1ec7\\u1ec9\\u1ecb\\u1ecd\\u1ecf\\u1ed1\\u1ed3\\u1ed5\\u1ed7\\u1ed9\\u1edb\\u1edd\\u1edf\\u1ee1\\u1ee3\\u1ee5\\u1ee7\\u1ee9\\u1eeb\\u1eed\\u1eef\\u1ef1\\u1ef3\\u1ef5\\u1ef7\\u1ef9\\u1efb\\u1efd\\u1eff-\\u1f07\\u1f10-\\u1f15\\u1f20-\\u1f27\\u1f30-\\u1f37\\u1f40-\\u1f45\\u1f50-\\u1f57\\u1f60-\\u1f67\\u1f70-\\u1f7d\\u1f80-\\u1f87\\u1f90-\\u1f97\\u1fa0-\\u1fa7\\u1fb0-\\u1fb4\\u1fb6-\\u1fb7\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fc7\\u1fd0-\\u1fd3\\u1fd6-\\u1fd7\\u1fe0-\\u1fe7\\u1ff2-\\u1ff4\\u1ff6-\\u1ff7\\u210a\\u210e-\\u210f\\u2113\\u212f\\u2134\\u2139\\u213c-\\u213d\\u2146-\\u2149\\u214e\\u2184\\u2c30-\\u2c5e\\u2c61\\u2c65-\\u2c66\\u2c68\\u2c6a\\u2c6c\\u2c71\\u2c73-\\u2c74\\u2c76-\\u2c7b\\u2c81\\u2c83\\u2c85\\u2c87\\u2c89\\u2c8b\\u2c8d\\u2c8f\\u2c91\\u2c93\\u2c95\\u2c97\\u2c99\\u2c9b\\u2c9d\\u2c9f\\u2ca1\\u2ca3\\u2ca5\\u2ca7\\u2ca9\\u2cab\\u2cad\\u2caf\\u2cb1\\u2cb3\\u2cb5\\u2cb7\\u2cb9\\u2cbb\\u2cbd\\u2cbf\\u2cc1\\u2cc3\\u2cc5\\u2cc7\\u2cc9\\u2ccb\\u2ccd\\u2ccf\\u2cd1\\u2cd3\\u2cd5\\u2cd7\\u2cd9\\u2cdb\\u2cdd\\u2cdf\\u2ce1\\u2ce3-\\u2ce4\\u2cec\\u2cee\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\ua641\\ua643\\ua645\\ua647\\ua649\\ua64b\\ua64d\\ua64f\\ua651\\ua653\\ua655\\ua657\\ua659\\ua65b\\ua65d\\ua65f\\ua661\\ua663\\ua665\\ua667\\ua669\\ua66b\\ua66d\\ua681\\ua683\\ua685\\ua687\\ua689\\ua68b\\ua68d\\ua68f\\ua691\\ua693\\ua695\\ua697\\ua723\\ua725\\ua727\\ua729\\ua72b\\ua72d\\ua72f-\\ua731\\ua733\\ua735\\ua737\\ua739\\ua73b\\ua73d\\ua73f\\ua741\\ua743\\ua745\\ua747\\ua749\\ua74b\\ua74d\\ua74f\\ua751\\ua753\\ua755\\ua757\\ua759\\ua75b\\ua75d\\ua75f\\ua761\\ua763\\ua765\\ua767\\ua769\\ua76b\\ua76d\\ua76f\\ua771-\\ua778\\ua77a\\ua77c\\ua77f\\ua781\\ua783\\ua785\\ua787\\ua78c\\ua78e\\ua791\\ua793\\ua7a1\\ua7a3\\ua7a5\\ua7a7\\ua7a9\\ua7fa\\ufb00-\\ufb06\\ufb13-\\ufb17\\uff41-\\uff5a\\u01c5\\u01c8\\u01cb\\u01f2\\u1f88-\\u1f8f\\u1f98-\\u1f9f\\u1fa8-\\u1faf\\u1fbc\\u1fcc\\u1ffc\\u02b0-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0374\\u037a\\u0559\\u0640\\u06e5-\\u06e6\\u07f4-\\u07f5\\u07fa\\u081a\\u0824\\u0828\\u0971\\u0e46\\u0ec6\\u10fc\\u17d7\\u1843\\u1aa7\\u1c78-\\u1c7d\\u1d2c-\\u1d6a\\u1d78\\u1d9b-\\u1dbf\\u2071\\u207f\\u2090-\\u209c\\u2c7c-\\u2c7d\\u2d6f\\u2e2f\\u3005\\u3031-\\u3035\\u303b\\u309d-\\u309e\\u30fc-\\u30fe\\ua015\\ua4f8-\\ua4fd\\ua60c\\ua67f\\ua717-\\ua71f\\ua770\\ua788\\ua7f8-\\ua7f9\\ua9cf\\uaa70\\uaadd\\uaaf3-\\uaaf4\\uff70\\uff9e-\\uff9f\\u16ee-\\u16f0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303a\\ua6e6-\\ua6ef][A-Z\\u00c0-\\u00d6\\u00d8-\\u00de\\u0100\\u0102\\u0104\\u0106\\u0108\\u010a\\u010c\\u010e\\u0110\\u0112\\u0114\\u0116\\u0118\\u011a\\u011c\\u011e\\u0120\\u0122\\u0124\\u0126\\u0128\\u012a\\u012c\\u012e\\u0130\\u0132\\u0134\\u0136\\u0139\\u013b\\u013d\\u013f\\u0141\\u0143\\u0145\\u0147\\u014a\\u014c\\u014e\\u0150\\u0152\\u0154\\u0156\\u0158\\u015a\\u015c\\u015e\\u0160\\u0162\\u0164\\u0166\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u0174\\u0176\\u0178-\\u0179\\u017b\\u017d\\u0181-\\u0182\\u0184\\u0186-\\u0187\\u0189-\\u018b\\u018e-\\u0191\\u0193-\\u0194\\u0196-\\u0198\\u019c-\\u019d\\u019f-\\u01a0\\u01a2\\u01a4\\u01a6-\\u01a7\\u01a9\\u01ac\\u01ae-\\u01af\\u01b1-\\u01b3\\u01b5\\u01b7-\\u01b8\\u01bc\\u01c4\\u01c7\\u01ca\\u01cd\\u01cf\\u01d1\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u01de\\u01e0\\u01e2\\u01e4\\u01e6\\u01e8\\u01ea\\u01ec\\u01ee\\u01f1\\u01f4\\u01f6-\\u01f8\\u01fa\\u01fc\\u01fe\\u0200\\u0202\\u0204\\u0206\\u0208\\u020a\\u020c\\u020e\\u0210\\u0212\\u0214\\u0216\\u0218\\u021a\\u021c\\u021e\\u0220\\u0222\\u0224\\u0226\\u0228\\u022a\\u022c\\u022e\\u0230\\u0232\\u023a-\\u023b\\u023d-\\u023e\\u0241\\u0243-\\u0246\\u0248\\u024a\\u024c\\u024e\\u0370\\u0372\\u0376\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u038f\\u0391-\\u03a1\\u03a3-\\u03ab\\u03cf\\u03d2-\\u03d4\\u03d8\\u03da\\u03dc\\u03de\\u03e0\\u03e2\\u03e4\\u03e6\\u03e8\\u03ea\\u03ec\\u03ee\\u03f4\\u03f7\\u03f9-\\u03fa\\u03fd-\\u042f\\u0460\\u0462\\u0464\\u0466\\u0468\\u046a\\u046c\\u046e\\u0470\\u0472\\u0474\\u0476\\u0478\\u047a\\u047c\\u047e\\u0480\\u048a\\u048c\\u048e\\u0490\\u0492\\u0494\\u0496\\u0498\\u049a\\u049c\\u049e\\u04a0\\u04a2\\u04a4\\u04a6\\u04a8\\u04aa\\u04ac\\u04ae\\u04b0\\u04b2\\u04b4\\u04b6\\u04b8\\u04ba\\u04bc\\u04be\\u04c0-\\u04c1\\u04c3\\u04c5\\u04c7\\u04c9\\u04cb\\u04cd\\u04d0\\u04d2\\u04d4\\u04d6\\u04d8\\u04da\\u04dc\\u04de\\u04e0\\u04e2\\u04e4\\u04e6\\u04e8\\u04ea\\u04ec\\u04ee\\u04f0\\u04f2\\u04f4\\u04f6\\u04f8\\u04fa\\u04fc\\u04fe\\u0500\\u0502\\u0504\\u0506\\u0508\\u050a\\u050c\\u050e\\u0510\\u0512\\u0514\\u0516\\u0518\\u051a\\u051c\\u051e\\u0520\\u0522\\u0524\\u0526\\u0531-\\u0556\\u10a0-\\u10c5\\u10c7\\u10cd\\u1e00\\u1e02\\u1e04\\u1e06\\u1e08\\u1e0a\\u1e0c\\u1e0e\\u1e10\\u1e12\\u1e14\\u1e16\\u1e18\\u1e1a\\u1e1c\\u1e1e\\u1e20\\u1e22\\u1e24\\u1e26\\u1e28\\u1e2a\\u1e2c\\u1e2e\\u1e30\\u1e32\\u1e34\\u1e36\\u1e38\\u1e3a\\u1e3c\\u1e3e\\u1e40\\u1e42\\u1e44\\u1e46\\u1e48\\u1e4a\\u1e4c\\u1e4e\\u1e50\\u1e52\\u1e54\\u1e56\\u1e58\\u1e5a\\u1e5c\\u1e5e\\u1e60\\u1e62\\u1e64\\u1e66\\u1e68\\u1e6a\\u1e6c\\u1e6e\\u1e70\\u1e72\\u1e74\\u1e76\\u1e78\\u1e7a\\u1e7c\\u1e7e\\u1e80\\u1e82\\u1e84\\u1e86\\u1e88\\u1e8a\\u1e8c\\u1e8e\\u1e90\\u1e92\\u1e94\\u1e9e\\u1ea0\\u1ea2\\u1ea4\\u1ea6\\u1ea8\\u1eaa\\u1eac\\u1eae\\u1eb0\\u1eb2\\u1eb4\\u1eb6\\u1eb8\\u1eba\\u1ebc\\u1ebe\\u1ec0\\u1ec2\\u1ec4\\u1ec6\\u1ec8\\u1eca\\u1ecc\\u1ece\\u1ed0\\u1ed2\\u1ed4\\u1ed6\\u1ed8\\u1eda\\u1edc\\u1ede\\u1ee0\\u1ee2\\u1ee4\\u1ee6\\u1ee8\\u1eea\\u1eec\\u1eee\\u1ef0\\u1ef2\\u1ef4\\u1ef6\\u1ef8\\u1efa\\u1efc\\u1efe\\u1f08-\\u1f0f\\u1f18-\\u1f1d\\u1f28-\\u1f2f\\u1f38-\\u1f3f\\u1f48-\\u1f4d\\u1f59\\u1f5b\\u1f5d\\u1f5f\\u1f68-\\u1f6f\\u1fb8-\\u1fbb\\u1fc8-\\u1fcb\\u1fd8-\\u1fdb\\u1fe8-\\u1fec\\u1ff8-\\u1ffb\\u2102\\u2107\\u210b-\\u210d\\u2110-\\u2112\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u2130-\\u2133\\u213e-\\u213f\\u2145\\u2183\\u2c00-\\u2c2e\\u2c60\\u2c62-\\u2c64\\u2c67\\u2c69\\u2c6b\\u2c6d-\\u2c70\\u2c72\\u2c75\\u2c7e-\\u2c80\\u2c82\\u2c84\\u2c86\\u2c88\\u2c8a\\u2c8c\\u2c8e\\u2c90\\u2c92\\u2c94\\u2c96\\u2c98\\u2c9a\\u2c9c\\u2c9e\\u2ca0\\u2ca2\\u2ca4\\u2ca6\\u2ca8\\u2caa\\u2cac\\u2cae\\u2cb0\\u2cb2\\u2cb4\\u2cb6\\u2cb8\\u2cba\\u2cbc\\u2cbe\\u2cc0\\u2cc2\\u2cc4\\u2cc6\\u2cc8\\u2cca\\u2ccc\\u2cce\\u2cd0\\u2cd2\\u2cd4\\u2cd6\\u2cd8\\u2cda\\u2cdc\\u2cde\\u2ce0\\u2ce2\\u2ceb\\u2ced\\u2cf2\\ua640\\ua642\\ua644\\ua646\\ua648\\ua64a\\ua64c\\ua64e\\ua650\\ua652\\ua654\\ua656\\ua658\\ua65a\\ua65c\\ua65e\\ua660\\ua662\\ua664\\ua666\\ua668\\ua66a\\ua66c\\ua680\\ua682\\ua684\\ua686\\ua688\\ua68a\\ua68c\\ua68e\\ua690\\ua692\\ua694\\ua696\\ua722\\ua724\\ua726\\ua728\\ua72a\\ua72c\\ua72e\\ua732\\ua734\\ua736\\ua738\\ua73a\\ua73c\\ua73e\\ua740\\ua742\\ua744\\ua746\\ua748\\ua74a\\ua74c\\ua74e\\ua750\\ua752\\ua754\\ua756\\ua758\\ua75a\\ua75c\\ua75e\\ua760\\ua762\\ua764\\ua766\\ua768\\ua76a\\ua76c\\ua76e\\ua779\\ua77b\\ua77d-\\ua77e\\ua780\\ua782\\ua784\\ua786\\ua78b\\ua78d\\ua790\\ua792\\ua7a0\\ua7a2\\ua7a4\\ua7a6\\ua7a8\\ua7aa\\uff21-\\uff3aa-z\\u00b5\\u00df-\\u00f6\\u00f8-\\u00ff\\u0101\\u0103\\u0105\\u0107\\u0109\\u010b\\u010d\\u010f\\u0111\\u0113\\u0115\\u0117\\u0119\\u011b\\u011d\\u011f\\u0121\\u0123\\u0125\\u0127\\u0129\\u012b\\u012d\\u012f\\u0131\\u0133\\u0135\\u0137-\\u0138\\u013a\\u013c\\u013e\\u0140\\u0142\\u0144\\u0146\\u0148-\\u0149\\u014b\\u014d\\u014f\\u0151\\u0153\\u0155\\u0157\\u0159\\u015b\\u015d\\u015f\\u0161\\u0163\\u0165\\u0167\\u0169\\u016b\\u016d\\u016f\\u0171\\u0173\\u0175\\u0177\\u017a\\u017c\\u017e-\\u0180\\u0183\\u0185\\u0188\\u018c-\\u018d\\u0192\\u0195\\u0199-\\u019b\\u019e\\u01a1\\u01a3\\u01a5\\u01a8\\u01aa-\\u01ab\\u01ad\\u01b0\\u01b4\\u01b6\\u01b9-\\u01ba\\u01bd-\\u01bf\\u01c6\\u01c9\\u01cc\\u01ce\\u01d0\\u01d2\\u01d4\\u01d6\\u01d8\\u01da\\u01dc-\\u01dd\\u01df\\u01e1\\u01e3\\u01e5\\u01e7\\u01e9\\u01eb\\u01ed\\u01ef-\\u01f0\\u01f3\\u01f5\\u01f9\\u01fb\\u01fd\\u01ff\\u0201\\u0203\\u0205\\u0207\\u0209\\u020b\\u020d\\u020f\\u0211\\u0213\\u0215\\u0217\\u0219\\u021b\\u021d\\u021f\\u0221\\u0223\\u0225\\u0227\\u0229\\u022b\\u022d\\u022f\\u0231\\u0233-\\u0239\\u023c\\u023f-\\u0240\\u0242\\u0247\\u0249\\u024b\\u024d\\u024f-\\u0293\\u0295-\\u02af\\u0371\\u0373\\u0377\\u037b-\\u037d\\u0390\\u03ac-\\u03ce\\u03d0-\\u03d1\\u03d5-\\u03d7\\u03d9\\u03db\\u03dd\\u03df\\u03e1\\u03e3\\u03e5\\u03e7\\u03e9\\u03eb\\u03ed\\u03ef-\\u03f3\\u03f5\\u03f8\\u03fb-\\u03fc\\u0430-\\u045f\\u0461\\u0463\\u0465\\u0467\\u0469\\u046b\\u046d\\u046f\\u0471\\u0473\\u0475\\u0477\\u0479\\u047b\\u047d\\u047f\\u0481\\u048b\\u048d\\u048f\\u0491\\u0493\\u0495\\u0497\\u0499\\u049b\\u049d\\u049f\\u04a1\\u04a3\\u04a5\\u04a7\\u04a9\\u04ab\\u04ad\\u04af\\u04b1\\u04b3\\u04b5\\u04b7\\u04b9\\u04bb\\u04bd\\u04bf\\u04c2\\u04c4\\u04c6\\u04c8\\u04ca\\u04cc\\u04ce-\\u04cf\\u04d1\\u04d3\\u04d5\\u04d7\\u04d9\\u04db\\u04dd\\u04df\\u04e1\\u04e3\\u04e5\\u04e7\\u04e9\\u04eb\\u04ed\\u04ef\\u04f1\\u04f3\\u04f5\\u04f7\\u04f9\\u04fb\\u04fd\\u04ff\\u0501\\u0503\\u0505\\u0507\\u0509\\u050b\\u050d\\u050f\\u0511\\u0513\\u0515\\u0517\\u0519\\u051b\\u051d\\u051f\\u0521\\u0523\\u0525\\u0527\\u0561-\\u0587\\u1d00-\\u1d2b\\u1d6b-\\u1d77\\u1d79-\\u1d9a\\u1e01\\u1e03\\u1e05\\u1e07\\u1e09\\u1e0b\\u1e0d\\u1e0f\\u1e11\\u1e13\\u1e15\\u1e17\\u1e19\\u1e1b\\u1e1d\\u1e1f\\u1e21\\u1e23\\u1e25\\u1e27\\u1e29\\u1e2b\\u1e2d\\u1e2f\\u1e31\\u1e33\\u1e35\\u1e37\\u1e39\\u1e3b\\u1e3d\\u1e3f\\u1e41\\u1e43\\u1e45\\u1e47\\u1e49\\u1e4b\\u1e4d\\u1e4f\\u1e51\\u1e53\\u1e55\\u1e57\\u1e59\\u1e5b\\u1e5d\\u1e5f\\u1e61\\u1e63\\u1e65\\u1e67\\u1e69\\u1e6b\\u1e6d\\u1e6f\\u1e71\\u1e73\\u1e75\\u1e77\\u1e79\\u1e7b\\u1e7d\\u1e7f\\u1e81\\u1e83\\u1e85\\u1e87\\u1e89\\u1e8b\\u1e8d\\u1e8f\\u1e91\\u1e93\\u1e95-\\u1e9d\\u1e9f\\u1ea1\\u1ea3\\u1ea5\\u1ea7\\u1ea9\\u1eab\\u1ead\\u1eaf\\u1eb1\\u1eb3\\u1eb5\\u1eb7\\u1eb9\\u1ebb\\u1ebd\\u1ebf\\u1ec1\\u1ec3\\u1ec5\\u1ec7\\u1ec9\\u1ecb\\u1ecd\\u1ecf\\u1ed1\\u1ed3\\u1ed5\\u1ed7\\u1ed9\\u1edb\\u1edd\\u1edf\\u1ee1\\u1ee3\\u1ee5\\u1ee7\\u1ee9\\u1eeb\\u1eed\\u1eef\\u1ef1\\u1ef3\\u1ef5\\u1ef7\\u1ef9\\u1efb\\u1efd\\u1eff-\\u1f07\\u1f10-\\u1f15\\u1f20-\\u1f27\\u1f30-\\u1f37\\u1f40-\\u1f45\\u1f50-\\u1f57\\u1f60-\\u1f67\\u1f70-\\u1f7d\\u1f80-\\u1f87\\u1f90-\\u1f97\\u1fa0-\\u1fa7\\u1fb0-\\u1fb4\\u1fb6-\\u1fb7\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fc7\\u1fd0-\\u1fd3\\u1fd6-\\u1fd7\\u1fe0-\\u1fe7\\u1ff2-\\u1ff4\\u1ff6-\\u1ff7\\u210a\\u210e-\\u210f\\u2113\\u212f\\u2134\\u2139\\u213c-\\u213d\\u2146-\\u2149\\u214e\\u2184\\u2c30-\\u2c5e\\u2c61\\u2c65-\\u2c66\\u2c68\\u2c6a\\u2c6c\\u2c71\\u2c73-\\u2c74\\u2c76-\\u2c7b\\u2c81\\u2c83\\u2c85\\u2c87\\u2c89\\u2c8b\\u2c8d\\u2c8f\\u2c91\\u2c93\\u2c95\\u2c97\\u2c99\\u2c9b\\u2c9d\\u2c9f\\u2ca1\\u2ca3\\u2ca5\\u2ca7\\u2ca9\\u2cab\\u2cad\\u2caf\\u2cb1\\u2cb3\\u2cb5\\u2cb7\\u2cb9\\u2cbb\\u2cbd\\u2cbf\\u2cc1\\u2cc3\\u2cc5\\u2cc7\\u2cc9\\u2ccb\\u2ccd\\u2ccf\\u2cd1\\u2cd3\\u2cd5\\u2cd7\\u2cd9\\u2cdb\\u2cdd\\u2cdf\\u2ce1\\u2ce3-\\u2ce4\\u2cec\\u2cee\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\ua641\\ua643\\ua645\\ua647\\ua649\\ua64b\\ua64d\\ua64f\\ua651\\ua653\\ua655\\ua657\\ua659\\ua65b\\ua65d\\ua65f\\ua661\\ua663\\ua665\\ua667\\ua669\\ua66b\\ua66d\\ua681\\ua683\\ua685\\ua687\\ua689\\ua68b\\ua68d\\ua68f\\ua691\\ua693\\ua695\\ua697\\ua723\\ua725\\ua727\\ua729\\ua72b\\ua72d\\ua72f-\\ua731\\ua733\\ua735\\ua737\\ua739\\ua73b\\ua73d\\ua73f\\ua741\\ua743\\ua745\\ua747\\ua749\\ua74b\\ua74d\\ua74f\\ua751\\ua753\\ua755\\ua757\\ua759\\ua75b\\ua75d\\ua75f\\ua761\\ua763\\ua765\\ua767\\ua769\\ua76b\\ua76d\\ua76f\\ua771-\\ua778\\ua77a\\ua77c\\ua77f\\ua781\\ua783\\ua785\\ua787\\ua78c\\ua78e\\ua791\\ua793\\ua7a1\\ua7a3\\ua7a5\\ua7a7\\ua7a9\\ua7fa\\ufb00-\\ufb06\\ufb13-\\ufb17\\uff41-\\uff5a\\u01c5\\u01c8\\u01cb\\u01f2\\u1f88-\\u1f8f\\u1f98-\\u1f9f\\u1fa8-\\u1faf\\u1fbc\\u1fcc\\u1ffc\\u02b0-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0374\\u037a\\u0559\\u0640\\u06e5-\\u06e6\\u07f4-\\u07f5\\u07fa\\u081a\\u0824\\u0828\\u0971\\u0e46\\u0ec6\\u10fc\\u17d7\\u1843\\u1aa7\\u1c78-\\u1c7d\\u1d2c-\\u1d6a\\u1d78\\u1d9b-\\u1dbf\\u2071\\u207f\\u2090-\\u209c\\u2c7c-\\u2c7d\\u2d6f\\u2e2f\\u3005\\u3031-\\u3035\\u303b\\u309d-\\u309e\\u30fc-\\u30fe\\ua015\\ua4f8-\\ua4fd\\ua60c\\ua67f\\ua717-\\ua71f\\ua770\\ua788\\ua7f8-\\ua7f9\\ua9cf\\uaa70\\uaadd\\uaaf3-\\uaaf4\\uff70\\uff9e-\\uff9f\\u16ee-\\u16f0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303a\\ua6e6-\\ua6ef0-9\\u0660-\\u0669\\u06f0-\\u06f9\\u07c0-\\u07c9\\u0966-\\u096f\\u09e6-\\u09ef\\u0a66-\\u0a6f\\u0ae6-\\u0aef\\u0b66-\\u0b6f\\u0be6-\\u0bef\\u0c66-\\u0c6f\\u0ce6-\\u0cef\\u0d66-\\u0d6f\\u0e50-\\u0e59\\u0ed0-\\u0ed9\\u0f20-\\u0f29\\u1040-\\u1049\\u1090-\\u1099\\u17e0-\\u17e9\\u1810-\\u1819\\u1946-\\u194f\\u19d0-\\u19d9\\u1a80-\\u1a89\\u1a90-\\u1a99\\u1b50-\\u1b59\\u1bb0-\\u1bb9\\u1c40-\\u1c49\\u1c50-\\u1c59\\ua620-\\ua629\\ua8d0-\\ua8d9\\ua900-\\ua909\\ua9d0-\\ua9d9\\uaa50-\\uaa59\\uabf0-\\uabf9\\uff10-\\uff19_\\u203f-\\u2040\\u2054\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\uff3f\\u00ad\\u0600-\\u0604\\u061c\\u06dd\\u070f\\u180e\\u200b-\\u200f\\u202a-\\u202e\\u2060-\\u2064\\u2066-\\u206f\\ufeff\\ufff9-\\ufffb\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u065f\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7-\\u06e8\\u06ea-\\u06ed\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0902\\u093a\\u093c\\u0941-\\u0948\\u094d\\u0951-\\u0957\\u0962-\\u0963\\u0981\\u09bc\\u09c1-\\u09c4\\u09cd\\u09e2-\\u09e3\\u0a01-\\u0a02\\u0a3c\\u0a41-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a70-\\u0a71\\u0a75\\u0a81-\\u0a82\\u0abc\\u0ac1-\\u0ac5\\u0ac7-\\u0ac8\\u0acd\\u0ae2-\\u0ae3\\u0b01\\u0b3c\\u0b3f\\u0b41-\\u0b44\\u0b4d\\u0b56\\u0b62-\\u0b63\\u0b82\\u0bc0\\u0bcd\\u0c3e-\\u0c40\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c62-\\u0c63\\u0cbc\\u0cbf\\u0cc6\\u0ccc-\\u0ccd\\u0ce2-\\u0ce3\\u0d41-\\u0d44\\u0d4d\\u0d62-\\u0d63\\u0dca\\u0dd2-\\u0dd4\\u0dd6\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0eb1\\u0eb4-\\u0eb9\\u0ebb-\\u0ebc\\u0ec8-\\u0ecd\\u0f18-\\u0f19\\u0f35\\u0f37\\u0f39\\u0f71-\\u0f7e\\u0f80-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102d-\\u1030\\u1032-\\u1037\\u1039-\\u103a\\u103d-\\u103e\\u1058-\\u1059\\u105e-\\u1060\\u1071-\\u1074\\u1082\\u1085-\\u1086\\u108d\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752-\\u1753\\u1772-\\u1773\\u17b4-\\u17b5\\u17b7-\\u17bd\\u17c6\\u17c9-\\u17d3\\u17dd\\u180b-\\u180d\\u18a9\\u1920-\\u1922\\u1927-\\u1928\\u1932\\u1939-\\u193b\\u1a17-\\u1a18\\u1a1b\\u1a56\\u1a58-\\u1a5e\\u1a60\\u1a62\\u1a65-\\u1a6c\\u1a73-\\u1a7c\\u1a7f\\u1b00-\\u1b03\\u1b34\\u1b36-\\u1b3a\\u1b3c\\u1b42\\u1b6b-\\u1b73\\u1b80-\\u1b81\\u1ba2-\\u1ba5\\u1ba8-\\u1ba9\\u1bab\\u1be6\\u1be8-\\u1be9\\u1bed\\u1bef-\\u1bf1\\u1c2c-\\u1c33\\u1c36-\\u1c37\\u1cd0-\\u1cd2\\u1cd4-\\u1ce0\\u1ce2-\\u1ce8\\u1ced\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302d\\u3099-\\u309a\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua802\\ua806\\ua80b\\ua825-\\ua826\\ua8c4\\ua8e0-\\ua8f1\\ua926-\\ua92d\\ua947-\\ua951\\ua980-\\ua982\\ua9b3\\ua9b6-\\ua9b9\\ua9bc\\uaa29-\\uaa2e\\uaa31-\\uaa32\\uaa35-\\uaa36\\uaa43\\uaa4c\\uaab0\\uaab2-\\uaab4\\uaab7-\\uaab8\\uaabe-\\uaabf\\uaac1\\uaaec-\\uaaed\\uaaf6\\uabe5\\uabe8\\uabed\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\u0903\\u093b\\u093e-\\u0940\\u0949-\\u094c\\u094e-\\u094f\\u0982-\\u0983\\u09be-\\u09c0\\u09c7-\\u09c8\\u09cb-\\u09cc\\u09d7\\u0a03\\u0a3e-\\u0a40\\u0a83\\u0abe-\\u0ac0\\u0ac9\\u0acb-\\u0acc\\u0b02-\\u0b03\\u0b3e\\u0b40\\u0b47-\\u0b48\\u0b4b-\\u0b4c\\u0b57\\u0bbe-\\u0bbf\\u0bc1-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcc\\u0bd7\\u0c01-\\u0c03\\u0c41-\\u0c44\\u0c82-\\u0c83\\u0cbe\\u0cc0-\\u0cc4\\u0cc7-\\u0cc8\\u0cca-\\u0ccb\\u0cd5-\\u0cd6\\u0d02-\\u0d03\\u0d3e-\\u0d40\\u0d46-\\u0d48\\u0d4a-\\u0d4c\\u0d57\\u0d82-\\u0d83\\u0dcf-\\u0dd1\\u0dd8-\\u0ddf\\u0df2-\\u0df3\\u0f3e-\\u0f3f\\u0f7f\\u102b-\\u102c\\u1031\\u1038\\u103b-\\u103c\\u1056-\\u1057\\u1062-\\u1064\\u1067-\\u106d\\u1083-\\u1084\\u1087-\\u108c\\u108f\\u109a-\\u109c\\u17b6\\u17be-\\u17c5\\u17c7-\\u17c8\\u1923-\\u1926\\u1929-\\u192b\\u1930-\\u1931\\u1933-\\u1938\\u19b0-\\u19c0\\u19c8-\\u19c9\\u1a19-\\u1a1a\\u1a55\\u1a57\\u1a61\\u1a63-\\u1a64\\u1a6d-\\u1a72\\u1b04\\u1b35\\u1b3b\\u1b3d-\\u1b41\\u1b43-\\u1b44\\u1b82\\u1ba1\\u1ba6-\\u1ba7\\u1baa\\u1bac-\\u1bad\\u1be7\\u1bea-\\u1bec\\u1bee\\u1bf2-\\u1bf3\\u1c24-\\u1c2b\\u1c34-\\u1c35\\u1ce1\\u1cf2-\\u1cf3\\u302e-\\u302f\\ua823-\\ua824\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c3\\ua952-\\ua953\\ua983\\ua9b4-\\ua9b5\\ua9ba-\\ua9bb\\ua9bd-\\ua9c0\\uaa2f-\\uaa30\\uaa33-\\uaa34\\uaa4d\\uaa7b\\uaaeb\\uaaee-\\uaaef\\uaaf5\\uabe3-\\uabe4\\uabe6-\\uabe7\\uabe9-\\uabea\\uabec\"\n+\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`^\\s*\\[.*?\\]`, NameAttribute, nil},\n \t\t\t{`[^\\S\\n]+`, Text, nil},\n \t\t\t{`\\\\\\n`, Text, nil},\n \t\t\t{`//[^\\n]*\\n?`, CommentSingle, nil},\n \t\t\t{`/[*].*?[*]/`, CommentMultiline, nil},\n \t\t\t{`\\n`, Text, nil},\n-\t\t\t{`::|!!|\\?[:.]`, Operator, nil},\n-\t\t\t{`[~!%^&*()+=|\\[\\]:;,.<>/?-]`, Punctuation, nil},\n+\t\t\t{`!==|!in|!is|===`, Operator, nil},\n+\t\t\t{`%=|&&|\\*=|\\+\\+|\\+=|--|-=|->|\\.\\.|\\/=|::|<=|==|>=|!!|!=|\\|\\||\\?[:.]`, Operator, nil},\n+\t\t\t{`[~!%^&*()+=|\\[\\]:;,.<>\\/?-]`, Punctuation, nil},\n \t\t\t{`[{}]`, Punctuation, nil},\n-\t\t\t{`\"\"\"[^\"]*\"\"\"`, LiteralString, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"\\n])*[\"\\n]`, LiteralString, nil},\n+\t\t\t{`\"\"\"`, LiteralString, Push(\"rawstring\")},\n+\t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n+\t\t\t{`(')(\\\\u[0-9a-fA-F]{4})(')`, ByGroups(LiteralStringChar, LiteralStringEscape, LiteralStringChar), nil},\n \t\t\t{`'\\\\.'|'[^\\\\]'`, LiteralStringChar, nil},\n \t\t\t{`0[xX][0-9a-fA-F]+[Uu]?[Ll]?|[0-9]+(\\.[0-9]*)?([eE][+-][0-9]+)?[fF]?[Uu]?[Ll]?`, LiteralNumber, nil},\n \t\t\t{`(companion)(\\s+)(object)`, ByGroups(Keyword, Text, Keyword), nil},\n \t\t\t{`(class|interface|object)(\\s+)`, ByGroups(Keyword, Text), Push(\"class\")},\n \t\t\t{`(package|import)(\\s+)`, ByGroups(Keyword, Text), Push(\"package\")},\n \t\t\t{`(val|var)(\\s+)`, ByGroups(Keyword, Text), Push(\"property\")},\n-\t\t\t{`(fun)(\\s+)(<[^>]*>\\s+)?`, ByGroups(Keyword, Text, Text), Push(\"function\")},\n-\t\t\t{`(abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|false|final|finally|for|fun|get|if|import|in|infix|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|true|try|val|var|vararg|when|where|while)\\b`, Keyword, nil},\n-\t\t\t{\"(@?[\" + kotlinIdentifier + \"]*`)\", Name, nil},\n+\t\t\t{`(fun)(\\s+)`, ByGroups(Keyword, Text), Push(\"function\")},\n+\t\t\t{`(abstract|actual|annotation|as|as\\?|break|by|catch|class|companion|const|constructor|continue|crossinline|data|delegate|do|dynamic|else|enum|expect|external|false|field|file|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|it|lateinit|noinline|null|object|open|operator|out|override|package|param|private|property|protected|public|receiver|reified|return|sealed|set|setparam|super|suspend|tailrec|this|throw|true|try|typealias|typeof|val|var|vararg|when|where|while)\\b`, Keyword, nil},\n+\t\t\t{`@[` + kotlinIdentifier + `]+`, NameDecorator, nil},\n+\t\t\t{`[` + kotlinIdentifier + `]+`, Name, nil},\n \t\t},\n \t\t\"package\": {\n \t\t\t{`\\S+`, NameNamespace, Pop(1)},\n \t\t},\n \t\t\"class\": {\n-\t\t\t{\"(@?[\" + kotlinIdentifier + \"]*`)\", NameClass, Pop(1)},\n+\t\t\t// \\x60 is the back tick character (`)\n+\t\t\t{`\\x60[^\\x60]+?\\x60`, NameClass, Pop(1)},\n+\t\t\t{`[` + kotlinIdentifier + `]+`, NameClass, Pop(1)},\n \t\t},\n \t\t\"property\": {\n-\t\t\t{\"(@?[\" + kotlinIdentifier + \" ]*`)\", NameProperty, Pop(1)},\n+\t\t\t{`\\x60[^\\x60]+?\\x60`, NameProperty, Pop(1)},\n+\t\t\t{`[` + kotlinIdentifier + `]+`, NameProperty, Pop(1)},\n+\t\t},\n+\t\t\"generics-specification\": {\n+\t\t\t{`<`, Punctuation, Push(\"generics-specification\")}, // required for generics inside generics e.g. <T : List<Int> >\n+\t\t\t{`>`, Punctuation, Pop(1)},\n+\t\t\t{`[,:*?]`, Punctuation, nil},\n+\t\t\t{`(in|out|reified)`, Keyword, nil},\n+\t\t\t{`\\x60[^\\x60]+?\\x60`, NameClass, nil},\n+\t\t\t{`[` + kotlinIdentifier + `]+`, NameClass, nil},\n+\t\t\t{`\\s+`, Text, nil},\n \t\t},\n \t\t\"function\": {\n-\t\t\t{\"(@?[\" + kotlinIdentifier + \" ]*`)\", NameFunction, Pop(1)},\n+\t\t\t{`<`, Punctuation, Push(\"generics-specification\")},\n+\t\t\t{`\\x60[^\\x60]+?\\x60`, NameFunction, Pop(1)},\n+\t\t\t{`[` + kotlinIdentifier + `]+`, NameFunction, Pop(1)},\n+\t\t\t{`\\s+`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t\t\"rawstring\": {\n+\t\t\t// raw strings don't allow character escaping\n+\t\t\t{`\"\"\"`, LiteralString, Pop(1)},\n+\t\t\t{`(?:[^$\"]+|\\\"{1,2}[^\"])+`, LiteralString, nil},\n+\t\t\tInclude(\"string-interpol\"),\n+\t\t\t// remaining dollar signs are just a string\n+\t\t\t{`\\$`, LiteralString, nil},\n+\t\t},\n+\t\t\"string\": {\n+\t\t\t{`\\\\[tbnr'\"\\\\\\$]`, LiteralStringEscape, nil},\n+\t\t\t{`\\\\u[0-9a-fA-F]{4}`, LiteralStringEscape, nil},\n+\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n+\t\t\tInclude(\"string-interpol\"),\n+\t\t\t{`[^\\n\\\\\"$]+`, LiteralStringDouble, nil},\n+\t\t\t// remaining dollar signs are just a string\n+\t\t\t{`\\$`, LiteralStringDouble, nil},\n+\t\t},\n+\t\t\"string-interpol\": {\n+\t\t\t{`\\$[` + kotlinIdentifier + `]+`, LiteralStringInterpol, nil},\n+\t\t\t{`\\${[^}\\n]*}`, LiteralStringInterpol, nil},\n+\t\t},\n+\t}\n+}"
    },
    {
      "sha": "6d83298b663b344868f1a7b67b52785eccf5789a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/l/lighttpd.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/l/lighttpd.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/l/lighttpd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/l/lighttpd.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Lighttpd Configuration File lexer.\n-var Lighttpd = internal.Register(MustNewLexer(\n+var Lighttpd = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Lighttpd configuration file\",\n \t\tAliases:   []string{\"lighty\", \"lighttpd\"},\n \t\tFilenames: []string{},\n \t\tMimeTypes: []string{\"text/x-lighttpd-conf\"},\n \t},\n-\tRules{\n+\tlighttpdRules,\n+))\n+\n+func lighttpdRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`#.*\\n`, CommentSingle, nil},\n \t\t\t{`/\\S*`, Name, nil},\n@@ -26,5 +30,5 @@ var Lighttpd = internal.Register(MustNewLexer(\n \t\t\t{`\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"`, LiteralStringDouble, nil},\n \t\t\t{`\\s+`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "e9ea319e3ca5ddb92849d4b254f67dd1da4c1cf1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/l/llvm.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/l/llvm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/l/llvm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/l/llvm.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Llvm lexer.\n-var Llvm = internal.Register(MustNewLexer(\n+var Llvm = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"LLVM\",\n \t\tAliases:   []string{\"llvm\"},\n \t\tFilenames: []string{\"*.ll\"},\n \t\tMimeTypes: []string{\"text/x-llvm\"},\n \t},\n-\tRules{\n+\tllvmRules,\n+))\n+\n+func llvmRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"whitespace\"),\n \t\t\t{`([-a-zA-Z$._][\\w\\-$.]*|\"[^\"]*?\")\\s*:`, NameLabel, nil},\n@@ -39,5 +43,5 @@ var Llvm = internal.Register(MustNewLexer(\n \t\t\t{Words(``, ``, `void`, `half`, `float`, `double`, `x86_fp80`, `fp128`, `ppc_fp128`, `label`, `metadata`, `token`), KeywordType, nil},\n \t\t\t{`i[1-9]\\d*`, Keyword, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "db574a1b9a8827ff304d57dd8fdcfef1ec7e0729",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/l/lua.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/l/lua.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/l/lua.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/l/lua.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Lua lexer.\n-var Lua = internal.Register(MustNewLexer(\n+var Lua = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Lua\",\n \t\tAliases:   []string{\"lua\"},\n \t\tFilenames: []string{\"*.lua\", \"*.wlua\"},\n \t\tMimeTypes: []string{\"text/x-lua\", \"application/x-lua\"},\n \t},\n-\tRules{\n+\tluaRules,\n+))\n+\n+func luaRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`#!.*`, CommentPreproc, nil},\n \t\t\tDefault(Push(\"base\")),\n@@ -71,5 +75,5 @@ var Lua = internal.Register(MustNewLexer(\n \t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n \t\t\t{`[^\\\\\"]+`, LiteralStringDouble, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "2b429212e5f033d4a6062eb4a8584580d30183e7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/lexers.go",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/lexers.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/lexers.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/lexers.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -3,7 +3,7 @@\n // Sub-packages contain lexer implementations.\n package lexers\n \n-// nolint: golint\n+// nolint\n import (\n \t\"github.com/alecthomas/chroma\"\n \t_ \"github.com/alecthomas/chroma/lexers/a\"\n@@ -32,6 +32,7 @@ import (\n \t_ \"github.com/alecthomas/chroma/lexers/w\"\n \t_ \"github.com/alecthomas/chroma/lexers/x\"\n \t_ \"github.com/alecthomas/chroma/lexers/y\"\n+\t_ \"github.com/alecthomas/chroma/lexers/z\"\n )\n \n // Registry of Lexers."
    },
    {
      "sha": "905491a642b22f86b9b930b503b5d8f0d20ac47e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/make.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/make.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/make.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/m/make.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -7,15 +7,19 @@ import (\n )\n \n // Makefile lexer.\n-var Makefile = internal.Register(MustNewLexer(\n+var Makefile = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Base Makefile\",\n \t\tAliases:   []string{\"make\", \"makefile\", \"mf\", \"bsdmake\"},\n \t\tFilenames: []string{\"*.mak\", \"*.mk\", \"Makefile\", \"makefile\", \"Makefile.*\", \"GNUmakefile\"},\n \t\tMimeTypes: []string{\"text/x-makefile\"},\n \t\tEnsureNL:  true,\n \t},\n-\tRules{\n+\tmakefileRules,\n+))\n+\n+func makefileRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`^(?:[\\t ]+.*\\n|\\n)+`, Using(Bash), nil},\n \t\t\t{`\\$[<@$+%?|*]`, Keyword, nil},\n@@ -50,5 +54,5 @@ var Makefile = internal.Register(MustNewLexer(\n \t\t\t{`\\n`, Text, Pop(1)},\n \t\t\t{`.`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "6f777dd58d2e55d62cd4be941b26acbd9b05677b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/mako.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/mako.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/mako.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/m/mako.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -7,14 +7,18 @@ import (\n )\n \n // Mako lexer.\n-var Mako = internal.Register(MustNewLexer(\n+var Mako = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Mako\",\n \t\tAliases:   []string{\"mako\"},\n \t\tFilenames: []string{\"*.mao\"},\n \t\tMimeTypes: []string{\"application/x-mako\"},\n \t},\n-\tRules{\n+\tmakoRules,\n+))\n+\n+func makoRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`(\\s*)(%)(\\s*end(?:\\w+))(\\n|\\Z)`, ByGroups(Text, CommentPreproc, Keyword, Other), nil},\n \t\t\t{`(\\s*)(%)([^\\n]*)(\\n|\\Z)`, ByGroups(Text, CommentPreproc, Using(Python), Other), nil},\n@@ -56,5 +60,5 @@ var Mako = internal.Register(MustNewLexer(\n \t\t\t{`'.*?'`, LiteralString, Pop(1)},\n \t\t\t{`[^\\s>]+`, LiteralString, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "e50e4702e777df4927efdaa9b51b55e81cc46cb0",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/markdown.go",
      "status": "modified",
      "additions": 11,
      "deletions": 6,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/markdown.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/markdown.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/m/markdown.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -7,14 +7,18 @@ import (\n )\n \n // Markdown lexer.\n-var Markdown = internal.Register(DelegatingLexer(h.HTML, MustNewLexer(\n+var Markdown = internal.Register(DelegatingLexer(h.HTML, MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"markdown\",\n \t\tAliases:   []string{\"md\", \"mkd\"},\n \t\tFilenames: []string{\"*.md\", \"*.mkd\", \"*.markdown\"},\n \t\tMimeTypes: []string{\"text/x-markdown\"},\n \t},\n-\tRules{\n+\tmarkdownRules,\n+)))\n+\n+func markdownRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`^(#[^#].+\\n)`, ByGroups(GenericHeading), nil},\n \t\t\t{`^(#{2,6}.+\\n)`, ByGroups(GenericSubheading), nil},\n@@ -23,7 +27,8 @@ var Markdown = internal.Register(DelegatingLexer(h.HTML, MustNewLexer(\n \t\t\t{`^(\\s*)([0-9]+\\.)( .+\\n)`, ByGroups(Text, Keyword, UsingSelf(\"inline\")), nil},\n \t\t\t{`^(\\s*>\\s)(.+\\n)`, ByGroups(Keyword, GenericEmph), nil},\n \t\t\t{\"^(```\\\\n)([\\\\w\\\\W]*?)(^```$)\", ByGroups(String, Text, String), nil},\n-\t\t\t{\"^(```)(\\\\w+)(\\\\n)([\\\\w\\\\W]*?)(^```$)\",\n+\t\t\t{\n+\t\t\t\t\"^(```)(\\\\w+)(\\\\n)([\\\\w\\\\W]*?)(^```$)\",\n \t\t\t\tUsingByGroup(\n \t\t\t\t\tinternal.Get,\n \t\t\t\t\t2, 4,\n@@ -35,7 +40,7 @@ var Markdown = internal.Register(DelegatingLexer(h.HTML, MustNewLexer(\n \t\t},\n \t\t\"inline\": {\n \t\t\t{`\\\\.`, Text, nil},\n-\t\t\t{`(\\s)([*_][^*_]+[*_])(\\W|\\n)`, ByGroups(Text, GenericEmph, Text), nil},\n+\t\t\t{`(\\s)(\\*|_)((?:(?!\\2).)*)(\\2)((?=\\W|\\n))`, ByGroups(Text, GenericEmph, GenericEmph, GenericEmph, Text), nil},\n \t\t\t{`(\\s)((\\*\\*|__).*?)\\3((?=\\W|\\n))`, ByGroups(Text, GenericStrong, GenericStrong, Text), nil},\n \t\t\t{`(\\s)(~~[^~]+~~)((?=\\W|\\n))`, ByGroups(Text, GenericDeleted, Text), nil},\n \t\t\t{\"`[^`]+`\", LiteralStringBacktick, nil},\n@@ -44,5 +49,5 @@ var Markdown = internal.Register(DelegatingLexer(h.HTML, MustNewLexer(\n \t\t\t{`[^\\\\\\s]+`, Other, nil},\n \t\t\t{`.|\\n`, Other, nil},\n \t\t},\n-\t},\n-)))\n+\t}\n+}"
    },
    {
      "sha": "bc48f5caaa2587767916df9e5c0fbc27af085f22",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/mason.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/mason.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/mason.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/m/mason.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -8,15 +8,19 @@ import (\n )\n \n // Mason lexer.\n-var Mason = internal.Register(MustNewLexer(\n+var Mason = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Mason\",\n \t\tAliases:   []string{\"mason\"},\n \t\tFilenames: []string{\"*.m\", \"*.mhtml\", \"*.mc\", \"*.mi\", \"autohandler\", \"dhandler\"},\n \t\tMimeTypes: []string{\"application/x-mason\"},\n \t\tPriority:  0.1,\n \t},\n-\tRules{\n+\tmasonRules,\n+))\n+\n+func masonRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`(<%doc>)(.*?)(</%doc>)(?s)`, ByGroups(NameTag, CommentMultiline, NameTag), nil},\n@@ -39,5 +43,5 @@ var Mason = internal.Register(MustNewLexer(\n                   \\Z                 # end of string\n                  )`, ByGroups(Using(HTML), Operator), nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "ed1ea24be628c00bf0c43cc8ab0d246ffb6bd1b5",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/mathematica.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/mathematica.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/mathematica.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/m/mathematica.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Mathematica lexer.\n-var Mathematica = internal.Register(MustNewLexer(\n+var Mathematica = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Mathematica\",\n \t\tAliases:   []string{\"mathematica\", \"mma\", \"nb\"},\n \t\tFilenames: []string{\"*.nb\", \"*.cdf\", \"*.nbp\", \"*.ma\"},\n \t\tMimeTypes: []string{\"application/mathematica\", \"application/vnd.wolfram.mathematica\", \"application/vnd.wolfram.mathematica.package\", \"application/vnd.wolfram.cdf\"},\n \t},\n-\tRules{\n+\tmathematicaRules,\n+))\n+\n+func mathematicaRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`(?s)\\(\\*.*?\\*\\)`, Comment, nil},\n \t\t\t{\"([a-zA-Z]+[A-Za-z0-9]*`)\", NameNamespace, nil},\n@@ -28,5 +32,5 @@ var Mathematica = internal.Register(MustNewLexer(\n \t\t\t{`\".*?\"`, LiteralString, nil},\n \t\t\t{`\\s+`, TextWhitespace, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "4e98d69776f8d4feb275b2e49b2ad31059cfec62",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/matlab.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/matlab.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/matlab.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/m/matlab.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Matlab lexer.\n-var Matlab = internal.Register(MustNewLexer(\n+var Matlab = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Matlab\",\n \t\tAliases:   []string{\"matlab\"},\n \t\tFilenames: []string{\"*.m\"},\n \t\tMimeTypes: []string{\"text/matlab\"},\n \t},\n-\tRules{\n+\tmatlabRules,\n+))\n+\n+func matlabRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\n`, Text, nil},\n \t\t\t{`^!.*`, LiteralStringOther, nil},\n@@ -47,5 +51,5 @@ var Matlab = internal.Register(MustNewLexer(\n \t\t\t{`(\\s*)(?:(.+)(\\s*)(=)(\\s*))?(.+)(\\()(.*)(\\))(\\s*)`, ByGroups(TextWhitespace, Text, TextWhitespace, Punctuation, TextWhitespace, NameFunction, Punctuation, Text, Punctuation, TextWhitespace), Pop(1)},\n \t\t\t{`(\\s*)([a-zA-Z_]\\w*)`, ByGroups(Text, NameFunction), Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "7baec6d614b5760a837dbb1c72b0a4b1d889f17f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/mcfunction.go",
      "status": "added",
      "additions": 109,
      "deletions": 0,
      "changes": 109,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/mcfunction.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/mcfunction.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/m/mcfunction.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,109 @@\n+package m\n+\n+import (\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+)\n+\n+// mcfunction lexer.\n+var MCFunction = internal.Register(MustNewLazyLexer(\n+\t&Config{\n+\t\tName:         \"mcfunction\",\n+\t\tAliases:      []string{\"mcfunction\"},\n+\t\tFilenames:    []string{\"*.mcfunction\"},\n+\t\tMimeTypes:    []string{},\n+\t\tNotMultiline: true,\n+\t\tDotAll:       true,\n+\t},\n+\tfunc() Rules {\n+\t\treturn Rules{\n+\t\t\t\"simplevalue\": {\n+\t\t\t\t{`(true|false)`, KeywordConstant, nil},\n+\t\t\t\t{`[01]b`, LiteralNumber, nil},\n+\t\t\t\t{`-?(0|[1-9]\\d*)(\\.\\d+[eE](\\+|-)?\\d+|[eE](\\+|-)?\\d+|\\.\\d+)`, LiteralNumberFloat, nil},\n+\t\t\t\t{`(-?\\d+)(\\.\\.)(-?\\d+)`, ByGroups(LiteralNumberInteger, Punctuation, LiteralNumberInteger), nil},\n+\t\t\t\t{`-?(0|[1-9]\\d*)`, LiteralNumberInteger, nil},\n+\t\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n+\t\t\t\t{`'[^']+'`, LiteralStringSingle, nil},\n+\t\t\t\t{`([!#]?)(\\w+)`, ByGroups(Punctuation, Text), nil},\n+\t\t\t},\n+\t\t\t\"nbtobjectattribute\": {\n+\t\t\t\tInclude(\"nbtvalue\"),\n+\t\t\t\t{`:`, Punctuation, nil},\n+\t\t\t\t{`,`, Punctuation, Pop(1)},\n+\t\t\t\t{`\\}`, Punctuation, Pop(2)},\n+\t\t\t},\n+\t\t\t\"nbtobjectvalue\": {\n+\t\t\t\t{`(\"(\\\\\\\\|\\\\\"|[^\"])*\"|[a-zA-Z0-9_]+)`, NameTag, Push(\"nbtobjectattribute\")},\n+\t\t\t\t{`\\}`, Punctuation, Pop(1)},\n+\t\t\t},\n+\t\t\t\"nbtarrayvalue\": {\n+\t\t\t\tInclude(\"nbtvalue\"),\n+\t\t\t\t{`,`, Punctuation, nil},\n+\t\t\t\t{`\\]`, Punctuation, Pop(1)},\n+\t\t\t},\n+\t\t\t\"nbtvalue\": {\n+\t\t\t\tInclude(\"simplevalue\"),\n+\t\t\t\t{`\\{`, Punctuation, Push(\"nbtobjectvalue\")},\n+\t\t\t\t{`\\[`, Punctuation, Push(\"nbtarrayvalue\")},\n+\t\t\t},\n+\t\t\t\"argumentvalue\": {\n+\t\t\t\tInclude(\"simplevalue\"),\n+\t\t\t\t{`,`, Punctuation, Pop(1)},\n+\t\t\t\t{`[}\\]]`, Punctuation, Pop(2)},\n+\t\t\t},\n+\t\t\t\"argumentlist\": {\n+\t\t\t\t{`(nbt)(={)`, ByGroups(NameAttribute, Punctuation), Push(\"nbtobjectvalue\")},\n+\t\t\t\t{`([A-Za-z0-9/_!]+)(={)`, ByGroups(NameAttribute, Punctuation), Push(\"argumentlist\")},\n+\t\t\t\t{`([A-Za-z0-9/_!]+)(=)`, ByGroups(NameAttribute, Punctuation), Push(\"argumentvalue\")},\n+\t\t\t\tInclude(\"simplevalue\"),\n+\t\t\t\t{`,`, Punctuation, nil},\n+\t\t\t\t{`[}\\]]`, Punctuation, Pop(1)},\n+\t\t\t},\n+\t\t\t\"root\": {\n+\t\t\t\t{`#.*?\\n`, CommentSingle, nil},\n+\t\t\t\t{Words(`/?`, `\\b`, `ability`, `attributes`, `advancement`,\n+\t\t\t\t\t`ban`, `ban-ip`, `banlist`, `bossbar`,\n+\t\t\t\t\t`camerashake`, `classroommode`, `clear`,\n+\t\t\t\t\t`clearspawnpoint`, `clone`, `code`, `collect`,\n+\t\t\t\t\t`createagent`, `data`, `datapack`, `debug`,\n+\t\t\t\t\t`defaultgamemode`, `deop`, `destroy`, `detect`,\n+\t\t\t\t\t`detectredstone`, `difficulty`, `dropall`,\n+\t\t\t\t\t`effect`, `enchant`, `event`, `execute`,\n+\t\t\t\t\t`experience`, `fill`, `flog`, `forceload`,\n+\t\t\t\t\t`function`, `gamemode`, `gamerule`,\n+\t\t\t\t\t`geteduclientinfo`, `give`, `help`, `item`,\n+\t\t\t\t\t`immutableworld`, `kick`, `kill`, `list`,\n+\t\t\t\t\t`locate`, `locatebiome`, `loot`, `me`, `mixer`,\n+\t\t\t\t\t`mobevent`, `move`, `msg`, `music`, `op`,\n+\t\t\t\t\t`pardon`, `particle`, `playanimation`,\n+\t\t\t\t\t`playsound`, `position`, `publish`,\n+\t\t\t\t\t`raytracefog`, `recipe`, `reload`, `remove`,\n+\t\t\t\t\t`replaceitem`, `ride`, `save`, `save-all`,\n+\t\t\t\t\t`save-off`, `save-on`, `say`, `schedule`,\n+\t\t\t\t\t`scoreboard`, `seed`, `setblock`,\n+\t\t\t\t\t`setidletimeout`, `setmaxplayers`,\n+\t\t\t\t\t`setworldspawn`, `spawnpoint`, `spectate`,\n+\t\t\t\t\t`spreadplayers`, `stop`, `stopsound`,\n+\t\t\t\t\t`structure`, `summon`, `tag`, `team`, `teammsg`,\n+\t\t\t\t\t`teleport`, `tell`, `tellraw`, `testfor`,\n+\t\t\t\t\t`testforblock`, `testforblocks`, `tickingarea`,\n+\t\t\t\t\t`time`, `title`, `toggledownfall`, `tp`,\n+\t\t\t\t\t`tpagent`, `transfer`, `transferserver`,\n+\t\t\t\t\t`trigger`, `turn`, `w`, `weather`, `whitelist`,\n+\t\t\t\t\t`worldborder`, `worldbuilder`, `wsserver`, `xp`,\n+\t\t\t\t), KeywordReserved, nil},\n+\t\t\t\t{Words(``, ``, `@p`, `@r`, `@a`, `@e`, `@s`, `@c`, `@v`),\n+\t\t\t\t\tKeywordConstant, nil},\n+\t\t\t\t{`\\[`, Punctuation, Push(\"argumentlist\")},\n+\t\t\t\t{`{`, Punctuation, Push(\"nbtobjectvalue\")},\n+\t\t\t\t{`~`, NameBuiltin, nil},\n+\t\t\t\t{`([a-zA-Z_]+:)?[a-zA-Z_]+\\b`, Text, nil},\n+\t\t\t\t{`([a-z]+)(\\.)([0-9]+)\\b`, ByGroups(Text, Punctuation, LiteralNumber), nil},\n+\t\t\t\t{`([<>=]|<=|>=)`, Punctuation, nil},\n+\t\t\t\tInclude(\"simplevalue\"),\n+\t\t\t\t{`\\s+`, TextWhitespace, nil},\n+\t\t\t},\n+\t\t}\n+\t},\n+))"
    },
    {
      "sha": "4a9ba2b78e610ee0557b626bcf4b6bc81f914ae7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/metal.go",
      "status": "added",
      "additions": 101,
      "deletions": 0,
      "changes": 101,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/metal.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/metal.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/m/metal.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,101 @@\n+package m\n+\n+import (\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+)\n+\n+// Metal lexer.\n+var Metal = internal.Register(MustNewLazyLexer(\n+\t&Config{\n+\t\tName:      \"Metal\",\n+\t\tAliases:   []string{\"metal\"},\n+\t\tFilenames: []string{\"*.metal\"},\n+\t\tMimeTypes: []string{\"text/x-metal\"},\n+\t\tEnsureNL:  true,\n+\t},\n+\tmetalRules,\n+))\n+\n+func metalRules() Rules {\n+\treturn Rules{\n+\t\t\"statements\": {\n+\t\t\t{Words(``, `\\b`, `namespace`, `operator`, `template`, `this`, `using`, `constexpr`), Keyword, nil},\n+\t\t\t{`(enum)\\b(\\s+)(class)\\b(\\s*)`, ByGroups(Keyword, Text, Keyword, Text), Push(\"classname\")},\n+\t\t\t{`(class|struct|enum|union)\\b(\\s*)`, ByGroups(Keyword, Text), Push(\"classname\")},\n+\t\t\t{`\\[\\[.+\\]\\]`, NameAttribute, nil},\n+\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+)[eE][+-]?\\d+[LlUu]*`, LiteralNumberFloat, nil},\n+\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+[fF])[fF]?`, LiteralNumberFloat, nil},\n+\t\t\t{`0[xX]([0-9A-Fa-f]('?[0-9A-Fa-f]+)*)[LlUu]*`, LiteralNumberHex, nil},\n+\t\t\t{`0('?[0-7]+)+[LlUu]*`, LiteralNumberOct, nil},\n+\t\t\t{`0[Bb][01]('?[01]+)*[LlUu]*`, LiteralNumberBin, nil},\n+\t\t\t{`[0-9]('?[0-9]+)*[LlUu]*`, LiteralNumberInteger, nil},\n+\t\t\t{`\\*/`, Error, nil},\n+\t\t\t{`[~!%^&*+=|?:<>/-]`, Operator, nil},\n+\t\t\t{`[()\\[\\],.]`, Punctuation, nil},\n+\t\t\t{Words(``, `\\b`, `break`, `case`, `const`, `continue`, `do`, `else`, `enum`, `extern`, `for`, `if`, `return`, `sizeof`, `static`, `struct`, `switch`, `typedef`, `union`, `while`), Keyword, nil},\n+\t\t\t{`(bool|float|half|long|ptrdiff_t|size_t|unsigned|u?char|u?int((8|16|32|64)_t)?|u?short)\\b`, KeywordType, nil},\n+\t\t\t{`(bool|float|half|u?(char|int|long|short))(2|3|4)\\b`, KeywordType, nil},\n+\t\t\t{`packed_(float|half|long|u?(char|int|short))(2|3|4)\\b`, KeywordType, nil},\n+\t\t\t{`(float|half)(2|3|4)x(2|3|4)\\b`, KeywordType, nil},\n+\t\t\t{`atomic_u?int\\b`, KeywordType, nil},\n+\t\t\t{`(rg?(8|16)(u|s)norm|rgba(8|16)(u|s)norm|srgba8unorm|rgb10a2|rg11b10f|rgb9e5)\\b`, KeywordType, nil},\n+\t\t\t{`(array|depth(2d|cube)(_array)?|depth2d_ms(_array)?|sampler|texture_buffer|texture(1|2)d(_array)?|texture2d_ms(_array)?|texture3d|texturecube(_array)?|uniform|visible_function_table)\\b`, KeywordType, nil},\n+\t\t\t{`(true|false|NULL)\\b`, NameBuiltin, nil},\n+\t\t\t{Words(``, `\\b`, `device`, `constant`, `ray_data`, `thread`, `threadgroup`, `threadgroup_imageblock`), Keyword, nil},\n+\t\t\t{`([a-zA-Z_]\\w*)(\\s*)(:)(?!:)`, ByGroups(NameLabel, Text, Punctuation), nil},\n+\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n+\t\t},\n+\t\t\"root\": {\n+\t\t\tInclude(\"whitespace\"),\n+\t\t\t{`(fragment|kernel|vertex)?((?:[\\w*\\s])+?(?:\\s|[*]))([a-zA-Z_]\\w*)(\\s*\\([^;]*?\\))([^;{]*)(\\{)`, ByGroups(Keyword, UsingSelf(\"root\"), NameFunction, UsingSelf(\"root\"), UsingSelf(\"root\"), Punctuation), Push(\"function\")},\n+\t\t\t{`(fragment|kernel|vertex)?((?:[\\w*\\s])+?(?:\\s|[*]))([a-zA-Z_]\\w*)(\\s*\\([^;]*?\\))([^;]*)(;)`, ByGroups(Keyword, UsingSelf(\"root\"), NameFunction, UsingSelf(\"root\"), UsingSelf(\"root\"), Punctuation), nil},\n+\t\t\tDefault(Push(\"statement\")),\n+\t\t},\n+\t\t\"classname\": {\n+\t\t\t{`(\\[\\[.+\\]\\])(\\s*)`, ByGroups(NameAttribute, Text), nil},\n+\t\t\t{`[a-zA-Z_]\\w*`, NameClass, Pop(1)},\n+\t\t\t{`\\s*(?=[>{])`, Text, Pop(1)},\n+\t\t},\n+\t\t\"whitespace\": {\n+\t\t\t{`^#if\\s+0`, CommentPreproc, Push(\"if0\")},\n+\t\t\t{`^#`, CommentPreproc, Push(\"macro\")},\n+\t\t\t{`^(\\s*(?:/[*].*?[*]/\\s*)?)(#if\\s+0)`, ByGroups(UsingSelf(\"root\"), CommentPreproc), Push(\"if0\")},\n+\t\t\t{`^(\\s*(?:/[*].*?[*]/\\s*)?)(#)`, ByGroups(UsingSelf(\"root\"), CommentPreproc), Push(\"macro\")},\n+\t\t\t{`\\n`, Text, nil},\n+\t\t\t{`\\s+`, Text, nil},\n+\t\t\t{`\\\\\\n`, Text, nil},\n+\t\t\t{`//(\\n|[\\w\\W]*?[^\\\\]\\n)`, CommentSingle, nil},\n+\t\t\t{`/(\\\\\\n)?[*][\\w\\W]*?[*](\\\\\\n)?/`, CommentMultiline, nil},\n+\t\t\t{`/(\\\\\\n)?[*][\\w\\W]*`, CommentMultiline, nil},\n+\t\t},\n+\t\t\"statement\": {\n+\t\t\tInclude(\"whitespace\"),\n+\t\t\tInclude(\"statements\"),\n+\t\t\t{`[{]`, Punctuation, Push(\"root\")},\n+\t\t\t{`[;}]`, Punctuation, Pop(1)},\n+\t\t},\n+\t\t\"function\": {\n+\t\t\tInclude(\"whitespace\"),\n+\t\t\tInclude(\"statements\"),\n+\t\t\t{`;`, Punctuation, nil},\n+\t\t\t{`\\{`, Punctuation, Push()},\n+\t\t\t{`\\}`, Punctuation, Pop(1)},\n+\t\t},\n+\t\t\"macro\": {\n+\t\t\t{`(include)(\\s*(?:/[*].*?[*]/\\s*)?)([^\\n]+)`, ByGroups(CommentPreproc, Text, CommentPreprocFile), nil},\n+\t\t\t{`[^/\\n]+`, CommentPreproc, nil},\n+\t\t\t{`/[*](.|\\n)*?[*]/`, CommentMultiline, nil},\n+\t\t\t{`//.*?\\n`, CommentSingle, Pop(1)},\n+\t\t\t{`/`, CommentPreproc, nil},\n+\t\t\t{`(?<=\\\\)\\n`, CommentPreproc, nil},\n+\t\t\t{`\\n`, CommentPreproc, Pop(1)},\n+\t\t},\n+\t\t\"if0\": {\n+\t\t\t{`^\\s*#if.*?(?<!\\\\)\\n`, CommentPreproc, Push()},\n+\t\t\t{`^\\s*#el(?:se|if).*\\n`, CommentPreproc, Pop(1)},\n+\t\t\t{`^\\s*#endif.*?(?<!\\\\)\\n`, CommentPreproc, Pop(1)},\n+\t\t\t{`.*?\\n`, Comment, nil},\n+\t\t},\n+\t}\n+}"
    },
    {
      "sha": "63d59ed033e892e3d9b530f62f197f1367e37e50",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/minizinc.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/minizinc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/minizinc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/m/minizinc.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // MiniZinc lexer.\n-var MZN = internal.Register(MustNewLexer(\n+var MZN = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"MiniZinc\",\n \t\tAliases:   []string{\"minizinc\", \"MZN\", \"mzn\"},\n \t\tFilenames: []string{\"*.mzn\", \"*.dzn\", \"*.fzn\"},\n \t\tMimeTypes: []string{\"text/minizinc\"},\n \t},\n-\tRules{\n+\tmznRules,\n+))\n+\n+func mznRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\n`, Text, nil},\n \t\t\t{`\\s+`, Text, nil},\n@@ -37,5 +41,5 @@ var MZN = internal.Register(MustNewLexer(\n \t\t\t{`\\b([^\\W\\d]\\w*)\\b(\\()`, ByGroups(NameFunction, Punctuation), nil},\n \t\t\t{`[^\\W\\d]\\w*`, NameOther, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "112a1c3a61bdfbae014c4661f5563d92726eec8a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/mlir.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/mlir.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/mlir.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/m/mlir.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // MLIR lexer.\n-var Mlir = internal.Register(MustNewLexer(\n+var Mlir = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"MLIR\",\n \t\tAliases:   []string{\"mlir\"},\n \t\tFilenames: []string{\"*.mlir\"},\n \t\tMimeTypes: []string{\"text/x-mlir\"},\n \t},\n-\tRules{\n+\tmlirRules,\n+))\n+\n+func mlirRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"whitespace\"),\n \t\t\t{`c?\"[^\"]*?\"`, LiteralString, nil},\n@@ -39,5 +43,5 @@ var Mlir = internal.Register(MustNewLexer(\n \t\t\t{`bf16|f16|f32|f64|index`, Keyword, nil},\n \t\t\t{`i[1-9]\\d*`, Keyword, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "6ab05c9ed3d204c8dba5d0e047fe3d2581fba853",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/modula2.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/modula2.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/modula2.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/m/modula2.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Modula-2 lexer.\n-var Modula2 = internal.Register(MustNewLexer(\n+var Modula2 = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Modula-2\",\n \t\tAliases:   []string{\"modula2\", \"m2\"},\n \t\tFilenames: []string{\"*.def\", \"*.mod\"},\n \t\tMimeTypes: []string{\"text/x-modula2\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\tmodula2Rules,\n+))\n+\n+func modula2Rules() Rules {\n+\treturn Rules{\n \t\t\"whitespace\": {\n \t\t\t{`\\n+`, Text, nil},\n \t\t\t{`\\s+`, Text, nil},\n@@ -111,5 +115,5 @@ var Modula2 = internal.Register(MustNewLexer(\n \t\t\tInclude(\"unigraph_punctuation\"),\n \t\t\tInclude(\"unigraph_operators\"),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "8ad81cc0866169af2134ef8c400fe749852b81e6",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/monkeyc.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/monkeyc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/monkeyc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/m/monkeyc.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -5,14 +5,18 @@ import (\n \t\"github.com/alecthomas/chroma/lexers/internal\"\n )\n \n-var MonkeyC = internal.Register(MustNewLexer(\n+var MonkeyC = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"MonkeyC\",\n \t\tAliases:   []string{\"monkeyc\"},\n \t\tFilenames: []string{\"*.mc\"},\n \t\tMimeTypes: []string{\"text/x-monkeyc\"},\n \t},\n-\tRules{\n+\tmonkeyCRules,\n+))\n+\n+func monkeyCRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[^\\S\\n]+`, Text, nil},\n \t\t\t{`\\n`, Text, nil},\n@@ -58,5 +62,5 @@ var MonkeyC = internal.Register(MustNewLexer(\n \t\t\t{`[a-zA-Z_][\\w_\\.]*`, NameNamespace, nil},\n \t\t\tDefault(Pop(1)),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "0ba0ba97c315ba13458494d64aaee6a1608d8e1a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/mwscript.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/mwscript.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/mwscript.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/m/mwscript.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // MorrowindScript lexer.\n-var MorrowindScript = internal.Register(MustNewLexer(\n+var MorrowindScript = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"MorrowindScript\",\n \t\tAliases:   []string{\"morrowind\", \"mwscript\"},\n \t\tFilenames: []string{},\n \t\tMimeTypes: []string{},\n \t},\n-\tRules{\n+\tmorrowindScriptRules,\n+))\n+\n+func morrowindScriptRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`;.*$`, Comment, nil},\n@@ -49,5 +53,5 @@ var MorrowindScript = internal.Register(MustNewLexer(\n \t\t\t{`[#=,./%+\\-?]`, Operator, nil},\n \t\t\t{`(==|<=|<|>=|>|!=)`, Operator, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "eac082cff6ba8038847271f34c9c11171bc93006",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/myghty.go",
      "status": "modified",
      "additions": 13,
      "deletions": 9,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/myghty.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/myghty.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/m/myghty.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -7,24 +7,28 @@ import (\n )\n \n // Myghty lexer.\n-var Myghty = internal.Register(MustNewLexer(\n+var Myghty = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Myghty\",\n \t\tAliases:   []string{\"myghty\"},\n \t\tFilenames: []string{\"*.myt\", \"autodelegate\"},\n \t\tMimeTypes: []string{\"application/x-myghty\"},\n \t},\n-\tRules{\n+\tmyghtyRules,\n+))\n+\n+func myghtyRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`(<%(?:def|method))(\\s*)(.*?)(>)(.*?)(</%\\2\\s*>)(?s)`, ByGroups(NameTag, Text, NameFunction, NameTag, UsingSelf(\"root\"), NameTag), nil},\n-\t\t\t{`(<%\\w+)(.*?)(>)(.*?)(</%\\2\\s*>)(?s)`, ByGroups(NameTag, NameFunction, NameTag, Using(Python), NameTag), nil},\n-\t\t\t{`(<&[^|])(.*?)(,.*?)?(&>)`, ByGroups(NameTag, NameFunction, Using(Python), NameTag), nil},\n-\t\t\t{`(<&\\|)(.*?)(,.*?)?(&>)(?s)`, ByGroups(NameTag, NameFunction, Using(Python), NameTag), nil},\n+\t\t\t{`(<%\\w+)(.*?)(>)(.*?)(</%\\2\\s*>)(?s)`, ByGroups(NameTag, NameFunction, NameTag, Using(Python2), NameTag), nil},\n+\t\t\t{`(<&[^|])(.*?)(,.*?)?(&>)`, ByGroups(NameTag, NameFunction, Using(Python2), NameTag), nil},\n+\t\t\t{`(<&\\|)(.*?)(,.*?)?(&>)(?s)`, ByGroups(NameTag, NameFunction, Using(Python2), NameTag), nil},\n \t\t\t{`</&>`, NameTag, nil},\n-\t\t\t{`(<%!?)(.*?)(%>)(?s)`, ByGroups(NameTag, Using(Python), NameTag), nil},\n+\t\t\t{`(<%!?)(.*?)(%>)(?s)`, ByGroups(NameTag, Using(Python2), NameTag), nil},\n \t\t\t{`(?<=^)#[^\\n]*(\\n|\\Z)`, Comment, nil},\n-\t\t\t{`(?<=^)(%)([^\\n]*)(\\n|\\Z)`, ByGroups(NameTag, Using(Python), Other), nil},\n+\t\t\t{`(?<=^)(%)([^\\n]*)(\\n|\\Z)`, ByGroups(NameTag, Using(Python2), Other), nil},\n \t\t\t{`(?sx)\n                  (.+?)               # anything, followed by:\n                  (?:\n@@ -36,5 +40,5 @@ var Myghty = internal.Register(MustNewLexer(\n                   \\Z                 # end of string\n                  )`, ByGroups(Other, Operator), nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "2738628bf28d12e026293edb3bdd81043de5a635",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/mysql.go",
      "status": "modified",
      "additions": 36,
      "deletions": 7,
      "changes": 43,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/mysql.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/m/mysql.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/m/mysql.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -1,12 +1,19 @@\n package m\n \n import (\n+\t\"regexp\"\n+\n \t. \"github.com/alecthomas/chroma\" // nolint\n \t\"github.com/alecthomas/chroma/lexers/internal\"\n )\n \n+var (\n+\tmysqlAnalyserNameBetweenBacktickRe = regexp.MustCompile(\"`[a-zA-Z_]\\\\w*`\")\n+\tmysqlAnalyserNameBetweenBracketRe  = regexp.MustCompile(`\\[[a-zA-Z_]\\w*\\]`)\n+)\n+\n // MySQL lexer.\n-var MySQL = internal.Register(MustNewLexer(\n+var MySQL = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"MySQL\",\n \t\tAliases:         []string{\"mysql\"},\n@@ -15,21 +22,43 @@ var MySQL = internal.Register(MustNewLexer(\n \t\tNotMultiline:    true,\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tmySQLRules,\n+).SetAnalyser(func(text string) float32 {\n+\tnameBetweenBacktickCount := len(mysqlAnalyserNameBetweenBacktickRe.FindAllString(text, -1))\n+\tnameBetweenBracketCount := len(mysqlAnalyserNameBetweenBracketRe.FindAllString(text, -1))\n+\n+\tvar result float32\n+\n+\t// Same logic as above in the TSQL analysis.\n+\tdialectNameCount := nameBetweenBacktickCount + nameBetweenBracketCount\n+\tif dialectNameCount >= 1 && nameBetweenBacktickCount >= (2*nameBetweenBracketCount) {\n+\t\t// Found at least twice as many `name` as [name].\n+\t\tresult += 0.5\n+\t} else if nameBetweenBacktickCount > nameBetweenBracketCount {\n+\t\tresult += 0.2\n+\t} else if nameBetweenBacktickCount > 0 {\n+\t\tresult += 0.1\n+\t}\n+\n+\treturn result\n+}))\n+\n+func mySQLRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n+\t\t\t{`\\s+`, TextWhitespace, nil},\n \t\t\t{`(#|--\\s+).*\\n?`, CommentSingle, nil},\n \t\t\t{`/\\*`, CommentMultiline, Push(\"multiline-comments\")},\n \t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n \t\t\t{`[0-9]*\\.[0-9]+(e[+-][0-9]+)`, LiteralNumberFloat, nil},\n \t\t\t{`((?:_[a-z0-9]+)?)(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Push(\"string\")},\n \t\t\t{`((?:_[a-z0-9]+)?)(\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Push(\"double-string\")},\n \t\t\t{\"[+*/<>=~!@#%^&|`?-]\", Operator, nil},\n-\t\t\t{`\\b(tinyint|smallint|mediumint|int|integer|bigint|date|datetime|time|bit|bool|tinytext|mediumtext|longtext|text|tinyblob|mediumblob|longblob|blob|float|double|double\\s+precision|real|numeric|dec|decimal|timestamp|year|char|varchar|varbinary|varcharacter|enum|set)(\\b\\s*)(\\()?`, ByGroups(KeywordType, Text, Punctuation), nil},\n+\t\t\t{`\\b(tinyint|smallint|mediumint|int|integer|bigint|date|datetime|time|bit|bool|tinytext|mediumtext|longtext|text|tinyblob|mediumblob|longblob|blob|float|double|double\\s+precision|real|numeric|dec|decimal|timestamp|year|char|varchar|varbinary|varcharacter|enum|set)(\\b\\s*)(\\()?`, ByGroups(KeywordType, TextWhitespace, Punctuation), nil},\n \t\t\t{`\\b(add|all|alter|analyze|and|as|asc|asensitive|before|between|bigint|binary|blob|both|by|call|cascade|case|change|char|character|check|collate|column|condition|constraint|continue|convert|create|cross|current_date|current_time|current_timestamp|current_user|cursor|database|databases|day_hour|day_microsecond|day_minute|day_second|dec|decimal|declare|default|delayed|delete|desc|describe|deterministic|distinct|distinctrow|div|double|drop|dual|each|else|elseif|enclosed|escaped|exists|exit|explain|fetch|flush|float|float4|float8|for|force|foreign|from|fulltext|grant|group|having|high_priority|hour_microsecond|hour_minute|hour_second|identified|if|ignore|in|index|infile|inner|inout|insensitive|insert|int|int1|int2|int3|int4|int8|integer|interval|into|is|iterate|join|key|keys|kill|leading|leave|left|like|limit|lines|load|localtime|localtimestamp|lock|long|loop|low_priority|match|minute_microsecond|minute_second|mod|modifies|natural|no_write_to_binlog|not|numeric|on|optimize|option|optionally|or|order|out|outer|outfile|precision|primary|privileges|procedure|purge|raid0|read|reads|real|references|regexp|release|rename|repeat|replace|require|restrict|return|revoke|right|rlike|schema|schemas|second_microsecond|select|sensitive|separator|set|show|smallint|soname|spatial|specific|sql|sql_big_result|sql_calc_found_rows|sql_small_result|sqlexception|sqlstate|sqlwarning|ssl|starting|straight_join|table|terminated|then|to|trailing|trigger|undo|union|unique|unlock|unsigned|update|usage|use|user|using|utc_date|utc_time|utc_timestamp|values|varying|when|where|while|with|write|x509|xor|year_month|zerofill)\\b`, Keyword, nil},\n \t\t\t{`\\b(auto_increment|engine|charset|tables)\\b`, KeywordPseudo, nil},\n \t\t\t{`(true|false|null)`, NameConstant, nil},\n-\t\t\t{`([a-z_]\\w*)(\\s*)(\\()`, ByGroups(NameFunction, Text, Punctuation), nil},\n+\t\t\t{`([a-z_]\\w*)(\\s*)(\\()`, ByGroups(NameFunction, TextWhitespace, Punctuation), nil},\n \t\t\t{`[a-z_]\\w*`, Name, nil},\n \t\t\t{`@[a-z0-9]*[._]*[a-z0-9]*`, NameVariable, nil},\n \t\t\t{`[;:()\\[\\],.]`, Punctuation, nil},\n@@ -50,5 +79,5 @@ var MySQL = internal.Register(MustNewLexer(\n \t\t\t{`\"\"`, LiteralStringDouble, nil},\n \t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "de6734e8659ec6f350f0f3978cf7f3138be8eaf7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/n/nasm.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/n/nasm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/n/nasm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/n/nasm.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Nasm lexer.\n-var Nasm = internal.Register(MustNewLexer(\n+var Nasm = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"NASM\",\n \t\tAliases:         []string{\"nasm\"},\n \t\tFilenames:       []string{\"*.asm\", \"*.ASM\"},\n \t\tMimeTypes:       []string{\"text/x-nasm\"},\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tnasmRules,\n+))\n+\n+func nasmRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`^\\s*%`, CommentPreproc, Push(\"preproc\")},\n \t\t\tInclude(\"whitespace\"),\n@@ -55,5 +59,5 @@ var Nasm = internal.Register(MustNewLexer(\n \t\t\t{`seg|wrt|strict`, OperatorWord, nil},\n \t\t\t{`byte|[dq]?word`, KeywordType, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "c9d3ae032b3d986ba470b72d9ac1ad142240a861",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/n/newspeak.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/n/newspeak.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/n/newspeak.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/n/newspeak.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Newspeak lexer.\n-var Newspeak = internal.Register(MustNewLexer(\n+var Newspeak = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Newspeak\",\n \t\tAliases:   []string{\"newspeak\"},\n \t\tFilenames: []string{\"*.ns2\"},\n \t\tMimeTypes: []string{\"text/x-newspeak\"},\n \t},\n-\tRules{\n+\tnewspeakRules,\n+))\n+\n+func newspeakRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\b(Newsqueak2)\\b`, KeywordDeclaration, nil},\n \t\t\t{`'[^']*'`, LiteralString, nil},\n@@ -51,5 +55,5 @@ var Newspeak = internal.Register(MustNewLexer(\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`\"[^\"]*\"`, Comment, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "6d80523ec781e41a971a18701cf7115ab081ce37",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/n/nginx.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/n/nginx.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/n/nginx.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/n/nginx.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Nginx Configuration File lexer.\n-var Nginx = internal.Register(MustNewLexer(\n+var Nginx = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Nginx configuration file\",\n \t\tAliases:   []string{\"nginx\"},\n \t\tFilenames: []string{\"nginx.conf\"},\n \t\tMimeTypes: []string{\"text/x-nginx-conf\"},\n \t},\n-\tRules{\n+\tnginxRules,\n+))\n+\n+func nginxRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`(include)(\\s+)([^\\s;]+)`, ByGroups(Keyword, Text, Name), nil},\n \t\t\t{`[^\\s;#]+`, Keyword, Push(\"stmt\")},\n@@ -43,5 +47,5 @@ var Nginx = internal.Register(MustNewLexer(\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`[$;]`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "3f98086b45f02ce5c0d8a3c0f17f482058ea7593",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/n/nim.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/n/nim.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/n/nim.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/n/nim.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Nim lexer.\n-var Nim = internal.Register(MustNewLexer(\n+var Nim = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"Nim\",\n \t\tAliases:         []string{\"nim\", \"nimrod\"},\n \t\tFilenames:       []string{\"*.nim\", \"*.nimrod\"},\n \t\tMimeTypes:       []string{\"text/x-nim\"},\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tnimRules,\n+))\n+\n+func nimRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`#\\[[\\s\\S]*?\\]#`, CommentMultiline, nil},\n \t\t\t{`##.*$`, LiteralStringDoc, nil},\n@@ -89,5 +93,5 @@ var Nim = internal.Register(MustNewLexer(\n \t\t\t{`\\'i(8|16)`, LiteralNumberInteger, nil},\n \t\t\tDefault(Pop(1)),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "874560a565ffba4cf48ad4941cfd54ba1ecec81d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/n/nix.go",
      "status": "modified",
      "additions": 11,
      "deletions": 7,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/n/nix.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/n/nix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/n/nix.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -7,18 +7,22 @@ import (\n \t\"github.com/alecthomas/chroma/lexers/internal\"\n )\n \n-// nixb matches right boundary of a nix word. Use it instead of \\b.\n-const nixb = `(?![a-zA-Z0-9_'-])`\n-\n // Nix lexer.\n-var Nix = internal.Register(MustNewLexer(\n+var Nix = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Nix\",\n \t\tAliases:   []string{\"nixos\", \"nix\"},\n \t\tFilenames: []string{\"*.nix\"},\n \t\tMimeTypes: []string{\"text/x-nix\"},\n \t},\n-\tRules{\n+\tnixRules,\n+))\n+\n+func nixRules() Rules {\n+\t// nixb matches right boundary of a nix word. Use it instead of \\b.\n+\tconst nixb = `(?![a-zA-Z0-9_'-])`\n+\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"keywords\"),\n \t\t\tInclude(\"builtins\"),\n@@ -118,5 +122,5 @@ var Nix = internal.Register(MustNewLexer(\n \t\t\"space\": {\n \t\t\t{`[ \\t\\r\\n]+`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "0ae30296094384cdcbb0d02c19100009b33d0510",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/o/objectivec.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/o/objectivec.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/o/objectivec.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/o/objectivec.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Objective-C lexer.\n-var ObjectiveC = internal.Register(MustNewLexer(\n+var ObjectiveC = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Objective-C\",\n \t\tAliases:   []string{\"objective-c\", \"objectivec\", \"obj-c\", \"objc\"},\n \t\tFilenames: []string{\"*.m\", \"*.h\"},\n \t\tMimeTypes: []string{\"text/x-objective-c\"},\n \t},\n-\tRules{\n+\tobjectiveCRules,\n+))\n+\n+func objectiveCRules() Rules {\n+\treturn Rules{\n \t\t\"statements\": {\n \t\t\t{`@\"`, LiteralString, Push(\"string\")},\n \t\t\t{`@(YES|NO)`, LiteralNumber, nil},\n@@ -161,5 +165,5 @@ var ObjectiveC = internal.Register(MustNewLexer(\n \t\t\t{`^\\s*#endif.*?(?<!\\\\)\\n`, CommentPreproc, Pop(1)},\n \t\t\t{`.*?\\n`, Comment, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "07fcff99563bc76c522f1eafecb974cdffbf30a6",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/o/ocaml.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/o/ocaml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/o/ocaml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/o/ocaml.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Ocaml lexer.\n-var Ocaml = internal.Register(MustNewLexer(\n+var Ocaml = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"OCaml\",\n \t\tAliases:   []string{\"ocaml\"},\n \t\tFilenames: []string{\"*.ml\", \"*.mli\", \"*.mll\", \"*.mly\"},\n \t\tMimeTypes: []string{\"text/x-ocaml\"},\n \t},\n-\tRules{\n+\tocamlRules,\n+))\n+\n+func ocamlRules() Rules {\n+\treturn Rules{\n \t\t\"escape-sequence\": {\n \t\t\t{`\\\\[\\\\\"\\'ntbr]`, LiteralStringEscape, nil},\n \t\t\t{`\\\\[0-9]{3}`, LiteralStringEscape, nil},\n@@ -62,5 +66,5 @@ var Ocaml = internal.Register(MustNewLexer(\n \t\t\t{`[a-z_][\\w\\']*`, Name, Pop(1)},\n \t\t\tDefault(Pop(1)),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "99fe298c7aeaae279f38d0c0b07984e41217ba9c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/o/octave.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/o/octave.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/o/octave.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/o/octave.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Octave lexer.\n-var Octave = internal.Register(MustNewLexer(\n+var Octave = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Octave\",\n \t\tAliases:   []string{\"octave\"},\n \t\tFilenames: []string{\"*.m\"},\n \t\tMimeTypes: []string{\"text/octave\"},\n \t},\n-\tRules{\n+\toctaveRules,\n+))\n+\n+func octaveRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[%#].*$`, Comment, nil},\n \t\t\t{`^\\s*function`, Keyword, Push(\"deffunc\")},\n@@ -42,5 +46,5 @@ var Octave = internal.Register(MustNewLexer(\n \t\t\t{`(\\s*)(?:(.+)(\\s*)(=)(\\s*))?(.+)(\\()(.*)(\\))(\\s*)`, ByGroups(TextWhitespace, Text, TextWhitespace, Punctuation, TextWhitespace, NameFunction, Punctuation, Text, Punctuation, TextWhitespace), Pop(1)},\n \t\t\t{`(\\s*)([a-zA-Z_]\\w*)`, ByGroups(Text, NameFunction), Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "d18b9caab4c9bec9cf428a3a503fd87c3c540e2f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/o/openscad.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/o/openscad.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/o/openscad.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/o/openscad.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -5,14 +5,18 @@ import (\n \t\"github.com/alecthomas/chroma/lexers/internal\"\n )\n \n-var OpenSCAD = internal.Register(MustNewLexer(\n+var OpenSCAD = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"OpenSCAD\",\n \t\tAliases:   []string{\"openscad\"},\n \t\tFilenames: []string{\"*.scad\"},\n \t\tMimeTypes: []string{\"text/x-scad\"},\n \t},\n-\tRules{\n+\topenSCADRules,\n+))\n+\n+func openSCADRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[^\\S\\n]+`, Text, nil},\n \t\t\t{`\\n`, Text, nil},\n@@ -39,5 +43,5 @@ var OpenSCAD = internal.Register(MustNewLexer(\n \t\t\t{\"(<)([^>]*)(>)\", ByGroups(Punctuation, CommentPreprocFile, Punctuation), nil},\n \t\t\tDefault(Pop(1)),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "00f6df44502a2ea6c61ce336c06283ff3cbf4924",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/o/org.go",
      "status": "modified",
      "additions": 12,
      "deletions": 6,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/o/org.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/o/org.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/o/org.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Org mode lexer.\n-var Org = internal.Register(MustNewLexer(\n+var Org = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Org Mode\",\n \t\tAliases:   []string{\"org\", \"orgmode\"},\n \t\tFilenames: []string{\"*.org\"},\n \t\tMimeTypes: []string{\"text/org\"}, // https://lists.gnu.org/r/emacs-orgmode/2017-09/msg00087.html\n \t},\n-\tRules{\n+\torgRules,\n+))\n+\n+func orgRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`^# .*$`, Comment, nil},\n \t\t\t// Headings\n@@ -45,7 +49,8 @@ var Org = internal.Register(MustNewLexer(\n \t\t\t// - Comment Blocks\n \t\t\t{`(?i)^( *#\\+begin_comment *\\n)([\\w\\W]*?)(^ *#\\+end_comment *$)`, ByGroups(Comment, Comment, Comment), nil},\n \t\t\t// - Src Blocks\n-\t\t\t{`(?i)^( *#\\+begin_src )([^ \\n]+)(.*?\\n)([\\w\\W]*?)(^ *#\\+end_src *$)`,\n+\t\t\t{\n+\t\t\t\t`(?i)^( *#\\+begin_src )([^ \\n]+)(.*?\\n)([\\w\\W]*?)(^ *#\\+end_src *$)`,\n \t\t\t\tUsingByGroup(\n \t\t\t\t\tinternal.Get,\n \t\t\t\t\t2, 4,\n@@ -54,7 +59,8 @@ var Org = internal.Register(MustNewLexer(\n \t\t\t\tnil,\n \t\t\t},\n \t\t\t// - Export Blocks\n-\t\t\t{`(?i)^( *#\\+begin_export )(\\w+)( *\\n)([\\w\\W]*?)(^ *#\\+end_export *$)`,\n+\t\t\t{\n+\t\t\t\t`(?i)^( *#\\+begin_export )(\\w+)( *\\n)([\\w\\W]*?)(^ *#\\+end_export *$)`,\n \t\t\t\tUsingByGroup(\n \t\t\t\t\tinternal.Get,\n \t\t\t\t\t2, 4,\n@@ -98,5 +104,5 @@ var Org = internal.Register(MustNewLexer(\n \t\t\t// Any other text\n \t\t\t{`.`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "00c6255af6f50baa96b2d3e04c5b48b84d0a3b73",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/pacman.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/pacman.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/pacman.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/p/pacman.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Pacmanconf lexer.\n-var Pacmanconf = internal.Register(MustNewLexer(\n+var Pacmanconf = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"PacmanConf\",\n \t\tAliases:   []string{\"pacmanconf\"},\n \t\tFilenames: []string{\"pacman.conf\"},\n \t\tMimeTypes: []string{},\n \t},\n-\tRules{\n+\tpacmanconfRules,\n+))\n+\n+func pacmanconfRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`#.*$`, CommentSingle, nil},\n \t\t\t{`^\\s*\\[.*?\\]\\s*$`, Keyword, nil},\n@@ -22,5 +26,5 @@ var Pacmanconf = internal.Register(MustNewLexer(\n \t\t\t{Words(``, `\\b`, `$repo`, `$arch`, `%o`, `%u`), NameVariable, nil},\n \t\t\t{`.`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "6aa338ad116b7ef8e214fa06563d7fe06159c922",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/perl.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/perl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/perl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/p/perl.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Perl lexer.\n-var Perl = internal.Register(MustNewLexer(\n+var Perl = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Perl\",\n \t\tAliases:   []string{\"perl\", \"pl\"},\n \t\tFilenames: []string{\"*.pl\", \"*.pm\", \"*.t\"},\n \t\tMimeTypes: []string{\"text/x-perl\", \"application/x-perl\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\tperlRules,\n+))\n+\n+func perlRules() Rules {\n+\treturn Rules{\n \t\t\"balanced-regex\": {\n \t\t\t{`/(\\\\\\\\|\\\\[^\\\\]|[^\\\\/])*/[egimosx]*`, LiteralStringRegex, Pop(1)},\n \t\t\t{`!(\\\\\\\\|\\\\[^\\\\]|[^\\\\!])*![egimosx]*`, LiteralStringRegex, Pop(1)},\n@@ -134,5 +138,5 @@ var Perl = internal.Register(MustNewLexer(\n \t\t\"end-part\": {\n \t\t\t{`.+`, CommentPreproc, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "f2852c18ae9ecd2b6bf719026d29be7be2c02e43",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/pig.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/pig.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/pig.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/p/pig.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Pig lexer.\n-var Pig = internal.Register(MustNewLexer(\n+var Pig = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"Pig\",\n \t\tAliases:         []string{\"pig\"},\n \t\tFilenames:       []string{\"*.pig\"},\n \t\tMimeTypes:       []string{\"text/x-pig\"},\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tpigRules,\n+))\n+\n+func pigRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`--.*`, Comment, nil},\n@@ -53,5 +57,5 @@ var Pig = internal.Register(MustNewLexer(\n \t\t\t{`(eq|gt|lt|gte|lte|neq|matches)\\b`, Operator, nil},\n \t\t\t{`(==|<=|<|>=|>|!=)`, Operator, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "9e024107f70fc9213733bc2966d4776a976f0408",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/pkgconfig.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/pkgconfig.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/pkgconfig.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/p/pkgconfig.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Pkgconfig lexer.\n-var Pkgconfig = internal.Register(MustNewLexer(\n+var Pkgconfig = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"PkgConfig\",\n \t\tAliases:   []string{\"pkgconfig\"},\n \t\tFilenames: []string{\"*.pc\"},\n \t\tMimeTypes: []string{},\n \t},\n-\tRules{\n+\tpkgconfigRules,\n+))\n+\n+func pkgconfigRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`#.*$`, CommentSingle, nil},\n \t\t\t{`^(\\w+)(=)`, ByGroups(NameAttribute, Operator), nil},\n@@ -37,5 +41,5 @@ var Pkgconfig = internal.Register(MustNewLexer(\n \t\t\t{`[^${}#\\n]+`, Text, nil},\n \t\t\t{`.`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "058c02a89fec62889f3045cea7b28395282c3dce",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/plaintext.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/plaintext.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/plaintext.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/p/plaintext.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -5,7 +5,7 @@ import (\n \t\"github.com/alecthomas/chroma/lexers/internal\"\n )\n \n-var Plaintext = internal.Register(MustNewLexer(\n+var Plaintext = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"plaintext\",\n \t\tAliases:   []string{\"text\", \"plain\", \"no-highlight\"},"
    },
    {
      "sha": "324d3feb2aee5faa82b92db0b2d26a8a7d6141f9",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/plsql.go",
      "status": "modified",
      "additions": 9,
      "deletions": 5,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/plsql.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/plsql.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/p/plsql.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,7 +6,7 @@ import (\n )\n \n // Pl/Pgsql lexer.\n-var PLpgSQL = internal.Register(MustNewLexer(\n+var PLpgSQL = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"PL/pgSQL\",\n \t\tAliases:         []string{\"plpgsql\"},\n@@ -15,13 +15,17 @@ var PLpgSQL = internal.Register(MustNewLexer(\n \t\tNotMultiline:    true,\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tplpgSQLRules,\n+))\n+\n+func plpgSQLRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\%[a-z]\\w*\\b`, NameBuiltin, nil},\n \t\t\t{`:=`, Operator, nil},\n \t\t\t{`\\<\\<[a-z]\\w*\\>\\>`, NameLabel, nil},\n \t\t\t{`\\#[a-z]\\w*\\b`, KeywordPseudo, nil},\n-\t\t\t{`\\s+`, Text, nil},\n+\t\t\t{`\\s+`, TextWhitespace, nil},\n \t\t\t{`--.*\\n?`, CommentSingle, nil},\n \t\t\t{`/\\*`, CommentMultiline, Push(\"multiline-comments\")},\n \t\t\t{`(bigint|bigserial|bit|bit\\s+varying|bool|boolean|box|bytea|char|character|character\\s+varying|cidr|circle|date|decimal|double\\s+precision|float4|float8|inet|int|int2|int4|int8|integer|interval|json|jsonb|line|lseg|macaddr|money|numeric|path|pg_lsn|point|polygon|real|serial|serial2|serial4|serial8|smallint|smallserial|text|time|timestamp|timestamptz|timetz|tsquery|tsvector|txid_snapshot|uuid|varbit|varchar|with\\s+time\\s+zone|without\\s+time\\s+zone|xml|anyarray|anyelement|anyenum|anynonarray|anyrange|cstring|fdw_handler|internal|language_handler|opaque|record|void)\\b`, NameBuiltin, nil},\n@@ -54,5 +58,5 @@ var PLpgSQL = internal.Register(MustNewLexer(\n \t\t\t{`\"\"`, LiteralStringName, nil},\n \t\t\t{`\"`, LiteralStringName, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "41d568289a342fc8cce13e24c9c8b01dc0dea186",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/pony.go",
      "status": "added",
      "additions": 63,
      "deletions": 0,
      "changes": 63,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/pony.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/pony.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/p/pony.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,63 @@\n+package p\n+\n+import (\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+)\n+\n+// Pony lexer.\n+var Pony = internal.Register(MustNewLazyLexer(\n+\t&Config{\n+\t\tName:      \"Pony\",\n+\t\tAliases:   []string{\"pony\"},\n+\t\tFilenames: []string{\"*.pony\"},\n+\t\tMimeTypes: []string{},\n+\t},\n+\tponyRules,\n+))\n+\n+func ponyRules() Rules {\n+\treturn Rules{\n+\t\t\"root\": {\n+\t\t\t{`\\n`, Text, nil},\n+\t\t\t{`[^\\S\\n]+`, Text, nil},\n+\t\t\t{`//.*\\n`, CommentSingle, nil},\n+\t\t\t{`/\\*`, CommentMultiline, Push(\"nested_comment\")},\n+\t\t\t{`\"\"\"(?:.|\\n)*?\"\"\"`, LiteralStringDoc, nil},\n+\t\t\t{`\"`, LiteralString, Push(\"string\")},\n+\t\t\t{`\\'.*\\'`, LiteralStringChar, nil},\n+\t\t\t{`=>|[]{}:().~;,|&!^?[]`, Punctuation, nil},\n+\t\t\t{Words(``, `\\b`, `addressof`, `and`, `as`, `consume`, `digestof`, `is`, `isnt`, `not`, `or`), OperatorWord, nil},\n+\t\t\t{`!=|==|<<|>>|[-+/*%=<>]`, Operator, nil},\n+\t\t\t{Words(``, `\\b`, `box`, `break`, `compile_error`, `compile_intrinsic`, `continue`, `do`, `else`, `elseif`, `embed`, `end`, `error`, `for`, `if`, `ifdef`, `in`, `iso`, `lambda`, `let`, `match`, `object`, `recover`, `ref`, `repeat`, `return`, `tag`, `then`, `this`, `trn`, `try`, `until`, `use`, `var`, `val`, `where`, `while`, `with`, `#any`, `#read`, `#send`, `#share`), Keyword, nil},\n+\t\t\t{`(actor|class|struct|primitive|interface|trait|type)((?:\\s)+)`, ByGroups(Keyword, Text), Push(\"typename\")},\n+\t\t\t{`(new|fun|be)((?:\\s)+)`, ByGroups(Keyword, Text), Push(\"methodname\")},\n+\t\t\t{Words(``, `\\b`, `U8`, `U16`, `U32`, `U64`, `ULong`, `USize`, `U128`, `Unsigned`, `Stringable`, `String`, `StringBytes`, `StringRunes`, `InputNotify`, `InputStream`, `Stdin`, `ByteSeq`, `ByteSeqIter`, `OutStream`, `StdStream`, `SourceLoc`, `I8`, `I16`, `I32`, `I64`, `ILong`, `ISize`, `I128`, `Signed`, `Seq`, `RuntimeOptions`, `Real`, `Integer`, `SignedInteger`, `UnsignedInteger`, `FloatingPoint`, `Number`, `Int`, `ReadSeq`, `ReadElement`, `Pointer`, `Platform`, `NullablePointer`, `None`, `Iterator`, `F32`, `F64`, `Float`, `Env`, `DoNotOptimise`, `DisposableActor`, `Less`, `Equal`, `Greater`, `Compare`, `HasEq`, `Equatable`, `Comparable`, `Bool`, `AsioEventID`, `AsioEventNotify`, `AsioEvent`, `Array`, `ArrayKeys`, `ArrayValues`, `ArrayPairs`, `Any`, `AmbientAuth`), KeywordType, nil},\n+\t\t\t{`_?[A-Z]\\w*`, NameClass, nil},\n+\t\t\t{`string\\(\\)`, NameOther, nil},\n+\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+)[eE][+-]?\\d+`, LiteralNumberFloat, nil},\n+\t\t\t{`0x[0-9a-fA-F]+`, LiteralNumberHex, nil},\n+\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n+\t\t\t{`(true|false)\\b`, Keyword, nil},\n+\t\t\t{`_\\d*`, Name, nil},\n+\t\t\t{`_?[a-z][\\w\\'_]*`, Name, nil},\n+\t\t},\n+\t\t\"typename\": {\n+\t\t\t{`(iso|trn|ref|val|box|tag)?((?:\\s)*)(_?[A-Z]\\w*)`, ByGroups(Keyword, Text, NameClass), Pop(1)},\n+\t\t},\n+\t\t\"methodname\": {\n+\t\t\t{`(iso|trn|ref|val|box|tag)?((?:\\s)*)(_?[a-z]\\w*)`, ByGroups(Keyword, Text, NameFunction), Pop(1)},\n+\t\t},\n+\t\t\"nested_comment\": {\n+\t\t\t{`[^*/]+`, CommentMultiline, nil},\n+\t\t\t{`/\\*`, CommentMultiline, Push()},\n+\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n+\t\t\t{`[*/]`, CommentMultiline, nil},\n+\t\t},\n+\t\t\"string\": {\n+\t\t\t{`\"`, LiteralString, Pop(1)},\n+\t\t\t{`\\\\\"`, LiteralString, nil},\n+\t\t\t{`[^\\\\\"]+`, LiteralString, nil},\n+\t\t},\n+\t}\n+}"
    },
    {
      "sha": "8977e2cfd4017196da0957839c52b1ca7c578098",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/postgres.go",
      "status": "modified",
      "additions": 12,
      "deletions": 6,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/postgres.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/postgres.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/p/postgres.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,7 +6,7 @@ import (\n )\n \n // Postgresql Sql Dialect lexer.\n-var PostgreSQL = internal.Register(MustNewLexer(\n+var PostgreSQL = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"PostgreSQL SQL dialect\",\n \t\tAliases:         []string{\"postgresql\", \"postgres\"},\n@@ -15,13 +15,18 @@ var PostgreSQL = internal.Register(MustNewLexer(\n \t\tNotMultiline:    true,\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tpostgreSQLRules,\n+))\n+\n+func postgreSQLRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`--.*\\n?`, CommentSingle, nil},\n \t\t\t{`/\\*`, CommentMultiline, Push(\"multiline-comments\")},\n \t\t\t{`(bigint|bigserial|bit|bit\\s+varying|bool|boolean|box|bytea|char|character|character\\s+varying|cidr|circle|date|decimal|double\\s+precision|float4|float8|inet|int|int2|int4|int8|integer|interval|json|jsonb|line|lseg|macaddr|money|numeric|path|pg_lsn|point|polygon|real|serial|serial2|serial4|serial8|smallint|smallserial|text|time|timestamp|timestamptz|timetz|tsquery|tsvector|txid_snapshot|uuid|varbit|varchar|with\\s+time\\s+zone|without\\s+time\\s+zone|xml|anyarray|anyelement|anyenum|anynonarray|anyrange|cstring|fdw_handler|internal|language_handler|opaque|record|void)\\b`, NameBuiltin, nil},\n-\t\t\t{`(?s)(DO)(\\s+)(?:(LANGUAGE)?(\\s+)('?)(\\w+)?('?)(\\s+))?(\\$)([^$]*)(\\$)(.*?)(\\$)(\\10)(\\$)`,\n+\t\t\t{\n+\t\t\t\t`(?s)(DO)(\\s+)(?:(LANGUAGE)?(\\s+)('?)(\\w+)?('?)(\\s+))?(\\$)([^$]*)(\\$)(.*?)(\\$)(\\10)(\\$)`,\n \t\t\t\tUsingByGroup(\n \t\t\t\t\tinternal.Get,\n \t\t\t\t\t6, 12,\n@@ -41,7 +46,8 @@ var PostgreSQL = internal.Register(MustNewLexer(\n \t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n \t\t\t{`((?:E|U&)?)(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Push(\"string\")},\n \t\t\t{`((?:U&)?)(\")`, ByGroups(LiteralStringAffix, LiteralStringName), Push(\"quoted-ident\")},\n-\t\t\t{`(?s)(\\$)([^$]*)(\\$)(.*?)(\\$)(\\2)(\\$)(\\s+)(LANGUAGE)?(\\s+)('?)(\\w+)?('?)`,\n+\t\t\t{\n+\t\t\t\t`(?s)(\\$)([^$]*)(\\$)(.*?)(\\$)(\\2)(\\$)(\\s+)(LANGUAGE)?(\\s+)('?)(\\w+)?('?)`,\n \t\t\t\tUsingByGroup(internal.Get,\n \t\t\t\t\t12, 4,\n \t\t\t\t\tStringHeredoc, StringHeredoc, StringHeredoc, // $tag$\n@@ -73,5 +79,5 @@ var PostgreSQL = internal.Register(MustNewLexer(\n \t\t\t{`\"\"`, LiteralStringName, nil},\n \t\t\t{`\"`, LiteralStringName, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "0b51ba5ef3944a180f29e2ba3c95c5a9c6c2d743",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/postscript.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/postscript.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/postscript.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/p/postscript.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Postscript lexer.\n-var Postscript = internal.Register(MustNewLexer(\n+var Postscript = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"PostScript\",\n \t\tAliases:   []string{\"postscript\", \"postscr\"},\n \t\tFilenames: []string{\"*.ps\", \"*.eps\"},\n \t\tMimeTypes: []string{\"application/postscript\"},\n \t},\n-\tRules{\n+\tpostscriptRules,\n+))\n+\n+func postscriptRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`^%!.+\\n`, CommentPreproc, nil},\n \t\t\t{`%%.*\\n`, CommentSpecial, nil},\n@@ -42,5 +46,5 @@ var Postscript = internal.Register(MustNewLexer(\n \t\t\t{`[0-8]{3}|n|r|t|b|f|\\\\|\\(|\\)`, LiteralStringEscape, Pop(1)},\n \t\t\tDefault(Pop(1)),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "2d870f1063a3bec38b68387f58b76ed7fef0bea7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/povray.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/povray.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/povray.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/p/povray.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Povray lexer.\n-var Povray = internal.Register(MustNewLexer(\n+var Povray = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"POVRay\",\n \t\tAliases:   []string{\"pov\"},\n \t\tFilenames: []string{\"*.pov\", \"*.inc\"},\n \t\tMimeTypes: []string{\"text/x-povray\"},\n \t},\n-\tRules{\n+\tpovrayRules,\n+))\n+\n+func povrayRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`/\\*[\\w\\W]*?\\*/`, CommentMultiline, nil},\n \t\t\t{`//.*\\n`, CommentSingle, nil},\n@@ -31,5 +35,5 @@ var Povray = internal.Register(MustNewLexer(\n \t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n \t\t\t{`\\s+`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "0302420ea94a0aa5f4a536746464babfb913c213",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/powerquery.go",
      "status": "added",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/powerquery.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/powerquery.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/p/powerquery.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,38 @@\n+package p\n+\n+import (\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+)\n+\n+// PowerQuery lexer.\n+var PowerQuery = internal.Register(MustNewLazyLexer(\n+\t&Config{\n+\t\tName:            \"PowerQuery\",\n+\t\tAliases:         []string{\"powerquery\", \"pq\"},\n+\t\tFilenames:       []string{\"*.pq\"},\n+\t\tMimeTypes:       []string{\"text/x-powerquery\"},\n+\t\tDotAll:          true,\n+\t\tCaseInsensitive: true,\n+\t},\n+\tpowerqueryRules,\n+))\n+\n+func powerqueryRules() Rules {\n+\treturn Rules{\n+\t\t\"root\": {\n+\t\t\t{`\\s+`, Text, nil},\n+\t\t\t{`//.*?\\n`, CommentSingle, nil},\n+\t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n+\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n+\t\t\t{`(and|as|each|else|error|false|if|in|is|let|meta|not|null|or|otherwise|section|shared|then|true|try|type)\\b`, Keyword, nil},\n+\t\t\t{`(#binary|#date|#datetime|#datetimezone|#duration|#infinity|#nan|#sections|#shared|#table|#time)\\b`, KeywordType, nil},\n+\t\t\t{`(([a-zA-Z]|_)[\\w|._]*|#\"[^\"]+\")`, Name, nil},\n+\t\t\t{`0[xX][0-9a-fA-F][0-9a-fA-F_]*[lL]?`, LiteralNumberHex, nil},\n+\t\t\t{`([0-9]+\\.[0-9]+|\\.[0-9]+)([eE][0-9]+)?`, LiteralNumberFloat, nil},\n+\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n+\t\t\t{`[\\(\\)\\[\\]\\{\\}]`, Punctuation, nil},\n+\t\t\t{`\\.\\.|\\.\\.\\.|=>|<=|>=|<>|[@!?,;=<>\\+\\-\\*\\/&]`, Operator, nil},\n+\t\t},\n+\t}\n+}"
    },
    {
      "sha": "9b7b56ee020850c01b64ae9642994c80d89b0553",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/powershell.go",
      "status": "modified",
      "additions": 11,
      "deletions": 7,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/powershell.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/powershell.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/p/powershell.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,16 +6,20 @@ import (\n )\n \n // Powershell lexer.\n-var Powershell = internal.Register(MustNewLexer(\n+var Powershell = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"PowerShell\",\n-\t\tAliases:         []string{\"powershell\", \"posh\", \"ps1\", \"psm1\"},\n-\t\tFilenames:       []string{\"*.ps1\", \"*.psm1\"},\n+\t\tAliases:         []string{\"powershell\", \"posh\", \"ps1\", \"psm1\", \"psd1\"},\n+\t\tFilenames:       []string{\"*.ps1\", \"*.psm1\", \"*.psd1\"},\n \t\tMimeTypes:       []string{\"text/x-powershell\"},\n \t\tDotAll:          true,\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tpowershellRules,\n+))\n+\n+func powershellRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\(`, Punctuation, Push(\"child\")},\n \t\t\t{`\\s+`, Text, nil},\n@@ -29,9 +33,9 @@ var Powershell = internal.Register(MustNewLexer(\n \t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n \t\t\t{`'([^']|'')*'`, LiteralStringSingle, nil},\n \t\t\t{`(\\$|@@|@)((global|script|private|env):)?\\w+`, NameVariable, nil},\n+\t\t\t{`[a-z]\\w*-[a-z]\\w*\\b`, NameBuiltin, nil},\n \t\t\t{`(while|validateset|validaterange|validatepattern|validatelength|validatecount|until|trap|switch|return|ref|process|param|parameter|in|if|global:|function|foreach|for|finally|filter|end|elseif|else|dynamicparam|do|default|continue|cmdletbinding|break|begin|alias|\\?|%|#script|#private|#local|#global|mandatory|parametersetname|position|valuefrompipeline|valuefrompipelinebypropertyname|valuefromremainingarguments|helpmessage|try|catch|throw)\\b`, Keyword, nil},\n \t\t\t{`-(and|as|band|bnot|bor|bxor|casesensitive|ccontains|ceq|cge|cgt|cle|clike|clt|cmatch|cne|cnotcontains|cnotlike|cnotmatch|contains|creplace|eq|exact|f|file|ge|gt|icontains|ieq|ige|igt|ile|ilike|ilt|imatch|ine|inotcontains|inotlike|inotmatch|ireplace|is|isnot|le|like|lt|match|ne|not|notcontains|notlike|notmatch|or|regex|replace|wildcard)\\b`, Operator, nil},\n-\t\t\t{`(write|where|watch|wait|use|update|unregister|unpublish|unprotect|unlock|uninstall|undo|unblock|trace|test|tee|take|sync|switch|suspend|submit|stop|step|start|split|sort|skip|show|set|send|select|search|scroll|save|revoke|resume|restore|restart|resolve|resize|reset|request|repair|rename|remove|register|redo|receive|read|push|publish|protect|pop|ping|out|optimize|open|new|move|mount|merge|measure|lock|limit|join|invoke|install|initialize|import|hide|group|grant|get|format|foreach|find|export|expand|exit|enter|enable|edit|dismount|disconnect|disable|deny|debug|cxnew|copy|convertto|convertfrom|convert|connect|confirm|compress|complete|compare|close|clear|checkpoint|block|backup|assert|approve|aggregate|add)-[a-z_]\\w*\\b`, NameBuiltin, nil},\n \t\t\t{`(ac|asnp|cat|cd|cfs|chdir|clc|clear|clhy|cli|clp|cls|clv|cnsn|compare|copy|cp|cpi|cpp|curl|cvpa|dbp|del|diff|dir|dnsn|ebp|echo|epal|epcsv|epsn|erase|etsn|exsn|fc|fhx|fl|foreach|ft|fw|gal|gbp|gc|gci|gcm|gcs|gdr|ghy|gi|gjb|gl|gm|gmo|gp|gps|gpv|group|gsn|gsnp|gsv|gu|gv|gwmi|h|history|icm|iex|ihy|ii|ipal|ipcsv|ipmo|ipsn|irm|ise|iwmi|iwr|kill|lp|ls|man|md|measure|mi|mount|move|mp|mv|nal|ndr|ni|nmo|npssc|nsn|nv|ogv|oh|popd|ps|pushd|pwd|r|rbp|rcjb|rcsn|rd|rdr|ren|ri|rjb|rm|rmdir|rmo|rni|rnp|rp|rsn|rsnp|rujb|rv|rvpa|rwmi|sajb|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spjb|spps|spsv|start|sujb|sv|swmi|tee|trcm|type|wget|where|wjb|write)\\s`, NameBuiltin, nil},\n \t\t\t{\"\\\\[[a-z_\\\\[][\\\\w. `,\\\\[\\\\]]*\\\\]\", NameConstant, nil},\n \t\t\t{`-[a-z_]\\w*`, Name, nil},\n@@ -62,5 +66,5 @@ var Powershell = internal.Register(MustNewLexer(\n \t\t\t{`[^@\\n]+\"]`, LiteralStringHeredoc, nil},\n \t\t\t{`.`, LiteralStringHeredoc, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "a2f346b6263f45de9dc27d1fcef79f59c72688d1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/prolog.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/prolog.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/prolog.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/p/prolog.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Prolog lexer.\n-var Prolog = internal.Register(MustNewLexer(\n+var Prolog = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Prolog\",\n \t\tAliases:   []string{\"prolog\"},\n \t\tFilenames: []string{\"*.ecl\", \"*.prolog\", \"*.pro\", \"*.pl\"},\n \t\tMimeTypes: []string{\"text/x-prolog\"},\n \t},\n-\tRules{\n+\tprologRules,\n+))\n+\n+func prologRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`/\\*`, CommentMultiline, Push(\"nested-comment\")},\n \t\t\t{`%.*`, CommentSingle, nil},\n@@ -46,5 +50,5 @@ var Prolog = internal.Register(MustNewLexer(\n \t\t\t{`[^*/]+`, CommentMultiline, nil},\n \t\t\t{`[*/]`, CommentMultiline, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "e80b926c2edb0887ddd46a8b1d43984ea50c7363",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/promql.go",
      "status": "added",
      "additions": 59,
      "deletions": 0,
      "changes": 59,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/promql.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/promql.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/p/promql.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,59 @@\n+package p\n+\n+import (\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+)\n+\n+// Promql lexer.\n+var Promql = internal.Register(MustNewLazyLexer(\n+\t&Config{\n+\t\tName:      \"PromQL\",\n+\t\tAliases:   []string{\"promql\"},\n+\t\tFilenames: []string{\"*.promql\"},\n+\t\tMimeTypes: []string{},\n+\t},\n+\tpromqlRules,\n+))\n+\n+func promqlRules() Rules {\n+\treturn Rules{\n+\t\t\"root\": {\n+\t\t\t{`\\n`, TextWhitespace, nil},\n+\t\t\t{`\\s+`, TextWhitespace, nil},\n+\t\t\t{`,`, Punctuation, nil},\n+\t\t\t{Words(``, `\\b`, `bool`, `by`, `group_left`, `group_right`, `ignoring`, `offset`, `on`, `without`), Keyword, nil},\n+\t\t\t{Words(``, `\\b`, `sum`, `min`, `max`, `avg`, `group`, `stddev`, `stdvar`, `count`, `count_values`, `bottomk`, `topk`, `quantile`), Keyword, nil},\n+\t\t\t{Words(``, `\\b`, `abs`, `absent`, `absent_over_time`, `avg_over_time`, `ceil`, `changes`, `clamp_max`, `clamp_min`, `count_over_time`, `day_of_month`, `day_of_week`, `days_in_month`, `delta`, `deriv`, `exp`, `floor`, `histogram_quantile`, `holt_winters`, `hour`, `idelta`, `increase`, `irate`, `label_join`, `label_replace`, `ln`, `log10`, `log2`, `max_over_time`, `min_over_time`, `minute`, `month`, `predict_linear`, `quantile_over_time`, `rate`, `resets`, `round`, `scalar`, `sort`, `sort_desc`, `sqrt`, `stddev_over_time`, `stdvar_over_time`, `sum_over_time`, `time`, `timestamp`, `vector`, `year`), KeywordReserved, nil},\n+\t\t\t{`[1-9][0-9]*[smhdwy]`, LiteralString, nil},\n+\t\t\t{`-?[0-9]+\\.[0-9]+`, LiteralNumberFloat, nil},\n+\t\t\t{`-?[0-9]+`, LiteralNumberInteger, nil},\n+\t\t\t{`#.*?$`, CommentSingle, nil},\n+\t\t\t{`(\\+|\\-|\\*|\\/|\\%|\\^)`, Operator, nil},\n+\t\t\t{`==|!=|>=|<=|<|>`, Operator, nil},\n+\t\t\t{`and|or|unless`, OperatorWord, nil},\n+\t\t\t{`[_a-zA-Z][a-zA-Z0-9_]+`, NameVariable, nil},\n+\t\t\t{`([\"\\'])(.*?)([\"\\'])`, ByGroups(Punctuation, LiteralString, Punctuation), nil},\n+\t\t\t{`\\(`, Operator, Push(\"function\")},\n+\t\t\t{`\\)`, Operator, nil},\n+\t\t\t{`\\{`, Punctuation, Push(\"labels\")},\n+\t\t\t{`\\[`, Punctuation, Push(\"range\")},\n+\t\t},\n+\t\t\"labels\": {\n+\t\t\t{`\\}`, Punctuation, Pop(1)},\n+\t\t\t{`\\n`, TextWhitespace, nil},\n+\t\t\t{`\\s+`, TextWhitespace, nil},\n+\t\t\t{`,`, Punctuation, nil},\n+\t\t\t{`([_a-zA-Z][a-zA-Z0-9_]*?)(\\s*?)(=~|!=|=|!~)(\\s*?)(\"|')(.*?)(\"|')`, ByGroups(NameLabel, TextWhitespace, Operator, TextWhitespace, Punctuation, LiteralString, Punctuation), nil},\n+\t\t},\n+\t\t\"range\": {\n+\t\t\t{`\\]`, Punctuation, Pop(1)},\n+\t\t\t{`[1-9][0-9]*[smhdwy]`, LiteralString, nil},\n+\t\t},\n+\t\t\"function\": {\n+\t\t\t{`\\)`, Operator, Pop(1)},\n+\t\t\t{`\\(`, Operator, Push()},\n+\t\t\tDefault(Pop(1)),\n+\t\t},\n+\t}\n+}"
    },
    {
      "sha": "76576cb3501df57abbaaa4dad2acda6ce1d2a32b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/protobuf.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/protobuf.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/protobuf.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/p/protobuf.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // ProtocolBuffer lexer.\n-var ProtocolBuffer = internal.Register(MustNewLexer(\n+var ProtocolBuffer = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Protocol Buffer\",\n \t\tAliases:   []string{\"protobuf\", \"proto\"},\n \t\tFilenames: []string{\"*.proto\"},\n \t\tMimeTypes: []string{},\n \t},\n-\tRules{\n+\tprotocolBufferRules,\n+))\n+\n+func protocolBufferRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[ \\t]+`, Text, nil},\n \t\t\t{`[,;{}\\[\\]()<>]`, Punctuation, nil},\n@@ -49,5 +53,5 @@ var ProtocolBuffer = internal.Register(MustNewLexer(\n \t\t\t{`[a-zA-Z_]\\w*`, Name, Pop(1)},\n \t\t\tDefault(Pop(1)),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "b32caed09be9f070857898baef0e264e1225eaee",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/puppet.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/puppet.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/puppet.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/p/puppet.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Puppet lexer.\n-var Puppet = internal.Register(MustNewLexer(\n+var Puppet = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Puppet\",\n \t\tAliases:   []string{\"puppet\"},\n \t\tFilenames: []string{\"*.pp\"},\n \t\tMimeTypes: []string{},\n \t},\n-\tRules{\n+\tpuppetRules,\n+))\n+\n+func puppetRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"comments\"),\n \t\t\tInclude(\"keywords\"),\n@@ -52,5 +56,5 @@ var Puppet = internal.Register(MustNewLexer(\n \t\t\t{`\"([^\"])*\"`, LiteralString, nil},\n \t\t\t{`'(\\\\'|[^'])*'`, LiteralString, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "b432a42064fd8725ea92d8dc4b800f21991303b3",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/python.go",
      "status": "modified",
      "additions": 127,
      "deletions": 53,
      "changes": 180,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/python.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/python.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/p/python.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,112 +6,176 @@ import (\n )\n \n // Python lexer.\n-var Python = internal.Register(MustNewLexer(\n+var Python = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Python\",\n-\t\tAliases:   []string{\"python\", \"py\", \"sage\"},\n-\t\tFilenames: []string{\"*.py\", \"*.pyw\", \"*.sc\", \"SConstruct\", \"SConscript\", \"*.tac\", \"*.sage\"},\n-\t\tMimeTypes: []string{\"text/x-python\", \"application/x-python\"},\n+\t\tAliases:   []string{\"python\", \"py\", \"sage\", \"python3\", \"py3\"},\n+\t\tFilenames: []string{\"*.py\", \"*.pyi\", \"*.pyw\", \"*.jy\", \"*.sage\", \"*.sc\", \"SConstruct\", \"SConscript\", \"*.bzl\", \"BUCK\", \"BUILD\", \"BUILD.bazel\", \"WORKSPACE\", \"*.tac\"},\n+\t\tMimeTypes: []string{\"text/x-python\", \"application/x-python\", \"text/x-python3\", \"application/x-python3\"},\n \t},\n-\tRules{\n+\tpythonRules,\n+))\n+\n+func pythonRules() Rules {\n+\tconst pythonIdentifier = `[A-Z_a-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶ-ͷͻ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮ-ٯٱ-ۓەۥ-ۦۮ-ۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴ-ߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএ-ঐও-নপ-রলশ-হঽৎড়-ঢ়য়-ৡৰ-ৱৼਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હઽૐૠ-ૡૹଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହଽଡ଼-ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠ-ౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠ-ೡೱ-ೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาเ-ๆກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ະາຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥ-ၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮ-ᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳱᳵ-ᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪ-ꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞹꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽ-ꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵ-ꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﱝﱤ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷹﹱﹳﹷﹹﹻﹽﹿ-ﻼＡ-Ｚａ-ｚｦ-ﾝﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐅀-𐅴𐊀-𐊜𐊠-𐋐𐌀-𐌟𐌭-𐍊𐍐-𐍵𐎀-𐎝𐎠-𐏃𐏈-𐏏𐏑-𐏕𐐀-𐒝𐒰-𐓓𐓘-𐓻𐔀-𐔧𐔰-𐕣𐘀-𐜶𐝀-𐝕𐝠-𐝧𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐡠-𐡶𐢀-𐢞𐣠-𐣲𐣴-𐣵𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀𐨐-𐨓𐨕-𐨗𐨙-𐨵𐩠-𐩼𐪀-𐪜𐫀-𐫇𐫉-𐫤𐬀-𐬵𐭀-𐭕𐭠-𐭲𐮀-𐮑𐰀-𐱈𐲀-𐲲𐳀-𐳲𐴀-𐴣𐼀-𐼜𐼧𐼰-𐽅𑀃-𑀷𑂃-𑂯𑃐-𑃨𑄃-𑄦𑅄𑅐-𑅲𑅶𑆃-𑆲𑇁-𑇄𑇚𑇜𑈀-𑈑𑈓-𑈫𑊀-𑊆𑊈𑊊-𑊍𑊏-𑊝𑊟-𑊨𑊰-𑋞𑌅-𑌌𑌏-𑌐𑌓-𑌨𑌪-𑌰𑌲-𑌳𑌵-𑌹𑌽𑍐𑍝-𑍡𑐀-𑐴𑑇-𑑊𑒀-𑒯𑓄-𑓅𑓇𑖀-𑖮𑗘-𑗛𑘀-𑘯𑙄𑚀-𑚪𑜀-𑜚𑠀-𑠫𑢠-𑣟𑣿𑨀𑨋-𑨲𑨺𑩐𑩜-𑪃𑪆-𑪉𑪝𑫀-𑫸𑰀-𑰈𑰊-𑰮𑱀𑱲-𑲏𑴀-𑴆𑴈-𑴉𑴋-𑴰𑵆𑵠-𑵥𑵧-𑵨𑵪-𑶉𑶘𑻠-𑻲𒀀-𒎙𒐀-𒑮𒒀-𒕃𓀀-𓐮𔐀-𔙆𖠀-𖨸𖩀-𖩞𖫐-𖫭𖬀-𖬯𖭀-𖭃𖭣-𖭷𖭽-𖮏𖹀-𖹿𖼀-𖽄𖽐𖾓-𖾟𖿠-𖿡𗀀-𘟱𘠀-𘫲𛀀-𛄞𛅰-𛋻𛰀-𛱪𛱰-𛱼𛲀-𛲈𛲐-𛲙𝐀-𝑔𝑖-𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒹𝒻𝒽-𝓃𝓅-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔞-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕒-𝚥𝚨-𝛀𝛂-𝛚𝛜-𝛺𝛼-𝜔𝜖-𝜴𝜶-𝝎𝝐-𝝮𝝰-𝞈𝞊-𝞨𝞪-𝟂𝟄-𝟋𞠀-𞣄𞤀-𞥃𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝𫠠-𬺡𬺰-𮯠丽-𪘀][0-9A-Z_a-zªµ·ºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶ-ͷͻ-ͽͿΆ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԯԱ-Ֆՙՠ-ֈ֑-ֽֿׁ-ׂׄ-ׇׅא-תׯ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺ߽ࠀ-࠭ࡀ-࡛ࡠ-ࡪࢠ-ࢴࢶ-ࢽ࣓-ࣣ࣡-ॣ०-९ॱ-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-ৱৼ৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍ୖ-ୗଡ଼-ଢ଼ୟ-ୣ୦-୯ୱஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఀ-ఌఎ-ఐఒ-నప-హఽ-ౄె-ైొ-్ౕ-ౖౘ-ౚౠ-ౣ౦-౯ಀ-ಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೞೠ-ೣ೦-೯ೱ-ೲഀ-ഃഅ-ഌഎ-ഐഒ-ൄെ-ൈൊ-ൎൔ-ൗൟ-ൣ൦-൯ൺ-ൿං-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-ෳก-ฺเ-๎๐-๙ກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘-༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟፩-፱ᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៓ៗៜ-៝០-៩᠋-᠍᠐-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧ᪰-᪽ᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿ᳐-᳔᳒-᳹ᴀ-᷹᷻-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‿-⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙-゚ゝ-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞹꟷ-ꠧꡀ-ꡳꢀ-ꣅ꣐-꣙꣠-ꣷꣻꣽ-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꧠ-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯪ꯬-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﱝﱤ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷹ︀-️︠-︯︳-︴﹍-﹏ﹱﹳﹷﹹﹻﹽﹿ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐅀-𐅴𐇽𐊀-𐊜𐊠-𐋐𐋠𐌀-𐌟𐌭-𐍊𐍐-𐍺𐎀-𐎝𐎠-𐏃𐏈-𐏏𐏑-𐏕𐐀-𐒝𐒠-𐒩𐒰-𐓓𐓘-𐓻𐔀-𐔧𐔰-𐕣𐘀-𐜶𐝀-𐝕𐝠-𐝧𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐡠-𐡶𐢀-𐢞𐣠-𐣲𐣴-𐣵𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀-𐨃𐨅-𐨆𐨌-𐨓𐨕-𐨗𐨙-𐨵𐨸-𐨿𐨺𐩠-𐩼𐪀-𐪜𐫀-𐫇𐫉-𐫦𐬀-𐬵𐭀-𐭕𐭠-𐭲𐮀-𐮑𐰀-𐱈𐲀-𐲲𐳀-𐳲𐴀-𐴧𐴰-𐴹𐼀-𐼜𐼧𐼰-𐽐𑀀-𑁆𑁦-𑁯𑁿-𑂺𑃐-𑃨𑃰-𑃹𑄀-𑄴𑄶-𑄿𑅄-𑅆𑅐-𑅳𑅶𑆀-𑇄𑇉-𑇌𑇐-𑇚𑇜𑈀-𑈑𑈓-𑈷𑈾𑊀-𑊆𑊈𑊊-𑊍𑊏-𑊝𑊟-𑊨𑊰-𑋪𑋰-𑋹𑌀-𑌃𑌅-𑌌𑌏-𑌐𑌓-𑌨𑌪-𑌰𑌲-𑌳𑌵-𑌹𑌻-𑍄𑍇-𑍈𑍋-𑍍𑍐𑍗𑍝-𑍣𑍦-𑍬𑍰-𑍴𑐀-𑑊𑑐-𑑙𑑞𑒀-𑓅𑓇𑓐-𑓙𑖀-𑖵𑖸-𑗀𑗘-𑗝𑘀-𑙀𑙄𑙐-𑙙𑚀-𑚷𑛀-𑛉𑜀-𑜚𑜝-𑜫𑜰-𑜹𑠀-𑠺𑢠-𑣩𑣿𑨀-𑨾𑩇𑩐-𑪃𑪆-𑪙𑪝𑫀-𑫸𑰀-𑰈𑰊-𑰶𑰸-𑱀𑱐-𑱙𑱲-𑲏𑲒-𑲧𑲩-𑲶𑴀-𑴆𑴈-𑴉𑴋-𑴶𑴺𑴼-𑴽𑴿-𑵇𑵐-𑵙𑵠-𑵥𑵧-𑵨𑵪-𑶎𑶐-𑶑𑶓-𑶘𑶠-𑶩𑻠-𑻶𒀀-𒎙𒐀-𒑮𒒀-𒕃𓀀-𓐮𔐀-𔙆𖠀-𖨸𖩀-𖩞𖩠-𖩩𖫐-𖫭𖫰-𖫴𖬀-𖬶𖭀-𖭃𖭐-𖭙𖭣-𖭷𖭽-𖮏𖹀-𖹿𖼀-𖽄𖽐-𖽾𖾏-𖾟𖿠-𖿡𗀀-𘟱𘠀-𘫲𛀀-𛄞𛅰-𛋻𛰀-𛱪𛱰-𛱼𛲀-𛲈𛲐-𛲙𛲝-𛲞𝅥-𝅩𝅭-𝅲𝅻-𝆂𝆅-𝆋𝆪-𝆭𝉂-𝉄𝐀-𝑔𝑖-𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒹𝒻𝒽-𝓃𝓅-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔞-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕒-𝚥𝚨-𝛀𝛂-𝛚𝛜-𝛺𝛼-𝜔𝜖-𝜴𝜶-𝝎𝝐-𝝮𝝰-𝞈𝞊-𝞨𝞪-𝟂𝟄-𝟋𝟎-𝟿𝨀-𝨶𝨻-𝩬𝩵𝪄𝪛-𝪟𝪡-𝪯𞀀-𞀆𞀈-𞀘𞀛-𞀡𞀣-𞀤𞀦-𞀪𞠀-𞣄𞣐-𞣖𞤀-𞥊𞥐-𞥙𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝𫠠-𬺡𬺰-𮯠丽-𪘀󠄀-󠇯]*`\n+\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\n`, Text, nil},\n \t\t\t{`^(\\s*)([rRuUbB]{,2})(\"\"\"(?:.|\\n)*?\"\"\")`, ByGroups(Text, LiteralStringAffix, LiteralStringDoc), nil},\n \t\t\t{`^(\\s*)([rRuUbB]{,2})('''(?:.|\\n)*?''')`, ByGroups(Text, LiteralStringAffix, LiteralStringDoc), nil},\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n \t\t\t{`\\A#!.+$`, CommentHashbang, nil},\n \t\t\t{`#.*$`, CommentSingle, nil},\n-\t\t\t{`[]{}:(),;[]`, Punctuation, nil},\n \t\t\t{`\\\\\\n`, Text, nil},\n \t\t\t{`\\\\`, Text, nil},\n-\t\t\t{`(in|is|and|or|not)\\b`, OperatorWord, nil},\n-\t\t\t{`!=|==|<<|>>|[-~+/*%=<>&^|.]`, Operator, nil},\n \t\t\tInclude(\"keywords\"),\n \t\t\t{`(def)((?:\\s|\\\\\\s)+)`, ByGroups(Keyword, Text), Push(\"funcname\")},\n \t\t\t{`(class)((?:\\s|\\\\\\s)+)`, ByGroups(Keyword, Text), Push(\"classname\")},\n \t\t\t{`(from)((?:\\s|\\\\\\s)+)`, ByGroups(KeywordNamespace, Text), Push(\"fromimport\")},\n \t\t\t{`(import)((?:\\s|\\\\\\s)+)`, ByGroups(KeywordNamespace, Text), Push(\"import\")},\n-\t\t\tInclude(\"builtins\"),\n-\t\t\tInclude(\"magicfuncs\"),\n-\t\t\tInclude(\"magicvars\"),\n-\t\t\tInclude(\"backtick\"),\n-\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(\"\"\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Push(\"tdqs\")},\n-\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(''')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Push(\"tsqs\")},\n-\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Push(\"dqs\")},\n-\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Push(\"sqs\")},\n+\t\t\tInclude(\"expr\"),\n+\t\t},\n+\t\t\"expr\": {\n+\t\t\t{`(?i)(rf|fr)(\"\"\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"rfstringescape\", \"tdqf\")},\n+\t\t\t{`(?i)(rf|fr)(''')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"rfstringescape\", \"tsqf\")},\n+\t\t\t{`(?i)(rf|fr)(\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"rfstringescape\", \"dqf\")},\n+\t\t\t{`(?i)(rf|fr)(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"rfstringescape\", \"sqf\")},\n+\t\t\t{`([fF])(\"\"\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"fstringescape\", \"tdqf\")},\n+\t\t\t{`([fF])(''')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"fstringescape\", \"tsqf\")},\n+\t\t\t{`([fF])(\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"fstringescape\", \"dqf\")},\n+\t\t\t{`([fF])(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"fstringescape\", \"sqf\")},\n+\t\t\t{`(?i)(rb|br|r)(\"\"\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Push(\"tdqs\")},\n+\t\t\t{`(?i)(rb|br|r)(''')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Push(\"tsqs\")},\n+\t\t\t{`(?i)(rb|br|r)(\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Push(\"dqs\")},\n+\t\t\t{`(?i)(rb|br|r)(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Push(\"sqs\")},\n \t\t\t{`([uUbB]?)(\"\"\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"stringescape\", \"tdqs\")},\n \t\t\t{`([uUbB]?)(''')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"stringescape\", \"tsqs\")},\n \t\t\t{`([uUbB]?)(\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"stringescape\", \"dqs\")},\n \t\t\t{`([uUbB]?)(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"stringescape\", \"sqs\")},\n-\t\t\tInclude(\"name\"),\n+\t\t\t{`[^\\S\\n]+`, Text, nil},\n \t\t\tInclude(\"numbers\"),\n+\t\t\t{`!=|==|<<|>>|:=|[-~+/*%=<>&^|.]`, Operator, nil},\n+\t\t\t{`[]{}:(),;[]`, Punctuation, nil},\n+\t\t\t{`(in|is|and|or|not)\\b`, OperatorWord, nil},\n+\t\t\tInclude(\"expr-keywords\"),\n+\t\t\tInclude(\"builtins\"),\n+\t\t\tInclude(\"magicfuncs\"),\n+\t\t\tInclude(\"magicvars\"),\n+\t\t\tInclude(\"name\"),\n+\t\t},\n+\t\t\"expr-inside-fstring\": {\n+\t\t\t{`[{([]`, Punctuation, Push(\"expr-inside-fstring-inner\")},\n+\t\t\t{`(=\\s*)?(\\![sraf])?\\}`, LiteralStringInterpol, Pop(1)},\n+\t\t\t{`(=\\s*)?(\\![sraf])?:`, LiteralStringInterpol, Pop(1)},\n+\t\t\t{`\\s+`, Text, nil},\n+\t\t\tInclude(\"expr\"),\n+\t\t},\n+\t\t\"expr-inside-fstring-inner\": {\n+\t\t\t{`[{([]`, Punctuation, Push(\"expr-inside-fstring-inner\")},\n+\t\t\t{`[])}]`, Punctuation, Pop(1)},\n+\t\t\t{`\\s+`, Text, nil},\n+\t\t\tInclude(\"expr\"),\n+\t\t},\n+\t\t\"expr-keywords\": {\n+\t\t\t{Words(``, `\\b`, `async for`, `await`, `else`, `for`, `if`, `lambda`, `yield`, `yield from`), Keyword, nil},\n+\t\t\t{Words(``, `\\b`, `True`, `False`, `None`), KeywordConstant, nil},\n \t\t},\n \t\t\"keywords\": {\n-\t\t\t{Words(``, `\\b`, `assert`, `break`, `continue`, `del`, `elif`, `else`, `except`, `exec`, `finally`, `for`, `global`, `if`, `lambda`, `pass`, `print`, `raise`, `return`, `try`, `while`, `yield`, `yield from`, `as`, `with`), Keyword, nil},\n+\t\t\t{Words(``, `\\b`, `assert`, `async`, `await`, `break`, `continue`, `del`, `elif`, `else`, `except`, `finally`, `for`, `global`, `if`, `lambda`, `pass`, `raise`, `nonlocal`, `return`, `try`, `while`, `yield`, `yield from`, `as`, `with`), Keyword, nil},\n+\t\t\t{Words(``, `\\b`, `True`, `False`, `None`), KeywordConstant, nil},\n \t\t},\n \t\t\"builtins\": {\n-\t\t\t{Words(`(?<!\\.)`, `\\b`, `__import__`, `abs`, `all`, `any`, `apply`, `basestring`, `bin`, `bool`, `buffer`, `bytearray`, `bytes`, `callable`, `chr`, `classmethod`, `cmp`, `coerce`, `compile`, `complex`, `delattr`, `dict`, `dir`, `divmod`, `enumerate`, `eval`, `execfile`, `exit`, `file`, `filter`, `float`, `frozenset`, `getattr`, `globals`, `hasattr`, `hash`, `hex`, `id`, `input`, `int`, `intern`, `isinstance`, `issubclass`, `iter`, `len`, `list`, `locals`, `long`, `map`, `max`, `min`, `next`, `object`, `oct`, `open`, `ord`, `pow`, `property`, `range`, `raw_input`, `reduce`, `reload`, `repr`, `reversed`, `round`, `set`, `setattr`, `slice`, `sorted`, `staticmethod`, `str`, `sum`, `super`, `tuple`, `type`, `unichr`, `unicode`, `vars`, `xrange`, `zip`), NameBuiltin, nil},\n-\t\t\t{`(?<!\\.)(self|None|Ellipsis|NotImplemented|False|True|cls)\\b`, NameBuiltinPseudo, nil},\n-\t\t\t{Words(`(?<!\\.)`, `\\b`, `ArithmeticError`, `AssertionError`, `AttributeError`, `BaseException`, `DeprecationWarning`, `EOFError`, `EnvironmentError`, `Exception`, `FloatingPointError`, `FutureWarning`, `GeneratorExit`, `IOError`, `ImportError`, `ImportWarning`, `IndentationError`, `IndexError`, `KeyError`, `KeyboardInterrupt`, `LookupError`, `MemoryError`, `NameError`, `NotImplemented`, `NotImplementedError`, `OSError`, `OverflowError`, `OverflowWarning`, `PendingDeprecationWarning`, `ReferenceError`, `RuntimeError`, `RuntimeWarning`, `StandardError`, `StopIteration`, `SyntaxError`, `SyntaxWarning`, `SystemError`, `SystemExit`, `TabError`, `TypeError`, `UnboundLocalError`, `UnicodeDecodeError`, `UnicodeEncodeError`, `UnicodeError`, `UnicodeTranslateError`, `UnicodeWarning`, `UserWarning`, `ValueError`, `VMSError`, `Warning`, `WindowsError`, `ZeroDivisionError`), NameException, nil},\n+\t\t\t{Words(`(?<!\\.)`, `\\b`, `__import__`, `abs`, `all`, `any`, `bin`, `bool`, `bytearray`, `bytes`, `chr`, `classmethod`, `compile`, `complex`, `delattr`, `dict`, `dir`, `divmod`, `enumerate`, `eval`, `filter`, `float`, `format`, `frozenset`, `getattr`, `globals`, `hasattr`, `hash`, `hex`, `id`, `input`, `int`, `isinstance`, `issubclass`, `iter`, `len`, `list`, `locals`, `map`, `max`, `memoryview`, `min`, `next`, `object`, `oct`, `open`, `ord`, `pow`, `print`, `property`, `range`, `repr`, `reversed`, `round`, `set`, `setattr`, `slice`, `sorted`, `staticmethod`, `str`, `sum`, `super`, `tuple`, `type`, `vars`, `zip`), NameBuiltin, nil},\n+\t\t\t{`(?<!\\.)(self|Ellipsis|NotImplemented|cls)\\b`, NameBuiltinPseudo, nil},\n+\t\t\t{Words(`(?<!\\.)`, `\\b`, `ArithmeticError`, `AssertionError`, `AttributeError`, `BaseException`, `BufferError`, `BytesWarning`, `DeprecationWarning`, `EOFError`, `EnvironmentError`, `Exception`, `FloatingPointError`, `FutureWarning`, `GeneratorExit`, `IOError`, `ImportError`, `ImportWarning`, `IndentationError`, `IndexError`, `KeyError`, `KeyboardInterrupt`, `LookupError`, `MemoryError`, `NameError`, `NotImplementedError`, `OSError`, `OverflowError`, `PendingDeprecationWarning`, `ReferenceError`, `ResourceWarning`, `RuntimeError`, `RuntimeWarning`, `StopIteration`, `SyntaxError`, `SyntaxWarning`, `SystemError`, `SystemExit`, `TabError`, `TypeError`, `UnboundLocalError`, `UnicodeDecodeError`, `UnicodeEncodeError`, `UnicodeError`, `UnicodeTranslateError`, `UnicodeWarning`, `UserWarning`, `ValueError`, `VMSError`, `Warning`, `WindowsError`, `ZeroDivisionError`, `BlockingIOError`, `ChildProcessError`, `ConnectionError`, `BrokenPipeError`, `ConnectionAbortedError`, `ConnectionRefusedError`, `ConnectionResetError`, `FileExistsError`, `FileNotFoundError`, `InterruptedError`, `IsADirectoryError`, `NotADirectoryError`, `PermissionError`, `ProcessLookupError`, `TimeoutError`, `StopAsyncIteration`, `ModuleNotFoundError`, `RecursionError`), NameException, nil},\n \t\t},\n \t\t\"magicfuncs\": {\n-\t\t\t{Words(``, `\\b`, `__abs__`, `__add__`, `__and__`, `__call__`, `__cmp__`, `__coerce__`, `__complex__`, `__contains__`, `__del__`, `__delattr__`, `__delete__`, `__delitem__`, `__delslice__`, `__div__`, `__divmod__`, `__enter__`, `__eq__`, `__exit__`, `__float__`, `__floordiv__`, `__ge__`, `__get__`, `__getattr__`, `__getattribute__`, `__getitem__`, `__getslice__`, `__gt__`, `__hash__`, `__hex__`, `__iadd__`, `__iand__`, `__idiv__`, `__ifloordiv__`, `__ilshift__`, `__imod__`, `__imul__`, `__index__`, `__init__`, `__instancecheck__`, `__int__`, `__invert__`, `__iop__`, `__ior__`, `__ipow__`, `__irshift__`, `__isub__`, `__iter__`, `__itruediv__`, `__ixor__`, `__le__`, `__len__`, `__long__`, `__lshift__`, `__lt__`, `__missing__`, `__mod__`, `__mul__`, `__ne__`, `__neg__`, `__new__`, `__nonzero__`, `__oct__`, `__op__`, `__or__`, `__pos__`, `__pow__`, `__radd__`, `__rand__`, `__rcmp__`, `__rdiv__`, `__rdivmod__`, `__repr__`, `__reversed__`, `__rfloordiv__`, `__rlshift__`, `__rmod__`, `__rmul__`, `__rop__`, `__ror__`, `__rpow__`, `__rrshift__`, `__rshift__`, `__rsub__`, `__rtruediv__`, `__rxor__`, `__set__`, `__setattr__`, `__setitem__`, `__setslice__`, `__str__`, `__sub__`, `__subclasscheck__`, `__truediv__`, `__unicode__`, `__xor__`), NameFunctionMagic, nil},\n+\t\t\t{Words(``, `\\b`, `__abs__`, `__add__`, `__aenter__`, `__aexit__`, `__aiter__`, `__and__`, `__anext__`, `__await__`, `__bool__`, `__bytes__`, `__call__`, `__complex__`, `__contains__`, `__del__`, `__delattr__`, `__delete__`, `__delitem__`, `__dir__`, `__divmod__`, `__enter__`, `__eq__`, `__exit__`, `__float__`, `__floordiv__`, `__format__`, `__ge__`, `__get__`, `__getattr__`, `__getattribute__`, `__getitem__`, `__gt__`, `__hash__`, `__iadd__`, `__iand__`, `__ifloordiv__`, `__ilshift__`, `__imatmul__`, `__imod__`, `__imul__`, `__index__`, `__init__`, `__instancecheck__`, `__int__`, `__invert__`, `__ior__`, `__ipow__`, `__irshift__`, `__isub__`, `__iter__`, `__itruediv__`, `__ixor__`, `__le__`, `__len__`, `__length_hint__`, `__lshift__`, `__lt__`, `__matmul__`, `__missing__`, `__mod__`, `__mul__`, `__ne__`, `__neg__`, `__new__`, `__next__`, `__or__`, `__pos__`, `__pow__`, `__prepare__`, `__radd__`, `__rand__`, `__rdivmod__`, `__repr__`, `__reversed__`, `__rfloordiv__`, `__rlshift__`, `__rmatmul__`, `__rmod__`, `__rmul__`, `__ror__`, `__round__`, `__rpow__`, `__rrshift__`, `__rshift__`, `__rsub__`, `__rtruediv__`, `__rxor__`, `__set__`, `__setattr__`, `__setitem__`, `__str__`, `__sub__`, `__subclasscheck__`, `__truediv__`, `__xor__`), NameFunctionMagic, nil},\n \t\t},\n \t\t\"magicvars\": {\n-\t\t\t{Words(``, `\\b`, `__bases__`, `__class__`, `__closure__`, `__code__`, `__defaults__`, `__dict__`, `__doc__`, `__file__`, `__func__`, `__globals__`, `__metaclass__`, `__module__`, `__mro__`, `__name__`, `__self__`, `__slots__`, `__weakref__`), NameVariableMagic, nil},\n+\t\t\t{Words(``, `\\b`, `__annotations__`, `__bases__`, `__class__`, `__closure__`, `__code__`, `__defaults__`, `__dict__`, `__doc__`, `__file__`, `__func__`, `__globals__`, `__kwdefaults__`, `__module__`, `__mro__`, `__name__`, `__objclass__`, `__qualname__`, `__self__`, `__slots__`, `__weakref__`), NameVariableMagic, nil},\n \t\t},\n \t\t\"numbers\": {\n-\t\t\t{`(\\d+\\.\\d*|\\d*\\.\\d+)([eE][+-]?[0-9]+)?j?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+[eE][+-]?[0-9]+j?`, LiteralNumberFloat, nil},\n-\t\t\t{`0[0-7]+j?`, LiteralNumberOct, nil},\n-\t\t\t{`0[bB][01]+`, LiteralNumberBin, nil},\n-\t\t\t{`0[xX][a-fA-F0-9]+`, LiteralNumberHex, nil},\n-\t\t\t{`\\d+L`, LiteralNumberIntegerLong, nil},\n-\t\t\t{`\\d+j?`, LiteralNumberInteger, nil},\n-\t\t},\n-\t\t\"backtick\": {\n-\t\t\t{\"`.*?`\", LiteralStringBacktick, nil},\n+\t\t\t{`(\\d(?:_?\\d)*\\.(?:\\d(?:_?\\d)*)?|(?:\\d(?:_?\\d)*)?\\.\\d(?:_?\\d)*)([eE][+-]?\\d(?:_?\\d)*)?`, LiteralNumberFloat, nil},\n+\t\t\t{`\\d(?:_?\\d)*[eE][+-]?\\d(?:_?\\d)*j?`, LiteralNumberFloat, nil},\n+\t\t\t{`0[oO](?:_?[0-7])+`, LiteralNumberOct, nil},\n+\t\t\t{`0[bB](?:_?[01])+`, LiteralNumberBin, nil},\n+\t\t\t{`0[xX](?:_?[a-fA-F0-9])+`, LiteralNumberHex, nil},\n+\t\t\t{`\\d(?:_?\\d)*`, LiteralNumberInteger, nil},\n \t\t},\n \t\t\"name\": {\n-\t\t\t{`@[\\w.]+`, NameDecorator, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n+\t\t\t{`@` + pythonIdentifier, NameDecorator, nil},\n+\t\t\t{`@`, Operator, nil},\n+\t\t\t{pythonIdentifier, Name, nil},\n \t\t},\n \t\t\"funcname\": {\n \t\t\tInclude(\"magicfuncs\"),\n-\t\t\t{`[a-zA-Z_]\\w*`, NameFunction, Pop(1)},\n+\t\t\t{pythonIdentifier, NameFunction, Pop(1)},\n \t\t\tDefault(Pop(1)),\n \t\t},\n \t\t\"classname\": {\n-\t\t\t{`[a-zA-Z_]\\w*`, NameClass, Pop(1)},\n+\t\t\t{pythonIdentifier, NameClass, Pop(1)},\n \t\t},\n \t\t\"import\": {\n-\t\t\t{`(?:[ \\t]|\\\\\\n)+`, Text, nil},\n-\t\t\t{`as\\b`, KeywordNamespace, nil},\n-\t\t\t{`,`, Operator, nil},\n-\t\t\t{`[a-zA-Z_][\\w.]*`, NameNamespace, nil},\n+\t\t\t{`(\\s+)(as)(\\s+)`, ByGroups(Text, Keyword, Text), nil},\n+\t\t\t{`\\.`, NameNamespace, nil},\n+\t\t\t{pythonIdentifier, NameNamespace, nil},\n+\t\t\t{`(\\s*)(,)(\\s*)`, ByGroups(Text, Operator, Text), nil},\n \t\t\tDefault(Pop(1)),\n \t\t},\n \t\t\"fromimport\": {\n-\t\t\t{`(?:[ \\t]|\\\\\\n)+`, Text, nil},\n-\t\t\t{`import\\b`, KeywordNamespace, Pop(1)},\n+\t\t\t{`(\\s+)(import)\\b`, ByGroups(Text, KeywordNamespace), Pop(1)},\n+\t\t\t{`\\.`, NameNamespace, nil},\n \t\t\t{`None\\b`, NameBuiltinPseudo, Pop(1)},\n-\t\t\t{`[a-zA-Z_.][\\w.]*`, NameNamespace, nil},\n+\t\t\t{pythonIdentifier, NameNamespace, nil},\n \t\t\tDefault(Pop(1)),\n \t\t},\n+\t\t\"rfstringescape\": {\n+\t\t\t{`\\{\\{`, LiteralStringEscape, nil},\n+\t\t\t{`\\}\\}`, LiteralStringEscape, nil},\n+\t\t},\n+\t\t\"fstringescape\": {\n+\t\t\tInclude(\"rfstringescape\"),\n+\t\t\tInclude(\"stringescape\"),\n+\t\t},\n \t\t\"stringescape\": {\n \t\t\t{`\\\\([\\\\abfnrtv\"\\']|\\n|N\\{.*?\\}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8}|x[a-fA-F0-9]{2}|[0-7]{1,3})`, LiteralStringEscape, nil},\n \t\t},\n+\t\t\"fstrings-single\": {\n+\t\t\t{`\\}`, LiteralStringInterpol, nil},\n+\t\t\t{`\\{`, LiteralStringInterpol, Push(\"expr-inside-fstring\")},\n+\t\t\t{`[^\\\\\\'\"{}\\n]+`, LiteralStringSingle, nil},\n+\t\t\t{`[\\'\"\\\\]`, LiteralStringSingle, nil},\n+\t\t},\n+\t\t\"fstrings-double\": {\n+\t\t\t{`\\}`, LiteralStringInterpol, nil},\n+\t\t\t{`\\{`, LiteralStringInterpol, Push(\"expr-inside-fstring\")},\n+\t\t\t{`[^\\\\\\'\"{}\\n]+`, LiteralStringDouble, nil},\n+\t\t\t{`[\\'\"\\\\]`, LiteralStringDouble, nil},\n+\t\t},\n \t\t\"strings-single\": {\n-\t\t\t{`%(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsux%]`, LiteralStringInterpol, nil},\n-\t\t\t{`[^\\\\\\'\"%\\n]+`, LiteralStringSingle, nil},\n+\t\t\t{`%(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsaux%]`, LiteralStringInterpol, nil},\n+\t\t\t{`\\{((\\w+)((\\.\\w+)|(\\[[^\\]]+\\]))*)?(\\![sra])?(\\:(.?[<>=\\^])?[-+ ]?#?0?(\\d+)?,?(\\.\\d+)?[E-GXb-gnosx%]?)?\\}`, LiteralStringInterpol, nil},\n+\t\t\t{`[^\\\\\\'\"%{\\n]+`, LiteralStringSingle, nil},\n \t\t\t{`[\\'\"\\\\]`, LiteralStringSingle, nil},\n-\t\t\t{`%`, LiteralStringSingle, nil},\n+\t\t\t{`%|(\\{{1,2})`, LiteralStringSingle, nil},\n \t\t},\n \t\t\"strings-double\": {\n-\t\t\t{`%(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsux%]`, LiteralStringInterpol, nil},\n-\t\t\t{`[^\\\\\\'\"%\\n]+`, LiteralStringDouble, nil},\n+\t\t\t{`%(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsaux%]`, LiteralStringInterpol, nil},\n+\t\t\t{`\\{((\\w+)((\\.\\w+)|(\\[[^\\]]+\\]))*)?(\\![sra])?(\\:(.?[<>=\\^])?[-+ ]?#?0?(\\d+)?,?(\\.\\d+)?[E-GXb-gnosx%]?)?\\}`, LiteralStringInterpol, nil},\n+\t\t\t{`[^\\\\\\'\"%{\\n]+`, LiteralStringDouble, nil},\n \t\t\t{`[\\'\"\\\\]`, LiteralStringDouble, nil},\n-\t\t\t{`%`, LiteralStringDouble, nil},\n+\t\t\t{`%|(\\{{1,2})`, LiteralStringDouble, nil},\n+\t\t},\n+\t\t\"dqf\": {\n+\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n+\t\t\t{`\\\\\\\\|\\\\\"|\\\\\\n`, LiteralStringEscape, nil},\n+\t\t\tInclude(\"fstrings-double\"),\n+\t\t},\n+\t\t\"sqf\": {\n+\t\t\t{`'`, LiteralStringSingle, Pop(1)},\n+\t\t\t{`\\\\\\\\|\\\\'|\\\\\\n`, LiteralStringEscape, nil},\n+\t\t\tInclude(\"fstrings-single\"),\n \t\t},\n \t\t\"dqs\": {\n \t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n@@ -123,6 +187,16 @@ var Python = internal.Register(MustNewLexer(\n \t\t\t{`\\\\\\\\|\\\\'|\\\\\\n`, LiteralStringEscape, nil},\n \t\t\tInclude(\"strings-single\"),\n \t\t},\n+\t\t\"tdqf\": {\n+\t\t\t{`\"\"\"`, LiteralStringDouble, Pop(1)},\n+\t\t\tInclude(\"fstrings-double\"),\n+\t\t\t{`\\n`, LiteralStringDouble, nil},\n+\t\t},\n+\t\t\"tsqf\": {\n+\t\t\t{`'''`, LiteralStringSingle, Pop(1)},\n+\t\t\tInclude(\"fstrings-single\"),\n+\t\t\t{`\\n`, LiteralStringSingle, nil},\n+\t\t},\n \t\t\"tdqs\": {\n \t\t\t{`\"\"\"`, LiteralStringDouble, Pop(1)},\n \t\t\tInclude(\"strings-double\"),\n@@ -133,5 +207,5 @@ var Python = internal.Register(MustNewLexer(\n \t\t\tInclude(\"strings-single\"),\n \t\t\t{`\\n`, LiteralStringSingle, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "f1f60360b2781a6b3ba0106ae9ed97a914184009",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/python2.go",
      "status": "added",
      "additions": 141,
      "deletions": 0,
      "changes": 141,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/python2.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/p/python2.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/p/python2.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,141 @@\n+package p\n+\n+import (\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+)\n+\n+// Python2 lexer.\n+var Python2 = internal.Register(MustNewLazyLexer(\n+\t&Config{\n+\t\tName:      \"Python 2\",\n+\t\tAliases:   []string{\"python2\", \"py2\"},\n+\t\tFilenames: []string{},\n+\t\tMimeTypes: []string{\"text/x-python2\", \"application/x-python2\"},\n+\t},\n+\tpython2Rules,\n+))\n+\n+func python2Rules() Rules {\n+\treturn Rules{\n+\t\t\"root\": {\n+\t\t\t{`\\n`, Text, nil},\n+\t\t\t{`^(\\s*)([rRuUbB]{,2})(\"\"\"(?:.|\\n)*?\"\"\")`, ByGroups(Text, LiteralStringAffix, LiteralStringDoc), nil},\n+\t\t\t{`^(\\s*)([rRuUbB]{,2})('''(?:.|\\n)*?''')`, ByGroups(Text, LiteralStringAffix, LiteralStringDoc), nil},\n+\t\t\t{`[^\\S\\n]+`, Text, nil},\n+\t\t\t{`\\A#!.+$`, CommentHashbang, nil},\n+\t\t\t{`#.*$`, CommentSingle, nil},\n+\t\t\t{`[]{}:(),;[]`, Punctuation, nil},\n+\t\t\t{`\\\\\\n`, Text, nil},\n+\t\t\t{`\\\\`, Text, nil},\n+\t\t\t{`(in|is|and|or|not)\\b`, OperatorWord, nil},\n+\t\t\t{`!=|==|<<|>>|[-~+/*%=<>&^|.]`, Operator, nil},\n+\t\t\tInclude(\"keywords\"),\n+\t\t\t{`(def)((?:\\s|\\\\\\s)+)`, ByGroups(Keyword, Text), Push(\"funcname\")},\n+\t\t\t{`(class)((?:\\s|\\\\\\s)+)`, ByGroups(Keyword, Text), Push(\"classname\")},\n+\t\t\t{`(from)((?:\\s|\\\\\\s)+)`, ByGroups(KeywordNamespace, Text), Push(\"fromimport\")},\n+\t\t\t{`(import)((?:\\s|\\\\\\s)+)`, ByGroups(KeywordNamespace, Text), Push(\"import\")},\n+\t\t\tInclude(\"builtins\"),\n+\t\t\tInclude(\"magicfuncs\"),\n+\t\t\tInclude(\"magicvars\"),\n+\t\t\tInclude(\"backtick\"),\n+\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(\"\"\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Push(\"tdqs\")},\n+\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(''')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Push(\"tsqs\")},\n+\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Push(\"dqs\")},\n+\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Push(\"sqs\")},\n+\t\t\t{`([uUbB]?)(\"\"\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"stringescape\", \"tdqs\")},\n+\t\t\t{`([uUbB]?)(''')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"stringescape\", \"tsqs\")},\n+\t\t\t{`([uUbB]?)(\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"stringescape\", \"dqs\")},\n+\t\t\t{`([uUbB]?)(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"stringescape\", \"sqs\")},\n+\t\t\tInclude(\"name\"),\n+\t\t\tInclude(\"numbers\"),\n+\t\t},\n+\t\t\"keywords\": {\n+\t\t\t{Words(``, `\\b`, `assert`, `break`, `continue`, `del`, `elif`, `else`, `except`, `exec`, `finally`, `for`, `global`, `if`, `lambda`, `pass`, `print`, `raise`, `return`, `try`, `while`, `yield`, `yield from`, `as`, `with`), Keyword, nil},\n+\t\t},\n+\t\t\"builtins\": {\n+\t\t\t{Words(`(?<!\\.)`, `\\b`, `__import__`, `abs`, `all`, `any`, `apply`, `basestring`, `bin`, `bool`, `buffer`, `bytearray`, `bytes`, `callable`, `chr`, `classmethod`, `cmp`, `coerce`, `compile`, `complex`, `delattr`, `dict`, `dir`, `divmod`, `enumerate`, `eval`, `execfile`, `exit`, `file`, `filter`, `float`, `frozenset`, `getattr`, `globals`, `hasattr`, `hash`, `hex`, `id`, `input`, `int`, `intern`, `isinstance`, `issubclass`, `iter`, `len`, `list`, `locals`, `long`, `map`, `max`, `min`, `next`, `object`, `oct`, `open`, `ord`, `pow`, `property`, `range`, `raw_input`, `reduce`, `reload`, `repr`, `reversed`, `round`, `set`, `setattr`, `slice`, `sorted`, `staticmethod`, `str`, `sum`, `super`, `tuple`, `type`, `unichr`, `unicode`, `vars`, `xrange`, `zip`), NameBuiltin, nil},\n+\t\t\t{`(?<!\\.)(self|None|Ellipsis|NotImplemented|False|True|cls)\\b`, NameBuiltinPseudo, nil},\n+\t\t\t{Words(`(?<!\\.)`, `\\b`, `ArithmeticError`, `AssertionError`, `AttributeError`, `BaseException`, `DeprecationWarning`, `EOFError`, `EnvironmentError`, `Exception`, `FloatingPointError`, `FutureWarning`, `GeneratorExit`, `IOError`, `ImportError`, `ImportWarning`, `IndentationError`, `IndexError`, `KeyError`, `KeyboardInterrupt`, `LookupError`, `MemoryError`, `NameError`, `NotImplementedError`, `OSError`, `OverflowError`, `OverflowWarning`, `PendingDeprecationWarning`, `ReferenceError`, `RuntimeError`, `RuntimeWarning`, `StandardError`, `StopIteration`, `SyntaxError`, `SyntaxWarning`, `SystemError`, `SystemExit`, `TabError`, `TypeError`, `UnboundLocalError`, `UnicodeDecodeError`, `UnicodeEncodeError`, `UnicodeError`, `UnicodeTranslateError`, `UnicodeWarning`, `UserWarning`, `ValueError`, `VMSError`, `Warning`, `WindowsError`, `ZeroDivisionError`), NameException, nil},\n+\t\t},\n+\t\t\"magicfuncs\": {\n+\t\t\t{Words(``, `\\b`, `__abs__`, `__add__`, `__and__`, `__call__`, `__cmp__`, `__coerce__`, `__complex__`, `__contains__`, `__del__`, `__delattr__`, `__delete__`, `__delitem__`, `__delslice__`, `__div__`, `__divmod__`, `__enter__`, `__eq__`, `__exit__`, `__float__`, `__floordiv__`, `__ge__`, `__get__`, `__getattr__`, `__getattribute__`, `__getitem__`, `__getslice__`, `__gt__`, `__hash__`, `__hex__`, `__iadd__`, `__iand__`, `__idiv__`, `__ifloordiv__`, `__ilshift__`, `__imod__`, `__imul__`, `__index__`, `__init__`, `__instancecheck__`, `__int__`, `__invert__`, `__iop__`, `__ior__`, `__ipow__`, `__irshift__`, `__isub__`, `__iter__`, `__itruediv__`, `__ixor__`, `__le__`, `__len__`, `__long__`, `__lshift__`, `__lt__`, `__missing__`, `__mod__`, `__mul__`, `__ne__`, `__neg__`, `__new__`, `__nonzero__`, `__oct__`, `__op__`, `__or__`, `__pos__`, `__pow__`, `__radd__`, `__rand__`, `__rcmp__`, `__rdiv__`, `__rdivmod__`, `__repr__`, `__reversed__`, `__rfloordiv__`, `__rlshift__`, `__rmod__`, `__rmul__`, `__rop__`, `__ror__`, `__rpow__`, `__rrshift__`, `__rshift__`, `__rsub__`, `__rtruediv__`, `__rxor__`, `__set__`, `__setattr__`, `__setitem__`, `__setslice__`, `__str__`, `__sub__`, `__subclasscheck__`, `__truediv__`, `__unicode__`, `__xor__`), NameFunctionMagic, nil},\n+\t\t},\n+\t\t\"magicvars\": {\n+\t\t\t{Words(``, `\\b`, `__bases__`, `__class__`, `__closure__`, `__code__`, `__defaults__`, `__dict__`, `__doc__`, `__file__`, `__func__`, `__globals__`, `__metaclass__`, `__module__`, `__mro__`, `__name__`, `__self__`, `__slots__`, `__weakref__`), NameVariableMagic, nil},\n+\t\t},\n+\t\t\"numbers\": {\n+\t\t\t{`(\\d+\\.\\d*|\\d*\\.\\d+)([eE][+-]?[0-9]+)?j?`, LiteralNumberFloat, nil},\n+\t\t\t{`\\d+[eE][+-]?[0-9]+j?`, LiteralNumberFloat, nil},\n+\t\t\t{`0[0-7]+j?`, LiteralNumberOct, nil},\n+\t\t\t{`0[bB][01]+`, LiteralNumberBin, nil},\n+\t\t\t{`0[xX][a-fA-F0-9]+`, LiteralNumberHex, nil},\n+\t\t\t{`\\d+L`, LiteralNumberIntegerLong, nil},\n+\t\t\t{`\\d+j?`, LiteralNumberInteger, nil},\n+\t\t},\n+\t\t\"backtick\": {\n+\t\t\t{\"`.*?`\", LiteralStringBacktick, nil},\n+\t\t},\n+\t\t\"name\": {\n+\t\t\t{`@[\\w.]+`, NameDecorator, nil},\n+\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n+\t\t},\n+\t\t\"funcname\": {\n+\t\t\tInclude(\"magicfuncs\"),\n+\t\t\t{`[a-zA-Z_]\\w*`, NameFunction, Pop(1)},\n+\t\t\tDefault(Pop(1)),\n+\t\t},\n+\t\t\"classname\": {\n+\t\t\t{`[a-zA-Z_]\\w*`, NameClass, Pop(1)},\n+\t\t},\n+\t\t\"import\": {\n+\t\t\t{`(?:[ \\t]|\\\\\\n)+`, Text, nil},\n+\t\t\t{`as\\b`, KeywordNamespace, nil},\n+\t\t\t{`,`, Operator, nil},\n+\t\t\t{`[a-zA-Z_][\\w.]*`, NameNamespace, nil},\n+\t\t\tDefault(Pop(1)),\n+\t\t},\n+\t\t\"fromimport\": {\n+\t\t\t{`(?:[ \\t]|\\\\\\n)+`, Text, nil},\n+\t\t\t{`import\\b`, KeywordNamespace, Pop(1)},\n+\t\t\t{`None\\b`, NameBuiltinPseudo, Pop(1)},\n+\t\t\t{`[a-zA-Z_.][\\w.]*`, NameNamespace, nil},\n+\t\t\tDefault(Pop(1)),\n+\t\t},\n+\t\t\"stringescape\": {\n+\t\t\t{`\\\\([\\\\abfnrtv\"\\']|\\n|N\\{.*?\\}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8}|x[a-fA-F0-9]{2}|[0-7]{1,3})`, LiteralStringEscape, nil},\n+\t\t},\n+\t\t\"strings-single\": {\n+\t\t\t{`%(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsux%]`, LiteralStringInterpol, nil},\n+\t\t\t{`[^\\\\\\'\"%\\n]+`, LiteralStringSingle, nil},\n+\t\t\t{`[\\'\"\\\\]`, LiteralStringSingle, nil},\n+\t\t\t{`%`, LiteralStringSingle, nil},\n+\t\t},\n+\t\t\"strings-double\": {\n+\t\t\t{`%(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsux%]`, LiteralStringInterpol, nil},\n+\t\t\t{`[^\\\\\\'\"%\\n]+`, LiteralStringDouble, nil},\n+\t\t\t{`[\\'\"\\\\]`, LiteralStringDouble, nil},\n+\t\t\t{`%`, LiteralStringDouble, nil},\n+\t\t},\n+\t\t\"dqs\": {\n+\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n+\t\t\t{`\\\\\\\\|\\\\\"|\\\\\\n`, LiteralStringEscape, nil},\n+\t\t\tInclude(\"strings-double\"),\n+\t\t},\n+\t\t\"sqs\": {\n+\t\t\t{`'`, LiteralStringSingle, Pop(1)},\n+\t\t\t{`\\\\\\\\|\\\\'|\\\\\\n`, LiteralStringEscape, nil},\n+\t\t\tInclude(\"strings-single\"),\n+\t\t},\n+\t\t\"tdqs\": {\n+\t\t\t{`\"\"\"`, LiteralStringDouble, Pop(1)},\n+\t\t\tInclude(\"strings-double\"),\n+\t\t\t{`\\n`, LiteralStringDouble, nil},\n+\t\t},\n+\t\t\"tsqs\": {\n+\t\t\t{`'''`, LiteralStringSingle, Pop(1)},\n+\t\t\tInclude(\"strings-single\"),\n+\t\t\t{`\\n`, LiteralStringSingle, nil},\n+\t\t},\n+\t}\n+}"
    },
    {
      "sha": "980799824d4e47cbc60e71148e504aca19963835",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/python3.go",
      "status": "removed",
      "additions": 0,
      "deletions": 137,
      "changes": 137,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/alecthomas/chroma/lexers/p/python3.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/alecthomas/chroma/lexers/p/python3.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/p/python3.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,137 +0,0 @@\n-package p\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-var python3Identifier = `[A-Z_a-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶ-ͷͻ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮ-ٯٱ-ۓەۥ-ۦۮ-ۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴ-ߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএ-ঐও-নপ-রলশ-হঽৎড়-ঢ়য়-ৡৰ-ৱਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હઽૐૠ-ૡଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହଽଡ଼-ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘ-ౙౠ-ౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠ-ೡೱ-ೲഅ-ഌഎ-ഐഒ-ഺഽൎൠ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาเ-ๆກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ະາຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥ-ၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮ-ᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵ-ᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪ-ꘫꙀ-ꙮꙿ-ꚗꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵ-ꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﱝﱤ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷹﹱﹳﹷﹹﹻﹽﹿ-ﻼＡ-Ｚａ-ｚｦ-ﾝﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐅀-𐅴𐊀-𐊜𐊠-𐋐𐌀-𐌞𐌰-𐍊𐎀-𐎝𐎠-𐏃𐏈-𐏏𐏑-𐏕𐐀-𐒝𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀𐨐-𐨓𐨕-𐨗𐨙-𐨳𐩠-𐩼𐬀-𐬵𐭀-𐭕𐭠-𐭲𐰀-𐱈𑀃-𑀷𑂃-𑂯𑃐-𑃨𑄃-𑄦𑆃-𑆲𑇁-𑇄𑚀-𑚪𒀀-𒍮𒐀-𒑢𓀀-𓐮𖠀-𖨸𖼀-𖽄𖽐𖾓-𖾟𛀀-𛀁𝐀-𝑔𝑖-𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒹𝒻𝒽-𝓃𝓅-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔞-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕒-𝚥𝚨-𝛀𝛂-𝛚𝛜-𝛺𝛼-𝜔𝜖-𝜴𝜶-𝝎𝝐-𝝮𝝰-𝞈𝞊-𝞨𝞪-𝟂𝟄-𝟋𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝丽-𪘀][0-9A-Z_a-zªµ·ºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶ-ͷͻ-ͽΆ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԧԱ-Ֆՙա-և֑-ֽֿׁ-ׂׄ-ׇׅא-תװ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺࠀ-࠭ࡀ-࡛ࢠࢢ-ࢬࣤ-ࣾऀ-ॣ०-९ॱ-ॷॹ-ॿঁ-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-ৱਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍ୖ-ୗଡ଼-ଢ଼ୟ-ୣ୦-୯ୱஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఁ-ఃఅ-ఌఎ-ఐఒ-నప-ళవ-హఽ-ౄె-ైొ-్ౕ-ౖౘ-ౙౠ-ౣ౦-౯ಂ-ಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೞೠ-ೣ೦-೯ೱ-ೲം-ഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൎൗൠ-ൣ൦-൯ൺ-ൿං-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟෲ-ෳก-ฺเ-๎๐-๙ກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘-༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟፩-፱ᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៓ៗៜ-៝០-៩᠋-᠍᠐-᠙ᠠ-ᡷᢀ-ᢪᢰ-ᣵᤀ-ᤜᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽ᳐-᳔᳒-ᳶᴀ-ᷦ᷼-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‿-⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙-゚ゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-ꚗꚟ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠧꡀ-ꡳꢀ-꣄꣐-꣙꣠-ꣷꣻ꤀-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺ-ꩻꪀ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯪ꯬-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﱝﱤ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷹ︀-️︠-︦︳-︴﹍-﹏ﹱﹳﹷﹹﹻﹽﹿ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ𐀀-𐀋𐀍-𐀦𐀨-𐀺𐀼-𐀽𐀿-𐁍𐁐-𐁝𐂀-𐃺𐅀-𐅴𐇽𐊀-𐊜𐊠-𐋐𐌀-𐌞𐌰-𐍊𐎀-𐎝𐎠-𐏃𐏈-𐏏𐏑-𐏕𐐀-𐒝𐒠-𐒩𐠀-𐠅𐠈𐠊-𐠵𐠷-𐠸𐠼𐠿-𐡕𐤀-𐤕𐤠-𐤹𐦀-𐦷𐦾-𐦿𐨀-𐨃𐨅-𐨆𐨌-𐨓𐨕-𐨗𐨙-𐨳𐨸-𐨿𐨺𐩠-𐩼𐬀-𐬵𐭀-𐭕𐭠-𐭲𐰀-𐱈𑀀-𑁆𑁦-𑁯𑂀-𑂺𑃐-𑃨𑃰-𑃹𑄀-𑄴𑄶-𑄿𑆀-𑇄𑇐-𑇙𑚀-𑚷𑛀-𑛉𒀀-𒍮𒐀-𒑢𓀀-𓐮𖠀-𖨸𖼀-𖽄𖽐-𖽾𖾏-𖾟𛀀-𛀁𝅥-𝅩𝅭-𝅲𝅻-𝆂𝆅-𝆋𝆪-𝆭𝉂-𝉄𝐀-𝑔𝑖-𝒜𝒞-𝒟𝒢𝒥-𝒦𝒩-𝒬𝒮-𝒹𝒻𝒽-𝓃𝓅-𝔅𝔇-𝔊𝔍-𝔔𝔖-𝔜𝔞-𝔹𝔻-𝔾𝕀-𝕄𝕆𝕊-𝕐𝕒-𝚥𝚨-𝛀𝛂-𝛚𝛜-𝛺𝛼-𝜔𝜖-𝜴𝜶-𝝎𝝐-𝝮𝝰-𝞈𝞊-𝞨𝞪-𝟂𝟄-𝟋𝟎-𝟿𞸀-𞸃𞸅-𞸟𞸡-𞸢𞸤𞸧𞸩-𞸲𞸴-𞸷𞸹𞸻𞹂𞹇𞹉𞹋𞹍-𞹏𞹑-𞹒𞹔𞹗𞹙𞹛𞹝𞹟𞹡-𞹢𞹤𞹧-𞹪𞹬-𞹲𞹴-𞹷𞹹-𞹼𞹾𞺀-𞺉𞺋-𞺛𞺡-𞺣𞺥-𞺩𞺫-𞺻𠀀-𪛖𪜀-𫜴𫝀-𫠝丽-𪘀󠄀-󠇯]*`\n-\n-// Python3 lexer.\n-var Python3 = internal.Register(MustNewLexer(\n-\t&Config{\n-\t\tName:      \"Python 3\",\n-\t\tAliases:   []string{\"python3\", \"py3\"},\n-\t\tFilenames: []string{},\n-\t\tMimeTypes: []string{\"text/x-python3\", \"application/x-python3\"},\n-\t},\n-\tRules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`^(\\s*)([rRuUbB]{,2})(\"\"\"(?:.|\\n)*?\"\"\")`, ByGroups(Text, LiteralStringAffix, LiteralStringDoc), nil},\n-\t\t\t{`^(\\s*)([rRuUbB]{,2})('''(?:.|\\n)*?''')`, ByGroups(Text, LiteralStringAffix, LiteralStringDoc), nil},\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`\\A#!.+$`, CommentHashbang, nil},\n-\t\t\t{`#.*$`, CommentSingle, nil},\n-\t\t\t{`[]{}:(),;[]`, Punctuation, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`\\\\`, Text, nil},\n-\t\t\t{`(in|is|and|or|not)\\b`, OperatorWord, nil},\n-\t\t\t{`!=|==|<<|>>|[-~+/*%=<>&^|.]`, Operator, nil},\n-\t\t\tInclude(\"keywords\"),\n-\t\t\t{`(def)((?:\\s|\\\\\\s)+)`, ByGroups(Keyword, Text), Push(\"funcname\")},\n-\t\t\t{`(class)((?:\\s|\\\\\\s)+)`, ByGroups(Keyword, Text), Push(\"classname\")},\n-\t\t\t{`(from)((?:\\s|\\\\\\s)+)`, ByGroups(KeywordNamespace, Text), Push(\"fromimport\")},\n-\t\t\t{`(import)((?:\\s|\\\\\\s)+)`, ByGroups(KeywordNamespace, Text), Push(\"import\")},\n-\t\t\tInclude(\"builtins\"),\n-\t\t\tInclude(\"magicfuncs\"),\n-\t\t\tInclude(\"magicvars\"),\n-\t\t\tInclude(\"backtick\"),\n-\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(\"\"\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Push(\"tdqs\")},\n-\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(''')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Push(\"tsqs\")},\n-\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Push(\"dqs\")},\n-\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Push(\"sqs\")},\n-\t\t\t{`([uUbB]?)(\"\"\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"stringescape\", \"tdqs\")},\n-\t\t\t{`([uUbB]?)(''')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"stringescape\", \"tsqs\")},\n-\t\t\t{`([uUbB]?)(\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"stringescape\", \"dqs\")},\n-\t\t\t{`([uUbB]?)(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"stringescape\", \"sqs\")},\n-\t\t\tInclude(\"name\"),\n-\t\t\tInclude(\"numbers\"),\n-\t\t},\n-\t\t\"keywords\": {\n-\t\t\t{Words(``, `\\b`, `assert`, `async`, `await`, `break`, `continue`, `del`, `elif`, `else`, `except`, `finally`, `for`, `global`, `if`, `lambda`, `pass`, `raise`, `nonlocal`, `return`, `try`, `while`, `yield`, `yield from`, `as`, `with`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `True`, `False`, `None`), KeywordConstant, nil},\n-\t\t},\n-\t\t\"builtins\": {\n-\t\t\t{Words(`(?<!\\.)`, `\\b`, `__import__`, `abs`, `all`, `any`, `bin`, `bool`, `bytearray`, `bytes`, `chr`, `classmethod`, `cmp`, `compile`, `complex`, `delattr`, `dict`, `dir`, `divmod`, `enumerate`, `eval`, `filter`, `float`, `format`, `frozenset`, `getattr`, `globals`, `hasattr`, `hash`, `hex`, `id`, `input`, `int`, `isinstance`, `issubclass`, `iter`, `len`, `list`, `locals`, `map`, `max`, `memoryview`, `min`, `next`, `object`, `oct`, `open`, `ord`, `pow`, `print`, `property`, `range`, `repr`, `reversed`, `round`, `set`, `setattr`, `slice`, `sorted`, `staticmethod`, `str`, `sum`, `super`, `tuple`, `type`, `vars`, `zip`), NameBuiltin, nil},\n-\t\t\t{`(?<!\\.)(self|Ellipsis|NotImplemented|cls)\\b`, NameBuiltinPseudo, nil},\n-\t\t\t{Words(`(?<!\\.)`, `\\b`, `ArithmeticError`, `AssertionError`, `AttributeError`, `BaseException`, `BufferError`, `BytesWarning`, `DeprecationWarning`, `EOFError`, `EnvironmentError`, `Exception`, `FloatingPointError`, `FutureWarning`, `GeneratorExit`, `IOError`, `ImportError`, `ImportWarning`, `IndentationError`, `IndexError`, `KeyError`, `KeyboardInterrupt`, `LookupError`, `MemoryError`, `NameError`, `NotImplementedError`, `OSError`, `OverflowError`, `PendingDeprecationWarning`, `ReferenceError`, `ResourceWarning`, `RuntimeError`, `RuntimeWarning`, `StopIteration`, `SyntaxError`, `SyntaxWarning`, `SystemError`, `SystemExit`, `TabError`, `TypeError`, `UnboundLocalError`, `UnicodeDecodeError`, `UnicodeEncodeError`, `UnicodeError`, `UnicodeTranslateError`, `UnicodeWarning`, `UserWarning`, `ValueError`, `VMSError`, `Warning`, `WindowsError`, `ZeroDivisionError`, `BlockingIOError`, `ChildProcessError`, `ConnectionError`, `BrokenPipeError`, `ConnectionAbortedError`, `ConnectionRefusedError`, `ConnectionResetError`, `FileExistsError`, `FileNotFoundError`, `InterruptedError`, `IsADirectoryError`, `NotADirectoryError`, `PermissionError`, `ProcessLookupError`, `TimeoutError`), NameException, nil},\n-\t\t},\n-\t\t\"magicfuncs\": {\n-\t\t\t{Words(``, `\\b`, `__abs__`, `__add__`, `__aenter__`, `__aexit__`, `__aiter__`, `__and__`, `__anext__`, `__await__`, `__bool__`, `__bytes__`, `__call__`, `__complex__`, `__contains__`, `__del__`, `__delattr__`, `__delete__`, `__delitem__`, `__dir__`, `__divmod__`, `__enter__`, `__eq__`, `__exit__`, `__float__`, `__floordiv__`, `__format__`, `__ge__`, `__get__`, `__getattr__`, `__getattribute__`, `__getitem__`, `__gt__`, `__hash__`, `__iadd__`, `__iand__`, `__ifloordiv__`, `__ilshift__`, `__imatmul__`, `__imod__`, `__import__`, `__imul__`, `__index__`, `__init__`, `__instancecheck__`, `__int__`, `__invert__`, `__ior__`, `__ipow__`, `__irshift__`, `__isub__`, `__iter__`, `__itruediv__`, `__ixor__`, `__le__`, `__len__`, `__length_hint__`, `__lshift__`, `__lt__`, `__matmul__`, `__missing__`, `__mod__`, `__mul__`, `__ne__`, `__neg__`, `__new__`, `__next__`, `__or__`, `__pos__`, `__pow__`, `__prepare__`, `__radd__`, `__rand__`, `__rdivmod__`, `__repr__`, `__reversed__`, `__rfloordiv__`, `__rlshift__`, `__rmatmul__`, `__rmod__`, `__rmul__`, `__ror__`, `__round__`, `__rpow__`, `__rrshift__`, `__rshift__`, `__rsub__`, `__rtruediv__`, `__rxor__`, `__set__`, `__setattr__`, `__setitem__`, `__str__`, `__sub__`, `__subclasscheck__`, `__truediv__`, `__xor__`), NameFunctionMagic, nil},\n-\t\t},\n-\t\t\"magicvars\": {\n-\t\t\t{Words(``, `\\b`, `__annotations__`, `__bases__`, `__class__`, `__closure__`, `__code__`, `__defaults__`, `__dict__`, `__doc__`, `__file__`, `__func__`, `__globals__`, `__kwdefaults__`, `__module__`, `__mro__`, `__name__`, `__objclass__`, `__qualname__`, `__self__`, `__slots__`, `__weakref__`), NameVariableMagic, nil},\n-\t\t},\n-\t\t\"numbers\": {\n-\t\t\t{`(\\d+\\.\\d*|\\d*\\.\\d+)([eE][+-]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+[eE][+-]?[0-9]+j?`, LiteralNumberFloat, nil},\n-\t\t\t{`0[oO][0-7]+`, LiteralNumberOct, nil},\n-\t\t\t{`0[bB][01]+`, LiteralNumberBin, nil},\n-\t\t\t{`0[xX][a-fA-F0-9]+`, LiteralNumberHex, nil},\n-\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n-\t\t},\n-\t\t\"backtick\": {},\n-\t\t\"name\": {\n-\t\t\t{`@\\w+`, NameDecorator, nil},\n-\t\t\t{`@`, Operator, nil},\n-\t\t\t{python3Identifier, Name, nil},\n-\t\t},\n-\t\t\"funcname\": {\n-\t\t\t{python3Identifier, NameFunction, Pop(1)},\n-\t\t},\n-\t\t\"classname\": {\n-\t\t\t{python3Identifier, NameClass, Pop(1)},\n-\t\t},\n-\t\t\"import\": {\n-\t\t\t{`(\\s+)(as)(\\s+)`, ByGroups(Text, Keyword, Text), nil},\n-\t\t\t{`\\.`, NameNamespace, nil},\n-\t\t\t{python3Identifier, NameNamespace, nil},\n-\t\t\t{`(\\s*)(,)(\\s*)`, ByGroups(Text, Operator, Text), nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"fromimport\": {\n-\t\t\t{`(\\s+)(import)\\b`, ByGroups(Text, Keyword), Pop(1)},\n-\t\t\t{`\\.`, NameNamespace, nil},\n-\t\t\t{python3Identifier, NameNamespace, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"stringescape\": {\n-\t\t\t{`\\\\([\\\\abfnrtv\"\\']|\\n|N\\{.*?\\}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8}|x[a-fA-F0-9]{2}|[0-7]{1,3})`, LiteralStringEscape, nil},\n-\t\t},\n-\t\t\"strings-single\": {\n-\t\t\t{`%(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsux%]`, LiteralStringInterpol, nil},\n-\t\t\t{`\\{((\\w+)((\\.\\w+)|(\\[[^\\]]+\\]))*)?(\\![sra])?(\\:(.?[<>=\\^])?[-+ ]?#?0?(\\d+)?,?(\\.\\d+)?[E-GXb-gnosx%]?)?\\}`, LiteralStringInterpol, nil},\n-\t\t\t{`[^\\\\\\'\"%{\\n]+`, LiteralStringSingle, nil},\n-\t\t\t{`[\\'\"\\\\]`, LiteralStringSingle, nil},\n-\t\t\t{`%|(\\{{1,2})`, LiteralStringSingle, nil},\n-\t\t},\n-\t\t\"strings-double\": {\n-\t\t\t{`%(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsux%]`, LiteralStringInterpol, nil},\n-\t\t\t{`\\{((\\w+)((\\.\\w+)|(\\[[^\\]]+\\]))*)?(\\![sra])?(\\:(.?[<>=\\^])?[-+ ]?#?0?(\\d+)?,?(\\.\\d+)?[E-GXb-gnosx%]?)?\\}`, LiteralStringInterpol, nil},\n-\t\t\t{`[^\\\\\\'\"%{\\n]+`, LiteralStringDouble, nil},\n-\t\t\t{`[\\'\"\\\\]`, LiteralStringDouble, nil},\n-\t\t\t{`%|(\\{{1,2})`, LiteralStringDouble, nil},\n-\t\t},\n-\t\t\"dqs\": {\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t\t{`\\\\\\\\|\\\\\"|\\\\\\n`, LiteralStringEscape, nil},\n-\t\t\tInclude(\"strings-double\"),\n-\t\t},\n-\t\t\"sqs\": {\n-\t\t\t{`'`, LiteralStringSingle, Pop(1)},\n-\t\t\t{`\\\\\\\\|\\\\'|\\\\\\n`, LiteralStringEscape, nil},\n-\t\t\tInclude(\"strings-single\"),\n-\t\t},\n-\t\t\"tdqs\": {\n-\t\t\t{`\"\"\"`, LiteralStringDouble, Pop(1)},\n-\t\t\tInclude(\"strings-double\"),\n-\t\t\t{`\\n`, LiteralStringDouble, nil},\n-\t\t},\n-\t\t\"tsqs\": {\n-\t\t\t{`'''`, LiteralStringSingle, Pop(1)},\n-\t\t\tInclude(\"strings-single\"),\n-\t\t\t{`\\n`, LiteralStringSingle, nil},\n-\t\t},\n-\t},\n-))"
    },
    {
      "sha": "1e36f86570b6b2da393cc58dee9ead4b6f3b1bd9",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/q/qbasic.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/q/qbasic.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/q/qbasic.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/q/qbasic.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Qbasic lexer.\n-var Qbasic = internal.Register(MustNewLexer(\n+var Qbasic = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"QBasic\",\n \t\tAliases:   []string{\"qbasic\", \"basic\"},\n \t\tFilenames: []string{\"*.BAS\", \"*.bas\"},\n \t\tMimeTypes: []string{\"text/basic\"},\n \t},\n-\tRules{\n+\tqbasicRules,\n+))\n+\n+func qbasicRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\n+`, Text, nil},\n \t\t\t{`\\s+`, TextWhitespace, nil},\n@@ -63,5 +67,5 @@ var Qbasic = internal.Register(MustNewLexer(\n \t\t\"keywords\": {\n \t\t\t{`\\b(ACCESS|ALIAS|ANY|APPEND|AS|BASE|BINARY|BYVAL|CASE|CDECL|DOUBLE|ELSE|ELSEIF|ENDIF|INTEGER|IS|LIST|LOCAL|LONG|LOOP|MOD|NEXT|OFF|ON|OUTPUT|RANDOM|SIGNAL|SINGLE|STEP|STRING|THEN|TO|UNTIL|USING|WEND)\\b`, Keyword, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "dfd3c75374b33f1b04f40ac2a61f5051793c3611",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/q/qml.go",
      "status": "added",
      "additions": 58,
      "deletions": 0,
      "changes": 58,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/q/qml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/q/qml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/q/qml.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,58 @@\n+package q\n+\n+import (\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+)\n+\n+// Qml lexer.\n+var Qml = internal.Register(MustNewLazyLexer(\n+\t&Config{\n+\t\tName:      \"QML\",\n+\t\tAliases:   []string{\"qml\", \"qbs\"},\n+\t\tFilenames: []string{\"*.qml\", \"*.qbs\"},\n+\t\tMimeTypes: []string{\"application/x-qml\", \"application/x-qt.qbs+qml\"},\n+\t\tDotAll:    true,\n+\t},\n+\tqmlRules,\n+))\n+\n+func qmlRules() Rules {\n+\treturn Rules{\n+\t\t\"commentsandwhitespace\": {\n+\t\t\t{`\\s+`, Text, nil},\n+\t\t\t{`<!--`, Comment, nil},\n+\t\t\t{`//.*?\\n`, CommentSingle, nil},\n+\t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n+\t\t},\n+\t\t\"slashstartsregex\": {\n+\t\t\tInclude(\"commentsandwhitespace\"),\n+\t\t\t{`/(\\\\.|[^[/\\\\\\n]|\\[(\\\\.|[^\\]\\\\\\n])*])+/([gim]+\\b|\\B)`, LiteralStringRegex, Pop(1)},\n+\t\t\t{`(?=/)`, Text, Push(\"#pop\", \"badregex\")},\n+\t\t\tDefault(Pop(1)),\n+\t\t},\n+\t\t\"badregex\": {\n+\t\t\t{`\\n`, Text, Pop(1)},\n+\t\t},\n+\t\t\"root\": {\n+\t\t\t{`^(?=\\s|/|<!--)`, Text, Push(\"slashstartsregex\")},\n+\t\t\tInclude(\"commentsandwhitespace\"),\n+\t\t\t{`\\+\\+|--|~|&&|\\?|:|\\|\\||\\\\(?=\\n)|(<<|>>>?|==?|!=?|[-<>+*%&|^/])=?`, Operator, Push(\"slashstartsregex\")},\n+\t\t\t{`[{(\\[;,]`, Punctuation, Push(\"slashstartsregex\")},\n+\t\t\t{`[})\\].]`, Punctuation, nil},\n+\t\t\t{`\\bid\\s*:\\s*[A-Za-z][\\w.]*`, KeywordDeclaration, Push(\"slashstartsregex\")},\n+\t\t\t{`\\b[A-Za-z][\\w.]*\\s*:`, Keyword, Push(\"slashstartsregex\")},\n+\t\t\t{`(for|in|while|do|break|return|continue|switch|case|default|if|else|throw|try|catch|finally|new|delete|typeof|instanceof|void|this)\\b`, Keyword, Push(\"slashstartsregex\")},\n+\t\t\t{`(var|let|with|function)\\b`, KeywordDeclaration, Push(\"slashstartsregex\")},\n+\t\t\t{`(abstract|boolean|byte|char|class|const|debugger|double|enum|export|extends|final|float|goto|implements|import|int|interface|long|native|package|private|protected|public|short|static|super|synchronized|throws|transient|volatile)\\b`, KeywordReserved, nil},\n+\t\t\t{`(true|false|null|NaN|Infinity|undefined)\\b`, KeywordConstant, nil},\n+\t\t\t{`(Array|Boolean|Date|Error|Function|Math|netscape|Number|Object|Packages|RegExp|String|sun|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|Error|eval|isFinite|isNaN|parseFloat|parseInt|document|this|window)\\b`, NameBuiltin, nil},\n+\t\t\t{`[$a-zA-Z_]\\w*`, NameOther, nil},\n+\t\t\t{`[0-9][0-9]*\\.[0-9]+([eE][0-9]+)?[fd]?`, LiteralNumberFloat, nil},\n+\t\t\t{`0x[0-9a-fA-F]+`, LiteralNumberHex, nil},\n+\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n+\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n+\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n+\t\t},\n+\t}\n+}"
    },
    {
      "sha": "7f56dcec7114ee0955dfdc2e917c666b27833e01",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/r/r.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/r.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/r.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/r/r.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // R/S lexer.\n-var R = internal.Register(MustNewLexer(\n+var R = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"R\",\n \t\tAliases:   []string{\"splus\", \"s\", \"r\"},\n \t\tFilenames: []string{\"*.S\", \"*.R\", \"*.r\", \".Rhistory\", \".Rprofile\", \".Renviron\"},\n \t\tMimeTypes: []string{\"text/S-plus\", \"text/S\", \"text/x-r-source\", \"text/x-r\", \"text/x-R\", \"text/x-r-history\", \"text/x-r-profile\"},\n \t},\n-\tRules{\n+\trRules,\n+))\n+\n+func rRules() Rules {\n+\treturn Rules{\n \t\t\"comments\": {\n \t\t\t{`#.*$`, CommentSingle, nil},\n \t\t},\n@@ -62,5 +66,5 @@ var R = internal.Register(MustNewLexer(\n \t\t\"string_dquote\": {\n \t\t\t{`([^\"\\\\]|\\\\.)*\"`, LiteralString, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "3f4182747b9e6cacaf1083b1f8988f0feb104954",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/r/racket.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/racket.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/racket.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/r/racket.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Racket lexer.\n-var Racket = internal.Register(MustNewLexer(\n+var Racket = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Racket\",\n \t\tAliases:   []string{\"racket\", \"rkt\"},\n \t\tFilenames: []string{\"*.rkt\", \"*.rktd\", \"*.rktl\"},\n \t\tMimeTypes: []string{\"text/x-racket\", \"application/x-racket\"},\n \t},\n-\tRules{\n+\tracketRules,\n+))\n+\n+func racketRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[)\\]}]`, Error, nil},\n \t\t\t{`(?!\\Z)`, Text, Push(\"unquoted-datum\")},\n@@ -98,5 +102,5 @@ var Racket = internal.Register(MustNewLexer(\n \t\t\t{`(?s)\\\\([0-7]{1,3}|x[\\da-fA-F]{1,2}|u[\\da-fA-F]{1,4}|U[\\da-fA-F]{1,8}|.)`, LiteralStringEscape, nil},\n \t\t\t{`[^\\\\\"]+`, LiteralStringDouble, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "ab6a4fbbe79a81d24e449b84d5b56f56228db785",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/r/ragel.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/ragel.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/ragel.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/r/ragel.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Ragel lexer.\n-var Ragel = internal.Register(MustNewLexer(\n+var Ragel = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Ragel\",\n \t\tAliases:   []string{\"ragel\"},\n \t\tFilenames: []string{},\n \t\tMimeTypes: []string{},\n \t},\n-\tRules{\n+\tragelRules,\n+))\n+\n+func ragelRules() Rules {\n+\treturn Rules{\n \t\t\"whitespace\": {\n \t\t\t{`\\s+`, TextWhitespace, nil},\n \t\t},\n@@ -72,5 +76,5 @@ var Ragel = internal.Register(MustNewLexer(\n \t\t\t{`\\{`, Punctuation, Push()},\n \t\t\t{`\\}`, Punctuation, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "a5f55e1f6e5a7ab493593c2aa23c49ff0c0e1660",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/r/raku.go",
      "status": "added",
      "additions": 1496,
      "deletions": 0,
      "changes": 1496,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/raku.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/raku.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/r/raku.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,1496 @@\n+package r\n+\n+import (\n+\t\"regexp\"\n+\t\"strings\"\n+\t\"unicode/utf8\"\n+\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+\t\"github.com/dlclark/regexp2\"\n+)\n+\n+// Raku lexer.\n+var Raku Lexer = internal.Register(MustNewLazyLexer(\n+\t&Config{\n+\t\tName:    \"Raku\",\n+\t\tAliases: []string{\"perl6\", \"pl6\", \"raku\"},\n+\t\tFilenames: []string{\n+\t\t\t\"*.pl\", \"*.pm\", \"*.nqp\", \"*.p6\", \"*.6pl\", \"*.p6l\", \"*.pl6\", \"*.6pm\",\n+\t\t\t\"*.p6m\", \"*.pm6\", \"*.t\", \"*.raku\", \"*.rakumod\", \"*.rakutest\", \"*.rakudoc\",\n+\t\t},\n+\t\tMimeTypes: []string{\n+\t\t\t\"text/x-perl6\", \"application/x-perl6\",\n+\t\t\t\"text/x-raku\", \"application/x-raku\",\n+\t\t},\n+\t\tDotAll: true,\n+\t},\n+\trakuRules,\n+))\n+\n+func rakuRules() Rules {\n+\ttype RakuToken int\n+\n+\tconst (\n+\t\trakuQuote RakuToken = iota\n+\t\trakuName\n+\t\trakuNameAttribute\n+\t\trakuPod\n+\t\trakuPodFormatter\n+\t\trakuPodDeclaration\n+\t\trakuMultilineComment\n+\t\trakuSlashRegex\n+\t\trakuMatchRegex\n+\t\trakuSubstitutionRegex\n+\t\trakuSubstitutionSingleRegex\n+\t\trakuRegexInsideToken\n+\t)\n+\n+\tconst (\n+\t\tcolonPairOpeningBrackets = `(?:<<|<|«|\\(|\\[|\\{)`\n+\t\tcolonPairClosingBrackets = `(?:>>|>|»|\\)|\\]|\\})`\n+\t\tcolonPairPattern         = `(?<colon>:)(?<key>\\w[\\w'-]*)(?<opening_delimiters>` + colonPairOpeningBrackets + `)`\n+\t\tnamePattern              = `((?:(?!` + colonPairPattern + `)[\\w':-])+)`\n+\t\tvariablePattern          = `[$@%&]+[.^:?=!~]?` + namePattern\n+\t\tglobalVariablePattern    = `[$@%&]+\\*` + namePattern\n+\t)\n+\n+\tkeywords := []string{\n+\t\t`BEGIN`, `CATCH`, `CHECK`, `CLOSE`, `CONTROL`, `DOC`, `END`, `ENTER`, `FIRST`, `INIT`,\n+\t\t`KEEP`, `LAST`, `LEAVE`, `NEXT`, `POST`, `PRE`, `QUIT`, `UNDO`, `anon`, `augment`, `but`,\n+\t\t`class`, `constant`, `default`, `does`, `else`, `elsif`, `enum`, `for`, `gather`, `given`,\n+\t\t`grammar`, `has`, `if`, `import`, `is`, `of`, `let`, `loop`, `made`, `make`, `method`,\n+\t\t`module`, `multi`, `my`, `need`, `orwith`, `our`, `proceed`, `proto`, `repeat`, `require`,\n+\t\t`where`, `return`, `return-rw`, `returns`, `->`, `-->`, `role`, `state`, `sub`, `no`,\n+\t\t`submethod`, `subset`, `succeed`, `supersede`, `try`, `unit`, `unless`, `until`,\n+\t\t`use`, `when`, `while`, `with`, `without`, `export`, `native`, `repr`, `required`, `rw`,\n+\t\t`symbol`, `default`, `cached`, `DEPRECATED`, `dynamic`, `hidden-from-backtrace`, `nodal`,\n+\t\t`pure`, `raw`, `start`, `react`, `supply`, `whenever`, `also`, `rule`, `token`, `regex`,\n+\t\t`dynamic-scope`, `built`, `temp`,\n+\t}\n+\n+\tkeywordsPattern := Words(`(?<!['\\w:-])`, `(?!['\\w:-])`, keywords...)\n+\n+\twordOperators := []string{\n+\t\t`X`, `Z`, `R`, `after`, `and`, `andthen`, `before`, `cmp`, `div`, `eq`, `eqv`, `extra`, `ge`,\n+\t\t`gt`, `le`, `leg`, `lt`, `mod`, `ne`, `or`, `orelse`, `x`, `xor`, `xx`, `gcd`, `lcm`,\n+\t\t`but`, `min`, `max`, `^fff`, `fff^`, `fff`, `^ff`, `ff^`, `ff`, `so`, `not`, `unicmp`,\n+\t\t`TR`, `o`, `(&)`, `(.)`, `(|)`, `(+)`, `(-)`, `(^)`, `coll`, `(elem)`, `(==)`,\n+\t\t`(cont)`, `(<)`, `(<=)`, `(>)`, `(>=)`, `minmax`, `notandthen`, `S`,\n+\t}\n+\n+\twordOperatorsPattern := Words(`(?<=^|\\b|\\s)`, `(?=$|\\b|\\s)`, wordOperators...)\n+\n+\toperators := []string{\n+\t\t`++`, `--`, `-`, `**`, `!`, `+`, `~`, `?`, `+^`, `~^`, `?^`, `^`, `*`, `/`, `%`, `%%`, `+&`,\n+\t\t`+<`, `+>`, `~&`, `~<`, `~>`, `?&`, `+|`, `+^`, `~|`, `~^`, `?`, `?|`, `?^`, `&`, `^`,\n+\t\t`<=>`, `^…^`, `^…`, `…^`, `…`, `...`, `...^`, `^...`, `^...^`, `..`, `..^`, `^..`, `^..^`,\n+\t\t`::=`, `:=`, `!=`, `==`, `<=`, `<`, `>=`, `>`, `~~`, `===`, `&&`, `||`, `|`, `^^`, `//`,\n+\t\t`??`, `!!`, `^fff^`, `^ff^`, `<==`, `==>`, `<<==`, `==>>`, `=>`, `=`, `<<`, `«`, `>>`, `»`,\n+\t\t`,`, `>>.`, `».`, `.&`, `.=`, `.^`, `.?`, `.+`, `.*`, `.`, `∘`, `∩`, `⊍`, `∪`, `⊎`, `∖`,\n+\t\t`⊖`, `≠`, `≤`, `≥`, `=:=`, `=~=`, `≅`, `∈`, `∉`, `≡`, `≢`, `∋`, `∌`, `⊂`, `⊄`, `⊆`, `⊈`,\n+\t\t`⊃`, `⊅`, `⊇`, `⊉`, `:`, `!!!`, `???`, `¯`, `×`, `÷`, `−`, `⁺`, `⁻`,\n+\t}\n+\n+\toperatorsPattern := Words(``, ``, operators...)\n+\n+\tbuiltinTypes := []string{\n+\t\t`False`, `True`, `Order`, `More`, `Less`, `Same`, `Any`, `Array`, `Associative`, `AST`,\n+\t\t`atomicint`, `Attribute`, `Backtrace`, `Backtrace::Frame`, `Bag`, `Baggy`, `BagHash`,\n+\t\t`Blob`, `Block`, `Bool`, `Buf`, `Callable`, `CallFrame`, `Cancellation`, `Capture`,\n+\t\t`CArray`, `Channel`, `Code`, `compiler`, `Complex`, `ComplexStr`, `CompUnit`,\n+\t\t`CompUnit::PrecompilationRepository`, `CompUnit::Repository`, `Empty`,\n+\t\t`CompUnit::Repository::FileSystem`, `CompUnit::Repository::Installation`, `Cool`,\n+\t\t`CurrentThreadScheduler`, `CX::Warn`, `CX::Take`, `CX::Succeed`, `CX::Return`, `CX::Redo`,\n+\t\t`CX::Proceed`, `CX::Next`, `CX::Last`, `CX::Emit`, `CX::Done`, `Cursor`, `Date`, `Dateish`,\n+\t\t`DateTime`, `Distribution`, `Distribution::Hash`, `Distribution::Locally`,\n+\t\t`Distribution::Path`, `Distribution::Resource`, `Distro`, `Duration`, `Encoding`,\n+\t\t`Encoding::Registry`, `Endian`, `Enumeration`, `Exception`, `Failure`, `FatRat`, `Grammar`,\n+\t\t`Hash`, `HyperWhatever`, `Instant`, `Int`, `int`, `int16`, `int32`, `int64`, `int8`, `str`,\n+\t\t`IntStr`, `IO`, `IO::ArgFiles`, `IO::CatHandle`, `IO::Handle`, `IO::Notification`,\n+\t\t`IO::Notification::Change`, `IO::Path`, `IO::Path::Cygwin`, `IO::Path::Parts`,\n+\t\t`IO::Path::QNX`, `IO::Path::Unix`, `IO::Path::Win32`, `IO::Pipe`, `IO::Socket`,\n+\t\t`IO::Socket::Async`, `IO::Socket::Async::ListenSocket`, `IO::Socket::INET`, `IO::Spec`,\n+\t\t`IO::Spec::Cygwin`, `IO::Spec::QNX`, `IO::Spec::Unix`, `IO::Spec::Win32`, `IO::Special`,\n+\t\t`Iterable`, `Iterator`, `Junction`, `Kernel`, `Label`, `List`, `Lock`, `Lock::Async`,\n+\t\t`Lock::ConditionVariable`, `long`, `longlong`, `Macro`, `Map`, `Match`,\n+\t\t`Metamodel::AttributeContainer`, `Metamodel::C3MRO`, `Metamodel::ClassHOW`,\n+\t\t`Metamodel::ConcreteRoleHOW`, `Metamodel::CurriedRoleHOW`, `Metamodel::DefiniteHOW`,\n+\t\t`Metamodel::Documenting`, `Metamodel::EnumHOW`, `Metamodel::Finalization`,\n+\t\t`Metamodel::MethodContainer`, `Metamodel::Mixins`, `Metamodel::MROBasedMethodDispatch`,\n+\t\t`Metamodel::MultipleInheritance`, `Metamodel::Naming`, `Metamodel::Primitives`,\n+\t\t`Metamodel::PrivateMethodContainer`, `Metamodel::RoleContainer`, `Metamodel::RolePunning`,\n+\t\t`Metamodel::Stashing`, `Metamodel::Trusting`, `Metamodel::Versioning`, `Method`, `Mix`,\n+\t\t`MixHash`, `Mixy`, `Mu`, `NFC`, `NFD`, `NFKC`, `NFKD`, `Nil`, `Num`, `num32`, `num64`,\n+\t\t`Numeric`, `NumStr`, `ObjAt`, `Order`, `Pair`, `Parameter`, `Perl`, `Pod::Block`,\n+\t\t`Pod::Block::Code`, `Pod::Block::Comment`, `Pod::Block::Declarator`, `Pod::Block::Named`,\n+\t\t`Pod::Block::Para`, `Pod::Block::Table`, `Pod::Heading`, `Pod::Item`, `Pointer`,\n+\t\t`Positional`, `PositionalBindFailover`, `Proc`, `Proc::Async`, `Promise`, `Proxy`,\n+\t\t`PseudoStash`, `QuantHash`, `RaceSeq`, `Raku`, `Range`, `Rat`, `Rational`, `RatStr`,\n+\t\t`Real`, `Regex`, `Routine`, `Routine::WrapHandle`, `Scalar`, `Scheduler`, `Semaphore`,\n+\t\t`Seq`, `Sequence`, `Set`, `SetHash`, `Setty`, `Signature`, `size_t`, `Slip`, `Stash`,\n+\t\t`Str`, `StrDistance`, `Stringy`, `Sub`, `Submethod`, `Supplier`, `Supplier::Preserving`,\n+\t\t`Supply`, `Systemic`, `Tap`, `Telemetry`, `Telemetry::Instrument::Thread`,\n+\t\t`Telemetry::Instrument::ThreadPool`, `Telemetry::Instrument::Usage`, `Telemetry::Period`,\n+\t\t`Telemetry::Sampler`, `Thread`, `Test`, `ThreadPoolScheduler`, `UInt`, `uint16`, `uint32`,\n+\t\t`uint64`, `uint8`, `Uni`, `utf8`, `ValueObjAt`, `Variable`, `Version`, `VM`, `Whatever`,\n+\t\t`WhateverCode`, `WrapHandle`, `NativeCall`,\n+\t\t// Pragmas\n+\t\t`precompilation`, `experimental`, `worries`, `MONKEY-TYPING`, `MONKEY-SEE-NO-EVAL`,\n+\t\t`MONKEY-GUTS`, `fatal`, `lib`, `isms`, `newline`, `nqp`, `soft`,\n+\t\t`strict`, `trace`, `variables`,\n+\t}\n+\n+\tbuiltinTypesPattern := Words(`(?<!['\\w:-])`, `(?::[_UD])?(?!['\\w:-])`, builtinTypes...)\n+\n+\tbuiltinRoutines := []string{\n+\t\t`ACCEPTS`, `abs`, `abs2rel`, `absolute`, `accept`, `accepts_type`, `accessed`, `acos`,\n+\t\t`acosec`, `acosech`, `acosh`, `acotan`, `acotanh`, `acquire`, `act`, `action`, `actions`,\n+\t\t`add`, `add_attribute`, `add_enum_value`, `add_fallback`, `add_method`, `add_parent`,\n+\t\t`add_private_method`, `add_role`, `add_stash`, `add_trustee`, `addendum`, `adverb`, `after`,\n+\t\t`all`, `allocate`, `allof`, `allowed`, `alternative-names`, `annotations`, `antipair`,\n+\t\t`antipairs`, `any`, `anyof`, `api`, `app_lifetime`, `append`, `arch`, `archetypes`,\n+\t\t`archname`, `args`, `ARGS-TO-CAPTURE`, `arity`, `Array`, `asec`, `asech`, `asin`, `asinh`,\n+\t\t`ASSIGN-KEY`, `ASSIGN-POS`, `assuming`, `ast`, `at`, `atan`, `atan2`, `atanh`, `AT-KEY`,\n+\t\t`atomic-assign`, `atomic-dec-fetch`, `atomic-fetch`, `atomic-fetch-add`, `atomic-fetch-dec`,\n+\t\t`atomic-fetch-inc`, `atomic-fetch-sub`, `atomic-inc-fetch`, `AT-POS`, `attributes`, `auth`,\n+\t\t`await`, `backend`, `backtrace`, `Bag`, `bag`, `Baggy`, `BagHash`, `bail-out`, `base`,\n+\t\t`basename`, `base-repeating`, `base_type`, `batch`, `BIND-KEY`, `BIND-POS`, `bind-stderr`,\n+\t\t`bind-stdin`, `bind-stdout`, `bind-udp`, `bits`, `bless`, `block`, `Bool`, `bool-only`,\n+\t\t`bounds`, `break`, `Bridge`, `broken`, `BUILD`, `TWEAK`, `build-date`, `bytes`, `cache`,\n+\t\t`callframe`, `calling-package`, `CALL-ME`, `callsame`, `callwith`, `can`, `cancel`,\n+\t\t`candidates`, `cando`, `can-ok`, `canonpath`, `caps`, `caption`, `Capture`, `capture`,\n+\t\t`cas`, `catdir`, `categorize`, `categorize-list`, `catfile`, `catpath`, `cause`, `ceiling`,\n+\t\t`cglobal`, `changed`, `Channel`, `channel`, `chars`, `chdir`, `child`, `child-name`,\n+\t\t`child-typename`, `chmod`, `chomp`, `chop`, `chr`, `chrs`, `chunks`, `cis`, `classify`,\n+\t\t`classify-list`, `cleanup`, `clone`, `close`, `closed`, `close-stdin`, `cmp-ok`, `code`,\n+\t\t`codename`, `codes`, `coerce_type`, `coll`, `collate`, `column`, `comb`, `combinations`,\n+\t\t`command`, `comment`, `compiler`, `Complex`, `compose`, `composalizer`, `compose_type`,\n+\t\t`compose_values`, `composer`, `compute_mro`, `condition`, `config`, `configure_destroy`,\n+\t\t`configure_type_checking`, `conj`, `connect`, `constraints`, `construct`, `contains`,\n+\t\t`content`, `contents`, `copy`, `cos`, `cosec`, `cosech`, `cosh`, `cotan`, `cotanh`, `count`,\n+\t\t`count-only`, `cpu-cores`, `cpu-usage`, `CREATE`, `create_type`, `cross`, `cue`, `curdir`,\n+\t\t`curupdir`, `d`, `Date`, `DateTime`, `day`, `daycount`, `day-of-month`, `day-of-week`,\n+\t\t`day-of-year`, `days-in-month`, `dd-mm-yyyy`, `declaration`, `decode`, `decoder`, `deepmap`,\n+\t\t`default`, `defined`, `DEFINITE`, `definite`, `delayed`, `delete`, `delete-by-compiler`,\n+\t\t`DELETE-KEY`, `DELETE-POS`, `denominator`, `desc`, `DESTROY`, `destroyers`, `devnull`,\n+\t\t`diag`, `did-you-mean`, `die`, `dies-ok`, `dir`, `dirname`, `distribution`, `dir-sep`,\n+\t\t`DISTROnames`, `do`, `does`, `does-ok`, `done`, `done-testing`, `duckmap`, `dynamic`, `e`,\n+\t\t`eager`, `earlier`, `elems`, `emit`, `enclosing`, `encode`, `encoder`, `encoding`, `end`,\n+\t\t`endian`, `ends-with`, `enum_from_value`, `enum_value_list`, `enum_values`, `enums`, `EOF`,\n+\t\t`eof`, `EVAL`, `eval-dies-ok`, `EVALFILE`, `eval-lives-ok`, `event`, `exception`,\n+\t\t`excludes-max`, `excludes-min`, `EXISTS-KEY`, `EXISTS-POS`, `exit`, `exitcode`, `exp`,\n+\t\t`expected`, `explicitly-manage`, `expmod`, `export_callback`, `extension`, `f`, `fail`,\n+\t\t`FALLBACK`, `fails-like`, `fc`, `feature`, `file`, `filename`, `files`, `find`,\n+\t\t`find_method`, `find_method_qualified`, `finish`, `first`, `flat`, `first-date-in-month`,\n+\t\t`flatmap`, `flip`, `floor`, `flunk`, `flush`, `flush_cache`, `fmt`, `format`, `formatter`,\n+\t\t`free-memory`, `freeze`, `from`, `from-list`, `from-loop`, `from-posix`, `from-slurpy`,\n+\t\t`full`, `full-barrier`, `GENERATE-USAGE`, `generate_mixin`, `get`, `get_value`, `getc`,\n+\t\t`gist`, `got`, `grab`, `grabpairs`, `grep`, `handle`, `handled`, `handles`, `hardware`,\n+\t\t`has_accessor`, `Hash`, `hash`, `head`, `headers`, `hh-mm-ss`, `hidden`, `hides`, `hostname`,\n+\t\t`hour`, `how`, `hyper`, `id`, `illegal`, `im`, `in`, `in-timezone`, `indent`, `index`,\n+\t\t`indices`, `indir`, `infinite`, `infix`, `postcirumfix`, `cicumfix`, `install`,\n+\t\t`install_method_cache`, `Instant`, `instead`, `Int`, `int-bounds`, `interval`, `in-timezone`,\n+\t\t`invalid-str`, `invert`, `invocant`, `IO`, `IO::Notification.watch-path`, `is_trusted`,\n+\t\t`is_type`, `isa`, `is-absolute`, `isa-ok`, `is-approx`, `is-deeply`, `is-hidden`,\n+\t\t`is-initial-thread`, `is-int`, `is-lazy`, `is-leap-year`, `isNaN`, `isnt`, `is-prime`,\n+\t\t`is-relative`, `is-routine`, `is-setting`, `is-win`, `item`, `iterator`, `join`, `keep`,\n+\t\t`kept`, `KERNELnames`, `key`, `keyof`, `keys`, `kill`, `kv`, `kxxv`, `l`, `lang`, `last`,\n+\t\t`lastcall`, `later`, `lazy`, `lc`, `leading`, `level`, `like`, `line`, `lines`, `link`,\n+\t\t`List`, `list`, `listen`, `live`, `lives-ok`, `load`, `load-repo-id`, `load-unit`, `loaded`,\n+\t\t`loads`, `local`, `lock`, `log`, `log10`, `lookup`, `lsb`, `made`, `MAIN`, `make`, `Map`,\n+\t\t`map`, `match`, `max`, `maxpairs`, `merge`, `message`, `method`, `meta`, `method_table`,\n+\t\t`methods`, `migrate`, `min`, `minmax`, `minpairs`, `minute`, `misplaced`, `Mix`, `mix`,\n+\t\t`MixHash`, `mixin`, `mixin_attribute`, `Mixy`, `mkdir`, `mode`, `modified`, `month`, `move`,\n+\t\t`mro`, `msb`, `multi`, `multiness`, `name`, `named`, `named_names`, `narrow`,\n+\t\t`nativecast`, `native-descriptor`, `nativesizeof`, `need`, `new`, `new_type`,\n+\t\t`new-from-daycount`, `new-from-pairs`, `next`, `nextcallee`, `next-handle`, `nextsame`,\n+\t\t`nextwith`, `next-interesting-index`, `NFC`, `NFD`, `NFKC`, `NFKD`, `nice`, `nl-in`,\n+\t\t`nl-out`, `nodemap`, `nok`, `normalize`, `none`, `norm`, `not`, `note`, `now`, `nude`,\n+\t\t`Num`, `numerator`, `Numeric`, `of`, `offset`, `offset-in-hours`, `offset-in-minutes`,\n+\t\t`ok`, `old`, `on-close`, `one`, `on-switch`, `open`, `opened`, `operation`, `optional`,\n+\t\t`ord`, `ords`, `orig`, `os-error`, `osname`, `out-buffer`, `pack`, `package`, `package-kind`,\n+\t\t`package-name`, `packages`, `Pair`, `pair`, `pairs`, `pairup`, `parameter`, `params`,\n+\t\t`parent`, `parent-name`, `parents`, `parse`, `parse-base`, `parsefile`, `parse-names`,\n+\t\t`parts`, `pass`, `path`, `path-sep`, `payload`, `peer-host`, `peer-port`, `periods`, `perl`,\n+\t\t`permutations`, `phaser`, `pick`, `pickpairs`, `pid`, `placeholder`, `plan`, `plus`,\n+\t\t`polar`, `poll`, `polymod`, `pop`, `pos`, `positional`, `posix`, `postfix`, `postmatch`,\n+\t\t`precomp-ext`, `precomp-target`, `precompiled`, `pred`, `prefix`, `prematch`, `prepend`,\n+\t\t`primary`, `print`, `printf`, `print-nl`, `print-to`, `private`, `private_method_names`,\n+\t\t`private_method_table`, `proc`, `produce`, `Promise`, `promise`, `prompt`, `protect`,\n+\t\t`protect-or-queue-on-recursion`, `publish_method_cache`, `pull-one`, `push`, `push-all`,\n+\t\t`push-at-least`, `push-exactly`, `push-until-lazy`, `put`, `qualifier-type`, `quaternary`,\n+\t\t`quit`, `r`, `race`, `radix`, `raku`, `rand`, `Range`, `range`, `Rat`, `raw`, `re`, `read`,\n+\t\t`read-bits`, `read-int128`, `read-int16`, `read-int32`, `read-int64`, `read-int8`,\n+\t\t`read-num32`, `read-num64`, `read-ubits`, `read-uint128`, `read-uint16`, `read-uint32`,\n+\t\t`read-uint64`, `read-uint8`, `readchars`, `readonly`, `ready`, `Real`, `reallocate`,\n+\t\t`reals`, `reason`, `rebless`, `receive`, `recv`, `redispatcher`, `redo`, `reduce`,\n+\t\t`rel2abs`, `relative`, `release`, `remove`, `rename`, `repeated`, `replacement`,\n+\t\t`replace-with`, `repo`, `repo-id`, `report`, `required`, `reserved`, `resolve`, `restore`,\n+\t\t`result`, `resume`, `rethrow`, `return`, `return-rw`, `returns`, `reverse`, `right`,\n+\t\t`rindex`, `rmdir`, `role`, `roles_to_compose`, `rolish`, `roll`, `rootdir`, `roots`,\n+\t\t`rotate`, `rotor`, `round`, `roundrobin`, `routine-type`, `run`, `RUN-MAIN`, `rw`, `rwx`,\n+\t\t`samecase`, `samemark`, `samewith`, `say`, `schedule-on`, `scheduler`, `scope`, `sec`,\n+\t\t`sech`, `second`, `secondary`, `seek`, `self`, `send`, `Seq`, `Set`, `set`, `serial`,\n+\t\t`set_hidden`, `set_name`, `set_package`, `set_rw`, `set_value`, `set_api`, `set_auth`,\n+\t\t`set_composalizer`, `set_export_callback`, `set_is_mixin`, `set_mixin_attribute`,\n+\t\t`set_package`, `set_ver`, `set_why`, `SetHash`, `Setty`, `set-instruments`,\n+\t\t`setup_finalization`, `setup_mixin_cache`, `shape`, `share`, `shell`, `short-id`,\n+\t\t`short-name`, `shortname`, `shift`, `sibling`, `sigil`, `sign`, `signal`, `signals`,\n+\t\t`signature`, `sin`, `sinh`, `sink`, `sink-all`, `skip`, `skip-at-least`,\n+\t\t`skip-at-least-pull-one`, `skip-one`, `skip-rest`, `sleep`, `sleep-timer`, `sleep-until`,\n+\t\t`Slip`, `slip`, `slurp`, `slurp-rest`, `slurpy`, `snap`, `snapper`, `so`, `socket-host`,\n+\t\t`socket-port`, `sort`, `source`, `source-package`, `spawn`, `SPEC`, `splice`, `split`,\n+\t\t`splitdir`, `splitpath`, `sprintf`, `spurt`, `sqrt`, `squish`, `srand`, `stable`, `start`,\n+\t\t`started`, `starts-with`, `status`, `stderr`, `stdout`, `STORE`, `store-file`,\n+\t\t`store-repo-id`, `store-unit`, `Str`, `Stringy`, `sub_signature`, `subbuf`, `subbuf-rw`,\n+\t\t`subname`, `subparse`, `subst`, `subst-mutate`, `substr`, `substr-eq`, `substr-rw`,\n+\t\t`subtest`, `succ`, `sum`, `suffix`, `summary`, `Supply`, `symlink`, `T`, `t`, `tail`,\n+\t\t`take`, `take-rw`, `tan`, `tanh`, `tap`, `target`, `target-name`, `tc`, `tclc`, `tell`,\n+\t\t`term`, `tertiary`, `then`, `throttle`, `throw`, `throws-like`, `time`, `timezone`,\n+\t\t`tmpdir`, `to`, `today`, `todo`, `toggle`, `to-posix`, `total`, `total-memory`, `trailing`,\n+\t\t`trans`, `tree`, `trim`, `trim-leading`, `trim-trailing`, `truncate`, `truncated-to`,\n+\t\t`trusts`, `try_acquire`, `trying`, `twigil`, `type`, `type_captures`, `type_check`,\n+\t\t`typename`, `uc`, `udp`, `uncaught_handler`, `undefine`, `unimatch`, `unicmp`, `uniname`,\n+\t\t`uninames`, `uninstall`, `uniparse`, `uniprop`, `uniprops`, `unique`, `unival`, `univals`,\n+\t\t`unlike`, `unlink`, `unlock`, `unpack`, `unpolar`, `unset`, `unshift`, `unwrap`, `updir`,\n+\t\t`USAGE`, `usage-name`, `use-ok`, `utc`, `val`, `value`, `values`, `VAR`, `variable`, `ver`,\n+\t\t`verbose-config`, `Version`, `version`, `VMnames`, `volume`, `vow`, `w`, `wait`, `warn`,\n+\t\t`watch`, `watch-path`, `week`, `weekday-of-month`, `week-number`, `week-year`, `WHAT`,\n+\t\t`what`, `when`, `WHERE`, `WHEREFORE`, `WHICH`, `WHO`, `whole-second`, `WHY`, `why`,\n+\t\t`with-lock-hidden-from-recursion-check`, `wordcase`, `words`, `workaround`, `wrap`,\n+\t\t`write`, `write-bits`, `write-int128`, `write-int16`, `write-int32`, `write-int64`,\n+\t\t`write-int8`, `write-num32`, `write-num64`, `write-ubits`, `write-uint128`, `write-uint16`,\n+\t\t`write-uint32`, `write-uint64`, `write-uint8`, `write-to`, `x`, `yada`, `year`, `yield`,\n+\t\t`yyyy-mm-dd`, `z`, `zip`, `zip-latest`, `HOW`, `s`, `DEPRECATED`, `trait_mod`,\n+\t}\n+\n+\tbuiltinRoutinesPattern := Words(`(?<!['\\w:-])`, `(?!['\\w-])`, builtinRoutines...)\n+\n+\t// A map of opening and closing brackets\n+\tbrackets := map[rune]rune{\n+\t\t'\\u0028': '\\u0029', '\\u003c': '\\u003e', '\\u005b': '\\u005d',\n+\t\t'\\u007b': '\\u007d', '\\u00ab': '\\u00bb', '\\u0f3a': '\\u0f3b',\n+\t\t'\\u0f3c': '\\u0f3d', '\\u169b': '\\u169c', '\\u2018': '\\u2019',\n+\t\t'\\u201a': '\\u2019', '\\u201b': '\\u2019', '\\u201c': '\\u201d',\n+\t\t'\\u201e': '\\u201d', '\\u201f': '\\u201d', '\\u2039': '\\u203a',\n+\t\t'\\u2045': '\\u2046', '\\u207d': '\\u207e', '\\u208d': '\\u208e',\n+\t\t'\\u2208': '\\u220b', '\\u2209': '\\u220c', '\\u220a': '\\u220d',\n+\t\t'\\u2215': '\\u29f5', '\\u223c': '\\u223d', '\\u2243': '\\u22cd',\n+\t\t'\\u2252': '\\u2253', '\\u2254': '\\u2255', '\\u2264': '\\u2265',\n+\t\t'\\u2266': '\\u2267', '\\u2268': '\\u2269', '\\u226a': '\\u226b',\n+\t\t'\\u226e': '\\u226f', '\\u2270': '\\u2271', '\\u2272': '\\u2273',\n+\t\t'\\u2274': '\\u2275', '\\u2276': '\\u2277', '\\u2278': '\\u2279',\n+\t\t'\\u227a': '\\u227b', '\\u227c': '\\u227d', '\\u227e': '\\u227f',\n+\t\t'\\u2280': '\\u2281', '\\u2282': '\\u2283', '\\u2284': '\\u2285',\n+\t\t'\\u2286': '\\u2287', '\\u2288': '\\u2289', '\\u228a': '\\u228b',\n+\t\t'\\u228f': '\\u2290', '\\u2291': '\\u2292', '\\u2298': '\\u29b8',\n+\t\t'\\u22a2': '\\u22a3', '\\u22a6': '\\u2ade', '\\u22a8': '\\u2ae4',\n+\t\t'\\u22a9': '\\u2ae3', '\\u22ab': '\\u2ae5', '\\u22b0': '\\u22b1',\n+\t\t'\\u22b2': '\\u22b3', '\\u22b4': '\\u22b5', '\\u22b6': '\\u22b7',\n+\t\t'\\u22c9': '\\u22ca', '\\u22cb': '\\u22cc', '\\u22d0': '\\u22d1',\n+\t\t'\\u22d6': '\\u22d7', '\\u22d8': '\\u22d9', '\\u22da': '\\u22db',\n+\t\t'\\u22dc': '\\u22dd', '\\u22de': '\\u22df', '\\u22e0': '\\u22e1',\n+\t\t'\\u22e2': '\\u22e3', '\\u22e4': '\\u22e5', '\\u22e6': '\\u22e7',\n+\t\t'\\u22e8': '\\u22e9', '\\u22ea': '\\u22eb', '\\u22ec': '\\u22ed',\n+\t\t'\\u22f0': '\\u22f1', '\\u22f2': '\\u22fa', '\\u22f3': '\\u22fb',\n+\t\t'\\u22f4': '\\u22fc', '\\u22f6': '\\u22fd', '\\u22f7': '\\u22fe',\n+\t\t'\\u2308': '\\u2309', '\\u230a': '\\u230b', '\\u2329': '\\u232a',\n+\t\t'\\u23b4': '\\u23b5', '\\u2768': '\\u2769', '\\u276a': '\\u276b',\n+\t\t'\\u276c': '\\u276d', '\\u276e': '\\u276f', '\\u2770': '\\u2771',\n+\t\t'\\u2772': '\\u2773', '\\u2774': '\\u2775', '\\u27c3': '\\u27c4',\n+\t\t'\\u27c5': '\\u27c6', '\\u27d5': '\\u27d6', '\\u27dd': '\\u27de',\n+\t\t'\\u27e2': '\\u27e3', '\\u27e4': '\\u27e5', '\\u27e6': '\\u27e7',\n+\t\t'\\u27e8': '\\u27e9', '\\u27ea': '\\u27eb', '\\u2983': '\\u2984',\n+\t\t'\\u2985': '\\u2986', '\\u2987': '\\u2988', '\\u2989': '\\u298a',\n+\t\t'\\u298b': '\\u298c', '\\u298d': '\\u298e', '\\u298f': '\\u2990',\n+\t\t'\\u2991': '\\u2992', '\\u2993': '\\u2994', '\\u2995': '\\u2996',\n+\t\t'\\u2997': '\\u2998', '\\u29c0': '\\u29c1', '\\u29c4': '\\u29c5',\n+\t\t'\\u29cf': '\\u29d0', '\\u29d1': '\\u29d2', '\\u29d4': '\\u29d5',\n+\t\t'\\u29d8': '\\u29d9', '\\u29da': '\\u29db', '\\u29f8': '\\u29f9',\n+\t\t'\\u29fc': '\\u29fd', '\\u2a2b': '\\u2a2c', '\\u2a2d': '\\u2a2e',\n+\t\t'\\u2a34': '\\u2a35', '\\u2a3c': '\\u2a3d', '\\u2a64': '\\u2a65',\n+\t\t'\\u2a79': '\\u2a7a', '\\u2a7d': '\\u2a7e', '\\u2a7f': '\\u2a80',\n+\t\t'\\u2a81': '\\u2a82', '\\u2a83': '\\u2a84', '\\u2a8b': '\\u2a8c',\n+\t\t'\\u2a91': '\\u2a92', '\\u2a93': '\\u2a94', '\\u2a95': '\\u2a96',\n+\t\t'\\u2a97': '\\u2a98', '\\u2a99': '\\u2a9a', '\\u2a9b': '\\u2a9c',\n+\t\t'\\u2aa1': '\\u2aa2', '\\u2aa6': '\\u2aa7', '\\u2aa8': '\\u2aa9',\n+\t\t'\\u2aaa': '\\u2aab', '\\u2aac': '\\u2aad', '\\u2aaf': '\\u2ab0',\n+\t\t'\\u2ab3': '\\u2ab4', '\\u2abb': '\\u2abc', '\\u2abd': '\\u2abe',\n+\t\t'\\u2abf': '\\u2ac0', '\\u2ac1': '\\u2ac2', '\\u2ac3': '\\u2ac4',\n+\t\t'\\u2ac5': '\\u2ac6', '\\u2acd': '\\u2ace', '\\u2acf': '\\u2ad0',\n+\t\t'\\u2ad1': '\\u2ad2', '\\u2ad3': '\\u2ad4', '\\u2ad5': '\\u2ad6',\n+\t\t'\\u2aec': '\\u2aed', '\\u2af7': '\\u2af8', '\\u2af9': '\\u2afa',\n+\t\t'\\u2e02': '\\u2e03', '\\u2e04': '\\u2e05', '\\u2e09': '\\u2e0a',\n+\t\t'\\u2e0c': '\\u2e0d', '\\u2e1c': '\\u2e1d', '\\u2e20': '\\u2e21',\n+\t\t'\\u3008': '\\u3009', '\\u300a': '\\u300b', '\\u300c': '\\u300d',\n+\t\t'\\u300e': '\\u300f', '\\u3010': '\\u3011', '\\u3014': '\\u3015',\n+\t\t'\\u3016': '\\u3017', '\\u3018': '\\u3019', '\\u301a': '\\u301b',\n+\t\t'\\u301d': '\\u301e', '\\ufd3e': '\\ufd3f', '\\ufe17': '\\ufe18',\n+\t\t'\\ufe35': '\\ufe36', '\\ufe37': '\\ufe38', '\\ufe39': '\\ufe3a',\n+\t\t'\\ufe3b': '\\ufe3c', '\\ufe3d': '\\ufe3e', '\\ufe3f': '\\ufe40',\n+\t\t'\\ufe41': '\\ufe42', '\\ufe43': '\\ufe44', '\\ufe47': '\\ufe48',\n+\t\t'\\ufe59': '\\ufe5a', '\\ufe5b': '\\ufe5c', '\\ufe5d': '\\ufe5e',\n+\t\t'\\uff08': '\\uff09', '\\uff1c': '\\uff1e', '\\uff3b': '\\uff3d',\n+\t\t'\\uff5b': '\\uff5d', '\\uff5f': '\\uff60', '\\uff62': '\\uff63',\n+\t}\n+\n+\tbracketsPattern := `[` + regexp.QuoteMeta(joinRuneMap(brackets)) + `]`\n+\n+\t// Finds opening brackets and their closing counterparts (including pod and heredoc)\n+\t// and modifies state groups and position accordingly\n+\tbracketsFinder := func(tokenClass RakuToken) MutatorFunc {\n+\t\treturn func(state *LexerState) error {\n+\t\t\tvar openingChars []rune\n+\t\t\tvar adverbs []rune\n+\t\t\tswitch tokenClass {\n+\t\t\tcase rakuRegexInsideToken:\n+\t\t\t\topeningChars = []rune(\"{\")\n+\t\t\tcase rakuPod:\n+\t\t\t\topeningChars = []rune(strings.Join(state.Groups[1:5], ``))\n+\t\t\tdefault:\n+\t\t\t\tadverbs = []rune(state.NamedGroups[`adverbs`])\n+\t\t\t\topeningChars = []rune(state.NamedGroups[`opening_delimiters`])\n+\t\t\t}\n+\n+\t\t\topeningChar := openingChars[0]\n+\n+\t\t\tnChars := len(openingChars)\n+\n+\t\t\tvar closingChar rune\n+\t\t\tvar closingCharExists bool\n+\t\t\tvar closingChars []rune\n+\n+\t\t\tswitch tokenClass {\n+\t\t\tcase rakuPod:\n+\t\t\t\tclosingChars = []rune(state.NamedGroups[`ws`] + `=end ` + state.NamedGroups[`name`])\n+\t\t\t\tclosingCharExists = true\n+\t\t\tdefault:\n+\t\t\t\tclosingChar, closingCharExists = brackets[openingChar]\n+\t\t\t}\n+\n+\t\t\tswitch tokenClass {\n+\t\t\tcase rakuPodFormatter:\n+\t\t\t\tstack, ok := state.Get(\"pod_formatter_stack\").([]RakuFormatterRules)\n+\t\t\t\tif !ok {\n+\t\t\t\t\tstack = []RakuFormatterRules{}\n+\t\t\t\t}\n+\t\t\t\tpopRule := makeRuleAndPushMaybe(RuleMakingConfig{\n+\t\t\t\t\tdelimiter:              []rune{closingChar},\n+\t\t\t\t\tnumberOfDelimiterChars: nChars,\n+\t\t\t\t\ttokenType:              Punctuation,\n+\t\t\t\t\tmutator:                Mutators(Pop(1), MutatorFunc(podFormatterPopper)),\n+\t\t\t\t})\n+\t\t\t\tvar formatter TokenType = StringOther\n+\t\t\t\tswitch state.NamedGroups[`keyword`] {\n+\t\t\t\tcase \"B\":\n+\t\t\t\t\tformatter = GenericStrong\n+\t\t\t\tcase \"I\":\n+\t\t\t\t\tformatter = GenericEmph\n+\t\t\t\tcase \"U\":\n+\t\t\t\t\tformatter = GenericUnderline\n+\t\t\t\t}\n+\t\t\t\tformattingRule := makeRuleAndPushMaybe(RuleMakingConfig{\n+\t\t\t\t\tpattern:   `.+?`,\n+\t\t\t\t\ttokenType: formatter,\n+\t\t\t\t\tmutator:   nil,\n+\t\t\t\t})\n+\t\t\t\tstate.Set(\"pod_formatter_stack\",\n+\t\t\t\t\tappend(stack, RakuFormatterRules{popRule, formattingRule}))\n+\n+\t\t\t\treturn nil\n+\t\t\tcase rakuMatchRegex, rakuSubstitutionSingleRegex, rakuRegexInsideToken:\n+\t\t\t\t// We're inside a regex\n+\t\t\t\t// While matching a regex, the closing chars may have been used inside the regex\n+\t\t\t\t// so we have to push to regex state and pop on the matched closing chars\n+\t\t\t\t// and return\n+\t\t\t\tvar delimiter []rune\n+\t\t\t\tif closingCharExists {\n+\t\t\t\t\tdelimiter = []rune{closingChar}\n+\t\t\t\t} else {\n+\t\t\t\t\tdelimiter = openingChars\n+\t\t\t\t}\n+\n+\t\t\t\tmakeRuleAndPushMaybe(RuleMakingConfig{\n+\t\t\t\t\tdelimiter:              delimiter,\n+\t\t\t\t\ttokenType:              Punctuation,\n+\t\t\t\t\tmutator:                Pop(1),\n+\t\t\t\t\trulePosition:           topRule,\n+\t\t\t\t\tstate:                  state,\n+\t\t\t\t\tstateName:              \"regex\",\n+\t\t\t\t\tpushToStack:            true,\n+\t\t\t\t\tnumberOfDelimiterChars: nChars,\n+\t\t\t\t})\n+\n+\t\t\t\treturn nil\n+\t\t\t}\n+\n+\t\t\ttext := state.Text\n+\n+\t\t\tvar endPos int\n+\n+\t\t\tvar nonMirroredOpeningCharPosition int\n+\n+\t\t\tif !closingCharExists {\n+\t\t\t\t// it's not a mirrored character, which means we\n+\t\t\t\t// just need to look for the next occurrence\n+\t\t\t\tnonMirroredOpeningCharPosition = indexAt(text, openingChars, state.Pos)\n+\t\t\t\tendPos = nonMirroredOpeningCharPosition\n+\t\t\t} else {\n+\t\t\t\tif tokenClass != rakuPod {\n+\t\t\t\t\tclosingChars = []rune(strings.Repeat(string(closingChar), nChars))\n+\t\t\t\t}\n+\n+\t\t\t\t// we need to look for the corresponding closing character,\n+\t\t\t\t// keep nesting in mind\n+\t\t\t\tnestingLevel := 1\n+\n+\t\t\t\tsearchPos := state.Pos - nChars\n+\n+\t\t\t\tvar nextClosePos int\n+\n+\t\t\t\tfor nestingLevel > 0 {\n+\t\t\t\t\tnextOpenPos := indexAt(text, openingChars, searchPos+nChars)\n+\t\t\t\t\tnextClosePos = indexAt(text, closingChars, searchPos+nChars)\n+\n+\t\t\t\t\tswitch {\n+\t\t\t\t\tcase nextClosePos == -1:\n+\t\t\t\t\t\tnextClosePos = len(text)\n+\t\t\t\t\t\tnestingLevel = 0\n+\t\t\t\t\tcase nextOpenPos != -1 && nextOpenPos < nextClosePos:\n+\t\t\t\t\t\tnestingLevel++\n+\t\t\t\t\t\tnChars = len(openingChars)\n+\t\t\t\t\t\tsearchPos = nextOpenPos\n+\t\t\t\t\tdefault: // next_close_pos < next_open_pos\n+\t\t\t\t\t\tnestingLevel--\n+\t\t\t\t\t\tnChars = len(closingChars)\n+\t\t\t\t\t\tsearchPos = nextClosePos\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\n+\t\t\t\tendPos = nextClosePos\n+\t\t\t}\n+\n+\t\t\tif endPos < 0 {\n+\t\t\t\t// if we didn't find a closer, just highlight the\n+\t\t\t\t// rest of the text in this class\n+\t\t\t\tendPos = len(text)\n+\t\t\t}\n+\n+\t\t\tadverbre := regexp.MustCompile(`:to\\b|:heredoc\\b`)\n+\t\t\tvar heredocTerminator []rune\n+\t\t\tif adverbre.MatchString(string(adverbs)) {\n+\t\t\t\theredocTerminator = text[state.Pos:endPos]\n+\t\t\t\tif len(heredocTerminator) > 0 {\n+\t\t\t\t\tendHeredocPos := indexAt(text[endPos:], heredocTerminator, 0)\n+\t\t\t\t\tnChars = len(heredocTerminator)\n+\t\t\t\t\tendPos += endHeredocPos\n+\t\t\t\t} else {\n+\t\t\t\t\tendPos = len(text)\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\ttextBetweenBrackets := string(text[state.Pos:endPos])\n+\t\t\tswitch tokenClass {\n+\t\t\tcase rakuPod, rakuPodDeclaration, rakuNameAttribute:\n+\t\t\t\tstate.NamedGroups[`value`] = textBetweenBrackets\n+\t\t\t\tstate.NamedGroups[`closing_delimiters`] = string(closingChars)\n+\t\t\tcase rakuQuote:\n+\t\t\t\tif len(heredocTerminator) > 0 {\n+\t\t\t\t\t// Length of heredoc terminator + closing chars + `;`\n+\t\t\t\t\theredocFristPunctuationLen := len(heredocTerminator) + len(openingChars) + 1\n+\n+\t\t\t\t\tstate.NamedGroups[`opening_delimiters`] = string(openingChars) +\n+\t\t\t\t\t\tstring(text[state.Pos:state.Pos+heredocFristPunctuationLen])\n+\n+\t\t\t\t\tstate.NamedGroups[`value`] =\n+\t\t\t\t\t\tstring(text[state.Pos+heredocFristPunctuationLen : endPos])\n+\n+\t\t\t\t\tstate.NamedGroups[`closing_delimiters`] = string(heredocTerminator)\n+\t\t\t\t} else {\n+\t\t\t\t\tstate.NamedGroups[`value`] = textBetweenBrackets\n+\t\t\t\t\tstate.NamedGroups[`closing_delimiters`] = string(closingChars)\n+\t\t\t\t}\n+\t\t\tdefault:\n+\t\t\t\tstate.Groups = []string{state.Groups[0] + string(text[state.Pos:endPos+nChars])}\n+\t\t\t}\n+\n+\t\t\tstate.Pos = endPos + nChars\n+\n+\t\t\treturn nil\n+\t\t}\n+\t}\n+\n+\t// Raku rules\n+\t// Empty capture groups are placeholders and will be replaced by bracketsFinder.\n+\t// DO NOT REMOVE THEM!\n+\treturn Rules{\n+\t\t\"root\": {\n+\t\t\tInclude(\"common\"),\n+\t\t\t{`[{}();]`, Punctuation, nil},\n+\t\t\t{`\\[|\\]`, Operator, nil},\n+\t\t\t{`.+?`, Text, nil},\n+\t\t},\n+\t\t\"common\": {\n+\t\t\t{`^#![^\\n]*$`, CommentHashbang, nil},\n+\t\t\tInclude(\"pod\"),\n+\t\t\t// Multi-line, Embedded comment\n+\t\t\t{\n+\t\t\t\t\"#`(?<opening_delimiters>(?<delimiter>\" + bracketsPattern + `)\\k<delimiter>*)`,\n+\t\t\t\tCommentMultiline,\n+\t\t\t\tbracketsFinder(rakuMultilineComment),\n+\t\t\t},\n+\t\t\t{`#[^\\n]*$`, CommentSingle, nil},\n+\t\t\t// /regex/\n+\t\t\t{\n+\t\t\t\t`(?<=(?:^|\\(|=|:|~~|\\[|,|=>)\\s*)(/)(?!\\]|\\))((?:\\\\\\\\|\\\\/|.)*?)((?<!(?<!\\\\)\\\\)/(?!'|\"))`,\n+\t\t\t\tByGroups(Punctuation, UsingSelf(\"regex\"), Punctuation),\n+\t\t\t\tMutatorFunc(makeRegexPoppingRule),\n+\t\t\t},\n+\t\t\tInclude(\"variable\"),\n+\t\t\t// ::?VARIABLE\n+\t\t\t{`::\\?\\w+(?::[_UD])?`, NameVariableGlobal, nil},\n+\t\t\t// Version\n+\t\t\t{\n+\t\t\t\t`\\b(v)(\\d+)((?:\\.(?:\\*|[\\d\\w]+))*)(\\+)?`,\n+\t\t\t\tByGroups(Keyword, NumberInteger, NameEntity, Operator),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\tInclude(\"number\"),\n+\t\t\t// Hyperoperator | »*«\n+\t\t\t{`(>>)(\\S+?)(<<)`, ByGroups(Operator, UsingSelf(\"root\"), Operator), nil},\n+\t\t\t{`(»)(\\S+?)(«)`, ByGroups(Operator, UsingSelf(\"root\"), Operator), nil},\n+\t\t\t// Hyperoperator | «*«\n+\t\t\t{`(<<)(\\S+?)(<<)`, ByGroups(Operator, UsingSelf(\"root\"), Operator), nil},\n+\t\t\t{`(«)(\\S+?)(«)`, ByGroups(Operator, UsingSelf(\"root\"), Operator), nil},\n+\t\t\t// Hyperoperator | »*»\n+\t\t\t{`(>>)(\\S+?)(>>)`, ByGroups(Operator, UsingSelf(\"root\"), Operator), nil},\n+\t\t\t{`(»)(\\S+?)(»)`, ByGroups(Operator, UsingSelf(\"root\"), Operator), nil},\n+\t\t\t// <<quoted words>>\n+\t\t\t{`(?<!(?:\\d+|\\.(?:Int|Numeric)|[$@%][\\w':-]+\\s+|[\\])}]\\s+)\\s*)(<<)(?!(?:(?!>>)[^\\n])+?[},;] *\\n)(?!(?:(?!>>).)+?>>\\S+?>>)`, Punctuation, Push(\"<<\")},\n+\t\t\t// «quoted words»\n+\t\t\t{`(?<!(?:\\d+|\\.(?:Int|Numeric)|[$@%][\\w':-]+\\s+|[\\])}]\\s+)\\s*)(«)(?![^»]+?[},;] *\\n)(?![^»]+?»\\S+?»)`, Punctuation, Push(\"«\")},\n+\t\t\t// [<]\n+\t\t\t{`(?<=\\[\\\\?)<(?=\\])`, Operator, nil},\n+\t\t\t// < and > operators | something < onething > something\n+\t\t\t{\n+\t\t\t\t`(?<=[$@%&]?\\w[\\w':-]* +)(<=?)( *[^ ]+? *)(>=?)(?= *[$@%&]?\\w[\\w':-]*)`,\n+\t\t\t\tByGroups(Operator, UsingSelf(\"root\"), Operator),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t// <quoted words>\n+\t\t\t{\n+\t\t\t\t`(?<!(?:\\d+|\\.(?:Int|Numeric)|[$@%][\\w':-]+\\s+|[\\])}]\\s+)\\s*)(<)((?:(?![,;)}] *(?:#[^\\n]+)?\\n)[^<>])+?)(>)(?!\\s*(?:\\d+|\\.(?:Int|Numeric)|[$@%]\\w[\\w':-]*[^(]|\\s+\\[))`,\n+\t\t\t\tByGroups(Punctuation, String, Punctuation),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t{`C?X::['\\w:-]+`, NameException, nil},\n+\t\t\tInclude(\"metaoperator\"),\n+\t\t\t// Pair | (key) => value\n+\t\t\t{\n+\t\t\t\t`(\\([^)]+\\))(\\s*)(=>)(\\s*)([^,\\n]+)(,?\\n*)`,\n+\t\t\t\tByGroups(UsingSelf(\"root\"), Text, Operator, Text, UsingSelf(\"root\"), Text),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t// Pair | key => value\n+\t\t\t{\n+\t\t\t\t`(\\w[\\w'-]*)(\\s*)(=>)(\\s*)([^,\\n]+)(,?\\n*)`,\n+\t\t\t\tByGroups(String, Text, Operator, Text, UsingSelf(\"root\"), Text),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\tInclude(\"colon-pair\"),\n+\t\t\t// Token\n+\t\t\t{\n+\t\t\t\t// Token with adverbs\n+\t\t\t\t`(?<=(?:^|\\s)(?:regex|token|rule)(\\s+))(['\\w:-]+)(?=:['\\w-]+` +\n+\t\t\t\t\tcolonPairOpeningBrackets + `.+?` + colonPairClosingBrackets + `[({])`,\n+\t\t\t\tNameFunction,\n+\t\t\t\tPush(\"token\", \"name-adverb\"),\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t// Token without adverbs\n+\t\t\t\t`(?<=(?:^|\\s)(?:regex|token|rule)(?:\\s+))(['\\w:-]+)`,\n+\t\t\t\tNameFunction,\n+\t\t\t\tPush(\"token\"),\n+\t\t\t},\n+\t\t\t// Substitution\n+\t\t\t{`(?<=^|\\b|\\s)(?<!\\.)(ss|S|s|TR|tr)\\b(\\s*)`, ByGroups(Keyword, Text), Push(\"substitution\")},\n+\t\t\t{keywordsPattern, Keyword, nil},\n+\t\t\t{builtinTypesPattern, NameBuiltin, nil},\n+\t\t\t{builtinRoutinesPattern, NameBuiltin, nil},\n+\t\t\t// Class name\n+\t\t\t{\n+\t\t\t\t`(?<=(?:^|\\s)(?:class|grammar|role|does|but|is|subset|of)\\s+)` + namePattern,\n+\t\t\t\tNameClass,\n+\t\t\t\tPush(\"name-adverb\"),\n+\t\t\t},\n+\t\t\t//  Routine\n+\t\t\t{\n+\t\t\t\t// Routine with adverbs\n+\t\t\t\t`(?<=(?:^|\\s)(?:sub|method|multi sub|multi)\\s+)!?['\\w:-]+(?=:['\\w-]+` +\n+\t\t\t\t\tcolonPairOpeningBrackets + `.+?` + colonPairClosingBrackets + `[({])`,\n+\t\t\t\tNameFunction,\n+\t\t\t\tPush(\"name-adverb\"),\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t// Routine without adverbs\n+\t\t\t\t`(?<=(?:^|\\s)(?:sub|submethod|method|multi)\\s+)!?['\\w:-]+`,\n+\t\t\t\tNameFunction,\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t// Constant\n+\t\t\t{`(?<=\\bconstant\\s+)` + namePattern, NameConstant, Push(\"name-adverb\")},\n+\t\t\t// Namespace\n+\t\t\t{`(?<=\\b(?:use|module|package)\\s+)` + namePattern, NameNamespace, Push(\"name-adverb\")},\n+\t\t\tInclude(\"operator\"),\n+\t\t\tInclude(\"single-quote\"),\n+\t\t\t{`(?<!(?<!\\\\)\\\\)\"`, Punctuation, Push(\"double-quotes\")},\n+\t\t\t// m,rx regex\n+\t\t\t{`(?<=^|\\b|\\s)(ms|m|rx)\\b(\\s*)`, ByGroups(Keyword, Text), Push(\"rx\")},\n+\t\t\t// Quote constructs\n+\t\t\t{\n+\t\t\t\t`(?<=^|\\b|\\s)(?<keyword>(?:qq|q|Q))(?<adverbs>(?::?(?:heredoc|to|qq|ww|q|w|s|a|h|f|c|b|to|v|x))*)(?<ws>\\s*)(?<opening_delimiters>(?<delimiter>[^0-9a-zA-Z:\\s])\\k<delimiter>*)`,\n+\t\t\t\tEmitterFunc(quote),\n+\t\t\t\tbracketsFinder(rakuQuote),\n+\t\t\t},\n+\t\t\t// Function\n+\t\t\t{\n+\t\t\t\t`\\b(?:\\w['\\w:-]*)(?=:['\\w-]+` +\n+\t\t\t\t\tcolonPairOpeningBrackets + `.+?` + colonPairClosingBrackets + `\\()`,\n+\t\t\t\tNameFunction,\n+\t\t\t\tPush(\"name-adverb\"),\n+\t\t\t},\n+\t\t\t{`\\b(?:\\w['\\w:-]*)(?=\\()`, NameFunction, nil},\n+\t\t\t// Method\n+\t\t\t// Method with adverb\n+\t\t\t{\n+\t\t\t\t`(?<!\\.\\.[?^*+]?)(?<=(?:\\.[?^*+&]?)|self!)['\\w:-]+(?=:['\\w-]+` +\n+\t\t\t\t\tcolonPairOpeningBrackets + `.+?` + colonPairClosingBrackets + `$)`,\n+\t\t\t\tNameFunction,\n+\t\t\t\tPush(\"name-adverb\"),\n+\t\t\t},\n+\t\t\t// Method without adverb\n+\t\t\t{`(?<!\\.\\.[?^*+]?)(?<=(?:\\.[?^*+&]?)|self!)['\\w:-]+`, NameFunction, nil},\n+\t\t\t// Indirect invocant\n+\t\t\t{namePattern + `(?=\\s+\\W?['\\w:-]+:\\W)`, NameFunction, Push(\"name-adverb\")},\n+\t\t\t{`(?<=\\W)(?:∅|i|e|𝑒|tau|τ|pi|π|Inf|∞)(?=\\W)`, NameConstant, nil},\n+\t\t\t{`(｢)([^｣]*)(｣)`, ByGroups(Punctuation, String, Punctuation), nil},\n+\t\t\t{`(?<=^ *)\\b` + namePattern + `(?=:\\s*(?:for|while|loop))`, NameLabel, nil},\n+\t\t\t// Sigilless variable\n+\t\t\t{\n+\t\t\t\t`(?<=\\b(?:my|our|constant|let|temp)\\s+)\\\\` + namePattern,\n+\t\t\t\tNameVariable,\n+\t\t\t\tPush(\"name-adverb\"),\n+\t\t\t},\n+\t\t\t{namePattern, Name, Push(\"name-adverb\")},\n+\t\t},\n+\t\t\"rx\": {\n+\t\t\tInclude(\"colon-pair-attribute\"),\n+\t\t\t{\n+\t\t\t\t`(?<opening_delimiters>(?<delimiter>[^\\w:\\s])\\k<delimiter>*)`,\n+\t\t\t\tByGroupNames(map[string]Emitter{\n+\t\t\t\t\t`opening_delimiters`: Punctuation,\n+\t\t\t\t\t`delimiter`:          nil,\n+\t\t\t\t}),\n+\t\t\t\tMutators(Pop(1), bracketsFinder(rakuMatchRegex)),\n+\t\t\t},\n+\t\t},\n+\t\t\"substitution\": {\n+\t\t\tInclude(\"colon-pair-attribute\"),\n+\t\t\t// Substitution | s{regex} = value\n+\t\t\t{\n+\t\t\t\t`(?<opening_delimiters>(?<delimiter>` + bracketsPattern + `)\\k<delimiter>*)`,\n+\t\t\t\tByGroupNames(map[string]Emitter{\n+\t\t\t\t\t`opening_delimiters`: Punctuation,\n+\t\t\t\t\t`delimiter`:          nil,\n+\t\t\t\t}),\n+\t\t\t\tMutators(Pop(1), bracketsFinder(rakuSubstitutionSingleRegex)),\n+\t\t\t},\n+\t\t\t// Substitution | s/regex/string/\n+\t\t\t{\n+\t\t\t\t`([^\\w:\\s])((?:\\\\\\\\|\\\\/|.)*?)(\\1)((?:\\\\\\\\|\\\\/|.)*?)(\\1)`,\n+\t\t\t\tByGroups(\n+\t\t\t\t\tPunctuation, UsingSelf(\"regex\"), Punctuation, UsingSelf(\"qq\"), Punctuation,\n+\t\t\t\t),\n+\t\t\t\tMutators(Pop(1), MutatorFunc(makeRegexPoppingRule)),\n+\t\t\t},\n+\t\t},\n+\t\t\"number\": {\n+\t\t\t{`0_?[0-7]+(_[0-7]+)*`, LiteralNumberOct, nil},\n+\t\t\t{`0x[0-9A-Fa-f]+(_[0-9A-Fa-f]+)*`, LiteralNumberHex, nil},\n+\t\t\t{`0b[01]+(_[01]+)*`, LiteralNumberBin, nil},\n+\t\t\t{\n+\t\t\t\t`(?i)(\\d*(_\\d*)*\\.\\d+(_\\d*)*|\\d+(_\\d*)*\\.\\d+(_\\d*)*)(e[+-]?\\d+)?`,\n+\t\t\t\tLiteralNumberFloat,\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t{`(?i)\\d+(_\\d*)*e[+-]?\\d+(_\\d*)*`, LiteralNumberFloat, nil},\n+\t\t\t{`(?<=\\d+)i`, NameConstant, nil},\n+\t\t\t{`\\d+(_\\d+)*`, LiteralNumberInteger, nil},\n+\t\t},\n+\t\t\"name-adverb\": {\n+\t\t\tInclude(\"colon-pair-attribute-keyvalue\"),\n+\t\t\tDefault(Pop(1)),\n+\t\t},\n+\t\t\"colon-pair\": {\n+\t\t\t// :key(value)\n+\t\t\t{colonPairPattern, colonPair(String), bracketsFinder(rakuNameAttribute)},\n+\t\t\t// :123abc\n+\t\t\t{\n+\t\t\t\t`(:)(\\d+)(\\w[\\w'-]*)(\\s*[,;)]?\\s*$)`,\n+\t\t\t\tByGroups(Punctuation, UsingSelf(\"number\"), String, Text),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t// :key\n+\t\t\t{`(:!?)(\\w[\\w'-]*)`, ByGroups(Punctuation, String), nil},\n+\t\t\t{`\\s+`, Text, nil},\n+\t\t},\n+\t\t\"colon-pair-attribute\": {\n+\t\t\t// :key(value)\n+\t\t\t{colonPairPattern, colonPair(NameAttribute), bracketsFinder(rakuNameAttribute)},\n+\t\t\t// :123abc\n+\t\t\t{\n+\t\t\t\t`(:)(\\d+)(\\w+)(\\s*[,;)]?\\s*$)`,\n+\t\t\t\tByGroups(Punctuation, UsingSelf(\"number\"), NameAttribute, Text),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t// :key\n+\t\t\t{`(:!?)(\\w[\\w'-]*)`, ByGroups(Punctuation, NameAttribute), nil},\n+\t\t\t{`\\s+`, Text, nil},\n+\t\t},\n+\t\t\"colon-pair-attribute-keyvalue\": {\n+\t\t\t// :key(value)\n+\t\t\t{colonPairPattern, colonPair(NameAttribute), bracketsFinder(rakuNameAttribute)},\n+\t\t},\n+\t\t\"escape-qq\": {\n+\t\t\t{\n+\t\t\t\t`(?<!(?<!\\\\)\\\\)(\\\\qq)(\\[)(.+?)(\\])`,\n+\t\t\t\tByGroups(StringEscape, Punctuation, UsingSelf(\"qq\"), Punctuation),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t},\n+\t\t\"escape-c-name\": {\n+\t\t\t{\n+\t\t\t\t`(?<!(?<!\\\\)\\\\)(\\\\[c|C])(\\[)(.+?)(\\])`,\n+\t\t\t\tByGroups(StringEscape, Punctuation, String, Punctuation),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t},\n+\t\t\"escape-hexadecimal\": {\n+\t\t\t{\n+\t\t\t\t`(?<!(?<!\\\\)\\\\)(\\\\[x|X])(\\[)([0-9a-fA-F]+)(\\])`,\n+\t\t\t\tByGroups(StringEscape, Punctuation, NumberHex, Punctuation),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t{`(\\\\[x|X])([0-9a-fA-F]+)`, ByGroups(StringEscape, NumberHex), nil},\n+\t\t},\n+\t\t\"regex\": {\n+\t\t\t// Placeholder, will be overwritten by bracketsFinder, DO NOT REMOVE!\n+\t\t\t{`^$`, nil, nil},\n+\t\t\tInclude(\"regex-escape-class\"),\n+\t\t\t// $(code)\n+\t\t\t{\n+\t\t\t\t`(?<!(?<!\\\\)\\\\)([$@])(\\()(.*?)(\\))`,\n+\t\t\t\tByGroups(Keyword, Punctuation, UsingSelf(\"root\"), Punctuation),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t// Exclude $/ from variables, because we can't get out of the end of the slash regex: $/;\n+\t\t\t{`\\$(?=/)`, NameEntity, nil},\n+\t\t\t// Exclude $ from variables\n+\t\t\t{`\\$(?=\\z|\\s|[^<(\\w*!.])`, NameEntity, nil},\n+\t\t\tInclude(\"variable\"),\n+\t\t\tInclude(\"escape-c-name\"),\n+\t\t\tInclude(\"escape-hexadecimal\"),\n+\t\t\tInclude(\"number\"),\n+\t\t\tInclude(\"single-quote\"),\n+\t\t\t// :my variable code ...\n+\t\t\t{\n+\t\t\t\t`(?<!(?<!\\\\)\\\\)(:)(my|our|state|constant|temp|let)(.+?;)`,\n+\t\t\t\tByGroups(Operator, KeywordDeclaration, UsingSelf(\"root\")),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t// <{code}>\n+\t\t\t{\n+\t\t\t\t`(?<!(?<!\\\\)\\\\)(<)([?!])?((?<!(?<!\\\\)\\\\){)(.*?)(}>)`,\n+\t\t\t\tByGroups(Punctuation, Operator, Punctuation, UsingSelf(\"root\"), Punctuation),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t// {code}\n+\t\t\t{`(?<!(?<!\\\\)\\\\)({)(.*?)(})`, ByGroups(Punctuation, UsingSelf(\"root\"), Punctuation), nil},\n+\t\t\t// Properties\n+\t\t\t{`(:)(\\w+)`, ByGroups(Punctuation, NameAttribute), nil},\n+\t\t\t// Operator\n+\t\t\t{`\\|\\||\\||&&|&|\\.\\.|\\*\\*|%%|%|:|!|<<|«|>>|»|\\+|\\*\\*|\\*|\\?|=|~|<~~>`, Operator, nil},\n+\t\t\t// Anchors\n+\t\t\t{`\\^\\^|\\^|\\$\\$|\\$`, NameEntity, nil},\n+\t\t\t{`\\.`, NameEntity, nil},\n+\t\t\t{`#[^\\n]*\\n`, CommentSingle, nil},\n+\t\t\t// Lookaround\n+\t\t\t{\n+\t\t\t\t`(?<!(?<!\\\\)\\\\)(<)(\\s*)([?!.])(\\s*)(after|before)`,\n+\t\t\t\tByGroups(Punctuation, Text, Operator, Text, OperatorWord),\n+\t\t\t\tPush(\"regex\"),\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t`(?<!(?<!\\\\)\\\\)(<)([|!?.]*)(wb|ww|ws|w)(>)`,\n+\t\t\t\tByGroups(Punctuation, Operator, OperatorWord, Punctuation),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t// <$variable>\n+\t\t\t{\n+\t\t\t\t`(?<!(?<!\\\\)\\\\)(<)([$@]\\w[\\w-:]*)(>)`,\n+\t\t\t\tByGroups(Punctuation, NameVariable, Punctuation),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t// Capture markers\n+\t\t\t{`(?<!(?<!\\\\)\\\\)<\\(|\\)>`, Operator, nil},\n+\t\t\t{`(?<!(?<!\\\\)\\\\)<`, Punctuation, Push(\"regex-property\")},\n+\t\t\t{`(?<!(?<!\\\\)\\\\)\"`, Punctuation, Push(\"double-quotes\")},\n+\t\t\t{`(?<!(?<!\\\\)\\\\)(?:\\]|\\)|>)`, Punctuation, Pop(1)},\n+\t\t\t{`(?<!(?<!\\\\)\\\\)(?:\\[|\\()`, Punctuation, Push(\"regex\")},\n+\t\t\t{`.+?`, StringRegex, nil},\n+\t\t},\n+\t\t\"regex-class-builtin\": {\n+\t\t\t{\n+\t\t\t\t`\\b(?:alnum|alpha|blank|cntrl|digit|graph|lower|print|punct|space|upper|xdigit|same|ident)\\b`,\n+\t\t\t\tNameBuiltin,\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t},\n+\t\t\"regex-property\": {\n+\t\t\t{`(?<!(?<!\\\\)\\\\)>`, Punctuation, Pop(1)},\n+\t\t\tInclude(\"regex-class-builtin\"),\n+\t\t\tInclude(\"variable\"),\n+\t\t\t// <regexfunc> | <regexfunc(parameter)> | <variable=regexfunc>\n+\t\t\t{\n+\t\t\t\t`(?:(\\w[\\w-:]*)(=\\.?))?(&?\\w[\\w'-:]+?)(\\(.+?\\))?(?=>)`,\n+\t\t\t\tByGroups(\n+\t\t\t\t\tNameVariable, Operator, NameFunction, UsingSelf(\"root\"),\n+\t\t\t\t),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t// <func: value>\n+\t\t\t{\n+\t\t\t\t`(&?\\w[\\w':-]*?)(:)((?:.*?(?:\\$<\\w[\\w':-]*>)?.*?)*?)(?=>)`,\n+\t\t\t\tByGroups(\n+\t\t\t\t\tNameFunction, Punctuation, UsingSelf(\"root\"),\n+\t\t\t\t),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\tInclude(\"colon-pair-attribute\"),\n+\t\t\t{`(?<!(?<!\\\\)\\\\)\\[`, Punctuation, Push(\"regex-character-class\")},\n+\t\t\t{`\\+|\\-`, Operator, nil},\n+\t\t\t{`@[\\w'-:]+`, NameVariable, nil},\n+\t\t\t{`(?<=<)[|!?.]`, Operator, nil},\n+\t\t\t{`.+?`, StringRegex, nil},\n+\t\t},\n+\t\t\"regex-escape-class\": {\n+\t\t\t{`(?i)\\\\n|\\\\t|\\\\h|\\\\v|\\\\s|\\\\d|\\\\w`, StringEscape, nil},\n+\t\t},\n+\t\t\"regex-character-class\": {\n+\t\t\t{`(?<!(?<!\\\\)\\\\)\\]`, Punctuation, Pop(1)},\n+\t\t\tInclude(\"regex-escape-class\"),\n+\t\t\tInclude(\"escape-c-name\"),\n+\t\t\tInclude(\"escape-hexadecimal\"),\n+\t\t\tInclude(\"number\"),\n+\t\t\t{`\\.\\.`, Operator, nil},\n+\t\t\t{`.+?`, StringRegex, nil},\n+\t\t},\n+\t\t\"metaoperator\": {\n+\t\t\t// Z[=>]\n+\t\t\t{\n+\t\t\t\t`\\b([RZX]+)\\b(\\[)([^\\s\\]]+?)(\\])`,\n+\t\t\t\tByGroups(OperatorWord, Punctuation, UsingSelf(\"root\"), Punctuation),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t// Z=>\n+\t\t\t{`\\b([RZX]+)\\b([^\\s\\]]+)`, ByGroups(OperatorWord, UsingSelf(\"operator\")), nil},\n+\t\t},\n+\t\t\"operator\": {\n+\t\t\t// Word Operator\n+\t\t\t{wordOperatorsPattern, OperatorWord, nil},\n+\t\t\t// Operator\n+\t\t\t{operatorsPattern, Operator, nil},\n+\t\t},\n+\t\t\"pod\": {\n+\t\t\t// Single-line pod declaration\n+\t\t\t{`(#[|=])\\s`, Keyword, Push(\"pod-single\")},\n+\t\t\t// Multi-line pod declaration\n+\t\t\t{\n+\t\t\t\t\"(?<keyword>#[|=])(?<opening_delimiters>(?<delimiter>\" + bracketsPattern + `)\\k<delimiter>*)(?<value>)(?<closing_delimiters>)`,\n+\t\t\t\tByGroupNames(\n+\t\t\t\t\tmap[string]Emitter{\n+\t\t\t\t\t\t`keyword`:            Keyword,\n+\t\t\t\t\t\t`opening_delimiters`: Punctuation,\n+\t\t\t\t\t\t`delimiter`:          nil,\n+\t\t\t\t\t\t`value`:              UsingSelf(\"pod-begin\"),\n+\t\t\t\t\t\t`closing_delimiters`: Punctuation,\n+\t\t\t\t\t}),\n+\t\t\t\tbracketsFinder(rakuPodDeclaration),\n+\t\t\t},\n+\t\t\tInclude(\"pod-blocks\"),\n+\t\t},\n+\t\t\"pod-blocks\": {\n+\t\t\t// =begin code\n+\t\t\t{\n+\t\t\t\t`(?<=^ *)(?<ws> *)(?<keyword>=begin)(?<ws2> +)(?<name>code)(?<config>[^\\n]*)(?<value>.*?)(?<ws3>^\\k<ws>)(?<end_keyword>=end)(?<ws4> +)\\k<name>`,\n+\t\t\t\tEmitterFunc(podCode),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t// =begin\n+\t\t\t{\n+\t\t\t\t`(?<=^ *)(?<ws> *)(?<keyword>=begin)(?<ws2> +)(?!code)(?<name>\\w[\\w'-]*)(?<config>[^\\n]*)(?<value>)(?<closing_delimiters>)`,\n+\t\t\t\tByGroupNames(\n+\t\t\t\t\tmap[string]Emitter{\n+\t\t\t\t\t\t`ws`:                 Comment,\n+\t\t\t\t\t\t`keyword`:            Keyword,\n+\t\t\t\t\t\t`ws2`:                StringDoc,\n+\t\t\t\t\t\t`name`:               Keyword,\n+\t\t\t\t\t\t`config`:             EmitterFunc(podConfig),\n+\t\t\t\t\t\t`value`:              UsingSelf(\"pod-begin\"),\n+\t\t\t\t\t\t`closing_delimiters`: Keyword,\n+\t\t\t\t\t}),\n+\t\t\t\tbracketsFinder(rakuPod),\n+\t\t\t},\n+\t\t\t// =for ...\n+\t\t\t{\n+\t\t\t\t`(?<=^ *)(?<ws> *)(?<keyword>=(?:for|defn))(?<ws2> +)(?<name>\\w[\\w'-]*)(?<config>[^\\n]*\\n)`,\n+\t\t\t\tByGroups(Comment, Keyword, StringDoc, Keyword, EmitterFunc(podConfig)),\n+\t\t\t\tPush(\"pod-paragraph\"),\n+\t\t\t},\n+\t\t\t// =config\n+\t\t\t{\n+\t\t\t\t`(?<=^ *)(?<ws> *)(?<keyword>=config)(?<ws2> +)(?<name>\\w[\\w'-]*)(?<config>[^\\n]*\\n)`,\n+\t\t\t\tByGroups(Comment, Keyword, StringDoc, Keyword, EmitterFunc(podConfig)),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t// =alias\n+\t\t\t{\n+\t\t\t\t`(?<=^ *)(?<ws> *)(?<keyword>=alias)(?<ws2> +)(?<name>\\w[\\w'-]*)(?<value>[^\\n]*\\n)`,\n+\t\t\t\tByGroups(Comment, Keyword, StringDoc, Keyword, StringDoc),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t// =encoding\n+\t\t\t{\n+\t\t\t\t`(?<=^ *)(?<ws> *)(?<keyword>=encoding)(?<ws2> +)(?<name>[^\\n]+)`,\n+\t\t\t\tByGroups(Comment, Keyword, StringDoc, Name),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t// =para ...\n+\t\t\t{\n+\t\t\t\t`(?<=^ *)(?<ws> *)(?<keyword>=(?:para|table|pod))(?<config>(?<!\\n\\s*)[^\\n]*\\n)`,\n+\t\t\t\tByGroups(Comment, Keyword, EmitterFunc(podConfig)),\n+\t\t\t\tPush(\"pod-paragraph\"),\n+\t\t\t},\n+\t\t\t// =head1 ...\n+\t\t\t{\n+\t\t\t\t`(?<=^ *)(?<ws> *)(?<keyword>=head\\d+)(?<ws2> *)(?<config>#?)`,\n+\t\t\t\tByGroups(Comment, Keyword, GenericHeading, Keyword),\n+\t\t\t\tPush(\"pod-single-heading\"),\n+\t\t\t},\n+\t\t\t// =item ...\n+\t\t\t{\n+\t\t\t\t`(?<=^ *)(?<ws> *)(?<keyword>=(?:item\\d*|comment|data|[A-Z]+))(?<ws2> *)(?<config>#?)`,\n+\t\t\t\tByGroups(Comment, Keyword, StringDoc, Keyword),\n+\t\t\t\tPush(\"pod-single\"),\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t`(?<=^ *)(?<ws> *)(?<keyword>=finish)(?<config>[^\\n]*)`,\n+\t\t\t\tByGroups(Comment, Keyword, EmitterFunc(podConfig)),\n+\t\t\t\tPush(\"pod-finish\"),\n+\t\t\t},\n+\t\t\t// ={custom} ...\n+\t\t\t{\n+\t\t\t\t`(?<=^ *)(?<ws> *)(?<name>=\\w[\\w'-]*)(?<ws2> *)(?<config>#?)`,\n+\t\t\t\tByGroups(Comment, Name, StringDoc, Keyword),\n+\t\t\t\tPush(\"pod-single\"),\n+\t\t\t},\n+\t\t\t// = podconfig\n+\t\t\t{\n+\t\t\t\t`(?<=^ *)(?<keyword> *=)(?<ws> *)(?<config>(?::\\w[\\w'-]*(?:` + colonPairOpeningBrackets + `.+?` +\n+\t\t\t\t\tcolonPairClosingBrackets + `) *)*\\n)`,\n+\t\t\t\tByGroups(Keyword, StringDoc, EmitterFunc(podConfig)),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t},\n+\t\t\"pod-begin\": {\n+\t\t\tInclude(\"pod-blocks\"),\n+\t\t\tInclude(\"pre-pod-formatter\"),\n+\t\t\t{`.+?`, StringDoc, nil},\n+\t\t},\n+\t\t\"pod-paragraph\": {\n+\t\t\t{`\\n\\s*?\\n`, StringDoc, Pop(1)},\n+\t\t\tInclude(\"pre-pod-formatter\"),\n+\t\t\t{`.+?`, StringDoc, nil},\n+\t\t},\n+\t\t\"pod-single\": {\n+\t\t\t{`\\n`, StringDoc, Pop(1)},\n+\t\t\tInclude(\"pre-pod-formatter\"),\n+\t\t\t{`.+?`, StringDoc, nil},\n+\t\t},\n+\t\t\"pod-single-heading\": {\n+\t\t\t{`\\n`, GenericHeading, Pop(1)},\n+\t\t\tInclude(\"pre-pod-formatter\"),\n+\t\t\t{`.+?`, GenericHeading, nil},\n+\t\t},\n+\t\t\"pod-finish\": {\n+\t\t\t{`\\z`, nil, Pop(1)},\n+\t\t\tInclude(\"pre-pod-formatter\"),\n+\t\t\t{`.+?`, StringDoc, nil},\n+\t\t},\n+\t\t\"pre-pod-formatter\": {\n+\t\t\t// C<code>, B<bold>, ...\n+\t\t\t{\n+\t\t\t\t`(?<keyword>[CBIUDTKRPAELZVMSXN])(?<opening_delimiters><+|«)`,\n+\t\t\t\tByGroups(Keyword, Punctuation),\n+\t\t\t\tMutators(\n+\t\t\t\t\tbracketsFinder(rakuPodFormatter),\n+\t\t\t\t\tPush(\"pod-formatter\"), MutatorFunc(podFormatter),\n+\t\t\t\t),\n+\t\t\t},\n+\t\t},\n+\t\t\"pod-formatter\": {\n+\t\t\t// Placeholder rule, will be replaced by podFormatter. DO NOT REMOVE!\n+\t\t\t{`>`, Punctuation, Pop(1)},\n+\t\t\tInclude(\"pre-pod-formatter\"),\n+\t\t\t// Placeholder rule, will be replaced by podFormatter. DO NOT REMOVE!\n+\t\t\t{`.+?`, StringOther, nil},\n+\t\t},\n+\t\t\"variable\": {\n+\t\t\t{variablePattern, NameVariable, Push(\"name-adverb\")},\n+\t\t\t{globalVariablePattern, NameVariableGlobal, Push(\"name-adverb\")},\n+\t\t\t{`[$@](?:<.*?>)+`, NameVariable, nil},\n+\t\t\t{`\\$/`, NameVariable, nil},\n+\t\t\t{`\\$!`, NameVariable, nil},\n+\t\t\t{`[$@%]`, NameVariable, nil},\n+\t\t},\n+\t\t\"single-quote\": {\n+\t\t\t{`(?<!(?<!\\\\)\\\\)'`, Punctuation, Push(\"single-quote-inner\")},\n+\t\t},\n+\t\t\"single-quote-inner\": {\n+\t\t\t{`(?<!(?<!(?<!\\\\)\\\\)\\\\)'`, Punctuation, Pop(1)},\n+\t\t\tInclude(\"escape-qq\"),\n+\t\t\t{`(?:\\\\\\\\|\\\\[^\\\\]|[^'\\\\])+?`, StringSingle, nil},\n+\t\t},\n+\t\t\"double-quotes\": {\n+\t\t\t{`(?<!(?<!\\\\)\\\\)\"`, Punctuation, Pop(1)},\n+\t\t\tInclude(\"qq\"),\n+\t\t},\n+\t\t\"<<\": {\n+\t\t\t{`>>(?!\\s*(?:\\d+|\\.(?:Int|Numeric)|[$@%][\\w':-]+|\\s+\\[))`, Punctuation, Pop(1)},\n+\t\t\tInclude(\"ww\"),\n+\t\t},\n+\t\t\"«\": {\n+\t\t\t{`»(?!\\s*(?:\\d+|\\.(?:Int|Numeric)|[$@%][\\w':-]+|\\s+\\[))`, Punctuation, Pop(1)},\n+\t\t\tInclude(\"ww\"),\n+\t\t},\n+\t\t\"ww\": {\n+\t\t\tInclude(\"single-quote\"),\n+\t\t\tInclude(\"qq\"),\n+\t\t},\n+\t\t\"qq\": {\n+\t\t\tInclude(\"qq-variable\"),\n+\t\t\t// Function with adverb\n+\t\t\t{\n+\t\t\t\t`\\w[\\w:'-]+(?=:['\\w-]+` +\n+\t\t\t\t\tcolonPairOpeningBrackets + `.+?` + colonPairClosingBrackets + `\\()`,\n+\t\t\t\tNameFunction,\n+\t\t\t\tPush(\"qq-function\", \"name-adverb\"),\n+\t\t\t},\n+\t\t\t// Function without adverb\n+\t\t\t{`\\w[\\w:'-]+(?=\\((?!\"))`, NameFunction, Push(\"qq-function\")},\n+\t\t\tInclude(\"closure\"),\n+\t\t\tInclude(\"escape-hexadecimal\"),\n+\t\t\tInclude(\"escape-c-name\"),\n+\t\t\tInclude(\"escape-qq\"),\n+\t\t\t{`.+?`, StringDouble, nil},\n+\t\t},\n+\t\t\"qq-function\": {\n+\t\t\t{`(\\([^\"]*?\\))`, UsingSelf(\"root\"), nil},\n+\t\t\tDefault(Pop(1)),\n+\t\t},\n+\t\t\"qq-variable\": {\n+\t\t\t{\n+\t\t\t\t`(?<!(?<!\\\\)\\\\)(?:` + variablePattern + `|` + globalVariablePattern + `)`,\n+\t\t\t\tNameVariable,\n+\t\t\t\tPush(\"qq-variable-extras\", \"name-adverb\"),\n+\t\t\t},\n+\t\t},\n+\t\t\"qq-variable-extras\": {\n+\t\t\t{`(?:\\[.*?\\]|\\{.*?\\}|<<.*?>>|<.*?>|«.*?»)+`, UsingSelf(\"root\"), nil},\n+\t\t\t// Method\n+\t\t\t{\n+\t\t\t\t`(\\.)([^(\\s]+)(\\([^\"]*?\\))`,\n+\t\t\t\tByGroups(Operator, NameFunction, UsingSelf(\"root\")),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\tDefault(Pop(1)),\n+\t\t},\n+\t\t\"Q\": {\n+\t\t\tInclude(\"escape-qq\"),\n+\t\t\t{`.+?`, String, nil},\n+\t\t},\n+\t\t\"Q-closure\": {\n+\t\t\tInclude(\"escape-qq\"),\n+\t\t\tInclude(\"closure\"),\n+\t\t\t{`.+?`, String, nil},\n+\t\t},\n+\t\t\"Q-variable\": {\n+\t\t\tInclude(\"escape-qq\"),\n+\t\t\tInclude(\"qq-variable\"),\n+\t\t\t{`.+?`, String, nil},\n+\t\t},\n+\t\t\"closure\": {\n+\t\t\t{`(?<!(?<!\\\\)\\\\)\\{.+?\\}`, UsingSelf(\"root\"), nil},\n+\t\t},\n+\t\t\"token\": {\n+\t\t\t// Token signature\n+\t\t\t{`(\\()(.+?)(\\))`, ByGroups(Punctuation, UsingSelf(\"root\"), Punctuation), nil},\n+\t\t\t{`\\{`, Punctuation, Mutators(Pop(1), bracketsFinder(rakuRegexInsideToken))},\n+\t\t\t{`.+?`, Text, nil},\n+\t\t},\n+\t}\n+}\n+\n+// Joins keys and values of rune map\n+func joinRuneMap(m map[rune]rune) string {\n+\trunes := make([]rune, 0, len(m)*2)\n+\tfor k, v := range m {\n+\t\trunes = append(runes, k)\n+\t\trunes = append(runes, v)\n+\t}\n+\n+\treturn string(runes)\n+}\n+\n+// Finds the index of substring in the string starting at position n\n+func indexAt(str []rune, substr []rune, pos int) int {\n+\ttext := string(str[pos:])\n+\n+\tidx := strings.Index(text, string(substr))\n+\tif idx > -1 {\n+\t\tidx = utf8.RuneCountInString(text[:idx])\n+\t\tidx += pos\n+\t}\n+\n+\treturn idx\n+}\n+\n+// Tells if an array of string contains a string\n+func contains(s []string, e string) bool {\n+\tfor _, value := range s {\n+\t\tif value == e {\n+\t\t\treturn true\n+\t\t}\n+\t}\n+\treturn false\n+}\n+\n+type RakuFormatterRules struct {\n+\tpop, formatter *CompiledRule\n+}\n+\n+// Pop from the pod_formatter_stack and reformat the pod code\n+func podFormatterPopper(state *LexerState) error {\n+\tstack, ok := state.Get(\"pod_formatter_stack\").([]RakuFormatterRules)\n+\n+\tif ok && len(stack) > 0 {\n+\t\t// Pop from stack\n+\t\tstack = stack[:len(stack)-1]\n+\t\tstate.Set(\"pod_formatter_stack\", stack)\n+\t\t// Call podFormatter to use the last formatter rules\n+\t\terr := podFormatter(state)\n+\t\tif err != nil {\n+\t\t\tpanic(err)\n+\t\t}\n+\t}\n+\n+\treturn nil\n+}\n+\n+// Use the rules from pod_formatter_stack to format the pod code\n+func podFormatter(state *LexerState) error {\n+\tstack, ok := state.Get(\"pod_formatter_stack\").([]RakuFormatterRules)\n+\tif ok && len(stack) > 0 {\n+\t\trules := stack[len(stack)-1]\n+\t\tstate.Rules[\"pod-formatter\"][0] = rules.pop\n+\t\tstate.Rules[\"pod-formatter\"][len(state.Rules[\"pod-formatter\"])-1] = rules.formatter\n+\t}\n+\n+\treturn nil\n+}\n+\n+type RulePosition int\n+\n+const (\n+\ttopRule RulePosition = iota + 1000\n+\tbottomRule\n+)\n+\n+type RuleMakingConfig struct {\n+\tdelimiter              []rune\n+\tpattern                string\n+\ttokenType              TokenType\n+\tmutator                Mutator\n+\trulePosition           RulePosition\n+\tstate                  *LexerState\n+\tstateName              string\n+\tpushToStack            bool\n+\tnumberOfDelimiterChars int\n+}\n+\n+// Makes compiled rules and returns them, If rule position is given, rules are added to the state\n+// If pushToStack is true, state name will be added to the state stack\n+func makeRuleAndPushMaybe(config RuleMakingConfig) *CompiledRule {\n+\tvar rePattern string\n+\tif len(config.delimiter) > 0 {\n+\t\tdelimiter := strings.Repeat(string(config.delimiter), config.numberOfDelimiterChars)\n+\t\trePattern = regexp2.Escape(delimiter)\n+\t} else {\n+\t\trePattern = config.pattern\n+\t}\n+\tregex := regexp2.MustCompile(rePattern, regexp2.None)\n+\n+\tcRule := &CompiledRule{\n+\t\tRule:   Rule{rePattern, config.tokenType, config.mutator},\n+\t\tRegexp: regex,\n+\t}\n+\tstate := config.state\n+\tstateName := config.stateName\n+\tswitch config.rulePosition {\n+\tcase topRule:\n+\t\tstate.Rules[stateName] =\n+\t\t\tappend([]*CompiledRule{cRule}, state.Rules[stateName][1:]...)\n+\tcase bottomRule:\n+\t\tstate.Rules[stateName] =\n+\t\t\tappend(state.Rules[stateName][:len(state.Rules[stateName])-1], cRule)\n+\t}\n+\n+\t// Push state name to stack if asked\n+\tif config.pushToStack {\n+\t\tstate.Stack = append(state.Stack, config.stateName)\n+\t}\n+\n+\treturn cRule\n+}\n+\n+// Used when the regex knows its own delimiter and uses `UsingSelf(\"regex\")`,\n+// it only puts a placeholder rule at the top of \"regex\" state\n+func makeRegexPoppingRule(state *LexerState) error {\n+\tmakeRuleAndPushMaybe(RuleMakingConfig{\n+\t\tpattern:      `^$`,\n+\t\trulePosition: topRule,\n+\t\tstate:        state,\n+\t\tstateName:    \"regex\",\n+\t})\n+\n+\treturn nil\n+}\n+\n+// Emitter for colon pairs, changes token state based on key and brackets\n+func colonPair(tokenClass TokenType) Emitter {\n+\treturn EmitterFunc(func(groups []string, state *LexerState) Iterator {\n+\t\titerators := []Iterator{}\n+\t\ttokens := []Token{\n+\t\t\t{Punctuation, state.NamedGroups[`colon`]},\n+\t\t\t{Punctuation, state.NamedGroups[`opening_delimiters`]},\n+\t\t\t{Punctuation, state.NamedGroups[`closing_delimiters`]},\n+\t\t}\n+\n+\t\t// Append colon\n+\t\titerators = append(iterators, Literator(tokens[0]))\n+\n+\t\tif tokenClass == NameAttribute {\n+\t\t\titerators = append(iterators, Literator(Token{NameAttribute, state.NamedGroups[`key`]}))\n+\t\t} else {\n+\t\t\tvar keyTokenState string\n+\t\t\tkeyre := regexp.MustCompile(`^\\d+$`)\n+\t\t\tif keyre.MatchString(state.NamedGroups[`key`]) {\n+\t\t\t\tkeyTokenState = \"common\"\n+\t\t\t} else {\n+\t\t\t\tkeyTokenState = \"Q\"\n+\t\t\t}\n+\n+\t\t\t// Use token state to Tokenise key\n+\t\t\tif keyTokenState != \"\" {\n+\t\t\t\titerator, err := state.Lexer.Tokenise(\n+\t\t\t\t\t&TokeniseOptions{\n+\t\t\t\t\t\tState:  keyTokenState,\n+\t\t\t\t\t\tNested: true,\n+\t\t\t\t\t}, state.NamedGroups[`key`])\n+\n+\t\t\t\tif err != nil {\n+\t\t\t\t\tpanic(err)\n+\t\t\t\t} else {\n+\t\t\t\t\t// Append key\n+\t\t\t\t\titerators = append(iterators, iterator)\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n+\t\t// Append punctuation\n+\t\titerators = append(iterators, Literator(tokens[1]))\n+\n+\t\tvar valueTokenState string\n+\n+\t\tswitch state.NamedGroups[`opening_delimiters`] {\n+\t\tcase \"(\", \"{\", \"[\":\n+\t\t\tvalueTokenState = \"root\"\n+\t\tcase \"<<\", \"«\":\n+\t\t\tvalueTokenState = \"ww\"\n+\t\tcase \"<\":\n+\t\t\tvalueTokenState = \"Q\"\n+\t\t}\n+\n+\t\t// Use token state to Tokenise value\n+\t\tif valueTokenState != \"\" {\n+\t\t\titerator, err := state.Lexer.Tokenise(\n+\t\t\t\t&TokeniseOptions{\n+\t\t\t\t\tState:  valueTokenState,\n+\t\t\t\t\tNested: true,\n+\t\t\t\t}, state.NamedGroups[`value`])\n+\n+\t\t\tif err != nil {\n+\t\t\t\tpanic(err)\n+\t\t\t} else {\n+\t\t\t\t// Append value\n+\t\t\t\titerators = append(iterators, iterator)\n+\t\t\t}\n+\t\t}\n+\t\t// Append last punctuation\n+\t\titerators = append(iterators, Literator(tokens[2]))\n+\n+\t\treturn Concaterator(iterators...)\n+\t})\n+}\n+\n+// Emitter for quoting constructs, changes token state based on quote name and adverbs\n+func quote(groups []string, state *LexerState) Iterator {\n+\tkeyword := state.NamedGroups[`keyword`]\n+\tadverbsStr := state.NamedGroups[`adverbs`]\n+\titerators := []Iterator{}\n+\ttokens := []Token{\n+\t\t{Keyword, keyword},\n+\t\t{StringAffix, adverbsStr},\n+\t\t{Text, state.NamedGroups[`ws`]},\n+\t\t{Punctuation, state.NamedGroups[`opening_delimiters`]},\n+\t\t{Punctuation, state.NamedGroups[`closing_delimiters`]},\n+\t}\n+\n+\t// Append all tokens before dealing with the main string\n+\titerators = append(iterators, Literator(tokens[:4]...))\n+\n+\tvar tokenStates []string\n+\n+\t// Set tokenStates based on adverbs\n+\tadverbs := strings.Split(adverbsStr, \":\")\n+\tfor _, adverb := range adverbs {\n+\t\tswitch adverb {\n+\t\tcase \"c\", \"closure\":\n+\t\t\ttokenStates = append(tokenStates, \"Q-closure\")\n+\t\tcase \"qq\":\n+\t\t\ttokenStates = append(tokenStates, \"qq\")\n+\t\tcase \"ww\":\n+\t\t\ttokenStates = append(tokenStates, \"ww\")\n+\t\tcase \"s\", \"scalar\", \"a\", \"array\", \"h\", \"hash\", \"f\", \"function\":\n+\t\t\ttokenStates = append(tokenStates, \"Q-variable\")\n+\t\t}\n+\t}\n+\n+\tvar tokenState string\n+\n+\tswitch {\n+\tcase keyword == \"qq\" || contains(tokenStates, \"qq\"):\n+\t\ttokenState = \"qq\"\n+\tcase adverbsStr == \"ww\" || contains(tokenStates, \"ww\"):\n+\t\ttokenState = \"ww\"\n+\tcase contains(tokenStates, \"Q-closure\") && contains(tokenStates, \"Q-variable\"):\n+\t\ttokenState = \"qq\"\n+\tcase contains(tokenStates, \"Q-closure\"):\n+\t\ttokenState = \"Q-closure\"\n+\tcase contains(tokenStates, \"Q-variable\"):\n+\t\ttokenState = \"Q-variable\"\n+\tdefault:\n+\t\ttokenState = \"Q\"\n+\t}\n+\n+\titerator, err := state.Lexer.Tokenise(\n+\t\t&TokeniseOptions{\n+\t\t\tState:  tokenState,\n+\t\t\tNested: true,\n+\t\t}, state.NamedGroups[`value`])\n+\n+\tif err != nil {\n+\t\tpanic(err)\n+\t} else {\n+\t\titerators = append(iterators, iterator)\n+\t}\n+\n+\t// Append the last punctuation\n+\titerators = append(iterators, Literator(tokens[4]))\n+\n+\treturn Concaterator(iterators...)\n+}\n+\n+// Emitter for pod config, tokenises the properties with \"colon-pair-attribute\" state\n+func podConfig(groups []string, state *LexerState) Iterator {\n+\t// Tokenise pod config\n+\titerator, err := state.Lexer.Tokenise(\n+\t\t&TokeniseOptions{\n+\t\t\tState:  \"colon-pair-attribute\",\n+\t\t\tNested: true,\n+\t\t}, groups[0])\n+\n+\tif err != nil {\n+\t\tpanic(err)\n+\t} else {\n+\t\treturn iterator\n+\t}\n+}\n+\n+// Emitter for pod code, tokenises the code based on the lang specified\n+func podCode(groups []string, state *LexerState) Iterator {\n+\titerators := []Iterator{}\n+\ttokens := []Token{\n+\t\t{Comment, state.NamedGroups[`ws`]},\n+\t\t{Keyword, state.NamedGroups[`keyword`]},\n+\t\t{Keyword, state.NamedGroups[`ws2`]},\n+\t\t{Keyword, state.NamedGroups[`name`]},\n+\t\t{StringDoc, state.NamedGroups[`value`]},\n+\t\t{Comment, state.NamedGroups[`ws3`]},\n+\t\t{Keyword, state.NamedGroups[`end_keyword`]},\n+\t\t{Keyword, state.NamedGroups[`ws4`]},\n+\t\t{Keyword, state.NamedGroups[`name`]},\n+\t}\n+\n+\t// Append all tokens before dealing with the pod config\n+\titerators = append(iterators, Literator(tokens[:4]...))\n+\n+\t// Tokenise pod config\n+\titerators = append(iterators, podConfig([]string{state.NamedGroups[`config`]}, state))\n+\n+\tlangMatch := regexp.MustCompile(`:lang\\W+(\\w+)`).FindStringSubmatch(state.NamedGroups[`config`])\n+\tvar lang string\n+\tif len(langMatch) > 1 {\n+\t\tlang = langMatch[1]\n+\t}\n+\n+\t// Tokenise code based on lang property\n+\tsublexer := internal.Get(lang)\n+\tif sublexer != nil {\n+\t\titerator, err := sublexer.Tokenise(nil, state.NamedGroups[`value`])\n+\n+\t\tif err != nil {\n+\t\t\tpanic(err)\n+\t\t} else {\n+\t\t\titerators = append(iterators, iterator)\n+\t\t}\n+\t} else {\n+\t\titerators = append(iterators, Literator(tokens[4]))\n+\t}\n+\n+\t// Append the rest of the tokens\n+\titerators = append(iterators, Literator(tokens[5:]...))\n+\n+\treturn Concaterator(iterators...)\n+}"
    },
    {
      "sha": "0ade5691d0009abd7ecb4ed2beb233cf01cafa90",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/r/reasonml.go",
      "status": "added",
      "additions": 71,
      "deletions": 0,
      "changes": 71,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/reasonml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/reasonml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/r/reasonml.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,71 @@\n+package r\n+\n+import (\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+)\n+\n+// Reasonml lexer.\n+var Reasonml = internal.Register(MustNewLazyLexer(\n+\t&Config{\n+\t\tName:      \"ReasonML\",\n+\t\tAliases:   []string{\"reason\", \"reasonml\"},\n+\t\tFilenames: []string{\"*.re\", \"*.rei\"},\n+\t\tMimeTypes: []string{\"text/x-reasonml\"},\n+\t},\n+\treasonmlRules,\n+))\n+\n+func reasonmlRules() Rules {\n+\treturn Rules{\n+\t\t\"escape-sequence\": {\n+\t\t\t{`\\\\[\\\\\"\\'ntbr]`, LiteralStringEscape, nil},\n+\t\t\t{`\\\\[0-9]{3}`, LiteralStringEscape, nil},\n+\t\t\t{`\\\\x[0-9a-fA-F]{2}`, LiteralStringEscape, nil},\n+\t\t},\n+\t\t\"root\": {\n+\t\t\t{`\\s+`, Text, nil},\n+\t\t\t{`false|true|\\(\\)|\\[\\]`, NameBuiltinPseudo, nil},\n+\t\t\t{`\\b([A-Z][\\w\\']*)(?=\\s*\\.)`, NameNamespace, Push(\"dotted\")},\n+\t\t\t{`\\b([A-Z][\\w\\']*)`, NameClass, nil},\n+\t\t\t{`//.*?\\n`, CommentSingle, nil},\n+\t\t\t{`\\/\\*(?![\\/])`, CommentMultiline, Push(\"comment\")},\n+\t\t\t{`\\b(as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|false|for|fun|esfun|function|functor|if|in|include|inherit|initializer|lazy|let|switch|module|pub|mutable|new|nonrec|object|of|open|pri|rec|sig|struct|then|to|true|try|type|val|virtual|when|while|with)\\b`, Keyword, nil},\n+\t\t\t{\"(~|\\\\}|\\\\|]|\\\\||\\\\|\\\\||\\\\{<|\\\\{|`|_|]|\\\\[\\\\||\\\\[>|\\\\[<|\\\\[|\\\\?\\\\?|\\\\?|>\\\\}|>]|>|=|<-|<|;;|;|:>|:=|::|:|\\\\.\\\\.\\\\.|\\\\.\\\\.|\\\\.|=>|-\\\\.|-|,|\\\\+|\\\\*|\\\\)|\\\\(|&&|&|#|!=)\", OperatorWord, nil},\n+\t\t\t{`([=<>@^|&+\\*/$%-]|[!?~])?[!$%&*+\\./:<=>?@^|~-]`, Operator, nil},\n+\t\t\t{`\\b(and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b`, OperatorWord, nil},\n+\t\t\t{`\\b(unit|int|float|bool|string|char|list|array)\\b`, KeywordType, nil},\n+\t\t\t{`[^\\W\\d][\\w']*`, Name, nil},\n+\t\t\t{`-?\\d[\\d_]*(.[\\d_]*)?([eE][+\\-]?\\d[\\d_]*)`, LiteralNumberFloat, nil},\n+\t\t\t{`0[xX][\\da-fA-F][\\da-fA-F_]*`, LiteralNumberHex, nil},\n+\t\t\t{`0[oO][0-7][0-7_]*`, LiteralNumberOct, nil},\n+\t\t\t{`0[bB][01][01_]*`, LiteralNumberBin, nil},\n+\t\t\t{`\\d[\\d_]*`, LiteralNumberInteger, nil},\n+\t\t\t{`'(?:(\\\\[\\\\\\\"'ntbr ])|(\\\\[0-9]{3})|(\\\\x[0-9a-fA-F]{2}))'`, LiteralStringChar, nil},\n+\t\t\t{`'.'`, LiteralStringChar, nil},\n+\t\t\t{`'`, Keyword, nil},\n+\t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n+\t\t\t{`[~?][a-z][\\w\\']*:`, NameVariable, nil},\n+\t\t},\n+\t\t\"comment\": {\n+\t\t\t{`[^\\/*]+`, CommentMultiline, nil},\n+\t\t\t{`\\/\\*`, CommentMultiline, Push()},\n+\t\t\t{`\\*\\/`, CommentMultiline, Pop(1)},\n+\t\t\t{`[\\*]`, CommentMultiline, nil},\n+\t\t},\n+\t\t\"string\": {\n+\t\t\t{`[^\\\\\"]+`, LiteralStringDouble, nil},\n+\t\t\tInclude(\"escape-sequence\"),\n+\t\t\t{`\\\\\\n`, LiteralStringDouble, nil},\n+\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n+\t\t},\n+\t\t\"dotted\": {\n+\t\t\t{`\\s+`, Text, nil},\n+\t\t\t{`\\.`, Punctuation, nil},\n+\t\t\t{`[A-Z][\\w\\']*(?=\\s*\\.)`, NameNamespace, nil},\n+\t\t\t{`[A-Z][\\w\\']*`, NameClass, Pop(1)},\n+\t\t\t{`[a-z_][\\w\\']*`, Name, Pop(1)},\n+\t\t\tDefault(Pop(1)),\n+\t\t},\n+\t}\n+}"
    },
    {
      "sha": "6177234571e373574bfb54c2056b59dea6fbea07",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/r/regedit.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/regedit.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/regedit.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/r/regedit.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Reg lexer.\n-var Reg = internal.Register(MustNewLexer(\n+var Reg = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"reg\",\n \t\tAliases:   []string{\"registry\"},\n \t\tFilenames: []string{\"*.reg\"},\n \t\tMimeTypes: []string{\"text/x-windows-registry\"},\n \t},\n-\tRules{\n+\tregRules,\n+))\n+\n+func regRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`Windows Registry Editor.*`, Text, nil},\n \t\t\t{`\\s+`, Text, nil},\n@@ -28,5 +32,5 @@ var Reg = internal.Register(MustNewLexer(\n \t\t\t{`.+`, LiteralString, Pop(1)},\n \t\t\tDefault(Pop(1)),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "38ca768d0ba1c34348bac0ee1e5f216259e85b3a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/r/rexx.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/rexx.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/rexx.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/r/rexx.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,7 +6,7 @@ import (\n )\n \n // Rexx lexer.\n-var Rexx = internal.Register(MustNewLexer(\n+var Rexx = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"Rexx\",\n \t\tAliases:         []string{\"rexx\", \"arexx\"},\n@@ -15,7 +15,11 @@ var Rexx = internal.Register(MustNewLexer(\n \t\tNotMultiline:    true,\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\trexxRules,\n+))\n+\n+func rexxRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s`, TextWhitespace, nil},\n \t\t\t{`/\\*`, CommentMultiline, Push(\"comment\")},\n@@ -55,5 +59,5 @@ var Rexx = internal.Register(MustNewLexer(\n \t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n \t\t\t{`\\*`, CommentMultiline, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "2a874790e6c48d62f4e9b4f83af1c00ddb420bab",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/r/rst.go",
      "status": "modified",
      "additions": 10,
      "deletions": 6,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/rst.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/rst.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/r/rst.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -8,14 +8,18 @@ import (\n )\n \n // Restructuredtext lexer.\n-var Restructuredtext = internal.Register(MustNewLexer(\n+var Restructuredtext = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"reStructuredText\",\n \t\tAliases:   []string{\"rst\", \"rest\", \"restructuredtext\"},\n \t\tFilenames: []string{\"*.rst\", \"*.rest\"},\n \t\tMimeTypes: []string{\"text/x-rst\", \"text/prs.fallenstein.rst\"},\n \t},\n-\tRules{\n+\trestructuredtextRules,\n+))\n+\n+func restructuredtextRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{\"^(=+|-+|`+|:+|\\\\.+|\\\\'+|\\\"+|~+|\\\\^+|_+|\\\\*+|\\\\++|#+)([ \\\\t]*\\\\n)(.+)(\\\\n)(\\\\1)(\\\\n)\", ByGroups(GenericHeading, Text, GenericHeading, Text, GenericHeading, Text), nil},\n \t\t\t{\"^(\\\\S.*)(\\\\n)(={3,}|-{3,}|`{3,}|:{3,}|\\\\.{3,}|\\\\'{3,}|\\\"{3,}|~{3,}|\\\\^{3,}|_{3,}|\\\\*{3,}|\\\\+{3,}|#{3,})(\\\\n)\", ByGroups(GenericHeading, Text, GenericHeading, Text), nil},\n@@ -56,10 +60,10 @@ var Restructuredtext = internal.Register(MustNewLexer(\n \t\t\t{\"``((?=$)|(?=[-/:.,; \\\\n\\\\x00\\\\\\u2010\\\\\\u2011\\\\\\u2012\\\\\\u2013\\\\\\u2014\\\\\\u00a0\\\\'\\\\\\\"\\\\)\\\\]\\\\}\\\\>\\\\\\u2019\\\\\\u201d\\\\\\u00bb\\\\!\\\\?]))\", LiteralString, Pop(1)},\n \t\t\t{\"`\", LiteralString, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}\n \n-func rstCodeBlock(groups []string, lexer Lexer) Iterator {\n+func rstCodeBlock(groups []string, state *LexerState) Iterator {\n \titerators := []Iterator{}\n \ttokens := []Token{\n \t\t{Punctuation, groups[1]},\n@@ -71,7 +75,7 @@ func rstCodeBlock(groups []string, lexer Lexer) Iterator {\n \t\t{Text, groups[7]},\n \t}\n \tcode := strings.Join(groups[8:], \"\")\n-\tlexer = internal.Get(groups[6])\n+\tlexer := internal.Get(groups[6])\n \tif lexer == nil {\n \t\ttokens = append(tokens, Token{String, code})\n \t\titerators = append(iterators, Literator(tokens...))"
    },
    {
      "sha": "296cae9c01107b75c5524725534a592ec6a6a107",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/r/ruby.go",
      "status": "modified",
      "additions": 9,
      "deletions": 5,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/ruby.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/ruby.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/r/ruby.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Ruby lexer.\n-var Ruby = internal.Register(MustNewLexer(\n+var Ruby = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Ruby\",\n \t\tAliases:   []string{\"rb\", \"ruby\", \"duby\"},\n \t\tFilenames: []string{\"*.rb\", \"*.rbw\", \"Rakefile\", \"*.rake\", \"*.gemspec\", \"*.rbx\", \"*.duby\", \"Gemfile\"},\n \t\tMimeTypes: []string{\"text/x-ruby\", \"application/x-ruby\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\trubyRules,\n+))\n+\n+func rubyRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\A#!.+?$`, CommentHashbang, nil},\n \t\t\t{`#.*?$`, CommentSingle, nil},\n@@ -39,7 +43,7 @@ var Ruby = internal.Register(MustNewLexer(\n \t\t\t{`(0_?[0-7]+(?:_[0-7]+)*)(\\s*)([/?])?`, ByGroups(LiteralNumberOct, Text, Operator), nil},\n \t\t\t{`(0x[0-9A-Fa-f]+(?:_[0-9A-Fa-f]+)*)(\\s*)([/?])?`, ByGroups(LiteralNumberHex, Text, Operator), nil},\n \t\t\t{`(0b[01]+(?:_[01]+)*)(\\s*)([/?])?`, ByGroups(LiteralNumberBin, Text, Operator), nil},\n-\t\t\t{`([\\d]+(?:_\\d+)*)(\\s*)([/?])?`, ByGroups(LiteralNumberInteger, Text, Operator), nil},\n+\t\t\t{`([\\d]+(?:[_e]\\d+)*)(\\s*)([/?])?`, ByGroups(LiteralNumberInteger, Text, Operator), nil},\n \t\t\t{`@@[a-zA-Z_]\\w*`, NameVariableClass, nil},\n \t\t\t{`@[a-zA-Z_]\\w*`, NameVariableInstance, nil},\n \t\t\t{`\\$\\w+`, NameVariableGlobal, nil},\n@@ -246,5 +250,5 @@ var Ruby = internal.Register(MustNewLexer(\n \t\t\t{`[\\\\#<>]`, LiteralStringRegex, nil},\n \t\t\t{`[^\\\\#<>]+`, LiteralStringRegex, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "25d42e594a04c1fb11befec93267e5d1b94bbd07",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/r/rust.go",
      "status": "modified",
      "additions": 13,
      "deletions": 9,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/rust.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/r/rust.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/r/rust.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Rust lexer.\n-var Rust = internal.Register(MustNewLexer(\n+var Rust = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Rust\",\n \t\tAliases:   []string{\"rust\"},\n \t\tFilenames: []string{\"*.rs\", \"*.rs.in\"},\n \t\tMimeTypes: []string{\"text/rust\"},\n \t\tEnsureNL:  true,\n \t},\n-\tRules{\n+\trustRules,\n+))\n+\n+func rustRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`#![^[\\r\\n].*$`, CommentPreproc, nil},\n \t\t\tDefault(Push(\"base\")),\n@@ -28,18 +32,18 @@ var Rust = internal.Register(MustNewLexer(\n \t\t\t{`/\\*\\*(\\n|[^/*])`, LiteralStringDoc, Push(\"doccomment\")},\n \t\t\t{`/\\*!`, LiteralStringDoc, Push(\"doccomment\")},\n \t\t\t{`/\\*`, CommentMultiline, Push(\"comment\")},\n-\t\t\t{`r#*\"(?:\\\\.|[^\\\\\\r\\n;])*\"#*`, LiteralString, nil},\n-\t\t\t{`\"(?:\\\\.|[^\\\\\\r\\n\"])*\"`, LiteralString, nil},\n+\t\t\t{`r#*\"(?:\\\\.|[^\\\\;])*\"#*`, LiteralString, nil},\n+\t\t\t{`\"(?:\\\\.|[^\\\\\"])*\"`, LiteralString, nil},\n \t\t\t{`\\$([a-zA-Z_]\\w*|\\(,?|\\),?|,?)`, CommentPreproc, nil},\n-\t\t\t{Words(``, `\\b`, `as`, `box`, `const`, `crate`, `else`, `extern`, `for`, `if`, `impl`, `in`, `loop`, `match`, `move`, `mut`, `pub`, `ref`, `return`, `static`, `super`, `trait`, `unsafe`, `use`, `where`, `while`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `abstract`, `alignof`, `become`, `do`, `final`, `macro`, `offsetof`, `override`, `priv`, `proc`, `pure`, `sizeof`, `typeof`, `unsized`, `virtual`, `yield`), KeywordReserved, nil},\n+\t\t\t{Words(``, `\\b`, `as`, `async`, `await`, `const`, `crate`, `else`, `extern`, `for`, `if`, `impl`, `in`, `loop`, `match`, `move`, `mut`, `pub`, `ref`, `return`, `static`, `super`, `trait`, `unsafe`, `use`, `where`, `while`), Keyword, nil},\n+\t\t\t{Words(``, `\\b`, `abstract`, `become`, `box`, `do`, `final`, `macro`, `override`, `priv`, `try`, `typeof`, `unsized`, `virtual`, `yield`), KeywordReserved, nil},\n \t\t\t{`(true|false)\\b`, KeywordConstant, nil},\n \t\t\t{`mod\\b`, Keyword, Push(\"modname\")},\n \t\t\t{`let\\b`, KeywordDeclaration, nil},\n \t\t\t{`fn\\b`, Keyword, Push(\"funcname\")},\n \t\t\t{`(struct|enum|type|union)\\b`, Keyword, Push(\"typename\")},\n \t\t\t{`(default)(\\s+)(type|fn)\\b`, ByGroups(Keyword, Text, Keyword), nil},\n-\t\t\t{Words(``, `\\b`, `u8`, `u16`, `u32`, `u64`, `i8`, `i16`, `i32`, `i64`, `usize`, `isize`, `f32`, `f64`, `str`, `bool`), KeywordType, nil},\n+\t\t\t{Words(``, `\\b`, `u8`, `u16`, `u32`, `u64`, `u128`, `i8`, `i16`, `i32`, `i64`, `i128`, `usize`, `isize`, `f32`, `f64`, `str`, `bool`), KeywordType, nil},\n \t\t\t{`self\\b`, NameBuiltinPseudo, nil},\n \t\t\t{Words(``, `\\b`, `Copy`, `Send`, `Sized`, `Sync`, `Drop`, `Fn`, `FnMut`, `FnOnce`, `Box`, `ToOwned`, `Clone`, `PartialEq`, `PartialOrd`, `Eq`, `Ord`, `AsRef`, `AsMut`, `Into`, `From`, `Default`, `Iterator`, `Extend`, `IntoIterator`, `DoubleEndedIterator`, `ExactSizeIterator`, `Option`, `Some`, `None`, `Result`, `Ok`, `Err`, `SliceConcatExt`, `String`, `ToString`, `Vec`), NameBuiltin, nil},\n \t\t\t{`::\\b`, Text, nil},\n@@ -131,5 +135,5 @@ var Rust = internal.Register(MustNewLexer(\n \t\t\t{`\\);?`, CommentPreproc, Pop(1)},\n \t\t\t{`[^\")]+`, CommentPreproc, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "016a91bbd916a5eac241f7a0920d5b7536a6eacf",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/sas.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/sas.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/sas.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/s/sas.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Sas lexer.\n-var Sas = internal.Register(MustNewLexer(\n+var Sas = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"SAS\",\n \t\tAliases:         []string{\"sas\"},\n \t\tFilenames:       []string{\"*.SAS\", \"*.sas\"},\n \t\tMimeTypes:       []string{\"text/x-sas\", \"text/sas\", \"application/x-sas\"},\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tsasRules,\n+))\n+\n+func sasRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"comments\"),\n \t\t\tInclude(\"proc-data\"),\n@@ -90,5 +94,5 @@ var Sas = internal.Register(MustNewLexer(\n \t\t\"special\": {\n \t\t\t{`(null|missing|_all_|_automatic_|_character_|_n_|_infile_|_name_|_null_|_numeric_|_user_|_webout_)`, KeywordConstant, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "1b7337798715cd4ed47957bd292a77e6d4d02506",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/sass.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/sass.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/sass.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/s/sass.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Sass lexer.\n-var Sass = internal.Register(MustNewLexer(\n+var Sass = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"Sass\",\n \t\tAliases:         []string{\"sass\"},\n \t\tFilenames:       []string{\"*.sass\"},\n \t\tMimeTypes:       []string{\"text/x-sass\"},\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tsassRules,\n+))\n+\n+func sassRules() Rules {\n+\treturn Rules{\n \t\t// \"root\": {\n \t\t// },\n \t\t\"root\": {\n@@ -140,5 +144,5 @@ var Sass = internal.Register(MustNewLexer(\n \t\t\t{`(from|to|through)`, OperatorWord, nil},\n \t\t\tInclude(\"value\"),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "2885d01ecf6fa9a701b91f084226c6ce65990da4",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/scala.go",
      "status": "modified",
      "additions": 15,
      "deletions": 11,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/scala.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/scala.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/s/scala.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -7,23 +7,27 @@ import (\n \t\"github.com/alecthomas/chroma/lexers/internal\"\n )\n \n-var (\n-\tscalaOp     = \"[-~\\\\^\\\\*!%&\\\\\\\\<>\\\\|+=:/?@\\xa6-\\xa7\\xa9\\xac\\xae\\xb0-\\xb1\\xb6\\xd7\\xf7\\u03f6\\u0482\\u0606-\\u0608\\u060e-\\u060f\\u06e9\\u06fd-\\u06fe\\u07f6\\u09fa\\u0b70\\u0bf3-\\u0bf8\\u0bfa\\u0c7f\\u0cf1-\\u0cf2\\u0d79\\u0f01-\\u0f03\\u0f13-\\u0f17\\u0f1a-\\u0f1f\\u0f34\\u0f36\\u0f38\\u0fbe-\\u0fc5\\u0fc7-\\u0fcf\\u109e-\\u109f\\u1360\\u1390-\\u1399\\u1940\\u19e0-\\u19ff\\u1b61-\\u1b6a\\u1b74-\\u1b7c\\u2044\\u2052\\u207a-\\u207c\\u208a-\\u208c\\u2100-\\u2101\\u2103-\\u2106\\u2108-\\u2109\\u2114\\u2116-\\u2118\\u211e-\\u2123\\u2125\\u2127\\u2129\\u212e\\u213a-\\u213b\\u2140-\\u2144\\u214a-\\u214d\\u214f\\u2190-\\u2328\\u232b-\\u244a\\u249c-\\u24e9\\u2500-\\u2767\\u2794-\\u27c4\\u27c7-\\u27e5\\u27f0-\\u2982\\u2999-\\u29d7\\u29dc-\\u29fb\\u29fe-\\u2b54\\u2ce5-\\u2cea\\u2e80-\\u2ffb\\u3004\\u3012-\\u3013\\u3020\\u3036-\\u3037\\u303e-\\u303f\\u3190-\\u3191\\u3196-\\u319f\\u31c0-\\u31e3\\u3200-\\u321e\\u322a-\\u3250\\u3260-\\u327f\\u328a-\\u32b0\\u32c0-\\u33ff\\u4dc0-\\u4dff\\ua490-\\ua4c6\\ua828-\\ua82b\\ufb29\\ufdfd\\ufe62\\ufe64-\\ufe66\\uff0b\\uff1c-\\uff1e\\uff5c\\uff5e\\uffe2\\uffe4\\uffe8-\\uffee\\ufffc-\\ufffd]+\"\n-\tscalaUpper  = \"[A-Z\\\\$_\\xc0-\\xd6\\xd8-\\xde\\u0100\\u0102\\u0104\\u0106\\u0108\\u010a\\u010c\\u010e\\u0110\\u0112\\u0114\\u0116\\u0118\\u011a\\u011c\\u011e\\u0120\\u0122\\u0124\\u0126\\u0128\\u012a\\u012c\\u012e\\u0130\\u0132\\u0134\\u0136\\u0139\\u013b\\u013d\\u013f\\u0141\\u0143\\u0145\\u0147\\u014a\\u014c\\u014e\\u0150\\u0152\\u0154\\u0156\\u0158\\u015a\\u015c\\u015e\\u0160\\u0162\\u0164\\u0166\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u0174\\u0176\\u0178-\\u0179\\u017b\\u017d\\u0181-\\u0182\\u0184\\u0186-\\u0187\\u0189-\\u018b\\u018e-\\u0191\\u0193-\\u0194\\u0196-\\u0198\\u019c-\\u019d\\u019f-\\u01a0\\u01a2\\u01a4\\u01a6-\\u01a7\\u01a9\\u01ac\\u01ae-\\u01af\\u01b1-\\u01b3\\u01b5\\u01b7-\\u01b8\\u01bc\\u01c4\\u01c7\\u01ca\\u01cd\\u01cf\\u01d1\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u01de\\u01e0\\u01e2\\u01e4\\u01e6\\u01e8\\u01ea\\u01ec\\u01ee\\u01f1\\u01f4\\u01f6-\\u01f8\\u01fa\\u01fc\\u01fe\\u0200\\u0202\\u0204\\u0206\\u0208\\u020a\\u020c\\u020e\\u0210\\u0212\\u0214\\u0216\\u0218\\u021a\\u021c\\u021e\\u0220\\u0222\\u0224\\u0226\\u0228\\u022a\\u022c\\u022e\\u0230\\u0232\\u023a-\\u023b\\u023d-\\u023e\\u0241\\u0243-\\u0246\\u0248\\u024a\\u024c\\u024e\\u0370\\u0372\\u0376\\u0386\\u0388-\\u038f\\u0391-\\u03ab\\u03cf\\u03d2-\\u03d4\\u03d8\\u03da\\u03dc\\u03de\\u03e0\\u03e2\\u03e4\\u03e6\\u03e8\\u03ea\\u03ec\\u03ee\\u03f4\\u03f7\\u03f9-\\u03fa\\u03fd-\\u042f\\u0460\\u0462\\u0464\\u0466\\u0468\\u046a\\u046c\\u046e\\u0470\\u0472\\u0474\\u0476\\u0478\\u047a\\u047c\\u047e\\u0480\\u048a\\u048c\\u048e\\u0490\\u0492\\u0494\\u0496\\u0498\\u049a\\u049c\\u049e\\u04a0\\u04a2\\u04a4\\u04a6\\u04a8\\u04aa\\u04ac\\u04ae\\u04b0\\u04b2\\u04b4\\u04b6\\u04b8\\u04ba\\u04bc\\u04be\\u04c0-\\u04c1\\u04c3\\u04c5\\u04c7\\u04c9\\u04cb\\u04cd\\u04d0\\u04d2\\u04d4\\u04d6\\u04d8\\u04da\\u04dc\\u04de\\u04e0\\u04e2\\u04e4\\u04e6\\u04e8\\u04ea\\u04ec\\u04ee\\u04f0\\u04f2\\u04f4\\u04f6\\u04f8\\u04fa\\u04fc\\u04fe\\u0500\\u0502\\u0504\\u0506\\u0508\\u050a\\u050c\\u050e\\u0510\\u0512\\u0514\\u0516\\u0518\\u051a\\u051c\\u051e\\u0520\\u0522\\u0531-\\u0556\\u10a0-\\u10c5\\u1e00\\u1e02\\u1e04\\u1e06\\u1e08\\u1e0a\\u1e0c\\u1e0e\\u1e10\\u1e12\\u1e14\\u1e16\\u1e18\\u1e1a\\u1e1c\\u1e1e\\u1e20\\u1e22\\u1e24\\u1e26\\u1e28\\u1e2a\\u1e2c\\u1e2e\\u1e30\\u1e32\\u1e34\\u1e36\\u1e38\\u1e3a\\u1e3c\\u1e3e\\u1e40\\u1e42\\u1e44\\u1e46\\u1e48\\u1e4a\\u1e4c\\u1e4e\\u1e50\\u1e52\\u1e54\\u1e56\\u1e58\\u1e5a\\u1e5c\\u1e5e\\u1e60\\u1e62\\u1e64\\u1e66\\u1e68\\u1e6a\\u1e6c\\u1e6e\\u1e70\\u1e72\\u1e74\\u1e76\\u1e78\\u1e7a\\u1e7c\\u1e7e\\u1e80\\u1e82\\u1e84\\u1e86\\u1e88\\u1e8a\\u1e8c\\u1e8e\\u1e90\\u1e92\\u1e94\\u1e9e\\u1ea0\\u1ea2\\u1ea4\\u1ea6\\u1ea8\\u1eaa\\u1eac\\u1eae\\u1eb0\\u1eb2\\u1eb4\\u1eb6\\u1eb8\\u1eba\\u1ebc\\u1ebe\\u1ec0\\u1ec2\\u1ec4\\u1ec6\\u1ec8\\u1eca\\u1ecc\\u1ece\\u1ed0\\u1ed2\\u1ed4\\u1ed6\\u1ed8\\u1eda\\u1edc\\u1ede\\u1ee0\\u1ee2\\u1ee4\\u1ee6\\u1ee8\\u1eea\\u1eec\\u1eee\\u1ef0\\u1ef2\\u1ef4\\u1ef6\\u1ef8\\u1efa\\u1efc\\u1efe\\u1f08-\\u1f0f\\u1f18-\\u1f1d\\u1f28-\\u1f2f\\u1f38-\\u1f3f\\u1f48-\\u1f4d\\u1f59-\\u1f5f\\u1f68-\\u1f6f\\u1fb8-\\u1fbb\\u1fc8-\\u1fcb\\u1fd8-\\u1fdb\\u1fe8-\\u1fec\\u1ff8-\\u1ffb\\u2102\\u2107\\u210b-\\u210d\\u2110-\\u2112\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u2130-\\u2133\\u213e-\\u213f\\u2145\\u2183\\u2c00-\\u2c2e\\u2c60\\u2c62-\\u2c64\\u2c67\\u2c69\\u2c6b\\u2c6d-\\u2c6f\\u2c72\\u2c75\\u2c80\\u2c82\\u2c84\\u2c86\\u2c88\\u2c8a\\u2c8c\\u2c8e\\u2c90\\u2c92\\u2c94\\u2c96\\u2c98\\u2c9a\\u2c9c\\u2c9e\\u2ca0\\u2ca2\\u2ca4\\u2ca6\\u2ca8\\u2caa\\u2cac\\u2cae\\u2cb0\\u2cb2\\u2cb4\\u2cb6\\u2cb8\\u2cba\\u2cbc\\u2cbe\\u2cc0\\u2cc2\\u2cc4\\u2cc6\\u2cc8\\u2cca\\u2ccc\\u2cce\\u2cd0\\u2cd2\\u2cd4\\u2cd6\\u2cd8\\u2cda\\u2cdc\\u2cde\\u2ce0\\u2ce2\\ua640\\ua642\\ua644\\ua646\\ua648\\ua64a\\ua64c\\ua64e\\ua650\\ua652\\ua654\\ua656\\ua658\\ua65a\\ua65c\\ua65e\\ua662\\ua664\\ua666\\ua668\\ua66a\\ua66c\\ua680\\ua682\\ua684\\ua686\\ua688\\ua68a\\ua68c\\ua68e\\ua690\\ua692\\ua694\\ua696\\ua722\\ua724\\ua726\\ua728\\ua72a\\ua72c\\ua72e\\ua732\\ua734\\ua736\\ua738\\ua73a\\ua73c\\ua73e\\ua740\\ua742\\ua744\\ua746\\ua748\\ua74a\\ua74c\\ua74e\\ua750\\ua752\\ua754\\ua756\\ua758\\ua75a\\ua75c\\ua75e\\ua760\\ua762\\ua764\\ua766\\ua768\\ua76a\\ua76c\\ua76e\\ua779\\ua77b\\ua77d-\\ua77e\\ua780\\ua782\\ua784\\ua786\\ua78b\\uff21-\\uff3a]\"\n-\tscalaLetter = `[a-zA-Z\\\\$_ªµºÀ-ÖØ-öø-ʯͰ-ͳͶ-ͷͻ-ͽΆΈ-ϵϷ-ҁҊ-Ֆա-ևא-ײء-ؿف-يٮ-ٯٱ-ۓەۮ-ۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪऄ-हऽॐक़-ॡॲ-ॿঅ-হঽৎড়-ৡৰ-ৱਅ-ਹਖ਼-ਫ਼ੲ-ੴઅ-હઽૐ-ૡଅ-ହଽଡ଼-ୡୱஃ-ஹௐఅ-ఽౘ-ౡಅ-ಹಽೞ-ೡഅ-ഽൠ-ൡൺ-ൿඅ-ෆก-ะา-ำเ-ๅກ-ະາ-ຳຽ-ໄໜ-ༀཀ-ཬྈ-ྋက-ဪဿၐ-ၕၚ-ၝၡၥ-ၦၮ-ၰၵ-ႁႎႠ-ჺᄀ-ፚᎀ-ᎏᎠ-ᙬᙯ-ᙶᚁ-ᚚᚠ-ᛪᛮ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝰក-ឳៜᠠ-ᡂᡄ-ᢨᢪ-ᤜᥐ-ᦩᧁ-ᧇᨀ-ᨖᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮ-ᮯᰀ-ᰣᱍ-ᱏᱚ-ᱷᴀ-ᴫᵢ-ᵷᵹ-ᶚḀ-ᾼιῂ-ῌῐ-Ίῠ-Ῥῲ-ῼⁱⁿℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-ⱼⲀ-ⳤⴀ-ⵥⶀ-ⷞ〆-〇〡-〩〸-〺〼ぁ-ゖゟァ-ヺヿ-ㆎㆠ-ㆷㇰ-ㇿ㐀-䶵一-ꀔꀖ-ꒌꔀ-ꘋꘐ-ꘟꘪ-ꙮꚀ-ꚗꜢ-ꝯꝱ-ꞇꞋ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꤊ-ꤥꤰ-ꥆꨀ-ꨨꩀ-ꩂꩄ-ꩋ가-힣豈-יִײַ-ﬨשׁ-ﴽﵐ-ﷻﹰ-ﻼＡ-Ｚａ-ｚｦ-ｯｱ-ﾝﾠ-ￜ]`\n-\tscalaIDRest = fmt.Sprintf(`%s(?:%s|[0-9])*(?:(?<=_)%s)?`, scalaLetter, scalaLetter, scalaOp)\n-)\n-\n // Scala lexer.\n-var Scala = internal.Register(MustNewLexer(\n+var Scala = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Scala\",\n \t\tAliases:   []string{\"scala\"},\n \t\tFilenames: []string{\"*.scala\"},\n \t\tMimeTypes: []string{\"text/x-scala\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\tscalaRules,\n+))\n+\n+func scalaRules() Rules {\n+\tvar (\n+\t\tscalaOp     = \"[-~\\\\^\\\\*!%&\\\\\\\\<>\\\\|+=:/?@\\xa6-\\xa7\\xa9\\xac\\xae\\xb0-\\xb1\\xb6\\xd7\\xf7\\u03f6\\u0482\\u0606-\\u0608\\u060e-\\u060f\\u06e9\\u06fd-\\u06fe\\u07f6\\u09fa\\u0b70\\u0bf3-\\u0bf8\\u0bfa\\u0c7f\\u0cf1-\\u0cf2\\u0d79\\u0f01-\\u0f03\\u0f13-\\u0f17\\u0f1a-\\u0f1f\\u0f34\\u0f36\\u0f38\\u0fbe-\\u0fc5\\u0fc7-\\u0fcf\\u109e-\\u109f\\u1360\\u1390-\\u1399\\u1940\\u19e0-\\u19ff\\u1b61-\\u1b6a\\u1b74-\\u1b7c\\u2044\\u2052\\u207a-\\u207c\\u208a-\\u208c\\u2100-\\u2101\\u2103-\\u2106\\u2108-\\u2109\\u2114\\u2116-\\u2118\\u211e-\\u2123\\u2125\\u2127\\u2129\\u212e\\u213a-\\u213b\\u2140-\\u2144\\u214a-\\u214d\\u214f\\u2190-\\u2328\\u232b-\\u244a\\u249c-\\u24e9\\u2500-\\u2767\\u2794-\\u27c4\\u27c7-\\u27e5\\u27f0-\\u2982\\u2999-\\u29d7\\u29dc-\\u29fb\\u29fe-\\u2b54\\u2ce5-\\u2cea\\u2e80-\\u2ffb\\u3004\\u3012-\\u3013\\u3020\\u3036-\\u3037\\u303e-\\u303f\\u3190-\\u3191\\u3196-\\u319f\\u31c0-\\u31e3\\u3200-\\u321e\\u322a-\\u3250\\u3260-\\u327f\\u328a-\\u32b0\\u32c0-\\u33ff\\u4dc0-\\u4dff\\ua490-\\ua4c6\\ua828-\\ua82b\\ufb29\\ufdfd\\ufe62\\ufe64-\\ufe66\\uff0b\\uff1c-\\uff1e\\uff5c\\uff5e\\uffe2\\uffe4\\uffe8-\\uffee\\ufffc-\\ufffd]+\"\n+\t\tscalaUpper  = \"[A-Z\\\\$_\\xc0-\\xd6\\xd8-\\xde\\u0100\\u0102\\u0104\\u0106\\u0108\\u010a\\u010c\\u010e\\u0110\\u0112\\u0114\\u0116\\u0118\\u011a\\u011c\\u011e\\u0120\\u0122\\u0124\\u0126\\u0128\\u012a\\u012c\\u012e\\u0130\\u0132\\u0134\\u0136\\u0139\\u013b\\u013d\\u013f\\u0141\\u0143\\u0145\\u0147\\u014a\\u014c\\u014e\\u0150\\u0152\\u0154\\u0156\\u0158\\u015a\\u015c\\u015e\\u0160\\u0162\\u0164\\u0166\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u0174\\u0176\\u0178-\\u0179\\u017b\\u017d\\u0181-\\u0182\\u0184\\u0186-\\u0187\\u0189-\\u018b\\u018e-\\u0191\\u0193-\\u0194\\u0196-\\u0198\\u019c-\\u019d\\u019f-\\u01a0\\u01a2\\u01a4\\u01a6-\\u01a7\\u01a9\\u01ac\\u01ae-\\u01af\\u01b1-\\u01b3\\u01b5\\u01b7-\\u01b8\\u01bc\\u01c4\\u01c7\\u01ca\\u01cd\\u01cf\\u01d1\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u01de\\u01e0\\u01e2\\u01e4\\u01e6\\u01e8\\u01ea\\u01ec\\u01ee\\u01f1\\u01f4\\u01f6-\\u01f8\\u01fa\\u01fc\\u01fe\\u0200\\u0202\\u0204\\u0206\\u0208\\u020a\\u020c\\u020e\\u0210\\u0212\\u0214\\u0216\\u0218\\u021a\\u021c\\u021e\\u0220\\u0222\\u0224\\u0226\\u0228\\u022a\\u022c\\u022e\\u0230\\u0232\\u023a-\\u023b\\u023d-\\u023e\\u0241\\u0243-\\u0246\\u0248\\u024a\\u024c\\u024e\\u0370\\u0372\\u0376\\u0386\\u0388-\\u038f\\u0391-\\u03ab\\u03cf\\u03d2-\\u03d4\\u03d8\\u03da\\u03dc\\u03de\\u03e0\\u03e2\\u03e4\\u03e6\\u03e8\\u03ea\\u03ec\\u03ee\\u03f4\\u03f7\\u03f9-\\u03fa\\u03fd-\\u042f\\u0460\\u0462\\u0464\\u0466\\u0468\\u046a\\u046c\\u046e\\u0470\\u0472\\u0474\\u0476\\u0478\\u047a\\u047c\\u047e\\u0480\\u048a\\u048c\\u048e\\u0490\\u0492\\u0494\\u0496\\u0498\\u049a\\u049c\\u049e\\u04a0\\u04a2\\u04a4\\u04a6\\u04a8\\u04aa\\u04ac\\u04ae\\u04b0\\u04b2\\u04b4\\u04b6\\u04b8\\u04ba\\u04bc\\u04be\\u04c0-\\u04c1\\u04c3\\u04c5\\u04c7\\u04c9\\u04cb\\u04cd\\u04d0\\u04d2\\u04d4\\u04d6\\u04d8\\u04da\\u04dc\\u04de\\u04e0\\u04e2\\u04e4\\u04e6\\u04e8\\u04ea\\u04ec\\u04ee\\u04f0\\u04f2\\u04f4\\u04f6\\u04f8\\u04fa\\u04fc\\u04fe\\u0500\\u0502\\u0504\\u0506\\u0508\\u050a\\u050c\\u050e\\u0510\\u0512\\u0514\\u0516\\u0518\\u051a\\u051c\\u051e\\u0520\\u0522\\u0531-\\u0556\\u10a0-\\u10c5\\u1e00\\u1e02\\u1e04\\u1e06\\u1e08\\u1e0a\\u1e0c\\u1e0e\\u1e10\\u1e12\\u1e14\\u1e16\\u1e18\\u1e1a\\u1e1c\\u1e1e\\u1e20\\u1e22\\u1e24\\u1e26\\u1e28\\u1e2a\\u1e2c\\u1e2e\\u1e30\\u1e32\\u1e34\\u1e36\\u1e38\\u1e3a\\u1e3c\\u1e3e\\u1e40\\u1e42\\u1e44\\u1e46\\u1e48\\u1e4a\\u1e4c\\u1e4e\\u1e50\\u1e52\\u1e54\\u1e56\\u1e58\\u1e5a\\u1e5c\\u1e5e\\u1e60\\u1e62\\u1e64\\u1e66\\u1e68\\u1e6a\\u1e6c\\u1e6e\\u1e70\\u1e72\\u1e74\\u1e76\\u1e78\\u1e7a\\u1e7c\\u1e7e\\u1e80\\u1e82\\u1e84\\u1e86\\u1e88\\u1e8a\\u1e8c\\u1e8e\\u1e90\\u1e92\\u1e94\\u1e9e\\u1ea0\\u1ea2\\u1ea4\\u1ea6\\u1ea8\\u1eaa\\u1eac\\u1eae\\u1eb0\\u1eb2\\u1eb4\\u1eb6\\u1eb8\\u1eba\\u1ebc\\u1ebe\\u1ec0\\u1ec2\\u1ec4\\u1ec6\\u1ec8\\u1eca\\u1ecc\\u1ece\\u1ed0\\u1ed2\\u1ed4\\u1ed6\\u1ed8\\u1eda\\u1edc\\u1ede\\u1ee0\\u1ee2\\u1ee4\\u1ee6\\u1ee8\\u1eea\\u1eec\\u1eee\\u1ef0\\u1ef2\\u1ef4\\u1ef6\\u1ef8\\u1efa\\u1efc\\u1efe\\u1f08-\\u1f0f\\u1f18-\\u1f1d\\u1f28-\\u1f2f\\u1f38-\\u1f3f\\u1f48-\\u1f4d\\u1f59-\\u1f5f\\u1f68-\\u1f6f\\u1fb8-\\u1fbb\\u1fc8-\\u1fcb\\u1fd8-\\u1fdb\\u1fe8-\\u1fec\\u1ff8-\\u1ffb\\u2102\\u2107\\u210b-\\u210d\\u2110-\\u2112\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u2130-\\u2133\\u213e-\\u213f\\u2145\\u2183\\u2c00-\\u2c2e\\u2c60\\u2c62-\\u2c64\\u2c67\\u2c69\\u2c6b\\u2c6d-\\u2c6f\\u2c72\\u2c75\\u2c80\\u2c82\\u2c84\\u2c86\\u2c88\\u2c8a\\u2c8c\\u2c8e\\u2c90\\u2c92\\u2c94\\u2c96\\u2c98\\u2c9a\\u2c9c\\u2c9e\\u2ca0\\u2ca2\\u2ca4\\u2ca6\\u2ca8\\u2caa\\u2cac\\u2cae\\u2cb0\\u2cb2\\u2cb4\\u2cb6\\u2cb8\\u2cba\\u2cbc\\u2cbe\\u2cc0\\u2cc2\\u2cc4\\u2cc6\\u2cc8\\u2cca\\u2ccc\\u2cce\\u2cd0\\u2cd2\\u2cd4\\u2cd6\\u2cd8\\u2cda\\u2cdc\\u2cde\\u2ce0\\u2ce2\\ua640\\ua642\\ua644\\ua646\\ua648\\ua64a\\ua64c\\ua64e\\ua650\\ua652\\ua654\\ua656\\ua658\\ua65a\\ua65c\\ua65e\\ua662\\ua664\\ua666\\ua668\\ua66a\\ua66c\\ua680\\ua682\\ua684\\ua686\\ua688\\ua68a\\ua68c\\ua68e\\ua690\\ua692\\ua694\\ua696\\ua722\\ua724\\ua726\\ua728\\ua72a\\ua72c\\ua72e\\ua732\\ua734\\ua736\\ua738\\ua73a\\ua73c\\ua73e\\ua740\\ua742\\ua744\\ua746\\ua748\\ua74a\\ua74c\\ua74e\\ua750\\ua752\\ua754\\ua756\\ua758\\ua75a\\ua75c\\ua75e\\ua760\\ua762\\ua764\\ua766\\ua768\\ua76a\\ua76c\\ua76e\\ua779\\ua77b\\ua77d-\\ua77e\\ua780\\ua782\\ua784\\ua786\\ua78b\\uff21-\\uff3a]\"\n+\t\tscalaLetter = `[a-zA-Z\\\\$_ªµºÀ-ÖØ-öø-ʯͰ-ͳͶ-ͷͻ-ͽΆΈ-ϵϷ-ҁҊ-Ֆա-ևא-ײء-ؿف-يٮ-ٯٱ-ۓەۮ-ۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪऄ-हऽॐक़-ॡॲ-ॿঅ-হঽৎড়-ৡৰ-ৱਅ-ਹਖ਼-ਫ਼ੲ-ੴઅ-હઽૐ-ૡଅ-ହଽଡ଼-ୡୱஃ-ஹௐఅ-ఽౘ-ౡಅ-ಹಽೞ-ೡഅ-ഽൠ-ൡൺ-ൿඅ-ෆก-ะา-ำเ-ๅກ-ະາ-ຳຽ-ໄໜ-ༀཀ-ཬྈ-ྋက-ဪဿၐ-ၕၚ-ၝၡၥ-ၦၮ-ၰၵ-ႁႎႠ-ჺᄀ-ፚᎀ-ᎏᎠ-ᙬᙯ-ᙶᚁ-ᚚᚠ-ᛪᛮ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝰក-ឳៜᠠ-ᡂᡄ-ᢨᢪ-ᤜᥐ-ᦩᧁ-ᧇᨀ-ᨖᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮ-ᮯᰀ-ᰣᱍ-ᱏᱚ-ᱷᴀ-ᴫᵢ-ᵷᵹ-ᶚḀ-ᾼιῂ-ῌῐ-Ίῠ-Ῥῲ-ῼⁱⁿℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-ⱼⲀ-ⳤⴀ-ⵥⶀ-ⷞ〆-〇〡-〩〸-〺〼ぁ-ゖゟァ-ヺヿ-ㆎㆠ-ㆷㇰ-ㇿ㐀-䶵一-ꀔꀖ-ꒌꔀ-ꘋꘐ-ꘟꘪ-ꙮꚀ-ꚗꜢ-ꝯꝱ-ꞇꞋ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꤊ-ꤥꤰ-ꥆꨀ-ꨨꩀ-ꩂꩄ-ꩋ가-힣豈-יִײַ-ﬨשׁ-ﴽﵐ-ﷻﹰ-ﻼＡ-Ｚａ-ｚｦ-ｯｱ-ﾝﾠ-ￜ]`\n+\t\tscalaIDRest = fmt.Sprintf(`%s(?:%s|[0-9])*(?:(?<=_)%s)?`, scalaLetter, scalaLetter, scalaOp)\n+\t)\n+\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`(class|trait|object)(\\s+)`, ByGroups(Keyword, Text), Push(\"class\")},\n \t\t\t{`[^\\S\\n]+`, Text, nil},\n@@ -108,5 +112,5 @@ var Scala = internal.Register(MustNewLexer(\n \t\t\t{`\\{`, LiteralStringInterpol, Push()},\n \t\t\tInclude(\"root\"),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "d2f177ea44066ee4b7fa4a5643a95b0d3daf7d45",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/scheme.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/scheme.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/scheme.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/s/scheme.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -8,14 +8,18 @@ import (\n // nolint\n \n // Scheme lexer.\n-var SchemeLang = internal.Register(MustNewLexer(\n+var SchemeLang = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Scheme\",\n \t\tAliases:   []string{\"scheme\", \"scm\"},\n \t\tFilenames: []string{\"*.scm\", \"*.ss\"},\n \t\tMimeTypes: []string{\"text/x-scheme\", \"application/x-scheme\"},\n \t},\n-\tRules{\n+\tschemeLangRules,\n+))\n+\n+func schemeLangRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`;.*$`, CommentSingle, nil},\n \t\t\t{`#\\|`, CommentMultiline, Push(\"multiline-comment\")},\n@@ -49,5 +53,5 @@ var SchemeLang = internal.Register(MustNewLexer(\n \t\t\t{`\\)`, Comment, Pop(1)},\n \t\t\t{`[^()]+`, Comment, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "f8164927fb454b137813ae6d11347726f563dfd9",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/scilab.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/scilab.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/scilab.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/s/scilab.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Scilab lexer.\n-var Scilab = internal.Register(MustNewLexer(\n+var Scilab = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Scilab\",\n \t\tAliases:   []string{\"scilab\"},\n \t\tFilenames: []string{\"*.sci\", \"*.sce\", \"*.tst\"},\n \t\tMimeTypes: []string{\"text/scilab\"},\n \t},\n-\tRules{\n+\tscilabRules,\n+))\n+\n+func scilabRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`//.*?$`, CommentSingle, nil},\n \t\t\t{`^\\s*function`, Keyword, Push(\"deffunc\")},\n@@ -40,5 +44,5 @@ var Scilab = internal.Register(MustNewLexer(\n \t\t\t{`(\\s*)(?:(.+)(\\s*)(=)(\\s*))?(.+)(\\()(.*)(\\))(\\s*)`, ByGroups(TextWhitespace, Text, TextWhitespace, Punctuation, TextWhitespace, NameFunction, Punctuation, Text, Punctuation, TextWhitespace), Pop(1)},\n \t\t\t{`(\\s*)([a-zA-Z_]\\w*)`, ByGroups(Text, NameFunction), Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "e489adedfe411c95d018208bb6214a6967a2de80",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/scss.go",
      "status": "modified",
      "additions": 44,
      "deletions": 15,
      "changes": 59,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/scss.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/scss.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/s/scss.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,7 +6,7 @@ import (\n )\n \n // Scss lexer.\n-var Scss = internal.Register(MustNewLexer(\n+var Scss = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"SCSS\",\n \t\tAliases:         []string{\"scss\"},\n@@ -16,24 +16,47 @@ var Scss = internal.Register(MustNewLexer(\n \t\tDotAll:          true,\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tscssRules,\n+))\n+\n+func scssRules() Rules {\n+\tcssProperties := []string{`src`, `align-content`, `align-items`, `align-self`, `all`, `animation`, `animation-delay`, `animation-direction`, `animation-duration`, `animation-fill-mode`, `animation-iteration-count`, `animation-name`, `animation-play-state`, `animation-timing-function`, `appearance`, `aspect-ratio`, `backface-visibility`, `background`, `background-attachment`, `background-blend-mode`, `background-clip`, `background-color`, `background-image`, `background-origin`, `background-position`, `background-repeat`, `background-size`, `block-size`, `border`, `border-block`, `border-block-color`, `border-block-end`, `border-block-end-color`, `border-block-end-style`, `border-block-end-width`, `border-block-start`, `border-block-start-color`, `border-block-start-style`, `border-block-start-width`, `border-block-style`, `border-block-width`, `border-bottom`, `border-bottom-color`, `border-bottom-left-radius`, `border-bottom-right-radius`, `border-bottom-style`, `border-bottom-width`, `border-collapse`, `border-color`, `border-end-end-radius`, `border-end-start-radius`, `border-image`, `border-image-outset`, `border-image-repeat`, `border-image-slice`, `border-image-source`, `border-image-width`, `border-inline`, `border-inline-color`, `border-inline-end`, `border-inline-end-color`, `border-inline-end-style`, `border-inline-end-width`, `border-inline-start`, `border-inline-start-color`, `border-inline-start-style`, `border-inline-start-width`, `border-inline-style`, `border-inline-width`, `border-left`, `border-left-color`, `border-left-style`, `border-left-width`, `border-radius`, `border-right`, `border-right-color`, `border-right-style`, `border-right-width`, `border-spacing`, `border-start-end-radius`, `border-start-start-radius`, `border-style`, `border-top`, `border-top-color`, `border-top-left-radius`, `border-top-right-radius`, `border-top-style`, `border-top-width`, `border-width`, `bottom`, `box-decoration-break`, `box-shadow`, `box-sizing`, `break-after`, `break-before`, `break-inside`, `caption-side`, `caret-color`, `clear`, `clip`, `clip-path`, `color`, `color-adjust`, `column-count`, `column-fill`, `column-gap`, `column-rule`, `column-rule-color`, `column-rule-style`, `column-rule-width`, `column-span`, `column-width`, `columns`, `content`, `content-visibility`, `counter-increment`, `counter-reset`, `counter-set`, `cursor`, `direction`, `display`, `empty-cells`, `filter`, `flex`, `flex-basis`, `flex-direction`, `flex-flow`, `flex-grow`, `flex-shrink`, `flex-wrap`, `float`, `font`, `font-family`, `font-feature-settings`, `font-kerning`, `font-language-override`, `font-optical-sizing`, `font-size`, `font-size-adjust`, `font-stretch`, `font-style`, `font-synthesis`, `font-variant`, `font-variant-caps`, `font-variant-east-asian`, `font-variant-emoji`, `font-variant-ligatures`, `font-variant-numeric`, `font-variant-position`, `font-weight`, `footnote-display`, `footnote-policy`, `forced-color-adjust`, `gap`, `grid`, `grid-area`, `grid-auto-columns`, `grid-auto-flow`, `grid-auto-rows`, `grid-column`, `grid-column-end`, `grid-column-start`, `grid-row`, `grid-row-end`, `grid-row-start`, `grid-template`, `grid-template-areas`, `grid-template-columns`, `grid-template-rows`, `hanging-punctuation`, `height`, `hyphens`, `image-orientation`, `image-rendering`, `image-resolution`, `initial-letter`, `initial-letter-align`, `initial-letter-wrap`, `inline-size`, `inline-sizing`, `inset`, `inset-block`, `inset-block-end`, `inset-block-start`, `inset-inline`, `inset-inline-end`, `inset-inline-start`, `isolation`, `justify-content`, `justify-items`, `justify-self`, `left`, `letter-spacing`, `lighting-color`, `line-break`, `line-clamp`, `line-grid`, `line-height`, `line-padding`, `line-snap`, `list-style`, `list-style-image`, `list-style-position`, `list-style-type`, `margin`, `margin-block`, `margin-block-end`, `margin-block-start`, `margin-bottom`, `margin-break`, `margin-inline`, `margin-inline-end`, `margin-inline-start`, `margin-left`, `margin-right`, `margin-top`, `margin-trim`, `mask`, `mask-border`, `mask-border-mode`, `mask-border-repeat`, `mask-border-slice`, `mask-border-source`, `mask-border-width`, `mask-clip`, `mask-composite`, `mask-image`, `mask-mode`, `mask-origin`, `mask-position`, `mask-repeat`, `mask-size`, `mask-type`, `max-block-size`, `max-height`, `max-lines`, `max-width`, `min-height`, `min-width`, `mix-blend-mode`, `nav-down`, `nav-left`, `nav-right`, `nav-up`, `object-fit`, `object-position`, `offset`, `offset-anchor`, `offset-distance`, `offset-path`, `offset-position`, `offset-rotate`, `opacity`, `order`, `orphans`, `outline`, `outline-color`, `outline-offset`, `outline-style`, `outline-width`, `overflow`, `overflow-anchor`, `overflow-block`, `overflow-clip-margin`, `overflow-inline`, `overflow-wrap`, `overflow-x`, `overflow-y`, `overscroll-behavior`, `overscroll-behavior-block`, `overscroll-behavior-inline`, `overscroll-behavior-x`, `overscroll-behavior-y`, `padding`, `padding-block`, `padding-block-end`, `padding-block-start`, `padding-bottom`, `padding-inline`, `padding-inline-end`, `padding-inline-start`, `padding-left`, `padding-right`, `padding-top`, `page`, `page-break-after`, `page-break-before`, `page-break-inside`, `page-orientation`, `perspective`, `perspective-origin`, `place-content`, `place-items`, `place-self`, `pointer-events`, `position`, `quotes`, `resize`, `right`, `rotate`, `row-gap`, `scale`, `scroll-behavior`, `scroll-margin`, `scroll-margin-block`, `scroll-margin-block-end`, `scroll-margin-block-start`, `scroll-margin-bottom`, `scroll-margin-inline`, `scroll-margin-inline-end`, `scroll-margin-inline-start`, `scroll-margin-left`, `scroll-margin-right`, `scroll-margin-top`, `scroll-padding`, `scroll-padding-block`, `scroll-padding-block-end`, `scroll-padding-block-start`, `scroll-padding-bottom`, `scroll-padding-inline`, `scroll-padding-inline-end`, `scroll-padding-inline-start`, `scroll-padding-left`, `scroll-padding-right`, `scroll-padding-top`, `scroll-snap-align`, `scroll-snap-stop`, `scroll-snap-type`, `scrollbar-color`, `scrollbar-gutter`, `scrollbar-width`, `shape-image-threshold`, `shape-inside`, `shape-margin`, `shape-outside`, `shape-padding`, `spatial-navigation-action`, `spatial-navigation-contain`, `spatial-navigation-function`, `string-set`, `tab-size`, `table-layout`, `text-align`, `text-align-all`, `text-align-last`, `text-combine-upright`, `text-decoration`, `text-decoration-color`, `text-decoration-line`, `text-decoration-skip`, `text-decoration-style`, `text-decoration-thickness`, `text-emphasis`, `text-emphasis-position`, `text-emphasis-style`, `text-group-align`, `text-indent`, `text-justify`, `text-orientation`, `text-overflow`, `text-rendering`, `text-shadow`, `text-size-adjust`, `text-space-trim`, `text-spacing`, `text-transform`, `text-underline-offset`, `text-underline-position`, `text-wrap`, `top`, `touch-action`, `transform`, `transform-box`, `transform-origin`, `transform-style`, `transition`, `transition-delay`, `transition-duration`, `transition-property`, `transition-timing-function`, `translate`, `unicode-bidi`, `user-select`, `vertical-align`, `visibility`, `white-space`, `widows`, `width`, `will-change`, `word-break`, `word-spacing`, `word-wrap`, `wrap-after`, `wrap-before`, `wrap-flow`, `wrap-inside`, `wrap-through`, `writing-mode`, `z-index`}\n+\n+\tcssPropertyValues := []string{\n+\t\t`stretch`, `flex-start`, `flex-end`, `center`, `space-between`, `space-around`, `normal`, `baseline`, `first`, `last`, `space-evenly`, `start`, `end`, `safe`, `unsafe`, `self-start`, `self-end`, `auto`, `initial`, `inherit`, `unset`, `revert`, `reverse`, `alternate-reverse`, `alternate`, `none`, `forwards`, `both`, `backwards`, `infinite`, `running`, `paused`, `ease`, `linear`, `step-start`, `step-end`, `ease-in`, `ease-out`, `ease-in-out`, `cubic-bezier`, `textfield`, `menulist-button`, `searchfield`, `textarea`, `push-button`, `slider-horizontal`, `checkbox`, `radio`, `square-button`, `menulist`, `listbox`, `meter`, `progress-bar`, `button`, `visible`, `hidden`, `scroll`, `fixed`, `local`, `multiply`, `screen`, `overlay`, `darken`, `lighten`, `color-dodge`, `color-burn`, `hard-light`, `soft-light`, `difference`, `exclusion`, `hue`, `saturation`, `color`, `luminosity`, `border-box`, `padding-box`, `content-box`, `text`, `transparent`, `currentColor`, `url`, `element`, `image`, `image-set`, `cross-fade`, `top`, `bottom`, `left`, `right`, `repeat`, `no-repeat`, `space`, `round`, `repeat-y`, `repeat-x`, `cover`, `contain`, `max-content`, `min-content`, `available`, `fit-content`, `dotted`, `dashed`, `solid`, `double`, `groove`, `ridge`, `inset`, `outset`, `medium`, `thin`, `thick`, `separate`, `collapse`, `slice`, `clone`, `avoid`, `always`, `all`, `avoid-page`, `page`, `recto`, `verso`, `avoid-column`, `column`, `avoid-region`, `region`, `inline-start`, `inline-end`, `rect`, `circle`, `ellipse`, `polygon`, `path`, `margin-box`, `fill-box`, `stroke-box`, `view-box`, `economy`, `exact`, `balance`, `balance-all`, `open-quote`, `close-quote`, `no-open-quote`, `no-close-quote`, `contents`, `attr`, `target-counter`, `target-text`, `leader`, `default`, `context-menu`, `help`, `pointer`, `progress`, `wait`, `cell`, `crosshair`, `vertical-text`, `alias`, `copy`, `move`, `no-drop`, `not-allowed`, `grab`, `grabbing`, `all-scroll`, `col-resize`, `row-resize`, `n-resize`, `s-resize`, `w-resize`, `ne-resize`, `nw-resize`, `se-resize`, `sw-resize`, `ew-resize`, `ns-resize`, `nesw-resize`, `nwse-resize`, `zoom-in`, `zoom-out`, `ltr`, `rtl`, `inline`, `block`, `inline-block`, `inline-table`, `run-in`, `flow`, `flow-root`, `table`, `flex`, `grid`, `ruby`, `list-item`, `table-row-group`, `table-header-group`, `table-footer-group`, `table-row`, `table-cell`, `table-column-group`, `table-column`, `table-caption`, `ruby-base`, `ruby-text`, `ruby-base-container`, `ruby-text-container`, `inline-flex`, `inline-grid`, `show`, `hide`, `url;`, `blur`, `brightness`, `contrast`, `drop-shadow`, `grayscale`, `hue-rotate`, `invert`, `opacity`, `saturate`, `sepia`, `content`, `row`, `row-reverse`, `column-reverse`, `nowrap`, `wrap`, `wrap-reverse`, `block-start`, `block-end`, `caption`, `icon`, `menu`, `message-box`, `small-caption`, `status-bar`, `serif`, `sans-serif`, `cursive`, `fantasy`, `monospace`, `system-ui`, `emoji`, `math`, `fangsong`, `ui-serif`, `ui-sans-serif`, `ui-monospace`, `ui-rounded`, `xx-small`, `x-small`, `small`, `large`, `x-large`, `xx-large`, `xxx-large`, `smaller`, `larger`, `semi-condensed`, `condensed`, `extra-condensed`, `ultra-condensed`, `semi-expanded`, `expanded`, `extra-expanded`, `ultra-expanded`, `italic`, `weight`, `style`, `small-caps`, `all-small-caps`, `petite-caps`, `all-petite-caps`, `unicase`, `titling-caps`, `jis78`, `jis83`, `jis90`, `jis04`, `simplified`, `traditional`, `full-width`, `proportional-width`, `unicode`, `common-ligatures`, `no-common-ligatures`, `discretionary-ligatures`, `no-discretionary-ligatures`, `historical-ligatures`, `no-historical-ligatures`, `contextual`, `no-contextual`, `ordinal`, `slashed-zero`, `lining-nums`, `oldstyle-nums`, `proportional-nums`, `tabular-nums`, `diagonal-fractions`, `stacked-fractions`, `sub`, `super`, `bold`, `lighter`, `bolder`, `line`, `auto‑flow`, `minmax`, `auto;`, `dense`, `subgrid`, `masonry`, `force-end`, `allow-end`, `manual`, `from-image`, `smooth`, `high-quality`, `crisp-edges`, `pixelated`, `snap`, `alphabetic`, `ideographic`, `hebrew`, `hanging`, `isolate`, `legacy`, `white`, `strict`, `loose`, `anywhere`, `match-parent`, `create`, `outside`, `inside`, `disc`, `square`, `decimal`, `symbols`, `cjk-decimal`, `decimal-leading-zero`, `lower-roman`, `upper-roman`, `lower-greek`, `lower-alpha`, `lower-latin`, `upper-alpha`, `upper-latin`, `arabic-indic`, `armenian`, `bengali`, `cambodian`, `cjk-earthly-branch`, `cjk-heavenly-stem`, `cjk-ideographic`, `devanagari`, `ethiopic-numeric`, `georgian`, `gujarati`, `gurmukhi`, `hiragana`, `hiragana-iroha`, `japanese-formal`, `japanese-informal`, `kannada`, `katakana`, `katakana-iroha`, `khmer`, `korean-hangul-formal`, `korean-hanja-formal`, `korean-hanja-informal`, `lao`, `lower-armenian`, `malayalam`, `mongolian`, `myanmar`, `oriya`, `persian`, `simp-chinese-formal`, `simp-chinese-informal`, `tamil`, `telugu`, `thai`, `tibetan`, `trad-chinese-formal`, `trad-chinese-informal`, `upper-armenian`, `disclosure-open`, `disclosure-closed`, `keep`, `discard`, `in-flow`, `alpha`, `luminance`, `no-clip`, `add`, `subtract`, `intersect`, `exclude`, `match-source`, `current`, `fill`, `scale-down`, `ray`, `clip`, `break-word`, `upright`, `rotate-left`, `rotate-right`, `static`, `relative`, `absolute`, `sticky`, `horizontal`, `vertical`, `x`, `y`, `z`, `mandatory`, `proximity`, `dark`, `light`, `stable`, `force`, `outside-shape`, `display`, `focus`, `justify`, `justify-all`, `underline`, `overline`, `line-through`, `blink`, `spelling-error`, `grammar-error`, `wavy`, `from-font`, `over`, `under`, `filled`, `open`, `dot`, `double-circle`, `triangle`, `sesame`, `inter-word`, `inter-character`, `mixed`, `sideways`, `ellipsis`, `optimizeSpeed`, `optimizeLegibility`, `geometricPrecision`, `trim-inner`, `discard-before`, `discard-after`, `trim-start`, `space-start`, `space-first`, `trim-end`, `space-end`, `trim-adjacent`, `space-adjacent`, `no-compress`, `ideograph-alpha`, `ideograph-numeric`, `punctuation`, `capitalize`, `uppercase`, `lowercase`, `full-size-kana`, `pretty`, `pan-x`, `pan-left`, `pan-right`, `pan-y`, `pan-up`, `pan-down`, `manipulation`, `matrix`, `matrix3d`, `translate`, `translateX`, `translateY`, `translate3d`, `translateZ`, `scale`, `scaleX`, `scaleY`, `scaleZ`, `rotate`, `rotate3d`, `rotateX`, `rotateY`, `rotateZ`, `perspective`, `skew`, `skewX`, `skewY`, `flat`, `preserve-3d`, `border-bottom`, `embed`, `bidi-override`, `isolate-override`, `plaintext`, `middle`, `text-top`, `text-bottom`, `pre`, `pre-wrap`, `pre-line`, `scroll-position`, `transform`, `width`, `keep-all`, `break-all`, `avoid-line`, `avoid-flex`, `minimum`, `maximum`, `clear`, `horizontal-tb`, `vertical-rl`, `vertical-lr`, `sideways-rl`, `sideways-lr`,\n+\t}\n+\n+\tcssColorNames := []string{`AliceBlue`, `AntiqueWhite`, `Aqua`, `Aquamarine`, `Azure`, `Beige`, `Bisque`, `Black`, `BlanchedAlmond`, `Blue`, `BlueViolet`, `Brown`, `BurlyWood`, `CadetBlue`, `Chartreuse`, `Chocolate`, `Coral`, `CornflowerBlue`, `Cornsilk`, `Crimson`, `Cyan`, `DarkBlue`, `DarkCyan`, `DarkGoldenRod`, `DarkGray`, `DarkGrey`, `DarkGreen`, `DarkKhaki`, `DarkMagenta`, `DarkOliveGreen`, `DarkOrange`, `DarkOrchid`, `DarkRed`, `DarkSalmon`, `DarkSeaGreen`, `DarkSlateBlue`, `DarkSlateGray`, `DarkSlateGrey`, `DarkTurquoise`, `DarkViolet`, `DeepPink`, `DeepSkyBlue`, `DimGray`, `DimGrey`, `DodgerBlue`, `FireBrick`, `FloralWhite`, `ForestGreen`, `Fuchsia`, `Gainsboro`, `GhostWhite`, `Gold`, `GoldenRod`, `Gray`, `Grey`, `Green`, `GreenYellow`, `HoneyDew`, `HotPink`, `IndianRed`, `Indigo`, `Ivory`, `Khaki`, `Lavender`, `LavenderBlush`, `LawnGreen`, `LemonChiffon`, `LightBlue`, `LightCoral`, `LightCyan`, `LightGoldenRodYellow`, `LightGray`, `LightGrey`, `LightGreen`, `LightPink`, `LightSalmon`, `LightSeaGreen`, `LightSkyBlue`, `LightSlateGray`, `LightSlateGrey`, `LightSteelBlue`, `LightYellow`, `Lime`, `LimeGreen`, `Linen`, `Magenta`, `Maroon`, `MediumAquaMarine`, `MediumBlue`, `MediumOrchid`, `MediumPurple`, `MediumSeaGreen`, `MediumSlateBlue`, `MediumSpringGreen`, `MediumTurquoise`, `MediumVioletRed`, `MidnightBlue`, `MintCream`, `MistyRose`, `Moccasin`, `NavajoWhite`, `Navy`, `OldLace`, `Olive`, `OliveDrab`, `Orange`, `OrangeRed`, `Orchid`, `PaleGoldenRod`, `PaleGreen`, `PaleTurquoise`, `PaleVioletRed`, `PapayaWhip`, `PeachPuff`, `Peru`, `Pink`, `Plum`, `PowderBlue`, `Purple`, `RebeccaPurple`, `Red`, `RosyBrown`, `RoyalBlue`, `SaddleBrown`, `Salmon`, `SandyBrown`, `SeaGreen`, `SeaShell`, `Sienna`, `Silver`, `SkyBlue`, `SlateBlue`, `SlateGray`, `SlateGrey`, `Snow`, `SpringGreen`, `SteelBlue`, `Tan`, `Teal`, `Thistle`, `Tomato`, `Turquoise`, `Violet`, `Wheat`, `White`, `WhiteSmoke`, `Yellow`, `YellowGreen`}\n+\n+\tconst cssPropertyPattern = `(?<!:\\s*)[^ \\t:=\"\\[;(),.]+(?=[ \\t]*:(?:#{|[^{])+?[;,])`\n+\n+\treturn Rules{\n \t\t\"root\": {\n+\t\t\t{`[{}()]`, Punctuation, nil},\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`//.*?\\n`, CommentSingle, nil},\n \t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n \t\t\t{`@import`, Keyword, Push(\"value\")},\n+\t\t\t{\n+\t\t\t\t`(@(?:use|forward))(\\s+)([^\\s;]+)(?:(\\s+)(as)(\\s+)(\\w+|\\*))?(?:(\\s+)(with))?`,\n+\t\t\t\tByGroups(Keyword, Text, UsingSelf(\"selector\"), Text, Keyword, Text, NameNamespace, Text, Keyword),\n+\t\t\t\tPush(\"value\"),\n+\t\t\t},\n \t\t\t{`@for`, Keyword, Push(\"for\")},\n-\t\t\t{`@(debug|warn|if|while)`, Keyword, Push(\"value\")},\n-\t\t\t{`(@mixin)( [\\w-]+)`, ByGroups(Keyword, NameFunction), Push(\"value\")},\n+\t\t\t{`@each`, Keyword, Push(\"each\")},\n+\t\t\t{`@(debug|warn|else if|if|while|return)`, Keyword, Push(\"value\")},\n+\t\t\t{`(@(?:mixin|function))( [\\w-]+)`, ByGroups(Keyword, NameFunction), Push(\"value\")},\n \t\t\t{`(@include)( [\\w-]+)`, ByGroups(Keyword, NameDecorator), Push(\"value\")},\n \t\t\t{`@extend`, Keyword, Push(\"selector\")},\n \t\t\t{`(@media)(\\s+)`, ByGroups(Keyword, Text), Push(\"value\")},\n \t\t\t{`@[\\w-]+`, Keyword, Push(\"selector\")},\n \t\t\t{`(\\$[\\w-]*\\w)([ \\t]*:)`, ByGroups(NameVariable, Operator), Push(\"value\")},\n+\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n+\t\t\t{Words(`\\b`, `(?=\\s*:)`, cssProperties...), NameAttribute, Push(\"attr\")},\n+\t\t\t{cssPropertyPattern, NameAttribute, Push(\"attr\")},\n \t\t\tDefault(Push(\"selector\")),\n \t\t},\n \t\t\"attr\": {\n-\t\t\t{`[^\\s:=\"\\[]+`, NameAttribute, nil},\n \t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n \t\t\t{`[ \\t]*:`, Operator, Push(\"value\")},\n \t\t\tDefault(Pop(1)),\n@@ -45,20 +68,21 @@ var Scss = internal.Register(MustNewLexer(\n \t\t},\n \t\t\"value\": {\n \t\t\t{`[ \\t]+`, Text, nil},\n+\t\t\t{`!(important|default|global)`, Keyword, nil},\n \t\t\t{`[!$][\\w-]+`, NameVariable, nil},\n \t\t\t{`url\\(`, LiteralStringOther, Push(\"string-url\")},\n \t\t\t{`[a-z_-][\\w-]*(?=\\()`, NameFunction, nil},\n-\t\t\t{Words(``, `\\b`, `align-content`, `align-items`, `align-self`, `alignment-baseline`, `all`, `animation`, `animation-delay`, `animation-direction`, `animation-duration`, `animation-fill-mode`, `animation-iteration-count`, `animation-name`, `animation-play-state`, `animation-timing-function`, `appearance`, `azimuth`, `backface-visibility`, `background`, `background-attachment`, `background-blend-mode`, `background-clip`, `background-color`, `background-image`, `background-origin`, `background-position`, `background-repeat`, `background-size`, `baseline-shift`, `bookmark-label`, `bookmark-level`, `bookmark-state`, `border`, `border-bottom`, `border-bottom-color`, `border-bottom-left-radius`, `border-bottom-right-radius`, `border-bottom-style`, `border-bottom-width`, `border-boundary`, `border-collapse`, `border-color`, `border-image`, `border-image-outset`, `border-image-repeat`, `border-image-slice`, `border-image-source`, `border-image-width`, `border-left`, `border-left-color`, `border-left-style`, `border-left-width`, `border-radius`, `border-right`, `border-right-color`, `border-right-style`, `border-right-width`, `border-spacing`, `border-style`, `border-top`, `border-top-color`, `border-top-left-radius`, `border-top-right-radius`, `border-top-style`, `border-top-width`, `border-width`, `bottom`, `box-decoration-break`, `box-shadow`, `box-sizing`, `box-snap`, `box-suppress`, `break-after`, `break-before`, `break-inside`, `caption-side`, `caret`, `caret-animation`, `caret-color`, `caret-shape`, `chains`, `clear`, `clip`, `clip-path`, `clip-rule`, `color`, `color-interpolation-filters`, `column-count`, `column-fill`, `column-gap`, `column-rule`, `column-rule-color`, `column-rule-style`, `column-rule-width`, `column-span`, `column-width`, `columns`, `content`, `counter-increment`, `counter-reset`, `counter-set`, `crop`, `cue`, `cue-after`, `cue-before`, `cursor`, `direction`, `display`, `dominant-baseline`, `elevation`, `empty-cells`, `filter`, `flex`, `flex-basis`, `flex-direction`, `flex-flow`, `flex-grow`, `flex-shrink`, `flex-wrap`, `float`, `float-defer`, `float-offset`, `float-reference`, `flood-color`, `flood-opacity`, `flow`, `flow-from`, `flow-into`, `font`, `font-family`, `font-feature-settings`, `font-kerning`, `font-language-override`, `font-size`, `font-size-adjust`, `font-stretch`, `font-style`, `font-synthesis`, `font-variant`, `font-variant-alternates`, `font-variant-caps`, `font-variant-east-asian`, `font-variant-ligatures`, `font-variant-numeric`, `font-variant-position`, `font-weight`, `footnote-display`, `footnote-policy`, `glyph-orientation-vertical`, `grid`, `grid-area`, `grid-auto-columns`, `grid-auto-flow`, `grid-auto-rows`, `grid-column`, `grid-column-end`, `grid-column-gap`, `grid-column-start`, `grid-gap`, `grid-row`, `grid-row-end`, `grid-row-gap`, `grid-row-start`, `grid-template`, `grid-template-areas`, `grid-template-columns`, `grid-template-rows`, `hanging-punctuation`, `height`, `hyphenate-character`, `hyphenate-limit-chars`, `hyphenate-limit-last`, `hyphenate-limit-lines`, `hyphenate-limit-zone`, `hyphens`, `image-orientation`, `image-resolution`, `initial-letter`, `initial-letter-align`, `initial-letter-wrap`, `isolation`, `justify-content`, `justify-items`, `justify-self`, `left`, `letter-spacing`, `lighting-color`, `line-break`, `line-grid`, `line-height`, `line-snap`, `list-style`, `list-style-image`, `list-style-position`, `list-style-type`, `margin`, `margin-bottom`, `margin-left`, `margin-right`, `margin-top`, `marker-side`, `marquee-direction`, `marquee-loop`, `marquee-speed`, `marquee-style`, `mask`, `mask-border`, `mask-border-mode`, `mask-border-outset`, `mask-border-repeat`, `mask-border-slice`, `mask-border-source`, `mask-border-width`, `mask-clip`, `mask-composite`, `mask-image`, `mask-mode`, `mask-origin`, `mask-position`, `mask-repeat`, `mask-size`, `mask-type`, `max-height`, `max-lines`, `max-width`, `min-height`, `min-width`, `mix-blend-mode`, `motion`, `motion-offset`, `motion-path`, `motion-rotation`, `move-to`, `nav-down`, `nav-left`, `nav-right`, `nav-up`, `object-fit`, `object-position`, `offset-after`, `offset-before`, `offset-end`, `offset-start`, `opacity`, `order`, `orphans`, `outline`, `outline-color`, `outline-offset`, `outline-style`, `outline-width`, `overflow`, `overflow-style`, `overflow-wrap`, `overflow-x`, `overflow-y`, `padding`, `padding-bottom`, `padding-left`, `padding-right`, `padding-top`, `page`, `page-break-after`, `page-break-before`, `page-break-inside`, `page-policy`, `pause`, `pause-after`, `pause-before`, `perspective`, `perspective-origin`, `pitch`, `pitch-range`, `play-during`, `polar-angle`, `polar-distance`, `position`, `presentation-level`, `quotes`, `region-fragment`, `resize`, `rest`, `rest-after`, `rest-before`, `richness`, `right`, `rotation`, `rotation-point`, `ruby-align`, `ruby-merge`, `ruby-position`, `running`, `scroll-snap-coordinate`, `scroll-snap-destination`, `scroll-snap-points-x`, `scroll-snap-points-y`, `scroll-snap-type`, `shape-image-threshold`, `shape-inside`, `shape-margin`, `shape-outside`, `size`, `speak`, `speak-as`, `speak-header`, `speak-numeral`, `speak-punctuation`, `speech-rate`, `stress`, `string-set`, `tab-size`, `table-layout`, `text-align`, `text-align-last`, `text-combine-upright`, `text-decoration`, `text-decoration-color`, `text-decoration-line`, `text-decoration-skip`, `text-decoration-style`, `text-emphasis`, `text-emphasis-color`, `text-emphasis-position`, `text-emphasis-style`, `text-indent`, `text-justify`, `text-orientation`, `text-overflow`, `text-shadow`, `text-space-collapse`, `text-space-trim`, `text-spacing`, `text-transform`, `text-underline-position`, `text-wrap`, `top`, `transform`, `transform-origin`, `transform-style`, `transition`, `transition-delay`, `transition-duration`, `transition-property`, `transition-timing-function`, `unicode-bidi`, `user-select`, `vertical-align`, `visibility`, `voice-balance`, `voice-duration`, `voice-family`, `voice-pitch`, `voice-range`, `voice-rate`, `voice-stress`, `voice-volume`, `volume`, `white-space`, `widows`, `width`, `will-change`, `word-break`, `word-spacing`, `word-wrap`, `wrap-after`, `wrap-before`, `wrap-flow`, `wrap-inside`, `wrap-through`, `writing-mode`, `z-index`, `above`, `absolute`, `always`, `armenian`, `aural`, `auto`, `avoid`, `baseline`, `behind`, `below`, `bidi-override`, `blink`, `block`, `bold`, `bolder`, `both`, `capitalize`, `center-left`, `center-right`, `center`, `circle`, `cjk-ideographic`, `close-quote`, `collapse`, `condensed`, `continuous`, `crop`, `crosshair`, `cross`, `cursive`, `dashed`, `decimal-leading-zero`, `decimal`, `default`, `digits`, `disc`, `dotted`, `double`, `e-resize`, `embed`, `extra-condensed`, `extra-expanded`, `expanded`, `fantasy`, `far-left`, `far-right`, `faster`, `fast`, `fixed`, `georgian`, `groove`, `hebrew`, `help`, `hidden`, `hide`, `higher`, `high`, `hiragana-iroha`, `hiragana`, `icon`, `inherit`, `inline-table`, `inline`, `inset`, `inside`, `invert`, `italic`, `justify`, `katakana-iroha`, `katakana`, `landscape`, `larger`, `large`, `left-side`, `leftwards`, `level`, `lighter`, `line-through`, `list-item`, `loud`, `lower-alpha`, `lower-greek`, `lower-roman`, `lowercase`, `ltr`, `lower`, `low`, `medium`, `message-box`, `middle`, `mix`, `monospace`, `n-resize`, `narrower`, `ne-resize`, `no-close-quote`, `no-open-quote`, `no-repeat`, `none`, `normal`, `nowrap`, `nw-resize`, `oblique`, `once`, `open-quote`, `outset`, `outside`, `overline`, `pointer`, `portrait`, `px`, `relative`, `repeat-x`, `repeat-y`, `repeat`, `rgb`, `ridge`, `right-side`, `rightwards`, `s-resize`, `sans-serif`, `scroll`, `se-resize`, `semi-condensed`, `semi-expanded`, `separate`, `serif`, `show`, `silent`, `slow`, `slower`, `small-caps`, `small-caption`, `smaller`, `soft`, `solid`, `spell-out`, `square`, `static`, `status-bar`, `super`, `sw-resize`, `table-caption`, `table-cell`, `table-column`, `table-column-group`, `table-footer-group`, `table-header-group`, `table-row`, `table-row-group`, `text`, `text-bottom`, `text-top`, `thick`, `thin`, `transparent`, `ultra-condensed`, `ultra-expanded`, `underline`, `upper-alpha`, `upper-latin`, `upper-roman`, `uppercase`, `url`, `visible`, `w-resize`, `wait`, `wider`, `x-fast`, `x-high`, `x-large`, `x-loud`, `x-low`, `x-small`, `x-soft`, `xx-large`, `xx-small`, `yes`), NameConstant, nil},\n-\t\t\t{Words(``, `\\b`, `aliceblue`, `antiquewhite`, `aqua`, `aquamarine`, `azure`, `beige`, `bisque`, `black`, `blanchedalmond`, `blue`, `blueviolet`, `brown`, `burlywood`, `cadetblue`, `chartreuse`, `chocolate`, `coral`, `cornflowerblue`, `cornsilk`, `crimson`, `cyan`, `darkblue`, `darkcyan`, `darkgoldenrod`, `darkgray`, `darkgreen`, `darkgrey`, `darkkhaki`, `darkmagenta`, `darkolivegreen`, `darkorange`, `darkorchid`, `darkred`, `darksalmon`, `darkseagreen`, `darkslateblue`, `darkslategray`, `darkslategrey`, `darkturquoise`, `darkviolet`, `deeppink`, `deepskyblue`, `dimgray`, `dimgrey`, `dodgerblue`, `firebrick`, `floralwhite`, `forestgreen`, `fuchsia`, `gainsboro`, `ghostwhite`, `gold`, `goldenrod`, `gray`, `green`, `greenyellow`, `grey`, `honeydew`, `hotpink`, `indianred`, `indigo`, `ivory`, `khaki`, `lavender`, `lavenderblush`, `lawngreen`, `lemonchiffon`, `lightblue`, `lightcoral`, `lightcyan`, `lightgoldenrodyellow`, `lightgray`, `lightgreen`, `lightgrey`, `lightpink`, `lightsalmon`, `lightseagreen`, `lightskyblue`, `lightslategray`, `lightslategrey`, `lightsteelblue`, `lightyellow`, `lime`, `limegreen`, `linen`, `magenta`, `maroon`, `mediumaquamarine`, `mediumblue`, `mediumorchid`, `mediumpurple`, `mediumseagreen`, `mediumslateblue`, `mediumspringgreen`, `mediumturquoise`, `mediumvioletred`, `midnightblue`, `mintcream`, `mistyrose`, `moccasin`, `navajowhite`, `navy`, `oldlace`, `olive`, `olivedrab`, `orange`, `orangered`, `orchid`, `palegoldenrod`, `palegreen`, `paleturquoise`, `palevioletred`, `papayawhip`, `peachpuff`, `peru`, `pink`, `plum`, `powderblue`, `purple`, `rebeccapurple`, `red`, `rosybrown`, `royalblue`, `saddlebrown`, `salmon`, `sandybrown`, `seagreen`, `seashell`, `sienna`, `silver`, `skyblue`, `slateblue`, `slategray`, `slategrey`, `snow`, `springgreen`, `steelblue`, `tan`, `teal`, `thistle`, `tomato`, `turquoise`, `violet`, `wheat`, `white`, `whitesmoke`, `yellow`, `yellowgreen`, `transparent`), NameEntity, nil},\n-\t\t\t{Words(``, `\\b`, `black`, `silver`, `gray`, `white`, `maroon`, `red`, `purple`, `fuchsia`, `green`, `lime`, `olive`, `yellow`, `navy`, `blue`, `teal`, `aqua`), NameBuiltin, nil},\n-\t\t\t{`\\!(important|default)`, NameException, nil},\n+\t\t\t{Words(`\\b`, `(?=\\s*:)`, cssProperties...), NameAttribute, nil},\n+\t\t\t{cssPropertyPattern, NameAttribute, nil},\n+\t\t\t{Words(`\\b`, `\\b`, cssPropertyValues...), NameEntity, nil},\n+\t\t\t{Words(`(?i)\\b`, `\\b`, cssColorNames...), NameConstant, nil},\n \t\t\t{`(true|false)`, NamePseudo, nil},\n \t\t\t{`(and|or|not)`, OperatorWord, nil},\n \t\t\t{`/\\*`, CommentMultiline, Push(\"inline-comment\")},\n \t\t\t{`//[^\\n]*`, CommentSingle, nil},\n \t\t\t{`\\#[a-z0-9]{1,6}`, LiteralNumberHex, nil},\n-\t\t\t{`(-?\\d+)(\\%|[a-z]+)?`, ByGroups(LiteralNumberInteger, KeywordType), nil},\n-\t\t\t{`(-?\\d*\\.\\d+)(\\%|[a-z]+)?`, ByGroups(LiteralNumberFloat, KeywordType), nil},\n+\t\t\t{`(-)?(\\d+)(\\%|[a-z]+)?`, ByGroups(Operator, LiteralNumberInteger, KeywordType), nil},\n+\t\t\t{`(-?)(\\d*\\.\\d+)(\\%|[a-z]+)?`, ByGroups(Operator, LiteralNumberFloat, KeywordType), nil},\n \t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n \t\t\t{`[~^*!&%<>|+=@:,./?-]+`, Operator, nil},\n \t\t\t{`[\\[\\]()]+`, Punctuation, nil},\n@@ -76,15 +100,16 @@ var Scss = internal.Register(MustNewLexer(\n \t\t\t{`[ \\t]+`, Text, nil},\n \t\t\t{`\\:`, NameDecorator, Push(\"pseudo-class\")},\n \t\t\t{`\\.`, NameClass, Push(\"class\")},\n-\t\t\t{`\\#`, NameNamespace, Push(\"id\")},\n-\t\t\t{`[\\w-]+`, NameTag, nil},\n \t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n+\t\t\t{`\\#`, NameNamespace, Push(\"id\")},\n \t\t\t{`&`, Keyword, nil},\n \t\t\t{`[~^*!&\\[\\]()<>|+=@:,./?-]`, Operator, nil},\n+\t\t\t{`(%)([\\w-]+)`, ByGroups(Operator, NameClass), nil},\n \t\t\t{`\"`, LiteralStringDouble, Push(\"string-double\")},\n \t\t\t{`'`, LiteralStringSingle, Push(\"string-single\")},\n \t\t\t{`\\n`, Text, nil},\n \t\t\t{`[;{}]`, Punctuation, Pop(1)},\n+\t\t\t{`[\\w-]+`, NameTag, nil},\n \t\t},\n \t\t\"string-double\": {\n \t\t\t{`(\\\\.|#(?=[^\\n{])|[^\\n\"#])+`, LiteralStringDouble, nil},\n@@ -120,5 +145,9 @@ var Scss = internal.Register(MustNewLexer(\n \t\t\t{`(from|to|through)`, OperatorWord, nil},\n \t\t\tInclude(\"value\"),\n \t\t},\n-\t},\n-))\n+\t\t\"each\": {\n+\t\t\t{`in`, OperatorWord, nil},\n+\t\t\tInclude(\"value\"),\n+\t\t},\n+\t}\n+}"
    },
    {
      "sha": "b4143d02fc598c35625524437344394ffb2d6587",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/smalltalk.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/smalltalk.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/smalltalk.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/s/smalltalk.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Smalltalk lexer.\n-var Smalltalk = internal.Register(MustNewLexer(\n+var Smalltalk = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Smalltalk\",\n \t\tAliases:   []string{\"smalltalk\", \"squeak\", \"st\"},\n \t\tFilenames: []string{\"*.st\"},\n \t\tMimeTypes: []string{\"text/x-smalltalk\"},\n \t},\n-\tRules{\n+\tsmalltalkRules,\n+))\n+\n+func smalltalkRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`(<)(\\w+:)(.*?)(>)`, ByGroups(Text, Keyword, Text, Text), nil},\n \t\t\tInclude(\"squeak fileout\"),\n@@ -95,5 +99,5 @@ var Smalltalk = internal.Register(MustNewLexer(\n \t\t\t{`(!\\n)(\\].*)(! !)$`, ByGroups(Keyword, Text, Keyword), nil},\n \t\t\t{`! !$`, Keyword, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "566efbbeff7124605cf893bdfefb72818c552d06",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/smarty.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/smarty.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/smarty.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/s/smarty.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -7,15 +7,19 @@ import (\n )\n \n // Smarty lexer.\n-var Smarty = internal.Register(MustNewLexer(\n+var Smarty = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Smarty\",\n \t\tAliases:   []string{\"smarty\"},\n \t\tFilenames: []string{\"*.tpl\"},\n \t\tMimeTypes: []string{\"application/x-smarty\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\tsmartyRules,\n+))\n+\n+func smartyRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[^{]+`, Other, nil},\n \t\t\t{`(\\{)(\\*.*?\\*)(\\})`, ByGroups(CommentPreproc, Comment, CommentPreproc), nil},\n@@ -36,5 +40,5 @@ var Smarty = internal.Register(MustNewLexer(\n \t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n \t\t\t{`[a-zA-Z_]\\w*`, NameAttribute, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "c795ea867e27490b4853cf84627c8ef887fc3226",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/sml.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/sml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/sml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/s/sml.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Standard ML lexer.\n-var StandardML = internal.Register(MustNewLexer(\n+var StandardML = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Standard ML\",\n \t\tAliases:   []string{\"sml\"},\n \t\tFilenames: []string{\"*.sml\", \"*.sig\", \"*.fun\"},\n \t\tMimeTypes: []string{\"text/x-standardml\", \"application/x-standardml\"},\n \t},\n-\tRules{\n+\tstandardMLRules,\n+))\n+\n+func standardMLRules() Rules {\n+\treturn Rules{\n \t\t\"whitespace\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`\\(\\*`, CommentMultiline, Push(\"comment\")},\n@@ -196,5 +200,5 @@ var StandardML = internal.Register(MustNewLexer(\n \t\t\t{`\\*\\)`, CommentMultiline, Pop(1)},\n \t\t\t{`[(*)]`, CommentMultiline, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "4529034675e34a225f10fe4dd197899279f81e2e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/snobol.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/snobol.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/snobol.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/s/snobol.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Snobol lexer.\n-var Snobol = internal.Register(MustNewLexer(\n+var Snobol = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Snobol\",\n \t\tAliases:   []string{\"snobol\"},\n \t\tFilenames: []string{\"*.snobol\"},\n \t\tMimeTypes: []string{\"text/x-snobol\"},\n \t},\n-\tRules{\n+\tsnobolRules,\n+))\n+\n+func snobolRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\*.*\\n`, Comment, nil},\n \t\t\t{`[+.] `, Punctuation, Push(\"statement\")},\n@@ -44,5 +48,5 @@ var Snobol = internal.Register(MustNewLexer(\n \t\t\"heredoc\": {\n \t\t\t{`.*\\n`, LiteralStringHeredoc, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "62a3a40a1176ef4e964824f16dbd90741024157f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/solidity.go",
      "status": "modified",
      "additions": 26,
      "deletions": 18,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/solidity.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/solidity.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/s/solidity.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Solidity lexer.\n-var Solidity = internal.Register(MustNewLexer(\n+var Solidity = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Solidity\",\n \t\tAliases:   []string{\"sol\", \"solidity\"},\n \t\tFilenames: []string{\"*.sol\"},\n \t\tMimeTypes: []string{},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\tsolidityRules,\n+))\n+\n+func solidityRules() Rules {\n+\treturn Rules{\n \t\t\"assembly\": {\n \t\t\tInclude(\"comments\"),\n \t\t\tInclude(\"numbers\"),\n@@ -35,17 +39,16 @@ var Solidity = internal.Register(MustNewLexer(\n \t\t\t{`/[*][\\w\\W]*`, CommentMultiline, nil},\n \t\t},\n \t\t\"keywords-other\": {\n-\t\t\t{Words(``, `\\b`, `for`, `in`, `while`, `do`, `break`, `return`, `returns`, `continue`, `if`, `else`, `throw`, `new`, `delete`), Keyword, nil},\n+\t\t\t{Words(``, `\\b`, `for`, `in`, `while`, `do`, `break`, `return`, `returns`, `continue`, `if`, `else`, `try`, `catch`, `throw`, `_`, `new`, `delete`, `is`, `as`, `from`, `memory`, `storage`), Keyword, nil},\n \t\t\t{`assembly\\b`, Keyword, Push(\"assembly\")},\n-\t\t\t{Words(``, `\\b`, `contract`, `interface`, `enum`, `event`, `function`, `library`, `mapping`, `modifier`, `struct`, `var`), KeywordDeclaration, nil},\n+\t\t\t{`(contract|interface|enum|event|struct)(\\s+)([a-zA-Z_]\\w*)`, ByGroups(KeywordDeclaration, Text, NameClass), nil},\n+\t\t\t{`(function|modifier)(\\s+)([a-zA-Z_]\\w*)`, ByGroups(KeywordDeclaration, Text, NameFunction), nil},\n+\t\t\t{Words(``, `\\b`, `contract`, `interface`, `enum`, `event`, `constructor`, `function`, `library`, `mapping`, `modifier`, `struct`, `var`), KeywordDeclaration, nil},\n+\t\t\t{Words(``, `\\b`, `abstract`, `external`, `internal`, `private`, `public`), Keyword, nil},\n+\t\t\t{Words(``, `\\b`, `anonymous`, `constant`, `immutable`, `indexed`, `override`, `payable`, `pure`, `view`, `virtual`), Keyword, nil},\n \t\t\t{`(import|using)\\b`, KeywordNamespace, nil},\n-\t\t\t{`pragma (solidity|experimental)\\b`, KeywordReserved, nil},\n-\t\t\t{`(_|as|constant|default|from|is)\\b`, KeywordReserved, nil},\n-\t\t\t{`payable\\b`, KeywordReserved, nil},\n-\t\t\t{`(memory|storage)\\b`, KeywordReserved, nil},\n-\t\t\t{`(external|internal|private|public)\\b`, KeywordReserved, nil},\n-\t\t\t{`(anonymous|indexed)\\b`, KeywordReserved, nil},\n-\t\t\t{`(abstract|pure|static|view)\\b`, KeywordReserved, nil},\n+\t\t\t{`pragma (solidity|experimental)\\b`, Keyword, nil},\n+\t\t\t{Words(``, `\\b`, `after`, `alias`, `apply`, `auto`, `case`, `copyof`, `default`, `define`, `final`, `implements`, `inline`, `let`, `macro`, `match`, `mutable`, `null`, `of`, `partial`, `promise`, `reference`, `relocatable`, `sealed`, `sizeof`, `static`, `supports`, `switch`, `typedef`, `typeof`, `unchecked`), KeywordReserved, nil},\n \t\t\t{`(true|false)\\b`, KeywordConstant, nil},\n \t\t\t{`(wei|finney|szabo|ether)\\b`, KeywordConstant, nil},\n \t\t\t{`(seconds|minutes|hours|days|weeks|years)\\b`, KeywordConstant, nil},\n@@ -95,16 +98,21 @@ var Solidity = internal.Register(MustNewLexer(\n \t\t\t{`\\+\\+|--|\\*\\*|\\?|:|~|&&|\\|\\||=>|==?|!=?|(<<|>>>?|[-<>+*%&|^/])=?`, Operator, nil},\n \t\t\t{`[{(\\[;,]`, Punctuation, nil},\n \t\t\t{`[})\\].]`, Punctuation, nil},\n-\t\t\t{`(block|msg|now|this|super|tx)\\b`, NameBuiltin, nil},\n-\t\t\t{`(sender|origin)\\b`, NameBuiltin, nil},\n-\t\t\t{`(gas|value)\\b`, NameBuiltin, nil},\n+\t\t\t{`(abi|block|msg|tx)\\b`, NameBuiltin, nil},\n+\t\t\t{`(?!abi\\.)(decode|encode|encodePacked|encodeWithSelector|encodeWithSignature|encodeWithSelector)\\b`, NameBuiltin, nil},\n+\t\t\t{`(?!block\\.)(chainid|coinbase|difficulty|gaslimit|number|timestamp)\\b`, NameBuiltin, nil},\n+\t\t\t{`(?!msg\\.)(data|gas|sender|value)\\b`, NameBuiltin, nil},\n+\t\t\t{`(?!tx\\.)(gasprice|origin)\\b`, NameBuiltin, nil},\n+\t\t\t{`(type)(\\()([a-zA-Z_]\\w*)(\\))`, ByGroups(NameBuiltin, Punctuation, NameClass, Punctuation), nil},\n+\t\t\t{`(?!type\\([a-zA-Z_]\\w*\\)\\.)(creationCode|interfaceId|max|min|name|runtimeCode)\\b`, NameBuiltin, nil},\n+\t\t\t{`(now|this|super|gasleft)\\b`, NameBuiltin, nil},\n \t\t\t{`(selfdestruct|suicide)\\b`, NameBuiltin, nil},\n-\t\t\t{`(balance|send|transfer)\\b`, NameBuiltin, nil},\n+\t\t\t{`(?!0x[0-9a-fA-F]+\\.)(balance|code|codehash|send|transfer)\\b`, NameBuiltin, nil},\n \t\t\t{`(assert|revert|require)\\b`, NameBuiltin, nil},\n \t\t\t{`(call|callcode|delegatecall)\\b`, NameBuiltin, nil},\n \t\t\t{`selector\\b`, NameBuiltin, nil},\n-\t\t\t{`(addmod|ecrecover|keccak256|mulmod|ripemd160|sha256|sha3)\\b`, NameFunction, nil},\n+\t\t\t{`(addmod|blockhash|ecrecover|keccak256|mulmod|ripemd160|sha256|sha3)\\b`, NameBuiltin, nil},\n \t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "eef73d9daef487997e37bbfac0607d974bd7e2ad",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/sparql.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/sparql.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/sparql.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/s/sparql.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Sparql lexer.\n-var Sparql = internal.Register(MustNewLexer(\n+var Sparql = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"SPARQL\",\n \t\tAliases:   []string{\"sparql\"},\n \t\tFilenames: []string{\"*.rq\", \"*.sparql\"},\n \t\tMimeTypes: []string{\"application/sparql-query\"},\n \t},\n-\tRules{\n+\tsparqlRules,\n+))\n+\n+func sparqlRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`((?i)select|construct|describe|ask|where|filter|group\\s+by|minus|distinct|reduced|from\\s+named|from|order\\s+by|desc|asc|limit|offset|bindings|load|clear|drop|create|add|move|copy|insert\\s+data|delete\\s+data|delete\\s+where|delete|insert|using\\s+named|using|graph|default|named|all|optional|service|silent|bind|union|not\\s+in|in|as|having|to|prefix|base)\\b`, Keyword, nil},\n@@ -65,5 +69,5 @@ var Sparql = internal.Register(MustNewLexer(\n \t\t\t{`\\^\\^`, Operator, Pop(2)},\n \t\t\tDefault(Pop(2)),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "fb8c8edf1bd418f307603d9b9635431d4e0f69c8",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/sql.go",
      "status": "modified",
      "additions": 9,
      "deletions": 5,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/sql.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/sql.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/s/sql.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,7 +6,7 @@ import (\n )\n \n // SQL lexer.\n-var SQL = internal.Register(MustNewLexer(\n+var SQL = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"SQL\",\n \t\tAliases:         []string{\"sql\"},\n@@ -15,9 +15,13 @@ var SQL = internal.Register(MustNewLexer(\n \t\tNotMultiline:    true,\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tsqlRules,\n+))\n+\n+func sqlRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n+\t\t\t{`\\s+`, TextWhitespace, nil},\n \t\t\t{`--.*\\n?`, CommentSingle, nil},\n \t\t\t{`/\\*`, CommentMultiline, Push(\"multiline-comments\")},\n \t\t\t{`'`, LiteralStringSingle, Push(\"string\")},\n@@ -45,5 +49,5 @@ var SQL = internal.Register(MustNewLexer(\n \t\t\t{`\"\"`, LiteralStringDouble, nil},\n \t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "b4da3da10cc9e23429bf4c1fc265db65f0a0927d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/squid.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/squid.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/squid.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/s/squid.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,7 +6,7 @@ import (\n )\n \n // Squidconf lexer.\n-var Squidconf = internal.Register(MustNewLexer(\n+var Squidconf = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"SquidConf\",\n \t\tAliases:         []string{\"squidconf\", \"squid.conf\", \"squid\"},\n@@ -15,7 +15,11 @@ var Squidconf = internal.Register(MustNewLexer(\n \t\tNotMultiline:    true,\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tsquidconfRules,\n+))\n+\n+func squidconfRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, TextWhitespace, nil},\n \t\t\t{`#`, Comment, Push(\"comment\")},\n@@ -34,5 +38,5 @@ var Squidconf = internal.Register(MustNewLexer(\n \t\t\t{`.+`, Comment, Pop(1)},\n \t\t\tDefault(Pop(1)),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "159077f4c22bc0187c3b62a0caf7c3e2979e77e3",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/stylus.go",
      "status": "added",
      "additions": 66,
      "deletions": 0,
      "changes": 66,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/stylus.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/stylus.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/s/stylus.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,66 @@\n+package s\n+\n+import (\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+)\n+\n+// Stylus lexer.\n+var Stylus = internal.Register(MustNewLazyLexer(\n+\t&Config{\n+\t\tName:            \"Stylus\",\n+\t\tAliases:         []string{\"stylus\"},\n+\t\tFilenames:       []string{\"*.styl\"},\n+\t\tMimeTypes:       []string{\"text/x-styl\"},\n+\t\tCaseInsensitive: true,\n+\t},\n+\tstylusRules,\n+))\n+\n+func stylusRules() Rules {\n+\treturn Rules{\n+\t\t// \"root\": {\n+\t\t// },\n+\t\t\"root\": {\n+\t\t\t{`([ \\t]*\\n|\\s+)`, Text, nil},\n+\t\t\t{`[!$][\\w-]+`, NameVariable, nil},\n+\t\t\t{`@[\\w-]+`, KeywordPseudo, Push(\"atrule\")},\n+\t\t\t{`(\\.)([\\w-]+)`, ByGroups(Punctuation, NameClass), nil},\n+\t\t\t{`for|if|else if|else|unless|return|\\&`, Keyword, nil},\n+\t\t\t{`([\\w-]+)(\\()`, ByGroups(NameDecorator, Punctuation), Push(\"function-start\")},\n+\t\t\t{`(\\+)([\\w-]+)(\\(\\))`, ByGroups(Keyword, NameDecorator, Punctuation), nil},\n+\t\t\t{Words(``, ``, `-ms-`, `mso-`, `-moz-`, `-o-`, `-xv-`, `-atsc-`, `-wap-`, `-khtml-`, `-webkit-`, `prince-`, `-ah-`, `-hp-`, `-ro-`, `-rim-`, `-tc-`), NameProperty, nil},\n+\t\t\t{`\\b(align-content|align-items|align-self|alignment-baseline|all|animation|animation-delay|animation-direction|animation-duration|animation-fill-mode|animation-iteration-count|animation-name|animation-play-state|animation-timing-function|appearance|azimuth|backface-visibility|background|background-attachment|background-blend-mode|background-clip|background-color|background-image|background-origin|background-position|background-repeat|background-size|baseline-shift|bookmark-label|bookmark-level|bookmark-state|border|border-bottom|border-bottom-color|border-bottom-left-radius|border-bottom-right-radius|border-bottom-style|border-bottom-width|border-boundary|border-collapse|border-color|border-image|border-image-outset|border-image-repeat|border-image-slice|border-image-source|border-image-width|border-left|border-left-color|border-left-style|border-left-width|border-radius|border-right|border-right-color|border-right-style|border-right-width|border-spacing|border-style|border-top|border-top-color|border-top-left-radius|border-top-right-radius|border-top-style|border-top-width|border-width|bottom|box-decoration-break|box-shadow|box-sizing|box-snap|box-suppress|break-after|break-before|break-inside|caption-side|caret|caret-animation|caret-color|caret-shape|chains|clear|clip|clip-path|clip-rule|color|color-interpolation-filters|column-count|column-fill|column-gap|column-rule|column-rule-color|column-rule-style|column-rule-width|column-span|column-width|columns|content|counter-increment|counter-reset|counter-set|crop|cue|cue-after|cue-before|cursor|direction|display|dominant-baseline|elevation|empty-cells|filter|flex|flex-basis|flex-direction|flex-flow|flex-grow|flex-shrink|flex-wrap|float|float-defer|float-offset|float-reference|flood-color|flood-opacity|flow|flow-from|flow-into|font|font-family|font-feature-settings|font-kerning|font-language-override|font-size|font-size-adjust|font-stretch|font-style|font-synthesis|font-variant|font-variant-alternates|font-variant-caps|font-variant-east-asian|font-variant-ligatures|font-variant-numeric|font-variant-position|font-weight|footnote-display|footnote-policy|glyph-orientation-vertical|grid|grid-area|grid-auto-columns|grid-auto-flow|grid-auto-rows|grid-column|grid-column-end|grid-column-gap|grid-column-start|grid-gap|grid-row|grid-row-end|grid-row-gap|grid-row-start|grid-template|grid-template-areas|grid-template-columns|grid-template-rows|hanging-punctuation|height|hyphenate-character|hyphenate-limit-chars|hyphenate-limit-last|hyphenate-limit-lines|hyphenate-limit-zone|hyphens|image-orientation|image-resolution|initial-letter|initial-letter-align|initial-letter-wrap|isolation|justify-content|justify-items|justify-self|left|letter-spacing|lighting-color|line-break|line-grid|line-height|line-snap|list-style|list-style-image|list-style-position|list-style-type|margin|margin-bottom|margin-left|margin-right|margin-top|marker-side|marquee-direction|marquee-loop|marquee-speed|marquee-style|mask|mask-border|mask-border-mode|mask-border-outset|mask-border-repeat|mask-border-slice|mask-border-source|mask-border-width|mask-clip|mask-composite|mask-image|mask-mode|mask-origin|mask-position|mask-repeat|mask-size|mask-type|max-height|max-lines|max-width|min-height|min-width|mix-blend-mode|motion|motion-offset|motion-path|motion-rotation|move-to|nav-down|nav-left|nav-right|nav-up|object-fit|object-position|offset-after|offset-before|offset-end|offset-start|opacity|order|orphans|outline|outline-color|outline-offset|outline-style|outline-width|overflow|overflow-style|overflow-wrap|overflow-x|overflow-y|padding|padding-bottom|padding-left|padding-right|padding-top|page|page-break-after|page-break-before|page-break-inside|page-policy|pause|pause-after|pause-before|perspective|perspective-origin|pitch|pitch-range|play-during|polar-angle|polar-distance|position|presentation-level|quotes|region-fragment|resize|rest|rest-after|rest-before|richness|right|rotation|rotation-point|ruby-align|ruby-merge|ruby-position|running|scroll-snap-coordinate|scroll-snap-destination|scroll-snap-points-x|scroll-snap-points-y|scroll-snap-type|shape-image-threshold|shape-inside|shape-margin|shape-outside|size|speak|speak-as|speak-header|speak-numeral|speak-punctuation|speech-rate|stress|string-set|tab-size|table-layout|text-align|text-align-last|text-combine-upright|text-decoration|text-decoration-color|text-decoration-line|text-decoration-skip|text-decoration-style|text-emphasis|text-emphasis-color|text-emphasis-position|text-emphasis-style|text-indent|text-justify|text-orientation|text-overflow|text-shadow|text-space-collapse|text-space-trim|text-spacing|text-transform|text-underline-position|text-wrap|top|transform|transform-origin|transform-style|transition|transition-delay|transition-duration|transition-property|transition-timing-function|unicode-bidi|user-select|vertical-align|visibility|voice-balance|voice-duration|voice-family|voice-pitch|voice-range|voice-rate|voice-stress|voice-volume|volume|white-space|widows|width|will-change|word-break|word-spacing|word-wrap|wrap-after|wrap-before|wrap-flow|wrap-inside|wrap-through|writing-mode|z-index)\\b(\\:)?`, ByGroups(NameProperty, Punctuation), Push(\"values\")},\n+\t\t\t{`\\b(a|abbr|acronym|address|applet|area|article|aside|audio|b|base(?:front)?|bd(?:i|o)|big|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|data|datalist|d(?:d|l|t)|del|details|dfn|dialog|dir|div|em(?:bed)?|fieldset|fig(?:caption|ure)|font|footer|form|frame(?:set)?|h[1-6]+|head(?:er)?|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|main|map|mark|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|r(?:p|t|uby)|s|samp|script|section|select|small|source|span|strike|strong|style|sub|summary|sup|svg|table|tbody|td|template|textarea|tfoot|th|thead|time|title|tr|track|tt|u|ul|var|video|wbr)\\b`, NameTag, nil},\n+\t\t\t{Words(`\\b`, `\\b`, `above`, `aural`, `behind`, `bidi-override`, `center-left`, `center-right`, `cjk-ideographic`, `continuous`, `crop`, `cross`, `embed`, `far-left`, `far-right`, `fast`, `faster`, `hebrew`, `high`, `higher`, `hiragana`, `hiragana-iroha`, `katakana`, `katakana-iroha`, `landscape`, `left-side`, `leftwards`, `level`, `loud`, `low`, `lower`, `message-box`, `middle`, `mix`, `narrower`, `once`, `portrait`, `right-side`, `rightwards`, `silent`, `slow`, `slower`, `small-caption`, `soft`, `spell-out`, `status-bar`, `super`, `text-bottom`, `text-top`, `wider`, `x-fast`, `x-high`, `x-loud`, `x-low`, `x-soft`, `yes`, `pre`, `pre-wrap`, `pre-line`), KeywordConstant, nil},\n+\t\t\t{Words(`\\b`, `\\b`, `aliceblue`, `antiquewhite`, `aqua`, `aquamarine`, `azure`, `beige`, `bisque`, `black`, `blanchedalmond`, `blue`, `blueviolet`, `brown`, `burlywood`, `cadetblue`, `chartreuse`, `chocolate`, `coral`, `cornflowerblue`, `cornsilk`, `crimson`, `cyan`, `darkblue`, `darkcyan`, `darkgoldenrod`, `darkgray`, `darkgreen`, `darkgrey`, `darkkhaki`, `darkmagenta`, `darkolivegreen`, `darkorange`, `darkorchid`, `darkred`, `darksalmon`, `darkseagreen`, `darkslateblue`, `darkslategray`, `darkslategrey`, `darkturquoise`, `darkviolet`, `deeppink`, `deepskyblue`, `dimgray`, `dimgrey`, `dodgerblue`, `firebrick`, `floralwhite`, `forestgreen`, `fuchsia`, `gainsboro`, `ghostwhite`, `gold`, `goldenrod`, `gray`, `green`, `greenyellow`, `grey`, `honeydew`, `hotpink`, `indianred`, `indigo`, `ivory`, `khaki`, `lavender`, `lavenderblush`, `lawngreen`, `lemonchiffon`, `lightblue`, `lightcoral`, `lightcyan`, `lightgoldenrodyellow`, `lightgray`, `lightgreen`, `lightgrey`, `lightpink`, `lightsalmon`, `lightseagreen`, `lightskyblue`, `lightslategray`, `lightslategrey`, `lightsteelblue`, `lightyellow`, `lime`, `limegreen`, `linen`, `magenta`, `maroon`, `mediumaquamarine`, `mediumblue`, `mediumorchid`, `mediumpurple`, `mediumseagreen`, `mediumslateblue`, `mediumspringgreen`, `mediumturquoise`, `mediumvioletred`, `midnightblue`, `mintcream`, `mistyrose`, `moccasin`, `navajowhite`, `navy`, `oldlace`, `olive`, `olivedrab`, `orange`, `orangered`, `orchid`, `palegoldenrod`, `palegreen`, `paleturquoise`, `palevioletred`, `papayawhip`, `peachpuff`, `peru`, `pink`, `plum`, `powderblue`, `purple`, `rebeccapurple`, `red`, `rosybrown`, `royalblue`, `saddlebrown`, `salmon`, `sandybrown`, `seagreen`, `seashell`, `sienna`, `silver`, `skyblue`, `slateblue`, `slategray`, `slategrey`, `snow`, `springgreen`, `steelblue`, `tan`, `teal`, `thistle`, `tomato`, `turquoise`, `violet`, `wheat`, `white`, `whitesmoke`, `yellow`, `yellowgreen`, `transparent`), KeywordConstant, nil},\n+\t\t\t{`(\\{|\\}|\\(|\\)|\\[|\\]|,|:|;)`, Punctuation, nil},\n+\t\t\t{`(\\.|\\!|\\-|\\+|\\~|\\*\\*|\\*|\\/|\\%|\\.\\.\\.|\\.\\.|\\<\\=|\\>\\=|\\<|\\>|\\=\\=|\\!\\=|\\&\\&|\\|\\||\\=|\\:\\=|\\?\\=|\\+\\=|\\-\\=|\\*\\=|\\/\\=|\\%\\=|\\?|\\:)`, Operator, nil},\n+\t\t\t{`\\b(and|if unless|in|is|is a|is defined|is not|isnt|or|not)\\b`, OperatorWord, nil},\n+\t\t\t{`(\\#[a-f0-9]{3,6})`, LiteralNumberHex, nil},\n+\t\t\t{`\\n`, Text, nil},\n+\t\t},\n+\t\t\"inline-comment\": {\n+\t\t\t{`\\*/`, Comment, Pop(1)},\n+\t\t},\n+\t\t\"atrule\": {\n+\t\t\t{`\\{`, Punctuation, Push(\"atcontent\")},\n+\t\t\t{`$`, Punctuation, Pop(1)},\n+\t\t\tInclude(\"root\"),\n+\t\t},\n+\t\t\"atcontent\": {\n+\t\t\tInclude(\"root\"),\n+\t\t\t{`\\}`, Punctuation, Pop(2)},\n+\t\t},\n+\t\t\"function-start\": {\n+\t\t\t{`\\)`, Punctuation, Pop(1)},\n+\t\t\tInclude(\"root\"),\n+\t\t},\n+\t\t\"values\": {\n+\t\t\t{`\\s+`, Text, nil},\n+\t\t\t{`(\\#[a-f0-9]{3,6})`, LiteralNumberHex, nil},\n+\t\t\t{Words(`\\b`, `\\b`, `absolute`, `alias`, `all`, `all-petite-caps`, `all-scroll`, `all-small-caps`, `allow-end`, `alpha`, `alternate`, `alternate-reverse`, `always`, `armenian`, `auto`, `avoid`, `avoid-column`, `avoid-page`, `backwards`, `balance`, `baseline`, `below`, `blink`, `block`, `bold`, `bolder`, `border-box`, `both`, `bottom`, `box-decoration`, `break-word`, `capitalize`, `cell`, `center`, `circle`, `clip`, `clone`, `close-quote`, `col-resize`, `collapse`, `color`, `color-burn`, `color-dodge`, `column`, `column-reverse`, `compact`, `condensed`, `contain`, `container`, `content-box`, `context-menu`, `copy`, `cover`, `crisp-edges`, `crosshair`, `currentColor`, `cursive`, `darken`, `dashed`, `decimal`, `decimal-leading-zero`, `default`, `descendants`, `difference`, `digits`, `disc`, `distribute`, `dot`, `dotted`, `double`, `double-circle`, `e-resize`, `each-line`, `ease`, `ease-in`, `ease-in-out`, `ease-out`, `edges`, `ellipsis`, `end`, `ew-resize`, `exclusion`, `expanded`, `extra-condensed`, `extra-expanded`, `fantasy`, `fill`, `fill-box`, `filled`, `first`, `fixed`, `flat`, `flex`, `flex-end`, `flex-start`, `flip`, `force-end`, `forwards`, `from-image`, `full-width`, `geometricPrecision`, `georgian`, `groove`, `hanging`, `hard-light`, `help`, `hidden`, `hide`, `horizontal`, `hue`, `icon`, `infinite`, `inherit`, `initial`, `ink`, `inline`, `inline-block`, `inline-flex`, `inline-table`, `inset`, `inside`, `inter-word`, `invert`, `isolate`, `italic`, `justify`, `large`, `larger`, `last`, `left`, `lighten`, `lighter`, `line-through`, `linear`, `list-item`, `local`, `loose`, `lower-alpha`, `lower-greek`, `lower-latin`, `lower-roman`, `lowercase`, `ltr`, `luminance`, `luminosity`, `mandatory`, `manipulation`, `manual`, `margin-box`, `match-parent`, `medium`, `mixed`, `monospace`, `move`, `multiply`, `n-resize`, `ne-resize`, `nesw-resize`, `no-close-quote`, `no-drop`, `no-open-quote`, `no-repeat`, `none`, `normal`, `not-allowed`, `nowrap`, `ns-resize`, `nw-resize`, `nwse-resize`, `objects`, `oblique`, `off`, `on`, `open`, `open-quote`, `optimizeLegibility`, `optimizeSpeed`, `outset`, `outside`, `over`, `overlay`, `overline`, `padding-box`, `page`, `pan-down`, `pan-left`, `pan-right`, `pan-up`, `pan-x`, `pan-y`, `paused`, `petite-caps`, `pixelated`, `pointer`, `preserve-3d`, `progress`, `proximity`, `relative`, `repeat`, `repeat no-repeat`, `repeat-x`, `repeat-y`, `reverse`, `ridge`, `right`, `round`, `row`, `row-resize`, `row-reverse`, `rtl`, `ruby`, `ruby-base`, `ruby-base-container`, `ruby-text`, `ruby-text-container`, `run-in`, `running`, `s-resize`, `sans-serif`, `saturation`, `scale-down`, `screen`, `scroll`, `se-resize`, `semi-condensed`, `semi-expanded`, `separate`, `serif`, `sesame`, `show`, `sideways`, `sideways-left`, `sideways-right`, `slice`, `small`, `small-caps`, `smaller`, `smooth`, `snap`, `soft-light`, `solid`, `space`, `space-around`, `space-between`, `spaces`, `square`, `start`, `static`, `step-end`, `step-start`, `sticky`, `stretch`, `strict`, `stroke-box`, `style`, `sw-resize`, `table`, `table-caption`, `table-cell`, `table-column`, `table-column-group`, `table-footer-group`, `table-header-group`, `table-row`, `table-row-group`, `text`, `thick`, `thin`, `titling-caps`, `to`, `top`, `triangle`, `ultra-condensed`, `ultra-expanded`, `under`, `underline`, `unicase`, `unset`, `upper-alpha`, `upper-latin`, `upper-roman`, `uppercase`, `upright`, `use-glyph-orientation`, `vertical`, `vertical-text`, `view-box`, `visible`, `w-resize`, `wait`, `wavy`, `weight`, `weight style`, `wrap`, `wrap-reverse`, `x-large`, `x-small`, `xx-large`, `xx-small`, `zoom-in`, `zoom-out`), KeywordConstant, nil},\n+\t\t\t{`\\;?`, Punctuation, Pop(1)},\n+\t\t},\n+\t}\n+}"
    },
    {
      "sha": "1f91a21300daf408bb3690dccc05f9b000ee61bf",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/svelte.go",
      "status": "added",
      "additions": 73,
      "deletions": 0,
      "changes": 73,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/svelte.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/svelte.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/s/svelte.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,73 @@\n+package s\n+\n+import (\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/h\"\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+\t\"github.com/alecthomas/chroma/lexers/t\"\n+)\n+\n+// Svelte lexer.\n+var Svelte = internal.Register(DelegatingLexer(h.HTML, MustNewLazyLexer(\n+\t&Config{\n+\t\tName:      \"Svelte\",\n+\t\tAliases:   []string{\"svelte\"},\n+\t\tFilenames: []string{\"*.svelte\"},\n+\t\tMimeTypes: []string{\"application/x-svelte\"},\n+\t\tDotAll:    true,\n+\t},\n+\tsvelteRules,\n+)))\n+\n+func svelteRules() Rules {\n+\treturn Rules{\n+\t\t\"root\": {\n+\t\t\t// Let HTML handle the comments, including comments containing script and style tags\n+\t\t\t{`<!--`, Other, Push(\"comment\")},\n+\t\t\t{\n+\t\t\t\t// Highlight script and style tags based on lang attribute\n+\t\t\t\t// and allow attributes besides lang\n+\t\t\t\t`(<\\s*(?:script|style).*?lang\\s*=\\s*['\"])` +\n+\t\t\t\t\t`(.+?)(['\"].*?>)` +\n+\t\t\t\t\t`(.+?)` +\n+\t\t\t\t\t`(<\\s*/\\s*(?:script|style)\\s*>)`,\n+\t\t\t\tUsingByGroup(internal.Get, 2, 4, Other, Other, Other, Other, Other),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t{\n+\t\t\t\t// Make sure `{` is not inside script or style tags\n+\t\t\t\t`(?<!<\\s*(?:script|style)(?:(?!(?:script|style)\\s*>).)*?)` +\n+\t\t\t\t\t`{` +\n+\t\t\t\t\t`(?!(?:(?!<\\s*(?:script|style)).)*?(?:script|style)\\s*>)`,\n+\t\t\t\tPunctuation,\n+\t\t\t\tPush(\"templates\"),\n+\t\t\t},\n+\t\t\t// on:submit|preventDefault\n+\t\t\t{`(?<=\\s+on:\\w+(?:\\|\\w+)*)\\|(?=\\w+)`, Operator, nil},\n+\t\t\t{`.+?`, Other, nil},\n+\t\t},\n+\t\t\"comment\": {\n+\t\t\t{`-->`, Other, Pop(1)},\n+\t\t\t{`.+?`, Other, nil},\n+\t\t},\n+\t\t\"templates\": {\n+\t\t\t{`}`, Punctuation, Pop(1)},\n+\t\t\t// Let TypeScript handle strings and the curly braces inside them\n+\t\t\t{`(?<!(?<!\\\\)\\\\)(['\"` + \"`])\" + `.*?(?<!(?<!\\\\)\\\\)\\1`, Using(t.TypeScript), nil},\n+\t\t\t// If there is another opening curly brace push to templates again\n+\t\t\t{\"{\", Punctuation, Push(\"templates\")},\n+\t\t\t{`@(debug|html)\\b`, Keyword, nil},\n+\t\t\t{\n+\t\t\t\t`(#await)(\\s+)(\\w+)(\\s+)(then|catch)(\\s+)(\\w+)`,\n+\t\t\t\tByGroups(Keyword, Text, Using(t.TypeScript), Text,\n+\t\t\t\t\tKeyword, Text, Using(t.TypeScript),\n+\t\t\t\t),\n+\t\t\t\tnil,\n+\t\t\t},\n+\t\t\t{`(#|/)(await|each|if|key)\\b`, Keyword, nil},\n+\t\t\t{`(:else)(\\s+)(if)?\\b`, ByGroups(Keyword, Text, Keyword), nil},\n+\t\t\t{`:(catch|then)\\b`, Keyword, nil},\n+\t\t\t{`[^{}]+`, Using(t.TypeScript), nil},\n+\t\t},\n+\t}\n+}"
    },
    {
      "sha": "3467e4ca7c0221b756a380e67885ddf399c1ca4a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/swift.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/swift.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/swift.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/s/swift.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Swift lexer.\n-var Swift = internal.Register(MustNewLexer(\n+var Swift = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Swift\",\n \t\tAliases:   []string{\"swift\"},\n \t\tFilenames: []string{\"*.swift\"},\n \t\tMimeTypes: []string{\"text/x-swift\"},\n \t},\n-\tRules{\n+\tswiftRules,\n+))\n+\n+func swiftRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\n`, Text, nil},\n \t\t\t{`\\s+`, Text, nil},\n@@ -83,5 +87,5 @@ var Swift = internal.Register(MustNewLexer(\n \t\t\t{`\\)`, LiteralStringInterpol, Pop(1)},\n \t\t\tInclude(\"root\"),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "0da97821e9efd9e44a7aee92684f07ac78626d3c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/systemd.go",
      "status": "modified",
      "additions": 12,
      "deletions": 7,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/systemd.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/systemd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/s/systemd.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -5,14 +5,19 @@ import (\n \t\"github.com/alecthomas/chroma/lexers/internal\"\n )\n \n-var SYSTEMD = internal.Register(MustNewLexer(\n+var SYSTEMD = internal.Register(MustNewLazyLexer(\n \t&Config{\n-\t\tName:      \"SYSTEMD\",\n-\t\tAliases:   []string{\"systemd\"},\n-\t\tFilenames: []string{\"*.service\"},\n+\t\tName:    \"SYSTEMD\",\n+\t\tAliases: []string{\"systemd\"},\n+\t\t// Suspects: man systemd.index | grep -E 'systemd\\..*configuration'\n+\t\tFilenames: []string{\"*.automount\", \"*.device\", \"*.dnssd\", \"*.link\", \"*.mount\", \"*.netdev\", \"*.network\", \"*.path\", \"*.scope\", \"*.service\", \"*.slice\", \"*.socket\", \"*.swap\", \"*.target\", \"*.timer\"},\n \t\tMimeTypes: []string{\"text/plain\"},\n \t},\n-\tRules{\n+\tsystemdRules,\n+))\n+\n+func systemdRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`[;#].*`, Comment, nil},\n@@ -24,5 +29,5 @@ var SYSTEMD = internal.Register(MustNewLexer(\n \t\t\t{`(.*?)(\\\\\\n)`, ByGroups(LiteralString, Text), nil},\n \t\t\t{`(.*)`, LiteralString, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "a9a77f542e65ebcea73d28a110a17ea1b9d70904",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/systemverilog.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/systemverilog.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/s/systemverilog.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/s/systemverilog.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Systemverilog lexer.\n-var Systemverilog = internal.Register(MustNewLexer(\n+var Systemverilog = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"systemverilog\",\n \t\tAliases:   []string{\"systemverilog\", \"sv\"},\n \t\tFilenames: []string{\"*.sv\", \"*.svh\"},\n \t\tMimeTypes: []string{\"text/x-systemverilog\"},\n \t\tEnsureNL:  true,\n \t},\n-\tRules{\n+\tsystemvarilogRules,\n+))\n+\n+func systemvarilogRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{\"^\\\\s*`define\", CommentPreproc, Push(\"macro\")},\n \t\t\t{`^(\\s*)(package)(\\s+)`, ByGroups(Text, KeywordNamespace, Text), nil},\n@@ -69,5 +73,5 @@ var Systemverilog = internal.Register(MustNewLexer(\n \t\t\"import\": {\n \t\t\t{`[\\w:]+\\*?`, NameNamespace, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "ca05ed32d839d64521ba0ee62d0c5201ba598dd1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/tablegen.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/tablegen.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/tablegen.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/t/tablegen.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // TableGen lexer.\n-var Tablegen = internal.Register(MustNewLexer(\n+var Tablegen = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"TableGen\",\n \t\tAliases:   []string{\"tablegen\"},\n \t\tFilenames: []string{\"*.td\"},\n \t\tMimeTypes: []string{\"text/x-tablegen\"},\n \t},\n-\tRules{\n+\ttablegenRules,\n+))\n+\n+func tablegenRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"macro\"),\n \t\t\tInclude(\"whitespace\"),\n@@ -38,5 +42,5 @@ var Tablegen = internal.Register(MustNewLexer(\n \t\t\"keyword\": {\n \t\t\t{Words(``, `\\b`, `bit`, `bits`, `class`, `code`, `dag`, `def`, `defm`, `field`, `foreach`, `in`, `int`, `let`, `list`, `multiclass`, `string`), Keyword, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "0164a73689734e4a72300453300f0c06a7609c51",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/tasm.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/tasm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/tasm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/t/tasm.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Tasm lexer.\n-var Tasm = internal.Register(MustNewLexer(\n+var Tasm = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"TASM\",\n \t\tAliases:         []string{\"tasm\"},\n \t\tFilenames:       []string{\"*.asm\", \"*.ASM\", \"*.tasm\"},\n \t\tMimeTypes:       []string{\"text/x-tasm\"},\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\ttasmRules,\n+))\n+\n+func tasmRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`^\\s*%`, CommentPreproc, Push(\"preproc\")},\n \t\t\tInclude(\"whitespace\"),\n@@ -57,5 +61,5 @@ var Tasm = internal.Register(MustNewLexer(\n \t\t\t{`seg|wrt|strict`, OperatorWord, nil},\n \t\t\t{`byte|[dq]?word`, KeywordType, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "5f7030ab37f796ead6f65ae58c54de0964d537f1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/tcl.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/tcl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/tcl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/t/tcl.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Tcl lexer.\n-var Tcl = internal.Register(MustNewLexer(\n+var Tcl = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Tcl\",\n \t\tAliases:   []string{\"tcl\"},\n \t\tFilenames: []string{\"*.tcl\", \"*.rvt\"},\n \t\tMimeTypes: []string{\"text/x-tcl\", \"text/x-script.tcl\", \"application/x-tcl\"},\n \t},\n-\tRules{\n+\ttclRules,\n+))\n+\n+func tclRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"command\"),\n \t\t\tInclude(\"basic\"),\n@@ -112,5 +116,5 @@ var Tcl = internal.Register(MustNewLexer(\n \t\t\t{`.*[^\\\\]\\n`, Comment, Pop(1)},\n \t\t\t{`.*\\\\\\n`, Comment, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "fec0cb2ea8f519672832e76390611f1b0551cd7c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/tcsh.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/tcsh.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/tcsh.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/t/tcsh.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Tcsh lexer.\n-var Tcsh = internal.Register(MustNewLexer(\n+var Tcsh = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Tcsh\",\n \t\tAliases:   []string{\"tcsh\", \"csh\"},\n \t\tFilenames: []string{\"*.tcsh\", \"*.csh\"},\n \t\tMimeTypes: []string{\"application/x-csh\"},\n \t},\n-\tRules{\n+\ttcshRules,\n+))\n+\n+func tcshRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"basic\"),\n \t\t\t{`\\$\\(`, Keyword, Push(\"paren\")},\n@@ -55,5 +59,5 @@ var Tcsh = internal.Register(MustNewLexer(\n \t\t\t{\"`\", LiteralStringBacktick, Pop(1)},\n \t\t\tInclude(\"root\"),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "8db20b563db16b35ec42db175ae969f07fd4cc55",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/termcap.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/termcap.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/termcap.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/t/termcap.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Termcap lexer.\n-var Termcap = internal.Register(MustNewLexer(\n+var Termcap = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Termcap\",\n \t\tAliases:   []string{\"termcap\"},\n \t\tFilenames: []string{\"termcap\", \"termcap.src\"},\n \t\tMimeTypes: []string{},\n \t},\n-\tRules{\n+\ttermcapRules,\n+))\n+\n+func termcapRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`^#.*$`, Comment, nil},\n \t\t\t{`^[^\\s#:|]+`, NameTag, Push(\"names\")},\n@@ -38,5 +42,5 @@ var Termcap = internal.Register(MustNewLexer(\n \t\t\t{`[^:\\\\]+`, Literal, nil},\n \t\t\t{`.`, Literal, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "b3f27354999e30b949465567e6a5c34a8b48bbdf",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/terminfo.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/terminfo.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/terminfo.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/t/terminfo.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Terminfo lexer.\n-var Terminfo = internal.Register(MustNewLexer(\n+var Terminfo = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Terminfo\",\n \t\tAliases:   []string{\"terminfo\"},\n \t\tFilenames: []string{\"terminfo\", \"terminfo.src\"},\n \t\tMimeTypes: []string{},\n \t},\n-\tRules{\n+\tterminfoRules,\n+))\n+\n+func terminfoRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`^#.*$`, Comment, nil},\n \t\t\t{`^[^\\s#,|]+`, NameTag, Push(\"names\")},\n@@ -38,5 +42,5 @@ var Terminfo = internal.Register(MustNewLexer(\n \t\t\t{`[^\\\\,]+`, Literal, nil},\n \t\t\t{`.`, Literal, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "c9c0905de5e0fff98e8e45038ce1ffeb1911df9a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/terraform.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/terraform.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/terraform.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/t/terraform.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Terraform lexer.\n-var Terraform = internal.Register(MustNewLexer(\n+var Terraform = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Terraform\",\n \t\tAliases:   []string{\"terraform\", \"tf\"},\n \t\tFilenames: []string{\"*.tf\"},\n \t\tMimeTypes: []string{\"application/x-tf\", \"application/x-terraform\"},\n \t},\n-\tRules{\n+\tterraformRules,\n+))\n+\n+func terraformRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[\\[\\](),.{}]`, Punctuation, nil},\n \t\t\t{`-?[0-9]+`, LiteralNumber, nil},\n@@ -56,5 +60,5 @@ var Terraform = internal.Register(MustNewLexer(\n \t\t\t{`\\}`, LiteralStringInterpol, Pop(1)},\n \t\t\tInclude(\"root\"),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "f9413b370b199ed5ef100a43eb658d937c3cc03a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/tex.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/tex.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/tex.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/t/tex.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Tex lexer.\n-var TeX = internal.Register(MustNewLexer(\n+var TeX = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"TeX\",\n \t\tAliases:   []string{\"tex\", \"latex\"},\n \t\tFilenames: []string{\"*.tex\", \"*.aux\", \"*.toc\"},\n \t\tMimeTypes: []string{\"text/x-tex\", \"text/x-latex\"},\n \t},\n-\tRules{\n+\ttexRules,\n+))\n+\n+func texRules() Rules {\n+\treturn Rules{\n \t\t\"general\": {\n \t\t\t{`%.*?\\n`, Comment, nil},\n \t\t\t{`[{}]`, NameBuiltin, nil},\n@@ -52,5 +56,5 @@ var TeX = internal.Register(MustNewLexer(\n \t\t\t{`\\*`, Keyword, nil},\n \t\t\tDefault(Pop(1)),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "61669d71242d46f1b6a7cbe69da6ca8c0c8a506c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/thrift.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/thrift.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/thrift.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/t/thrift.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Thrift lexer.\n-var Thrift = internal.Register(MustNewLexer(\n+var Thrift = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Thrift\",\n \t\tAliases:   []string{\"thrift\"},\n \t\tFilenames: []string{\"*.thrift\"},\n \t\tMimeTypes: []string{\"application/x-thrift\"},\n \t},\n-\tRules{\n+\tthriftRules,\n+))\n+\n+func thriftRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"whitespace\"),\n \t\t\tInclude(\"comments\"),\n@@ -69,5 +73,5 @@ var Thrift = internal.Register(MustNewLexer(\n \t\t\t{`[+-]?0x[0-9A-Fa-f]+`, LiteralNumberHex, nil},\n \t\t\t{`[+-]?[0-9]+`, LiteralNumberInteger, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "18a44c5b255606b36d7d6e207e07e905b095ff91",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/toml.go",
      "status": "modified",
      "additions": 10,
      "deletions": 6,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/toml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/toml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/t/toml.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -5,14 +5,18 @@ import (\n \t\"github.com/alecthomas/chroma/lexers/internal\"\n )\n \n-var TOML = internal.Register(MustNewLexer(\n+var TOML = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"TOML\",\n \t\tAliases:   []string{\"toml\"},\n \t\tFilenames: []string{\"*.toml\"},\n \t\tMimeTypes: []string{\"text/x-toml\"},\n \t},\n-\tRules{\n+\ttomlRules,\n+))\n+\n+func tomlRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`#.*`, Comment, nil},\n@@ -22,8 +26,8 @@ var TOML = internal.Register(MustNewLexer(\n \t\t\t{`[+-]?[0-9](_?\\d)*`, LiteralNumberInteger, nil},\n \t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, StringDouble, nil},\n \t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, StringSingle, nil},\n-\t\t\t{`[.,=\\[\\]]`, Punctuation, nil},\n-\t\t\t{`[^\\W\\d]\\w*`, NameOther, nil},\n+\t\t\t{`[.,=\\[\\]{}]`, Punctuation, nil},\n+\t\t\t{`[A-Za-z0-9_-]+`, NameOther, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "bf303c648d4cf8228dd516d59993616e3c98a92a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/tradingview.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/tradingview.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/tradingview.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/t/tradingview.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,7 +6,7 @@ import (\n )\n \n // TradingView lexer\n-var TradingView = internal.Register(MustNewLexer(\n+var TradingView = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"TradingView\",\n \t\tAliases:   []string{\"tradingview\", \"tv\"},\n@@ -15,7 +15,11 @@ var TradingView = internal.Register(MustNewLexer(\n \t\tDotAll:    true,\n \t\tEnsureNL:  true,\n \t},\n-\tRules{\n+\ttradingViewRules,\n+))\n+\n+func tradingViewRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[^\\S\\n]+|\\n|[()]`, Text, nil},\n \t\t\t{`(//.*?)(\\n)`, ByGroups(CommentSingle, Text), nil},\n@@ -36,5 +40,5 @@ var TradingView = internal.Register(MustNewLexer(\n \t\t\t{`(and|or|not|if|else|for|to)\\b`, OperatorWord, nil},\n \t\t\t{`@?[_a-zA-Z]\\w*`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "e5beb066968c000d3181d5ee9ca1ea46db0577d1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/transactsql.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/transactsql.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/transactsql.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/t/transactsql.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // TransactSQL lexer.\n-var TransactSQL = internal.Register(MustNewLexer(\n+var TransactSQL = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"Transact-SQL\",\n \t\tAliases:         []string{\"tsql\", \"t-sql\"},\n \t\tMimeTypes:       []string{\"text/x-tsql\"},\n \t\tNotMultiline:    true,\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\ttransactSQLRules,\n+))\n+\n+func transactSQLRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, TextWhitespace, nil},\n \t\t\t{`--(?m).*?$\\n?`, CommentSingle, nil},\n@@ -56,5 +60,5 @@ var TransactSQL = internal.Register(MustNewLexer(\n \t\t\t{`\"\"`, LiteralStringName, nil},\n \t\t\t{`\"`, LiteralStringName, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "e34a6c1ceae7af94d49ca41fefbefcb56c0ad723",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/turing.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/turing.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/turing.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/t/turing.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,14 +6,18 @@ import (\n )\n \n // Turing lexer.\n-var Turing = internal.Register(MustNewLexer(\n+var Turing = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Turing\",\n \t\tAliases:   []string{\"turing\"},\n \t\tFilenames: []string{\"*.turing\", \"*.tu\"},\n \t\tMimeTypes: []string{\"text/x-turing\"},\n \t},\n-\tRules{\n+\tturingRules,\n+))\n+\n+func turingRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\n`, Text, nil},\n \t\t\t{`\\s+`, Text, nil},\n@@ -39,5 +43,5 @@ var Turing = internal.Register(MustNewLexer(\n \t\t\t{`[()\\[\\]{}.,:]`, Punctuation, nil},\n \t\t\t{`[^\\W\\d]\\w*`, NameOther, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "437f375f5faa27a1f1cb0012fb5e633907a078e7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/turtle.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/turtle.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/turtle.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/t/turtle.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,7 +6,7 @@ import (\n )\n \n // Turtle lexer.\n-var Turtle = internal.Register(MustNewLexer(\n+var Turtle = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"Turtle\",\n \t\tAliases:         []string{\"turtle\"},\n@@ -15,7 +15,11 @@ var Turtle = internal.Register(MustNewLexer(\n \t\tNotMultiline:    true,\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tturtleRules,\n+))\n+\n+func turtleRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, TextWhitespace, nil},\n \t\t\t{\"(@base|BASE)(\\\\s+)(<[^<>\\\"{}|^`\\\\\\\\\\\\x00-\\\\x20]*>)(\\\\s*)(\\\\.?)\", ByGroups(Keyword, TextWhitespace, NameVariable, TextWhitespace, Punctuation), nil},\n@@ -63,5 +67,5 @@ var Turtle = internal.Register(MustNewLexer(\n \t\t\t{`(\\^\\^)((?:[a-z][\\w-]*)?\\:)([a-z][\\w-]*)`, ByGroups(Operator, GenericEmph, GenericEmph), Pop(2)},\n \t\t\tDefault(Pop(2)),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "0e0c1f18a9f89b9230041704afbe4e4135c18622",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/twig.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/twig.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/twig.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/t/twig.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Twig lexer.\n-var Twig = internal.Register(MustNewLexer(\n+var Twig = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Twig\",\n \t\tAliases:   []string{\"twig\"},\n \t\tFilenames: []string{},\n \t\tMimeTypes: []string{\"application/x-twig\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\ttwigRules,\n+))\n+\n+func twigRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[^{]+`, Other, nil},\n \t\t\t{`\\{\\{`, CommentPreproc, Push(\"var\")},\n@@ -50,5 +54,5 @@ var Twig = internal.Register(MustNewLexer(\n \t\t\tInclude(\"varnames\"),\n \t\t\t{`.`, Punctuation, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "0625bb0927b98c1f12aef89fd57bad2b5092b2ca",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/typescript.go",
      "status": "modified",
      "additions": 38,
      "deletions": 10,
      "changes": 48,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/typescript.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/typescript.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/t/typescript.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,16 +6,20 @@ import (\n )\n \n // TypeScript lexer.\n-var TypeScript = internal.Register(MustNewLexer(\n+var TypeScript = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"TypeScript\",\n-\t\tAliases:   []string{\"ts\", \"typescript\"},\n+\t\tAliases:   []string{\"ts\", \"tsx\", \"typescript\"},\n \t\tFilenames: []string{\"*.ts\", \"*.tsx\"},\n \t\tMimeTypes: []string{\"text/x-typescript\"},\n \t\tDotAll:    true,\n \t\tEnsureNL:  true,\n \t},\n-\tRules{\n+\ttypeScriptRules,\n+))\n+\n+func typeScriptRules() Rules {\n+\treturn Rules{\n \t\t\"commentsandwhitespace\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`<!--`, Comment, nil},\n@@ -32,19 +36,20 @@ var TypeScript = internal.Register(MustNewLexer(\n \t\t\t{`\\n`, Text, Pop(1)},\n \t\t},\n \t\t\"root\": {\n+\t\t\tInclude(\"jsx\"),\n \t\t\t{`^(?=\\s|/|<!--)`, Text, Push(\"slashstartsregex\")},\n \t\t\tInclude(\"commentsandwhitespace\"),\n \t\t\t{`\\+\\+|--|~|&&|\\?|:|\\|\\||\\\\(?=\\n)|(<<|>>>?|==?|!=?|[-<>+*%&|^/])=?`, Operator, Push(\"slashstartsregex\")},\n \t\t\t{`[{(\\[;,]`, Punctuation, Push(\"slashstartsregex\")},\n \t\t\t{`[})\\].]`, Punctuation, nil},\n-\t\t\t{`(for|in|while|do|break|return|continue|switch|case|default|if|else|throw|try|catch|finally|new|delete|typeof|instanceof|void|this)\\b`, Keyword, Push(\"slashstartsregex\")},\n+\t\t\t{`(for|in|of|while|do|break|return|yield|continue|switch|case|default|if|else|throw|try|catch|finally|new|delete|typeof|instanceof|keyof|asserts|is|infer|await|void|this)\\b`, Keyword, Push(\"slashstartsregex\")},\n \t\t\t{`(var|let|with|function)\\b`, KeywordDeclaration, Push(\"slashstartsregex\")},\n-\t\t\t{`(abstract|boolean|byte|char|class|const|debugger|double|enum|export|extends|final|float|goto|implements|import|int|interface|long|native|package|private|protected|public|short|static|super|synchronized|throws|transient|volatile)\\b`, KeywordReserved, nil},\n+\t\t\t{`(abstract|async|boolean|class|const|debugger|enum|export|extends|from|get|global|goto|implements|import|interface|namespace|package|private|protected|public|readonly|require|set|static|super|type)\\b`, KeywordReserved, nil},\n \t\t\t{`(true|false|null|NaN|Infinity|undefined)\\b`, KeywordConstant, nil},\n-\t\t\t{`(Array|Boolean|Date|Error|Function|Math|netscape|Number|Object|Packages|RegExp|String|sun|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|Error|eval|isFinite|isNaN|parseFloat|parseInt|document|this|window)\\b`, NameBuiltin, nil},\n+\t\t\t{`(Array|Boolean|Date|Error|Function|Math|Number|Object|Packages|RegExp|String|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|isNaN|parseFloat|parseInt|document|this|window)\\b`, NameBuiltin, nil},\n \t\t\t{`\\b(module)(\\s*)(\\s*[\\w?.$][\\w?.$]*)(\\s*)`, ByGroups(KeywordReserved, Text, NameOther, Text), Push(\"slashstartsregex\")},\n-\t\t\t{`\\b(string|bool|number)\\b`, KeywordType, nil},\n-\t\t\t{`\\b(constructor|declare|interface|as|AS)\\b`, KeywordReserved, nil},\n+\t\t\t{`\\b(string|bool|number|any|never|object|symbol|unique|unknown|bigint)\\b`, KeywordType, nil},\n+\t\t\t{`\\b(constructor|declare|interface|as)\\b`, KeywordReserved, nil},\n \t\t\t{`(super)(\\s*)(\\([\\w,?.$\\s]+\\s*\\))`, ByGroups(KeywordReserved, Text), Push(\"slashstartsregex\")},\n \t\t\t{`([a-zA-Z_?.$][\\w?.$]*)\\(\\) \\{`, NameOther, Push(\"slashstartsregex\")},\n \t\t\t{`([\\w?.$][\\w?.$]*)(\\s*:\\s*)([\\w?.$][\\w?.$]*)`, ByGroups(NameOther, Text, KeywordType), nil},\n@@ -69,5 +74,28 @@ var TypeScript = internal.Register(MustNewLexer(\n \t\t\t{`\\}`, LiteralStringInterpol, Pop(1)},\n \t\t\tInclude(\"root\"),\n \t\t},\n-\t},\n-))\n+\t\t\"jsx\": {\n+\t\t\t{`(<)(/?)(>)`, ByGroups(Punctuation, Punctuation, Punctuation), nil},\n+\t\t\t{`(<)([\\w\\.]+)`, ByGroups(Punctuation, NameTag), Push(\"tag\")},\n+\t\t\t{`(<)(/)([\\w\\.]*)(>)`, ByGroups(Punctuation, Punctuation, NameTag, Punctuation), nil},\n+\t\t},\n+\t\t\"tag\": {\n+\t\t\t{`\\s+`, Text, nil},\n+\t\t\t{`([\\w]+\\s*)(=)(\\s*)`, ByGroups(NameAttribute, Operator, Text), Push(\"attr\")},\n+\t\t\t{`[{}]+`, Punctuation, nil},\n+\t\t\t{`[\\w\\.]+`, NameAttribute, nil},\n+\t\t\t{`(/?)(\\s*)(>)`, ByGroups(Punctuation, Text, Punctuation), Pop(1)},\n+\t\t},\n+\t\t\"attr\": {\n+\t\t\t{`{`, Punctuation, Push(\"expression\")},\n+\t\t\t{`\".*?\"`, LiteralString, Pop(1)},\n+\t\t\t{`'.*?'`, LiteralString, Pop(1)},\n+\t\t\tDefault(Pop(1)),\n+\t\t},\n+\t\t\"expression\": {\n+\t\t\t{`{`, Punctuation, Push()},\n+\t\t\t{`}`, Punctuation, Pop(1)},\n+\t\t\tInclude(\"root\"),\n+\t\t},\n+\t}\n+}"
    },
    {
      "sha": "40a5c5dba5c5df52320781a1d65b7162ab0e82b0",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/typoscript.go",
      "status": "modified",
      "additions": 24,
      "deletions": 12,
      "changes": 36,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/typoscript.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/t/typoscript.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/t/typoscript.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,7 +6,7 @@ import (\n )\n \n // Typoscript lexer.\n-var Typoscript = internal.Register(MustNewLexer(\n+var Typoscript = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"TypoScript\",\n \t\tAliases:   []string{\"typoscript\"},\n@@ -15,7 +15,11 @@ var Typoscript = internal.Register(MustNewLexer(\n \t\tDotAll:    true,\n \t\tPriority:  0.1,\n \t},\n-\tRules{\n+\ttyposcriptRules,\n+))\n+\n+func typoscriptRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"comment\"),\n \t\t\tInclude(\"constant\"),\n@@ -78,18 +82,22 @@ var Typoscript = internal.Register(MustNewLexer(\n \t\t\"other\": {\n \t\t\t{`[\\w\"\\-!/&;]+`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}\n \n // TypoScriptCSSData lexer.\n-var TypoScriptCSSData = internal.Register(MustNewLexer(\n+var TypoScriptCSSData = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"TypoScriptCssData\",\n \t\tAliases:   []string{\"typoscriptcssdata\"},\n \t\tFilenames: []string{},\n \t\tMimeTypes: []string{},\n \t},\n-\tRules{\n+\ttypoScriptCSSDataRules,\n+))\n+\n+func typoScriptCSSDataRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`(.*)(###\\w+###)(.*)`, ByGroups(LiteralString, NameConstant, LiteralString), nil},\n \t\t\t{`(\\{)(\\$)((?:[\\w\\-]+\\.)*)([\\w\\-]+)(\\})`, ByGroups(LiteralStringSymbol, Operator, NameConstant, NameConstant, LiteralStringSymbol), nil},\n@@ -100,18 +108,22 @@ var TypoScriptCSSData = internal.Register(MustNewLexer(\n \t\t\t{`[<>,:=.*%+|]`, LiteralString, nil},\n \t\t\t{`[\\w\"\\-!/&;(){}]+`, LiteralString, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}\n \n // TypoScriptHTMLData lexer.\n-var TypoScriptHTMLData = internal.Register(MustNewLexer(\n+var TypoScriptHTMLData = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"TypoScriptHtmlData\",\n \t\tAliases:   []string{\"typoscripthtmldata\"},\n \t\tFilenames: []string{},\n \t\tMimeTypes: []string{},\n \t},\n-\tRules{\n+\ttypoScriptHTMLDataRules,\n+))\n+\n+func typoScriptHTMLDataRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`(INCLUDE_TYPOSCRIPT)`, NameClass, nil},\n \t\t\t{`(EXT|FILE|LLL):[^}\\n\"]*`, LiteralString, nil},\n@@ -122,5 +134,5 @@ var TypoScriptHTMLData = internal.Register(MustNewLexer(\n \t\t\t{`[<>,:=.*%+|]`, LiteralString, nil},\n \t\t\t{`[\\w\"\\-!/&;(){}#]+`, LiteralString, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "fc6bc0b3f40e1244690caa881ca8878acee54578",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/v/vb.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/v/vb.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/v/vb.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/v/vb.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -8,15 +8,19 @@ import (\n const vbName = `[_\\w][\\w]*`\n \n // VB.Net lexer.\n-var VBNet = internal.Register(MustNewLexer(\n+var VBNet = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"VB.net\",\n \t\tAliases:         []string{\"vb.net\", \"vbnet\"},\n \t\tFilenames:       []string{\"*.vb\", \"*.bas\"},\n \t\tMimeTypes:       []string{\"text/x-vbnet\", \"text/x-vba\"},\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tvbNetRules,\n+))\n+\n+func vbNetRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`^\\s*<.*?>`, NameAttribute, nil},\n \t\t\t{`\\s+`, Text, nil},\n@@ -69,5 +73,5 @@ var VBNet = internal.Register(MustNewLexer(\n \t\t\t{`(Function|Sub|Property|Class|Structure|Enum|Module|Namespace)\\b`, Keyword, Pop(1)},\n \t\t\tDefault(Pop(1)),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "00dbbc7fe754687cfafd6fa49154fb9ed8656e3d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/v/verilog.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/v/verilog.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/v/verilog.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/v/verilog.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // Verilog lexer.\n-var Verilog = internal.Register(MustNewLexer(\n+var Verilog = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"verilog\",\n \t\tAliases:   []string{\"verilog\", \"v\"},\n \t\tFilenames: []string{\"*.v\"},\n \t\tMimeTypes: []string{\"text/x-verilog\"},\n \t\tEnsureNL:  true,\n \t},\n-\tRules{\n+\tverilogRules,\n+))\n+\n+func verilogRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{\"^\\\\s*`define\", CommentPreproc, Push(\"macro\")},\n \t\t\t{`\\n`, Text, nil},\n@@ -64,5 +68,5 @@ var Verilog = internal.Register(MustNewLexer(\n \t\t\"import\": {\n \t\t\t{`[\\w:]+\\*?`, NameNamespace, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "4807ccb1877913db7d64a1566681ef7ae529420a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/v/vhdl.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/v/vhdl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/v/vhdl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/v/vhdl.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // VHDL lexer.\n-var VHDL = internal.Register(MustNewLexer(\n+var VHDL = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:            \"VHDL\",\n \t\tAliases:         []string{\"vhdl\"},\n \t\tFilenames:       []string{\"*.vhdl\", \"*.vhd\"},\n \t\tMimeTypes:       []string{\"text/x-vhdl\"},\n \t\tCaseInsensitive: true,\n \t},\n-\tRules{\n+\tvhdlRules,\n+))\n+\n+func vhdlRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\n`, Text, nil},\n \t\t\t{`\\s+`, Text, nil},\n@@ -62,5 +66,5 @@ var VHDL = internal.Register(MustNewLexer(\n \t\t\t{`O\"[0-7_]+\"`, LiteralNumberOct, nil},\n \t\t\t{`B\"[01_]+\"`, LiteralNumberBin, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "3d745d5cd6cc7ba349e7d6394e763ef342bde805",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/v/vim.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/v/vim.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/v/vim.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/v/vim.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -7,14 +7,18 @@ import (\n )\n \n // Viml lexer.\n-var Viml = internal.Register(MustNewLexer(\n+var Viml = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"VimL\",\n \t\tAliases:   []string{\"vim\"},\n \t\tFilenames: []string{\"*.vim\", \".vimrc\", \".exrc\", \".gvimrc\", \"_vimrc\", \"_exrc\", \"_gvimrc\", \"vimrc\", \"gvimrc\"},\n \t\tMimeTypes: []string{\"text/x-vim\"},\n \t},\n-\tRules{\n+\tvimlRules,\n+))\n+\n+func vimlRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`^([ \\t:]*)(py(?:t(?:h(?:o(?:n)?)?)?)?)([ \\t]*)(<<)([ \\t]*)(.*)((?:\\n|.)*)(\\6)`, ByGroups(UsingSelf(\"root\"), Keyword, Text, Operator, Text, Text, Using(Python), Text), nil},\n \t\t\t{`^([ \\t:]*)(py(?:t(?:h(?:o(?:n)?)?)?)?)([ \\t])(.*)`, ByGroups(UsingSelf(\"root\"), Keyword, Text, Using(Python)), nil},\n@@ -33,5 +37,5 @@ var Viml = internal.Register(MustNewLexer(\n \t\t\t{`\\b\\w+\\b`, NameOther, nil},\n \t\t\t{`.`, Text, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "b4b9614b337d4968111213a22618c3bd6fa544d9",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/v/vue.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/v/vue.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/v/vue.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/v/vue.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -8,15 +8,19 @@ import (\n // Vue lexer.\n //\n // This was generated from https://github.com/testdrivenio/vue-lexer\n-var Vue = internal.Register(MustNewLexer(\n+var Vue = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"vue\",\n \t\tAliases:   []string{\"vue\", \"vuejs\"},\n \t\tFilenames: []string{\"*.vue\"},\n \t\tMimeTypes: []string{\"text/x-vue\", \"application/x-vue\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\tvueRules,\n+))\n+\n+func vueRules() Rules {\n+\treturn Rules{\n \t\t\"commentsandwhitespace\": {\n \t\t\t{`\\s+`, Text, nil},\n \t\t\t{`<!--`, Comment, nil},\n@@ -103,5 +107,5 @@ var Vue = internal.Register(MustNewLexer(\n \t\t\t{`}`, Punctuation, Pop(1)},\n \t\t\tInclude(\"root\"),\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "2e5d883aa458c7fdb76f781eaa8479e8a14aeb3f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/w/wdte.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/w/wdte.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/w/wdte.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/w/wdte.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,12 +6,16 @@ import (\n )\n \n // WDTE lexer.\n-var WDTE = internal.Register(MustNewLexer(\n+var WDTE = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"WDTE\",\n \t\tFilenames: []string{\"*.wdte\"},\n \t},\n-\tRules{\n+\twdteRules,\n+))\n+\n+func wdteRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\n`, Text, nil},\n \t\t\t{`\\s+`, Text, nil},\n@@ -25,5 +29,5 @@ var WDTE = internal.Register(MustNewLexer(\n \t\t\t{`{|}|;|->|=>|\\(|\\)|\\[|\\]|\\.`, Operator, nil},\n \t\t\t{`[^{};()[\\].\\s]+`, NameVariable, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "1e93c4ee9bb012f5b958b2189e6fa77b2f0658da",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/x/xml.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/x/xml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/x/xml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/x/xml.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,15 +6,19 @@ import (\n )\n \n // XML lexer.\n-var XML = internal.Register(MustNewLexer(\n+var XML = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"XML\",\n \t\tAliases:   []string{\"xml\"},\n \t\tFilenames: []string{\"*.xml\", \"*.xsl\", \"*.rss\", \"*.xslt\", \"*.xsd\", \"*.wsdl\", \"*.wsf\", \"*.svg\"},\n \t\tMimeTypes: []string{\"text/xml\", \"application/xml\", \"image/svg+xml\", \"application/rss+xml\", \"application/atom+xml\"},\n \t\tDotAll:    true,\n \t},\n-\tRules{\n+\txmlRules,\n+))\n+\n+func xmlRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`[^<&]+`, Text, nil},\n \t\t\t{`&\\S*?;`, NameEntity, nil},\n@@ -41,5 +45,5 @@ var XML = internal.Register(MustNewLexer(\n \t\t\t{`'.*?'`, LiteralString, Pop(1)},\n \t\t\t{`[^\\s>]+`, LiteralString, Pop(1)},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "7936a51ab2ff817cf9099b3151d4e6e93f551a98",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/x/xorg.go",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/x/xorg.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/x/xorg.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/x/xorg.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -6,20 +6,24 @@ import (\n )\n \n // Xorg lexer.\n-var Xorg = internal.Register(MustNewLexer(\n+var Xorg = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"Xorg\",\n \t\tAliases:   []string{\"xorg.conf\"},\n \t\tFilenames: []string{\"xorg.conf\"},\n \t\tMimeTypes: []string{},\n \t},\n-\tRules{\n+\txorgRules,\n+))\n+\n+func xorgRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\t{`\\s+`, TextWhitespace, nil},\n \t\t\t{`#.*$`, Comment, nil},\n \t\t\t{`((|Sub)Section)(\\s+)(\"\\w+\")`, ByGroups(KeywordNamespace, LiteralStringEscape, TextWhitespace, LiteralStringEscape), nil},\n \t\t\t{`(End(|Sub)Section)`, KeywordNamespace, nil},\n \t\t\t{`(\\w+)(\\s+)([^\\n#]+)`, ByGroups(NameKeyword, TextWhitespace, LiteralString), nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "488f760049f72680867ab5517e71f4eb5d182e07",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/y/yaml.go",
      "status": "modified",
      "additions": 20,
      "deletions": 12,
      "changes": 32,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/y/yaml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/y/yaml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/y/yaml.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -5,46 +5,54 @@ import (\n \t\"github.com/alecthomas/chroma/lexers/internal\"\n )\n \n-var YAML = internal.Register(MustNewLexer(\n+var YAML = internal.Register(MustNewLazyLexer(\n \t&Config{\n \t\tName:      \"YAML\",\n \t\tAliases:   []string{\"yaml\"},\n \t\tFilenames: []string{\"*.yaml\", \"*.yml\"},\n \t\tMimeTypes: []string{\"text/x-yaml\"},\n \t},\n-\tRules{\n+\tyamlRules,\n+))\n+\n+func yamlRules() Rules {\n+\treturn Rules{\n \t\t\"root\": {\n \t\t\tInclude(\"whitespace\"),\n-\t\t\t{`^---`, Text, nil},\n+\t\t\t{`^---`, NameNamespace, nil},\n+\t\t\t{`^\\.\\.\\.`, NameNamespace, nil},\n \t\t\t{`[\\n?]?\\s*- `, Text, nil},\n \t\t\t{`#.*$`, Comment, nil},\n \t\t\t{`!![^\\s]+`, CommentPreproc, nil},\n \t\t\t{`&[^\\s]+`, CommentPreproc, nil},\n \t\t\t{`\\*[^\\s]+`, CommentPreproc, nil},\n \t\t\t{`^%include\\s+[^\\n\\r]+`, CommentPreproc, nil},\n-\t\t\t{`([>|+-]\\s+)(\\s+)((?:(?:.*?$)(?:[\\n\\r]*?)?)*)`, ByGroups(StringDoc, StringDoc, StringDoc), nil},\n \t\t\tInclude(\"key\"),\n \t\t\tInclude(\"value\"),\n \t\t\t{`[?:,\\[\\]]`, Punctuation, nil},\n \t\t\t{`.`, Text, nil},\n \t\t},\n \t\t\"value\": {\n-\t\t\t{Words(``, `\\b`, \"true\", \"false\", \"null\"), KeywordConstant, nil},\n+\t\t\t{`([>|](?:[+-])?)(\\n(^ {1,})(?:.*\\n*(?:^\\3 *).*)*)`, ByGroups(Punctuation, StringDoc, Whitespace), nil},\n+\t\t\t{Words(``, `\\b`, \"true\", \"True\", \"TRUE\", \"false\", \"False\", \"FALSE\", \"null\",\n+\t\t\t\t\"y\", \"Y\", \"yes\", \"Yes\", \"YES\", \"n\", \"N\", \"no\", \"No\", \"NO\",\n+\t\t\t\t\"on\", \"On\", \"ON\", \"off\", \"Off\", \"OFF\"), KeywordConstant, nil},\n \t\t\t{`\"(?:\\\\.|[^\"])*\"`, StringDouble, nil},\n \t\t\t{`'(?:\\\\.|[^'])*'`, StringSingle, nil},\n \t\t\t{`\\d\\d\\d\\d-\\d\\d-\\d\\d([T ]\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(Z|\\s+[-+]\\d+)?)?`, LiteralDate, nil},\n \t\t\t{`\\b[+\\-]?(0x[\\da-f]+|0o[0-7]+|(\\d+\\.?\\d*|\\.?\\d+)(e[\\+\\-]?\\d+)?|\\.inf|\\.nan)\\b`, Number, nil},\n-\t\t\t{`\\b[\\w]+\\b`, Text, nil},\n+\t\t\t{`([^\\{\\}\\[\\]\\?,\\:\\!\\-\\*&\\@].*)( )+(#.*)`, ByGroups(Literal, Whitespace, Comment), nil},\n+\t\t\t{`[^\\{\\}\\[\\]\\?,\\:\\!\\-\\*&\\@].*`, Literal, nil},\n \t\t},\n \t\t\"key\": {\n-\t\t\t{`\"[^\"\\n].*\": `, Keyword, nil},\n-\t\t\t{`(-)( )([^\"\\n{]*)(:)( )`, ByGroups(Punctuation, Whitespace, Keyword, Punctuation, Whitespace), nil},\n-\t\t\t{`([^\"\\n{]*)(:)( )`, ByGroups(Keyword, Punctuation, Whitespace), nil},\n-\t\t\t{`([^\"\\n{]*)(:)(\\n)`, ByGroups(Keyword, Punctuation, Whitespace), nil},\n+\t\t\t{`\"[^\"\\n].*\": `, NameTag, nil},\n+\t\t\t{`(-)( )([^\"\\n{]*)(:)( )`, ByGroups(Punctuation, Whitespace, NameTag, Punctuation, Whitespace), nil},\n+\t\t\t{`([^\"\\n{]*)(:)( )`, ByGroups(NameTag, Punctuation, Whitespace), nil},\n+\t\t\t{`([^\"\\n{]*)(:)(\\n)`, ByGroups(NameTag, Punctuation, Whitespace), nil},\n \t\t},\n \t\t\"whitespace\": {\n \t\t\t{`\\s+`, Whitespace, nil},\n \t\t\t{`\\n+`, Whitespace, nil},\n \t\t},\n-\t},\n-))\n+\t}\n+}"
    },
    {
      "sha": "36349eb9fb663bae63793aab1975f542c0329d0c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/y/yang.go",
      "status": "added",
      "additions": 71,
      "deletions": 0,
      "changes": 71,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/y/yang.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/y/yang.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/y/yang.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,71 @@\n+package y\n+\n+import (\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+)\n+\n+var YANG = internal.Register(MustNewLazyLexer(\n+\t&Config{\n+\t\tName:      \"YANG\",\n+\t\tAliases:   []string{\"yang\"},\n+\t\tFilenames: []string{\"*.yang\"},\n+\t\tMimeTypes: []string{\"application/yang\"},\n+\t},\n+\tyangRules,\n+))\n+\n+func yangRules() Rules {\n+\treturn Rules{\n+\t\t\"root\": {\n+\t\t\t{`\\s+`, Whitespace, nil},\n+\t\t\t{`[\\{\\}\\;]+`, Punctuation, nil},\n+\t\t\t{`(?<![\\-\\w])(and|or|not|\\+|\\.)(?![\\-\\w])`, Operator, nil},\n+\n+\t\t\t{`\"(?:\\\\\"|[^\"])*?\"`, StringDouble, nil},\n+\t\t\t{`'(?:\\\\'|[^'])*?'`, StringSingle, nil},\n+\n+\t\t\t{`/\\*`, CommentMultiline, Push(\"comments\")},\n+\t\t\t{`//.*?$`, CommentSingle, nil},\n+\n+\t\t\t// match BNF stmt for `node-identifier` with [ prefix \":\"]\n+\t\t\t{`(?:^|(?<=[\\s{};]))([\\w.-]+)(:)([\\w.-]+)(?=[\\s{};])`, ByGroups(KeywordNamespace, Punctuation, Text), nil},\n+\n+\t\t\t// match BNF stmt `date-arg-str`\n+\t\t\t{`([0-9]{4}\\-[0-9]{2}\\-[0-9]{2})(?=[\\s\\{\\}\\;])`, LiteralDate, nil},\n+\t\t\t{`([0-9]+\\.[0-9]+)(?=[\\s\\{\\}\\;])`, NumberFloat, nil},\n+\t\t\t{`([0-9]+)(?=[\\s\\{\\}\\;])`, NumberInteger, nil},\n+\n+\t\t\t// TOP_STMTS_KEYWORDS\n+\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `module`, `submodule`), Keyword, nil},\n+\t\t\t// MODULE_HEADER_STMT_KEYWORDS\n+\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `belongs-to`, `namespace`, `prefix`, `yang-version`), Keyword, nil},\n+\t\t\t// META_STMT_KEYWORDS\n+\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `contact`, `description`, `organization`, `reference`, `revision`), Keyword, nil},\n+\t\t\t// LINKAGE_STMTS_KEYWORDS\n+\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `import`, `include`, `revision-date`), Keyword, nil},\n+\t\t\t// BODY_STMT_KEYWORDS\n+\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `action`, `argument`, `augment`, `deviation`, `extension`, `feature`, `grouping`, `identity`, `if-feature`, `input`, `notification`, `output`, `rpc`, `typedef`), Keyword, nil},\n+\t\t\t// DATA_DEF_STMT_KEYWORDS\n+\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `anydata`, `anyxml`, `case`, `choice`, `config`, `container`, `deviate`, `leaf`, `leaf-list`, `list`, `must`, `presence`, `refine`, `uses`, `when`), Keyword, nil},\n+\t\t\t// TYPE_STMT_KEYWORDS\n+\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `base`, `bit`, `default`, `enum`, `error-app-tag`, `error-message`, `fraction-digits`, `length`, `max-elements`, `min-elements`, `modifier`, `ordered-by`, `path`, `pattern`, `position`, `range`, `require-instance`, `status`, `type`, `units`, `value`, `yin-element`), Keyword, nil},\n+\t\t\t// LIST_STMT_KEYWORDS\n+\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `key`, `mandatory`, `unique`), Keyword, nil},\n+\n+\t\t\t// CONSTANTS_KEYWORDS - RFC7950 other keywords\n+\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `add`, `current`, `delete`, `deprecated`, `false`, `invert-match`, `max`, `min`, `not-supported`, `obsolete`, `replace`, `true`, `unbounded`, `user`), NameClass, nil},\n+\n+\t\t\t// RFC7950 Built-In Types\n+\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `binary`, `bits`, `boolean`, `decimal64`, `empty`, `enumeration`, `identityref`, `instance-identifier`, `int16`, `int32`, `int64`, `int8`, `leafref`, `string`, `uint16`, `uint32`, `uint64`, `uint8`, `union`), NameClass, nil},\n+\n+\t\t\t{`[^;{}\\s\\'\\\"]+`, Text, nil},\n+\t\t},\n+\t\t\"comments\": {\n+\t\t\t{`[^*/]`, CommentMultiline, nil},\n+\t\t\t{`/\\*`, CommentMultiline, Push(\"comment\")},\n+\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n+\t\t\t{`[*/]`, CommentMultiline, nil},\n+\t\t},\n+\t}\n+}"
    },
    {
      "sha": "56f54fd989f9f386d158ae28b1c2fe1c331d9c58",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/z/zig.go",
      "status": "added",
      "additions": 58,
      "deletions": 0,
      "changes": 58,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/z/zig.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/lexers/z/zig.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/lexers/z/zig.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,58 @@\n+package z\n+\n+import (\n+\t. \"github.com/alecthomas/chroma\" // nolint\n+\t\"github.com/alecthomas/chroma/lexers/internal\"\n+)\n+\n+// Zig lexer.\n+var Zig = internal.Register(MustNewLazyLexer(\n+\t&Config{\n+\t\tName:      \"Zig\",\n+\t\tAliases:   []string{\"zig\"},\n+\t\tFilenames: []string{\"*.zig\"},\n+\t\tMimeTypes: []string{\"text/zig\"},\n+\t},\n+\tzigRules,\n+))\n+\n+func zigRules() Rules {\n+\treturn Rules{\n+\t\t\"root\": {\n+\t\t\t{`\\n`, TextWhitespace, nil},\n+\t\t\t{`\\s+`, TextWhitespace, nil},\n+\t\t\t{`//.*?\\n`, CommentSingle, nil},\n+\t\t\t{Words(``, `\\b`, `break`, `return`, `continue`, `asm`, `defer`, `errdefer`, `unreachable`, `try`, `catch`, `async`, `await`, `suspend`, `resume`, `cancel`), Keyword, nil},\n+\t\t\t{Words(``, `\\b`, `const`, `var`, `extern`, `packed`, `export`, `pub`, `noalias`, `inline`, `comptime`, `nakedcc`, `stdcallcc`, `volatile`, `allowzero`, `align`, `linksection`, `threadlocal`), KeywordReserved, nil},\n+\t\t\t{Words(``, `\\b`, `struct`, `enum`, `union`, `error`), Keyword, nil},\n+\t\t\t{Words(``, `\\b`, `while`, `for`), Keyword, nil},\n+\t\t\t{Words(``, `\\b`, `bool`, `f16`, `f32`, `f64`, `f128`, `void`, `noreturn`, `type`, `anyerror`, `promise`, `i0`, `u0`, `isize`, `usize`, `comptime_int`, `comptime_float`, `c_short`, `c_ushort`, `c_int`, `c_uint`, `c_long`, `c_ulong`, `c_longlong`, `c_ulonglong`, `c_longdouble`, `c_voidi8`, `u8`, `i16`, `u16`, `i32`, `u32`, `i64`, `u64`, `i128`, `u128`), KeywordType, nil},\n+\t\t\t{Words(``, `\\b`, `true`, `false`, `null`, `undefined`), KeywordConstant, nil},\n+\t\t\t{Words(``, `\\b`, `if`, `else`, `switch`, `and`, `or`, `orelse`), Keyword, nil},\n+\t\t\t{Words(``, `\\b`, `fn`, `usingnamespace`, `test`), Keyword, nil},\n+\t\t\t{`0x[0-9a-fA-F]+\\.[0-9a-fA-F]+([pP][\\-+]?[0-9a-fA-F]+)?`, LiteralNumberFloat, nil},\n+\t\t\t{`0x[0-9a-fA-F]+\\.?[pP][\\-+]?[0-9a-fA-F]+`, LiteralNumberFloat, nil},\n+\t\t\t{`[0-9]+\\.[0-9]+([eE][-+]?[0-9]+)?`, LiteralNumberFloat, nil},\n+\t\t\t{`[0-9]+\\.?[eE][-+]?[0-9]+`, LiteralNumberFloat, nil},\n+\t\t\t{`0b(?:_?[01])+`, LiteralNumberBin, nil},\n+\t\t\t{`0o(?:_?[0-7])+`, LiteralNumberOct, nil},\n+\t\t\t{`0x(?:_?[0-9a-fA-F])+`, LiteralNumberHex, nil},\n+\t\t\t{`(?:_?[0-9])+`, LiteralNumberInteger, nil},\n+\t\t\t{`@[a-zA-Z_]\\w*`, NameBuiltin, nil},\n+\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n+\t\t\t{`\\'\\\\\\'\\'`, LiteralStringEscape, nil},\n+\t\t\t{`\\'\\\\(|x[a-fA-F0-9]{2}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{6}|[nr\\\\t\\'\"])\\'`, LiteralStringEscape, nil},\n+\t\t\t{`\\'[^\\\\\\']\\'`, LiteralString, nil},\n+\t\t\t{`\\\\\\\\[^\\n]*`, LiteralStringHeredoc, nil},\n+\t\t\t{`c\\\\\\\\[^\\n]*`, LiteralStringHeredoc, nil},\n+\t\t\t{`c?\"`, LiteralString, Push(\"string\")},\n+\t\t\t{`[+%=><|^!?/\\-*&~:]`, Operator, nil},\n+\t\t\t{`[{}()\\[\\],.;]`, Punctuation, nil},\n+\t\t},\n+\t\t\"string\": {\n+\t\t\t{`\\\\(x[a-fA-F0-9]{2}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{6}|[nr\\\\t\\'\"])`, LiteralStringEscape, nil},\n+\t\t\t{`[^\\\\\"\\n]+`, LiteralString, nil},\n+\t\t\t{`\"`, LiteralString, Pop(1)},\n+\t\t},\n+\t}\n+}"
    },
    {
      "sha": "bf4d9de17c3ad4eee2faaa24e3781718b96a591d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/pygments-lexers.txt",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/pygments-lexers.txt",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/pygments-lexers.txt",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/pygments-lexers.txt?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -2,9 +2,6 @@ Generated with:\n \n   g 'class.*RegexLexer' | pawk --strict -F: '\"pygments.lexers.%s.%s\" % (f[0].split(\".\")[0], f[2].split()[1].split(\"(\")[0])' > lexers.txt\n \n-perl6:\n-  Requires a bunch of helpers that I do not have the time to convert.\n-\n kotlin:\n   invalid unicode escape sequences\n   FIXED: Have to disable wide Unicode characters in unistring.py"
    },
    {
      "sha": "73f8031cc304323184cfce7d385d527c0be6c005",
      "filename": "backend/vendor/github.com/alecthomas/chroma/regexp.go",
      "status": "modified",
      "additions": 157,
      "deletions": 53,
      "changes": 210,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/regexp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/regexp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/regexp.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -4,8 +4,10 @@ import (\n \t\"fmt\"\n \t\"os\"\n \t\"regexp\"\n+\t\"sort\"\n \t\"strings\"\n \t\"sync\"\n+\t\"time\"\n \t\"unicode/utf8\"\n \n \t\"github.com/dlclark/regexp2\"\n@@ -21,25 +23,57 @@ type Rule struct {\n // An Emitter takes group matches and returns tokens.\n type Emitter interface {\n \t// Emit tokens for the given regex groups.\n-\tEmit(groups []string, lexer Lexer) Iterator\n+\tEmit(groups []string, state *LexerState) Iterator\n }\n \n // EmitterFunc is a function that is an Emitter.\n-type EmitterFunc func(groups []string, lexer Lexer) Iterator\n+type EmitterFunc func(groups []string, state *LexerState) Iterator\n \n // Emit tokens for groups.\n-func (e EmitterFunc) Emit(groups []string, lexer Lexer) Iterator { return e(groups, lexer) }\n+func (e EmitterFunc) Emit(groups []string, state *LexerState) Iterator {\n+\treturn e(groups, state)\n+}\n \n // ByGroups emits a token for each matching group in the rule's regex.\n func ByGroups(emitters ...Emitter) Emitter {\n-\treturn EmitterFunc(func(groups []string, lexer Lexer) Iterator {\n+\treturn EmitterFunc(func(groups []string, state *LexerState) Iterator {\n \t\titerators := make([]Iterator, 0, len(groups)-1)\n \t\tif len(emitters) != len(groups)-1 {\n-\t\t\titerators = append(iterators, Error.Emit(groups, lexer))\n+\t\t\titerators = append(iterators, Error.Emit(groups, state))\n \t\t\t// panic(errors.Errorf(\"number of groups %q does not match number of emitters %v\", groups, emitters))\n \t\t} else {\n \t\t\tfor i, group := range groups[1:] {\n-\t\t\t\titerators = append(iterators, emitters[i].Emit([]string{group}, lexer))\n+\t\t\t\tif emitters[i] != nil {\n+\t\t\t\t\titerators = append(iterators, emitters[i].Emit([]string{group}, state))\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\treturn Concaterator(iterators...)\n+\t})\n+}\n+\n+// ByGroupNames emits a token for each named matching group in the rule's regex.\n+func ByGroupNames(emitters map[string]Emitter) Emitter {\n+\treturn EmitterFunc(func(groups []string, state *LexerState) Iterator {\n+\t\titerators := make([]Iterator, 0, len(state.NamedGroups)-1)\n+\t\tif len(state.NamedGroups)-1 == 0 {\n+\t\t\tif emitter, ok := emitters[`0`]; ok {\n+\t\t\t\titerators = append(iterators, emitter.Emit(groups, state))\n+\t\t\t} else {\n+\t\t\t\titerators = append(iterators, Error.Emit(groups, state))\n+\t\t\t}\n+\t\t} else {\n+\t\t\truleRegex := state.Rules[state.State][state.Rule].Regexp\n+\t\t\tfor i := 1; i < len(state.NamedGroups); i++ {\n+\t\t\t\tgroupName := ruleRegex.GroupNameFromNumber(i)\n+\t\t\t\tgroup := state.NamedGroups[groupName]\n+\t\t\t\tif emitter, ok := emitters[groupName]; ok {\n+\t\t\t\t\tif emitter != nil {\n+\t\t\t\t\t\titerators = append(iterators, emitter.Emit([]string{group}, state))\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\titerators = append(iterators, Error.Emit([]string{group}, state))\n+\t\t\t\t}\n \t\t\t}\n \t\t}\n \t\treturn Concaterator(iterators...)\n@@ -87,7 +121,7 @@ func ByGroups(emitters ...Emitter) Emitter {\n // Note: panic's if the number emitters does not equal the number of matched\n // groups in the regex.\n func UsingByGroup(sublexerGetFunc func(string) Lexer, sublexerNameGroup, codeGroup int, emitters ...Emitter) Emitter {\n-\treturn EmitterFunc(func(groups []string, lexer Lexer) Iterator {\n+\treturn EmitterFunc(func(groups []string, state *LexerState) Iterator {\n \t\t// bounds check\n \t\tif len(emitters) != len(groups)-1 {\n \t\t\tpanic(\"UsingByGroup expects number of emitters to be the same as len(groups)-1\")\n@@ -105,8 +139,8 @@ func UsingByGroup(sublexerGetFunc func(string) Lexer, sublexerNameGroup, codeGro\n \t\t\t\tif err != nil {\n \t\t\t\t\tpanic(err)\n \t\t\t\t}\n-\t\t\t} else {\n-\t\t\t\titerators[i] = emitters[i].Emit([]string{group}, lexer)\n+\t\t\t} else if emitters[i] != nil {\n+\t\t\t\titerators[i] = emitters[i].Emit([]string{group}, state)\n \t\t\t}\n \t\t}\n \n@@ -116,7 +150,7 @@ func UsingByGroup(sublexerGetFunc func(string) Lexer, sublexerNameGroup, codeGro\n \n // Using returns an Emitter that uses a given Lexer for parsing and emitting.\n func Using(lexer Lexer) Emitter {\n-\treturn EmitterFunc(func(groups []string, _ Lexer) Iterator {\n+\treturn EmitterFunc(func(groups []string, _ *LexerState) Iterator {\n \t\tit, err := lexer.Tokenise(&TokeniseOptions{State: \"root\", Nested: true}, groups[0])\n \t\tif err != nil {\n \t\t\tpanic(err)\n@@ -126,9 +160,9 @@ func Using(lexer Lexer) Emitter {\n }\n \n // UsingSelf is like Using, but uses the current Lexer.\n-func UsingSelf(state string) Emitter {\n-\treturn EmitterFunc(func(groups []string, lexer Lexer) Iterator {\n-\t\tit, err := lexer.Tokenise(&TokeniseOptions{State: state, Nested: true}, groups[0])\n+func UsingSelf(stateName string) Emitter {\n+\treturn EmitterFunc(func(groups []string, state *LexerState) Iterator {\n+\t\tit, err := state.Lexer.Tokenise(&TokeniseOptions{State: stateName, Nested: true}, groups[0])\n \t\tif err != nil {\n \t\t\tpanic(err)\n \t\t}\n@@ -138,6 +172,9 @@ func UsingSelf(state string) Emitter {\n \n // Words creates a regex that matches any of the given literal words.\n func Words(prefix, suffix string, words ...string) string {\n+\tsort.Slice(words, func(i, j int) bool {\n+\t\treturn len(words[j]) < len(words[i])\n+\t})\n \tfor i, word := range words {\n \t\twords[i] = regexp.QuoteMeta(word)\n \t}\n@@ -160,6 +197,14 @@ func Tokenise(lexer Lexer, options *TokeniseOptions, text string) ([]Token, erro\n // Rules maps from state to a sequence of Rules.\n type Rules map[string][]Rule\n \n+// Rename clones rules then a rule.\n+func (r Rules) Rename(oldRule, newRule string) Rules {\n+\tr = r.Clone()\n+\tr[newRule] = r[oldRule]\n+\tdelete(r, oldRule)\n+\treturn r\n+}\n+\n // Clone returns a clone of the Rules.\n func (r Rules) Clone() Rules {\n \tout := map[string][]Rule{}\n@@ -170,49 +215,56 @@ func (r Rules) Clone() Rules {\n \treturn out\n }\n \n-// MustNewLexer creates a new Lexer or panics.\n-func MustNewLexer(config *Config, rules Rules) *RegexLexer {\n-\tlexer, err := NewLexer(config, rules)\n+// Merge creates a clone of \"r\" then merges \"rules\" into the clone.\n+func (r Rules) Merge(rules Rules) Rules {\n+\tout := r.Clone()\n+\tfor k, v := range rules.Clone() {\n+\t\tout[k] = v\n+\t}\n+\treturn out\n+}\n+\n+// MustNewLazyLexer creates a new Lexer with deferred rules generation or panics.\n+func MustNewLazyLexer(config *Config, rulesFunc func() Rules) *RegexLexer {\n+\tlexer, err := NewLazyLexer(config, rulesFunc)\n \tif err != nil {\n \t\tpanic(err)\n \t}\n \treturn lexer\n }\n \n-// NewLexer creates a new regex-based Lexer.\n-//\n-// \"rules\" is a state machine transitition map. Each key is a state. Values are sets of rules\n-// that match input, optionally modify lexer state, and output tokens.\n-func NewLexer(config *Config, rules Rules) (*RegexLexer, error) {\n+// NewLazyLexer creates a new regex-based Lexer with deferred rules generation.\n+func NewLazyLexer(config *Config, rulesFunc func() Rules) (*RegexLexer, error) {\n \tif config == nil {\n \t\tconfig = &Config{}\n \t}\n-\tif _, ok := rules[\"root\"]; !ok {\n-\t\treturn nil, fmt.Errorf(\"no \\\"root\\\" state\")\n-\t}\n-\tcompiledRules := map[string][]*CompiledRule{}\n-\tfor state, rules := range rules {\n-\t\tcompiledRules[state] = nil\n-\t\tfor _, rule := range rules {\n-\t\t\tflags := \"\"\n-\t\t\tif !config.NotMultiline {\n-\t\t\t\tflags += \"m\"\n-\t\t\t}\n-\t\t\tif config.CaseInsensitive {\n-\t\t\t\tflags += \"i\"\n-\t\t\t}\n-\t\t\tif config.DotAll {\n-\t\t\t\tflags += \"s\"\n-\t\t\t}\n-\t\t\tcompiledRules[state] = append(compiledRules[state], &CompiledRule{Rule: rule, flags: flags})\n-\t\t}\n-\t}\n \treturn &RegexLexer{\n-\t\tconfig: config,\n-\t\trules:  compiledRules,\n+\t\tconfig:       config,\n+\t\tcompilerFunc: rulesFunc,\n \t}, nil\n }\n \n+// MustNewLexer creates a new Lexer or panics.\n+//\n+// Deprecated: Use MustNewLazyLexer instead.\n+func MustNewLexer(config *Config, rules Rules) *RegexLexer { // nolint: forbidigo\n+\tlexer, err := NewLexer(config, rules) // nolint: forbidigo\n+\tif err != nil {\n+\t\tpanic(err)\n+\t}\n+\treturn lexer\n+}\n+\n+// NewLexer creates a new regex-based Lexer.\n+//\n+// \"rules\" is a state machine transitition map. Each key is a state. Values are sets of rules\n+// that match input, optionally modify lexer state, and output tokens.\n+//\n+// Deprecated: Use NewLazyLexer instead.\n+func NewLexer(config *Config, rules Rules) (*RegexLexer, error) { // nolint: forbidigo\n+\treturn NewLazyLexer(config, func() Rules { return rules })\n+}\n+\n // Trace enables debug tracing.\n func (r *RegexLexer) Trace(trace bool) *RegexLexer {\n \tr.trace = trace\n@@ -242,10 +294,13 @@ type LexerState struct {\n \tRule  int\n \t// Group matches.\n \tGroups []string\n+\t// Named Group matches.\n+\tNamedGroups map[string]string\n \t// Custum context for mutators.\n \tMutatorContext map[interface{}]interface{}\n \titeratorStack  []Iterator\n \toptions        *TokeniseOptions\n+\tnewlineAdded   bool\n }\n \n // Set mutator context.\n@@ -260,7 +315,11 @@ func (l *LexerState) Get(key interface{}) interface{} {\n \n // Iterator returns the next Token from the lexer.\n func (l *LexerState) Iterator() Token { // nolint: gocognit\n-\tfor l.Pos < len(l.Text) && len(l.Stack) > 0 {\n+\tend := len(l.Text)\n+\tif l.newlineAdded {\n+\t\tend--\n+\t}\n+\tfor l.Pos < end && len(l.Stack) > 0 {\n \t\t// Exhaust the iterator stack, if any.\n \t\tfor len(l.iteratorStack) > 0 {\n \t\t\tn := len(l.iteratorStack) - 1\n@@ -280,7 +339,7 @@ func (l *LexerState) Iterator() Token { // nolint: gocognit\n \t\tif !ok {\n \t\t\tpanic(\"unknown state \" + l.State)\n \t\t}\n-\t\truleIndex, rule, groups := matchRules(l.Text, l.Pos, selectedRule)\n+\t\truleIndex, rule, groups, namedGroups := matchRules(l.Text, l.Pos, selectedRule)\n \t\t// No match.\n \t\tif groups == nil {\n \t\t\t// From Pygments :\\\n@@ -298,14 +357,15 @@ func (l *LexerState) Iterator() Token { // nolint: gocognit\n \t\t}\n \t\tl.Rule = ruleIndex\n \t\tl.Groups = groups\n+\t\tl.NamedGroups = namedGroups\n \t\tl.Pos += utf8.RuneCountInString(groups[0])\n \t\tif rule.Mutator != nil {\n \t\t\tif err := rule.Mutator.Mutate(l); err != nil {\n \t\t\t\tpanic(err)\n \t\t\t}\n \t\t}\n \t\tif rule.Type != nil {\n-\t\t\tl.iteratorStack = append(l.iteratorStack, rule.Type.Emit(l.Groups, l.Lexer))\n+\t\t\tl.iteratorStack = append(l.iteratorStack, rule.Type.Emit(l.Groups, l))\n \t\t}\n \t}\n \t// Exhaust the IteratorStack, if any.\n@@ -335,9 +395,11 @@ type RegexLexer struct {\n \tanalyser func(text string) float32\n \ttrace    bool\n \n-\tmu       sync.Mutex\n-\tcompiled bool\n-\trules    map[string][]*CompiledRule\n+\tmu           sync.Mutex\n+\tcompiled     bool\n+\trules        map[string][]*CompiledRule\n+\tcompilerFunc func() Rules\n+\tcompileOnce  sync.Once\n }\n \n // SetAnalyser sets the analyser function used to perform content inspection.\n@@ -372,10 +434,11 @@ func (r *RegexLexer) maybeCompile() (err error) {\n \t\t\t\t\tpattern = \"(?\" + rule.flags + \")\" + pattern\n \t\t\t\t}\n \t\t\t\tpattern = `\\G` + pattern\n-\t\t\t\trule.Regexp, err = regexp2.Compile(pattern, 0)\n+\t\t\t\trule.Regexp, err = regexp2.Compile(pattern, regexp2.RE2)\n \t\t\t\tif err != nil {\n \t\t\t\t\treturn fmt.Errorf(\"failed to compile rule %s.%d: %s\", state, i, err)\n \t\t\t\t}\n+\t\t\t\trule.Regexp.MatchTimeout = time.Millisecond * 250\n \t\t\t}\n \t\t}\n \t}\n@@ -403,7 +466,43 @@ restart:\n \treturn nil\n }\n \n+func (r *RegexLexer) compileRules() error {\n+\trules := r.compilerFunc()\n+\tif _, ok := rules[\"root\"]; !ok {\n+\t\treturn fmt.Errorf(\"no \\\"root\\\" state\")\n+\t}\n+\tcompiledRules := map[string][]*CompiledRule{}\n+\tfor state, rules := range rules {\n+\t\tcompiledRules[state] = nil\n+\t\tfor _, rule := range rules {\n+\t\t\tflags := \"\"\n+\t\t\tif !r.config.NotMultiline {\n+\t\t\t\tflags += \"m\"\n+\t\t\t}\n+\t\t\tif r.config.CaseInsensitive {\n+\t\t\t\tflags += \"i\"\n+\t\t\t}\n+\t\t\tif r.config.DotAll {\n+\t\t\t\tflags += \"s\"\n+\t\t\t}\n+\t\t\tcompiledRules[state] = append(compiledRules[state], &CompiledRule{Rule: rule, flags: flags})\n+\t\t}\n+\t}\n+\n+\tr.rules = compiledRules\n+\treturn nil\n+}\n+\n func (r *RegexLexer) Tokenise(options *TokeniseOptions, text string) (Iterator, error) { // nolint\n+\tvar err error\n+\tif r.compilerFunc != nil {\n+\t\tr.compileOnce.Do(func() {\n+\t\t\terr = r.compileRules()\n+\t\t})\n+\t}\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n \tif err := r.maybeCompile(); err != nil {\n \t\treturn nil, err\n \t}\n@@ -413,10 +512,13 @@ func (r *RegexLexer) Tokenise(options *TokeniseOptions, text string) (Iterator,\n \tif options.EnsureLF {\n \t\ttext = ensureLF(text)\n \t}\n+\tnewlineAdded := false\n \tif !options.Nested && r.config.EnsureNL && !strings.HasSuffix(text, \"\\n\") {\n \t\ttext += \"\\n\"\n+\t\tnewlineAdded = true\n \t}\n \tstate := &LexerState{\n+\t\tnewlineAdded:   newlineAdded,\n \t\toptions:        options,\n \t\tLexer:          r,\n \t\tText:           []rune(text),\n@@ -427,18 +529,20 @@ func (r *RegexLexer) Tokenise(options *TokeniseOptions, text string) (Iterator,\n \treturn state.Iterator, nil\n }\n \n-func matchRules(text []rune, pos int, rules []*CompiledRule) (int, *CompiledRule, []string) {\n+func matchRules(text []rune, pos int, rules []*CompiledRule) (int, *CompiledRule, []string, map[string]string) {\n \tfor i, rule := range rules {\n \t\tmatch, err := rule.Regexp.FindRunesMatchStartingAt(text, pos)\n \t\tif match != nil && err == nil && match.Index == pos {\n \t\t\tgroups := []string{}\n+\t\t\tnamedGroups := make(map[string]string)\n \t\t\tfor _, g := range match.Groups() {\n+\t\t\t\tnamedGroups[g.Name] = g.String()\n \t\t\t\tgroups = append(groups, g.String())\n \t\t\t}\n-\t\t\treturn i, rule, groups\n+\t\t\treturn i, rule, groups, namedGroups\n \t\t}\n \t}\n-\treturn 0, &CompiledRule{}, nil\n+\treturn 0, &CompiledRule{}, nil, nil\n }\n \n // replace \\r and \\r\\n with \\n"
    },
    {
      "sha": "1319fc42487b85b027fb76ac232ed18b4348c84b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/style.go",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/style.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/style.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/style.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -265,12 +265,12 @@ func (s *Style) Get(ttype TokenType) StyleEntry {\n \n func (s *Style) get(ttype TokenType) StyleEntry {\n \tout := s.entries[ttype]\n-\tif out.IsZero() && s.synthesisable(ttype) {\n-\t\tout = s.synthesise(ttype)\n-\t}\n \tif out.IsZero() && s.parent != nil {\n \t\treturn s.parent.get(ttype)\n \t}\n+\tif out.IsZero() && s.synthesisable(ttype) {\n+\t\tout = s.synthesise(ttype)\n+\t}\n \treturn out\n }\n \n@@ -287,8 +287,10 @@ func (s *Style) synthesise(ttype TokenType) StyleEntry {\n \t// If we don't have line numbers, use the text colour but 20% brighter/darker\n \tcase LineNumbers, LineNumbersTable:\n \t\treturn text\n+\n+\tdefault:\n+\t\treturn StyleEntry{}\n \t}\n-\treturn StyleEntry{}\n }\n \n func (s *Style) synthesisable(ttype TokenType) bool {"
    },
    {
      "sha": "160c75be8a83085ca12b0b1442075480d0015835",
      "filename": "backend/vendor/github.com/alecthomas/chroma/styles/base16-snazzy.go",
      "status": "added",
      "additions": 81,
      "deletions": 0,
      "changes": 81,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/styles/base16-snazzy.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/styles/base16-snazzy.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/styles/base16-snazzy.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,81 @@\n+package styles\n+\n+import (\n+\t\"github.com/alecthomas/chroma\"\n+)\n+\n+// Base16Snazzy style\n+var Base16Snazzy = Register(chroma.MustNewStyle(\"base16-snazzy\", chroma.StyleEntries{\n+\tchroma.Comment:                  \"#78787e\",\n+\tchroma.CommentHashbang:          \"#78787e\",\n+\tchroma.CommentMultiline:         \"#78787e\",\n+\tchroma.CommentPreproc:           \"#78787e\",\n+\tchroma.CommentSingle:            \"#78787e\",\n+\tchroma.CommentSpecial:           \"#78787e\",\n+\tchroma.Generic:                  \"#e2e4e5\",\n+\tchroma.GenericDeleted:           \"#ff5c57\",\n+\tchroma.GenericEmph:              \"#e2e4e5 underline\",\n+\tchroma.GenericError:             \"#ff5c57\",\n+\tchroma.GenericHeading:           \"#e2e4e5 bold\",\n+\tchroma.GenericInserted:          \"#e2e4e5 bold\",\n+\tchroma.GenericOutput:            \"#43454f\",\n+\tchroma.GenericPrompt:            \"#e2e4e5\",\n+\tchroma.GenericStrong:            \"#e2e4e5 italic\",\n+\tchroma.GenericSubheading:        \"#e2e4e5 bold\",\n+\tchroma.GenericTraceback:         \"#e2e4e5\",\n+\tchroma.GenericUnderline:         \"underline\",\n+\tchroma.Error:                    \"#ff5c57\",\n+\tchroma.Keyword:                  \"#ff6ac1\",\n+\tchroma.KeywordConstant:          \"#ff6ac1\",\n+\tchroma.KeywordDeclaration:       \"#ff5c57\",\n+\tchroma.KeywordNamespace:         \"#ff6ac1\",\n+\tchroma.KeywordPseudo:            \"#ff6ac1\",\n+\tchroma.KeywordReserved:          \"#ff6ac1\",\n+\tchroma.KeywordType:              \"#9aedfe\",\n+\tchroma.Literal:                  \"#e2e4e5\",\n+\tchroma.LiteralDate:              \"#e2e4e5\",\n+\tchroma.Name:                     \"#e2e4e5\",\n+\tchroma.NameAttribute:            \"#57c7ff\",\n+\tchroma.NameBuiltin:              \"#ff5c57\",\n+\tchroma.NameBuiltinPseudo:        \"#e2e4e5\",\n+\tchroma.NameClass:                \"#f3f99d\",\n+\tchroma.NameConstant:             \"#ff9f43\",\n+\tchroma.NameDecorator:            \"#ff9f43\",\n+\tchroma.NameEntity:               \"#e2e4e5\",\n+\tchroma.NameException:            \"#e2e4e5\",\n+\tchroma.NameFunction:             \"#57c7ff\",\n+\tchroma.NameLabel:                \"#ff5c57\",\n+\tchroma.NameNamespace:            \"#e2e4e5\",\n+\tchroma.NameOther:                \"#e2e4e5\",\n+\tchroma.NameTag:                  \"#ff6ac1\",\n+\tchroma.NameVariable:             \"#ff5c57\",\n+\tchroma.NameVariableClass:        \"#ff5c57\",\n+\tchroma.NameVariableGlobal:       \"#ff5c57\",\n+\tchroma.NameVariableInstance:     \"#ff5c57\",\n+\tchroma.LiteralNumber:            \"#ff9f43\",\n+\tchroma.LiteralNumberBin:         \"#ff9f43\",\n+\tchroma.LiteralNumberFloat:       \"#ff9f43\",\n+\tchroma.LiteralNumberHex:         \"#ff9f43\",\n+\tchroma.LiteralNumberInteger:     \"#ff9f43\",\n+\tchroma.LiteralNumberIntegerLong: \"#ff9f43\",\n+\tchroma.LiteralNumberOct:         \"#ff9f43\",\n+\tchroma.Operator:                 \"#ff6ac1\",\n+\tchroma.OperatorWord:             \"#ff6ac1\",\n+\tchroma.Other:                    \"#e2e4e5\",\n+\tchroma.Punctuation:              \"#e2e4e5\",\n+\tchroma.LiteralString:            \"#5af78e\",\n+\tchroma.LiteralStringBacktick:    \"#5af78e\",\n+\tchroma.LiteralStringChar:        \"#5af78e\",\n+\tchroma.LiteralStringDoc:         \"#5af78e\",\n+\tchroma.LiteralStringDouble:      \"#5af78e\",\n+\tchroma.LiteralStringEscape:      \"#5af78e\",\n+\tchroma.LiteralStringHeredoc:     \"#5af78e\",\n+\tchroma.LiteralStringInterpol:    \"#5af78e\",\n+\tchroma.LiteralStringOther:       \"#5af78e\",\n+\tchroma.LiteralStringRegex:       \"#5af78e\",\n+\tchroma.LiteralStringSingle:      \"#5af78e\",\n+\tchroma.LiteralStringSymbol:      \"#5af78e\",\n+\tchroma.Text:                     \"#e2e4e5\",\n+\tchroma.TextWhitespace:           \"#e2e4e5\",\n+\tchroma.Background:               \" bg:#282a36\",\n+}))"
    },
    {
      "sha": "6450455504ad8bb26a960373cf05c1bd42c06ec2",
      "filename": "backend/vendor/github.com/alecthomas/chroma/styles/doom-one.go",
      "status": "added",
      "additions": 58,
      "deletions": 0,
      "changes": 58,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/styles/doom-one.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/styles/doom-one.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/styles/doom-one.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,58 @@\n+package styles\n+\n+import (\n+\t\"github.com/alecthomas/chroma\"\n+)\n+\n+// Doom One style. Inspired by Atom One and Doom Emacs's Atom One theme\n+var DoomOne = Register(chroma.MustNewStyle(\"doom-one\", chroma.StyleEntries{\n+\tchroma.Text:                 \"#b0c4de\",\n+\tchroma.Error:                \"#b0c4de\",\n+\tchroma.Comment:              \"italic #8a93a5\",\n+\tchroma.CommentHashbang:      \"bold\",\n+\tchroma.Keyword:              \"#c678dd\",\n+\tchroma.KeywordType:          \"#ef8383\",\n+\tchroma.KeywordConstant:      \"bold #b756ff\",\n+\tchroma.Operator:             \"#c7bf54\",\n+\tchroma.OperatorWord:         \"bold #b756ff\",\n+\tchroma.Punctuation:          \"#b0c4de\",\n+\tchroma.Name:                 \"#c1abea\",\n+\tchroma.NameAttribute:        \"#b3d23c\",\n+\tchroma.NameBuiltin:          \"#ef8383\",\n+\tchroma.NameClass:            \"#76a9f9\",\n+\tchroma.NameConstant:         \"bold #b756ff\",\n+\tchroma.NameDecorator:        \"#e5c07b\",\n+\tchroma.NameEntity:           \"#bda26f\",\n+\tchroma.NameException:        \"bold #fd7474\",\n+\tchroma.NameFunction:         \"#00b1f7\",\n+\tchroma.NameProperty:         \"#cebc3a\",\n+\tchroma.NameLabel:            \"#f5a40d\",\n+\tchroma.NameNamespace:        \"#76a9f9\",\n+\tchroma.NameTag:              \"#e06c75\",\n+\tchroma.NameVariable:         \"#DCAEEA\",\n+\tchroma.NameVariableGlobal:   \"bold #DCAEEA\",\n+\tchroma.NameVariableInstance: \"#e06c75\",\n+\tchroma.Literal:              \"#98c379\",\n+\tchroma.Number:               \"#d19a66\",\n+\tchroma.String:               \"#98c379\",\n+\tchroma.StringDoc:            \"#7e97c3\",\n+\tchroma.StringDouble:         \"#63c381\",\n+\tchroma.StringEscape:         \"bold #d26464\",\n+\tchroma.StringHeredoc:        \"#98c379\",\n+\tchroma.StringInterpol:       \"#98c379\",\n+\tchroma.StringOther:          \"#70b33f\",\n+\tchroma.StringRegex:          \"#56b6c2\",\n+\tchroma.StringSingle:         \"#98c379\",\n+\tchroma.StringSymbol:         \"#56b6c2\",\n+\tchroma.Generic:              \"#b0c4de\",\n+\tchroma.GenericEmph:          \"italic\",\n+\tchroma.GenericHeading:       \"bold #a2cbff\",\n+\tchroma.GenericInserted:      \"#a6e22e\",\n+\tchroma.GenericOutput:        \"#a6e22e\",\n+\tchroma.GenericUnderline:     \"underline\",\n+\tchroma.GenericPrompt:        \"#a6e22e\",\n+\tchroma.GenericStrong:        \"bold\",\n+\tchroma.GenericSubheading:    \"#a2cbff\",\n+\tchroma.GenericTraceback:     \"#a2cbff\",\n+\tchroma.Background:           \"#b0c4de bg:#282c34\",\n+}))"
    },
    {
      "sha": "465417391e7b7f07a8ad76bf6dc062ed4d9be963",
      "filename": "backend/vendor/github.com/alecthomas/chroma/styles/doom-one2.go",
      "status": "added",
      "additions": 71,
      "deletions": 0,
      "changes": 71,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/styles/doom-one2.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/styles/doom-one2.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/styles/doom-one2.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,71 @@\n+package styles\n+\n+import (\n+\t\"github.com/alecthomas/chroma\"\n+)\n+\n+// Doom One 2 style. Inspired by Atom One and Doom Emacs's Atom One theme\n+var DoomOne2 = Register(chroma.MustNewStyle(\"doom-one2\", chroma.StyleEntries{\n+\tchroma.Text:                 \"#b0c4de\",\n+\tchroma.Error:                \"#b0c4de\",\n+\tchroma.Comment:              \"italic #8a93a5\",\n+\tchroma.CommentHashbang:      \"bold\",\n+\tchroma.Keyword:              \"#76a9f9\",\n+\tchroma.KeywordConstant:      \"#e5c07b\",\n+\tchroma.KeywordType:          \"#e5c07b\",\n+\tchroma.Operator:             \"#54b1c7\",\n+\tchroma.OperatorWord:         \"bold #b756ff\",\n+\tchroma.Punctuation:          \"#abb2bf\",\n+\tchroma.Name:                 \"#aa89ea\",\n+\tchroma.NameAttribute:        \"#cebc3a\",\n+\tchroma.NameBuiltin:          \"#e5c07b\",\n+\tchroma.NameClass:            \"#ca72ff\",\n+\tchroma.NameConstant:         \"bold\",\n+\tchroma.NameDecorator:        \"#e5c07b\",\n+\tchroma.NameEntity:           \"#bda26f\",\n+\tchroma.NameException:        \"bold #fd7474\",\n+\tchroma.NameFunction:         \"#00b1f7\",\n+\tchroma.NameProperty:         \"#cebc3a\",\n+\tchroma.NameLabel:            \"#f5a40d\",\n+\tchroma.NameNamespace:        \"#ca72ff\",\n+\tchroma.NameTag:              \"#76a9f9\",\n+\tchroma.NameVariable:         \"#DCAEEA\",\n+\tchroma.NameVariableClass:    \"#DCAEEA\",\n+\tchroma.NameVariableGlobal:   \"bold #DCAEEA\",\n+\tchroma.NameVariableInstance: \"#e06c75\",\n+\tchroma.NameVariableMagic:    \"#DCAEEA\",\n+\tchroma.Literal:              \"#98c379\",\n+\tchroma.LiteralDate:          \"#98c379\",\n+\tchroma.Number:               \"#d19a66\",\n+\tchroma.NumberBin:            \"#d19a66\",\n+\tchroma.NumberFloat:          \"#d19a66\",\n+\tchroma.NumberHex:            \"#d19a66\",\n+\tchroma.NumberInteger:        \"#d19a66\",\n+\tchroma.NumberIntegerLong:    \"#d19a66\",\n+\tchroma.NumberOct:            \"#d19a66\",\n+\tchroma.String:               \"#98c379\",\n+\tchroma.StringAffix:          \"#98c379\",\n+\tchroma.StringBacktick:       \"#98c379\",\n+\tchroma.StringDelimiter:      \"#98c379\",\n+\tchroma.StringDoc:            \"#7e97c3\",\n+\tchroma.StringDouble:         \"#63c381\",\n+\tchroma.StringEscape:         \"bold #d26464\",\n+\tchroma.StringHeredoc:        \"#98c379\",\n+\tchroma.StringInterpol:       \"#98c379\",\n+\tchroma.StringOther:          \"#70b33f\",\n+\tchroma.StringRegex:          \"#56b6c2\",\n+\tchroma.StringSingle:         \"#98c379\",\n+\tchroma.StringSymbol:         \"#56b6c2\",\n+\tchroma.Generic:              \"#b0c4de\",\n+\tchroma.GenericDeleted:       \"#b0c4de\",\n+\tchroma.GenericEmph:          \"italic\",\n+\tchroma.GenericHeading:       \"bold #a2cbff\",\n+\tchroma.GenericInserted:      \"#a6e22e\",\n+\tchroma.GenericOutput:        \"#a6e22e\",\n+\tchroma.GenericUnderline:     \"underline\",\n+\tchroma.GenericPrompt:        \"#a6e22e\",\n+\tchroma.GenericStrong:        \"bold\",\n+\tchroma.GenericSubheading:    \"#a2cbff\",\n+\tchroma.GenericTraceback:     \"#a2cbff\",\n+\tchroma.Background:           \"#b0c4de bg:#282c34\",\n+}))"
    },
    {
      "sha": "d1542f2715f27968a942442074768c826428c31b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/styles/dracula.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/styles/dracula.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/styles/dracula.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/styles/dracula.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -13,11 +13,11 @@ var Dracula = Register(chroma.MustNewStyle(\"dracula\", chroma.StyleEntries{\n \tchroma.CommentSingle:            \"#6272a4\",\n \tchroma.CommentSpecial:           \"#6272a4\",\n \tchroma.Generic:                  \"#f8f8f2\",\n-\tchroma.GenericDeleted:           \"#8b080b\",\n+\tchroma.GenericDeleted:           \"#ff5555\",\n \tchroma.GenericEmph:              \"#f8f8f2 underline\",\n \tchroma.GenericError:             \"#f8f8f2\",\n \tchroma.GenericHeading:           \"#f8f8f2 bold\",\n-\tchroma.GenericInserted:          \"#f8f8f2 bold\",\n+\tchroma.GenericInserted:          \"#50fa7b bold\",\n \tchroma.GenericOutput:            \"#44475a\",\n \tchroma.GenericPrompt:            \"#f8f8f2\",\n \tchroma.GenericStrong:            \"#f8f8f2\","
    },
    {
      "sha": "10bb64fbd3e1a928e79c8d2f024e50bdecb64dfd",
      "filename": "backend/vendor/github.com/alecthomas/chroma/styles/hr_dark.go",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/styles/hr_dark.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/styles/hr_dark.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/styles/hr_dark.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,17 @@\n+package styles\n+\n+import (\n+\t\"github.com/alecthomas/chroma\"\n+)\n+\n+// Theme based on HackerRank Dark Editor theme\n+var HrDark = Register(chroma.MustNewStyle(\"hrdark\", chroma.StyleEntries{\n+\tchroma.Comment:      \"italic #828b96\",\n+\tchroma.Keyword:      \"#ff636f\",\n+\tchroma.OperatorWord: \"#ff636f\",\n+\tchroma.Name:         \"#58a1dd\",\n+\tchroma.Literal:      \"#a6be9d\",\n+\tchroma.Operator:     \"#ff636f\",\n+\tchroma.Background:   \"#1d2432\",\n+\tchroma.Other:        \"#fff\",\n+}))"
    },
    {
      "sha": "d1988589c73c8686c23ad974906e9004693290f1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/styles/hr_high_contrast.go",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/styles/hr_high_contrast.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/styles/hr_high_contrast.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/styles/hr_high_contrast.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,19 @@\n+package styles\n+\n+import (\n+\t\"github.com/alecthomas/chroma\"\n+)\n+\n+// Theme based on HackerRank High Contrast Editor Theme\n+var HrHighContrast = Register(chroma.MustNewStyle(\"hr_high_contrast\", chroma.StyleEntries{\n+\tchroma.Comment:              \"#5a8349\",\n+\tchroma.Keyword:              \"#467faf\",\n+\tchroma.OperatorWord:         \"#467faf\",\n+\tchroma.Name:                 \"#ffffff\",\n+\tchroma.LiteralString:        \"#a87662\",\n+\tchroma.LiteralNumber:        \"#fff\",\n+\tchroma.LiteralStringBoolean: \"#467faf\",\n+\tchroma.Operator:             \"#e4e400\",\n+\tchroma.Background:           \"#000\",\n+\tchroma.Other:                \"#d5d500\",\n+}))"
    },
    {
      "sha": "0fcbc5d4059c8a1a503289012c0e7384dc8d0f6f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/styles/nord.go",
      "status": "added",
      "additions": 75,
      "deletions": 0,
      "changes": 75,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/styles/nord.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/styles/nord.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/styles/nord.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,75 @@\n+package styles\n+\n+import (\n+\t\"github.com/alecthomas/chroma\"\n+)\n+\n+var (\n+\t// colors and palettes based on https://www.nordtheme.com/docs/colors-and-palettes\n+\tnord0  = \"#2e3440\"\n+\tnord1  = \"#3b4252\" // nolint\n+\tnord2  = \"#434c5e\" // nolint\n+\tnord3  = \"#4c566a\"\n+\tnord3b = \"#616e87\"\n+\n+\tnord4 = \"#d8dee9\"\n+\tnord5 = \"#e5e9f0\" // nolint\n+\tnord6 = \"#eceff4\"\n+\n+\tnord7  = \"#8fbcbb\"\n+\tnord8  = \"#88c0d0\"\n+\tnord9  = \"#81a1c1\"\n+\tnord10 = \"#5e81ac\"\n+\n+\tnord11 = \"#bf616a\"\n+\tnord12 = \"#d08770\"\n+\tnord13 = \"#ebcb8b\"\n+\tnord14 = \"#a3be8c\"\n+\tnord15 = \"#b48ead\"\n+)\n+\n+// Nord, an arctic, north-bluish color palette\n+var Nord = Register(chroma.MustNewStyle(\"nord\", chroma.StyleEntries{\n+\tchroma.TextWhitespace:        nord4,\n+\tchroma.Comment:               \"italic \" + nord3b,\n+\tchroma.CommentPreproc:        nord10,\n+\tchroma.Keyword:               \"bold \" + nord9,\n+\tchroma.KeywordPseudo:         \"nobold \" + nord9,\n+\tchroma.KeywordType:           \"nobold \" + nord9,\n+\tchroma.Operator:              nord9,\n+\tchroma.OperatorWord:          \"bold \" + nord9,\n+\tchroma.Name:                  nord4,\n+\tchroma.NameBuiltin:           nord9,\n+\tchroma.NameFunction:          nord8,\n+\tchroma.NameClass:             nord7,\n+\tchroma.NameNamespace:         nord7,\n+\tchroma.NameException:         nord11,\n+\tchroma.NameVariable:          nord4,\n+\tchroma.NameConstant:          nord7,\n+\tchroma.NameLabel:             nord7,\n+\tchroma.NameEntity:            nord12,\n+\tchroma.NameAttribute:         nord7,\n+\tchroma.NameTag:               nord9,\n+\tchroma.NameDecorator:         nord12,\n+\tchroma.Punctuation:           nord6,\n+\tchroma.LiteralString:         nord14,\n+\tchroma.LiteralStringDoc:      nord3b,\n+\tchroma.LiteralStringInterpol: nord14,\n+\tchroma.LiteralStringEscape:   nord13,\n+\tchroma.LiteralStringRegex:    nord13,\n+\tchroma.LiteralStringSymbol:   nord14,\n+\tchroma.LiteralStringOther:    nord14,\n+\tchroma.LiteralNumber:         nord15,\n+\tchroma.GenericHeading:        \"bold \" + nord8,\n+\tchroma.GenericSubheading:     \"bold \" + nord8,\n+\tchroma.GenericDeleted:        nord11,\n+\tchroma.GenericInserted:       nord14,\n+\tchroma.GenericError:          nord11,\n+\tchroma.GenericEmph:           \"italic\",\n+\tchroma.GenericStrong:         \"bold\",\n+\tchroma.GenericPrompt:         \"bold \" + nord3,\n+\tchroma.GenericOutput:         nord4,\n+\tchroma.GenericTraceback:      nord11,\n+\tchroma.Error:                 nord11,\n+\tchroma.Background:            nord4 + \" bg:\" + nord0,\n+}))"
    },
    {
      "sha": "82ad1a14b7b1a93229d405633578a6d42afaaf8b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/styles/vulcan.go",
      "status": "added",
      "additions": 95,
      "deletions": 0,
      "changes": 95,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/styles/vulcan.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/styles/vulcan.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/styles/vulcan.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,95 @@\n+package styles\n+\n+import (\n+\t\"github.com/alecthomas/chroma\"\n+)\n+\n+var (\n+\t// inspired by Doom Emacs's One Doom Theme\n+\tblack  = \"#282C34\"\n+\tgrey   = \"#3E4460\"\n+\tgrey2  = \"#43454f\"\n+\twhite  = \"#C9C9C9\"\n+\tred    = \"#CF5967\"\n+\tyellow = \"#ECBE7B\"\n+\tgreen  = \"#82CC6A\"\n+\tcyan   = \"#56B6C2\"\n+\tblue   = \"#7FBAF5\"\n+\tblue2  = \"#57C7FF\"\n+\tpurple = \"#BC74C4\"\n+)\n+\n+var Vulcan = Register(chroma.MustNewStyle(\"vulcan\", chroma.StyleEntries{\n+\tchroma.Comment:                  grey,\n+\tchroma.CommentHashbang:          grey + \" italic\",\n+\tchroma.CommentMultiline:         grey,\n+\tchroma.CommentPreproc:           blue,\n+\tchroma.CommentSingle:            grey,\n+\tchroma.CommentSpecial:           purple + \" italic\",\n+\tchroma.Generic:                  white,\n+\tchroma.GenericDeleted:           red,\n+\tchroma.GenericEmph:              white + \" underline\",\n+\tchroma.GenericError:             red + \" bold\",\n+\tchroma.GenericHeading:           yellow + \" bold\",\n+\tchroma.GenericInserted:          yellow,\n+\tchroma.GenericOutput:            grey2,\n+\tchroma.GenericPrompt:            white,\n+\tchroma.GenericStrong:            red + \" bold\",\n+\tchroma.GenericSubheading:        red + \" italic\",\n+\tchroma.GenericTraceback:         white,\n+\tchroma.GenericUnderline:         \"underline\",\n+\tchroma.Error:                    red,\n+\tchroma.Keyword:                  blue,\n+\tchroma.KeywordConstant:          red + \" bg:\" + grey2,\n+\tchroma.KeywordDeclaration:       blue,\n+\tchroma.KeywordNamespace:         purple,\n+\tchroma.KeywordPseudo:            purple,\n+\tchroma.KeywordReserved:          blue,\n+\tchroma.KeywordType:              blue2 + \" bold\",\n+\tchroma.Literal:                  white,\n+\tchroma.LiteralDate:              blue2,\n+\tchroma.Name:                     white,\n+\tchroma.NameAttribute:            purple,\n+\tchroma.NameBuiltin:              blue,\n+\tchroma.NameBuiltinPseudo:        blue,\n+\tchroma.NameClass:                yellow,\n+\tchroma.NameConstant:             yellow,\n+\tchroma.NameDecorator:            yellow,\n+\tchroma.NameEntity:               white,\n+\tchroma.NameException:            red,\n+\tchroma.NameFunction:             blue2,\n+\tchroma.NameLabel:                red,\n+\tchroma.NameNamespace:            white,\n+\tchroma.NameOther:                white,\n+\tchroma.NameTag:                  purple,\n+\tchroma.NameVariable:             purple + \" italic\",\n+\tchroma.NameVariableClass:        blue2 + \" bold\",\n+\tchroma.NameVariableGlobal:       yellow,\n+\tchroma.NameVariableInstance:     blue2,\n+\tchroma.LiteralNumber:            cyan,\n+\tchroma.LiteralNumberBin:         blue2,\n+\tchroma.LiteralNumberFloat:       cyan,\n+\tchroma.LiteralNumberHex:         blue2,\n+\tchroma.LiteralNumberInteger:     cyan,\n+\tchroma.LiteralNumberIntegerLong: cyan,\n+\tchroma.LiteralNumberOct:         blue2,\n+\tchroma.Operator:                 purple,\n+\tchroma.OperatorWord:             purple,\n+\tchroma.Other:                    white,\n+\tchroma.Punctuation:              cyan,\n+\tchroma.LiteralString:            green,\n+\tchroma.LiteralStringBacktick:    blue2,\n+\tchroma.LiteralStringChar:        blue2,\n+\tchroma.LiteralStringDoc:         green,\n+\tchroma.LiteralStringDouble:      green,\n+\tchroma.LiteralStringEscape:      cyan,\n+\tchroma.LiteralStringHeredoc:     cyan,\n+\tchroma.LiteralStringInterpol:    green,\n+\tchroma.LiteralStringOther:       green,\n+\tchroma.LiteralStringRegex:       blue2,\n+\tchroma.LiteralStringSingle:      green,\n+\tchroma.LiteralStringSymbol:      green,\n+\tchroma.Text:                     white,\n+\tchroma.TextWhitespace:           white,\n+\tchroma.Background:               \" bg: \" + black,\n+}))"
    },
    {
      "sha": "a16d946ffde6e99b7de9c44966d858352f1671d1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/styles/xcode-dark.go",
      "status": "added",
      "additions": 62,
      "deletions": 0,
      "changes": 62,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/styles/xcode-dark.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/styles/xcode-dark.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/styles/xcode-dark.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,62 @@\n+package styles\n+\n+import (\n+\t\"github.com/alecthomas/chroma\"\n+)\n+\n+var (\n+\t// Inspired by Apple's Xcode \"Default (Dark)\" Theme\n+\tbackground                  = \"#1F1F24\"\n+\tplainText                   = \"#FFFFFF\"\n+\tcomments                    = \"#6C7986\"\n+\tstrings                     = \"#FC6A5D\"\n+\tnumbers                     = \"#D0BF69\"\n+\tkeywords                    = \"#FC5FA3\"\n+\tpreprocessorStatements      = \"#FD8F3F\"\n+\ttypeDeclarations            = \"#5DD8FF\"\n+\totherDeclarations           = \"#41A1C0\"\n+\totherFunctionAndMethodNames = \"#A167E6\"\n+\totherTypeNames              = \"#D0A8FF\"\n+)\n+\n+// Xcode dark style\n+var XcodeDark = Register(chroma.MustNewStyle(\"xcode-dark\", chroma.StyleEntries{\n+\tchroma.Background: plainText + \" bg: \" + background,\n+\n+\tchroma.Comment:          comments,\n+\tchroma.CommentMultiline: comments,\n+\tchroma.CommentPreproc:   preprocessorStatements,\n+\tchroma.CommentSingle:    comments,\n+\tchroma.CommentSpecial:   comments + \" italic\",\n+\n+\tchroma.Error: \"#960050\",\n+\n+\tchroma.Keyword:            keywords,\n+\tchroma.KeywordConstant:    keywords,\n+\tchroma.KeywordDeclaration: keywords,\n+\tchroma.KeywordReserved:    keywords,\n+\n+\tchroma.LiteralNumber:        numbers,\n+\tchroma.LiteralNumberBin:     numbers,\n+\tchroma.LiteralNumberFloat:   numbers,\n+\tchroma.LiteralNumberHex:     numbers,\n+\tchroma.LiteralNumberInteger: numbers,\n+\tchroma.LiteralNumberOct:     numbers,\n+\n+\tchroma.LiteralString:         strings,\n+\tchroma.LiteralStringEscape:   strings,\n+\tchroma.LiteralStringInterpol: plainText,\n+\n+\tchroma.Name:              plainText,\n+\tchroma.NameBuiltin:       otherTypeNames,\n+\tchroma.NameBuiltinPseudo: otherFunctionAndMethodNames,\n+\tchroma.NameClass:         typeDeclarations,\n+\tchroma.NameFunction:      otherDeclarations,\n+\tchroma.NameVariable:      otherDeclarations,\n+\n+\tchroma.Operator: plainText,\n+\n+\tchroma.Punctuation: plainText,\n+\n+\tchroma.Text: plainText,\n+}))"
    },
    {
      "sha": "77945398215ebfa69108e4607090712f492dcc0c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/table.py",
      "status": "modified",
      "additions": 19,
      "deletions": 2,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/table.py",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/table.py",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/table.py?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -1,8 +1,12 @@\n #!/usr/bin/env python3\n+import re\n from collections import defaultdict\n from subprocess import check_output\n \n-lines = check_output([\"go\", \"run\", \"./cmd/chroma/main.go\", \"--list\"]).decode('utf-8').splitlines()\n+README_FILE = \"README.md\"\n+\n+\n+lines = check_output([\"go\", \"run\", \"./cmd/chroma/main.go\", \"--list\"]).decode(\"utf-8\").splitlines()\n lines = [line.strip() for line in lines if line.startswith(\"  \") and not line.startswith(\"   \")]\n lines = sorted(lines, key=lambda l: l.lower())\n \n@@ -11,5 +15,18 @@\n for line in lines:\n     table[line[0].upper()].append(line)\n \n+rows = []\n for key, value in table.items():\n-    print(\"{} | {}\".format(key, ', '.join(value)))\n+    rows.append(\"{} | {}\".format(key, \", \".join(value)))\n+tbody = \"\\n\".join(rows)\n+\n+with open(README_FILE, \"r\") as f:\n+    content = f.read()\n+\n+with open(README_FILE, \"w\") as f:\n+    marker = re.compile(r\"(?P<start>:----: \\\\| --------\\n).*?(?P<end>\\n\\n)\", re.DOTALL)\n+    replacement = r\"\\g<start>%s\\g<end>\" % tbody\n+    updated_content = marker.sub(replacement, content)\n+    f.write(updated_content)\n+\n+print(tbody)"
    },
    {
      "sha": "ede945c52cd3d648c619421bf092b4f69ae8d90d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/types.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/types.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/alecthomas/chroma/types.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/alecthomas/chroma/types.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -342,6 +342,6 @@ func (t TokenType) InSubCategory(other TokenType) bool {\n \treturn t/100 == other/100\n }\n \n-func (t TokenType) Emit(groups []string, lexer Lexer) Iterator {\n+func (t TokenType) Emit(groups []string, _ *LexerState) Iterator {\n \treturn Literator(Token{Type: t, Value: groups[0]})\n }"
    },
    {
      "sha": "51a330b50004eb7d7d749c5e9b8c233fad107621",
      "filename": "backend/vendor/github.com/andybalholm/cascadia/go.mod",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/andybalholm/cascadia/go.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/andybalholm/cascadia/go.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/andybalholm/cascadia/go.mod?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -1,3 +1,5 @@\n-module \"github.com/andybalholm/cascadia\"\n+module github.com/andybalholm/cascadia\n \n-require \"golang.org/x/net\" v0.0.0-20180218175443-cbe0f9307d01\n+require golang.org/x/net v0.0.0-20180218175443-cbe0f9307d01\n+\n+go 1.13"
    },
    {
      "sha": "c40a39fed16e1e0a8c365fc3dc59955ae46dc7ad",
      "filename": "backend/vendor/github.com/andybalholm/cascadia/parser.go",
      "status": "modified",
      "additions": 65,
      "deletions": 28,
      "changes": 93,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/andybalholm/cascadia/parser.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/andybalholm/cascadia/parser.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/andybalholm/cascadia/parser.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -13,6 +13,10 @@ import (\n type parser struct {\n \ts string // the source text\n \ti int    // the current position\n+\n+\t// if `false`, parsing a pseudo-element\n+\t// returns an error.\n+\tacceptPseudoElements bool\n }\n \n // parseEscape parses a backslash escape.\n@@ -29,7 +33,7 @@ func (p *parser) parseEscape() (result string, err error) {\n \tcase hexDigit(c):\n \t\t// unicode escape (hex)\n \t\tvar i int\n-\t\tfor i = start; i < p.i+6 && i < len(p.s) && hexDigit(p.s[i]); i++ {\n+\t\tfor i = start; i < start+6 && i < len(p.s) && hexDigit(p.s[i]); i++ {\n \t\t\t// empty\n \t\t}\n \t\tv, _ := strconv.ParseUint(p.s[start:i], 16, 21)\n@@ -422,17 +426,25 @@ var errExpectedParenthesis = errors.New(\"expected '(' but didn't find it\")\n var errExpectedClosingParenthesis = errors.New(\"expected ')' but didn't find it\")\n var errUnmatchedParenthesis = errors.New(\"unmatched '('\")\n \n-// parsePseudoclassSelector parses a pseudoclass selector like :not(p)\n-func (p *parser) parsePseudoclassSelector() (out Sel, err error) {\n+// parsePseudoclassSelector parses a pseudoclass selector like :not(p) or a pseudo-element\n+// For backwards compatibility, both ':' and '::' prefix are allowed for pseudo-elements.\n+// https://drafts.csswg.org/selectors-3/#pseudo-elements\n+// Returning a nil `Sel` (and a nil `error`) means we found a pseudo-element.\n+func (p *parser) parsePseudoclassSelector() (out Sel, pseudoElement string, err error) {\n \tif p.i >= len(p.s) {\n-\t\treturn nil, fmt.Errorf(\"expected pseudoclass selector (:pseudoclass), found EOF instead\")\n+\t\treturn nil, \"\", fmt.Errorf(\"expected pseudoclass selector (:pseudoclass), found EOF instead\")\n \t}\n \tif p.s[p.i] != ':' {\n-\t\treturn nil, fmt.Errorf(\"expected attribute selector (:pseudoclass), found '%c' instead\", p.s[p.i])\n+\t\treturn nil, \"\", fmt.Errorf(\"expected attribute selector (:pseudoclass), found '%c' instead\", p.s[p.i])\n \t}\n \n \tp.i++\n+\tvar mustBePseudoElement bool\n+\tif p.i >= len(p.s) {\n+\t\treturn nil, \"\", fmt.Errorf(\"got empty pseudoclass (or pseudoelement)\")\n+\t}\n \tif p.s[p.i] == ':' { // we found a pseudo-element\n+\t\tmustBePseudoElement = true\n \t\tp.i++\n \t}\n \n@@ -441,27 +453,33 @@ func (p *parser) parsePseudoclassSelector() (out Sel, err error) {\n \t\treturn\n \t}\n \tname = toLowerASCII(name)\n+\tif mustBePseudoElement && (name != \"after\" && name != \"backdrop\" && name != \"before\" &&\n+\t\tname != \"cue\" && name != \"first-letter\" && name != \"first-line\" && name != \"grammar-error\" &&\n+\t\tname != \"marker\" && name != \"placeholder\" && name != \"selection\" && name != \"spelling-error\") {\n+\t\treturn out, \"\", fmt.Errorf(\"unknown pseudoelement :%s\", name)\n+\t}\n+\n \tswitch name {\n \tcase \"not\", \"has\", \"haschild\":\n \t\tif !p.consumeParenthesis() {\n-\t\t\treturn out, errExpectedParenthesis\n+\t\t\treturn out, \"\", errExpectedParenthesis\n \t\t}\n \t\tsel, parseErr := p.parseSelectorGroup()\n \t\tif parseErr != nil {\n-\t\t\treturn out, parseErr\n+\t\t\treturn out, \"\", parseErr\n \t\t}\n \t\tif !p.consumeClosingParenthesis() {\n-\t\t\treturn out, errExpectedClosingParenthesis\n+\t\t\treturn out, \"\", errExpectedClosingParenthesis\n \t\t}\n \n \t\tout = relativePseudoClassSelector{name: name, match: sel}\n \n \tcase \"contains\", \"containsown\":\n \t\tif !p.consumeParenthesis() {\n-\t\t\treturn out, errExpectedParenthesis\n+\t\t\treturn out, \"\", errExpectedParenthesis\n \t\t}\n \t\tif p.i == len(p.s) {\n-\t\t\treturn out, errUnmatchedParenthesis\n+\t\t\treturn out, \"\", errUnmatchedParenthesis\n \t\t}\n \t\tvar val string\n \t\tswitch p.s[p.i] {\n@@ -471,46 +489,46 @@ func (p *parser) parsePseudoclassSelector() (out Sel, err error) {\n \t\t\tval, err = p.parseIdentifier()\n \t\t}\n \t\tif err != nil {\n-\t\t\treturn out, err\n+\t\t\treturn out, \"\", err\n \t\t}\n \t\tval = strings.ToLower(val)\n \t\tp.skipWhitespace()\n \t\tif p.i >= len(p.s) {\n-\t\t\treturn out, errors.New(\"unexpected EOF in pseudo selector\")\n+\t\t\treturn out, \"\", errors.New(\"unexpected EOF in pseudo selector\")\n \t\t}\n \t\tif !p.consumeClosingParenthesis() {\n-\t\t\treturn out, errExpectedClosingParenthesis\n+\t\t\treturn out, \"\", errExpectedClosingParenthesis\n \t\t}\n \n \t\tout = containsPseudoClassSelector{own: name == \"containsown\", value: val}\n \n \tcase \"matches\", \"matchesown\":\n \t\tif !p.consumeParenthesis() {\n-\t\t\treturn out, errExpectedParenthesis\n+\t\t\treturn out, \"\", errExpectedParenthesis\n \t\t}\n \t\trx, err := p.parseRegex()\n \t\tif err != nil {\n-\t\t\treturn out, err\n+\t\t\treturn out, \"\", err\n \t\t}\n \t\tif p.i >= len(p.s) {\n-\t\t\treturn out, errors.New(\"unexpected EOF in pseudo selector\")\n+\t\t\treturn out, \"\", errors.New(\"unexpected EOF in pseudo selector\")\n \t\t}\n \t\tif !p.consumeClosingParenthesis() {\n-\t\t\treturn out, errExpectedClosingParenthesis\n+\t\t\treturn out, \"\", errExpectedClosingParenthesis\n \t\t}\n \n \t\tout = regexpPseudoClassSelector{own: name == \"matchesown\", regexp: rx}\n \n \tcase \"nth-child\", \"nth-last-child\", \"nth-of-type\", \"nth-last-of-type\":\n \t\tif !p.consumeParenthesis() {\n-\t\t\treturn out, errExpectedParenthesis\n+\t\t\treturn out, \"\", errExpectedParenthesis\n \t\t}\n \t\ta, b, err := p.parseNth()\n \t\tif err != nil {\n-\t\t\treturn out, err\n+\t\t\treturn out, \"\", err\n \t\t}\n \t\tif !p.consumeClosingParenthesis() {\n-\t\t\treturn out, errExpectedClosingParenthesis\n+\t\t\treturn out, \"\", errExpectedClosingParenthesis\n \t\t}\n \t\tlast := name == \"nth-last-child\" || name == \"nth-last-of-type\"\n \t\tofType := name == \"nth-of-type\" || name == \"nth-last-of-type\"\n@@ -535,9 +553,9 @@ func (p *parser) parsePseudoclassSelector() (out Sel, err error) {\n \tcase \"root\":\n \t\tout = rootPseudoClassSelector{}\n \tcase \"after\", \"backdrop\", \"before\", \"cue\", \"first-letter\", \"first-line\", \"grammar-error\", \"marker\", \"placeholder\", \"selection\", \"spelling-error\":\n-\t\treturn out, errors.New(\"pseudo-elements are not yet supported\")\n+\t\treturn nil, name, nil\n \tdefault:\n-\t\treturn out, fmt.Errorf(\"unknown pseudoclass or pseudoelement :%s\", name)\n+\t\treturn out, \"\", fmt.Errorf(\"unknown pseudoclass or pseudoelement :%s\", name)\n \t}\n \treturn\n }\n@@ -706,11 +724,13 @@ func (p *parser) parseSimpleSelectorSequence() (Sel, error) {\n \t\tselectors = append(selectors, r)\n \t}\n \n+\tvar pseudoElement string\n loop:\n \tfor p.i < len(p.s) {\n \t\tvar (\n-\t\t\tns  Sel\n-\t\t\terr error\n+\t\t\tns               Sel\n+\t\t\tnewPseudoElement string\n+\t\t\terr              error\n \t\t)\n \t\tswitch p.s[p.i] {\n \t\tcase '#':\n@@ -720,20 +740,37 @@ loop:\n \t\tcase '[':\n \t\t\tns, err = p.parseAttributeSelector()\n \t\tcase ':':\n-\t\t\tns, err = p.parsePseudoclassSelector()\n+\t\t\tns, newPseudoElement, err = p.parsePseudoclassSelector()\n \t\tdefault:\n \t\t\tbreak loop\n \t\t}\n \t\tif err != nil {\n \t\t\treturn nil, err\n \t\t}\n+\t\t// From https://drafts.csswg.org/selectors-3/#pseudo-elements :\n+\t\t// \"Only one pseudo-element may appear per selector, and if present\n+\t\t// it must appear after the sequence of simple selectors that\n+\t\t// represents the subjects of the selector.\"\"\n+\t\tif ns == nil { // we found a pseudo-element\n+\t\t\tif pseudoElement != \"\" {\n+\t\t\t\treturn nil, fmt.Errorf(\"only one pseudo-element is accepted per selector, got %s and %s\", pseudoElement, newPseudoElement)\n+\t\t\t}\n+\t\t\tif !p.acceptPseudoElements {\n+\t\t\t\treturn nil, fmt.Errorf(\"pseudo-element %s found, but pseudo-elements support is disabled\", newPseudoElement)\n+\t\t\t}\n+\t\t\tpseudoElement = newPseudoElement\n+\t\t} else {\n+\t\t\tif pseudoElement != \"\" {\n+\t\t\t\treturn nil, fmt.Errorf(\"pseudo-element %s must be at the end of selector\", pseudoElement)\n+\t\t\t}\n+\t\t\tselectors = append(selectors, ns)\n+\t\t}\n \n-\t\tselectors = append(selectors, ns)\n \t}\n-\tif len(selectors) == 1 { // no need wrap the selectors in compoundSelector\n+\tif len(selectors) == 1 && pseudoElement == \"\" { // no need wrap the selectors in compoundSelector\n \t\treturn selectors[0], nil\n \t}\n-\treturn compoundSelector{selectors: selectors}, nil\n+\treturn compoundSelector{selectors: selectors, pseudoElement: pseudoElement}, nil\n }\n \n // parseSelector parses a selector that may include combinators."
    },
    {
      "sha": "e2a6dc4be16f99b89c54fbb94d1c609db571307b",
      "filename": "backend/vendor/github.com/andybalholm/cascadia/selector.go",
      "status": "modified",
      "additions": 109,
      "deletions": 4,
      "changes": 113,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/andybalholm/cascadia/selector.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/andybalholm/cascadia/selector.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/andybalholm/cascadia/selector.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -16,14 +16,19 @@ type Matcher interface {\n }\n \n // Sel is the interface for all the functionality provided by selectors.\n-// It is currently the same as Matcher, but other methods may be added in the\n-// future.\n type Sel interface {\n \tMatcher\n \tSpecificity() Specificity\n+\n+\t// Returns a CSS input compiling to this selector.\n+\tString() string\n+\n+\t// Returns a pseudo-element, or an empty string.\n+\tPseudoElement() string\n }\n \n-// Parse parses a selector.\n+// Parse parses a selector. Use `ParseWithPseudoElement`\n+// if you need support for pseudo-elements.\n func Parse(sel string) (Sel, error) {\n \tp := &parser{s: sel}\n \tcompiled, err := p.parseSelector()\n@@ -38,7 +43,25 @@ func Parse(sel string) (Sel, error) {\n \treturn compiled, nil\n }\n \n+// ParseWithPseudoElement parses a single selector,\n+// with support for pseudo-element.\n+func ParseWithPseudoElement(sel string) (Sel, error) {\n+\tp := &parser{s: sel, acceptPseudoElements: true}\n+\tcompiled, err := p.parseSelector()\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tif p.i < len(sel) {\n+\t\treturn nil, fmt.Errorf(\"parsing %q: %d bytes left over\", sel, len(sel)-p.i)\n+\t}\n+\n+\treturn compiled, nil\n+}\n+\n // ParseGroup parses a selector, or a group of selectors separated by commas.\n+// Use `ParseGroupWithPseudoElements`\n+// if you need support for pseudo-elements.\n func ParseGroup(sel string) (SelectorGroup, error) {\n \tp := &parser{s: sel}\n \tcompiled, err := p.parseSelectorGroup()\n@@ -53,6 +76,22 @@ func ParseGroup(sel string) (SelectorGroup, error) {\n \treturn compiled, nil\n }\n \n+// ParseGroupWithPseudoElements parses a selector, or a group of selectors separated by commas.\n+// It supports pseudo-elements.\n+func ParseGroupWithPseudoElements(sel string) (SelectorGroup, error) {\n+\tp := &parser{s: sel, acceptPseudoElements: true}\n+\tcompiled, err := p.parseSelectorGroup()\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tif p.i < len(sel) {\n+\t\treturn nil, fmt.Errorf(\"parsing %q: %d bytes left over\", sel, len(sel)-p.i)\n+\t}\n+\n+\treturn compiled, nil\n+}\n+\n // A Selector is a function which tells whether a node matches or not.\n //\n // This type is maintained for compatibility; I recommend using the newer and\n@@ -182,6 +221,10 @@ func (c tagSelector) Specificity() Specificity {\n \treturn Specificity{0, 0, 1}\n }\n \n+func (c tagSelector) PseudoElement() string {\n+\treturn \"\"\n+}\n+\n type classSelector struct {\n \tclass string\n }\n@@ -197,6 +240,10 @@ func (c classSelector) Specificity() Specificity {\n \treturn Specificity{0, 1, 0}\n }\n \n+func (c classSelector) PseudoElement() string {\n+\treturn \"\"\n+}\n+\n type idSelector struct {\n \tid string\n }\n@@ -212,6 +259,10 @@ func (c idSelector) Specificity() Specificity {\n \treturn Specificity{1, 0, 0}\n }\n \n+func (c idSelector) PseudoElement() string {\n+\treturn \"\"\n+}\n+\n type attrSelector struct {\n \tkey, val, operation string\n \tregexp              *regexp.Regexp\n@@ -352,6 +403,10 @@ func (c attrSelector) Specificity() Specificity {\n \treturn Specificity{0, 1, 0}\n }\n \n+func (c attrSelector) PseudoElement() string {\n+\treturn \"\"\n+}\n+\n // ---------------- Pseudo class selectors ----------------\n // we use severals concrete types of pseudo-class selectors\n \n@@ -415,6 +470,10 @@ func (s relativePseudoClassSelector) Specificity() Specificity {\n \treturn max\n }\n \n+func (c relativePseudoClassSelector) PseudoElement() string {\n+\treturn \"\"\n+}\n+\n type containsPseudoClassSelector struct {\n \town   bool\n \tvalue string\n@@ -436,6 +495,10 @@ func (s containsPseudoClassSelector) Specificity() Specificity {\n \treturn Specificity{0, 1, 0}\n }\n \n+func (c containsPseudoClassSelector) PseudoElement() string {\n+\treturn \"\"\n+}\n+\n type regexpPseudoClassSelector struct {\n \town    bool\n \tregexp *regexp.Regexp\n@@ -488,6 +551,10 @@ func (s regexpPseudoClassSelector) Specificity() Specificity {\n \treturn Specificity{0, 1, 0}\n }\n \n+func (c regexpPseudoClassSelector) PseudoElement() string {\n+\treturn \"\"\n+}\n+\n type nthPseudoClassSelector struct {\n \ta, b         int\n \tlast, ofType bool\n@@ -623,6 +690,10 @@ func (s nthPseudoClassSelector) Specificity() Specificity {\n \treturn Specificity{0, 1, 0}\n }\n \n+func (c nthPseudoClassSelector) PseudoElement() string {\n+\treturn \"\"\n+}\n+\n type onlyChildPseudoClassSelector struct {\n \tofType bool\n }\n@@ -661,6 +732,10 @@ func (s onlyChildPseudoClassSelector) Specificity() Specificity {\n \treturn Specificity{0, 1, 0}\n }\n \n+func (c onlyChildPseudoClassSelector) PseudoElement() string {\n+\treturn \"\"\n+}\n+\n type inputPseudoClassSelector struct{}\n \n // Matches input, select, textarea and button elements.\n@@ -672,6 +747,10 @@ func (s inputPseudoClassSelector) Specificity() Specificity {\n \treturn Specificity{0, 1, 0}\n }\n \n+func (c inputPseudoClassSelector) PseudoElement() string {\n+\treturn \"\"\n+}\n+\n type emptyElementPseudoClassSelector struct{}\n \n // Matches empty elements.\n@@ -694,6 +773,10 @@ func (s emptyElementPseudoClassSelector) Specificity() Specificity {\n \treturn Specificity{0, 1, 0}\n }\n \n+func (c emptyElementPseudoClassSelector) PseudoElement() string {\n+\treturn \"\"\n+}\n+\n type rootPseudoClassSelector struct{}\n \n // Match implements :root\n@@ -711,8 +794,13 @@ func (s rootPseudoClassSelector) Specificity() Specificity {\n \treturn Specificity{0, 1, 0}\n }\n \n+func (c rootPseudoClassSelector) PseudoElement() string {\n+\treturn \"\"\n+}\n+\n type compoundSelector struct {\n-\tselectors []Sel\n+\tselectors     []Sel\n+\tpseudoElement string\n }\n \n // Matches elements if each sub-selectors matches.\n@@ -734,9 +822,17 @@ func (s compoundSelector) Specificity() Specificity {\n \tfor _, sel := range s.selectors {\n \t\tout = out.Add(sel.Specificity())\n \t}\n+\tif s.pseudoElement != \"\" {\n+\t\t// https://drafts.csswg.org/selectors-3/#specificity\n+\t\tout = out.Add(Specificity{0, 0, 1})\n+\t}\n \treturn out\n }\n \n+func (c compoundSelector) PseudoElement() string {\n+\treturn c.pseudoElement\n+}\n+\n type combinedSelector struct {\n \tfirst      Sel\n \tcombinator byte\n@@ -818,6 +914,15 @@ func (s combinedSelector) Specificity() Specificity {\n \treturn spec\n }\n \n+// on combinedSelector, a pseudo-element only makes sens on the last\n+// selector, although others increase specificity.\n+func (c combinedSelector) PseudoElement() string {\n+\tif c.second == nil {\n+\t\treturn \"\"\n+\t}\n+\treturn c.second.PseudoElement()\n+}\n+\n // A SelectorGroup is a list of selectors, which matches if any of the\n // individual selectors matches.\n type SelectorGroup []Sel"
    },
    {
      "sha": "f15b07952775715c7dbbf8887449dfb7eaf563ac",
      "filename": "backend/vendor/github.com/andybalholm/cascadia/serialize.go",
      "status": "added",
      "additions": 120,
      "deletions": 0,
      "changes": 120,
      "blob_url": "https://github.com/umputun/remark42/blob/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/andybalholm/cascadia/serialize.go",
      "raw_url": "https://github.com/umputun/remark42/raw/3f0ede560cc79c7878add5258b1e3b59e2955370/backend/vendor/github.com/andybalholm/cascadia/serialize.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/andybalholm/cascadia/serialize.go?ref=3f0ede560cc79c7878add5258b1e3b59e2955370",
      "patch": "@@ -0,0 +1,120 @@\n+package cascadia\n+\n+import (\n+\t\"fmt\"\n+\t\"strings\"\n+)\n+\n+// implements the reverse operation Sel -> string\n+\n+func (c tagSelector) String() string {\n+\treturn c.tag\n+}\n+\n+func (c idSelector) String() string {\n+\treturn \"#\" + c.id\n+}\n+\n+func (c classSelector) String() string {\n+\treturn \".\" + c.class\n+}\n+\n+func (c attrSelector) String() string {\n+\tval := c.val\n+\tif c.operation == \"#=\" {\n+\t\tval = c.regexp.String()\n+\t} else if c.operation != \"\" {\n+\t\tval = fmt.Sprintf(`\"%s\"`, val)\n+\t}\n+\treturn fmt.Sprintf(`[%s%s%s]`, c.key, c.operation, val)\n+}\n+\n+func (c relativePseudoClassSelector) String() string {\n+\treturn fmt.Sprintf(\":%s(%s)\", c.name, c.match.String())\n+}\n+func (c containsPseudoClassSelector) String() string {\n+\ts := \"contains\"\n+\tif c.own {\n+\t\ts += \"Own\"\n+\t}\n+\treturn fmt.Sprintf(`:%s(\"%s\")`, s, c.value)\n+}\n+func (c regexpPseudoClassSelector) String() string {\n+\ts := \"matches\"\n+\tif c.own {\n+\t\ts += \"Own\"\n+\t}\n+\treturn fmt.Sprintf(\":%s(%s)\", s, c.regexp.String())\n+}\n+func (c nthPseudoClassSelector) String() string {\n+\tif c.a == 0 && c.b == 1 { // special cases\n+\t\ts := \":first-\"\n+\t\tif c.last {\n+\t\t\ts = \":last-\"\n+\t\t}\n+\t\tif c.ofType {\n+\t\t\ts += \"of-type\"\n+\t\t} else {\n+\t\t\ts += \"child\"\n+\t\t}\n+\t\treturn s\n+\t}\n+\tvar name string\n+\tswitch [2]bool{c.last, c.ofType} {\n+\tcase [2]bool{true, true}:\n+\t\tname = \"nth-last-of-type\"\n+\tcase [2]bool{true, false}:\n+\t\tname = \"nth-last-child\"\n+\tcase [2]bool{false, true}:\n+\t\tname = \"nth-of-type\"\n+\tcase [2]bool{false, false}:\n+\t\tname = \"nth-child\"\n+\t}\n+\treturn fmt.Sprintf(\":%s(%dn+%d)\", name, c.a, c.b)\n+}\n+func (c onlyChildPseudoClassSelector) String() string {\n+\tif c.ofType {\n+\t\treturn \":only-of-type\"\n+\t}\n+\treturn \":only-child\"\n+}\n+func (c inputPseudoClassSelector) String() string {\n+\treturn \":input\"\n+}\n+func (c emptyElementPseudoClassSelector) String() string {\n+\treturn \":empty\"\n+}\n+func (c rootPseudoClassSelector) String() string {\n+\treturn \":root\"\n+}\n+\n+func (c compoundSelector) String() string {\n+\tif len(c.selectors) == 0 && c.pseudoElement == \"\" {\n+\t\treturn \"*\"\n+\t}\n+\tchunks := make([]string, len(c.selectors))\n+\tfor i, sel := range c.selectors {\n+\t\tchunks[i] = sel.String()\n+\t}\n+\ts := strings.Join(chunks, \"\")\n+\tif c.pseudoElement != \"\" {\n+\t\ts += \"::\" + c.pseudoElement\n+\t}\n+\treturn s\n+}\n+\n+func (c combinedSelector) String() string {\n+\tstart := c.first.String()\n+\tif c.second != nil {\n+\t\tstart += fmt.Sprintf(\" %s %s\", string(c.combinator), c.second.String())\n+\t}\n+\treturn start\n+}\n+\n+func (c SelectorGroup) String() string {\n+\tck := make([]string, len(c))\n+\tfor i, s := range c {\n+\t\tck[i] = s.String()\n+\t}\n+\treturn strings.Join(ck, \", \")\n+}"
    },
    {
      "sha": "d645695673349e3947e8e5ae42332d0ac3164cd7",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/LICENSE.txt",
      "status": "removed",
      "additions": 0,
      "deletions": 202,
      "changes": 202,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/LICENSE.txt",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/LICENSE.txt",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/LICENSE.txt?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,202 +0,0 @@\n-\n-                                 Apache License\n-                           Version 2.0, January 2004\n-                        http://www.apache.org/licenses/\n-\n-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n-\n-   1. Definitions.\n-\n-      \"License\" shall mean the terms and conditions for use, reproduction,\n-      and distribution as defined by Sections 1 through 9 of this document.\n-\n-      \"Licensor\" shall mean the copyright owner or entity authorized by\n-      the copyright owner that is granting the License.\n-\n-      \"Legal Entity\" shall mean the union of the acting entity and all\n-      other entities that control, are controlled by, or are under common\n-      control with that entity. For the purposes of this definition,\n-      \"control\" means (i) the power, direct or indirect, to cause the\n-      direction or management of such entity, whether by contract or\n-      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n-      outstanding shares, or (iii) beneficial ownership of such entity.\n-\n-      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n-      exercising permissions granted by this License.\n-\n-      \"Source\" form shall mean the preferred form for making modifications,\n-      including but not limited to software source code, documentation\n-      source, and configuration files.\n-\n-      \"Object\" form shall mean any form resulting from mechanical\n-      transformation or translation of a Source form, including but\n-      not limited to compiled object code, generated documentation,\n-      and conversions to other media types.\n-\n-      \"Work\" shall mean the work of authorship, whether in Source or\n-      Object form, made available under the License, as indicated by a\n-      copyright notice that is included in or attached to the work\n-      (an example is provided in the Appendix below).\n-\n-      \"Derivative Works\" shall mean any work, whether in Source or Object\n-      form, that is based on (or derived from) the Work and for which the\n-      editorial revisions, annotations, elaborations, or other modifications\n-      represent, as a whole, an original work of authorship. For the purposes\n-      of this License, Derivative Works shall not include works that remain\n-      separable from, or merely link (or bind by name) to the interfaces of,\n-      the Work and Derivative Works thereof.\n-\n-      \"Contribution\" shall mean any work of authorship, including\n-      the original version of the Work and any modifications or additions\n-      to that Work or Derivative Works thereof, that is intentionally\n-      submitted to Licensor for inclusion in the Work by the copyright owner\n-      or by an individual or Legal Entity authorized to submit on behalf of\n-      the copyright owner. For the purposes of this definition, \"submitted\"\n-      means any form of electronic, verbal, or written communication sent\n-      to the Licensor or its representatives, including but not limited to\n-      communication on electronic mailing lists, source code control systems,\n-      and issue tracking systems that are managed by, or on behalf of, the\n-      Licensor for the purpose of discussing and improving the Work, but\n-      excluding communication that is conspicuously marked or otherwise\n-      designated in writing by the copyright owner as \"Not a Contribution.\"\n-\n-      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n-      on behalf of whom a Contribution has been received by Licensor and\n-      subsequently incorporated within the Work.\n-\n-   2. Grant of Copyright License. Subject to the terms and conditions of\n-      this License, each Contributor hereby grants to You a perpetual,\n-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-      copyright license to reproduce, prepare Derivative Works of,\n-      publicly display, publicly perform, sublicense, and distribute the\n-      Work and such Derivative Works in Source or Object form.\n-\n-   3. Grant of Patent License. Subject to the terms and conditions of\n-      this License, each Contributor hereby grants to You a perpetual,\n-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-      (except as stated in this section) patent license to make, have made,\n-      use, offer to sell, sell, import, and otherwise transfer the Work,\n-      where such license applies only to those patent claims licensable\n-      by such Contributor that are necessarily infringed by their\n-      Contribution(s) alone or by combination of their Contribution(s)\n-      with the Work to which such Contribution(s) was submitted. If You\n-      institute patent litigation against any entity (including a\n-      cross-claim or counterclaim in a lawsuit) alleging that the Work\n-      or a Contribution incorporated within the Work constitutes direct\n-      or contributory patent infringement, then any patent licenses\n-      granted to You under this License for that Work shall terminate\n-      as of the date such litigation is filed.\n-\n-   4. Redistribution. You may reproduce and distribute copies of the\n-      Work or Derivative Works thereof in any medium, with or without\n-      modifications, and in Source or Object form, provided that You\n-      meet the following conditions:\n-\n-      (a) You must give any other recipients of the Work or\n-          Derivative Works a copy of this License; and\n-\n-      (b) You must cause any modified files to carry prominent notices\n-          stating that You changed the files; and\n-\n-      (c) You must retain, in the Source form of any Derivative Works\n-          that You distribute, all copyright, patent, trademark, and\n-          attribution notices from the Source form of the Work,\n-          excluding those notices that do not pertain to any part of\n-          the Derivative Works; and\n-\n-      (d) If the Work includes a \"NOTICE\" text file as part of its\n-          distribution, then any Derivative Works that You distribute must\n-          include a readable copy of the attribution notices contained\n-          within such NOTICE file, excluding those notices that do not\n-          pertain to any part of the Derivative Works, in at least one\n-          of the following places: within a NOTICE text file distributed\n-          as part of the Derivative Works; within the Source form or\n-          documentation, if provided along with the Derivative Works; or,\n-          within a display generated by the Derivative Works, if and\n-          wherever such third-party notices normally appear. The contents\n-          of the NOTICE file are for informational purposes only and\n-          do not modify the License. You may add Your own attribution\n-          notices within Derivative Works that You distribute, alongside\n-          or as an addendum to the NOTICE text from the Work, provided\n-          that such additional attribution notices cannot be construed\n-          as modifying the License.\n-\n-      You may add Your own copyright statement to Your modifications and\n-      may provide additional or different license terms and conditions\n-      for use, reproduction, or distribution of Your modifications, or\n-      for any such Derivative Works as a whole, provided Your use,\n-      reproduction, and distribution of the Work otherwise complies with\n-      the conditions stated in this License.\n-\n-   5. Submission of Contributions. Unless You explicitly state otherwise,\n-      any Contribution intentionally submitted for inclusion in the Work\n-      by You to the Licensor shall be under the terms and conditions of\n-      this License, without any additional terms or conditions.\n-      Notwithstanding the above, nothing herein shall supersede or modify\n-      the terms of any separate license agreement you may have executed\n-      with Licensor regarding such Contributions.\n-\n-   6. Trademarks. This License does not grant permission to use the trade\n-      names, trademarks, service marks, or product names of the Licensor,\n-      except as required for reasonable and customary use in describing the\n-      origin of the Work and reproducing the content of the NOTICE file.\n-\n-   7. Disclaimer of Warranty. Unless required by applicable law or\n-      agreed to in writing, Licensor provides the Work (and each\n-      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n-      implied, including, without limitation, any warranties or conditions\n-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n-      PARTICULAR PURPOSE. You are solely responsible for determining the\n-      appropriateness of using or redistributing the Work and assume any\n-      risks associated with Your exercise of permissions under this License.\n-\n-   8. Limitation of Liability. In no event and under no legal theory,\n-      whether in tort (including negligence), contract, or otherwise,\n-      unless required by applicable law (such as deliberate and grossly\n-      negligent acts) or agreed to in writing, shall any Contributor be\n-      liable to You for damages, including any direct, indirect, special,\n-      incidental, or consequential damages of any character arising as a\n-      result of this License or out of the use or inability to use the\n-      Work (including but not limited to damages for loss of goodwill,\n-      work stoppage, computer failure or malfunction, or any and all\n-      other commercial damages or losses), even if such Contributor\n-      has been advised of the possibility of such damages.\n-\n-   9. Accepting Warranty or Additional Liability. While redistributing\n-      the Work or Derivative Works thereof, You may choose to offer,\n-      and charge a fee for, acceptance of support, warranty, indemnity,\n-      or other liability obligations and/or rights consistent with this\n-      License. However, in accepting such obligations, You may act only\n-      on Your own behalf and on Your sole responsibility, not on behalf\n-      of any other Contributor, and only if You agree to indemnify,\n-      defend, and hold each Contributor harmless for any liability\n-      incurred by, or claims asserted against, such Contributor by reason\n-      of your accepting any such warranty or additional liability.\n-\n-   END OF TERMS AND CONDITIONS\n-\n-   APPENDIX: How to apply the Apache License to your work.\n-\n-      To apply the Apache License to your work, attach the following\n-      boilerplate notice, with the fields enclosed by brackets \"[]\"\n-      replaced with your own identifying information. (Don't include\n-      the brackets!)  The text should be enclosed in the appropriate\n-      comment syntax for the file format. We also recommend that a\n-      file or class name and description of purpose be included on the\n-      same \"printed page\" as the copyright notice for easier\n-      identification within third-party archives.\n-\n-   Copyright [yyyy] [name of copyright owner]\n-\n-   Licensed under the Apache License, Version 2.0 (the \"License\");\n-   you may not use this file except in compliance with the License.\n-   You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-   Unless required by applicable law or agreed to in writing, software\n-   distributed under the License is distributed on an \"AS IS\" BASIS,\n-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-   See the License for the specific language governing permissions and\n-   limitations under the License."
    },
    {
      "sha": "899129ecc465bb919e3213178ef69f13528dcbfb",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/NOTICE.txt",
      "status": "removed",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/NOTICE.txt",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/NOTICE.txt",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/NOTICE.txt?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,3 +0,0 @@\n-AWS SDK for Go\n-Copyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n-Copyright 2014-2015 Stripe, Inc."
    },
    {
      "sha": "99849c0e19c002b434530c0bbee7c563943fee08",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/awserr/error.go",
      "status": "removed",
      "additions": 0,
      "deletions": 164,
      "changes": 164,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/awserr/error.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/awserr/error.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/awserr/error.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,164 +0,0 @@\n-// Package awserr represents API error interface accessors for the SDK.\n-package awserr\n-\n-// An Error wraps lower level errors with code, message and an original error.\n-// The underlying concrete error type may also satisfy other interfaces which\n-// can be to used to obtain more specific information about the error.\n-//\n-// Calling Error() or String() will always include the full information about\n-// an error based on its underlying type.\n-//\n-// Example:\n-//\n-//     output, err := s3manage.Upload(svc, input, opts)\n-//     if err != nil {\n-//         if awsErr, ok := err.(awserr.Error); ok {\n-//             // Get error details\n-//             log.Println(\"Error:\", awsErr.Code(), awsErr.Message())\n-//\n-//             // Prints out full error message, including original error if there was one.\n-//             log.Println(\"Error:\", awsErr.Error())\n-//\n-//             // Get original error\n-//             if origErr := awsErr.OrigErr(); origErr != nil {\n-//                 // operate on original error.\n-//             }\n-//         } else {\n-//             fmt.Println(err.Error())\n-//         }\n-//     }\n-//\n-type Error interface {\n-\t// Satisfy the generic error interface.\n-\terror\n-\n-\t// Returns the short phrase depicting the classification of the error.\n-\tCode() string\n-\n-\t// Returns the error details message.\n-\tMessage() string\n-\n-\t// Returns the original error if one was set.  Nil is returned if not set.\n-\tOrigErr() error\n-}\n-\n-// BatchError is a batch of errors which also wraps lower level errors with\n-// code, message, and original errors. Calling Error() will include all errors\n-// that occurred in the batch.\n-//\n-// Deprecated: Replaced with BatchedErrors. Only defined for backwards\n-// compatibility.\n-type BatchError interface {\n-\t// Satisfy the generic error interface.\n-\terror\n-\n-\t// Returns the short phrase depicting the classification of the error.\n-\tCode() string\n-\n-\t// Returns the error details message.\n-\tMessage() string\n-\n-\t// Returns the original error if one was set.  Nil is returned if not set.\n-\tOrigErrs() []error\n-}\n-\n-// BatchedErrors is a batch of errors which also wraps lower level errors with\n-// code, message, and original errors. Calling Error() will include all errors\n-// that occurred in the batch.\n-//\n-// Replaces BatchError\n-type BatchedErrors interface {\n-\t// Satisfy the base Error interface.\n-\tError\n-\n-\t// Returns the original error if one was set.  Nil is returned if not set.\n-\tOrigErrs() []error\n-}\n-\n-// New returns an Error object described by the code, message, and origErr.\n-//\n-// If origErr satisfies the Error interface it will not be wrapped within a new\n-// Error object and will instead be returned.\n-func New(code, message string, origErr error) Error {\n-\tvar errs []error\n-\tif origErr != nil {\n-\t\terrs = append(errs, origErr)\n-\t}\n-\treturn newBaseError(code, message, errs)\n-}\n-\n-// NewBatchError returns an BatchedErrors with a collection of errors as an\n-// array of errors.\n-func NewBatchError(code, message string, errs []error) BatchedErrors {\n-\treturn newBaseError(code, message, errs)\n-}\n-\n-// A RequestFailure is an interface to extract request failure information from\n-// an Error such as the request ID of the failed request returned by a service.\n-// RequestFailures may not always have a requestID value if the request failed\n-// prior to reaching the service such as a connection error.\n-//\n-// Example:\n-//\n-//     output, err := s3manage.Upload(svc, input, opts)\n-//     if err != nil {\n-//         if reqerr, ok := err.(RequestFailure); ok {\n-//             log.Println(\"Request failed\", reqerr.Code(), reqerr.Message(), reqerr.RequestID())\n-//         } else {\n-//             log.Println(\"Error:\", err.Error())\n-//         }\n-//     }\n-//\n-// Combined with awserr.Error:\n-//\n-//    output, err := s3manage.Upload(svc, input, opts)\n-//    if err != nil {\n-//        if awsErr, ok := err.(awserr.Error); ok {\n-//            // Generic AWS Error with Code, Message, and original error (if any)\n-//            fmt.Println(awsErr.Code(), awsErr.Message(), awsErr.OrigErr())\n-//\n-//            if reqErr, ok := err.(awserr.RequestFailure); ok {\n-//                // A service error occurred\n-//                fmt.Println(reqErr.StatusCode(), reqErr.RequestID())\n-//            }\n-//        } else {\n-//            fmt.Println(err.Error())\n-//        }\n-//    }\n-//\n-type RequestFailure interface {\n-\tError\n-\n-\t// The status code of the HTTP response.\n-\tStatusCode() int\n-\n-\t// The request ID returned by the service for a request failure. This will\n-\t// be empty if no request ID is available such as the request failed due\n-\t// to a connection error.\n-\tRequestID() string\n-}\n-\n-// NewRequestFailure returns a wrapped error with additional information for\n-// request status code, and service requestID.\n-//\n-// Should be used to wrap all request which involve service requests. Even if\n-// the request failed without a service response, but had an HTTP status code\n-// that may be meaningful.\n-func NewRequestFailure(err Error, statusCode int, reqID string) RequestFailure {\n-\treturn newRequestError(err, statusCode, reqID)\n-}\n-\n-// UnmarshalError provides the interface for the SDK failing to unmarshal data.\n-type UnmarshalError interface {\n-\tawsError\n-\tBytes() []byte\n-}\n-\n-// NewUnmarshalError returns an initialized UnmarshalError error wrapper adding\n-// the bytes that fail to unmarshal to the error.\n-func NewUnmarshalError(err error, msg string, bytes []byte) UnmarshalError {\n-\treturn &unmarshalError{\n-\t\tawsError: New(\"UnmarshalError\", msg, err),\n-\t\tbytes:    bytes,\n-\t}\n-}"
    },
    {
      "sha": "9cf7eaf4007f544fdbbb060ac3d1a60f94623219",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/awserr/types.go",
      "status": "removed",
      "additions": 0,
      "deletions": 221,
      "changes": 221,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/awserr/types.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/awserr/types.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/awserr/types.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,221 +0,0 @@\n-package awserr\n-\n-import (\n-\t\"encoding/hex\"\n-\t\"fmt\"\n-)\n-\n-// SprintError returns a string of the formatted error code.\n-//\n-// Both extra and origErr are optional.  If they are included their lines\n-// will be added, but if they are not included their lines will be ignored.\n-func SprintError(code, message, extra string, origErr error) string {\n-\tmsg := fmt.Sprintf(\"%s: %s\", code, message)\n-\tif extra != \"\" {\n-\t\tmsg = fmt.Sprintf(\"%s\\n\\t%s\", msg, extra)\n-\t}\n-\tif origErr != nil {\n-\t\tmsg = fmt.Sprintf(\"%s\\ncaused by: %s\", msg, origErr.Error())\n-\t}\n-\treturn msg\n-}\n-\n-// A baseError wraps the code and message which defines an error. It also\n-// can be used to wrap an original error object.\n-//\n-// Should be used as the root for errors satisfying the awserr.Error. Also\n-// for any error which does not fit into a specific error wrapper type.\n-type baseError struct {\n-\t// Classification of error\n-\tcode string\n-\n-\t// Detailed information about error\n-\tmessage string\n-\n-\t// Optional original error this error is based off of. Allows building\n-\t// chained errors.\n-\terrs []error\n-}\n-\n-// newBaseError returns an error object for the code, message, and errors.\n-//\n-// code is a short no whitespace phrase depicting the classification of\n-// the error that is being created.\n-//\n-// message is the free flow string containing detailed information about the\n-// error.\n-//\n-// origErrs is the error objects which will be nested under the new errors to\n-// be returned.\n-func newBaseError(code, message string, origErrs []error) *baseError {\n-\tb := &baseError{\n-\t\tcode:    code,\n-\t\tmessage: message,\n-\t\terrs:    origErrs,\n-\t}\n-\n-\treturn b\n-}\n-\n-// Error returns the string representation of the error.\n-//\n-// See ErrorWithExtra for formatting.\n-//\n-// Satisfies the error interface.\n-func (b baseError) Error() string {\n-\tsize := len(b.errs)\n-\tif size > 0 {\n-\t\treturn SprintError(b.code, b.message, \"\", errorList(b.errs))\n-\t}\n-\n-\treturn SprintError(b.code, b.message, \"\", nil)\n-}\n-\n-// String returns the string representation of the error.\n-// Alias for Error to satisfy the stringer interface.\n-func (b baseError) String() string {\n-\treturn b.Error()\n-}\n-\n-// Code returns the short phrase depicting the classification of the error.\n-func (b baseError) Code() string {\n-\treturn b.code\n-}\n-\n-// Message returns the error details message.\n-func (b baseError) Message() string {\n-\treturn b.message\n-}\n-\n-// OrigErr returns the original error if one was set. Nil is returned if no\n-// error was set. This only returns the first element in the list. If the full\n-// list is needed, use BatchedErrors.\n-func (b baseError) OrigErr() error {\n-\tswitch len(b.errs) {\n-\tcase 0:\n-\t\treturn nil\n-\tcase 1:\n-\t\treturn b.errs[0]\n-\tdefault:\n-\t\tif err, ok := b.errs[0].(Error); ok {\n-\t\t\treturn NewBatchError(err.Code(), err.Message(), b.errs[1:])\n-\t\t}\n-\t\treturn NewBatchError(\"BatchedErrors\",\n-\t\t\t\"multiple errors occurred\", b.errs)\n-\t}\n-}\n-\n-// OrigErrs returns the original errors if one was set. An empty slice is\n-// returned if no error was set.\n-func (b baseError) OrigErrs() []error {\n-\treturn b.errs\n-}\n-\n-// So that the Error interface type can be included as an anonymous field\n-// in the requestError struct and not conflict with the error.Error() method.\n-type awsError Error\n-\n-// A requestError wraps a request or service error.\n-//\n-// Composed of baseError for code, message, and original error.\n-type requestError struct {\n-\tawsError\n-\tstatusCode int\n-\trequestID  string\n-\tbytes      []byte\n-}\n-\n-// newRequestError returns a wrapped error with additional information for\n-// request status code, and service requestID.\n-//\n-// Should be used to wrap all request which involve service requests. Even if\n-// the request failed without a service response, but had an HTTP status code\n-// that may be meaningful.\n-//\n-// Also wraps original errors via the baseError.\n-func newRequestError(err Error, statusCode int, requestID string) *requestError {\n-\treturn &requestError{\n-\t\tawsError:   err,\n-\t\tstatusCode: statusCode,\n-\t\trequestID:  requestID,\n-\t}\n-}\n-\n-// Error returns the string representation of the error.\n-// Satisfies the error interface.\n-func (r requestError) Error() string {\n-\textra := fmt.Sprintf(\"status code: %d, request id: %s\",\n-\t\tr.statusCode, r.requestID)\n-\treturn SprintError(r.Code(), r.Message(), extra, r.OrigErr())\n-}\n-\n-// String returns the string representation of the error.\n-// Alias for Error to satisfy the stringer interface.\n-func (r requestError) String() string {\n-\treturn r.Error()\n-}\n-\n-// StatusCode returns the wrapped status code for the error\n-func (r requestError) StatusCode() int {\n-\treturn r.statusCode\n-}\n-\n-// RequestID returns the wrapped requestID\n-func (r requestError) RequestID() string {\n-\treturn r.requestID\n-}\n-\n-// OrigErrs returns the original errors if one was set. An empty slice is\n-// returned if no error was set.\n-func (r requestError) OrigErrs() []error {\n-\tif b, ok := r.awsError.(BatchedErrors); ok {\n-\t\treturn b.OrigErrs()\n-\t}\n-\treturn []error{r.OrigErr()}\n-}\n-\n-type unmarshalError struct {\n-\tawsError\n-\tbytes []byte\n-}\n-\n-// Error returns the string representation of the error.\n-// Satisfies the error interface.\n-func (e unmarshalError) Error() string {\n-\textra := hex.Dump(e.bytes)\n-\treturn SprintError(e.Code(), e.Message(), extra, e.OrigErr())\n-}\n-\n-// String returns the string representation of the error.\n-// Alias for Error to satisfy the stringer interface.\n-func (e unmarshalError) String() string {\n-\treturn e.Error()\n-}\n-\n-// Bytes returns the bytes that failed to unmarshal.\n-func (e unmarshalError) Bytes() []byte {\n-\treturn e.bytes\n-}\n-\n-// An error list that satisfies the golang interface\n-type errorList []error\n-\n-// Error returns the string representation of the error.\n-//\n-// Satisfies the error interface.\n-func (e errorList) Error() string {\n-\tmsg := \"\"\n-\t// How do we want to handle the array size being zero\n-\tif size := len(e); size > 0 {\n-\t\tfor i := 0; i < size; i++ {\n-\t\t\tmsg += e[i].Error()\n-\t\t\t// We check the next index to see if it is within the slice.\n-\t\t\t// If it is, then we append a newline. We do this, because unit tests\n-\t\t\t// could be broken with the additional '\\n'\n-\t\t\tif i+1 < size {\n-\t\t\t\tmsg += \"\\n\"\n-\t\t\t}\n-\t\t}\n-\t}\n-\treturn msg\n-}"
    },
    {
      "sha": "1a3d106d5c1bb6e5d236d35a735ea1168f6fafa6",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/copy.go",
      "status": "removed",
      "additions": 0,
      "deletions": 108,
      "changes": 108,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/copy.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/copy.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/copy.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,108 +0,0 @@\n-package awsutil\n-\n-import (\n-\t\"io\"\n-\t\"reflect\"\n-\t\"time\"\n-)\n-\n-// Copy deeply copies a src structure to dst. Useful for copying request and\n-// response structures.\n-//\n-// Can copy between structs of different type, but will only copy fields which\n-// are assignable, and exist in both structs. Fields which are not assignable,\n-// or do not exist in both structs are ignored.\n-func Copy(dst, src interface{}) {\n-\tdstval := reflect.ValueOf(dst)\n-\tif !dstval.IsValid() {\n-\t\tpanic(\"Copy dst cannot be nil\")\n-\t}\n-\n-\trcopy(dstval, reflect.ValueOf(src), true)\n-}\n-\n-// CopyOf returns a copy of src while also allocating the memory for dst.\n-// src must be a pointer type or this operation will fail.\n-func CopyOf(src interface{}) (dst interface{}) {\n-\tdsti := reflect.New(reflect.TypeOf(src).Elem())\n-\tdst = dsti.Interface()\n-\trcopy(dsti, reflect.ValueOf(src), true)\n-\treturn\n-}\n-\n-// rcopy performs a recursive copy of values from the source to destination.\n-//\n-// root is used to skip certain aspects of the copy which are not valid\n-// for the root node of a object.\n-func rcopy(dst, src reflect.Value, root bool) {\n-\tif !src.IsValid() {\n-\t\treturn\n-\t}\n-\n-\tswitch src.Kind() {\n-\tcase reflect.Ptr:\n-\t\tif _, ok := src.Interface().(io.Reader); ok {\n-\t\t\tif dst.Kind() == reflect.Ptr && dst.Elem().CanSet() {\n-\t\t\t\tdst.Elem().Set(src)\n-\t\t\t} else if dst.CanSet() {\n-\t\t\t\tdst.Set(src)\n-\t\t\t}\n-\t\t} else {\n-\t\t\te := src.Type().Elem()\n-\t\t\tif dst.CanSet() && !src.IsNil() {\n-\t\t\t\tif _, ok := src.Interface().(*time.Time); !ok {\n-\t\t\t\t\tdst.Set(reflect.New(e))\n-\t\t\t\t} else {\n-\t\t\t\t\ttempValue := reflect.New(e)\n-\t\t\t\t\ttempValue.Elem().Set(src.Elem())\n-\t\t\t\t\t// Sets time.Time's unexported values\n-\t\t\t\t\tdst.Set(tempValue)\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tif src.Elem().IsValid() {\n-\t\t\t\t// Keep the current root state since the depth hasn't changed\n-\t\t\t\trcopy(dst.Elem(), src.Elem(), root)\n-\t\t\t}\n-\t\t}\n-\tcase reflect.Struct:\n-\t\tt := dst.Type()\n-\t\tfor i := 0; i < t.NumField(); i++ {\n-\t\t\tname := t.Field(i).Name\n-\t\t\tsrcVal := src.FieldByName(name)\n-\t\t\tdstVal := dst.FieldByName(name)\n-\t\t\tif srcVal.IsValid() && dstVal.CanSet() {\n-\t\t\t\trcopy(dstVal, srcVal, false)\n-\t\t\t}\n-\t\t}\n-\tcase reflect.Slice:\n-\t\tif src.IsNil() {\n-\t\t\tbreak\n-\t\t}\n-\n-\t\ts := reflect.MakeSlice(src.Type(), src.Len(), src.Cap())\n-\t\tdst.Set(s)\n-\t\tfor i := 0; i < src.Len(); i++ {\n-\t\t\trcopy(dst.Index(i), src.Index(i), false)\n-\t\t}\n-\tcase reflect.Map:\n-\t\tif src.IsNil() {\n-\t\t\tbreak\n-\t\t}\n-\n-\t\ts := reflect.MakeMap(src.Type())\n-\t\tdst.Set(s)\n-\t\tfor _, k := range src.MapKeys() {\n-\t\t\tv := src.MapIndex(k)\n-\t\t\tv2 := reflect.New(v.Type()).Elem()\n-\t\t\trcopy(v2, v, false)\n-\t\t\tdst.SetMapIndex(k, v2)\n-\t\t}\n-\tdefault:\n-\t\t// Assign the value if possible. If its not assignable, the value would\n-\t\t// need to be converted and the impact of that may be unexpected, or is\n-\t\t// not compatible with the dst type.\n-\t\tif src.Type().AssignableTo(dst.Type()) {\n-\t\t\tdst.Set(src)\n-\t\t}\n-\t}\n-}"
    },
    {
      "sha": "142a7a01c527dbba965270d322f156a66155e94c",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/equal.go",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/equal.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/equal.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/equal.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,27 +0,0 @@\n-package awsutil\n-\n-import (\n-\t\"reflect\"\n-)\n-\n-// DeepEqual returns if the two values are deeply equal like reflect.DeepEqual.\n-// In addition to this, this method will also dereference the input values if\n-// possible so the DeepEqual performed will not fail if one parameter is a\n-// pointer and the other is not.\n-//\n-// DeepEqual will not perform indirection of nested values of the input parameters.\n-func DeepEqual(a, b interface{}) bool {\n-\tra := reflect.Indirect(reflect.ValueOf(a))\n-\trb := reflect.Indirect(reflect.ValueOf(b))\n-\n-\tif raValid, rbValid := ra.IsValid(), rb.IsValid(); !raValid && !rbValid {\n-\t\t// If the elements are both nil, and of the same type they are equal\n-\t\t// If they are of different types they are not equal\n-\t\treturn reflect.TypeOf(a) == reflect.TypeOf(b)\n-\t} else if raValid != rbValid {\n-\t\t// Both values must be valid to be equal\n-\t\treturn false\n-\t}\n-\n-\treturn reflect.DeepEqual(ra.Interface(), rb.Interface())\n-}"
    },
    {
      "sha": "a4eb6a7f43aae67f41f051c45c2dd98cb2362191",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/path_value.go",
      "status": "removed",
      "additions": 0,
      "deletions": 221,
      "changes": 221,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/path_value.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/path_value.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/path_value.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,221 +0,0 @@\n-package awsutil\n-\n-import (\n-\t\"reflect\"\n-\t\"regexp\"\n-\t\"strconv\"\n-\t\"strings\"\n-\n-\t\"github.com/jmespath/go-jmespath\"\n-)\n-\n-var indexRe = regexp.MustCompile(`(.+)\\[(-?\\d+)?\\]$`)\n-\n-// rValuesAtPath returns a slice of values found in value v. The values\n-// in v are explored recursively so all nested values are collected.\n-func rValuesAtPath(v interface{}, path string, createPath, caseSensitive, nilTerm bool) []reflect.Value {\n-\tpathparts := strings.Split(path, \"||\")\n-\tif len(pathparts) > 1 {\n-\t\tfor _, pathpart := range pathparts {\n-\t\t\tvals := rValuesAtPath(v, pathpart, createPath, caseSensitive, nilTerm)\n-\t\t\tif len(vals) > 0 {\n-\t\t\t\treturn vals\n-\t\t\t}\n-\t\t}\n-\t\treturn nil\n-\t}\n-\n-\tvalues := []reflect.Value{reflect.Indirect(reflect.ValueOf(v))}\n-\tcomponents := strings.Split(path, \".\")\n-\tfor len(values) > 0 && len(components) > 0 {\n-\t\tvar index *int64\n-\t\tvar indexStar bool\n-\t\tc := strings.TrimSpace(components[0])\n-\t\tif c == \"\" { // no actual component, illegal syntax\n-\t\t\treturn nil\n-\t\t} else if caseSensitive && c != \"*\" && strings.ToLower(c[0:1]) == c[0:1] {\n-\t\t\t// TODO normalize case for user\n-\t\t\treturn nil // don't support unexported fields\n-\t\t}\n-\n-\t\t// parse this component\n-\t\tif m := indexRe.FindStringSubmatch(c); m != nil {\n-\t\t\tc = m[1]\n-\t\t\tif m[2] == \"\" {\n-\t\t\t\tindex = nil\n-\t\t\t\tindexStar = true\n-\t\t\t} else {\n-\t\t\t\ti, _ := strconv.ParseInt(m[2], 10, 32)\n-\t\t\t\tindex = &i\n-\t\t\t\tindexStar = false\n-\t\t\t}\n-\t\t}\n-\n-\t\tnextvals := []reflect.Value{}\n-\t\tfor _, value := range values {\n-\t\t\t// pull component name out of struct member\n-\t\t\tif value.Kind() != reflect.Struct {\n-\t\t\t\tcontinue\n-\t\t\t}\n-\n-\t\t\tif c == \"*\" { // pull all members\n-\t\t\t\tfor i := 0; i < value.NumField(); i++ {\n-\t\t\t\t\tif f := reflect.Indirect(value.Field(i)); f.IsValid() {\n-\t\t\t\t\t\tnextvals = append(nextvals, f)\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t\tcontinue\n-\t\t\t}\n-\n-\t\t\tvalue = value.FieldByNameFunc(func(name string) bool {\n-\t\t\t\tif c == name {\n-\t\t\t\t\treturn true\n-\t\t\t\t} else if !caseSensitive && strings.EqualFold(name, c) {\n-\t\t\t\t\treturn true\n-\t\t\t\t}\n-\t\t\t\treturn false\n-\t\t\t})\n-\n-\t\t\tif nilTerm && value.Kind() == reflect.Ptr && len(components[1:]) == 0 {\n-\t\t\t\tif !value.IsNil() {\n-\t\t\t\t\tvalue.Set(reflect.Zero(value.Type()))\n-\t\t\t\t}\n-\t\t\t\treturn []reflect.Value{value}\n-\t\t\t}\n-\n-\t\t\tif createPath && value.Kind() == reflect.Ptr && value.IsNil() {\n-\t\t\t\t// TODO if the value is the terminus it should not be created\n-\t\t\t\t// if the value to be set to its position is nil.\n-\t\t\t\tvalue.Set(reflect.New(value.Type().Elem()))\n-\t\t\t\tvalue = value.Elem()\n-\t\t\t} else {\n-\t\t\t\tvalue = reflect.Indirect(value)\n-\t\t\t}\n-\n-\t\t\tif value.Kind() == reflect.Slice || value.Kind() == reflect.Map {\n-\t\t\t\tif !createPath && value.IsNil() {\n-\t\t\t\t\tvalue = reflect.ValueOf(nil)\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\tif value.IsValid() {\n-\t\t\t\tnextvals = append(nextvals, value)\n-\t\t\t}\n-\t\t}\n-\t\tvalues = nextvals\n-\n-\t\tif indexStar || index != nil {\n-\t\t\tnextvals = []reflect.Value{}\n-\t\t\tfor _, valItem := range values {\n-\t\t\t\tvalue := reflect.Indirect(valItem)\n-\t\t\t\tif value.Kind() != reflect.Slice {\n-\t\t\t\t\tcontinue\n-\t\t\t\t}\n-\n-\t\t\t\tif indexStar { // grab all indices\n-\t\t\t\t\tfor i := 0; i < value.Len(); i++ {\n-\t\t\t\t\t\tidx := reflect.Indirect(value.Index(i))\n-\t\t\t\t\t\tif idx.IsValid() {\n-\t\t\t\t\t\t\tnextvals = append(nextvals, idx)\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t\tcontinue\n-\t\t\t\t}\n-\n-\t\t\t\t// pull out index\n-\t\t\t\ti := int(*index)\n-\t\t\t\tif i >= value.Len() { // check out of bounds\n-\t\t\t\t\tif createPath {\n-\t\t\t\t\t\t// TODO resize slice\n-\t\t\t\t\t} else {\n-\t\t\t\t\t\tcontinue\n-\t\t\t\t\t}\n-\t\t\t\t} else if i < 0 { // support negative indexing\n-\t\t\t\t\ti = value.Len() + i\n-\t\t\t\t}\n-\t\t\t\tvalue = reflect.Indirect(value.Index(i))\n-\n-\t\t\t\tif value.Kind() == reflect.Slice || value.Kind() == reflect.Map {\n-\t\t\t\t\tif !createPath && value.IsNil() {\n-\t\t\t\t\t\tvalue = reflect.ValueOf(nil)\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\n-\t\t\t\tif value.IsValid() {\n-\t\t\t\t\tnextvals = append(nextvals, value)\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tvalues = nextvals\n-\t\t}\n-\n-\t\tcomponents = components[1:]\n-\t}\n-\treturn values\n-}\n-\n-// ValuesAtPath returns a list of values at the case insensitive lexical\n-// path inside of a structure.\n-func ValuesAtPath(i interface{}, path string) ([]interface{}, error) {\n-\tresult, err := jmespath.Search(path, i)\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\n-\tv := reflect.ValueOf(result)\n-\tif !v.IsValid() || (v.Kind() == reflect.Ptr && v.IsNil()) {\n-\t\treturn nil, nil\n-\t}\n-\tif s, ok := result.([]interface{}); ok {\n-\t\treturn s, err\n-\t}\n-\tif v.Kind() == reflect.Map && v.Len() == 0 {\n-\t\treturn nil, nil\n-\t}\n-\tif v.Kind() == reflect.Slice {\n-\t\tout := make([]interface{}, v.Len())\n-\t\tfor i := 0; i < v.Len(); i++ {\n-\t\t\tout[i] = v.Index(i).Interface()\n-\t\t}\n-\t\treturn out, nil\n-\t}\n-\n-\treturn []interface{}{result}, nil\n-}\n-\n-// SetValueAtPath sets a value at the case insensitive lexical path inside\n-// of a structure.\n-func SetValueAtPath(i interface{}, path string, v interface{}) {\n-\trvals := rValuesAtPath(i, path, true, false, v == nil)\n-\tfor _, rval := range rvals {\n-\t\tif rval.Kind() == reflect.Ptr && rval.IsNil() {\n-\t\t\tcontinue\n-\t\t}\n-\t\tsetValue(rval, v)\n-\t}\n-}\n-\n-func setValue(dstVal reflect.Value, src interface{}) {\n-\tif dstVal.Kind() == reflect.Ptr {\n-\t\tdstVal = reflect.Indirect(dstVal)\n-\t}\n-\tsrcVal := reflect.ValueOf(src)\n-\n-\tif !srcVal.IsValid() { // src is literal nil\n-\t\tif dstVal.CanAddr() {\n-\t\t\t// Convert to pointer so that pointer's value can be nil'ed\n-\t\t\t//                     dstVal = dstVal.Addr()\n-\t\t}\n-\t\tdstVal.Set(reflect.Zero(dstVal.Type()))\n-\n-\t} else if srcVal.Kind() == reflect.Ptr {\n-\t\tif srcVal.IsNil() {\n-\t\t\tsrcVal = reflect.Zero(dstVal.Type())\n-\t\t} else {\n-\t\t\tsrcVal = reflect.ValueOf(src).Elem()\n-\t\t}\n-\t\tdstVal.Set(srcVal)\n-\t} else {\n-\t\tdstVal.Set(srcVal)\n-\t}\n-\n-}"
    },
    {
      "sha": "710eb432f851075b3c42c93368ef8dea2f830621",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/prettify.go",
      "status": "removed",
      "additions": 0,
      "deletions": 113,
      "changes": 113,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/prettify.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/prettify.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/prettify.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,113 +0,0 @@\n-package awsutil\n-\n-import (\n-\t\"bytes\"\n-\t\"fmt\"\n-\t\"io\"\n-\t\"reflect\"\n-\t\"strings\"\n-)\n-\n-// Prettify returns the string representation of a value.\n-func Prettify(i interface{}) string {\n-\tvar buf bytes.Buffer\n-\tprettify(reflect.ValueOf(i), 0, &buf)\n-\treturn buf.String()\n-}\n-\n-// prettify will recursively walk value v to build a textual\n-// representation of the value.\n-func prettify(v reflect.Value, indent int, buf *bytes.Buffer) {\n-\tfor v.Kind() == reflect.Ptr {\n-\t\tv = v.Elem()\n-\t}\n-\n-\tswitch v.Kind() {\n-\tcase reflect.Struct:\n-\t\tstrtype := v.Type().String()\n-\t\tif strtype == \"time.Time\" {\n-\t\t\tfmt.Fprintf(buf, \"%s\", v.Interface())\n-\t\t\tbreak\n-\t\t} else if strings.HasPrefix(strtype, \"io.\") {\n-\t\t\tbuf.WriteString(\"<buffer>\")\n-\t\t\tbreak\n-\t\t}\n-\n-\t\tbuf.WriteString(\"{\\n\")\n-\n-\t\tnames := []string{}\n-\t\tfor i := 0; i < v.Type().NumField(); i++ {\n-\t\t\tname := v.Type().Field(i).Name\n-\t\t\tf := v.Field(i)\n-\t\t\tif name[0:1] == strings.ToLower(name[0:1]) {\n-\t\t\t\tcontinue // ignore unexported fields\n-\t\t\t}\n-\t\t\tif (f.Kind() == reflect.Ptr || f.Kind() == reflect.Slice || f.Kind() == reflect.Map) && f.IsNil() {\n-\t\t\t\tcontinue // ignore unset fields\n-\t\t\t}\n-\t\t\tnames = append(names, name)\n-\t\t}\n-\n-\t\tfor i, n := range names {\n-\t\t\tval := v.FieldByName(n)\n-\t\t\tbuf.WriteString(strings.Repeat(\" \", indent+2))\n-\t\t\tbuf.WriteString(n + \": \")\n-\t\t\tprettify(val, indent+2, buf)\n-\n-\t\t\tif i < len(names)-1 {\n-\t\t\t\tbuf.WriteString(\",\\n\")\n-\t\t\t}\n-\t\t}\n-\n-\t\tbuf.WriteString(\"\\n\" + strings.Repeat(\" \", indent) + \"}\")\n-\tcase reflect.Slice:\n-\t\tstrtype := v.Type().String()\n-\t\tif strtype == \"[]uint8\" {\n-\t\t\tfmt.Fprintf(buf, \"<binary> len %d\", v.Len())\n-\t\t\tbreak\n-\t\t}\n-\n-\t\tnl, id, id2 := \"\", \"\", \"\"\n-\t\tif v.Len() > 3 {\n-\t\t\tnl, id, id2 = \"\\n\", strings.Repeat(\" \", indent), strings.Repeat(\" \", indent+2)\n-\t\t}\n-\t\tbuf.WriteString(\"[\" + nl)\n-\t\tfor i := 0; i < v.Len(); i++ {\n-\t\t\tbuf.WriteString(id2)\n-\t\t\tprettify(v.Index(i), indent+2, buf)\n-\n-\t\t\tif i < v.Len()-1 {\n-\t\t\t\tbuf.WriteString(\",\" + nl)\n-\t\t\t}\n-\t\t}\n-\n-\t\tbuf.WriteString(nl + id + \"]\")\n-\tcase reflect.Map:\n-\t\tbuf.WriteString(\"{\\n\")\n-\n-\t\tfor i, k := range v.MapKeys() {\n-\t\t\tbuf.WriteString(strings.Repeat(\" \", indent+2))\n-\t\t\tbuf.WriteString(k.String() + \": \")\n-\t\t\tprettify(v.MapIndex(k), indent+2, buf)\n-\n-\t\t\tif i < v.Len()-1 {\n-\t\t\t\tbuf.WriteString(\",\\n\")\n-\t\t\t}\n-\t\t}\n-\n-\t\tbuf.WriteString(\"\\n\" + strings.Repeat(\" \", indent) + \"}\")\n-\tdefault:\n-\t\tif !v.IsValid() {\n-\t\t\tfmt.Fprint(buf, \"<invalid value>\")\n-\t\t\treturn\n-\t\t}\n-\t\tformat := \"%v\"\n-\t\tswitch v.Interface().(type) {\n-\t\tcase string:\n-\t\t\tformat = \"%q\"\n-\t\tcase io.ReadSeeker, io.Reader:\n-\t\t\tformat = \"buffer(%p)\"\n-\t\t}\n-\t\tfmt.Fprintf(buf, format, v.Interface())\n-\t}\n-}"
    },
    {
      "sha": "645df2450fc5b1300e9c2dd6e9f436952ddcf26b",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/string_value.go",
      "status": "removed",
      "additions": 0,
      "deletions": 88,
      "changes": 88,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/string_value.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/string_value.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/awsutil/string_value.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,88 +0,0 @@\n-package awsutil\n-\n-import (\n-\t\"bytes\"\n-\t\"fmt\"\n-\t\"reflect\"\n-\t\"strings\"\n-)\n-\n-// StringValue returns the string representation of a value.\n-func StringValue(i interface{}) string {\n-\tvar buf bytes.Buffer\n-\tstringValue(reflect.ValueOf(i), 0, &buf)\n-\treturn buf.String()\n-}\n-\n-func stringValue(v reflect.Value, indent int, buf *bytes.Buffer) {\n-\tfor v.Kind() == reflect.Ptr {\n-\t\tv = v.Elem()\n-\t}\n-\n-\tswitch v.Kind() {\n-\tcase reflect.Struct:\n-\t\tbuf.WriteString(\"{\\n\")\n-\n-\t\tfor i := 0; i < v.Type().NumField(); i++ {\n-\t\t\tft := v.Type().Field(i)\n-\t\t\tfv := v.Field(i)\n-\n-\t\t\tif ft.Name[0:1] == strings.ToLower(ft.Name[0:1]) {\n-\t\t\t\tcontinue // ignore unexported fields\n-\t\t\t}\n-\t\t\tif (fv.Kind() == reflect.Ptr || fv.Kind() == reflect.Slice) && fv.IsNil() {\n-\t\t\t\tcontinue // ignore unset fields\n-\t\t\t}\n-\n-\t\t\tbuf.WriteString(strings.Repeat(\" \", indent+2))\n-\t\t\tbuf.WriteString(ft.Name + \": \")\n-\n-\t\t\tif tag := ft.Tag.Get(\"sensitive\"); tag == \"true\" {\n-\t\t\t\tbuf.WriteString(\"<sensitive>\")\n-\t\t\t} else {\n-\t\t\t\tstringValue(fv, indent+2, buf)\n-\t\t\t}\n-\n-\t\t\tbuf.WriteString(\",\\n\")\n-\t\t}\n-\n-\t\tbuf.WriteString(\"\\n\" + strings.Repeat(\" \", indent) + \"}\")\n-\tcase reflect.Slice:\n-\t\tnl, id, id2 := \"\", \"\", \"\"\n-\t\tif v.Len() > 3 {\n-\t\t\tnl, id, id2 = \"\\n\", strings.Repeat(\" \", indent), strings.Repeat(\" \", indent+2)\n-\t\t}\n-\t\tbuf.WriteString(\"[\" + nl)\n-\t\tfor i := 0; i < v.Len(); i++ {\n-\t\t\tbuf.WriteString(id2)\n-\t\t\tstringValue(v.Index(i), indent+2, buf)\n-\n-\t\t\tif i < v.Len()-1 {\n-\t\t\t\tbuf.WriteString(\",\" + nl)\n-\t\t\t}\n-\t\t}\n-\n-\t\tbuf.WriteString(nl + id + \"]\")\n-\tcase reflect.Map:\n-\t\tbuf.WriteString(\"{\\n\")\n-\n-\t\tfor i, k := range v.MapKeys() {\n-\t\t\tbuf.WriteString(strings.Repeat(\" \", indent+2))\n-\t\t\tbuf.WriteString(k.String() + \": \")\n-\t\t\tstringValue(v.MapIndex(k), indent+2, buf)\n-\n-\t\t\tif i < v.Len()-1 {\n-\t\t\t\tbuf.WriteString(\",\\n\")\n-\t\t\t}\n-\t\t}\n-\n-\t\tbuf.WriteString(\"\\n\" + strings.Repeat(\" \", indent) + \"}\")\n-\tdefault:\n-\t\tformat := \"%v\"\n-\t\tswitch v.Interface().(type) {\n-\t\tcase string:\n-\t\t\tformat = \"%q\"\n-\t\t}\n-\t\tfmt.Fprintf(buf, format, v.Interface())\n-\t}\n-}"
    },
    {
      "sha": "0c48f72e08e441f01532ebc2bdaebe9900ab981d",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/client/metadata/client_info.go",
      "status": "removed",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/client/metadata/client_info.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/client/metadata/client_info.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/client/metadata/client_info.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,14 +0,0 @@\n-package metadata\n-\n-// ClientInfo wraps immutable data from the client.Client structure.\n-type ClientInfo struct {\n-\tServiceName   string\n-\tServiceID     string\n-\tAPIVersion    string\n-\tPartitionID   string\n-\tEndpoint      string\n-\tSigningName   string\n-\tSigningRegion string\n-\tJSONVersion   string\n-\tTargetPrefix  string\n-}"
    },
    {
      "sha": "3b809e8478c183e874b4d4569e007580e17777d8",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/config.go",
      "status": "removed",
      "additions": 0,
      "deletions": 587,
      "changes": 587,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/config.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/config.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/config.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,587 +0,0 @@\n-package aws\n-\n-import (\n-\t\"net/http\"\n-\t\"time\"\n-\n-\t\"github.com/aws/aws-sdk-go/aws/credentials\"\n-\t\"github.com/aws/aws-sdk-go/aws/endpoints\"\n-)\n-\n-// UseServiceDefaultRetries instructs the config to use the service's own\n-// default number of retries. This will be the default action if\n-// Config.MaxRetries is nil also.\n-const UseServiceDefaultRetries = -1\n-\n-// RequestRetryer is an alias for a type that implements the request.Retryer\n-// interface.\n-type RequestRetryer interface{}\n-\n-// A Config provides service configuration for service clients. By default,\n-// all clients will use the defaults.DefaultConfig structure.\n-//\n-//     // Create Session with MaxRetries configuration to be shared by multiple\n-//     // service clients.\n-//     sess := session.Must(session.NewSession(&aws.Config{\n-//         MaxRetries: aws.Int(3),\n-//     }))\n-//\n-//     // Create S3 service client with a specific Region.\n-//     svc := s3.New(sess, &aws.Config{\n-//         Region: aws.String(\"us-west-2\"),\n-//     })\n-type Config struct {\n-\t// Enables verbose error printing of all credential chain errors.\n-\t// Should be used when wanting to see all errors while attempting to\n-\t// retrieve credentials.\n-\tCredentialsChainVerboseErrors *bool\n-\n-\t// The credentials object to use when signing requests. Defaults to a\n-\t// chain of credential providers to search for credentials in environment\n-\t// variables, shared credential file, and EC2 Instance Roles.\n-\tCredentials *credentials.Credentials\n-\n-\t// An optional endpoint URL (hostname only or fully qualified URI)\n-\t// that overrides the default generated endpoint for a client. Set this\n-\t// to `nil` or the value to `\"\"` to use the default generated endpoint.\n-\t//\n-\t// Note: You must still provide a `Region` value when specifying an\n-\t// endpoint for a client.\n-\tEndpoint *string\n-\n-\t// The resolver to use for looking up endpoints for AWS service clients\n-\t// to use based on region.\n-\tEndpointResolver endpoints.Resolver\n-\n-\t// EnforceShouldRetryCheck is used in the AfterRetryHandler to always call\n-\t// ShouldRetry regardless of whether or not if request.Retryable is set.\n-\t// This will utilize ShouldRetry method of custom retryers. If EnforceShouldRetryCheck\n-\t// is not set, then ShouldRetry will only be called if request.Retryable is nil.\n-\t// Proper handling of the request.Retryable field is important when setting this field.\n-\tEnforceShouldRetryCheck *bool\n-\n-\t// The region to send requests to. This parameter is required and must\n-\t// be configured globally or on a per-client basis unless otherwise\n-\t// noted. A full list of regions is found in the \"Regions and Endpoints\"\n-\t// document.\n-\t//\n-\t// See http://docs.aws.amazon.com/general/latest/gr/rande.html for AWS\n-\t// Regions and Endpoints.\n-\tRegion *string\n-\n-\t// Set this to `true` to disable SSL when sending requests. Defaults\n-\t// to `false`.\n-\tDisableSSL *bool\n-\n-\t// The HTTP client to use when sending requests. Defaults to\n-\t// `http.DefaultClient`.\n-\tHTTPClient *http.Client\n-\n-\t// An integer value representing the logging level. The default log level\n-\t// is zero (LogOff), which represents no logging. To enable logging set\n-\t// to a LogLevel Value.\n-\tLogLevel *LogLevelType\n-\n-\t// The logger writer interface to write logging messages to. Defaults to\n-\t// standard out.\n-\tLogger Logger\n-\n-\t// The maximum number of times that a request will be retried for failures.\n-\t// Defaults to -1, which defers the max retry setting to the service\n-\t// specific configuration.\n-\tMaxRetries *int\n-\n-\t// Retryer guides how HTTP requests should be retried in case of\n-\t// recoverable failures.\n-\t//\n-\t// When nil or the value does not implement the request.Retryer interface,\n-\t// the client.DefaultRetryer will be used.\n-\t//\n-\t// When both Retryer and MaxRetries are non-nil, the former is used and\n-\t// the latter ignored.\n-\t//\n-\t// To set the Retryer field in a type-safe manner and with chaining, use\n-\t// the request.WithRetryer helper function:\n-\t//\n-\t//   cfg := request.WithRetryer(aws.NewConfig(), myRetryer)\n-\t//\n-\tRetryer RequestRetryer\n-\n-\t// Disables semantic parameter validation, which validates input for\n-\t// missing required fields and/or other semantic request input errors.\n-\tDisableParamValidation *bool\n-\n-\t// Disables the computation of request and response checksums, e.g.,\n-\t// CRC32 checksums in Amazon DynamoDB.\n-\tDisableComputeChecksums *bool\n-\n-\t// Set this to `true` to force the request to use path-style addressing,\n-\t// i.e., `http://s3.amazonaws.com/BUCKET/KEY`. By default, the S3 client\n-\t// will use virtual hosted bucket addressing when possible\n-\t// (`http://BUCKET.s3.amazonaws.com/KEY`).\n-\t//\n-\t// Note: This configuration option is specific to the Amazon S3 service.\n-\t//\n-\t// See http://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html\n-\t// for Amazon S3: Virtual Hosting of Buckets\n-\tS3ForcePathStyle *bool\n-\n-\t// Set this to `true` to disable the SDK adding the `Expect: 100-Continue`\n-\t// header to PUT requests over 2MB of content. 100-Continue instructs the\n-\t// HTTP client not to send the body until the service responds with a\n-\t// `continue` status. This is useful to prevent sending the request body\n-\t// until after the request is authenticated, and validated.\n-\t//\n-\t// http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html\n-\t//\n-\t// 100-Continue is only enabled for Go 1.6 and above. See `http.Transport`'s\n-\t// `ExpectContinueTimeout` for information on adjusting the continue wait\n-\t// timeout. https://golang.org/pkg/net/http/#Transport\n-\t//\n-\t// You should use this flag to disable 100-Continue if you experience issues\n-\t// with proxies or third party S3 compatible services.\n-\tS3Disable100Continue *bool\n-\n-\t// Set this to `true` to enable S3 Accelerate feature. For all operations\n-\t// compatible with S3 Accelerate will use the accelerate endpoint for\n-\t// requests. Requests not compatible will fall back to normal S3 requests.\n-\t//\n-\t// The bucket must be enable for accelerate to be used with S3 client with\n-\t// accelerate enabled. If the bucket is not enabled for accelerate an error\n-\t// will be returned. The bucket name must be DNS compatible to also work\n-\t// with accelerate.\n-\tS3UseAccelerate *bool\n-\n-\t// S3DisableContentMD5Validation config option is temporarily disabled,\n-\t// For S3 GetObject API calls, #1837.\n-\t//\n-\t// Set this to `true` to disable the S3 service client from automatically\n-\t// adding the ContentMD5 to S3 Object Put and Upload API calls. This option\n-\t// will also disable the SDK from performing object ContentMD5 validation\n-\t// on GetObject API calls.\n-\tS3DisableContentMD5Validation *bool\n-\n-\t// Set this to `true` to have the S3 service client to use the region specified\n-\t// in the ARN, when an ARN is provided as an argument to a bucket parameter.\n-\tS3UseARNRegion *bool\n-\n-\t// Set this to `true` to enable the SDK to unmarshal API response header maps to\n-\t// normalized lower case map keys.\n-\t//\n-\t// For example S3's X-Amz-Meta prefixed header will be unmarshaled to lower case\n-\t// Metadata member's map keys. The value of the header in the map is unaffected.\n-\tLowerCaseHeaderMaps *bool\n-\n-\t// Set this to `true` to disable the EC2Metadata client from overriding the\n-\t// default http.Client's Timeout. This is helpful if you do not want the\n-\t// EC2Metadata client to create a new http.Client. This options is only\n-\t// meaningful if you're not already using a custom HTTP client with the\n-\t// SDK. Enabled by default.\n-\t//\n-\t// Must be set and provided to the session.NewSession() in order to disable\n-\t// the EC2Metadata overriding the timeout for default credentials chain.\n-\t//\n-\t// Example:\n-\t//    sess := session.Must(session.NewSession(aws.NewConfig()\n-\t//       .WithEC2MetadataDisableTimeoutOverride(true)))\n-\t//\n-\t//    svc := s3.New(sess)\n-\t//\n-\tEC2MetadataDisableTimeoutOverride *bool\n-\n-\t// Instructs the endpoint to be generated for a service client to\n-\t// be the dual stack endpoint. The dual stack endpoint will support\n-\t// both IPv4 and IPv6 addressing.\n-\t//\n-\t// Setting this for a service which does not support dual stack will fail\n-\t// to make requests. It is not recommended to set this value on the session\n-\t// as it will apply to all service clients created with the session. Even\n-\t// services which don't support dual stack endpoints.\n-\t//\n-\t// If the Endpoint config value is also provided the UseDualStack flag\n-\t// will be ignored.\n-\t//\n-\t// Only supported with.\n-\t//\n-\t//     sess := session.Must(session.NewSession())\n-\t//\n-\t//     svc := s3.New(sess, &aws.Config{\n-\t//         UseDualStack: aws.Bool(true),\n-\t//     })\n-\tUseDualStack *bool\n-\n-\t// SleepDelay is an override for the func the SDK will call when sleeping\n-\t// during the lifecycle of a request. Specifically this will be used for\n-\t// request delays. This value should only be used for testing. To adjust\n-\t// the delay of a request see the aws/client.DefaultRetryer and\n-\t// aws/request.Retryer.\n-\t//\n-\t// SleepDelay will prevent any Context from being used for canceling retry\n-\t// delay of an API operation. It is recommended to not use SleepDelay at all\n-\t// and specify a Retryer instead.\n-\tSleepDelay func(time.Duration)\n-\n-\t// DisableRestProtocolURICleaning will not clean the URL path when making rest protocol requests.\n-\t// Will default to false. This would only be used for empty directory names in s3 requests.\n-\t//\n-\t// Example:\n-\t//    sess := session.Must(session.NewSession(&aws.Config{\n-\t//         DisableRestProtocolURICleaning: aws.Bool(true),\n-\t//    }))\n-\t//\n-\t//    svc := s3.New(sess)\n-\t//    out, err := svc.GetObject(&s3.GetObjectInput {\n-\t//    \tBucket: aws.String(\"bucketname\"),\n-\t//    \tKey: aws.String(\"//foo//bar//moo\"),\n-\t//    })\n-\tDisableRestProtocolURICleaning *bool\n-\n-\t// EnableEndpointDiscovery will allow for endpoint discovery on operations that\n-\t// have the definition in its model. By default, endpoint discovery is off.\n-\t// To use EndpointDiscovery, Endpoint should be unset or set to an empty string.\n-\t//\n-\t// Example:\n-\t//    sess := session.Must(session.NewSession(&aws.Config{\n-\t//         EnableEndpointDiscovery: aws.Bool(true),\n-\t//    }))\n-\t//\n-\t//    svc := s3.New(sess)\n-\t//    out, err := svc.GetObject(&s3.GetObjectInput {\n-\t//    \tBucket: aws.String(\"bucketname\"),\n-\t//    \tKey: aws.String(\"/foo/bar/moo\"),\n-\t//    })\n-\tEnableEndpointDiscovery *bool\n-\n-\t// DisableEndpointHostPrefix will disable the SDK's behavior of prefixing\n-\t// request endpoint hosts with modeled information.\n-\t//\n-\t// Disabling this feature is useful when you want to use local endpoints\n-\t// for testing that do not support the modeled host prefix pattern.\n-\tDisableEndpointHostPrefix *bool\n-\n-\t// STSRegionalEndpoint will enable regional or legacy endpoint resolving\n-\tSTSRegionalEndpoint endpoints.STSRegionalEndpoint\n-\n-\t// S3UsEast1RegionalEndpoint will enable regional or legacy endpoint resolving\n-\tS3UsEast1RegionalEndpoint endpoints.S3UsEast1RegionalEndpoint\n-}\n-\n-// NewConfig returns a new Config pointer that can be chained with builder\n-// methods to set multiple configuration values inline without using pointers.\n-//\n-//     // Create Session with MaxRetries configuration to be shared by multiple\n-//     // service clients.\n-//     sess := session.Must(session.NewSession(aws.NewConfig().\n-//         WithMaxRetries(3),\n-//     ))\n-//\n-//     // Create S3 service client with a specific Region.\n-//     svc := s3.New(sess, aws.NewConfig().\n-//         WithRegion(\"us-west-2\"),\n-//     )\n-func NewConfig() *Config {\n-\treturn &Config{}\n-}\n-\n-// WithCredentialsChainVerboseErrors sets a config verbose errors boolean and returning\n-// a Config pointer.\n-func (c *Config) WithCredentialsChainVerboseErrors(verboseErrs bool) *Config {\n-\tc.CredentialsChainVerboseErrors = &verboseErrs\n-\treturn c\n-}\n-\n-// WithCredentials sets a config Credentials value returning a Config pointer\n-// for chaining.\n-func (c *Config) WithCredentials(creds *credentials.Credentials) *Config {\n-\tc.Credentials = creds\n-\treturn c\n-}\n-\n-// WithEndpoint sets a config Endpoint value returning a Config pointer for\n-// chaining.\n-func (c *Config) WithEndpoint(endpoint string) *Config {\n-\tc.Endpoint = &endpoint\n-\treturn c\n-}\n-\n-// WithEndpointResolver sets a config EndpointResolver value returning a\n-// Config pointer for chaining.\n-func (c *Config) WithEndpointResolver(resolver endpoints.Resolver) *Config {\n-\tc.EndpointResolver = resolver\n-\treturn c\n-}\n-\n-// WithRegion sets a config Region value returning a Config pointer for\n-// chaining.\n-func (c *Config) WithRegion(region string) *Config {\n-\tc.Region = &region\n-\treturn c\n-}\n-\n-// WithDisableSSL sets a config DisableSSL value returning a Config pointer\n-// for chaining.\n-func (c *Config) WithDisableSSL(disable bool) *Config {\n-\tc.DisableSSL = &disable\n-\treturn c\n-}\n-\n-// WithHTTPClient sets a config HTTPClient value returning a Config pointer\n-// for chaining.\n-func (c *Config) WithHTTPClient(client *http.Client) *Config {\n-\tc.HTTPClient = client\n-\treturn c\n-}\n-\n-// WithMaxRetries sets a config MaxRetries value returning a Config pointer\n-// for chaining.\n-func (c *Config) WithMaxRetries(max int) *Config {\n-\tc.MaxRetries = &max\n-\treturn c\n-}\n-\n-// WithDisableParamValidation sets a config DisableParamValidation value\n-// returning a Config pointer for chaining.\n-func (c *Config) WithDisableParamValidation(disable bool) *Config {\n-\tc.DisableParamValidation = &disable\n-\treturn c\n-}\n-\n-// WithDisableComputeChecksums sets a config DisableComputeChecksums value\n-// returning a Config pointer for chaining.\n-func (c *Config) WithDisableComputeChecksums(disable bool) *Config {\n-\tc.DisableComputeChecksums = &disable\n-\treturn c\n-}\n-\n-// WithLogLevel sets a config LogLevel value returning a Config pointer for\n-// chaining.\n-func (c *Config) WithLogLevel(level LogLevelType) *Config {\n-\tc.LogLevel = &level\n-\treturn c\n-}\n-\n-// WithLogger sets a config Logger value returning a Config pointer for\n-// chaining.\n-func (c *Config) WithLogger(logger Logger) *Config {\n-\tc.Logger = logger\n-\treturn c\n-}\n-\n-// WithS3ForcePathStyle sets a config S3ForcePathStyle value returning a Config\n-// pointer for chaining.\n-func (c *Config) WithS3ForcePathStyle(force bool) *Config {\n-\tc.S3ForcePathStyle = &force\n-\treturn c\n-}\n-\n-// WithS3Disable100Continue sets a config S3Disable100Continue value returning\n-// a Config pointer for chaining.\n-func (c *Config) WithS3Disable100Continue(disable bool) *Config {\n-\tc.S3Disable100Continue = &disable\n-\treturn c\n-}\n-\n-// WithS3UseAccelerate sets a config S3UseAccelerate value returning a Config\n-// pointer for chaining.\n-func (c *Config) WithS3UseAccelerate(enable bool) *Config {\n-\tc.S3UseAccelerate = &enable\n-\treturn c\n-\n-}\n-\n-// WithS3DisableContentMD5Validation sets a config\n-// S3DisableContentMD5Validation value returning a Config pointer for chaining.\n-func (c *Config) WithS3DisableContentMD5Validation(enable bool) *Config {\n-\tc.S3DisableContentMD5Validation = &enable\n-\treturn c\n-\n-}\n-\n-// WithS3UseARNRegion sets a config S3UseARNRegion value and\n-// returning a Config pointer for chaining\n-func (c *Config) WithS3UseARNRegion(enable bool) *Config {\n-\tc.S3UseARNRegion = &enable\n-\treturn c\n-}\n-\n-// WithUseDualStack sets a config UseDualStack value returning a Config\n-// pointer for chaining.\n-func (c *Config) WithUseDualStack(enable bool) *Config {\n-\tc.UseDualStack = &enable\n-\treturn c\n-}\n-\n-// WithEC2MetadataDisableTimeoutOverride sets a config EC2MetadataDisableTimeoutOverride value\n-// returning a Config pointer for chaining.\n-func (c *Config) WithEC2MetadataDisableTimeoutOverride(enable bool) *Config {\n-\tc.EC2MetadataDisableTimeoutOverride = &enable\n-\treturn c\n-}\n-\n-// WithSleepDelay overrides the function used to sleep while waiting for the\n-// next retry. Defaults to time.Sleep.\n-func (c *Config) WithSleepDelay(fn func(time.Duration)) *Config {\n-\tc.SleepDelay = fn\n-\treturn c\n-}\n-\n-// WithEndpointDiscovery will set whether or not to use endpoint discovery.\n-func (c *Config) WithEndpointDiscovery(t bool) *Config {\n-\tc.EnableEndpointDiscovery = &t\n-\treturn c\n-}\n-\n-// WithDisableEndpointHostPrefix will set whether or not to use modeled host prefix\n-// when making requests.\n-func (c *Config) WithDisableEndpointHostPrefix(t bool) *Config {\n-\tc.DisableEndpointHostPrefix = &t\n-\treturn c\n-}\n-\n-// MergeIn merges the passed in configs into the existing config object.\n-func (c *Config) MergeIn(cfgs ...*Config) {\n-\tfor _, other := range cfgs {\n-\t\tmergeInConfig(c, other)\n-\t}\n-}\n-\n-// WithSTSRegionalEndpoint will set whether or not to use regional endpoint flag\n-// when resolving the endpoint for a service\n-func (c *Config) WithSTSRegionalEndpoint(sre endpoints.STSRegionalEndpoint) *Config {\n-\tc.STSRegionalEndpoint = sre\n-\treturn c\n-}\n-\n-// WithS3UsEast1RegionalEndpoint will set whether or not to use regional endpoint flag\n-// when resolving the endpoint for a service\n-func (c *Config) WithS3UsEast1RegionalEndpoint(sre endpoints.S3UsEast1RegionalEndpoint) *Config {\n-\tc.S3UsEast1RegionalEndpoint = sre\n-\treturn c\n-}\n-\n-func mergeInConfig(dst *Config, other *Config) {\n-\tif other == nil {\n-\t\treturn\n-\t}\n-\n-\tif other.CredentialsChainVerboseErrors != nil {\n-\t\tdst.CredentialsChainVerboseErrors = other.CredentialsChainVerboseErrors\n-\t}\n-\n-\tif other.Credentials != nil {\n-\t\tdst.Credentials = other.Credentials\n-\t}\n-\n-\tif other.Endpoint != nil {\n-\t\tdst.Endpoint = other.Endpoint\n-\t}\n-\n-\tif other.EndpointResolver != nil {\n-\t\tdst.EndpointResolver = other.EndpointResolver\n-\t}\n-\n-\tif other.Region != nil {\n-\t\tdst.Region = other.Region\n-\t}\n-\n-\tif other.DisableSSL != nil {\n-\t\tdst.DisableSSL = other.DisableSSL\n-\t}\n-\n-\tif other.HTTPClient != nil {\n-\t\tdst.HTTPClient = other.HTTPClient\n-\t}\n-\n-\tif other.LogLevel != nil {\n-\t\tdst.LogLevel = other.LogLevel\n-\t}\n-\n-\tif other.Logger != nil {\n-\t\tdst.Logger = other.Logger\n-\t}\n-\n-\tif other.MaxRetries != nil {\n-\t\tdst.MaxRetries = other.MaxRetries\n-\t}\n-\n-\tif other.Retryer != nil {\n-\t\tdst.Retryer = other.Retryer\n-\t}\n-\n-\tif other.DisableParamValidation != nil {\n-\t\tdst.DisableParamValidation = other.DisableParamValidation\n-\t}\n-\n-\tif other.DisableComputeChecksums != nil {\n-\t\tdst.DisableComputeChecksums = other.DisableComputeChecksums\n-\t}\n-\n-\tif other.S3ForcePathStyle != nil {\n-\t\tdst.S3ForcePathStyle = other.S3ForcePathStyle\n-\t}\n-\n-\tif other.S3Disable100Continue != nil {\n-\t\tdst.S3Disable100Continue = other.S3Disable100Continue\n-\t}\n-\n-\tif other.S3UseAccelerate != nil {\n-\t\tdst.S3UseAccelerate = other.S3UseAccelerate\n-\t}\n-\n-\tif other.S3DisableContentMD5Validation != nil {\n-\t\tdst.S3DisableContentMD5Validation = other.S3DisableContentMD5Validation\n-\t}\n-\n-\tif other.S3UseARNRegion != nil {\n-\t\tdst.S3UseARNRegion = other.S3UseARNRegion\n-\t}\n-\n-\tif other.UseDualStack != nil {\n-\t\tdst.UseDualStack = other.UseDualStack\n-\t}\n-\n-\tif other.EC2MetadataDisableTimeoutOverride != nil {\n-\t\tdst.EC2MetadataDisableTimeoutOverride = other.EC2MetadataDisableTimeoutOverride\n-\t}\n-\n-\tif other.SleepDelay != nil {\n-\t\tdst.SleepDelay = other.SleepDelay\n-\t}\n-\n-\tif other.DisableRestProtocolURICleaning != nil {\n-\t\tdst.DisableRestProtocolURICleaning = other.DisableRestProtocolURICleaning\n-\t}\n-\n-\tif other.EnforceShouldRetryCheck != nil {\n-\t\tdst.EnforceShouldRetryCheck = other.EnforceShouldRetryCheck\n-\t}\n-\n-\tif other.EnableEndpointDiscovery != nil {\n-\t\tdst.EnableEndpointDiscovery = other.EnableEndpointDiscovery\n-\t}\n-\n-\tif other.DisableEndpointHostPrefix != nil {\n-\t\tdst.DisableEndpointHostPrefix = other.DisableEndpointHostPrefix\n-\t}\n-\n-\tif other.STSRegionalEndpoint != endpoints.UnsetSTSEndpoint {\n-\t\tdst.STSRegionalEndpoint = other.STSRegionalEndpoint\n-\t}\n-\n-\tif other.S3UsEast1RegionalEndpoint != endpoints.UnsetS3UsEast1Endpoint {\n-\t\tdst.S3UsEast1RegionalEndpoint = other.S3UsEast1RegionalEndpoint\n-\t}\n-}\n-\n-// Copy will return a shallow copy of the Config object. If any additional\n-// configurations are provided they will be merged into the new config returned.\n-func (c *Config) Copy(cfgs ...*Config) *Config {\n-\tdst := &Config{}\n-\tdst.MergeIn(c)\n-\n-\tfor _, cfg := range cfgs {\n-\t\tdst.MergeIn(cfg)\n-\t}\n-\n-\treturn dst\n-}"
    },
    {
      "sha": "2866f9a7fb9d7c4beee9077db27484500b04b580",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/context_1_5.go",
      "status": "removed",
      "additions": 0,
      "deletions": 37,
      "changes": 37,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/context_1_5.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/context_1_5.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/context_1_5.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,37 +0,0 @@\n-// +build !go1.9\n-\n-package aws\n-\n-import \"time\"\n-\n-// Context is an copy of the Go v1.7 stdlib's context.Context interface.\n-// It is represented as a SDK interface to enable you to use the \"WithContext\"\n-// API methods with Go v1.6 and a Context type such as golang.org/x/net/context.\n-//\n-// See https://golang.org/pkg/context on how to use contexts.\n-type Context interface {\n-\t// Deadline returns the time when work done on behalf of this context\n-\t// should be canceled. Deadline returns ok==false when no deadline is\n-\t// set. Successive calls to Deadline return the same results.\n-\tDeadline() (deadline time.Time, ok bool)\n-\n-\t// Done returns a channel that's closed when work done on behalf of this\n-\t// context should be canceled. Done may return nil if this context can\n-\t// never be canceled. Successive calls to Done return the same value.\n-\tDone() <-chan struct{}\n-\n-\t// Err returns a non-nil error value after Done is closed. Err returns\n-\t// Canceled if the context was canceled or DeadlineExceeded if the\n-\t// context's deadline passed. No other values for Err are defined.\n-\t// After Done is closed, successive calls to Err return the same value.\n-\tErr() error\n-\n-\t// Value returns the value associated with this context for key, or nil\n-\t// if no value is associated with key. Successive calls to Value with\n-\t// the same key returns the same result.\n-\t//\n-\t// Use context values only for request-scoped data that transits\n-\t// processes and API boundaries, not for passing optional parameters to\n-\t// functions.\n-\tValue(key interface{}) interface{}\n-}"
    },
    {
      "sha": "3718b26e1019b3e4840b451b17be1280baf59a33",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/context_1_9.go",
      "status": "removed",
      "additions": 0,
      "deletions": 11,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/context_1_9.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/context_1_9.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/context_1_9.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,11 +0,0 @@\n-// +build go1.9\n-\n-package aws\n-\n-import \"context\"\n-\n-// Context is an alias of the Go stdlib's context.Context interface.\n-// It can be used within the SDK's API operation \"WithContext\" methods.\n-//\n-// See https://golang.org/pkg/context on how to use contexts.\n-type Context = context.Context"
    },
    {
      "sha": "2f9446333a65a9c88d6e6f81b7cef83190da7ac8",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/context_background_1_5.go",
      "status": "removed",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/context_background_1_5.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/context_background_1_5.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/context_background_1_5.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,22 +0,0 @@\n-// +build !go1.7\n-\n-package aws\n-\n-import (\n-\t\"github.com/aws/aws-sdk-go/internal/context\"\n-)\n-\n-// BackgroundContext returns a context that will never be canceled, has no\n-// values, and no deadline. This context is used by the SDK to provide\n-// backwards compatibility with non-context API operations and functionality.\n-//\n-// Go 1.6 and before:\n-// This context function is equivalent to context.Background in the Go stdlib.\n-//\n-// Go 1.7 and later:\n-// The context returned will be the value returned by context.Background()\n-//\n-// See https://golang.org/pkg/context for more information on Contexts.\n-func BackgroundContext() Context {\n-\treturn context.BackgroundCtx\n-}"
    },
    {
      "sha": "9c29f29af17a072346b1022f0540ccd2fd2ac350",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/context_background_1_7.go",
      "status": "removed",
      "additions": 0,
      "deletions": 20,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/context_background_1_7.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/context_background_1_7.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/context_background_1_7.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,20 +0,0 @@\n-// +build go1.7\n-\n-package aws\n-\n-import \"context\"\n-\n-// BackgroundContext returns a context that will never be canceled, has no\n-// values, and no deadline. This context is used by the SDK to provide\n-// backwards compatibility with non-context API operations and functionality.\n-//\n-// Go 1.6 and before:\n-// This context function is equivalent to context.Background in the Go stdlib.\n-//\n-// Go 1.7 and later:\n-// The context returned will be the value returned by context.Background()\n-//\n-// See https://golang.org/pkg/context for more information on Contexts.\n-func BackgroundContext() Context {\n-\treturn context.Background()\n-}"
    },
    {
      "sha": "304fd156120c1e6a95680176c86a2b3416dc83be",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/context_sleep.go",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/context_sleep.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/context_sleep.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/context_sleep.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,24 +0,0 @@\n-package aws\n-\n-import (\n-\t\"time\"\n-)\n-\n-// SleepWithContext will wait for the timer duration to expire, or the context\n-// is canceled. Which ever happens first. If the context is canceled the Context's\n-// error will be returned.\n-//\n-// Expects Context to always return a non-nil error if the Done channel is closed.\n-func SleepWithContext(ctx Context, dur time.Duration) error {\n-\tt := time.NewTimer(dur)\n-\tdefer t.Stop()\n-\n-\tselect {\n-\tcase <-t.C:\n-\t\tbreak\n-\tcase <-ctx.Done():\n-\t\treturn ctx.Err()\n-\t}\n-\n-\treturn nil\n-}"
    },
    {
      "sha": "4e076c1837a7422cc9072422d679e84efa51710d",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/convert_types.go",
      "status": "removed",
      "additions": 0,
      "deletions": 918,
      "changes": 918,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/convert_types.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/convert_types.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/convert_types.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,918 +0,0 @@\n-package aws\n-\n-import \"time\"\n-\n-// String returns a pointer to the string value passed in.\n-func String(v string) *string {\n-\treturn &v\n-}\n-\n-// StringValue returns the value of the string pointer passed in or\n-// \"\" if the pointer is nil.\n-func StringValue(v *string) string {\n-\tif v != nil {\n-\t\treturn *v\n-\t}\n-\treturn \"\"\n-}\n-\n-// StringSlice converts a slice of string values into a slice of\n-// string pointers\n-func StringSlice(src []string) []*string {\n-\tdst := make([]*string, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tdst[i] = &(src[i])\n-\t}\n-\treturn dst\n-}\n-\n-// StringValueSlice converts a slice of string pointers into a slice of\n-// string values\n-func StringValueSlice(src []*string) []string {\n-\tdst := make([]string, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tif src[i] != nil {\n-\t\t\tdst[i] = *(src[i])\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// StringMap converts a string map of string values into a string\n-// map of string pointers\n-func StringMap(src map[string]string) map[string]*string {\n-\tdst := make(map[string]*string)\n-\tfor k, val := range src {\n-\t\tv := val\n-\t\tdst[k] = &v\n-\t}\n-\treturn dst\n-}\n-\n-// StringValueMap converts a string map of string pointers into a string\n-// map of string values\n-func StringValueMap(src map[string]*string) map[string]string {\n-\tdst := make(map[string]string)\n-\tfor k, val := range src {\n-\t\tif val != nil {\n-\t\t\tdst[k] = *val\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Bool returns a pointer to the bool value passed in.\n-func Bool(v bool) *bool {\n-\treturn &v\n-}\n-\n-// BoolValue returns the value of the bool pointer passed in or\n-// false if the pointer is nil.\n-func BoolValue(v *bool) bool {\n-\tif v != nil {\n-\t\treturn *v\n-\t}\n-\treturn false\n-}\n-\n-// BoolSlice converts a slice of bool values into a slice of\n-// bool pointers\n-func BoolSlice(src []bool) []*bool {\n-\tdst := make([]*bool, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tdst[i] = &(src[i])\n-\t}\n-\treturn dst\n-}\n-\n-// BoolValueSlice converts a slice of bool pointers into a slice of\n-// bool values\n-func BoolValueSlice(src []*bool) []bool {\n-\tdst := make([]bool, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tif src[i] != nil {\n-\t\t\tdst[i] = *(src[i])\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// BoolMap converts a string map of bool values into a string\n-// map of bool pointers\n-func BoolMap(src map[string]bool) map[string]*bool {\n-\tdst := make(map[string]*bool)\n-\tfor k, val := range src {\n-\t\tv := val\n-\t\tdst[k] = &v\n-\t}\n-\treturn dst\n-}\n-\n-// BoolValueMap converts a string map of bool pointers into a string\n-// map of bool values\n-func BoolValueMap(src map[string]*bool) map[string]bool {\n-\tdst := make(map[string]bool)\n-\tfor k, val := range src {\n-\t\tif val != nil {\n-\t\t\tdst[k] = *val\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Int returns a pointer to the int value passed in.\n-func Int(v int) *int {\n-\treturn &v\n-}\n-\n-// IntValue returns the value of the int pointer passed in or\n-// 0 if the pointer is nil.\n-func IntValue(v *int) int {\n-\tif v != nil {\n-\t\treturn *v\n-\t}\n-\treturn 0\n-}\n-\n-// IntSlice converts a slice of int values into a slice of\n-// int pointers\n-func IntSlice(src []int) []*int {\n-\tdst := make([]*int, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tdst[i] = &(src[i])\n-\t}\n-\treturn dst\n-}\n-\n-// IntValueSlice converts a slice of int pointers into a slice of\n-// int values\n-func IntValueSlice(src []*int) []int {\n-\tdst := make([]int, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tif src[i] != nil {\n-\t\t\tdst[i] = *(src[i])\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// IntMap converts a string map of int values into a string\n-// map of int pointers\n-func IntMap(src map[string]int) map[string]*int {\n-\tdst := make(map[string]*int)\n-\tfor k, val := range src {\n-\t\tv := val\n-\t\tdst[k] = &v\n-\t}\n-\treturn dst\n-}\n-\n-// IntValueMap converts a string map of int pointers into a string\n-// map of int values\n-func IntValueMap(src map[string]*int) map[string]int {\n-\tdst := make(map[string]int)\n-\tfor k, val := range src {\n-\t\tif val != nil {\n-\t\t\tdst[k] = *val\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Uint returns a pointer to the uint value passed in.\n-func Uint(v uint) *uint {\n-\treturn &v\n-}\n-\n-// UintValue returns the value of the uint pointer passed in or\n-// 0 if the pointer is nil.\n-func UintValue(v *uint) uint {\n-\tif v != nil {\n-\t\treturn *v\n-\t}\n-\treturn 0\n-}\n-\n-// UintSlice converts a slice of uint values uinto a slice of\n-// uint pointers\n-func UintSlice(src []uint) []*uint {\n-\tdst := make([]*uint, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tdst[i] = &(src[i])\n-\t}\n-\treturn dst\n-}\n-\n-// UintValueSlice converts a slice of uint pointers uinto a slice of\n-// uint values\n-func UintValueSlice(src []*uint) []uint {\n-\tdst := make([]uint, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tif src[i] != nil {\n-\t\t\tdst[i] = *(src[i])\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// UintMap converts a string map of uint values uinto a string\n-// map of uint pointers\n-func UintMap(src map[string]uint) map[string]*uint {\n-\tdst := make(map[string]*uint)\n-\tfor k, val := range src {\n-\t\tv := val\n-\t\tdst[k] = &v\n-\t}\n-\treturn dst\n-}\n-\n-// UintValueMap converts a string map of uint pointers uinto a string\n-// map of uint values\n-func UintValueMap(src map[string]*uint) map[string]uint {\n-\tdst := make(map[string]uint)\n-\tfor k, val := range src {\n-\t\tif val != nil {\n-\t\t\tdst[k] = *val\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Int8 returns a pointer to the int8 value passed in.\n-func Int8(v int8) *int8 {\n-\treturn &v\n-}\n-\n-// Int8Value returns the value of the int8 pointer passed in or\n-// 0 if the pointer is nil.\n-func Int8Value(v *int8) int8 {\n-\tif v != nil {\n-\t\treturn *v\n-\t}\n-\treturn 0\n-}\n-\n-// Int8Slice converts a slice of int8 values into a slice of\n-// int8 pointers\n-func Int8Slice(src []int8) []*int8 {\n-\tdst := make([]*int8, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tdst[i] = &(src[i])\n-\t}\n-\treturn dst\n-}\n-\n-// Int8ValueSlice converts a slice of int8 pointers into a slice of\n-// int8 values\n-func Int8ValueSlice(src []*int8) []int8 {\n-\tdst := make([]int8, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tif src[i] != nil {\n-\t\t\tdst[i] = *(src[i])\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Int8Map converts a string map of int8 values into a string\n-// map of int8 pointers\n-func Int8Map(src map[string]int8) map[string]*int8 {\n-\tdst := make(map[string]*int8)\n-\tfor k, val := range src {\n-\t\tv := val\n-\t\tdst[k] = &v\n-\t}\n-\treturn dst\n-}\n-\n-// Int8ValueMap converts a string map of int8 pointers into a string\n-// map of int8 values\n-func Int8ValueMap(src map[string]*int8) map[string]int8 {\n-\tdst := make(map[string]int8)\n-\tfor k, val := range src {\n-\t\tif val != nil {\n-\t\t\tdst[k] = *val\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Int16 returns a pointer to the int16 value passed in.\n-func Int16(v int16) *int16 {\n-\treturn &v\n-}\n-\n-// Int16Value returns the value of the int16 pointer passed in or\n-// 0 if the pointer is nil.\n-func Int16Value(v *int16) int16 {\n-\tif v != nil {\n-\t\treturn *v\n-\t}\n-\treturn 0\n-}\n-\n-// Int16Slice converts a slice of int16 values into a slice of\n-// int16 pointers\n-func Int16Slice(src []int16) []*int16 {\n-\tdst := make([]*int16, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tdst[i] = &(src[i])\n-\t}\n-\treturn dst\n-}\n-\n-// Int16ValueSlice converts a slice of int16 pointers into a slice of\n-// int16 values\n-func Int16ValueSlice(src []*int16) []int16 {\n-\tdst := make([]int16, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tif src[i] != nil {\n-\t\t\tdst[i] = *(src[i])\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Int16Map converts a string map of int16 values into a string\n-// map of int16 pointers\n-func Int16Map(src map[string]int16) map[string]*int16 {\n-\tdst := make(map[string]*int16)\n-\tfor k, val := range src {\n-\t\tv := val\n-\t\tdst[k] = &v\n-\t}\n-\treturn dst\n-}\n-\n-// Int16ValueMap converts a string map of int16 pointers into a string\n-// map of int16 values\n-func Int16ValueMap(src map[string]*int16) map[string]int16 {\n-\tdst := make(map[string]int16)\n-\tfor k, val := range src {\n-\t\tif val != nil {\n-\t\t\tdst[k] = *val\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Int32 returns a pointer to the int32 value passed in.\n-func Int32(v int32) *int32 {\n-\treturn &v\n-}\n-\n-// Int32Value returns the value of the int32 pointer passed in or\n-// 0 if the pointer is nil.\n-func Int32Value(v *int32) int32 {\n-\tif v != nil {\n-\t\treturn *v\n-\t}\n-\treturn 0\n-}\n-\n-// Int32Slice converts a slice of int32 values into a slice of\n-// int32 pointers\n-func Int32Slice(src []int32) []*int32 {\n-\tdst := make([]*int32, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tdst[i] = &(src[i])\n-\t}\n-\treturn dst\n-}\n-\n-// Int32ValueSlice converts a slice of int32 pointers into a slice of\n-// int32 values\n-func Int32ValueSlice(src []*int32) []int32 {\n-\tdst := make([]int32, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tif src[i] != nil {\n-\t\t\tdst[i] = *(src[i])\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Int32Map converts a string map of int32 values into a string\n-// map of int32 pointers\n-func Int32Map(src map[string]int32) map[string]*int32 {\n-\tdst := make(map[string]*int32)\n-\tfor k, val := range src {\n-\t\tv := val\n-\t\tdst[k] = &v\n-\t}\n-\treturn dst\n-}\n-\n-// Int32ValueMap converts a string map of int32 pointers into a string\n-// map of int32 values\n-func Int32ValueMap(src map[string]*int32) map[string]int32 {\n-\tdst := make(map[string]int32)\n-\tfor k, val := range src {\n-\t\tif val != nil {\n-\t\t\tdst[k] = *val\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Int64 returns a pointer to the int64 value passed in.\n-func Int64(v int64) *int64 {\n-\treturn &v\n-}\n-\n-// Int64Value returns the value of the int64 pointer passed in or\n-// 0 if the pointer is nil.\n-func Int64Value(v *int64) int64 {\n-\tif v != nil {\n-\t\treturn *v\n-\t}\n-\treturn 0\n-}\n-\n-// Int64Slice converts a slice of int64 values into a slice of\n-// int64 pointers\n-func Int64Slice(src []int64) []*int64 {\n-\tdst := make([]*int64, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tdst[i] = &(src[i])\n-\t}\n-\treturn dst\n-}\n-\n-// Int64ValueSlice converts a slice of int64 pointers into a slice of\n-// int64 values\n-func Int64ValueSlice(src []*int64) []int64 {\n-\tdst := make([]int64, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tif src[i] != nil {\n-\t\t\tdst[i] = *(src[i])\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Int64Map converts a string map of int64 values into a string\n-// map of int64 pointers\n-func Int64Map(src map[string]int64) map[string]*int64 {\n-\tdst := make(map[string]*int64)\n-\tfor k, val := range src {\n-\t\tv := val\n-\t\tdst[k] = &v\n-\t}\n-\treturn dst\n-}\n-\n-// Int64ValueMap converts a string map of int64 pointers into a string\n-// map of int64 values\n-func Int64ValueMap(src map[string]*int64) map[string]int64 {\n-\tdst := make(map[string]int64)\n-\tfor k, val := range src {\n-\t\tif val != nil {\n-\t\t\tdst[k] = *val\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Uint8 returns a pointer to the uint8 value passed in.\n-func Uint8(v uint8) *uint8 {\n-\treturn &v\n-}\n-\n-// Uint8Value returns the value of the uint8 pointer passed in or\n-// 0 if the pointer is nil.\n-func Uint8Value(v *uint8) uint8 {\n-\tif v != nil {\n-\t\treturn *v\n-\t}\n-\treturn 0\n-}\n-\n-// Uint8Slice converts a slice of uint8 values into a slice of\n-// uint8 pointers\n-func Uint8Slice(src []uint8) []*uint8 {\n-\tdst := make([]*uint8, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tdst[i] = &(src[i])\n-\t}\n-\treturn dst\n-}\n-\n-// Uint8ValueSlice converts a slice of uint8 pointers into a slice of\n-// uint8 values\n-func Uint8ValueSlice(src []*uint8) []uint8 {\n-\tdst := make([]uint8, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tif src[i] != nil {\n-\t\t\tdst[i] = *(src[i])\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Uint8Map converts a string map of uint8 values into a string\n-// map of uint8 pointers\n-func Uint8Map(src map[string]uint8) map[string]*uint8 {\n-\tdst := make(map[string]*uint8)\n-\tfor k, val := range src {\n-\t\tv := val\n-\t\tdst[k] = &v\n-\t}\n-\treturn dst\n-}\n-\n-// Uint8ValueMap converts a string map of uint8 pointers into a string\n-// map of uint8 values\n-func Uint8ValueMap(src map[string]*uint8) map[string]uint8 {\n-\tdst := make(map[string]uint8)\n-\tfor k, val := range src {\n-\t\tif val != nil {\n-\t\t\tdst[k] = *val\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Uint16 returns a pointer to the uint16 value passed in.\n-func Uint16(v uint16) *uint16 {\n-\treturn &v\n-}\n-\n-// Uint16Value returns the value of the uint16 pointer passed in or\n-// 0 if the pointer is nil.\n-func Uint16Value(v *uint16) uint16 {\n-\tif v != nil {\n-\t\treturn *v\n-\t}\n-\treturn 0\n-}\n-\n-// Uint16Slice converts a slice of uint16 values into a slice of\n-// uint16 pointers\n-func Uint16Slice(src []uint16) []*uint16 {\n-\tdst := make([]*uint16, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tdst[i] = &(src[i])\n-\t}\n-\treturn dst\n-}\n-\n-// Uint16ValueSlice converts a slice of uint16 pointers into a slice of\n-// uint16 values\n-func Uint16ValueSlice(src []*uint16) []uint16 {\n-\tdst := make([]uint16, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tif src[i] != nil {\n-\t\t\tdst[i] = *(src[i])\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Uint16Map converts a string map of uint16 values into a string\n-// map of uint16 pointers\n-func Uint16Map(src map[string]uint16) map[string]*uint16 {\n-\tdst := make(map[string]*uint16)\n-\tfor k, val := range src {\n-\t\tv := val\n-\t\tdst[k] = &v\n-\t}\n-\treturn dst\n-}\n-\n-// Uint16ValueMap converts a string map of uint16 pointers into a string\n-// map of uint16 values\n-func Uint16ValueMap(src map[string]*uint16) map[string]uint16 {\n-\tdst := make(map[string]uint16)\n-\tfor k, val := range src {\n-\t\tif val != nil {\n-\t\t\tdst[k] = *val\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Uint32 returns a pointer to the uint32 value passed in.\n-func Uint32(v uint32) *uint32 {\n-\treturn &v\n-}\n-\n-// Uint32Value returns the value of the uint32 pointer passed in or\n-// 0 if the pointer is nil.\n-func Uint32Value(v *uint32) uint32 {\n-\tif v != nil {\n-\t\treturn *v\n-\t}\n-\treturn 0\n-}\n-\n-// Uint32Slice converts a slice of uint32 values into a slice of\n-// uint32 pointers\n-func Uint32Slice(src []uint32) []*uint32 {\n-\tdst := make([]*uint32, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tdst[i] = &(src[i])\n-\t}\n-\treturn dst\n-}\n-\n-// Uint32ValueSlice converts a slice of uint32 pointers into a slice of\n-// uint32 values\n-func Uint32ValueSlice(src []*uint32) []uint32 {\n-\tdst := make([]uint32, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tif src[i] != nil {\n-\t\t\tdst[i] = *(src[i])\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Uint32Map converts a string map of uint32 values into a string\n-// map of uint32 pointers\n-func Uint32Map(src map[string]uint32) map[string]*uint32 {\n-\tdst := make(map[string]*uint32)\n-\tfor k, val := range src {\n-\t\tv := val\n-\t\tdst[k] = &v\n-\t}\n-\treturn dst\n-}\n-\n-// Uint32ValueMap converts a string map of uint32 pointers into a string\n-// map of uint32 values\n-func Uint32ValueMap(src map[string]*uint32) map[string]uint32 {\n-\tdst := make(map[string]uint32)\n-\tfor k, val := range src {\n-\t\tif val != nil {\n-\t\t\tdst[k] = *val\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Uint64 returns a pointer to the uint64 value passed in.\n-func Uint64(v uint64) *uint64 {\n-\treturn &v\n-}\n-\n-// Uint64Value returns the value of the uint64 pointer passed in or\n-// 0 if the pointer is nil.\n-func Uint64Value(v *uint64) uint64 {\n-\tif v != nil {\n-\t\treturn *v\n-\t}\n-\treturn 0\n-}\n-\n-// Uint64Slice converts a slice of uint64 values into a slice of\n-// uint64 pointers\n-func Uint64Slice(src []uint64) []*uint64 {\n-\tdst := make([]*uint64, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tdst[i] = &(src[i])\n-\t}\n-\treturn dst\n-}\n-\n-// Uint64ValueSlice converts a slice of uint64 pointers into a slice of\n-// uint64 values\n-func Uint64ValueSlice(src []*uint64) []uint64 {\n-\tdst := make([]uint64, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tif src[i] != nil {\n-\t\t\tdst[i] = *(src[i])\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Uint64Map converts a string map of uint64 values into a string\n-// map of uint64 pointers\n-func Uint64Map(src map[string]uint64) map[string]*uint64 {\n-\tdst := make(map[string]*uint64)\n-\tfor k, val := range src {\n-\t\tv := val\n-\t\tdst[k] = &v\n-\t}\n-\treturn dst\n-}\n-\n-// Uint64ValueMap converts a string map of uint64 pointers into a string\n-// map of uint64 values\n-func Uint64ValueMap(src map[string]*uint64) map[string]uint64 {\n-\tdst := make(map[string]uint64)\n-\tfor k, val := range src {\n-\t\tif val != nil {\n-\t\t\tdst[k] = *val\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Float32 returns a pointer to the float32 value passed in.\n-func Float32(v float32) *float32 {\n-\treturn &v\n-}\n-\n-// Float32Value returns the value of the float32 pointer passed in or\n-// 0 if the pointer is nil.\n-func Float32Value(v *float32) float32 {\n-\tif v != nil {\n-\t\treturn *v\n-\t}\n-\treturn 0\n-}\n-\n-// Float32Slice converts a slice of float32 values into a slice of\n-// float32 pointers\n-func Float32Slice(src []float32) []*float32 {\n-\tdst := make([]*float32, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tdst[i] = &(src[i])\n-\t}\n-\treturn dst\n-}\n-\n-// Float32ValueSlice converts a slice of float32 pointers into a slice of\n-// float32 values\n-func Float32ValueSlice(src []*float32) []float32 {\n-\tdst := make([]float32, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tif src[i] != nil {\n-\t\t\tdst[i] = *(src[i])\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Float32Map converts a string map of float32 values into a string\n-// map of float32 pointers\n-func Float32Map(src map[string]float32) map[string]*float32 {\n-\tdst := make(map[string]*float32)\n-\tfor k, val := range src {\n-\t\tv := val\n-\t\tdst[k] = &v\n-\t}\n-\treturn dst\n-}\n-\n-// Float32ValueMap converts a string map of float32 pointers into a string\n-// map of float32 values\n-func Float32ValueMap(src map[string]*float32) map[string]float32 {\n-\tdst := make(map[string]float32)\n-\tfor k, val := range src {\n-\t\tif val != nil {\n-\t\t\tdst[k] = *val\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Float64 returns a pointer to the float64 value passed in.\n-func Float64(v float64) *float64 {\n-\treturn &v\n-}\n-\n-// Float64Value returns the value of the float64 pointer passed in or\n-// 0 if the pointer is nil.\n-func Float64Value(v *float64) float64 {\n-\tif v != nil {\n-\t\treturn *v\n-\t}\n-\treturn 0\n-}\n-\n-// Float64Slice converts a slice of float64 values into a slice of\n-// float64 pointers\n-func Float64Slice(src []float64) []*float64 {\n-\tdst := make([]*float64, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tdst[i] = &(src[i])\n-\t}\n-\treturn dst\n-}\n-\n-// Float64ValueSlice converts a slice of float64 pointers into a slice of\n-// float64 values\n-func Float64ValueSlice(src []*float64) []float64 {\n-\tdst := make([]float64, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tif src[i] != nil {\n-\t\t\tdst[i] = *(src[i])\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Float64Map converts a string map of float64 values into a string\n-// map of float64 pointers\n-func Float64Map(src map[string]float64) map[string]*float64 {\n-\tdst := make(map[string]*float64)\n-\tfor k, val := range src {\n-\t\tv := val\n-\t\tdst[k] = &v\n-\t}\n-\treturn dst\n-}\n-\n-// Float64ValueMap converts a string map of float64 pointers into a string\n-// map of float64 values\n-func Float64ValueMap(src map[string]*float64) map[string]float64 {\n-\tdst := make(map[string]float64)\n-\tfor k, val := range src {\n-\t\tif val != nil {\n-\t\t\tdst[k] = *val\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// Time returns a pointer to the time.Time value passed in.\n-func Time(v time.Time) *time.Time {\n-\treturn &v\n-}\n-\n-// TimeValue returns the value of the time.Time pointer passed in or\n-// time.Time{} if the pointer is nil.\n-func TimeValue(v *time.Time) time.Time {\n-\tif v != nil {\n-\t\treturn *v\n-\t}\n-\treturn time.Time{}\n-}\n-\n-// SecondsTimeValue converts an int64 pointer to a time.Time value\n-// representing seconds since Epoch or time.Time{} if the pointer is nil.\n-func SecondsTimeValue(v *int64) time.Time {\n-\tif v != nil {\n-\t\treturn time.Unix((*v / 1000), 0)\n-\t}\n-\treturn time.Time{}\n-}\n-\n-// MillisecondsTimeValue converts an int64 pointer to a time.Time value\n-// representing milliseconds sinch Epoch or time.Time{} if the pointer is nil.\n-func MillisecondsTimeValue(v *int64) time.Time {\n-\tif v != nil {\n-\t\treturn time.Unix(0, (*v * 1000000))\n-\t}\n-\treturn time.Time{}\n-}\n-\n-// TimeUnixMilli returns a Unix timestamp in milliseconds from \"January 1, 1970 UTC\".\n-// The result is undefined if the Unix time cannot be represented by an int64.\n-// Which includes calling TimeUnixMilli on a zero Time is undefined.\n-//\n-// This utility is useful for service API's such as CloudWatch Logs which require\n-// their unix time values to be in milliseconds.\n-//\n-// See Go stdlib https://golang.org/pkg/time/#Time.UnixNano for more information.\n-func TimeUnixMilli(t time.Time) int64 {\n-\treturn t.UnixNano() / int64(time.Millisecond/time.Nanosecond)\n-}\n-\n-// TimeSlice converts a slice of time.Time values into a slice of\n-// time.Time pointers\n-func TimeSlice(src []time.Time) []*time.Time {\n-\tdst := make([]*time.Time, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tdst[i] = &(src[i])\n-\t}\n-\treturn dst\n-}\n-\n-// TimeValueSlice converts a slice of time.Time pointers into a slice of\n-// time.Time values\n-func TimeValueSlice(src []*time.Time) []time.Time {\n-\tdst := make([]time.Time, len(src))\n-\tfor i := 0; i < len(src); i++ {\n-\t\tif src[i] != nil {\n-\t\t\tdst[i] = *(src[i])\n-\t\t}\n-\t}\n-\treturn dst\n-}\n-\n-// TimeMap converts a string map of time.Time values into a string\n-// map of time.Time pointers\n-func TimeMap(src map[string]time.Time) map[string]*time.Time {\n-\tdst := make(map[string]*time.Time)\n-\tfor k, val := range src {\n-\t\tv := val\n-\t\tdst[k] = &v\n-\t}\n-\treturn dst\n-}\n-\n-// TimeValueMap converts a string map of time.Time pointers into a string\n-// map of time.Time values\n-func TimeValueMap(src map[string]*time.Time) map[string]time.Time {\n-\tdst := make(map[string]time.Time)\n-\tfor k, val := range src {\n-\t\tif val != nil {\n-\t\t\tdst[k] = *val\n-\t\t}\n-\t}\n-\treturn dst\n-}"
    },
    {
      "sha": "3ad1e798df80e18f71ad52a61fad14eb30316924",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/chain_provider.go",
      "status": "removed",
      "additions": 0,
      "deletions": 100,
      "changes": 100,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/chain_provider.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/chain_provider.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/chain_provider.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,100 +0,0 @@\n-package credentials\n-\n-import (\n-\t\"github.com/aws/aws-sdk-go/aws/awserr\"\n-)\n-\n-var (\n-\t// ErrNoValidProvidersFoundInChain Is returned when there are no valid\n-\t// providers in the ChainProvider.\n-\t//\n-\t// This has been deprecated. For verbose error messaging set\n-\t// aws.Config.CredentialsChainVerboseErrors to true.\n-\tErrNoValidProvidersFoundInChain = awserr.New(\"NoCredentialProviders\",\n-\t\t`no valid providers in chain. Deprecated.\n-\tFor verbose messaging see aws.Config.CredentialsChainVerboseErrors`,\n-\t\tnil)\n-)\n-\n-// A ChainProvider will search for a provider which returns credentials\n-// and cache that provider until Retrieve is called again.\n-//\n-// The ChainProvider provides a way of chaining multiple providers together\n-// which will pick the first available using priority order of the Providers\n-// in the list.\n-//\n-// If none of the Providers retrieve valid credentials Value, ChainProvider's\n-// Retrieve() will return the error ErrNoValidProvidersFoundInChain.\n-//\n-// If a Provider is found which returns valid credentials Value ChainProvider\n-// will cache that Provider for all calls to IsExpired(), until Retrieve is\n-// called again.\n-//\n-// Example of ChainProvider to be used with an EnvProvider and EC2RoleProvider.\n-// In this example EnvProvider will first check if any credentials are available\n-// via the environment variables. If there are none ChainProvider will check\n-// the next Provider in the list, EC2RoleProvider in this case. If EC2RoleProvider\n-// does not return any credentials ChainProvider will return the error\n-// ErrNoValidProvidersFoundInChain\n-//\n-//     creds := credentials.NewChainCredentials(\n-//         []credentials.Provider{\n-//             &credentials.EnvProvider{},\n-//             &ec2rolecreds.EC2RoleProvider{\n-//                 Client: ec2metadata.New(sess),\n-//             },\n-//         })\n-//\n-//     // Usage of ChainCredentials with aws.Config\n-//     svc := ec2.New(session.Must(session.NewSession(&aws.Config{\n-//       Credentials: creds,\n-//     })))\n-//\n-type ChainProvider struct {\n-\tProviders     []Provider\n-\tcurr          Provider\n-\tVerboseErrors bool\n-}\n-\n-// NewChainCredentials returns a pointer to a new Credentials object\n-// wrapping a chain of providers.\n-func NewChainCredentials(providers []Provider) *Credentials {\n-\treturn NewCredentials(&ChainProvider{\n-\t\tProviders: append([]Provider{}, providers...),\n-\t})\n-}\n-\n-// Retrieve returns the credentials value or error if no provider returned\n-// without error.\n-//\n-// If a provider is found it will be cached and any calls to IsExpired()\n-// will return the expired state of the cached provider.\n-func (c *ChainProvider) Retrieve() (Value, error) {\n-\tvar errs []error\n-\tfor _, p := range c.Providers {\n-\t\tcreds, err := p.Retrieve()\n-\t\tif err == nil {\n-\t\t\tc.curr = p\n-\t\t\treturn creds, nil\n-\t\t}\n-\t\terrs = append(errs, err)\n-\t}\n-\tc.curr = nil\n-\n-\tvar err error\n-\terr = ErrNoValidProvidersFoundInChain\n-\tif c.VerboseErrors {\n-\t\terr = awserr.NewBatchError(\"NoCredentialProviders\", \"no valid providers in chain\", errs)\n-\t}\n-\treturn Value{}, err\n-}\n-\n-// IsExpired will returned the expired state of the currently cached provider\n-// if there is one.  If there is no current provider, true will be returned.\n-func (c *ChainProvider) IsExpired() bool {\n-\tif c.curr != nil {\n-\t\treturn c.curr.IsExpired()\n-\t}\n-\n-\treturn true\n-}"
    },
    {
      "sha": "5852b2648703cfcf0f49d95b17901c40a5d92146",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/context_background_go1.5.go",
      "status": "removed",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/context_background_go1.5.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/context_background_go1.5.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/context_background_go1.5.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,22 +0,0 @@\n-// +build !go1.7\n-\n-package credentials\n-\n-import (\n-\t\"github.com/aws/aws-sdk-go/internal/context\"\n-)\n-\n-// backgroundContext returns a context that will never be canceled, has no\n-// values, and no deadline. This context is used by the SDK to provide\n-// backwards compatibility with non-context API operations and functionality.\n-//\n-// Go 1.6 and before:\n-// This context function is equivalent to context.Background in the Go stdlib.\n-//\n-// Go 1.7 and later:\n-// The context returned will be the value returned by context.Background()\n-//\n-// See https://golang.org/pkg/context for more information on Contexts.\n-func backgroundContext() Context {\n-\treturn context.BackgroundCtx\n-}"
    },
    {
      "sha": "388b2154182de350d365b543da10a03ff2571f6f",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/context_background_go1.7.go",
      "status": "removed",
      "additions": 0,
      "deletions": 20,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/context_background_go1.7.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/context_background_go1.7.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/context_background_go1.7.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,20 +0,0 @@\n-// +build go1.7\n-\n-package credentials\n-\n-import \"context\"\n-\n-// backgroundContext returns a context that will never be canceled, has no\n-// values, and no deadline. This context is used by the SDK to provide\n-// backwards compatibility with non-context API operations and functionality.\n-//\n-// Go 1.6 and before:\n-// This context function is equivalent to context.Background in the Go stdlib.\n-//\n-// Go 1.7 and later:\n-// The context returned will be the value returned by context.Background()\n-//\n-// See https://golang.org/pkg/context for more information on Contexts.\n-func backgroundContext() Context {\n-\treturn context.Background()\n-}"
    },
    {
      "sha": "8152a864add645e711da9b452c540143a8ecb1dd",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/context_go1.5.go",
      "status": "removed",
      "additions": 0,
      "deletions": 39,
      "changes": 39,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/context_go1.5.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/context_go1.5.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/context_go1.5.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,39 +0,0 @@\n-// +build !go1.9\n-\n-package credentials\n-\n-import \"time\"\n-\n-// Context is an copy of the Go v1.7 stdlib's context.Context interface.\n-// It is represented as a SDK interface to enable you to use the \"WithContext\"\n-// API methods with Go v1.6 and a Context type such as golang.org/x/net/context.\n-//\n-// This type, aws.Context, and context.Context are equivalent.\n-//\n-// See https://golang.org/pkg/context on how to use contexts.\n-type Context interface {\n-\t// Deadline returns the time when work done on behalf of this context\n-\t// should be canceled. Deadline returns ok==false when no deadline is\n-\t// set. Successive calls to Deadline return the same results.\n-\tDeadline() (deadline time.Time, ok bool)\n-\n-\t// Done returns a channel that's closed when work done on behalf of this\n-\t// context should be canceled. Done may return nil if this context can\n-\t// never be canceled. Successive calls to Done return the same value.\n-\tDone() <-chan struct{}\n-\n-\t// Err returns a non-nil error value after Done is closed. Err returns\n-\t// Canceled if the context was canceled or DeadlineExceeded if the\n-\t// context's deadline passed. No other values for Err are defined.\n-\t// After Done is closed, successive calls to Err return the same value.\n-\tErr() error\n-\n-\t// Value returns the value associated with this context for key, or nil\n-\t// if no value is associated with key. Successive calls to Value with\n-\t// the same key returns the same result.\n-\t//\n-\t// Use context values only for request-scoped data that transits\n-\t// processes and API boundaries, not for passing optional parameters to\n-\t// functions.\n-\tValue(key interface{}) interface{}\n-}"
    },
    {
      "sha": "4356edb3d5d35fad795d73b051eab768bc6bd89d",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/context_go1.9.go",
      "status": "removed",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/context_go1.9.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/context_go1.9.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/context_go1.9.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,13 +0,0 @@\n-// +build go1.9\n-\n-package credentials\n-\n-import \"context\"\n-\n-// Context is an alias of the Go stdlib's context.Context interface.\n-// It can be used within the SDK's API operation \"WithContext\" methods.\n-//\n-// This type, aws.Context, and context.Context are equivalent.\n-//\n-// See https://golang.org/pkg/context on how to use contexts.\n-type Context = context.Context"
    },
    {
      "sha": "9f8fd92a50f67c9d9d0c8fa0bf7ffdfc428f51a4",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/credentials.go",
      "status": "removed",
      "additions": 0,
      "deletions": 339,
      "changes": 339,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/credentials.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/credentials.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/credentials.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,339 +0,0 @@\n-// Package credentials provides credential retrieval and management\n-//\n-// The Credentials is the primary method of getting access to and managing\n-// credentials Values. Using dependency injection retrieval of the credential\n-// values is handled by a object which satisfies the Provider interface.\n-//\n-// By default the Credentials.Get() will cache the successful result of a\n-// Provider's Retrieve() until Provider.IsExpired() returns true. At which\n-// point Credentials will call Provider's Retrieve() to get new credential Value.\n-//\n-// The Provider is responsible for determining when credentials Value have expired.\n-// It is also important to note that Credentials will always call Retrieve the\n-// first time Credentials.Get() is called.\n-//\n-// Example of using the environment variable credentials.\n-//\n-//     creds := credentials.NewEnvCredentials()\n-//\n-//     // Retrieve the credentials value\n-//     credValue, err := creds.Get()\n-//     if err != nil {\n-//         // handle error\n-//     }\n-//\n-// Example of forcing credentials to expire and be refreshed on the next Get().\n-// This may be helpful to proactively expire credentials and refresh them sooner\n-// than they would naturally expire on their own.\n-//\n-//     creds := credentials.NewCredentials(&ec2rolecreds.EC2RoleProvider{})\n-//     creds.Expire()\n-//     credsValue, err := creds.Get()\n-//     // New credentials will be retrieved instead of from cache.\n-//\n-//\n-// Custom Provider\n-//\n-// Each Provider built into this package also provides a helper method to generate\n-// a Credentials pointer setup with the provider. To use a custom Provider just\n-// create a type which satisfies the Provider interface and pass it to the\n-// NewCredentials method.\n-//\n-//     type MyProvider struct{}\n-//     func (m *MyProvider) Retrieve() (Value, error) {...}\n-//     func (m *MyProvider) IsExpired() bool {...}\n-//\n-//     creds := credentials.NewCredentials(&MyProvider{})\n-//     credValue, err := creds.Get()\n-//\n-package credentials\n-\n-import (\n-\t\"fmt\"\n-\t\"sync/atomic\"\n-\t\"time\"\n-\n-\t\"github.com/aws/aws-sdk-go/aws/awserr\"\n-\t\"github.com/aws/aws-sdk-go/internal/sync/singleflight\"\n-)\n-\n-// AnonymousCredentials is an empty Credential object that can be used as\n-// dummy placeholder credentials for requests that do not need signed.\n-//\n-// This Credentials can be used to configure a service to not sign requests\n-// when making service API calls. For example, when accessing public\n-// s3 buckets.\n-//\n-//     svc := s3.New(session.Must(session.NewSession(&aws.Config{\n-//       Credentials: credentials.AnonymousCredentials,\n-//     })))\n-//     // Access public S3 buckets.\n-var AnonymousCredentials = NewStaticCredentials(\"\", \"\", \"\")\n-\n-// A Value is the AWS credentials value for individual credential fields.\n-type Value struct {\n-\t// AWS Access key ID\n-\tAccessKeyID string\n-\n-\t// AWS Secret Access Key\n-\tSecretAccessKey string\n-\n-\t// AWS Session Token\n-\tSessionToken string\n-\n-\t// Provider used to get credentials\n-\tProviderName string\n-}\n-\n-// HasKeys returns if the credentials Value has both AccessKeyID and\n-// SecretAccessKey value set.\n-func (v Value) HasKeys() bool {\n-\treturn len(v.AccessKeyID) != 0 && len(v.SecretAccessKey) != 0\n-}\n-\n-// A Provider is the interface for any component which will provide credentials\n-// Value. A provider is required to manage its own Expired state, and what to\n-// be expired means.\n-//\n-// The Provider should not need to implement its own mutexes, because\n-// that will be managed by Credentials.\n-type Provider interface {\n-\t// Retrieve returns nil if it successfully retrieved the value.\n-\t// Error is returned if the value were not obtainable, or empty.\n-\tRetrieve() (Value, error)\n-\n-\t// IsExpired returns if the credentials are no longer valid, and need\n-\t// to be retrieved.\n-\tIsExpired() bool\n-}\n-\n-// ProviderWithContext is a Provider that can retrieve credentials with a Context\n-type ProviderWithContext interface {\n-\tProvider\n-\n-\tRetrieveWithContext(Context) (Value, error)\n-}\n-\n-// An Expirer is an interface that Providers can implement to expose the expiration\n-// time, if known.  If the Provider cannot accurately provide this info,\n-// it should not implement this interface.\n-type Expirer interface {\n-\t// The time at which the credentials are no longer valid\n-\tExpiresAt() time.Time\n-}\n-\n-// An ErrorProvider is a stub credentials provider that always returns an error\n-// this is used by the SDK when construction a known provider is not possible\n-// due to an error.\n-type ErrorProvider struct {\n-\t// The error to be returned from Retrieve\n-\tErr error\n-\n-\t// The provider name to set on the Retrieved returned Value\n-\tProviderName string\n-}\n-\n-// Retrieve will always return the error that the ErrorProvider was created with.\n-func (p ErrorProvider) Retrieve() (Value, error) {\n-\treturn Value{ProviderName: p.ProviderName}, p.Err\n-}\n-\n-// IsExpired will always return not expired.\n-func (p ErrorProvider) IsExpired() bool {\n-\treturn false\n-}\n-\n-// A Expiry provides shared expiration logic to be used by credentials\n-// providers to implement expiry functionality.\n-//\n-// The best method to use this struct is as an anonymous field within the\n-// provider's struct.\n-//\n-// Example:\n-//     type EC2RoleProvider struct {\n-//         Expiry\n-//         ...\n-//     }\n-type Expiry struct {\n-\t// The date/time when to expire on\n-\texpiration time.Time\n-\n-\t// If set will be used by IsExpired to determine the current time.\n-\t// Defaults to time.Now if CurrentTime is not set.  Available for testing\n-\t// to be able to mock out the current time.\n-\tCurrentTime func() time.Time\n-}\n-\n-// SetExpiration sets the expiration IsExpired will check when called.\n-//\n-// If window is greater than 0 the expiration time will be reduced by the\n-// window value.\n-//\n-// Using a window is helpful to trigger credentials to expire sooner than\n-// the expiration time given to ensure no requests are made with expired\n-// tokens.\n-func (e *Expiry) SetExpiration(expiration time.Time, window time.Duration) {\n-\te.expiration = expiration\n-\tif window > 0 {\n-\t\te.expiration = e.expiration.Add(-window)\n-\t}\n-}\n-\n-// IsExpired returns if the credentials are expired.\n-func (e *Expiry) IsExpired() bool {\n-\tcurTime := e.CurrentTime\n-\tif curTime == nil {\n-\t\tcurTime = time.Now\n-\t}\n-\treturn e.expiration.Before(curTime())\n-}\n-\n-// ExpiresAt returns the expiration time of the credential\n-func (e *Expiry) ExpiresAt() time.Time {\n-\treturn e.expiration\n-}\n-\n-// A Credentials provides concurrency safe retrieval of AWS credentials Value.\n-// Credentials will cache the credentials value until they expire. Once the value\n-// expires the next Get will attempt to retrieve valid credentials.\n-//\n-// Credentials is safe to use across multiple goroutines and will manage the\n-// synchronous state so the Providers do not need to implement their own\n-// synchronization.\n-//\n-// The first Credentials.Get() will always call Provider.Retrieve() to get the\n-// first instance of the credentials Value. All calls to Get() after that\n-// will return the cached credentials Value until IsExpired() returns true.\n-type Credentials struct {\n-\tcreds atomic.Value\n-\tsf    singleflight.Group\n-\n-\tprovider Provider\n-}\n-\n-// NewCredentials returns a pointer to a new Credentials with the provider set.\n-func NewCredentials(provider Provider) *Credentials {\n-\tc := &Credentials{\n-\t\tprovider: provider,\n-\t}\n-\tc.creds.Store(Value{})\n-\treturn c\n-}\n-\n-// GetWithContext returns the credentials value, or error if the credentials\n-// Value failed to be retrieved. Will return early if the passed in context is\n-// canceled.\n-//\n-// Will return the cached credentials Value if it has not expired. If the\n-// credentials Value has expired the Provider's Retrieve() will be called\n-// to refresh the credentials.\n-//\n-// If Credentials.Expire() was called the credentials Value will be force\n-// expired, and the next call to Get() will cause them to be refreshed.\n-//\n-// Passed in Context is equivalent to aws.Context, and context.Context.\n-func (c *Credentials) GetWithContext(ctx Context) (Value, error) {\n-\tif curCreds := c.creds.Load(); !c.isExpired(curCreds) {\n-\t\treturn curCreds.(Value), nil\n-\t}\n-\n-\t// Cannot pass context down to the actual retrieve, because the first\n-\t// context would cancel the whole group when there is not direct\n-\t// association of items in the group.\n-\tresCh := c.sf.DoChan(\"\", func() (interface{}, error) {\n-\t\treturn c.singleRetrieve(&suppressedContext{ctx})\n-\t})\n-\tselect {\n-\tcase res := <-resCh:\n-\t\treturn res.Val.(Value), res.Err\n-\tcase <-ctx.Done():\n-\t\treturn Value{}, awserr.New(\"RequestCanceled\",\n-\t\t\t\"request context canceled\", ctx.Err())\n-\t}\n-}\n-\n-func (c *Credentials) singleRetrieve(ctx Context) (creds interface{}, err error) {\n-\tif curCreds := c.creds.Load(); !c.isExpired(curCreds) {\n-\t\treturn curCreds.(Value), nil\n-\t}\n-\n-\tif p, ok := c.provider.(ProviderWithContext); ok {\n-\t\tcreds, err = p.RetrieveWithContext(ctx)\n-\t} else {\n-\t\tcreds, err = c.provider.Retrieve()\n-\t}\n-\tif err == nil {\n-\t\tc.creds.Store(creds)\n-\t}\n-\n-\treturn creds, err\n-}\n-\n-// Get returns the credentials value, or error if the credentials Value failed\n-// to be retrieved.\n-//\n-// Will return the cached credentials Value if it has not expired. If the\n-// credentials Value has expired the Provider's Retrieve() will be called\n-// to refresh the credentials.\n-//\n-// If Credentials.Expire() was called the credentials Value will be force\n-// expired, and the next call to Get() will cause them to be refreshed.\n-func (c *Credentials) Get() (Value, error) {\n-\treturn c.GetWithContext(backgroundContext())\n-}\n-\n-// Expire expires the credentials and forces them to be retrieved on the\n-// next call to Get().\n-//\n-// This will override the Provider's expired state, and force Credentials\n-// to call the Provider's Retrieve().\n-func (c *Credentials) Expire() {\n-\tc.creds.Store(Value{})\n-}\n-\n-// IsExpired returns if the credentials are no longer valid, and need\n-// to be retrieved.\n-//\n-// If the Credentials were forced to be expired with Expire() this will\n-// reflect that override.\n-func (c *Credentials) IsExpired() bool {\n-\treturn c.isExpired(c.creds.Load())\n-}\n-\n-// isExpired helper method wrapping the definition of expired credentials.\n-func (c *Credentials) isExpired(creds interface{}) bool {\n-\treturn creds == nil || creds.(Value) == Value{} || c.provider.IsExpired()\n-}\n-\n-// ExpiresAt provides access to the functionality of the Expirer interface of\n-// the underlying Provider, if it supports that interface.  Otherwise, it returns\n-// an error.\n-func (c *Credentials) ExpiresAt() (time.Time, error) {\n-\texpirer, ok := c.provider.(Expirer)\n-\tif !ok {\n-\t\treturn time.Time{}, awserr.New(\"ProviderNotExpirer\",\n-\t\t\tfmt.Sprintf(\"provider %s does not support ExpiresAt()\", c.creds.Load().(Value).ProviderName),\n-\t\t\tnil)\n-\t}\n-\tif c.creds.Load().(Value) == (Value{}) {\n-\t\t// set expiration time to the distant past\n-\t\treturn time.Time{}, nil\n-\t}\n-\treturn expirer.ExpiresAt(), nil\n-}\n-\n-type suppressedContext struct {\n-\tContext\n-}\n-\n-func (s *suppressedContext) Deadline() (deadline time.Time, ok bool) {\n-\treturn time.Time{}, false\n-}\n-\n-func (s *suppressedContext) Done() <-chan struct{} {\n-\treturn nil\n-}\n-\n-func (s *suppressedContext) Err() error {\n-\treturn nil\n-}"
    },
    {
      "sha": "54c5cf7333ffced3b7b63c2bbec5f74892ba9a66",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/env_provider.go",
      "status": "removed",
      "additions": 0,
      "deletions": 74,
      "changes": 74,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/env_provider.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/env_provider.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/env_provider.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,74 +0,0 @@\n-package credentials\n-\n-import (\n-\t\"os\"\n-\n-\t\"github.com/aws/aws-sdk-go/aws/awserr\"\n-)\n-\n-// EnvProviderName provides a name of Env provider\n-const EnvProviderName = \"EnvProvider\"\n-\n-var (\n-\t// ErrAccessKeyIDNotFound is returned when the AWS Access Key ID can't be\n-\t// found in the process's environment.\n-\tErrAccessKeyIDNotFound = awserr.New(\"EnvAccessKeyNotFound\", \"AWS_ACCESS_KEY_ID or AWS_ACCESS_KEY not found in environment\", nil)\n-\n-\t// ErrSecretAccessKeyNotFound is returned when the AWS Secret Access Key\n-\t// can't be found in the process's environment.\n-\tErrSecretAccessKeyNotFound = awserr.New(\"EnvSecretNotFound\", \"AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY not found in environment\", nil)\n-)\n-\n-// A EnvProvider retrieves credentials from the environment variables of the\n-// running process. Environment credentials never expire.\n-//\n-// Environment variables used:\n-//\n-// * Access Key ID:     AWS_ACCESS_KEY_ID or AWS_ACCESS_KEY\n-//\n-// * Secret Access Key: AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY\n-type EnvProvider struct {\n-\tretrieved bool\n-}\n-\n-// NewEnvCredentials returns a pointer to a new Credentials object\n-// wrapping the environment variable provider.\n-func NewEnvCredentials() *Credentials {\n-\treturn NewCredentials(&EnvProvider{})\n-}\n-\n-// Retrieve retrieves the keys from the environment.\n-func (e *EnvProvider) Retrieve() (Value, error) {\n-\te.retrieved = false\n-\n-\tid := os.Getenv(\"AWS_ACCESS_KEY_ID\")\n-\tif id == \"\" {\n-\t\tid = os.Getenv(\"AWS_ACCESS_KEY\")\n-\t}\n-\n-\tsecret := os.Getenv(\"AWS_SECRET_ACCESS_KEY\")\n-\tif secret == \"\" {\n-\t\tsecret = os.Getenv(\"AWS_SECRET_KEY\")\n-\t}\n-\n-\tif id == \"\" {\n-\t\treturn Value{ProviderName: EnvProviderName}, ErrAccessKeyIDNotFound\n-\t}\n-\n-\tif secret == \"\" {\n-\t\treturn Value{ProviderName: EnvProviderName}, ErrSecretAccessKeyNotFound\n-\t}\n-\n-\te.retrieved = true\n-\treturn Value{\n-\t\tAccessKeyID:     id,\n-\t\tSecretAccessKey: secret,\n-\t\tSessionToken:    os.Getenv(\"AWS_SESSION_TOKEN\"),\n-\t\tProviderName:    EnvProviderName,\n-\t}, nil\n-}\n-\n-// IsExpired returns if the credentials have been retrieved.\n-func (e *EnvProvider) IsExpired() bool {\n-\treturn !e.retrieved\n-}"
    },
    {
      "sha": "7fc91d9d2047bc69b01fa0364a0cd64daa0c9923",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/example.ini",
      "status": "removed",
      "additions": 0,
      "deletions": 12,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/example.ini",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/example.ini",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/example.ini?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,12 +0,0 @@\n-[default]\n-aws_access_key_id = accessKey\n-aws_secret_access_key = secret\n-aws_session_token = token\n-\n-[no_token]\n-aws_access_key_id = accessKey\n-aws_secret_access_key = secret\n-\n-[with_colon]\n-aws_access_key_id: accessKey\n-aws_secret_access_key: secret"
    },
    {
      "sha": "22b5c5d9f32242d3664c181617a20fa7991286f4",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/shared_credentials_provider.go",
      "status": "removed",
      "additions": 0,
      "deletions": 151,
      "changes": 151,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/shared_credentials_provider.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/shared_credentials_provider.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/shared_credentials_provider.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,151 +0,0 @@\n-package credentials\n-\n-import (\n-\t\"fmt\"\n-\t\"os\"\n-\n-\t\"github.com/aws/aws-sdk-go/aws/awserr\"\n-\t\"github.com/aws/aws-sdk-go/internal/ini\"\n-\t\"github.com/aws/aws-sdk-go/internal/shareddefaults\"\n-)\n-\n-// SharedCredsProviderName provides a name of SharedCreds provider\n-const SharedCredsProviderName = \"SharedCredentialsProvider\"\n-\n-var (\n-\t// ErrSharedCredentialsHomeNotFound is emitted when the user directory cannot be found.\n-\tErrSharedCredentialsHomeNotFound = awserr.New(\"UserHomeNotFound\", \"user home directory not found.\", nil)\n-)\n-\n-// A SharedCredentialsProvider retrieves access key pair (access key ID,\n-// secret access key, and session token if present) credentials from the current\n-// user's home directory, and keeps track if those credentials are expired.\n-//\n-// Profile ini file example: $HOME/.aws/credentials\n-type SharedCredentialsProvider struct {\n-\t// Path to the shared credentials file.\n-\t//\n-\t// If empty will look for \"AWS_SHARED_CREDENTIALS_FILE\" env variable. If the\n-\t// env value is empty will default to current user's home directory.\n-\t// Linux/OSX: \"$HOME/.aws/credentials\"\n-\t// Windows:   \"%USERPROFILE%\\.aws\\credentials\"\n-\tFilename string\n-\n-\t// AWS Profile to extract credentials from the shared credentials file. If empty\n-\t// will default to environment variable \"AWS_PROFILE\" or \"default\" if\n-\t// environment variable is also not set.\n-\tProfile string\n-\n-\t// retrieved states if the credentials have been successfully retrieved.\n-\tretrieved bool\n-}\n-\n-// NewSharedCredentials returns a pointer to a new Credentials object\n-// wrapping the Profile file provider.\n-func NewSharedCredentials(filename, profile string) *Credentials {\n-\treturn NewCredentials(&SharedCredentialsProvider{\n-\t\tFilename: filename,\n-\t\tProfile:  profile,\n-\t})\n-}\n-\n-// Retrieve reads and extracts the shared credentials from the current\n-// users home directory.\n-func (p *SharedCredentialsProvider) Retrieve() (Value, error) {\n-\tp.retrieved = false\n-\n-\tfilename, err := p.filename()\n-\tif err != nil {\n-\t\treturn Value{ProviderName: SharedCredsProviderName}, err\n-\t}\n-\n-\tcreds, err := loadProfile(filename, p.profile())\n-\tif err != nil {\n-\t\treturn Value{ProviderName: SharedCredsProviderName}, err\n-\t}\n-\n-\tp.retrieved = true\n-\treturn creds, nil\n-}\n-\n-// IsExpired returns if the shared credentials have expired.\n-func (p *SharedCredentialsProvider) IsExpired() bool {\n-\treturn !p.retrieved\n-}\n-\n-// loadProfiles loads from the file pointed to by shared credentials filename for profile.\n-// The credentials retrieved from the profile will be returned or error. Error will be\n-// returned if it fails to read from the file, or the data is invalid.\n-func loadProfile(filename, profile string) (Value, error) {\n-\tconfig, err := ini.OpenFile(filename)\n-\tif err != nil {\n-\t\treturn Value{ProviderName: SharedCredsProviderName}, awserr.New(\"SharedCredsLoad\", \"failed to load shared credentials file\", err)\n-\t}\n-\n-\tiniProfile, ok := config.GetSection(profile)\n-\tif !ok {\n-\t\treturn Value{ProviderName: SharedCredsProviderName}, awserr.New(\"SharedCredsLoad\", \"failed to get profile\", nil)\n-\t}\n-\n-\tid := iniProfile.String(\"aws_access_key_id\")\n-\tif len(id) == 0 {\n-\t\treturn Value{ProviderName: SharedCredsProviderName}, awserr.New(\"SharedCredsAccessKey\",\n-\t\t\tfmt.Sprintf(\"shared credentials %s in %s did not contain aws_access_key_id\", profile, filename),\n-\t\t\tnil)\n-\t}\n-\n-\tsecret := iniProfile.String(\"aws_secret_access_key\")\n-\tif len(secret) == 0 {\n-\t\treturn Value{ProviderName: SharedCredsProviderName}, awserr.New(\"SharedCredsSecret\",\n-\t\t\tfmt.Sprintf(\"shared credentials %s in %s did not contain aws_secret_access_key\", profile, filename),\n-\t\t\tnil)\n-\t}\n-\n-\t// Default to empty string if not found\n-\ttoken := iniProfile.String(\"aws_session_token\")\n-\n-\treturn Value{\n-\t\tAccessKeyID:     id,\n-\t\tSecretAccessKey: secret,\n-\t\tSessionToken:    token,\n-\t\tProviderName:    SharedCredsProviderName,\n-\t}, nil\n-}\n-\n-// filename returns the filename to use to read AWS shared credentials.\n-//\n-// Will return an error if the user's home directory path cannot be found.\n-func (p *SharedCredentialsProvider) filename() (string, error) {\n-\tif len(p.Filename) != 0 {\n-\t\treturn p.Filename, nil\n-\t}\n-\n-\tif p.Filename = os.Getenv(\"AWS_SHARED_CREDENTIALS_FILE\"); len(p.Filename) != 0 {\n-\t\treturn p.Filename, nil\n-\t}\n-\n-\tif home := shareddefaults.UserHomeDir(); len(home) == 0 {\n-\t\t// Backwards compatibility of home directly not found error being returned.\n-\t\t// This error is too verbose, failure when opening the file would of been\n-\t\t// a better error to return.\n-\t\treturn \"\", ErrSharedCredentialsHomeNotFound\n-\t}\n-\n-\tp.Filename = shareddefaults.SharedCredentialsFilename()\n-\n-\treturn p.Filename, nil\n-}\n-\n-// profile returns the AWS shared credentials profile.  If empty will read\n-// environment variable \"AWS_PROFILE\". If that is not set profile will\n-// return \"default\".\n-func (p *SharedCredentialsProvider) profile() string {\n-\tif p.Profile == \"\" {\n-\t\tp.Profile = os.Getenv(\"AWS_PROFILE\")\n-\t}\n-\tif p.Profile == \"\" {\n-\t\tp.Profile = \"default\"\n-\t}\n-\n-\treturn p.Profile\n-}"
    },
    {
      "sha": "cbba1e3d560c00553a4d99fdd856e4e51f486219",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/static_provider.go",
      "status": "removed",
      "additions": 0,
      "deletions": 57,
      "changes": 57,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/static_provider.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/static_provider.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/credentials/static_provider.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,57 +0,0 @@\n-package credentials\n-\n-import (\n-\t\"github.com/aws/aws-sdk-go/aws/awserr\"\n-)\n-\n-// StaticProviderName provides a name of Static provider\n-const StaticProviderName = \"StaticProvider\"\n-\n-var (\n-\t// ErrStaticCredentialsEmpty is emitted when static credentials are empty.\n-\tErrStaticCredentialsEmpty = awserr.New(\"EmptyStaticCreds\", \"static credentials are empty\", nil)\n-)\n-\n-// A StaticProvider is a set of credentials which are set programmatically,\n-// and will never expire.\n-type StaticProvider struct {\n-\tValue\n-}\n-\n-// NewStaticCredentials returns a pointer to a new Credentials object\n-// wrapping a static credentials value provider. Token is only required\n-// for temporary security credentials retrieved via STS, otherwise an empty\n-// string can be passed for this parameter.\n-func NewStaticCredentials(id, secret, token string) *Credentials {\n-\treturn NewCredentials(&StaticProvider{Value: Value{\n-\t\tAccessKeyID:     id,\n-\t\tSecretAccessKey: secret,\n-\t\tSessionToken:    token,\n-\t}})\n-}\n-\n-// NewStaticCredentialsFromCreds returns a pointer to a new Credentials object\n-// wrapping the static credentials value provide. Same as NewStaticCredentials\n-// but takes the creds Value instead of individual fields\n-func NewStaticCredentialsFromCreds(creds Value) *Credentials {\n-\treturn NewCredentials(&StaticProvider{Value: creds})\n-}\n-\n-// Retrieve returns the credentials or error if the credentials are invalid.\n-func (s *StaticProvider) Retrieve() (Value, error) {\n-\tif s.AccessKeyID == \"\" || s.SecretAccessKey == \"\" {\n-\t\treturn Value{ProviderName: StaticProviderName}, ErrStaticCredentialsEmpty\n-\t}\n-\n-\tif len(s.Value.ProviderName) == 0 {\n-\t\ts.Value.ProviderName = StaticProviderName\n-\t}\n-\treturn s.Value, nil\n-}\n-\n-// IsExpired returns if the credentials are expired.\n-//\n-// For StaticProvider, the credentials never expired.\n-func (s *StaticProvider) IsExpired() bool {\n-\treturn false\n-}"
    },
    {
      "sha": "4fcb6161848e8e3f38140a17b121f82359775c8c",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/doc.go",
      "status": "removed",
      "additions": 0,
      "deletions": 56,
      "changes": 56,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/doc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/doc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/doc.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,56 +0,0 @@\n-// Package aws provides the core SDK's utilities and shared types. Use this package's\n-// utilities to simplify setting and reading API operations parameters.\n-//\n-// Value and Pointer Conversion Utilities\n-//\n-// This package includes a helper conversion utility for each scalar type the SDK's\n-// API use. These utilities make getting a pointer of the scalar, and dereferencing\n-// a pointer easier.\n-//\n-// Each conversion utility comes in two forms. Value to Pointer and Pointer to Value.\n-// The Pointer to value will safely dereference the pointer and return its value.\n-// If the pointer was nil, the scalar's zero value will be returned.\n-//\n-// The value to pointer functions will be named after the scalar type. So get a\n-// *string from a string value use the \"String\" function. This makes it easy to\n-// to get pointer of a literal string value, because getting the address of a\n-// literal requires assigning the value to a variable first.\n-//\n-//    var strPtr *string\n-//\n-//    // Without the SDK's conversion functions\n-//    str := \"my string\"\n-//    strPtr = &str\n-//\n-//    // With the SDK's conversion functions\n-//    strPtr = aws.String(\"my string\")\n-//\n-//    // Convert *string to string value\n-//    str = aws.StringValue(strPtr)\n-//\n-// In addition to scalars the aws package also includes conversion utilities for\n-// map and slice for commonly types used in API parameters. The map and slice\n-// conversion functions use similar naming pattern as the scalar conversion\n-// functions.\n-//\n-//    var strPtrs []*string\n-//    var strs []string = []string{\"Go\", \"Gophers\", \"Go\"}\n-//\n-//    // Convert []string to []*string\n-//    strPtrs = aws.StringSlice(strs)\n-//\n-//    // Convert []*string to []string\n-//    strs = aws.StringValueSlice(strPtrs)\n-//\n-// SDK Default HTTP Client\n-//\n-// The SDK will use the http.DefaultClient if a HTTP client is not provided to\n-// the SDK's Session, or service client constructor. This means that if the\n-// http.DefaultClient is modified by other components of your application the\n-// modifications will be picked up by the SDK as well.\n-//\n-// In some cases this might be intended, but it is a better practice to create\n-// a custom HTTP Client to share explicitly through your application. You can\n-// configure the SDK to use the custom HTTP Client by setting the HTTPClient\n-// value of the SDK's Config type when creating a Session or service client.\n-package aws"
    },
    {
      "sha": "654fb1ad52d0e86b16405659485fee5f4ab86ce2",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/decode.go",
      "status": "removed",
      "additions": 0,
      "deletions": 216,
      "changes": 216,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/decode.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/decode.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/decode.go?ref=5c59e87f948223029c44653a819549bca1d88793",
      "patch": "@@ -1,216 +0,0 @@\n-package endpoints\n-\n-import (\n-\t\"encoding/json\"\n-\t\"fmt\"\n-\t\"io\"\n-\n-\t\"github.com/aws/aws-sdk-go/aws/awserr\"\n-)\n-\n-type modelDefinition map[string]json.RawMessage\n-\n-// A DecodeModelOptions are the options for how the endpoints model definition\n-// are decoded.\n-type DecodeModelOptions struct {\n-\tSkipCustomizations bool\n-}\n-\n-// Set combines all of the option functions together.\n-func (d *DecodeModelOptions) Set(optFns ...func(*DecodeModelOptions)) {\n-\tfor _, fn := range optFns {\n-\t\tfn(d)\n-\t}\n-}\n-\n-// DecodeModel unmarshals a Regions and Endpoint model definition file into\n-// a endpoint Resolver. If the file format is not supported, or an error occurs\n-// when unmarshaling the model an error will be returned.\n-//\n-// Casting the return value of this func to a EnumPartitions will\n-// allow you to get a list of the partitions in the order the endpoints\n-// will be resolved in.\n-//\n-//    resolver, err := endpoints.DecodeModel(reader)\n-//\n-//    partitions := resolver.(endpoints.EnumPartitions).Partitions()\n-//    for _, p := range partitions {\n-//        // ... inspect partitions\n-//    }\n-func DecodeModel(r io.Reader, optFns ...func(*DecodeModelOptions)) (Resolver, error) {\n-\tvar opts DecodeModelOptions\n-\topts.Set(optFns...)\n-\n-\t// Get the version of the partition file to determine what\n-\t// unmarshaling model to use.\n-\tmodelDef := modelDefinition{}\n-\tif err := json.NewDecoder(r).Decode(&modelDef); err != nil {\n-\t\treturn nil, newDecodeModelError(\"failed to decode endpoints model\", err)\n-\t}\n-\n-\tvar version string\n-\tif b, ok := modelDef[\"version\"]; ok {\n-\t\tversion = string(b)\n-\t} else {\n-\t\treturn nil, newDecodeModelError(\"endpoints version not found in model\", nil)\n-\t}\n-\n-\tif version == \"3\" {\n-\t\treturn decodeV3Endpoints(modelDef, opts)\n-\t}\n-\n-\treturn nil, newDecodeModelError(\n-\t\tfmt.Sprintf(\"endpoints version %s, not supported\", version), nil)\n-}\n-\n-func decodeV3Endpoints(modelDef modelDefinition, opts DecodeModelOptions) (Resolver, error) {\n-\tb, ok := modelDef[\"partitions\"]\n-\tif !ok {\n-\t\treturn nil, newDecodeModelError(\"endpoints model missing partitions\", nil)\n-\t}\n-\n-\tps := partitions{}\n-\tif err := json.Unmarshal(b, &ps); err != nil {\n-\t\treturn nil, newDecodeModelError(\"failed to decode endpoints model\", err)\n-\t}\n-\n-\tif opts.SkipCustomizations {\n-\t\treturn ps, nil\n-\t}\n-\n-\t// Customization\n-\tfor i := 0; i < len(ps); i++ {\n-\t\tp := &ps[i]\n-\t\tcustAddEC2Metadata(p)\n-\t\tcustAddS3DualStack(p)\n-\t\tcustRegionalS3(p)\n-\t\tcustRmIotDataService(p)\n-\t\tcustFixAppAutoscalingChina(p)\n-\t\tcustFixAppAutoscalingUsGov(p)\n-\t}\n-\n-\treturn ps, nil\n-}\n-\n-func custAddS3DualStack(p *partition) {\n-\tif !(p.ID == \"aws\" || p.ID == \"aws-cn\" || p.ID == \"aws-us-gov\") {\n-\t\treturn\n-\t}\n-\n-\tcustAddDualstack(p, \"s3\")\n-\tcustAddDualstack(p, \"s3-control\")\n-}\n-\n-func custRegionalS3(p *partition) {\n-\tif p.ID != \"aws\" {\n-\t\treturn\n-\t}\n-\n-\tservice, ok := p.Services[\"s3\"]\n-\tif !ok {\n-\t\treturn\n-\t}\n-\n-\t// If global endpoint already exists no customization needed.\n-\tif _, ok := service.Endpoints[\"aws-global\"]; ok {\n-\t\treturn\n-\t}\n-\n-\tservice.PartitionEndpoint = \"aws-global\"\n-\tservice.Endpoints[\"us-east-1\"] = endpoint{}\n-\tservice.Endpoints[\"aws-global\"] = endpoint{\n-\t\tHostname: \"s3.amazonaws.com\",\n-\t\tCredentialScope: credentialScope{\n-\t\t\tRegion: \"us-east-1\",\n-\t\t},\n-\t}\n-\n-\tp.Services[\"s3\"] = service\n-}\n-\n-func custAddDualstack(p *partition, svcName string) {\n-\ts, ok := p.Services[svcName]\n-\tif !ok {\n-\t\treturn\n-\t}\n-\n-\ts.Defaults.HasDualStack = boxedTrue\n-\ts.Defaults.DualStackHostname = \"{service}.dualstack.{region}.{dnsSuffix}\"\n-\n-\tp.Services[svcName] = s\n-}\n-\n-func custAddEC2Metadata(p *partition) {\n-\tp.Services[\"ec2metadata\"] = service{\n-\t\tIsRegionalized:    boxedFalse,\n-\t\tPartitionEndpoint: \"aws-global\",\n-\t\tEndpoints: endpoints{\n-\t\t\t\"aws-global\": endpoint{\n-\t\t\t\tHostname:  \"169.254.169.254/latest\",\n-\t\t\t\tProtocols: []string{\"http\"},\n-\t\t\t},\n-\t\t},\n-\t}\n-}\n-\n-func custRmIotDataService(p *partition) {\n-\tdelete(p.Services, \"data.iot\")\n-}\n-\n-func custFixAppAutoscalingChina(p *partition) {\n-\tif p.ID != \"aws-cn\" {\n-\t\treturn\n-\t}\n-\n-\tconst serviceName = \"application-autoscaling\"\n-\ts, ok := p.Services[serviceName]\n-\tif !ok {\n-\t\treturn\n-\t}\n-\n-\tconst expectHostname = `autoscaling.{region}.amazonaws.com`\n-\tif e, a := s.Defaults.Hostname, expectHostname; e != a {\n-\t\tfmt.Printf(\"custFixAppAutoscalingChina: ignoring customization, expected %s, got %s\\n\", e, a)\n-\t\treturn\n-\t}\n-\n-\ts.Defaults.Hostname = expectHostname + \".cn\"\n-\tp.Services[serviceName] = s\n-}\n-\n-func custFixAppAutoscalingUsGov(p *partition) {\n-\tif p.ID != \"aws-us-gov\" {\n-\t\treturn\n-\t}\n-\n-\tconst serviceName = \"application-autoscaling\"\n-\ts, ok := p.Services[serviceName]\n-\tif !ok {\n-\t\treturn\n-\t}\n-\n-\tif a := s.Defaults.CredentialScope.Service; a != \"\" {\n-\t\tfmt.Printf(\"custFixAppAutoscalingUsGov: ignoring customization, expected empty credential scope service, got %s\\n\", a)\n-\t\treturn\n-\t}\n-\n-\tif a := s.Defaults.Hostname; a != \"\" {\n-\t\tfmt.Printf(\"custFixAppAutoscalingUsGov: ignoring customization, expected empty hostname, got %s\\n\", a)\n-\t\treturn\n-\t}\n-\n-\ts.Defaults.CredentialScope.Service = \"application-autoscaling\"\n-\ts.Defaults.Hostname = \"autoscaling.{region}.amazonaws.com\"\n-\n-\tp.Services[serviceName] = s\n-}\n-\n-type decodeModelError struct {\n-\tawsError\n-}\n-\n-func newDecodeModelError(msg string, err error) decodeModelError {\n-\treturn decodeModelError{\n-\t\tawsError: awserr.New(\"DecodeEndpointsModelError\", msg, err),\n-\t}\n-}"
    },
    {
      "sha": "a184239a48c45149c052a76decb66319a5305804",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/defaults.go",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/defaults.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/defaults.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/defaults.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "ca8fc828e15986a6fec6629dc1a6cebb4a9eae25",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/dep_service_ids.go",
      "status": "removed",
      "additions": 0,
      "deletions": 141,
      "changes": 141,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/dep_service_ids.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/dep_service_ids.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/dep_service_ids.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "84316b92c05321d5a4784294727a8d0a5b29573c",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/doc.go",
      "status": "removed",
      "additions": 0,
      "deletions": 66,
      "changes": 66,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/doc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/doc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/doc.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "ca956e5f12affac499bb80a882d0e36d40e4a63a",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/endpoints.go",
      "status": "removed",
      "additions": 0,
      "deletions": 564,
      "changes": 564,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/endpoints.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/endpoints.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/endpoints.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "df75e899adbe802ac9c636afa455b8e6a9ef21c9",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/legacy_regions.go",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/legacy_regions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/legacy_regions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/legacy_regions.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "773613722f490ccb7d6c7e94a8d90f036e74b64f",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/v3model.go",
      "status": "removed",
      "additions": 0,
      "deletions": 351,
      "changes": 351,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/v3model.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/v3model.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/v3model.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "0fdfcc56e05d16d0e0b526a39f413fcf00c4a02e",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/v3model_codegen.go",
      "status": "removed",
      "additions": 0,
      "deletions": 351,
      "changes": 351,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/v3model_codegen.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/v3model_codegen.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/endpoints/v3model_codegen.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "fa06f7a8f8b80c46104b6a992f1280abf11e37c6",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/errors.go",
      "status": "removed",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/errors.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/errors.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/errors.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "91a6f277a7eb2e00c98283ef989075cb5ec0c210",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/jsonvalue.go",
      "status": "removed",
      "additions": 0,
      "deletions": 12,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/jsonvalue.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/jsonvalue.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/jsonvalue.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "6ed15b2ecc26de07405d5f6a5483f39736fb6baf",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/logger.go",
      "status": "removed",
      "additions": 0,
      "deletions": 118,
      "changes": 118,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/logger.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/logger.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/logger.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "2ba3c56c11fb9505d357e8924ed9c87eabf5d910",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/request/connection_reset_error.go",
      "status": "removed",
      "additions": 0,
      "deletions": 19,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/connection_reset_error.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/connection_reset_error.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/request/connection_reset_error.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "e819ab6c0e875815b25fd9a6565e031ac4b05b77",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/request/handlers.go",
      "status": "removed",
      "additions": 0,
      "deletions": 343,
      "changes": 343,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/handlers.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/handlers.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/request/handlers.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "79f79602b03f880fea6d4f504edce708fd9c1702",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/request/http_request.go",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/http_request.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/http_request.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/request/http_request.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "9370fa50c3827d6d7325ada6b3b9c4da619f0fe0",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/request/offset_reader.go",
      "status": "removed",
      "additions": 0,
      "deletions": 65,
      "changes": 65,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/offset_reader.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/offset_reader.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/request/offset_reader.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "d597c6ead555bb5a151ef86d3cac1607d74d6a6b",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/request/request.go",
      "status": "removed",
      "additions": 0,
      "deletions": 698,
      "changes": 698,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/request.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/request.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/request/request.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "e36e468b7c61d2fa73f313cac00b0d1aff982fd8",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_1_7.go",
      "status": "removed",
      "additions": 0,
      "deletions": 39,
      "changes": 39,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_1_7.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_1_7.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_1_7.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "de1292f45a23d6fe7c23725c809f97b66a0eb952",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_1_8.go",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_1_8.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_1_8.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_1_8.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "a7365cd1e46edc442fe1f0e92d1f9ed6de24ab22",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_context.go",
      "status": "removed",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_context.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_context.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_context.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "307fa0705be617880a40d437103d9bb3e670ea4e",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_context_1_6.go",
      "status": "removed",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_context_1_6.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_context_1_6.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_context_1_6.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "64784e16f3dec95f8de8131e67767b5d5655ac21",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_pagination.go",
      "status": "removed",
      "additions": 0,
      "deletions": 266,
      "changes": 266,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_pagination.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_pagination.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/request/request_pagination.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "752ae47f8459a7fa1c375e0a0edd0469209eb63d",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/request/retryer.go",
      "status": "removed",
      "additions": 0,
      "deletions": 309,
      "changes": 309,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/retryer.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/retryer.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/request/retryer.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "09a44eb987ac4697baf28d0a887cceaa99c1de81",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/request/timeout_read_closer.go",
      "status": "removed",
      "additions": 0,
      "deletions": 94,
      "changes": 94,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/timeout_read_closer.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/timeout_read_closer.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/request/timeout_read_closer.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "8630683f3174b3a0a35e33b1610485f695d88452",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/request/validation.go",
      "status": "removed",
      "additions": 0,
      "deletions": 286,
      "changes": 286,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/validation.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/validation.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/request/validation.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "4601f883cc5121a3ec2ec7a91e1ce32e64ccbc08",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/request/waiter.go",
      "status": "removed",
      "additions": 0,
      "deletions": 295,
      "changes": 295,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/waiter.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/request/waiter.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/request/waiter.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    },
    {
      "sha": "6aa2ed241bb138b6b0242858d4e2fbe615174426",
      "filename": "backend/vendor/github.com/aws/aws-sdk-go/aws/signer/v4/options.go",
      "status": "removed",
      "additions": 0,
      "deletions": 7,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/signer/v4/options.go",
      "raw_url": "https://github.com/umputun/remark42/raw/5c59e87f948223029c44653a819549bca1d88793/backend/vendor/github.com/aws/aws-sdk-go/aws/signer/v4/options.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/aws/aws-sdk-go/aws/signer/v4/options.go?ref=5c59e87f948223029c44653a819549bca1d88793"
    }
  ]
}
