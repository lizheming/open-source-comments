{
  "sha": "7f3240ea3152578a545ac4d8ed87465619b0e14c",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODo3ZjMyNDBlYTMxNTI1NzhhNTQ1YWM0ZDhlZDg3NDY1NjE5YjBlMTRj",
  "commit": {
    "author": {
      "name": "Dan Ungureanu",
      "email": "dan@ungureanu.me",
      "date": "2021-03-06T11:29:35Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2021-03-06T11:29:35Z"
    },
    "message": "FEATURE: Various improvements to invite system (#12298)\n\n* FIX: Do not show expired invites under Pending tab\r\n\r\n* DEV: Controller action was renamed in previous commit\r\n\r\n* FEATURE: Add 'Expired' tab to invites\r\n\r\n* FEATURE: Refresh model after removing expired invites\r\n\r\n* FEATURE: Do not immediately add invite to the list\r\n\r\nOpening the 'create-invite' modal used to automatically generate an\r\ninvite to reserve an invite link. If the user did not save it and\r\nclosed the modal, the invite would be destroyed. This operations caused\r\nthe invite list to change in the background and confuse users.\r\n\r\n* FEATURE: Sort redeemed users by creation time\r\n\r\n* UX: Improve show / hide advanced options link\r\n\r\n* FIX: Show redeemed users even if invites were trashed\r\n\r\n* UX: Change modal title when editing invite\r\n\r\n* UX: Remove Get Link button\r\n\r\nUsers can get it from the edit modal\r\n\r\n* FEATURE: Add limit for invite links generated by regular users\r\n\r\n* FEATURE: Add option to skip email\r\n\r\n* UX: Show better error messages\r\n\r\n* FIX: Show \"Invited by\" even if invite was trashed\r\n\r\nFollow up to 1fdfa13a099d8e46edd0c481b3aaaafe40455ced.\r\n\r\n* FEATURE: Add button to save without sending email\r\n\r\nFollow up to c86379a465f28a3cc64a4a8c939cf32cf2931659.\r\n\r\n* DEV: Use a buffer to hold all changed data\r\n\r\n* FEATURE: Close modal after save\r\n\r\n* FEATURE: Rate limit resend invite email\r\n\r\n* FEATURE: Make the save buttons smarter\r\n\r\n* FEATURE: Do not always send email even for new invites",
    "tree": {
      "sha": "871519470ce3abc3a2074dac5900a2976c5f5bc2",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/871519470ce3abc3a2074dac5900a2976c5f5bc2"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/7f3240ea3152578a545ac4d8ed87465619b0e14c",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgQ2efCRBK7hj4Ov3rIwAAdHIIABOfJiZSdG1UU0IyqaYZ36wF\nQA5pDqQOT9Zm+bRL/cRfdGJo6qM8uK/CXmHuLWfR11/8rG3i2sKabSuuNJfKM+q6\nWOX2lZEQ7AetspxC1MxGaWCVEsh/8l5ULXN6YFCuwI82KaG+YH/6toEQfovxlE70\nRGeRjoqjrTjseizpxRSIJwgu0WBIQ5zqM+EYFnLc75XiyHczXnEnPkZ0wDefsaAf\n7bTGuCyHLmKWExar3z+CyxjFTY0FCRSXs8v5kV0qBVESt1t6eOOnfoSSonbf8jvF\nuNnIzLstnFXHi10KTlXz6Pd3Rqmiq6PELHDvhsJ/UEMpmHbjfRdXwmtD2AE7lcA=\n=9n5j\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 871519470ce3abc3a2074dac5900a2976c5f5bc2\nparent fae2fc0b5e704d4612fa8ddd6ecb93e4f2e3a5be\nauthor Dan Ungureanu <dan@ungureanu.me> 1615030175 +0200\ncommitter GitHub <noreply@github.com> 1615030175 +0200\n\nFEATURE: Various improvements to invite system (#12298)\n\n* FIX: Do not show expired invites under Pending tab\r\n\r\n* DEV: Controller action was renamed in previous commit\r\n\r\n* FEATURE: Add 'Expired' tab to invites\r\n\r\n* FEATURE: Refresh model after removing expired invites\r\n\r\n* FEATURE: Do not immediately add invite to the list\r\n\r\nOpening the 'create-invite' modal used to automatically generate an\r\ninvite to reserve an invite link. If the user did not save it and\r\nclosed the modal, the invite would be destroyed. This operations caused\r\nthe invite list to change in the background and confuse users.\r\n\r\n* FEATURE: Sort redeemed users by creation time\r\n\r\n* UX: Improve show / hide advanced options link\r\n\r\n* FIX: Show redeemed users even if invites were trashed\r\n\r\n* UX: Change modal title when editing invite\r\n\r\n* UX: Remove Get Link button\r\n\r\nUsers can get it from the edit modal\r\n\r\n* FEATURE: Add limit for invite links generated by regular users\r\n\r\n* FEATURE: Add option to skip email\r\n\r\n* UX: Show better error messages\r\n\r\n* FIX: Show \"Invited by\" even if invite was trashed\r\n\r\nFollow up to 1fdfa13a099d8e46edd0c481b3aaaafe40455ced.\r\n\r\n* FEATURE: Add button to save without sending email\r\n\r\nFollow up to c86379a465f28a3cc64a4a8c939cf32cf2931659.\r\n\r\n* DEV: Use a buffer to hold all changed data\r\n\r\n* FEATURE: Close modal after save\r\n\r\n* FEATURE: Rate limit resend invite email\r\n\r\n* FEATURE: Make the save buttons smarter\r\n\r\n* FEATURE: Do not always send email even for new invites"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/7f3240ea3152578a545ac4d8ed87465619b0e14c",
  "html_url": "https://github.com/discourse/discourse/commit/7f3240ea3152578a545ac4d8ed87465619b0e14c",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/7f3240ea3152578a545ac4d8ed87465619b0e14c/comments",
  "author": {
    "login": "udan11",
    "id": 4147664,
    "node_id": "MDQ6VXNlcjQxNDc2NjQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4147664?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/udan11",
    "html_url": "https://github.com/udan11",
    "followers_url": "https://api.github.com/users/udan11/followers",
    "following_url": "https://api.github.com/users/udan11/following{/other_user}",
    "gists_url": "https://api.github.com/users/udan11/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/udan11/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/udan11/subscriptions",
    "organizations_url": "https://api.github.com/users/udan11/orgs",
    "repos_url": "https://api.github.com/users/udan11/repos",
    "events_url": "https://api.github.com/users/udan11/events{/privacy}",
    "received_events_url": "https://api.github.com/users/udan11/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fae2fc0b5e704d4612fa8ddd6ecb93e4f2e3a5be",
      "url": "https://api.github.com/repos/discourse/discourse/commits/fae2fc0b5e704d4612fa8ddd6ecb93e4f2e3a5be",
      "html_url": "https://github.com/discourse/discourse/commit/fae2fc0b5e704d4612fa8ddd6ecb93e4f2e3a5be"
    }
  ],
  "stats": {
    "total": 337,
    "additions": 241,
    "deletions": 96
  },
  "files": [
    {
      "sha": "d01ed48acb6523ccead5b95b03d3bed3f56f53b3",
      "filename": "app/assets/javascripts/discourse/app/controllers/create-invite.js",
      "status": "modified",
      "additions": 45,
      "deletions": 41,
      "changes": 86,
      "blob_url": "https://github.com/discourse/discourse/blob/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/assets/javascripts/discourse/app/controllers/create-invite.js",
      "raw_url": "https://github.com/discourse/discourse/raw/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/assets/javascripts/discourse/app/controllers/create-invite.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/controllers/create-invite.js?ref=7f3240ea3152578a545ac4d8ed87465619b0e14c",
      "patch": "@@ -7,7 +7,6 @@ import { bufferedProperty } from \"discourse/mixins/buffered-content\";\n import ModalFunctionality from \"discourse/mixins/modal-functionality\";\n import Group from \"discourse/models/group\";\n import Invite from \"discourse/models/invite\";\n-import I18n from \"I18n\";\n \n export default Controller.extend(\n   ModalFunctionality,\n@@ -20,14 +19,9 @@ export default Controller.extend(\n \n     autogenerated: false,\n     showAdvanced: false,\n-    showOnly: false,\n \n     type: \"link\",\n \n-    topicId: null,\n-    topicTitle: null,\n-    groupIds: null,\n-\n     onShow() {\n       Group.findAll().then((groups) => {\n         this.set(\"allGroups\", groups.filterBy(\"automatic\", false));\n@@ -36,7 +30,6 @@ export default Controller.extend(\n       this.setProperties({\n         autogenerated: false,\n         showAdvanced: false,\n-        showOnly: false,\n       });\n \n       this.setInvite(Invite.create());\n@@ -54,38 +47,45 @@ export default Controller.extend(\n       this.setProperties({\n         invite,\n         type: invite.email ? \"email\" : \"link\",\n-        groupIds: invite.groups ? invite.groups.map((g) => g.id) : null,\n       });\n-\n-      if (invite.topics && invite.topics.length > 0) {\n-        this.setProperties({\n-          topicId: invite.topics[0].id,\n-          topicTitle: invite.topics[0].title,\n-        });\n-      } else {\n-        this.setProperties({ topicId: null, topicTitle: null });\n-      }\n     },\n \n-    save(autogenerated) {\n-      this.set(\"autogenerated\", autogenerated);\n+    save(opts) {\n+      const newRecord =\n+        (this.autogenerated || !this.invite.id) && !opts.autogenerated;\n \n-      const data = {\n-        group_ids: this.groupIds,\n-        topic_id: this.topicId,\n-        expires_at: this.buffered.get(\"expires_at\"),\n-      };\n+      this.set(\"autogenerated\", opts.autogenerated);\n+\n+      const data = { ...this.buffered.buffer };\n+\n+      if (data.groupIds !== undefined) {\n+        data.group_ids = data.groupIds;\n+        delete data.groupIds;\n+      }\n+\n+      if (data.topicId !== undefined) {\n+        data.topic_id = data.topicId;\n+        delete data.topicId;\n+        delete data.topicTitle;\n+      }\n \n       if (this.type === \"link\") {\n-        data.max_redemptions_allowed = this.buffered.get(\n-          \"max_redemptions_allowed\"\n-        );\n+        if (this.buffered.get(\"email\")) {\n+          data.email = \"\";\n+          data.custom_message = \"\";\n+        }\n       } else if (this.type === \"email\") {\n-        data.email = this.buffered.get(\"email\");\n-        data.custom_message = this.buffered.get(\"custom_message\");\n+        if (this.buffered.get(\"max_redemptions_allowed\") > 1) {\n+          data.max_redemptions_allowed = 1;\n+        }\n+\n+        if (opts.sendEmail) {\n+          data.send_email = true;\n+        } else {\n+          data.skip_email = true;\n+        }\n       }\n \n-      const newRecord = !this.invite.id;\n       return this.invite\n         .save(data)\n         .then(() => {\n@@ -96,10 +96,7 @@ export default Controller.extend(\n           }\n \n           if (!this.autogenerated) {\n-            this.appEvents.trigger(\"modal-body:flash\", {\n-              text: I18n.t(\"user.invited.invite.invite_saved\"),\n-              messageClass: \"success\",\n-            });\n+            this.send(\"closeModal\");\n           }\n         })\n         .catch((e) =>\n@@ -113,6 +110,15 @@ export default Controller.extend(\n     isLink: equal(\"type\", \"link\"),\n     isEmail: equal(\"type\", \"email\"),\n \n+    @discourseComputed(\n+      \"currentUser.staff\",\n+      \"siteSettings.invite_link_max_redemptions_limit\",\n+      \"siteSettings.invite_link_max_redemptions_limit_users\"\n+    )\n+    maxRedemptionsAllowedLimit(staff, staffLimit, usersLimit) {\n+      return staff ? staffLimit : usersLimit;\n+    },\n+\n     @discourseComputed(\"buffered.expires_at\")\n     expiresAtRelative(expires_at) {\n       return moment.duration(moment(expires_at) - moment()).humanize();\n@@ -127,18 +133,16 @@ export default Controller.extend(\n       return false;\n     },\n \n-    @discourseComputed(\"type\", \"invite.email\", \"buffered.email\")\n-    saveLabel(type, email, bufferedEmail) {\n-      return type === \"email\" && email !== bufferedEmail\n-        ? \"user.invited.invite.send_invite_email\"\n-        : \"user.invited.invite.save_invite\";\n+    @discourseComputed(\"buffered.hasBufferedChanges\", \"invite.email\", \"type\")\n+    changed(hasBufferedChanges, inviteEmail, type) {\n+      return hasBufferedChanges || (inviteEmail ? \"email\" : \"link\") !== type;\n     },\n \n     @action\n-    saveInvite() {\n+    saveInvite(sendEmail) {\n       this.appEvents.trigger(\"modal-body:clearFlash\");\n \n-      this.save();\n+      this.save({ sendEmail });\n     },\n   }\n );"
    },
    {
      "sha": "3cffa2cbacdde57bcbf98830b6e97470cae60d42",
      "filename": "app/assets/javascripts/discourse/app/controllers/user-invited-show.js",
      "status": "modified",
      "additions": 14,
      "deletions": 8,
      "changes": 22,
      "blob_url": "https://github.com/discourse/discourse/blob/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/assets/javascripts/discourse/app/controllers/user-invited-show.js",
      "raw_url": "https://github.com/discourse/discourse/raw/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/assets/javascripts/discourse/app/controllers/user-invited-show.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/controllers/user-invited-show.js?ref=7f3240ea3152578a545ac4d8ed87465619b0e14c",
      "patch": "@@ -42,6 +42,7 @@ export default Controller.extend({\n   },\n \n   inviteRedeemed: equal(\"filter\", \"redeemed\"),\n+  inviteExpired: equal(\"filter\", \"expired\"),\n   invitePending: equal(\"filter\", \"pending\"),\n \n   @discourseComputed(\"filter\")\n@@ -72,6 +73,17 @@ export default Controller.extend({\n     }\n   },\n \n+  @discourseComputed(\"invitesCount.total\", \"invitesCount.expired\")\n+  expiredLabel(invitesCountTotal, invitesCountExpired) {\n+    if (invitesCountTotal > 0) {\n+      return I18n.t(\"user.invited.expired_tab_with_count\", {\n+        count: invitesCountExpired,\n+      });\n+    } else {\n+      return I18n.t(\"user.invited.expired_tab\");\n+    }\n+  },\n+\n   @discourseComputed(\"invitesCount.total\", \"invitesCount.redeemed\")\n   redeemedLabel(invitesCountTotal, invitesCountRedeemed) {\n     if (invitesCountTotal > 0) {\n@@ -87,7 +99,7 @@ export default Controller.extend({\n   createInvite() {\n     const controller = showModal(\"create-invite\");\n     controller.set(\"invites\", this.model.invites);\n-    controller.save(true);\n+    controller.save({ autogenerated: true });\n   },\n \n   @action\n@@ -102,13 +114,6 @@ export default Controller.extend({\n     controller.setInvite(invite);\n   },\n \n-  @action\n-  showInvite(invite) {\n-    const controller = showModal(\"create-invite\");\n-    controller.set(\"showOnly\", true);\n-    controller.setInvite(invite);\n-  },\n-\n   @action\n   destroyInvite(invite) {\n     invite.destroy();\n@@ -122,6 +127,7 @@ export default Controller.extend({\n         Invite.destroyAllExpired()\n           .then(() => {\n             this.set(\"removedAll\", true);\n+            this.send(\"triggerRefresh\");\n           })\n           .catch(popupAjaxError);\n       }"
    },
    {
      "sha": "34f44ff780897d815047f076af7b0b672932e279",
      "filename": "app/assets/javascripts/discourse/app/models/invite.js",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/discourse/discourse/blob/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/assets/javascripts/discourse/app/models/invite.js",
      "raw_url": "https://github.com/discourse/discourse/raw/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/assets/javascripts/discourse/app/models/invite.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/models/invite.js?ref=7f3240ea3152578a545ac4d8ed87465619b0e14c",
      "patch": "@@ -1,5 +1,7 @@\n import EmberObject from \"@ember/object\";\n+import { alias } from \"@ember/object/computed\";\n import { Promise } from \"rsvp\";\n+import discourseComputed from \"discourse-common/utils/decorators\";\n import User from \"discourse/models/user\";\n import { ajax } from \"discourse/lib/ajax\";\n import { isNone } from \"@ember/utils\";\n@@ -30,6 +32,14 @@ const Invite = EmberObject.extend({\n       .then(() => this.set(\"reinvited\", true))\n       .catch(popupAjaxError);\n   },\n+\n+  @discourseComputed(\"groups\")\n+  groupIds(groups) {\n+    return groups ? groups.map((group) => group.id) : [];\n+  },\n+\n+  topicId: alias(\"topics.firstObject.id\"),\n+  topicTitle: alias(\"topics.firstObject.title\"),\n });\n \n Invite.reopenClass({"
    },
    {
      "sha": "fbc69250a9bd92af1393c556bced6a26760494b0",
      "filename": "app/assets/javascripts/discourse/app/routes/user-invited-show.js",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/assets/javascripts/discourse/app/routes/user-invited-show.js",
      "raw_url": "https://github.com/discourse/discourse/raw/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/assets/javascripts/discourse/app/routes/user-invited-show.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/routes/user-invited-show.js?ref=7f3240ea3152578a545ac4d8ed87465619b0e14c",
      "patch": "@@ -22,4 +22,10 @@ export default DiscourseRoute.extend({\n       searchTerm: \"\",\n     });\n   },\n+\n+  actions: {\n+    triggerRefresh() {\n+      this.refresh();\n+    },\n+  },\n });"
    },
    {
      "sha": "abb68054348be0d904c4d245162a882bff2f6d2d",
      "filename": "app/assets/javascripts/discourse/app/templates/modal/create-invite.hbs",
      "status": "modified",
      "additions": 27,
      "deletions": 23,
      "changes": 50,
      "blob_url": "https://github.com/discourse/discourse/blob/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/assets/javascripts/discourse/app/templates/modal/create-invite.hbs",
      "raw_url": "https://github.com/discourse/discourse/raw/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/assets/javascripts/discourse/app/templates/modal/create-invite.hbs",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/templates/modal/create-invite.hbs?ref=7f3240ea3152578a545ac4d8ed87465619b0e14c",
      "patch": "@@ -1,4 +1,4 @@\n-{{#d-modal-body title=(if showOnly \"user.invited.invite.show_link\" (if inviteId \"user.invited.invite.edit_title\" \"user.invited.invite.new_title\"))}}\n+{{#d-modal-body title=(if invite.id \"user.invited.invite.edit_title\" \"user.invited.invite.new_title\")}}\n   <div class=\"input-group\">\n     <label for=\"invite_link\">{{i18n \"user.invited.invite.instructions\"}}</label>\n     {{input name=\"invite_link\"\n@@ -10,17 +10,13 @@\n \n   <p>{{i18n \"user.invited.invite.expires_at_time\" time=expiresAtRelative}}</p>\n \n-  {{#unless showOnly}}\n-    <p>\n-      {{#if showAdvanced}}\n-        {{d-icon \"caret-down\"}}\n-        <a href {{action (mut showAdvanced) false}}>{{i18n \"user.invited.invite.hide_advanced\"}}</a>\n-      {{else}}\n-        {{d-icon \"caret-right\"}}\n-        <a href {{action (mut showAdvanced) true}}>{{i18n \"user.invited.invite.show_advanced\"}}</a>\n-      {{/if}}\n-    </p>\n-  {{/unless}}\n+  <p>\n+    {{#if showAdvanced}}\n+      <a href {{action (mut showAdvanced) false}}>{{d-icon \"caret-down\"}} {{i18n \"user.invited.invite.hide_advanced\"}}</a>\n+    {{else}}\n+      <a href {{action (mut showAdvanced) true}}>{{d-icon \"caret-right\"}} {{i18n \"user.invited.invite.show_advanced\"}}</a>\n+    {{/if}}\n+  </p>\n \n   {{#if showAdvanced}}\n     <div class=\"input-group\">\n@@ -43,7 +39,7 @@\n           type=\"number\"\n           value=buffered.max_redemptions_allowed\n           min=\"1\"\n-          max=siteSettings.invite_link_max_redemptions_limit\n+          max=maxRedemptionsAllowedLimit\n         }}\n       </div>\n     {{/if}}\n@@ -64,16 +60,16 @@\n         <label>{{i18n \"user.invited.invite.add_to_groups\"}}</label>\n         {{group-chooser\n           content=allGroups\n-          value=groupIds\n+          value=buffered.groupIds\n           labelProperty=\"name\"\n-          onChange=(action (mut groupIds))\n+          onChange=(action (mut buffered.groupIds))\n         }}\n       </div>\n \n       <div class=\"input-group\">\n         {{choose-topic\n-          selectedTopicId=topicId\n-          topicTitle=topicTitle\n+          selectedTopicId=buffered.topicId\n+          topicTitle=buffered.topicTitle\n           additionalFilters=\"status:public\"\n           label=\"user.invited.invite.invite_to_topic\"\n         }}\n@@ -100,19 +96,27 @@\n {{/d-modal-body}}\n \n <div class=\"modal-footer\">\n-  {{#unless showOnly}}\n+  {{#if isEmail}}\n     {{d-button\n-      icon=(if isEmail \"envelope\" \"link\")\n-      label=saveLabel\n+      icon=\"envelope\"\n+      label=(if changed \"user.invited.invite.send_invite_email\" \"user.invited.reinvite\")\n       class=\"btn-primary\"\n-      action=(action \"saveInvite\")\n+      action=(action \"saveInvite\" true)\n       disabled=disabled\n     }}\n-  {{/unless}}\n+  {{/if}}\n \n   {{d-button\n-    label=\"close\"\n+    icon=\"link\"\n+    label=\"user.invited.invite.save_invite\"\n     class=\"btn-primary\"\n+    action=(action \"saveInvite\")\n+    disabled=disabled\n+  }}\n+\n+  {{d-button\n+    label=\"cancel\"\n+    class=\"btn-flat\"\n     action=(route-action \"closeModal\")\n   }}\n </div>"
    },
    {
      "sha": "8dbbbe4899dc95ddd7af1a9b33ea54d04bffd15f",
      "filename": "app/assets/javascripts/discourse/app/templates/user-invited-show.hbs",
      "status": "modified",
      "additions": 30,
      "deletions": 4,
      "changes": 34,
      "blob_url": "https://github.com/discourse/discourse/blob/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/assets/javascripts/discourse/app/templates/user-invited-show.hbs",
      "raw_url": "https://github.com/discourse/discourse/raw/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/assets/javascripts/discourse/app/templates/user-invited-show.hbs",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/templates/user-invited-show.hbs?ref=7f3240ea3152578a545ac4d8ed87465619b0e14c",
      "patch": "@@ -7,6 +7,7 @@\n             <nav>\n               <ul class=\"nav nav-pills\">\n                 {{nav-item route=\"userInvited.show\" routeParam=\"pending\" i18nLabel=pendingLabel}}\n+                {{nav-item route=\"userInvited.show\" routeParam=\"expired\" i18nLabel=expiredLabel}}\n                 {{nav-item route=\"userInvited.show\" routeParam=\"redeemed\" i18nLabel=redeemedLabel}}\n               </ul>\n             </nav>\n@@ -79,6 +80,35 @@\n                 {{/each}}\n               </tbody>\n             </table>\n+          {{else if inviteExpired}}\n+            <table class=\"table user-invite-list\">\n+              <thead>\n+                <tr>\n+                  <th>{{i18n \"user.invited.invited_via\"}}</th>\n+                  <th>{{i18n \"user.invited.sent\"}}</th>\n+                  <th>{{i18n \"user.invited.expires_at\"}}</th>\n+                  <th></th>\n+                </tr>\n+              </thead>\n+              <tbody>\n+                {{#each model.invites as |invite|}}\n+                  <tr>\n+                    <td>\n+                      {{#if invite.email}}\n+                        {{invite.email}}\n+                      {{else}}\n+                        {{i18n \"user.invited.invited_via_link\" count=invite.redemption_count max=invite.max_redemptions_allowed}}\n+                      {{/if}}\n+                    </td>\n+                    <td>{{raw-date invite.updated_at}}</td>\n+                    <td>{{raw-date invite.expires_at}}</td>\n+                    <td class=\"actions\">\n+                      {{d-button icon=\"trash-alt\" class=\"cancel\" action=(action \"destroyInvite\" invite) title=(if invite.destroyed \"user.invited.removed\" \"user.invited.remove\")}}\n+                    </td>\n+                  </tr>\n+                {{/each}}\n+              </tbody>\n+            </table>\n           {{else}}\n             <table class=\"table user-invite-list\">\n               <thead>\n@@ -122,10 +152,6 @@\n                     <td class=\"actions\">\n                       {{d-button icon=\"pencil-alt\" action=(action \"editInvite\" invite) title=\"user.invited.edit\"}}\n                       {{d-button icon=\"trash-alt\" class=\"cancel\" action=(action \"destroyInvite\" invite) title=(if invite.destroyed \"user.invited.removed\" \"user.invited.remove\")}}\n-                      {{d-button icon=\"link\" action=(action \"showInvite\" invite) title=\"user.invited.copy_link\"}}\n-                      {{#if invite.email}}\n-                        {{d-button icon=\"sync\" action=(action \"reinvite\" invite) disabled=invite.reinvited label=(if invite.reinvited \"user.invited.reinvited\" \"user.invited.reinvite\")}}\n-                      {{/if}}\n                     </td>\n                   </tr>\n                 {{/each}}"
    },
    {
      "sha": "777ff6d848688219e7ee86f046a44c41d2ceab9f",
      "filename": "app/assets/stylesheets/common/base/modal.scss",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/assets/stylesheets/common/base/modal.scss",
      "raw_url": "https://github.com/discourse/discourse/raw/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/assets/stylesheets/common/base/modal.scss",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/stylesheets/common/base/modal.scss?ref=7f3240ea3152578a545ac4d8ed87465619b0e14c",
      "patch": "@@ -843,7 +843,7 @@\n \n   .radio-group {\n     input[type=\"radio\"] {\n-      display: table-cell;\n+      display: inline;\n       vertical-align: middle;\n       margin-top: -1px;\n     }"
    },
    {
      "sha": "0c3c615f5bdc9e81c168165e68e6bb6040b0a68a",
      "filename": "app/controllers/invites_controller.rb",
      "status": "modified",
      "additions": 23,
      "deletions": 5,
      "changes": 28,
      "blob_url": "https://github.com/discourse/discourse/blob/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/controllers/invites_controller.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/controllers/invites_controller.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/controllers/invites_controller.rb?ref=7f3240ea3152578a545ac4d8ed87465619b0e14c",
      "patch": "@@ -2,7 +2,7 @@\n \n class InvitesController < ApplicationController\n \n-  requires_login only: [:create, :destroy, :destroy_all, :resend_invite, :resend_all_invites, :upload_csv]\n+  requires_login only: [:create, :destroy, :destroy_all_expired, :resend_invite, :resend_all_invites, :upload_csv]\n \n   skip_before_action :check_xhr, except: [:perform_accept_invitation]\n   skip_before_action :preload_json, except: [:show]\n@@ -73,7 +73,7 @@ def create\n         render json: failed_json, status: 422\n       end\n     rescue Invite::UserExists, ActiveRecord::RecordInvalid => e\n-      render json: { errors: [e.message] }, status: 422\n+      render_json_error(e.message)\n     end\n   end\n \n@@ -109,13 +109,31 @@ def update\n         new_email = params[:email].presence\n \n         if old_email != new_email\n-          invite.emailed_status = Invite.emailed_status_types[new_email ? :pending : :not_required]\n+          invite.emailed_status = if new_email && !params[:skip_email]\n+            Invite.emailed_status_types[:pending]\n+          else\n+            Invite.emailed_status_types[:not_required]\n+          end\n+        end\n+      end\n+\n+      if params[:send_email]\n+        if invite.emailed_status != Invite.emailed_status_types[:pending]\n+          begin\n+            RateLimiter.new(current_user, \"resend-invite-per-hour\", 10, 1.hour).performed!\n+          rescue RateLimiter::LimitExceeded\n+            return render_json_error(I18n.t(\"rate_limiter.slow_down\"))\n+          end\n         end\n \n-        invite.email = new_email\n+        invite.emailed_status = Invite.emailed_status_types[:pending]\n       end\n \n-      invite.update!(params.permit(:custom_message, :max_redemptions_allowed, :expires_at))\n+      begin\n+        invite.update!(params.permit(:email, :custom_message, :max_redemptions_allowed, :expires_at))\n+      rescue ActiveRecord::RecordInvalid => e\n+        return render_json_error(e.message)\n+      end\n     end\n \n     if invite.emailed_status == Invite.emailed_status_types[:pending]"
    },
    {
      "sha": "efed469d0eb237a89e2ecc0b530f1e19cc39a657",
      "filename": "app/controllers/users_controller.rb",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/controllers/users_controller.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/controllers/users_controller.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/controllers/users_controller.rb?ref=7f3240ea3152578a545ac4d8ed87465619b0e14c",
      "patch": "@@ -407,6 +407,8 @@ def invited\n \n       invites = if filter == \"pending\" && guardian.can_see_invite_details?(inviter)\n         Invite.includes(:topics, :groups).pending(inviter)\n+      elsif filter == \"expired\"\n+        Invite.expired(inviter)\n       elsif filter == \"redeemed\"\n         Invite.redeemed_users(inviter)\n       else\n@@ -423,6 +425,7 @@ def invited\n       end\n \n       pending_count = Invite.pending(inviter).reorder(nil).count.to_i\n+      expired_count = Invite.expired(inviter).reorder(nil).count.to_i\n       redeemed_count = Invite.redeemed_users(inviter).reorder(nil).count.to_i\n \n       render json: MultiJson.dump(InvitedSerializer.new(\n@@ -433,8 +436,9 @@ def invited\n           type: filter,\n           counts: {\n             pending: pending_count,\n+            expired: expired_count,\n             redeemed: redeemed_count,\n-            total: pending_count + redeemed_count\n+            total: pending_count + expired_count\n           }\n         ),\n         scope: guardian,"
    },
    {
      "sha": "53d4293a5b042ecf3ffbbc44b2c680d456a529f8",
      "filename": "app/models/invite.rb",
      "status": "modified",
      "additions": 25,
      "deletions": 5,
      "changes": 30,
      "blob_url": "https://github.com/discourse/discourse/blob/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/models/invite.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/models/invite.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/invite.rb?ref=7f3240ea3152578a545ac4d8ed87465619b0e14c",
      "patch": "@@ -55,7 +55,12 @@ def user_doesnt_already_exist\n \n     if user && user.id != self.invited_users&.first&.user_id\n       @email_already_exists = true\n-      errors.add(:email)\n+      errors.add(:email, I18n.t(\n+        \"invite.user_exists\",\n+        email: email,\n+        username: user.username,\n+        base_path: Discourse.base_path\n+      ))\n     end\n   end\n \n@@ -181,16 +186,26 @@ def self.pending(inviter)\n       .joins(\"LEFT JOIN users ON invited_users.user_id = users.id\")\n       .where(invited_by_id: inviter.id)\n       .where('redemption_count < max_redemptions_allowed')\n+      .where('expires_at > ?', Time.zone.now)\n       .order('invites.updated_at DESC')\n   end\n \n+  def self.expired(inviter)\n+    Invite.distinct\n+      .joins(\"LEFT JOIN invited_users ON invites.id = invited_users.invite_id\")\n+      .joins(\"LEFT JOIN users ON invited_users.user_id = users.id\")\n+      .where(invited_by_id: inviter.id)\n+      .where('redemption_count > max_redemptions_allowed OR expires_at < ?', Time.zone.now)\n+      .order('invites.expires_at ASC')\n+  end\n+\n   def self.redeemed_users(inviter)\n     InvitedUser\n-      .includes(:invite)\n+      .joins(\"LEFT JOIN invites ON invites.id = invited_users.invite_id\")\n       .includes(user: :user_stat)\n       .where('invited_users.user_id IS NOT NULL')\n       .where('invites.invited_by_id = ?', inviter.id)\n-      .order('user_stats.time_read DESC, invited_users.redeemed_at DESC')\n+      .order('invited_users.redeemed_at DESC')\n       .references('invite')\n       .references('user')\n       .references('user_stat')\n@@ -221,8 +236,13 @@ def self.base_directory\n   def ensure_max_redemptions_allowed\n     if self.max_redemptions_allowed.nil?\n       self.max_redemptions_allowed = 1\n-    elsif !self.max_redemptions_allowed.between?(1, SiteSetting.invite_link_max_redemptions_limit)\n-      errors.add(:max_redemptions_allowed, I18n.t(\"invite_link.max_redemptions_limit\", max_limit: SiteSetting.invite_link_max_redemptions_limit))\n+    else\n+      limit = invited_by&.staff? ? SiteSetting.invite_link_max_redemptions_limit\n+                                 : SiteSetting.invite_link_max_redemptions_limit_users\n+\n+      if !self.max_redemptions_allowed.between?(1, limit)\n+        errors.add(:max_redemptions_allowed, I18n.t(\"invite_link.max_redemptions_limit\", max_limit: limit))\n+      end\n     end\n   end\n "
    },
    {
      "sha": "efb994372f51fc0fbfb628af2c964dd65cb957af",
      "filename": "app/models/invited_user.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/models/invited_user.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/models/invited_user.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/invited_user.rb?ref=7f3240ea3152578a545ac4d8ed87465619b0e14c",
      "patch": "@@ -2,7 +2,7 @@\n \n class InvitedUser < ActiveRecord::Base\n   belongs_to :user\n-  belongs_to :invite\n+  belongs_to :invite, -> { unscope(where: :deleted_at) }\n \n   validates_presence_of :invite_id\n   validates_uniqueness_of :invite_id, scope: :user_id, conditions: -> { where.not(user_id: nil) }"
    },
    {
      "sha": "0d1f61b123716125cafd6c70085e54b86823023c",
      "filename": "app/models/user.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/models/user.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/models/user.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/user.rb?ref=7f3240ea3152578a545ac4d8ed87465619b0e14c",
      "patch": "@@ -446,7 +446,7 @@ def sync_notification_channel_position\n   end\n \n   def invited_by\n-    used_invite = Invite.joins(:invited_users).where(\"invited_users.user_id = ?\", self.id).first\n+    used_invite = Invite.with_deleted.joins(:invited_users).where(\"invited_users.user_id = ?\", self.id).first\n     used_invite.try(:invited_by)\n   end\n "
    },
    {
      "sha": "a0f76017e447411840471172435f4c497d8c10d6",
      "filename": "app/serializers/invited_serializer.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/serializers/invited_serializer.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/7f3240ea3152578a545ac4d8ed87465619b0e14c/app/serializers/invited_serializer.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/serializers/invited_serializer.rb?ref=7f3240ea3152578a545ac4d8ed87465619b0e14c",
      "patch": "@@ -6,7 +6,7 @@ class InvitedSerializer < ApplicationSerializer\n   def invites\n     ActiveModel::ArraySerializer.new(\n       object.invite_list,\n-      each_serializer: object.type == \"pending\" ? InviteSerializer : InvitedUserSerializer,\n+      each_serializer: object.type == \"pending\" || object.type == \"expired\" ? InviteSerializer : InvitedUserSerializer,\n       scope: scope,\n       root: false,\n       show_emails: object.show_emails"
    },
    {
      "sha": "614c2cf8d093c8e54d90f79afb601c3c47dbc246",
      "filename": "config/locales/client.en.yml",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/discourse/discourse/blob/7f3240ea3152578a545ac4d8ed87465619b0e14c/config/locales/client.en.yml",
      "raw_url": "https://github.com/discourse/discourse/raw/7f3240ea3152578a545ac4d8ed87465619b0e14c/config/locales/client.en.yml",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/config/locales/client.en.yml?ref=7f3240ea3152578a545ac4d8ed87465619b0e14c",
      "patch": "@@ -1442,6 +1442,8 @@ en:\n         title: \"Invites\"\n         pending_tab: \"Pending\"\n         pending_tab_with_count: \"Pending (%{count})\"\n+        expired_tab: \"Expired\"\n+        expired_tab_with_count: \"Expired (%{count})\"\n         redeemed_tab: \"Redeemed\"\n         redeemed_tab_with_count: \"Redeemed (%{count})\"\n         invited_via: \"Invitation\"\n@@ -1492,7 +1494,6 @@ en:\n         invite:\n           new_title: \"Create Invite\"\n           edit_title: \"Edit Invite\"\n-          show_link: \"Invite Link\"\n \n           instructions: \"Share this link to instantly grant access to this site:\"\n           copy_link: \"copy link\"\n@@ -1501,8 +1502,8 @@ en:\n           show_advanced: \"Show Advanced Options\"\n           hide_advanced: \"Hide Advanced Options\"\n \n-          type_email: \"Automatically send invitation link via email\"\n-          type_link: \"Manually share an invite link to people\"\n+          type_email: \"Invite just one email address\"\n+          type_link: \"Invite one or more people with a link\"\n \n           email: \"Limit to email address:\"\n           max_redemptions_allowed: \"Max number of uses:\"\n@@ -1512,7 +1513,7 @@ en:\n           expires_at: \"Expire after:\"\n           custom_message: \"Send email:\"\n \n-          send_invite_email: \"Send Invite Email\"\n+          send_invite_email: \"Save and Send Email\"\n           save_invite: \"Save Invite\"\n \n           invite_saved: \"Invite was saved.\""
    },
    {
      "sha": "b2f4128f9c5c7299b3b248b40201ee08abe64d73",
      "filename": "config/locales/server.en.yml",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/discourse/discourse/blob/7f3240ea3152578a545ac4d8ed87465619b0e14c/config/locales/server.en.yml",
      "raw_url": "https://github.com/discourse/discourse/raw/7f3240ea3152578a545ac4d8ed87465619b0e14c/config/locales/server.en.yml",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/config/locales/server.en.yml?ref=7f3240ea3152578a545ac4d8ed87465619b0e14c",
      "patch": "@@ -1758,6 +1758,7 @@ en:\n     max_post_deletions_per_day: \"Maximum number of posts a user can delete per day. Set to 0 to disable post deletions.\"\n \n     invite_link_max_redemptions_limit: \"Maximum redemptions allowed for invite links can't be more than this value.\"\n+    invite_link_max_redemptions_limit_users: \"Maximum redemptions allowed for invite links generated by regular users can't be more than this value.\"\n \n     alert_admins_if_errors_per_minute: \"Number of errors per minute in order to trigger an admin alert. A value of 0 disables this feature. NOTE: requires restart.\"\n     alert_admins_if_errors_per_hour: \"Number of errors per hour in order to trigger an admin alert. A value of 0 disables this feature. NOTE: requires restart.\""
    },
    {
      "sha": "5a6ef69af44d4b7b56b5ebbef94a225c806e0dc7",
      "filename": "config/site_settings.yml",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/discourse/discourse/blob/7f3240ea3152578a545ac4d8ed87465619b0e14c/config/site_settings.yml",
      "raw_url": "https://github.com/discourse/discourse/raw/7f3240ea3152578a545ac4d8ed87465619b0e14c/config/site_settings.yml",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/config/site_settings.yml?ref=7f3240ea3152578a545ac4d8ed87465619b0e14c",
      "patch": "@@ -1744,6 +1744,11 @@ rate_limits:\n     max: 1000000\n     default: 5000\n     client: true\n+  invite_link_max_redemptions_limit_users:\n+    min: 2\n+    max: 1000000\n+    default: 10\n+    client: true\n \n developer:\n   force_hostname:"
    },
    {
      "sha": "a84427a3f9752dcd9d51b6190a64cb03b65e9d57",
      "filename": "spec/models/invite_spec.rb",
      "status": "modified",
      "additions": 12,
      "deletions": 1,
      "changes": 13,
      "blob_url": "https://github.com/discourse/discourse/blob/7f3240ea3152578a545ac4d8ed87465619b0e14c/spec/models/invite_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/7f3240ea3152578a545ac4d8ed87465619b0e14c/spec/models/invite_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/models/invite_spec.rb?ref=7f3240ea3152578a545ac4d8ed87465619b0e14c",
      "patch": "@@ -449,6 +449,8 @@\n       pending_invite = Fabricate(:invite, invited_by: inviter, email: 'pending@example.com')\n       pending_link_invite = Fabricate(:invite, invited_by: inviter, max_redemptions_allowed: 5)\n \n+      expired_invite = Fabricate(:invite, invited_by: inviter, email: 'expired@example.com', expires_at: 1.day.ago)\n+\n       expect(Invite.pending(inviter)).to contain_exactly(pending_invite, pending_link_invite)\n     end\n   end\n@@ -465,9 +467,18 @@\n       expect(Invite.redeemed_users(inviter)).to contain_exactly(redeemed_invite.invited_users.first)\n     end\n \n+    it 'returns redeemed invites even if trashed' do\n+      inviter = Fabricate(:user)\n+      redeemed_invite = Fabricate(:invite, invited_by: inviter, email: 'redeemed@example.com')\n+      Fabricate(:invited_user, invite: redeemed_invite, user: Fabricate(:user))\n+      redeemed_invite.trash!\n+\n+      expect(Invite.redeemed_users(inviter)).to contain_exactly(redeemed_invite.invited_users.first)\n+    end\n+\n     it 'returns redeemed invites for invite links' do\n       inviter = Fabricate(:user)\n-      invite_link = Fabricate(:invite, invited_by: inviter, max_redemptions_allowed: 50)\n+      invite_link = Fabricate(:invite, invited_by: inviter, max_redemptions_allowed: 5)\n \n       redeemed = [\n         Fabricate(:invited_user, invite: invite_link, user: Fabricate(:user)),"
    },
    {
      "sha": "77bf74e7012124f54481fca79b4c2680d2985469",
      "filename": "spec/models/user_spec.rb",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/discourse/discourse/blob/7f3240ea3152578a545ac4d8ed87465619b0e14c/spec/models/user_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/7f3240ea3152578a545ac4d8ed87465619b0e14c/spec/models/user_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/models/user_spec.rb?ref=7f3240ea3152578a545ac4d8ed87465619b0e14c",
      "patch": "@@ -2554,4 +2554,14 @@ def reset_last_seen_cache!(user)\n       expect(user.do_not_disturb?).to eq(false)\n     end\n   end\n+\n+  describe \"#invited_by\" do\n+    it 'returns even if invites was trashed' do\n+      invite = Fabricate(:invite, invited_by: Fabricate(:user))\n+      Fabricate(:invited_user, invite: invite, user: user)\n+      invite.trash!\n+\n+      expect(user.invited_by).to eq(invite.invited_by)\n+    end\n+  end\n end"
    },
    {
      "sha": "de057c726ef28adab5ef075877f1869a41016e42",
      "filename": "spec/requests/invites_controller_spec.rb",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/discourse/discourse/blob/7f3240ea3152578a545ac4d8ed87465619b0e14c/spec/requests/invites_controller_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/7f3240ea3152578a545ac4d8ed87465619b0e14c/spec/requests/invites_controller_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/requests/invites_controller_spec.rb?ref=7f3240ea3152578a545ac4d8ed87465619b0e14c",
      "patch": "@@ -277,6 +277,11 @@\n \n     before do\n       sign_in(admin)\n+      RateLimiter.enable\n+    end\n+\n+    after do\n+      RateLimiter.disable\n     end\n \n     it 'updating email address resends invite email' do\n@@ -293,6 +298,20 @@\n       expect(invite.reload.custom_message).to eq(\"new message\")\n       expect(Jobs::InviteEmail.jobs.size).to eq(0)\n     end\n+\n+    it 'can send invite email' do\n+      user = Fabricate(:user, trust_level: SiteSetting.min_trust_level_to_allow_invite)\n+      invite = Fabricate(:invite, invited_by: user, email: 'test@example.com')\n+\n+      sign_in(user)\n+      RateLimiter.enable\n+\n+      expect { put \"/invites/#{invite.id}\", params: { send_email: true } }\n+        .to change { RateLimiter.new(user, \"resend-invite-per-hour\", 10, 1.hour).remaining }.by(-1)\n+\n+      expect(response.status).to eq(200)\n+      expect(Jobs::InviteEmail.jobs.size).to eq(1)\n+    end\n   end\n \n   context '#perform_accept_invitation' do"
    }
  ]
}
