{
  "sha": "c70a66a1c5bf0579253fe17e970d873a9d6bc753",
  "node_id": "C_kwDOBtgov9oAKGM3MGE2NmExYzViZjA1NzkyNTNmZTE3ZTk3MGQ4NzNhOWQ2YmM3NTM",
  "commit": {
    "author": {
      "name": "Dmitry Verkhoturov",
      "email": "paskal.07@gmail.com",
      "date": "2023-01-15T19:09:26Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2023-01-21T19:30:44Z"
    },
    "message": "bump go modules",
    "tree": {
      "sha": "c3d953496f047d6f3a65265f20c19259710e6c5e",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/c3d953496f047d6f3a65265f20c19259710e6c5e"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/c70a66a1c5bf0579253fe17e970d873a9d6bc753",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/c70a66a1c5bf0579253fe17e970d873a9d6bc753",
  "html_url": "https://github.com/umputun/remark42/commit/c70a66a1c5bf0579253fe17e970d873a9d6bc753",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/c70a66a1c5bf0579253fe17e970d873a9d6bc753/comments",
  "author": {
    "login": "paskal",
    "id": 712534,
    "node_id": "MDQ6VXNlcjcxMjUzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/712534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paskal",
    "html_url": "https://github.com/paskal",
    "followers_url": "https://api.github.com/users/paskal/followers",
    "following_url": "https://api.github.com/users/paskal/following{/other_user}",
    "gists_url": "https://api.github.com/users/paskal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paskal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paskal/subscriptions",
    "organizations_url": "https://api.github.com/users/paskal/orgs",
    "repos_url": "https://api.github.com/users/paskal/repos",
    "events_url": "https://api.github.com/users/paskal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paskal/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "url": "https://api.github.com/repos/umputun/remark42/commits/8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "html_url": "https://github.com/umputun/remark42/commit/8357846818f0c58dcdd57ea9e09f4470d5a1e72a"
    }
  ],
  "stats": {
    "total": 35130,
    "additions": 27578,
    "deletions": 7552
  },
  "files": [
    {
      "sha": "f49eae7c6dcd001167511caa257c1331e202379d",
      "filename": "backend/_example/memory_store/go.mod",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2F_example%2Fmemory_store%2Fgo.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2F_example%2Fmemory_store%2Fgo.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2F_example%2Fmemory_store%2Fgo.mod?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -7,35 +7,35 @@ require (\n \tgithub.com/go-pkgz/lgr v0.10.4\n \tgithub.com/jessevdk/go-flags v1.5.0\n \tgithub.com/stretchr/testify v1.8.1\n-\tgithub.com/umputun/remark42/backend v1.10.1\n+\tgithub.com/umputun/remark42/backend v1.11.2\n )\n \n require (\n \tgithub.com/Depado/bfchroma/v2 v2.0.0 // indirect\n \tgithub.com/PuerkitoBio/goquery v1.8.0 // indirect\n \tgithub.com/ajg/form v1.5.1 // indirect\n-\tgithub.com/alecthomas/chroma/v2 v2.3.0 // indirect\n+\tgithub.com/alecthomas/chroma/v2 v2.4.0 // indirect\n \tgithub.com/andybalholm/cascadia v1.3.1 // indirect\n \tgithub.com/aymerick/douceur v0.2.0 // indirect\n \tgithub.com/davecgh/go-spew v1.1.1 // indirect\n \tgithub.com/didip/tollbooth/v7 v7.0.1 // indirect\n \tgithub.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f // indirect\n \tgithub.com/dlclark/regexp2 v1.4.0 // indirect\n-\tgithub.com/go-chi/chi/v5 v5.0.7 // indirect\n+\tgithub.com/go-chi/chi/v5 v5.0.8 // indirect\n \tgithub.com/go-chi/render v1.0.2 // indirect\n \tgithub.com/go-pkgz/expirable-cache v0.1.0 // indirect\n-\tgithub.com/go-pkgz/rest v1.16.0 // indirect\n+\tgithub.com/go-pkgz/rest v1.17.0 // indirect\n \tgithub.com/gorilla/css v1.0.0 // indirect\n \tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n \tgithub.com/hashicorp/go-multierror v1.1.1 // indirect\n-\tgithub.com/microcosm-cc/bluemonday v1.0.20 // indirect\n+\tgithub.com/microcosm-cc/bluemonday v1.0.21 // indirect\n \tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n \tgithub.com/rs/xid v1.4.0 // indirect\n \tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n \tgo.etcd.io/bbolt v1.3.6 // indirect\n-\tgolang.org/x/image v0.0.0-20220617043117-41969df76e82 // indirect\n-\tgolang.org/x/net v0.0.0-20220826154423-83b083e8dc8b // indirect\n-\tgolang.org/x/sys v0.0.0-20220728004956-3c1f35247d10 // indirect\n+\tgolang.org/x/image v0.3.0 // indirect\n+\tgolang.org/x/net v0.5.0 // indirect\n+\tgolang.org/x/sys v0.4.0 // indirect\n \tgopkg.in/yaml.v3 v3.0.1 // indirect\n )\n "
    },
    {
      "sha": "d0fd28b28b2889c7df5becbb8294ce552e4ddddd",
      "filename": "backend/_example/memory_store/go.sum",
      "status": "modified",
      "additions": 36,
      "deletions": 13,
      "changes": 49,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2F_example%2Fmemory_store%2Fgo.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2F_example%2Fmemory_store%2Fgo.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2F_example%2Fmemory_store%2Fgo.sum?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -4,8 +4,9 @@ github.com/PuerkitoBio/goquery v1.8.0 h1:PJTF7AmFCFKk1N6V6jmKfrNH9tV5pNE6lZMkG0g\n github.com/PuerkitoBio/goquery v1.8.0/go.mod h1:ypIiRMtY7COPGk+I/YbZLbxsxn9g5ejnI2HSMtkjZvI=\n github.com/ajg/form v1.5.1 h1:t9c7v8JUKu/XxOGBU0yjNpaMloxGEJhUkqFRq0ibGeU=\n github.com/ajg/form v1.5.1/go.mod h1:uL1WgH+h2mgNtvBq0339dVnzXdBETtL2LeUXaIv25UY=\n-github.com/alecthomas/chroma/v2 v2.3.0 h1:83xfxrnjv8eK+Cf8qZDzNo3PPF9IbTWHs7z28GY6D0U=\n-github.com/alecthomas/chroma/v2 v2.3.0/go.mod h1:mZxeWZlxP2Dy+/8cBob2PYd8O2DwNAzave5AY7A2eQw=\n+github.com/alecthomas/assert/v2 v2.2.0 h1:f6L/b7KE2bfA+9O4FL3CM/xJccDEwPVYd5fALBiuwvw=\n+github.com/alecthomas/chroma/v2 v2.4.0 h1:Loe2ZjT5x3q1bcWwemqyqEi8p11/IV/ncFCeLYDpWC4=\n+github.com/alecthomas/chroma/v2 v2.4.0/go.mod h1:6kHzqF5O6FUSJzBXW7fXELjb+e+7OXW4UpoPqMO7IBQ=\n github.com/alecthomas/repr v0.1.0 h1:ENn2e1+J3k09gyj2shc0dHr/yjaWSHRlrJ4DPMevDqE=\n github.com/andybalholm/cascadia v1.3.1 h1:nhxRkql1kdYCc8Snf7D5/D3spOX+dBgjA6u8x004T2c=\n github.com/andybalholm/cascadia v1.3.1/go.mod h1:R4bJ1UQfqADjvDa4P6HZHLh/3OxWWEqc0Sk8XGwHqvA=\n@@ -21,8 +22,9 @@ github.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f h1:jtKwihcLmUC\n github.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f/go.mod h1:q9C80dnsuVRP2dAskjnXRNWdUJqtGgwG9wNrzt0019s=\n github.com/dlclark/regexp2 v1.4.0 h1:F1rxgk7p4uKjwIQxBs9oAXe5CqrXlCduYEJvrF4u93E=\n github.com/dlclark/regexp2 v1.4.0/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\n-github.com/go-chi/chi/v5 v5.0.7 h1:rDTPXLDHGATaeHvVlLcR4Qe0zftYethFucbjVQ1PxU8=\n github.com/go-chi/chi/v5 v5.0.7/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n+github.com/go-chi/chi/v5 v5.0.8 h1:lD+NLqFcAi1ovnVZpsnObHGW4xb4J8lNmoYVfECH1Y0=\n+github.com/go-chi/chi/v5 v5.0.8/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n github.com/go-chi/render v1.0.1/go.mod h1:pq4Rr7HbnsdaeHagklXub+p6Wd16Af5l9koip1OvJns=\n github.com/go-chi/render v1.0.2 h1:4ER/udB0+fMWB2Jlf15RV3F4A2FDuYi/9f+lFttR/Lg=\n github.com/go-chi/render v1.0.2/go.mod h1:/gr3hVkmYR0YlEy3LxCuVRFzEu9Ruok+gFqbIofjao0=\n@@ -33,24 +35,25 @@ github.com/go-pkgz/jrpc v0.3.0/go.mod h1:MFtKs75JESiSqVicsQkgN2iDFFuCd3gVT1/vKiw\n github.com/go-pkgz/lgr v0.10.4 h1:l7qyFjqEZgwRgaQQSEp6tve4A3OU80VrfzpvtEX8ngw=\n github.com/go-pkgz/lgr v0.10.4/go.mod h1:CD0s1z6EFpIUplV067gitF77tn25JItzwHNKAPqeCF0=\n github.com/go-pkgz/rest v1.15.6/go.mod h1:KUWAqbDteYGS/CiXftomQsKjtEOifXsJ36Ka0skYbmk=\n-github.com/go-pkgz/rest v1.16.0 h1:3An51XJXUq1XtICHvfAEp048ZCbUHBEga3g0WEu3zK0=\n-github.com/go-pkgz/rest v1.16.0/go.mod h1:HHlLOt02NJc2sgffXBF6hYVMcRo4Gz3vjg43zTzN7VM=\n+github.com/go-pkgz/rest v1.17.0 h1:LoBI/lDBMuqwWhOOkc6thM9NnwJO+K9nWvCOjZ7BAgE=\n+github.com/go-pkgz/rest v1.17.0/go.mod h1:HHlLOt02NJc2sgffXBF6hYVMcRo4Gz3vjg43zTzN7VM=\n github.com/gorilla/css v1.0.0 h1:BQqNyPTi50JCFMTw/b67hByjMVXZRwGha6wxVGkeihY=\n github.com/gorilla/css v1.0.0/go.mod h1:Dn721qIggHpt4+EFCcTLTU/vk5ySda2ReITrtgBl60c=\n github.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\n github.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\n github.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\n github.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\n github.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\n+github.com/hexops/gotextdiff v1.0.3 h1:gitA9+qJrrTCsiCl7+kh75nPqQt1cx4ZkudSTLoUqJM=\n github.com/jessevdk/go-flags v1.5.0 h1:1jKYvbxEjfUl0fmqTCOfonvskHHXMjBySTLW4y9LFvc=\n github.com/jessevdk/go-flags v1.5.0/go.mod h1:Fw0T6WPc1dYxT4mKEZRfG5kJhaTDP9pj1c2EWnYs/m4=\n github.com/kr/pretty v0.1.0 h1:L/CwN0zerZDmRFUapSPitk6f+Q3+0za1rQkzVuMiMFI=\n github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\n github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\n github.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\n github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\n-github.com/microcosm-cc/bluemonday v1.0.20 h1:flpzsq4KU3QIYAYGV/szUat7H+GPOXR0B2JU5A1Wp8Y=\n-github.com/microcosm-cc/bluemonday v1.0.20/go.mod h1:yfBmMi8mxvaZut3Yytv+jTXRY8mxyjJ0/kQBTElld50=\n+github.com/microcosm-cc/bluemonday v1.0.21 h1:dNH3e4PSyE4vNX+KlRGHT5KrSvjeUkoNPwEORjffHJg=\n+github.com/microcosm-cc/bluemonday v1.0.21/go.mod h1:ytNkv4RrDrLJ2pqlsSI46O6IVXmZOBBD4SaJyDwwTkM=\n github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\n github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\n@@ -67,23 +70,43 @@ github.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/\n github.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\n github.com/stretchr/testify v1.8.1 h1:w7B6lhMri9wdJUVmEZPGGhZzrYTPvgJArz7wNPgYKsk=\n github.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\n+github.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\n go.etcd.io/bbolt v1.3.6 h1:/ecaJf0sk1l4l6V4awd65v2C3ILy7MSj+s/x1ADCIMU=\n go.etcd.io/bbolt v1.3.6/go.mod h1:qXsaaIqmgQH0T+OPdb99Bf+PKfBBQVAdyD6TY9G8XM4=\n-golang.org/x/image v0.0.0-20220617043117-41969df76e82 h1:KpZB5pUSBvrHltNEdK/tw0xlPeD13M6M6aGP32gKqiw=\n-golang.org/x/image v0.0.0-20220617043117-41969df76e82/go.mod h1:doUCurBvlfPMKfmIpRIywoHmhN3VyhnoFDbvIEWF4hY=\n+golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\n+golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\n+golang.org/x/image v0.3.0 h1:HTDXbdK9bjfSWkPzDJIw89W8CAtfFGduujWs33NLLsg=\n+golang.org/x/image v0.3.0/go.mod h1:fXd9211C/0VTlYuAcOhW8dY/RtEJqODXOWBDpmYBf+A=\n+golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\n+golang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\n+golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\n golang.org/x/net v0.0.0-20210916014120-12bc252f5db8/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\n-golang.org/x/net v0.0.0-20220826154423-83b083e8dc8b h1:ZmngSVLe/wycRns9MKikG9OWIEjGcGAkacif7oYQaUY=\n-golang.org/x/net v0.0.0-20220826154423-83b083e8dc8b/go.mod h1:YDH+HFinaLZZlnHAfSS6ZXJJ9M9t4Dl22yv3iI2vPwk=\n+golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\n+golang.org/x/net v0.5.0 h1:GyT4nK/YDHSqa1c4753ouYCDajOYKTja9Xb/OHtgvSw=\n+golang.org/x/net v0.5.0/go.mod h1:DivGGAXEgPSlEBzxGzZI+ZLohi+xUj054jfeKui00ws=\n+golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n+golang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n+golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20200923182605-d9f96fdee20d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20220728004956-3c1f35247d10 h1:WIoqL4EROvwiPdUtaip4VcDdpZ4kha7wBWZrbVKCIZg=\n-golang.org/x/sys v0.0.0-20220728004956-3c1f35247d10/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n+golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n+golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n+golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n+golang.org/x/sys v0.4.0 h1:Zr2JFtRQNX3BCZ8YtxRE9hNJYC8J6I1MVbMg6owUp18=\n+golang.org/x/sys v0.4.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\n+golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\n+golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\n+golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\n golang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\n golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\n+golang.org/x/text v0.6.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\n golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\n+golang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\n+golang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\n+golang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\n gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\n gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127 h1:qIbj1fsPNlZgppZ+VLlY7N33q108Sa+fhmuc+sWQYwY=\n gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0="
    },
    {
      "sha": "f004334127cfdacbc7df64e376e57ee9214b61a4",
      "filename": "backend/app/store/comment_test.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fapp%2Fstore%2Fcomment_test.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fapp%2Fstore%2Fcomment_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fapp%2Fstore%2Fcomment_test.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -263,7 +263,7 @@ func TestComment_sanitizeText(t *testing.T) {\n \t\t},\n \t\t{\n \t\t\t\"<a href=javascript:alert(document.domain)//>xxx</a>\",\n-\t\t\t\"&lt;a/&gt;xxx&lt;/a&gt;\",\n+\t\t\t\"xxx&lt;/a&gt;\",\n \t\t},\n \t}\n "
    },
    {
      "sha": "14b06125f9ed3a1aef7315f45d7ee57f885c8b6b",
      "filename": "backend/go.mod",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fgo.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fgo.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fgo.mod?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -5,36 +5,36 @@ go 1.17\n require (\n \tgithub.com/Depado/bfchroma/v2 v2.0.0\n \tgithub.com/PuerkitoBio/goquery v1.8.0\n-\tgithub.com/alecthomas/chroma/v2 v2.3.0\n+\tgithub.com/alecthomas/chroma/v2 v2.4.0\n \tgithub.com/didip/tollbooth/v7 v7.0.1\n \tgithub.com/didip/tollbooth_chi v0.0.0-20220719025231-d662a7f6928f\n-\tgithub.com/go-chi/chi/v5 v5.0.7\n+\tgithub.com/go-chi/chi/v5 v5.0.8\n \tgithub.com/go-chi/cors v1.2.1\n \tgithub.com/go-chi/render v1.0.2\n-\tgithub.com/go-pkgz/auth v1.20.1-0.20230103203948-168bd5a101b7\n+\tgithub.com/go-pkgz/auth v1.20.1-0.20230115185815-90b4b947ab05\n \tgithub.com/go-pkgz/jrpc v0.3.0\n \tgithub.com/go-pkgz/lcw v1.0.3-0.20221226231215-a66ea7c4aff7\n \tgithub.com/go-pkgz/lgr v0.10.4\n \tgithub.com/go-pkgz/notify v0.2.0\n \tgithub.com/go-pkgz/repeater v1.1.3\n-\tgithub.com/go-pkgz/rest v1.16.0\n+\tgithub.com/go-pkgz/rest v1.17.0\n \tgithub.com/go-pkgz/syncs v1.2.0\n \tgithub.com/golang-jwt/jwt v3.2.2+incompatible\n \tgithub.com/google/uuid v1.3.0\n \tgithub.com/gorilla/feeds v1.1.1\n \tgithub.com/hashicorp/go-multierror v1.1.1\n \tgithub.com/jessevdk/go-flags v1.5.0\n-\tgithub.com/kyokomi/emoji/v2 v2.2.10\n-\tgithub.com/microcosm-cc/bluemonday v1.0.20\n+\tgithub.com/kyokomi/emoji/v2 v2.2.11\n+\tgithub.com/microcosm-cc/bluemonday v1.0.21\n \tgithub.com/rs/xid v1.4.0\n \tgithub.com/russross/blackfriday/v2 v2.1.0\n \tgithub.com/skip2/go-qrcode v0.0.0-20200617195104-da1b6568686e\n \tgithub.com/stretchr/testify v1.8.1\n \tgo.etcd.io/bbolt v1.3.6\n \tgo.uber.org/goleak v1.2.0\n-\tgolang.org/x/crypto v0.0.0-20220622213112-05595931fe9d\n-\tgolang.org/x/image v0.0.0-20220617043117-41969df76e82\n-\tgolang.org/x/net v0.0.0-20220826154423-83b083e8dc8b\n+\tgolang.org/x/crypto v0.5.0\n+\tgolang.org/x/image v0.3.0\n+\tgolang.org/x/net v0.5.0\n )\n \n require (\n@@ -44,7 +44,7 @@ require (\n \tgithub.com/aymerick/douceur v0.2.0 // indirect\n \tgithub.com/cespare/xxhash/v2 v2.1.2 // indirect\n \tgithub.com/davecgh/go-spew v1.1.1 // indirect\n-\tgithub.com/dghubble/oauth1 v0.7.1 // indirect\n+\tgithub.com/dghubble/oauth1 v0.7.2 // indirect\n \tgithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f // indirect\n \tgithub.com/dlclark/regexp2 v1.4.0 // indirect\n \tgithub.com/go-oauth2/oauth2/v4 v4.5.1 // indirect\n@@ -67,11 +67,11 @@ require (\n \tgithub.com/xdg-go/scram v1.1.1 // indirect\n \tgithub.com/xdg-go/stringprep v1.0.3 // indirect\n \tgithub.com/youmark/pkcs8 v0.0.0-20201027041543-1326539a0a0a // indirect\n-\tgo.mongodb.org/mongo-driver v1.10.2 // indirect\n-\tgolang.org/x/oauth2 v0.0.0-20220411215720-9780585627b5 // indirect\n-\tgolang.org/x/sync v0.0.0-20210220032951-036812b2e83c // indirect\n-\tgolang.org/x/sys v0.0.0-20220728004956-3c1f35247d10 // indirect\n-\tgolang.org/x/text v0.3.7 // indirect\n+\tgo.mongodb.org/mongo-driver v1.11.1 // indirect\n+\tgolang.org/x/oauth2 v0.4.0 // indirect\n+\tgolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4 // indirect\n+\tgolang.org/x/sys v0.4.0 // indirect\n+\tgolang.org/x/text v0.6.0 // indirect\n \tgoogle.golang.org/appengine v1.6.7 // indirect\n \tgoogle.golang.org/protobuf v1.28.0 // indirect\n \tgopkg.in/yaml.v3 v3.0.1 // indirect"
    },
    {
      "sha": "2649908922a0dc766824c8eaf8922eb31b8eb1c1",
      "filename": "backend/go.sum",
      "status": "modified",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fgo.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fgo.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fgo.sum?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -64,6 +64,8 @@ github.com/ajg/form v1.5.1/go.mod h1:uL1WgH+h2mgNtvBq0339dVnzXdBETtL2LeUXaIv25UY\n github.com/alecthomas/chroma/v2 v2.2.0/go.mod h1:vf4zrexSH54oEjJ7EdB65tGNHmH3pGZmVkgTP5RHvAs=\n github.com/alecthomas/chroma/v2 v2.3.0 h1:83xfxrnjv8eK+Cf8qZDzNo3PPF9IbTWHs7z28GY6D0U=\n github.com/alecthomas/chroma/v2 v2.3.0/go.mod h1:mZxeWZlxP2Dy+/8cBob2PYd8O2DwNAzave5AY7A2eQw=\n+github.com/alecthomas/chroma/v2 v2.4.0 h1:Loe2ZjT5x3q1bcWwemqyqEi8p11/IV/ncFCeLYDpWC4=\n+github.com/alecthomas/chroma/v2 v2.4.0/go.mod h1:6kHzqF5O6FUSJzBXW7fXELjb+e+7OXW4UpoPqMO7IBQ=\n github.com/alecthomas/repr v0.0.0-20220113201626-b1b626ac65ae/go.mod h1:2kn6fqh/zIyPLmm3ugklbEi5hg5wS435eygvNfaDQL8=\n github.com/alecthomas/repr v0.1.0 h1:ENn2e1+J3k09gyj2shc0dHr/yjaWSHRlrJ4DPMevDqE=\n github.com/alecthomas/repr v0.1.0/go.mod h1:2kn6fqh/zIyPLmm3ugklbEi5hg5wS435eygvNfaDQL8=\n@@ -101,6 +103,8 @@ github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c\n github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n github.com/dghubble/oauth1 v0.7.1 h1:JjbOVSVVkms9A4h/sTQy5Jb2nFuAAVb2qVYgenJPyrE=\n github.com/dghubble/oauth1 v0.7.1/go.mod h1:0eEzON0UY/OLACQrmnjgJjmvCGXzjBCsZqL1kWDXtF0=\n+github.com/dghubble/oauth1 v0.7.2 h1:pwcinOZy8z6XkNxvPmUDY52M7RDPxt0Xw1zgZ6Cl5JA=\n+github.com/dghubble/oauth1 v0.7.2/go.mod h1:9erQdIhqhOHG/7K9s/tgh9Ks/AfoyrO5mW/43Lu2+kE=\n github.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f h1:lO4WD4F/rVNCu3HqELle0jiPLLBs70cWOduZpkS1E78=\n github.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f/go.mod h1:cuUVRXasLTGF7a8hSLbxyZXjz+1KgoB3wDUb6vlszIc=\n github.com/didip/tollbooth/v7 v7.0.0/go.mod h1:VZhDSGl5bDSPj4wPsih3PFa4Uh9Ghv8hgacaTm5PRT4=\n@@ -130,6 +134,8 @@ github.com/gavv/httpexpect v2.0.0+incompatible/go.mod h1:x+9tiU1YnrOvnB725RkpoLv\n github.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\n github.com/go-chi/chi/v5 v5.0.7 h1:rDTPXLDHGATaeHvVlLcR4Qe0zftYethFucbjVQ1PxU8=\n github.com/go-chi/chi/v5 v5.0.7/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n+github.com/go-chi/chi/v5 v5.0.8 h1:lD+NLqFcAi1ovnVZpsnObHGW4xb4J8lNmoYVfECH1Y0=\n+github.com/go-chi/chi/v5 v5.0.8/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\n github.com/go-chi/cors v1.2.1 h1:xEC8UT3Rlp2QuWNEr4Fs/c2EAGVKBwy/1vHx3bppil4=\n github.com/go-chi/cors v1.2.1/go.mod h1:sSbTewc+6wYHBBCW7ytsFSn836hqM7JxpglAy2Vzc58=\n github.com/go-chi/render v1.0.1/go.mod h1:pq4Rr7HbnsdaeHagklXub+p6Wd16Af5l9koip1OvJns=\n@@ -144,6 +150,8 @@ github.com/go-pkgz/auth v1.20.1-0.20221226231300-65f433fba0f1 h1:MJA4rZAwjd+KpaR\n github.com/go-pkgz/auth v1.20.1-0.20221226231300-65f433fba0f1/go.mod h1:fG1CP4+LDPnebYeO1BAZg/euTQQ8cnGn+5ZrXvJfckA=\n github.com/go-pkgz/auth v1.20.1-0.20230103203948-168bd5a101b7 h1:ktKI3Y3UytkBLL1cOEzJmAi3nNKeaRGOzDj51Kgqp6M=\n github.com/go-pkgz/auth v1.20.1-0.20230103203948-168bd5a101b7/go.mod h1:fG1CP4+LDPnebYeO1BAZg/euTQQ8cnGn+5ZrXvJfckA=\n+github.com/go-pkgz/auth v1.20.1-0.20230115185815-90b4b947ab05 h1:AVT3lrGI0V9zHpeM0SK/ybFP8VmA6ZLvxtcJeSzH1X0=\n+github.com/go-pkgz/auth v1.20.1-0.20230115185815-90b4b947ab05/go.mod h1:ERRbvtLARasBHop3BOY7Cm6iAqu6bfJ3qDGcmg+zqAA=\n github.com/go-pkgz/email v0.3.1-0.20221002173339-19d25a20d99c/go.mod h1:TpnmSLkQW3FyICit2hn7WIhCUDrhCX6btzz5wS3wHRI=\n github.com/go-pkgz/email v0.4.1 h1:2vtP2gibsSzqhz6eD5DklSp11m657XEVf17fuXaxMvk=\n github.com/go-pkgz/email v0.4.1/go.mod h1:BdxglsQnymzhfdbnncEE72a6DrucZHy6I+42LK2jLEc=\n@@ -162,6 +170,8 @@ github.com/go-pkgz/repeater v1.1.3/go.mod h1:hVTavuO5x3Gxnu8zW7d6sQBfAneKV8X2FjU\n github.com/go-pkgz/rest v1.15.6/go.mod h1:KUWAqbDteYGS/CiXftomQsKjtEOifXsJ36Ka0skYbmk=\n github.com/go-pkgz/rest v1.16.0 h1:3An51XJXUq1XtICHvfAEp048ZCbUHBEga3g0WEu3zK0=\n github.com/go-pkgz/rest v1.16.0/go.mod h1:HHlLOt02NJc2sgffXBF6hYVMcRo4Gz3vjg43zTzN7VM=\n+github.com/go-pkgz/rest v1.17.0 h1:LoBI/lDBMuqwWhOOkc6thM9NnwJO+K9nWvCOjZ7BAgE=\n+github.com/go-pkgz/rest v1.17.0/go.mod h1:HHlLOt02NJc2sgffXBF6hYVMcRo4Gz3vjg43zTzN7VM=\n github.com/go-pkgz/syncs v1.2.0 h1:aiizQFILlMZ4KtRNaYLcDffRbUQZH9fclsgr5KybWyY=\n github.com/go-pkgz/syncs v1.2.0/go.mod h1:fjThZdM2FkC/oSeiqBTOZOtHpbrCh4HuHbipB5qZJJM=\n github.com/go-redis/redis/v8 v8.11.5 h1:AcZZR7igkdvfVmQTPnu9WE37LRrO/YrBH5zWyjDC0oI=\n@@ -297,10 +307,14 @@ github.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\n github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\n github.com/kyokomi/emoji/v2 v2.2.10 h1:1z5eMVcxFifsmEoNpdeq4UahbcicgQ4FEHuzrCVwmiI=\n github.com/kyokomi/emoji/v2 v2.2.10/go.mod h1:JUcn42DTdsXJo1SWanHh4HKDEyPaR5CqkmoirZZP9qE=\n+github.com/kyokomi/emoji/v2 v2.2.11 h1:Pf/ZWVTbnAVkHOLJLWjPxM/FmgyPe+d85cv/OLP5Yus=\n+github.com/kyokomi/emoji/v2 v2.2.11/go.mod h1:JUcn42DTdsXJo1SWanHh4HKDEyPaR5CqkmoirZZP9qE=\n github.com/mattn/go-colorable v0.1.7/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\n github.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\n github.com/microcosm-cc/bluemonday v1.0.20 h1:flpzsq4KU3QIYAYGV/szUat7H+GPOXR0B2JU5A1Wp8Y=\n github.com/microcosm-cc/bluemonday v1.0.20/go.mod h1:yfBmMi8mxvaZut3Yytv+jTXRY8mxyjJ0/kQBTElld50=\n+github.com/microcosm-cc/bluemonday v1.0.21 h1:dNH3e4PSyE4vNX+KlRGHT5KrSvjeUkoNPwEORjffHJg=\n+github.com/microcosm-cc/bluemonday v1.0.21/go.mod h1:ytNkv4RrDrLJ2pqlsSI46O6IVXmZOBBD4SaJyDwwTkM=\n github.com/montanaflynn/stats v0.0.0-20171201202039-1bf9dbcd8cbe h1:iruDEfMl2E6fbMZ9s0scYfZQ84/6SPL6zC8ACM2oIL0=\n github.com/montanaflynn/stats v0.0.0-20171201202039-1bf9dbcd8cbe/go.mod h1:wL8QJuTMNUDYhXwkmfOly8iTdp5TEcJFWZD2D7SIkUc=\n github.com/moul/http2curl v1.0.0 h1:dRMWoAtb+ePxMlLkrCbAqh4TlPHXvoGUSQ323/9Zahs=\n@@ -407,12 +421,15 @@ github.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9de\n github.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\n github.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\n github.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\n+github.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\n github.com/yuin/gopher-lua v0.0.0-20220504180219-658193537a64 h1:5mLPGnFdSsevFRFc9q3yYbBkB6tsm4aCwwQV/j1JQAQ=\n github.com/yuin/gopher-lua v0.0.0-20220504180219-658193537a64/go.mod h1:GBR0iDaNXjAgGg9zfCvksxSRnQx76gclCIb7kdAd1Pw=\n go.etcd.io/bbolt v1.3.6 h1:/ecaJf0sk1l4l6V4awd65v2C3ILy7MSj+s/x1ADCIMU=\n go.etcd.io/bbolt v1.3.6/go.mod h1:qXsaaIqmgQH0T+OPdb99Bf+PKfBBQVAdyD6TY9G8XM4=\n go.mongodb.org/mongo-driver v1.10.2 h1:4Wk3cnqOrQCn0P92L3/mmurMxzdvWWs5J9jinAVKD+k=\n go.mongodb.org/mongo-driver v1.10.2/go.mod h1:z4XpeoU6w+9Vht+jAFyLgVrD+jGSQQe0+CBWFHNiHt8=\n+go.mongodb.org/mongo-driver v1.11.1 h1:QP0znIRTuL0jf1oBQoAoM0C6ZJfBK4kx0Uumtv1A7w8=\n+go.mongodb.org/mongo-driver v1.11.1/go.mod h1:s7p5vEtfbeR1gYi6pnj3c3/urpbLv2T5Sfd6Rp2HBB8=\n go.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\n go.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=\n go.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\n@@ -429,9 +446,12 @@ golang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8U\n golang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\n golang.org/x/crypto v0.0.0-20200302210943-78000ba7a073/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\n golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\n+golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\n golang.org/x/crypto v0.0.0-20220214200702-86341886e292/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\n golang.org/x/crypto v0.0.0-20220622213112-05595931fe9d h1:sK3txAijHtOK88l68nt020reeT1ZdKLIYetKl95FzVY=\n golang.org/x/crypto v0.0.0-20220622213112-05595931fe9d/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\n+golang.org/x/crypto v0.5.0 h1:U/0M97KRkSFvyD/3FSmdP5W5swImpNgle/EHFhOsQPE=\n+golang.org/x/crypto v0.5.0/go.mod h1:NK/OQwhpMQP3MwtdjgLlYHnH9ebylxKWv3e0fK+mkQU=\n golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\n golang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\n golang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\n@@ -447,6 +467,8 @@ golang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+o\n golang.org/x/image v0.0.0-20220413100746-70e8d0d3baa9/go.mod h1:023OzeP/+EPmXeapQh35lcL3II3LrY8Ic+EFFKVhULM=\n golang.org/x/image v0.0.0-20220617043117-41969df76e82 h1:KpZB5pUSBvrHltNEdK/tw0xlPeD13M6M6aGP32gKqiw=\n golang.org/x/image v0.0.0-20220617043117-41969df76e82/go.mod h1:doUCurBvlfPMKfmIpRIywoHmhN3VyhnoFDbvIEWF4hY=\n+golang.org/x/image v0.3.0 h1:HTDXbdK9bjfSWkPzDJIw89W8CAtfFGduujWs33NLLsg=\n+golang.org/x/image v0.3.0/go.mod h1:fXd9211C/0VTlYuAcOhW8dY/RtEJqODXOWBDpmYBf+A=\n golang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\n golang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\n golang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\n@@ -471,6 +493,7 @@ golang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\n golang.org/x/mod v0.4.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\n golang.org/x/mod v0.4.1/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\n golang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\n+golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\n golang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n golang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n golang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n@@ -515,8 +538,11 @@ golang.org/x/net v0.0.0-20220127200216-cd36cc0744dd/go.mod h1:CfG3xpIq0wQ8r1q4Su\n golang.org/x/net v0.0.0-20220225172249-27dd8689420f/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\n golang.org/x/net v0.0.0-20220325170049-de3da57026de/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\n golang.org/x/net v0.0.0-20220412020605-290c469a71a5/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\n+golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\n golang.org/x/net v0.0.0-20220826154423-83b083e8dc8b h1:ZmngSVLe/wycRns9MKikG9OWIEjGcGAkacif7oYQaUY=\n golang.org/x/net v0.0.0-20220826154423-83b083e8dc8b/go.mod h1:YDH+HFinaLZZlnHAfSS6ZXJJ9M9t4Dl22yv3iI2vPwk=\n+golang.org/x/net v0.5.0 h1:GyT4nK/YDHSqa1c4753ouYCDajOYKTja9Xb/OHtgvSw=\n+golang.org/x/net v0.5.0/go.mod h1:DivGGAXEgPSlEBzxGzZI+ZLohi+xUj054jfeKui00ws=\n golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\n golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\n golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\n@@ -537,6 +563,8 @@ golang.org/x/oauth2 v0.0.0-20220223155221-ee480838109b/go.mod h1:DAh4E804XQdzx2j\n golang.org/x/oauth2 v0.0.0-20220309155454-6242fa91716a/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=\n golang.org/x/oauth2 v0.0.0-20220411215720-9780585627b5 h1:OSnWWcOd/CtWQC2cYSBgbTSJv3ciqd8r54ySIW2y3RE=\n golang.org/x/oauth2 v0.0.0-20220411215720-9780585627b5/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=\n+golang.org/x/oauth2 v0.4.0 h1:NF0gk8LVPg1Ml7SSbGyySuoxdsXitj7TvgvuRxIMc/M=\n+golang.org/x/oauth2 v0.4.0/go.mod h1:RznEsdpjGAINPTOF0UH/t+xJ75L18YO3Ho6Pyn+uRec=\n golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n@@ -549,6 +577,8 @@ golang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJ\n golang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20210220032951-036812b2e83c h1:5KslGYwFpkhGh+Q16bwMP3cOontH8FOep7tGV86Y7SQ=\n golang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n+golang.org/x/sync v0.0.0-20220722155255-886fb9371eb4 h1:uVc8UZUe6tr40fFVnUP5Oj+veunVezqYl9z7DYw9xzw=\n+golang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20190204203706-41f3e6584952/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n@@ -612,8 +642,12 @@ golang.org/x/sys v0.0.0-20220209214540-3681064d5158/go.mod h1:oPkhp1MJrh7nUepCBc\n golang.org/x/sys v0.0.0-20220227234510-4e6760a101f9/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.0.0-20220328115105-d36c6a25d886/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.0.0-20220412211240-33da011f77ad/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n+golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n+golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/sys v0.0.0-20220728004956-3c1f35247d10 h1:WIoqL4EROvwiPdUtaip4VcDdpZ4kha7wBWZrbVKCIZg=\n golang.org/x/sys v0.0.0-20220728004956-3c1f35247d10/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n+golang.org/x/sys v0.4.0 h1:Zr2JFtRQNX3BCZ8YtxRE9hNJYC8J6I1MVbMg6owUp18=\n+golang.org/x/sys v0.4.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\n golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\n golang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\n@@ -626,6 +660,8 @@ golang.org/x/text v0.3.5/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\n golang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\n golang.org/x/text v0.3.7 h1:olpwvP2KacW1ZWvsR7uQhoyTYvKAupfQrRGBFM352Gk=\n golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\n+golang.org/x/text v0.6.0 h1:3XmdazWV+ubf7QgHSTWeykHOci5oeekaGJBLkrkaw4k=\n+golang.org/x/text v0.6.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\n golang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\n golang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\n golang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\n@@ -683,6 +719,8 @@ golang.org/x/tools v0.1.3/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\n golang.org/x/tools v0.1.4/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\n golang.org/x/tools v0.1.5 h1:ouewzE6p+/VEB31YYnTbEJdi8pFqKp4P4n85vwo3DHA=\n golang.org/x/tools v0.1.5/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\n+golang.org/x/tools v0.1.12 h1:VveCTK38A2rkS8ZqFY25HIDFscX5X9OoEhJd3quQmXU=\n+golang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\n golang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\n golang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\n golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0="
    },
    {
      "sha": "d80374e07ff082c944bbf933961aac947777bc35",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/.editorconfig",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.editorconfig",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.editorconfig",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.editorconfig?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,13 @@\n+root = true\n+\n+[*]\n+indent_style = tab\n+end_of_line = lf\n+charset = utf-8\n+trim_trailing_whitespace = true\n+insert_final_newline = true\n+\n+[*.xml]\n+indent_style = space\n+indent_size = 2\n+insert_final_newline = false"
    },
    {
      "sha": "0fe2eb496b16162a72c1d6f811704efbb2e16a95",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/.golangci.yml",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.golangci.yml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -37,6 +37,17 @@ linters:\n     - wrapcheck\n     - stylecheck\n     - thelper\n+    - nonamedreturns\n+    - revive\n+    - dupword\n+    - exhaustruct\n+    - varnamelen\n+    - forcetypeassert\n+    - ireturn\n+    - maintidx\n+    - govet\n+    - nosnakecase\n+    - testableexamples\n \n linters-settings:\n   govet:"
    },
    {
      "sha": "613b071e0ab2e0bd3c2e24967185ae7f3dda4b2e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/README.md",
      "status": "modified",
      "additions": 22,
      "deletions": 18,
      "changes": 40,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FREADME.md?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -37,26 +37,26 @@ translators for Pygments lexers and styles.\n Prefix | Language\n :----: | --------\n A | ABAP, ABNF, ActionScript, ActionScript 3, Ada, Angular2, ANTLR, ApacheConf, APL, AppleScript, Arduino, Awk\n-B | Ballerina, Base Makefile, Bash, Batchfile, BibTeX, Bicep, BlitzBasic, BNF, Brainfuck\n+B | Ballerina, Bash, Batchfile, BibTeX, Bicep, BlitzBasic, BNF, Brainfuck, BQN\n C | C, C#, C++, Caddyfile, Caddyfile Directives, Cap'n Proto, Cassandra CQL, Ceylon, CFEngine3, cfstatement, ChaiScript, Chapel, Cheetah, Clojure, CMake, COBOL, CoffeeScript, Common Lisp, Coq, Crystal, CSS, Cython\n D | D, Dart, Diff, Django/Jinja, Docker, DTD, Dylan\n E | EBNF, Elixir, Elm, EmacsLisp, Erlang\n F | Factor, Fish, Forth, Fortran, FSharp\n G | GAS, GDScript, Genshi, Genshi HTML, Genshi Text, Gherkin, GLSL, Gnuplot, Go, Go HTML Template, Go Text Template, GraphQL, Groff, Groovy\n-H | Handlebars, Haskell, Haxe, HCL, Hexdump, HLB, HTML, HTTP, Hy\n+H | Handlebars, Haskell, Haxe, HCL, Hexdump, HLB, HLSL, HTML, HTTP, Hy\n I | Idris, Igor, INI, Io\n J | J, Java, JavaScript, JSON, Julia, Jungle\n K | Kotlin\n L | Lighttpd configuration file, LLVM, Lua\n-M | Mako, markdown, Mason, Mathematica, Matlab, MiniZinc, MLIR, Modula-2, MonkeyC, MorrowindScript, Myghty, MySQL\n+M | Makefile, Mako, markdown, Mason, Mathematica, Matlab, MiniZinc, MLIR, Modula-2, MonkeyC, MorrowindScript, Myghty, MySQL\n N | NASM, Newspeak, Nginx configuration file, Nim, Nix\n O | Objective-C, OCaml, Octave, OnesEnterprise, OpenEdge ABL, OpenSCAD, Org Mode\n-P | PacmanConf, Perl, PHP, PHTML, Pig, PkgConfig, PL/pgSQL, plaintext, Pony, PostgreSQL SQL dialect, PostScript, POVRay, PowerShell, Prolog, PromQL, Properties, Protocol Buffer, Puppet, Python 2, Python\n+P | PacmanConf, Perl, PHP, PHTML, Pig, PkgConfig, PL/pgSQL, plaintext, Pony, PostgreSQL SQL dialect, PostScript, POVRay, PowerShell, Prolog, PromQL, Properties, Protocol Buffer, PSL, Puppet, Python 2, Python\n Q | QBasic\n R | R, Racket, Ragel, Raku, react, ReasonML, reg, reStructuredText, Rexx, Ruby, Rust\n-S | SAS, Sass, Scala, Scheme, Scilab, SCSS, Smalltalk, Smarty, Snobol, Solidity, SPARQL, SQL, SquidConf, Standard ML, Stylus, Svelte, Swift, SYSTEMD, systemverilog\n+S | SAS, Sass, Scala, Scheme, Scilab, SCSS, Sed, Smalltalk, Smarty, Snobol, Solidity, SPARQL, SQL, SquidConf, Standard ML, stas, Stylus, Svelte, Swift, SYSTEMD, systemverilog\n T | TableGen, TASM, Tcl, Tcsh, Termcap, Terminfo, Terraform, TeX, Thrift, TOML, TradingView, Transact-SQL, Turing, Turtle, Twig, TypeScript, TypoScript, TypoScriptCssData, TypoScriptHtmlData\n-V | VB.net, verilog, VHDL, VimL, vue\n+V | VB.net, verilog, VHDL, VHS, VimL, vue\n W | WDTE\n X | XML, Xorg\n Y | YAML, YANG\n@@ -185,7 +185,7 @@ following constructor options:\n - `ClassPrefix(prefix)` - prefix each generated CSS class.\n - `TabWidth(width)` - Set the rendered tab width, in characters.\n - `WithLineNumbers()` - Render line numbers (style with `LineNumbers`).\n-- `LinkableLineNumbers()` - Make the line numbers linkable and be a link to themselves.\n+- `WithLinkableLineNumbers()` - Make the line numbers linkable and be a link to themselves.\n - `HighlightLines(ranges)` - Highlight lines in these ranges (style with `LineHighlight`).\n - `LineNumbersInTable()` - Use a table for formatting line numbers and code, rather than spans.\n \n@@ -207,14 +207,13 @@ for details on implementing lexers. Most concepts apply directly to Chroma,\n but see existing lexer implementations for real examples.\n \n In many cases lexers can be automatically converted directly from Pygments by\n-using the included Python 3 script `pygments2chroma.py`. I use something like\n+using the included Python 3 script `pygments2chroma_xml.py`. I use something like\n the following:\n \n ```sh\n-python3 _tools/pygments2chroma.py \\\n+python3 _tools/pygments2chroma_xml.py \\\n   pygments.lexers.jvm.KotlinLexer \\\n-  > lexers/k/kotlin.go \\\n-  && gofmt -s -w lexers/k/kotlin.go\n+  > lexers/embedded/kotlin.xml\n ```\n \n See notes in [pygments-lexers.txt](https://github.com/alecthomas/chroma/blob/master/pygments-lexers.txt)\n@@ -231,17 +230,22 @@ formatter outputs raw tokens. The latter is useful for debugging lexers.\n <a id=\"markdown-styles\" name=\"styles\"></a>\n ### Styles\n \n-Chroma styles use the [same syntax](http://pygments.org/docs/styles/) as Pygments.\n+Chroma styles are defined in XML. The style entries use the\n+[same syntax](http://pygments.org/docs/styles/) as Pygments.\n \n-All Pygments styles have been converted to Chroma using the `_tools/style.py` script.\n+All Pygments styles have been converted to Chroma using the `_tools/style.py`\n+script.\n \n-When you work with one of [Chroma's styles](https://github.com/alecthomas/chroma/tree/master/styles), know that the `chroma.Background` token type provides the default style for tokens. It does so by defining a foreground color and background color.\n+When you work with one of [Chroma's styles](https://github.com/alecthomas/chroma/tree/master/styles), \n+know that the `Background` token type provides the default style for tokens. It does so\n+by defining a foreground color and background color.\n \n-For example, this gives each token name not defined in the style a default color of `#f8f8f8` and uses `#000000` for the highlighted code block's background:\n+For example, this gives each token name not defined in the style a default color\n+of `#f8f8f8` and uses `#000000` for the highlighted code block's background:\n \n-~~~go\n-chroma.Background: \"#f8f8f2 bg:#000000\",\n-~~~\n+```xml\n+<entry type=\"Background\" style=\"#f8f8f2 bg:#000000\"/>\n+```\n \n Also, token types in a style file are hierarchical. For instance, when `CommentSpecial` is not defined, Chroma uses the token style from `Comment`. So when several comment tokens use the same color, you'll only need to define `Comment` and override the one that has a different color.\n "
    },
    {
      "sha": "0788b5b21f55d3113f35e47c26c20085fc4c115d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/emitters.go",
      "status": "modified",
      "additions": 26,
      "deletions": 29,
      "changes": 55,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Femitters.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Femitters.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Femitters.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -81,42 +81,39 @@ func ByGroupNames(emitters map[string]Emitter) Emitter {\n }\n \n // UsingByGroup emits tokens for the matched groups in the regex using a\n-// \"sublexer\". Used when lexing code blocks where the name of a sublexer is\n+// sublexer. Used when lexing code blocks where the name of a sublexer is\n // contained within the block, for example on a Markdown text block or SQL\n // language block.\n //\n-// The sublexer will be retrieved using sublexerGetFunc (typically\n-// internal.Get), using the captured value from the matched sublexerNameGroup.\n-//\n-// If sublexerGetFunc returns a non-nil lexer for the captured sublexerNameGroup,\n-// then tokens for the matched codeGroup will be emitted using the retrieved\n-// lexer. Otherwise, if the sublexer is nil, then tokens will be emitted from\n-// the passed emitter.\n+// An attempt to load the sublexer will be made using the captured value from\n+// the text of the matched sublexerNameGroup. If a sublexer matching the\n+// sublexerNameGroup is available, then tokens for the matched codeGroup will\n+// be emitted using the sublexer. Otherwise, if no sublexer is available, then\n+// tokens will be emitted from the passed emitter.\n //\n // Example:\n //\n-// \tvar Markdown = internal.Register(MustNewLexer(\n-// \t\t&Config{\n-// \t\t\tName:      \"markdown\",\n-// \t\t\tAliases:   []string{\"md\", \"mkd\"},\n-// \t\t\tFilenames: []string{\"*.md\", \"*.mkd\", \"*.markdown\"},\n-// \t\t\tMimeTypes: []string{\"text/x-markdown\"},\n-// \t\t},\n-// \t\tRules{\n-// \t\t\t\"root\": {\n-// \t\t\t\t{\"^(```)(\\\\w+)(\\\\n)([\\\\w\\\\W]*?)(^```$)\",\n-// \t\t\t\t\tUsingByGroup(\n-// \t\t\t\t\t\tinternal.Get,\n-// \t\t\t\t\t\t2, 4,\n-// \t\t\t\t\t\tString, String, String, Text, String,\n-// \t\t\t\t\t),\n-// \t\t\t\t\tnil,\n-// \t\t\t\t},\n-// \t\t\t},\n-// \t\t},\n-// \t))\n+//\tvar Markdown = internal.Register(MustNewLexer(\n+//\t\t&Config{\n+//\t\t\tName:      \"markdown\",\n+//\t\t\tAliases:   []string{\"md\", \"mkd\"},\n+//\t\t\tFilenames: []string{\"*.md\", \"*.mkd\", \"*.markdown\"},\n+//\t\t\tMimeTypes: []string{\"text/x-markdown\"},\n+//\t\t},\n+//\t\tRules{\n+//\t\t\t\"root\": {\n+//\t\t\t\t{\"^(```)(\\\\w+)(\\\\n)([\\\\w\\\\W]*?)(^```$)\",\n+//\t\t\t\t\tUsingByGroup(\n+//\t\t\t\t\t\t2, 4,\n+//\t\t\t\t\t\tString, String, String, Text, String,\n+//\t\t\t\t\t),\n+//\t\t\t\t\tnil,\n+//\t\t\t\t},\n+//\t\t\t},\n+//\t\t},\n+//\t))\n //\n-// See the lexers/m/markdown.go for the complete example.\n+// See the lexers/markdown.go for the complete example.\n //\n // Note: panic's if the number of emitters does not equal the number of matched\n // groups in the regex."
    },
    {
      "sha": "6dc54d9274b9318eca536e54fffc4a5270044476",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/formatters/html/html.go",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fformatters%2Fhtml%2Fhtml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fformatters%2Fhtml%2Fhtml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fformatters%2Fhtml%2Fhtml.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -100,9 +100,9 @@ func LineNumbersInTable(b bool) Option {\n \t}\n }\n \n-// LinkableLineNumbers decorates the line numbers HTML elements with an \"id\"\n+// WithLinkableLineNumbers decorates the line numbers HTML elements with an \"id\"\n // attribute so they can be linked.\n-func LinkableLineNumbers(b bool, prefix string) Option {\n+func WithLinkableLineNumbers(b bool, prefix string) Option {\n \treturn func(f *Formatter) {\n \t\tf.linkableLineNumbers = b\n \t\tf.lineNumbersIDPrefix = prefix\n@@ -262,7 +262,7 @@ func (f *Formatter) writeHTML(w io.Writer, style *chroma.Style, tokens []chroma.\n \t\t\t\tfmt.Fprintf(w, \"<span%s>\", f.styleAttr(css, chroma.LineHighlight))\n \t\t\t}\n \n-\t\t\tfmt.Fprintf(w, \"<span%s%s>%s\\n</span>\", f.styleAttr(css, chroma.LineNumbersTable), f.lineIDAttribute(line), f.lineTitleWithLinkIfNeeded(lineDigits, line))\n+\t\t\tfmt.Fprintf(w, \"<span%s%s>%s\\n</span>\", f.styleAttr(css, chroma.LineNumbersTable), f.lineIDAttribute(line), f.lineTitleWithLinkIfNeeded(css, lineDigits, line))\n \n \t\t\tif highlight {\n \t\t\t\tfmt.Fprintf(w, \"</span>\")\n@@ -302,7 +302,7 @@ func (f *Formatter) writeHTML(w io.Writer, style *chroma.Style, tokens []chroma.\n \n \t\t\t// Line number\n \t\t\tif f.lineNumbers && !wrapInTable {\n-\t\t\t\tfmt.Fprintf(w, \"<span%s%s>%s</span>\", f.styleAttr(css, chroma.LineNumbers), f.lineIDAttribute(line), f.lineTitleWithLinkIfNeeded(lineDigits, line))\n+\t\t\t\tfmt.Fprintf(w, \"<span%s%s>%s</span>\", f.styleAttr(css, chroma.LineNumbers), f.lineIDAttribute(line), f.lineTitleWithLinkIfNeeded(css, lineDigits, line))\n \t\t\t}\n \n \t\t\tfmt.Fprintf(w, `<span%s>`, f.styleAttr(css, chroma.CodeLine))\n@@ -345,12 +345,12 @@ func (f *Formatter) lineIDAttribute(line int) string {\n \treturn fmt.Sprintf(\" id=\\\"%s\\\"\", f.lineID(line))\n }\n \n-func (f *Formatter) lineTitleWithLinkIfNeeded(lineDigits, line int) string {\n+func (f *Formatter) lineTitleWithLinkIfNeeded(css map[chroma.TokenType]string, lineDigits, line int) string {\n \ttitle := fmt.Sprintf(\"%*d\", lineDigits, line)\n \tif !f.linkableLineNumbers {\n \t\treturn title\n \t}\n-\treturn fmt.Sprintf(\"<a style=\\\"outline: none; text-decoration:none; color:inherit\\\" href=\\\"#%s\\\">%s</a>\", f.lineID(line), title)\n+\treturn fmt.Sprintf(\"<a%s href=\\\"#%s\\\">%s</a>\", f.styleAttr(css, chroma.LineLink), f.lineID(line), title)\n }\n \n func (f *Formatter) lineID(line int) string {\n@@ -520,6 +520,7 @@ func (f *Formatter) styleToCSS(style *chroma.Style) map[chroma.TokenType]string\n \tclasses[chroma.LineNumbersTable] = lineNumbersStyle + classes[chroma.LineNumbersTable]\n \tclasses[chroma.LineTable] = \"border-spacing: 0; padding: 0; margin: 0; border: 0;\" + classes[chroma.LineTable]\n \tclasses[chroma.LineTableTD] = \"vertical-align: top; padding: 0; margin: 0; border: 0;\" + classes[chroma.LineTableTD]\n+\tclasses[chroma.LineLink] = \"outline: none; text-decoration: none; color: inherit\" + classes[chroma.LineLink]\n \treturn classes\n }\n "
    },
    {
      "sha": "a205d89c8aa143338d27f80b4e230e51ea759b6e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/README.md",
      "status": "modified",
      "additions": 11,
      "deletions": 5,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2FREADME.md?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -1,19 +1,24 @@\n-# Lexer tests\n+# Chroma lexers\n+\n+All lexers in Chroma should now be defined in XML unless they require custom code.\n+\n+## Lexer tests\n \n The tests in this directory feed a known input `testdata/<name>.actual` into the parser for `<name>` and check\n that its output matches `<name>.exported`.\n \n It is also possible to perform several tests on a same parser `<name>`, by placing know inputs `*.actual` into a\n directory `testdata/<name>/`.\n \n-## Running the tests\n+### Running the tests\n \n Run the tests as normal:\n ```go\n go test ./lexers\n ```\n \n-## Update existing tests\n+### Update existing tests\n+\n When you add a new test data file (`*.actual`), you need to regenerate all tests. That's how Chroma creates the `*.expected` test file based on the corresponding lexer.\n \n To regenerate all tests, type in your terminal:\n@@ -26,7 +31,8 @@ This first sets the `RECORD` environment variable to `true`. Then it runs `go te\n \n (That environment variable tells Chroma it needs to output test data. After running `go test ./lexers` you can remove or reset that variable.)\n \n-### Windows users\n+#### Windows users\n+\n Windows users will find that the `RECORD=true go test ./lexers` command fails in both the standard command prompt terminal and in PowerShell.\n \n Instead we have to perform both steps separately:\n@@ -35,6 +41,6 @@ Instead we have to perform both steps separately:\n \t+ In the regular command prompt window, the `set` command sets an environment variable for the current session: `set RECORD=true`. See [this page](https://superuser.com/questions/212150/how-to-set-env-variable-in-windows-cmd-line) for more.\n \t+ In PowerShell, you can use the `$env:RECORD = 'true'` command for that. See [this article](https://mcpmag.com/articles/2019/03/28/environment-variables-in-powershell.aspx) for more.\n \t+ You can also make a persistent environment variable by hand in the Windows computer settings. See [this article](https://www.computerhope.com/issues/ch000549.htm) for how.\n-- When the environment variable is set, run `go tests ./lexers`.\n+- When the environment variable is set, run `go test ./lexers`.\n \n Chroma will now regenerate the test files and print its results to the console window."
    },
    {
      "sha": "c1090ea5a3ef13106e5c40a6de129636382ba6cd",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/bqn.xml",
      "status": "added",
      "additions": 83,
      "deletions": 0,
      "changes": 83,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbqn.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbqn.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbqn.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,83 @@\n+<lexer>\n+  <config>\n+    <name>BQN</name>\n+    <alias>bqn</alias>\n+    <filename>*.bqn</filename>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"\\s+\">\n+        <token type=\"TextWhitespace\"/>\n+      </rule>\n+      <rule pattern=\"\\A#!.+$\">\n+        <token type=\"CommentPreproc\"/>\n+      </rule>\n+      <rule pattern=\"#.*$\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"&quot;(?:[^&quot;]|&quot;&quot;)*&quot;\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"[{}]\">\n+        <token type=\"KeywordPseudo\"/>\n+      </rule>\n+      <rule pattern=\"[⟨⟩\\[\\]‿]\">\n+        <token type=\"KeywordPseudo\"/>\n+      </rule>\n+      <rule pattern=\"[()]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"[:;?]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"[⋄,]\">\n+        <token type=\"KeywordPseudo\"/>\n+      </rule>\n+      <rule pattern=\"[←⇐↩→]\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"'.'\">\n+        <token type=\"LiteralStringChar\"/>\n+      </rule>\n+      <rule pattern=\"[˙˜˘¨⌜⁼´˝`]\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"[∘○⊸⟜⌾⊘◶⎉⚇⍟⎊]\">\n+        <token type=\"OperatorWord\"/>\n+      </rule>\n+      <rule pattern=\"[𝔽𝔾𝕎𝕏𝕊+\\-×÷⋆√⌊⌈|¬∧∨&lt;&gt;≠=≤≥≡≢⊣⊢⥊∾≍⋈↑↓↕«»⌽⍉/⍋⍒⊏⊑⊐⊒∊⍷⊔!⍕⍎]\">\n+        <token type=\"NameFunction\"/>\n+      </rule>\n+      <rule pattern=\"[𝕗𝕘𝕨𝕩𝕤]\">\n+        <token type=\"Name\"/>\n+      </rule>\n+      <rule pattern=\"·\">\n+        <token type=\"NameConstant\"/>\n+      </rule>\n+      <rule pattern=\"@\">\n+        <token type=\"LiteralStringChar\"/>\n+      </rule>\n+      <rule pattern=\"\\d+(?:\\.\\d+)?[eE]¯?\\d+\">\n+        <token type=\"LiteralNumber\"/>\n+      </rule>\n+      <rule pattern=\"[¯∞π]?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+|E[+¯]?\\d+)?|¯|∞|π)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+|E[+¯]?\\d+)?|¯|∞|π))?\">\n+        <token type=\"LiteralNumber\"/>\n+      </rule>\n+      <rule pattern=\"(•?[a-z][A-Z_a-z0-9π∞¯]*|𝕣)\">\n+        <token type=\"Name\"/>\n+      </rule>\n+      <rule pattern=\"•?[A-Z][A-Z_a-z0-9π∞¯]*\">\n+        <token type=\"NameFunction\"/>\n+      </rule>\n+      <rule pattern=\"(•?_[A-Za-z][A-Z_a-z0-9π∞¯]*|_𝕣)\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"(•?_[A-Za-z][A-Z_a-z0-9π∞¯]*_|_𝕣_)\">\n+        <token type=\"OperatorWord\"/>\n+      </rule>\n+      <rule pattern=\"\\.\">\n+        <token type=\"Text\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "f941802e182ef6ad464a7422b6b2fb6ae057ef18",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/c.xml",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -196,7 +196,7 @@\n       <rule pattern=\"(restricted|volatile|continue|register|default|typedef|struct|extern|switch|sizeof|static|return|union|while|const|break|goto|enum|else|case|auto|for|asm|if|do)\\b\">\n         <token type=\"Keyword\"/>\n       </rule>\n-      <rule pattern=\"(bool|int|long|float|short|double|char((8|16|32)_t)?|unsigned|signed|void|u?int(_fast|_least|)(8|16|32|64)_t)\\b\">\n+      <rule pattern=\"(bool|int|long|float|short|double|char((8|16|32)_t)?|unsigned|signed|void|u?int(_fast|_least|)(8|16|32|64)_t)\\b|\\b[a-z]\\w*_t\\b\">\n         <token type=\"KeywordType\"/>\n       </rule>\n       <rule pattern=\"(typename|__inline|restrict|_inline|thread|inline|naked)\\b\">\n@@ -218,6 +218,9 @@\n           <token type=\"Punctuation\"/>\n         </bygroups>\n       </rule>\n+      <rule pattern=\"\\b[A-Za-z_]\\w*(?=\\s*\\()\">\n+          <token type=\"NameFunction\"/>\n+      </rule>\n       <rule pattern=\"[a-zA-Z_]\\w*\">\n         <token type=\"Name\"/>\n       </rule>\n@@ -250,4 +253,4 @@\n       </rule>\n     </state>\n   </rules>\n-</lexer>\n\\ No newline at end of file\n+</lexer>"
    },
    {
      "sha": "6e370c763ed94addf9085029a1a8b6a878ea86ae",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/css.xml",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcss.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcss.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcss.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -191,7 +191,7 @@\n       <rule pattern=\"(-webkit-|-khtml-|prince-|-atsc-|-moz-|-rim-|-wap-|-ms-|-xv-|mso-|-ah-|-hp-|-ro-|-tc-|-o-)\">\n         <token type=\"KeywordPseudo\"/>\n       </rule>\n-      <rule pattern=\"(align-content|align-items|align-self|alignment-baseline|all|animation|animation-delay|animation-direction|animation-duration|animation-fill-mode|animation-iteration-count|animation-name|animation-play-state|animation-timing-function|appearance|azimuth|backface-visibility|background|background-attachment|background-blend-mode|background-clip|background-color|background-image|background-origin|background-position|background-repeat|background-size|baseline-shift|bookmark-label|bookmark-level|bookmark-state|border|border-bottom|border-bottom-color|border-bottom-left-radius|border-bottom-right-radius|border-bottom-style|border-bottom-width|border-boundary|border-collapse|border-color|border-image|border-image-outset|border-image-repeat|border-image-slice|border-image-source|border-image-width|border-left|border-left-color|border-left-style|border-left-width|border-radius|border-right|border-right-color|border-right-style|border-right-width|border-spacing|border-style|border-top|border-top-color|border-top-left-radius|border-top-right-radius|border-top-style|border-top-width|border-width|bottom|box-decoration-break|box-shadow|box-sizing|box-snap|box-suppress|break-after|break-before|break-inside|caption-side|caret|caret-animation|caret-color|caret-shape|chains|clear|clip|clip-path|clip-rule|color|color-interpolation-filters|column-count|column-fill|column-gap|column-rule|column-rule-color|column-rule-style|column-rule-width|column-span|column-width|columns|content|counter-increment|counter-reset|counter-set|crop|cue|cue-after|cue-before|cursor|direction|display|dominant-baseline|elevation|empty-cells|filter|flex|flex-basis|flex-direction|flex-flow|flex-grow|flex-shrink|flex-wrap|float|float-defer|float-offset|float-reference|flood-color|flood-opacity|flow|flow-from|flow-into|font|font-family|font-feature-settings|font-kerning|font-language-override|font-size|font-size-adjust|font-stretch|font-style|font-synthesis|font-variant|font-variant-alternates|font-variant-caps|font-variant-east-asian|font-variant-ligatures|font-variant-numeric|font-variant-position|font-weight|footnote-display|footnote-policy|glyph-orientation-vertical|grid|grid-area|grid-auto-columns|grid-auto-flow|grid-auto-rows|grid-column|grid-column-end|grid-column-gap|grid-column-start|grid-gap|grid-row|grid-row-end|grid-row-gap|grid-row-start|grid-template|grid-template-areas|grid-template-columns|grid-template-rows|hanging-punctuation|height|hyphenate-character|hyphenate-limit-chars|hyphenate-limit-last|hyphenate-limit-lines|hyphenate-limit-zone|hyphens|image-orientation|image-resolution|initial-letter|initial-letter-align|initial-letter-wrap|isolation|justify-content|justify-items|justify-self|left|letter-spacing|lighting-color|line-break|line-grid|line-height|line-snap|list-style|list-style-image|list-style-position|list-style-type|margin|margin-bottom|margin-left|margin-right|margin-top|marker-side|marquee-direction|marquee-loop|marquee-speed|marquee-style|mask|mask-border|mask-border-mode|mask-border-outset|mask-border-repeat|mask-border-slice|mask-border-source|mask-border-width|mask-clip|mask-composite|mask-image|mask-mode|mask-origin|mask-position|mask-repeat|mask-size|mask-type|max-height|max-lines|max-width|min-height|min-width|mix-blend-mode|motion|motion-offset|motion-path|motion-rotation|move-to|nav-down|nav-left|nav-right|nav-up|object-fit|object-position|offset-after|offset-before|offset-end|offset-start|opacity|order|orphans|outline|outline-color|outline-offset|outline-style|outline-width|overflow|overflow-style|overflow-wrap|overflow-x|overflow-y|padding|padding-bottom|padding-left|padding-right|padding-top|page|page-break-after|page-break-before|page-break-inside|page-policy|pause|pause-after|pause-before|perspective|perspective-origin|pitch|pitch-range|play-during|polar-angle|polar-distance|position|presentation-level|quotes|region-fragment|resize|rest|rest-after|rest-before|richness|right|rotation|rotation-point|ruby-align|ruby-merge|ruby-position|running|scroll-snap-coordinate|scroll-snap-destination|scroll-snap-points-x|scroll-snap-points-y|scroll-snap-type|shape-image-threshold|shape-inside|shape-margin|shape-outside|size|speak|speak-as|speak-header|speak-numeral|speak-punctuation|speech-rate|stress|string-set|tab-size|table-layout|text-align|text-align-last|text-combine-upright|text-decoration|text-decoration-color|text-decoration-line|text-decoration-skip|text-decoration-style|text-emphasis|text-emphasis-color|text-emphasis-position|text-emphasis-style|text-indent|text-justify|text-orientation|text-overflow|text-shadow|text-space-collapse|text-space-trim|text-spacing|text-transform|text-underline-position|text-wrap|top|transform|transform-origin|transform-style|transition|transition-delay|transition-duration|transition-property|transition-timing-function|unicode-bidi|user-select|vertical-align|visibility|voice-balance|voice-duration|voice-family|voice-pitch|voice-range|voice-rate|voice-stress|voice-volume|volume|white-space|widows|width|will-change|word-break|word-spacing|word-wrap|wrap-after|wrap-before|wrap-flow|wrap-inside|wrap-through|writing-mode|z-index)(\\s*)(\\:)\">\n+      <rule pattern=\"(align-content|align-items|align-self|alignment-baseline|all|animation|animation-delay|animation-direction|animation-duration|animation-fill-mode|animation-iteration-count|animation-name|animation-play-state|animation-timing-function|appearance|azimuth|backface-visibility|background|background-attachment|background-blend-mode|background-clip|background-color|background-image|background-origin|background-position|background-repeat|background-size|baseline-shift|bookmark-label|bookmark-level|bookmark-state|border|border-bottom|border-bottom-color|border-bottom-left-radius|border-bottom-right-radius|border-bottom-style|border-bottom-width|border-boundary|border-collapse|border-color|border-image|border-image-outset|border-image-repeat|border-image-slice|border-image-source|border-image-width|border-left|border-left-color|border-left-style|border-left-width|border-radius|border-right|border-right-color|border-right-style|border-right-width|border-spacing|border-style|border-top|border-top-color|border-top-left-radius|border-top-right-radius|border-top-style|border-top-width|border-width|bottom|box-decoration-break|box-shadow|box-sizing|box-snap|box-suppress|break-after|break-before|break-inside|caption-side|caret|caret-animation|caret-color|caret-shape|chains|clear|clip|clip-path|clip-rule|color|color-interpolation-filters|column-count|column-fill|column-gap|column-rule|column-rule-color|column-rule-style|column-rule-width|column-span|column-width|columns|content|counter-increment|counter-reset|counter-set|crop|cue|cue-after|cue-before|cursor|direction|display|dominant-baseline|elevation|empty-cells|filter|flex|flex-basis|flex-direction|flex-flow|flex-grow|flex-shrink|flex-wrap|float|float-defer|float-offset|float-reference|flood-color|flood-opacity|flow|flow-from|flow-into|font|font-family|font-feature-settings|font-kerning|font-language-override|font-size|font-size-adjust|font-stretch|font-style|font-synthesis|font-variant|font-variant-alternates|font-variant-caps|font-variant-east-asian|font-variant-ligatures|font-variant-numeric|font-variant-position|font-weight|footnote-display|footnote-policy|gap|glyph-orientation-vertical|grid|grid-area|grid-auto-columns|grid-auto-flow|grid-auto-rows|grid-column|grid-column-end|grid-column-gap|grid-column-start|grid-gap|grid-row|grid-row-end|grid-row-gap|grid-row-start|grid-template|grid-template-areas|grid-template-columns|grid-template-rows|hanging-punctuation|height|hyphenate-character|hyphenate-limit-chars|hyphenate-limit-last|hyphenate-limit-lines|hyphenate-limit-zone|hyphens|image-orientation|image-resolution|initial-letter|initial-letter-align|initial-letter-wrap|isolation|justify-content|justify-items|justify-self|left|letter-spacing|lighting-color|line-break|line-grid|line-height|line-snap|list-style|list-style-image|list-style-position|list-style-type|margin|margin-bottom|margin-left|margin-right|margin-top|marker-side|marquee-direction|marquee-loop|marquee-speed|marquee-style|mask|mask-border|mask-border-mode|mask-border-outset|mask-border-repeat|mask-border-slice|mask-border-source|mask-border-width|mask-clip|mask-composite|mask-image|mask-mode|mask-origin|mask-position|mask-repeat|mask-size|mask-type|max-height|max-lines|max-width|min-height|min-width|mix-blend-mode|motion|motion-offset|motion-path|motion-rotation|move-to|nav-down|nav-left|nav-right|nav-up|object-fit|object-position|offset-after|offset-before|offset-end|offset-start|opacity|order|orphans|outline|outline-color|outline-offset|outline-style|outline-width|overflow|overflow-style|overflow-wrap|overflow-x|overflow-y|padding|padding-bottom|padding-left|padding-right|padding-top|page|page-break-after|page-break-before|page-break-inside|page-policy|pause|pause-after|pause-before|perspective|perspective-origin|pitch|pitch-range|play-during|polar-angle|polar-distance|position|presentation-level|quotes|region-fragment|resize|rest|rest-after|rest-before|richness|right|rotation|rotation-point|ruby-align|ruby-merge|ruby-position|running|scroll-snap-coordinate|scroll-snap-destination|scroll-snap-points-x|scroll-snap-points-y|scroll-snap-type|shape-image-threshold|shape-inside|shape-margin|shape-outside|size|speak|speak-as|speak-header|speak-numeral|speak-punctuation|speech-rate|stress|string-set|tab-size|table-layout|text-align|text-align-last|text-combine-upright|text-decoration|text-decoration-color|text-decoration-line|text-decoration-skip|text-decoration-style|text-emphasis|text-emphasis-color|text-emphasis-position|text-emphasis-style|text-indent|text-justify|text-orientation|text-overflow|text-shadow|text-space-collapse|text-space-trim|text-spacing|text-transform|text-underline-position|text-wrap|top|transform|transform-origin|transform-style|transition|transition-delay|transition-duration|transition-property|transition-timing-function|unicode-bidi|user-select|vertical-align|visibility|voice-balance|voice-duration|voice-family|voice-pitch|voice-range|voice-rate|voice-stress|voice-volume|volume|white-space|widows|width|will-change|word-break|word-spacing|word-wrap|wrap-after|wrap-before|wrap-flow|wrap-inside|wrap-through|writing-mode|z-index)(\\s*)(\\:)\">\n         <bygroups>\n           <token type=\"Keyword\"/>\n           <token type=\"Text\"/>"
    },
    {
      "sha": "6140e704146dbc255035caef5bde5b5420f41bc1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/fortran.xml",
      "status": "modified",
      "additions": 13,
      "deletions": 5,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffortran.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffortran.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffortran.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -15,15 +15,23 @@\n   <rules>\n     <state name=\"core\">\n       <rule pattern=\"\\b(DO)(\\s+)(CONCURRENT)\\b\">\n-        <token type=\"Keyword\"/>\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"TextWhitespace\"/>\n+          <token type=\"Keyword\"/>\n+        </bygroups>\n       </rule>\n       <rule pattern=\"\\b(GO)(\\s*)(TO)\\b\">\n-        <token type=\"Keyword\"/>\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"TextWhitespace\"/>\n+          <token type=\"Keyword\"/>\n+        </bygroups>\n       </rule>\n-      <rule pattern=\"\\b(ABSTRACT|ACCEPT|ALL|ALLSTOP|ALLOCATABLE|ALLOCATE|ARRAY|ASSIGN|ASSOCIATE|ASYNCHRONOUS|BACKSPACE|BIND|BLOCK|BLOCKDATA|BYTE|CALL|CASE|CLASS|CLOSE|CODIMENSION|COMMON|CONTIGUOUS|CONTAINS|CONTINUE|CRITICAL|CYCLE|DATA|DEALLOCATE|DECODE|DEFERRED|DIMENSION|DO|ELEMENTAL|ELSE|ENCODE|END|ENDASSOCIATE|ENDBLOCK|ENDDO|ENDENUM|ENDFORALL|ENDFUNCTION|ENDIF|ENDINTERFACE|ENDMODULE|ENDPROGRAM|ENDSELECT|ENDSUBMODULE|ENDSUBROUTINE|ENDTYPE|ENDWHERE|ENTRY|ENUM|ENUMERATOR|EQUIVALENCE|ERROR STOP|EXIT|EXTENDS|EXTERNAL|EXTRINSIC|FILE|FINAL|FORALL|FORMAT|FUNCTION|GENERIC|IF|IMAGES|IMPLICIT|IMPORT|IMPURE|INCLUDE|INQUIRE|INTENT|INTERFACE|INTRINSIC|IS|LOCK|MEMORY|MODULE|NAMELIST|NULLIFY|NONE|NON_INTRINSIC|NON_OVERRIDABLE|NOPASS|ONLY|OPEN|OPTIONAL|OPTIONS|PARAMETER|PASS|PAUSE|POINTER|PRINT|PRIVATE|PROGRAM|PROCEDURE|PROTECTED|PUBLIC|PURE|READ|RECURSIVE|RESULT|RETURN|REWIND|SAVE|SELECT|SEQUENCE|STOP|SUBMODULE|SUBROUTINE|SYNC|SYNCALL|SYNCIMAGES|SYNCMEMORY|TARGET|THEN|TYPE|UNLOCK|USE|VALUE|VOLATILE|WHERE|WRITE|WHILE)\\s*\\b\">\n+      <rule pattern=\"\\b(ABSTRACT|ACCEPT|ALL|ALLSTOP|ALLOCATABLE|ALLOCATE|ARRAY|ASSIGN|ASSOCIATE|ASYNCHRONOUS|BACKSPACE|BIND|BLOCK|BLOCKDATA|BYTE|CALL|CASE|CLASS|CLOSE|CODIMENSION|COMMON|CONTIGUOUS|CONTAINS|CONTINUE|CRITICAL|CYCLE|DATA|DEALLOCATE|DECODE|DEFERRED|DIMENSION|DO|ELEMENTAL|ELSE|ENCODE|END|ENDASSOCIATE|ENDBLOCK|ENDDO|ENDENUM|ENDFORALL|ENDFUNCTION|ENDIF|ENDINTERFACE|ENDMODULE|ENDPROGRAM|ENDSELECT|ENDSUBMODULE|ENDSUBROUTINE|ENDTYPE|ENDWHERE|ENTRY|ENUM|ENUMERATOR|EQUIVALENCE|ERROR STOP|EXIT|EXTENDS|EXTERNAL|EXTRINSIC|FILE|FINAL|FORALL|FORMAT|FUNCTION|GENERIC|IF|IMAGES|IMPLICIT|IMPORT|IMPURE|INCLUDE|INQUIRE|INTENT|INTERFACE|INTRINSIC|IS|LOCK|MEMORY|MODULE|NAMELIST|NULLIFY|NONE|NON_INTRINSIC|NON_OVERRIDABLE|NOPASS|ONLY|OPEN|OPTIONAL|OPTIONS|PARAMETER|PASS|PAUSE|POINTER|PRINT|PRIVATE|PROGRAM|PROCEDURE|PROTECTED|PUBLIC|PURE|READ|RECURSIVE|RESULT|RETURN|REWIND|SAVE|SELECT|SEQUENCE|STOP|SUBMODULE|SUBROUTINE|SYNC|SYNCALL|SYNCIMAGES|SYNCMEMORY|TARGET|THEN|TYPE|UNLOCK|USE|VALUE|VOLATILE|WHERE|WRITE|WHILE)\\b\">\n         <token type=\"Keyword\"/>\n       </rule>\n-      <rule pattern=\"\\b(CHARACTER|COMPLEX|DOUBLE PRECISION|DOUBLE COMPLEX|INTEGER|LOGICAL|REAL|C_INT|C_SHORT|C_LONG|C_LONG_LONG|C_SIGNED_CHAR|C_SIZE_T|C_INT8_T|C_INT16_T|C_INT32_T|C_INT64_T|C_INT_LEAST8_T|C_INT_LEAST16_T|C_INT_LEAST32_T|C_INT_LEAST64_T|C_INT_FAST8_T|C_INT_FAST16_T|C_INT_FAST32_T|C_INT_FAST64_T|C_INTMAX_T|C_INTPTR_T|C_FLOAT|C_DOUBLE|C_LONG_DOUBLE|C_FLOAT_COMPLEX|C_DOUBLE_COMPLEX|C_LONG_DOUBLE_COMPLEX|C_BOOL|C_CHAR|C_PTR|C_FUNPTR)\\s*\\b\">\n+      <rule pattern=\"\\b(CHARACTER|COMPLEX|DOUBLE PRECISION|DOUBLE COMPLEX|INTEGER|LOGICAL|REAL|C_INT|C_SHORT|C_LONG|C_LONG_LONG|C_SIGNED_CHAR|C_SIZE_T|C_INT8_T|C_INT16_T|C_INT32_T|C_INT64_T|C_INT_LEAST8_T|C_INT_LEAST16_T|C_INT_LEAST32_T|C_INT_LEAST64_T|C_INT_FAST8_T|C_INT_FAST16_T|C_INT_FAST32_T|C_INT_FAST64_T|C_INTMAX_T|C_INTPTR_T|C_FLOAT|C_DOUBLE|C_LONG_DOUBLE|C_FLOAT_COMPLEX|C_DOUBLE_COMPLEX|C_LONG_DOUBLE_COMPLEX|C_BOOL|C_CHAR|C_PTR|C_FUNPTR)\\b\">\n         <token type=\"Keyword\"/>\n       </rule>\n       <rule pattern=\"(\\*\\*|\\*|\\+|-|\\/|&lt;|&gt;|&lt;=|&gt;=|==|\\/=|=)\">\n@@ -35,7 +43,7 @@\n       <rule pattern=\"[()\\[\\],:&amp;%;.]\">\n         <token type=\"Punctuation\"/>\n       </rule>\n-      <rule pattern=\"\\b(Abort|Abs|Access|AChar|ACos|ACosH|AdjustL|AdjustR|AImag|AInt|Alarm|All|Allocated|ALog|AMax|AMin|AMod|And|ANInt|Any|ASin|ASinH|Associated|ATan|ATanH|Atomic_Define|Atomic_Ref|BesJ|BesJN|Bessel_J0|Bessel_J1|Bessel_JN|Bessel_Y0|Bessel_Y1|Bessel_YN|BesY|BesYN|BGE|BGT|BLE|BLT|Bit_Size|BTest|CAbs|CCos|Ceiling|CExp|Char|ChDir|ChMod|CLog|Cmplx|Command_Argument_Count|Complex|Conjg|Cos|CosH|Count|CPU_Time|CShift|CSin|CSqRt|CTime|C_Loc|C_Associated|C_Null_Ptr|C_Null_Funptr|C_F_Pointer|C_F_ProcPointer|C_Null_Char|C_Alert|C_Backspace|C_Form_Feed|C_FunLoc|C_Sizeof|C_New_Line|C_Carriage_Return|C_Horizontal_Tab|C_Vertical_Tab|DAbs|DACos|DASin|DATan|Date_and_Time|DbesJ|DbesJN|DbesY|DbesYN|Dble|DCos|DCosH|DDiM|DErF|DErFC|DExp|Digits|DiM|DInt|DLog|DMax|DMin|DMod|DNInt|Dot_Product|DProd|DSign|DSinH|DShiftL|DShiftR|DSin|DSqRt|DTanH|DTan|DTime|EOShift|Epsilon|ErF|ErFC|ErFC_Scaled|ETime|Execute_Command_Line|Exit|Exp|Exponent|Extends_Type_Of|FDate|FGet|FGetC|FindLoc|Float|Floor|Flush|FNum|FPutC|FPut|Fraction|FSeek|FStat|FTell|Gamma|GError|GetArg|Get_Command|Get_Command_Argument|Get_Environment_Variable|GetCWD|GetEnv|GetGId|GetLog|GetPId|GetUId|GMTime|HostNm|Huge|Hypot|IAbs|IAChar|IAll|IAnd|IAny|IArgC|IBClr|IBits|IBSet|IChar|IDate|IDiM|IDInt|IDNInt|IEOr|IErrNo|IFix|Imag|ImagPart|Image_Index|Index|Int|IOr|IParity|IRand|IsaTty|IShft|IShftC|ISign|Iso_C_Binding|Is_Contiguous|Is_Iostat_End|Is_Iostat_Eor|ITime|Kill|Kind|LBound|LCoBound|Len|Len_Trim|LGe|LGt|Link|LLe|LLt|LnBlnk|Loc|Log|Log_Gamma|Logical|Long|LShift|LStat|LTime|MaskL|MaskR|MatMul|Max|MaxExponent|MaxLoc|MaxVal|MClock|Merge|Merge_Bits|Move_Alloc|Min|MinExponent|MinLoc|MinVal|Mod|Modulo|MvBits|Nearest|New_Line|NInt|Norm2|Not|Null|Num_Images|Or|Pack|Parity|PError|Precision|Present|Product|Radix|Rand|Random_Number|Random_Seed|Range|Real|RealPart|Rename|Repeat|Reshape|RRSpacing|RShift|Same_Type_As|Scale|Scan|Second|Selected_Char_Kind|Selected_Int_Kind|Selected_Real_Kind|Set_Exponent|Shape|ShiftA|ShiftL|ShiftR|Short|Sign|Signal|SinH|Sin|Sleep|Sngl|Spacing|Spread|SqRt|SRand|Stat|Storage_Size|Sum|SymLnk|System|System_Clock|Tan|TanH|Time|This_Image|Tiny|TrailZ|Transfer|Transpose|Trim|TtyNam|UBound|UCoBound|UMask|Unlink|Unpack|Verify|XOr|ZAbs|ZCos|ZExp|ZLog|ZSin|ZSqRt)\\s*\\b\">\n+      <rule pattern=\"\\b(Abort|Abs|Access|AChar|ACos|ACosH|AdjustL|AdjustR|AImag|AInt|Alarm|All|Allocated|ALog|AMax|AMin|AMod|And|ANInt|Any|ASin|ASinH|Associated|ATan|ATanH|Atomic_Define|Atomic_Ref|BesJ|BesJN|Bessel_J0|Bessel_J1|Bessel_JN|Bessel_Y0|Bessel_Y1|Bessel_YN|BesY|BesYN|BGE|BGT|BLE|BLT|Bit_Size|BTest|CAbs|CCos|Ceiling|CExp|Char|ChDir|ChMod|CLog|Cmplx|Command_Argument_Count|Complex|Conjg|Cos|CosH|Count|CPU_Time|CShift|CSin|CSqRt|CTime|C_Loc|C_Associated|C_Null_Ptr|C_Null_Funptr|C_F_Pointer|C_F_ProcPointer|C_Null_Char|C_Alert|C_Backspace|C_Form_Feed|C_FunLoc|C_Sizeof|C_New_Line|C_Carriage_Return|C_Horizontal_Tab|C_Vertical_Tab|DAbs|DACos|DASin|DATan|Date_and_Time|DbesJ|DbesJN|DbesY|DbesYN|Dble|DCos|DCosH|DDiM|DErF|DErFC|DExp|Digits|DiM|DInt|DLog|DMax|DMin|DMod|DNInt|Dot_Product|DProd|DSign|DSinH|DShiftL|DShiftR|DSin|DSqRt|DTanH|DTan|DTime|EOShift|Epsilon|ErF|ErFC|ErFC_Scaled|ETime|Execute_Command_Line|Exit|Exp|Exponent|Extends_Type_Of|FDate|FGet|FGetC|FindLoc|Float|Floor|Flush|FNum|FPutC|FPut|Fraction|FSeek|FStat|FTell|Gamma|GError|GetArg|Get_Command|Get_Command_Argument|Get_Environment_Variable|GetCWD|GetEnv|GetGId|GetLog|GetPId|GetUId|GMTime|HostNm|Huge|Hypot|IAbs|IAChar|IAll|IAnd|IAny|IArgC|IBClr|IBits|IBSet|IChar|IDate|IDiM|IDInt|IDNInt|IEOr|IErrNo|IFix|Imag|ImagPart|Image_Index|Index|Int|IOr|IParity|IRand|IsaTty|IShft|IShftC|ISign|Iso_C_Binding|Is_Contiguous|Is_Iostat_End|Is_Iostat_Eor|ITime|Kill|Kind|LBound|LCoBound|Len|Len_Trim|LGe|LGt|Link|LLe|LLt|LnBlnk|Loc|Log|Log_Gamma|Logical|Long|LShift|LStat|LTime|MaskL|MaskR|MatMul|Max|MaxExponent|MaxLoc|MaxVal|MClock|Merge|Merge_Bits|Move_Alloc|Min|MinExponent|MinLoc|MinVal|Mod|Modulo|MvBits|Nearest|New_Line|NInt|Norm2|Not|Null|Num_Images|Or|Pack|Parity|PError|Precision|Present|Product|Radix|Rand|Random_Number|Random_Seed|Range|Real|RealPart|Rename|Repeat|Reshape|RRSpacing|RShift|Same_Type_As|Scale|Scan|Second|Selected_Char_Kind|Selected_Int_Kind|Selected_Real_Kind|Set_Exponent|Shape|ShiftA|ShiftL|ShiftR|Short|Sign|Signal|SinH|Sin|Sleep|Sngl|Spacing|Spread|SqRt|SRand|Stat|Storage_Size|Sum|SymLnk|System|System_Clock|Tan|TanH|Time|This_Image|Tiny|TrailZ|Transfer|Transpose|Trim|TtyNam|UBound|UCoBound|UMask|Unlink|Unpack|Verify|XOr|ZAbs|ZCos|ZExp|ZLog|ZSin|ZSqRt)\\b\">\n         <token type=\"NameBuiltin\"/>\n       </rule>\n       <rule pattern=\"\\.(true|false)\\.\">"
    },
    {
      "sha": "e1c19ffb45804efc794c83937234008b533e9379",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/fsharp.xml",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffsharp.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffsharp.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffsharp.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -133,7 +133,7 @@\n         <token type=\"LiteralString\"/>\n         <push state=\"string\"/>\n       </rule>\n-      <rule pattern=\"\\b(open|module)(\\s+)([\\w.]+)\">\n+      <rule pattern=\"\\b(open type|open|module)(\\s+)([\\w.]+)\">\n         <bygroups>\n           <token type=\"Keyword\"/>\n           <token type=\"Text\"/>"
    },
    {
      "sha": "774f53cf288b8d25a77109305963ea1216b47fed",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/hlsl.xml",
      "status": "added",
      "additions": 107,
      "deletions": 0,
      "changes": 107,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhlsl.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhlsl.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhlsl.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,107 @@\n+<lexer>\n+  <config>\n+    <name>HLSL</name>\n+    <alias>hlsl</alias>\n+    <filename>*.hlsl</filename>\n+    <filename>*.hlsli</filename>\n+    <mime_type>text/x-hlsl</mime_type>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"^#.*$\">\n+        <token type=\"CommentPreproc\"/>\n+      </rule>\n+      <rule pattern=\"//.*$\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"/(\\\\\\n)?[*](.|\\n)*?[*](\\\\\\n)?/\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+      <rule pattern=\"\\+|-|~|!=?|\\*|/|%|&lt;&lt;|&gt;&gt;|&lt;=?|&gt;=?|==?|&amp;&amp;?|\\^|\\|\\|?\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"[?:]\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"\\bdefined\\b\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"[;{}(),.\\[\\]]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"[+-]?\\d*\\.\\d+([eE][-+]?\\d+)?f?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"[+-]?\\d+\\.\\d*([eE][-+]?\\d+)?f?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"0[xX][0-9a-fA-F]*\">\n+        <token type=\"LiteralNumberHex\"/>\n+      </rule>\n+      <rule pattern=\"0[0-7]*\">\n+        <token type=\"LiteralNumberOct\"/>\n+      </rule>\n+      <rule pattern=\"[1-9][0-9]*\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"&quot;\">\n+        <token type=\"LiteralString\"/>\n+        <push state=\"string\"/>\n+      </rule>\n+      <rule pattern=\"\\b(asm|asm_fragment|break|case|cbuffer|centroid|class|column_major|compile|compile_fragment|const|continue|default|discard|do|else|export|extern|for|fxgroup|globallycoherent|groupshared|if|in|inline|inout|interface|line|lineadj|linear|namespace|nointerpolation|noperspective|NULL|out|packoffset|pass|pixelfragment|point|precise|return|register|row_major|sample|sampler|shared|stateblock|stateblock_state|static|struct|switch|tbuffer|technique|technique10|technique11|texture|typedef|triangle|triangleadj|uniform|vertexfragment|volatile|while)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"\\b(true|false)\\b\">\n+        <token type=\"KeywordConstant\"/>\n+      </rule>\n+      <rule pattern=\"\\b(auto|catch|char|const_cast|delete|dynamic_cast|enum|explicit|friend|goto|long|mutable|new|operator|private|protected|public|reinterpret_cast|short|signed|sizeof|static_cast|template|this|throw|try|typename|union|unsigned|using|virtual)\\b\">\n+        <token type=\"KeywordReserved\"/>\n+      </rule>\n+      <rule pattern=\"\\b(dword|matrix|snorm|string|unorm|unsigned|void|vector|BlendState|Buffer|ByteAddressBuffer|ComputeShader|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|HullShader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RasterizerState|RenderTargetView|RasterizerOrderedBuffer|RasterizerOrderedByteAddressBuffer|RasterizerOrderedStructuredBuffer|RasterizerOrderedTexture1D|RasterizerOrderedTexture1DArray|RasterizerOrderedTexture2D|RasterizerOrderedTexture2DArray|RasterizerOrderedTexture3D|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture1D|RWTexture1DArray|RWTexture2D|RWTexture2DArray|RWTexture3D|SamplerState|SamplerComparisonState|StructuredBuffer|Texture1D|Texture1DArray|Texture2D|Texture2DArray|Texture2DMS|Texture2DMSArray|Texture3D|TextureCube|TextureCubeArray|TriangleStream|VertexShader)\\b\">\n+        <token type=\"KeywordType\"/>\n+      </rule>\n+      <rule pattern=\"\\b(bool|double|float|int|half|min16float|min10float|min16int|min12int|min16uint|uint)([1-4](x[1-4])?)?\\b\">\n+        <token type=\"KeywordType\"/>\n+      </rule>\n+      <rule pattern=\"\\b(abort|abs|acos|all|AllMemoryBarrier|AllMemoryBarrierWithGroupSync|any|AppendStructuredBuffer|asdouble|asfloat|asin|asint|asuint|asuint|atan|atan2|ceil|CheckAccessFullyMapped|clamp|clip|CompileShader|ConsumeStructuredBuffer|cos|cosh|countbits|cross|D3DCOLORtoUBYTE4|ddx|ddx_coarse|ddx_fine|ddy|ddy_coarse|ddy_fine|degrees|determinant|DeviceMemoryBarrier|DeviceMemoryBarrierWithGroupSync|distance|dot|dst|errorf|EvaluateAttributeAtCentroid|EvaluateAttributeAtSample|EvaluateAttributeSnapped|exp|exp2|f16tof32|f32tof16|faceforward|firstbithigh|firstbitlow|floor|fma|fmod|frac|frexp|fwidth|GetRenderTargetSampleCount|GetRenderTargetSamplePosition|GlobalOrderedCountIncrement|GroupMemoryBarrier|GroupMemoryBarrierWithGroupSync|InterlockedAdd|InterlockedAnd|InterlockedCompareExchange|InterlockedCompareStore|InterlockedExchange|InterlockedMax|InterlockedMin|InterlockedOr|InterlockedXor|isfinite|isinf|isnan|ldexp|length|lerp|lit|log|log10|log2|mad|max|min|modf|msad4|mul|noise|normalize|pow|printf|Process2DQuadTessFactorsAvg|Process2DQuadTessFactorsMax|Process2DQuadTessFactorsMin|ProcessIsolineTessFactors|ProcessQuadTessFactorsAvg|ProcessQuadTessFactorsMax|ProcessQuadTessFactorsMin|ProcessTriTessFactorsAvg|ProcessTriTessFactorsMax|ProcessTriTessFactorsMin|QuadReadLaneAt|QuadSwapX|QuadSwapY|radians|rcp|reflect|refract|reversebits|round|rsqrt|saturate|sign|sin|sincos|sinh|smoothstep|sqrt|step|tan|tanh|tex1D|tex1D|tex1Dbias|tex1Dgrad|tex1Dlod|tex1Dproj|tex2D|tex2D|tex2Dbias|tex2Dgrad|tex2Dlod|tex2Dproj|tex3D|tex3D|tex3Dbias|tex3Dgrad|tex3Dlod|tex3Dproj|texCUBE|texCUBE|texCUBEbias|texCUBEgrad|texCUBElod|texCUBEproj|transpose|trunc|WaveAllBitAnd|WaveAllMax|WaveAllMin|WaveAllBitOr|WaveAllBitXor|WaveAllEqual|WaveAllProduct|WaveAllSum|WaveAllTrue|WaveAnyTrue|WaveBallot|WaveGetLaneCount|WaveGetLaneIndex|WaveGetOrderedIndex|WaveIsHelperLane|WaveOnce|WavePrefixProduct|WavePrefixSum|WaveReadFirstLane|WaveReadLaneAt)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"\\b(SV_ClipDistance|SV_ClipDistance0|SV_ClipDistance1|SV_Culldistance|SV_CullDistance0|SV_CullDistance1|SV_Coverage|SV_Depth|SV_DepthGreaterEqual|SV_DepthLessEqual|SV_DispatchThreadID|SV_DomainLocation|SV_GroupID|SV_GroupIndex|SV_GroupThreadID|SV_GSInstanceID|SV_InnerCoverage|SV_InsideTessFactor|SV_InstanceID|SV_IsFrontFace|SV_OutputControlPointID|SV_Position|SV_PrimitiveID|SV_RenderTargetArrayIndex|SV_SampleIndex|SV_StencilRef|SV_TessFactor|SV_VertexID|SV_ViewportArrayIndex)\\b\">\n+        <token type=\"NameDecorator\"/>\n+      </rule>\n+      <rule pattern=\"\\bSV_Target[0-7]?\\b\">\n+        <token type=\"NameDecorator\"/>\n+      </rule>\n+      <rule pattern=\"\\b(allow_uav_condition|branch|call|domain|earlydepthstencil|fastopt|flatten|forcecase|instance|loop|maxtessfactor|numthreads|outputcontrolpoints|outputtopology|partitioning|patchconstantfunc|unroll)\\b\">\n+        <token type=\"NameDecorator\"/>\n+      </rule>\n+      <rule pattern=\"[a-zA-Z_]\\w*\">\n+        <token type=\"Name\"/>\n+      </rule>\n+      <rule pattern=\"\\\\$\">\n+        <token type=\"CommentPreproc\"/>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+    </state>\n+    <state name=\"string\">\n+      <rule pattern=\"&quot;\">\n+        <token type=\"LiteralString\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"\\\\([\\\\abfnrtv&quot;\\&#x27;]|x[a-fA-F0-9]{2,4}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8}|[0-7]{1,3})\">\n+        <token type=\"LiteralStringEscape\"/>\n+      </rule>\n+      <rule pattern=\"[^\\\\&quot;\\n]+\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\\n\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "13ef274a058d4d59d7f5efbfb0061e5fb419ca9e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/ini.xml",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fini.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fini.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fini.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -7,8 +7,12 @@\n     <filename>*.ini</filename>\n     <filename>*.cfg</filename>\n     <filename>*.inf</filename>\n+    <filename>*.service</filename>\n+    <filename>*.socket</filename>\n     <filename>.gitconfig</filename>\n     <filename>.editorconfig</filename>\n+    <filename>pylintrc</filename>\n+    <filename>.pylintrc</filename>\n     <mime_type>text/x-ini</mime_type>\n     <mime_type>text/inf</mime_type>\n   </config>"
    },
    {
      "sha": "09c638a94292761c9e1359b3a43555cd473b31d0",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/kotlin.xml",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fkotlin.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fkotlin.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fkotlin.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -180,6 +180,9 @@\n       <rule pattern=\"@(?:[_\\p{L}][\\p{L}\\p{N}]*|`@?[_\\p{L}][\\p{L}\\p{N}]+`)\">\n         <token type=\"NameDecorator\"/>\n       </rule>\n+      <rule pattern=\"(?:\\p{Lu}[_\\p{L}]*)(?=\\.)\">\n+        <token type=\"NameClass\"/>\n+      </rule>\n       <rule pattern=\"(?:[_\\p{L}][\\p{L}\\p{N}]*|`@?[_\\p{L}][\\p{L}\\p{N}]+`)\">\n         <token type=\"Name\"/>\n       </rule>"
    },
    {
      "sha": "b63a15081df00a24cc94357c6dc6142145567b60",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/powershell.xml",
      "status": "modified",
      "additions": 87,
      "deletions": 7,
      "changes": 94,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fpowershell.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fpowershell.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fpowershell.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -6,6 +6,7 @@\n     <alias>ps1</alias>\n     <alias>psm1</alias>\n     <alias>psd1</alias>\n+    <alias>pwsh</alias>\n     <filename>*.ps1</filename>\n     <filename>*.psm1</filename>\n     <filename>*.psd1</filename>\n@@ -22,6 +23,15 @@\n       <rule pattern=\"\\s+\">\n         <token type=\"Text\"/>\n       </rule>\n+      <rule pattern=\"(\\s*)(#)(requires)(\\s+)\">\n+        <bygroups>\n+          <token type=\"TextWhitespace\"/>\n+          <token type=\"Comment\"/>\n+          <token type=\"Keyword\"/>\n+          <token type=\"TextWhitespace\"/>\n+        </bygroups>\n+        <push state=\"requires\"/>\n+      </rule>\n       <rule pattern=\"^(\\s*#[#\\s]*)(\\.(?:component|description|example|externalhelp|forwardhelpcategory|forwardhelptargetname|functionality|inputs|link|notes|outputs|parameter|remotehelprunspace|role|synopsis))([^\\n]*$)\">\n         <bygroups>\n           <token type=\"Comment\"/>\n@@ -46,6 +56,9 @@\n       <rule pattern=\"@&#39;\\n.*?\\n&#39;@\">\n         <token type=\"LiteralStringHeredoc\"/>\n       </rule>\n+      <rule pattern=\"@(?=\\(|{)|\\$(?=\\()\">\n+        <token type=\"NameVariableMagic\"/>\n+      </rule>\n       <rule pattern=\"`[\\&#39;&#34;$@-]\">\n         <token type=\"Punctuation\"/>\n       </rule>\n@@ -56,13 +69,42 @@\n       <rule pattern=\"&#39;([^&#39;]|&#39;&#39;)*&#39;\">\n         <token type=\"LiteralStringSingle\"/>\n       </rule>\n+      <rule pattern=\"(?&lt;!\\S)(function|filter|workflow)(\\s*)(global:|script:|private:|env:)?(\\w\\S*\\b)\">\n+        <bygroups>\n+          <token type=\"KeywordDeclaration\"/>\n+          <token type=\"TextWhitespace\"/>\n+          <token type=\"NameVariableMagic\"/>\n+          <token type=\"NameBuiltin\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\S)(class|configuration)(\\s+)(\\w\\S*)(\\s*)(:*)\">\n+        <bygroups>\n+          <token type=\"KeywordDeclaration\"/>\n+          <token type=\"TextWhitespace\"/>\n+          <token type=\"NameBuiltin\"/>\n+          <token type=\"NameBuiltin\"/>\n+          <token type=\"NameBuiltin\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"\\$false|\\$null|\\$true(?=\\b)\">\n+        <token type=\"NameVariableMagic\"/>\n+      </rule>\n       <rule pattern=\"(\\$|@@|@)((global|script|private|env):)?\\w+\">\n         <token type=\"NameVariable\"/>\n       </rule>\n+      <rule pattern=\"(parameter|validatenotnullorempty|validatescript|validaterange|validateset|validaterange|validatepattern|validatelength|validatecount|validatenotnullorempty|validatescript|cmdletbinding|alias)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n       <rule pattern=\"[a-z]\\w*-[a-z]\\w*\\b\">\n         <token type=\"NameBuiltin\"/>\n       </rule>\n-      <rule pattern=\"(while|validateset|validaterange|validatepattern|validatelength|validatecount|until|trap|switch|return|ref|process|param|parameter|in|if|global:|function|foreach|for|finally|filter|end|elseif|else|dynamicparam|do|default|continue|cmdletbinding|break|begin|alias|\\?|%|#script|#private|#local|#global|mandatory|parametersetname|position|valuefrompipeline|valuefrompipelinebypropertyname|valuefromremainingarguments|helpmessage|try|catch|throw)\\b\">\n+      <rule pattern=\"(mandatory|parametersetname|position|helpmessage|valuefrompipeline|valuefrompipelinebypropertyname|valuefromremainingarguments|dontshow)\\b\">\n+        <token type=\"NameAttribute\"/>\n+      </rule>\n+      <rule pattern=\"(confirmimpact|defaultparametersetname|helpuri|supportspaging|supportsshouldprocess|positionalbinding)\\b\">\n+        <token type=\"NameAttribute\"/>\n+      </rule>\n+      <rule pattern=\"(while|until|trap|switch|return|ref|process|param|parameter|in|if|global:|foreach|for|finally|filter|end|elseif|else|dynamicparam|do|default|continue|break|begin|\\?|%|#script|#private|#local|#global|try|catch|throw)\\b\">\n         <token type=\"Keyword\"/>\n       </rule>\n       <rule pattern=\"-(and|as|band|bnot|bor|bxor|casesensitive|ccontains|ceq|cge|cgt|cle|clike|clt|cmatch|cne|cnotcontains|cnotlike|cnotmatch|contains|creplace|eq|exact|f|file|ge|gt|icontains|ieq|ige|igt|ile|ilike|ilt|imatch|ine|inotcontains|inotlike|inotmatch|ireplace|is|isnot|le|like|lt|match|ne|not|notcontains|notlike|notmatch|or|regex|replace|wildcard)\\b\">\n@@ -71,19 +113,47 @@\n       <rule pattern=\"(ac|asnp|cat|cd|cfs|chdir|clc|clear|clhy|cli|clp|cls|clv|cnsn|compare|copy|cp|cpi|cpp|curl|cvpa|dbp|del|diff|dir|dnsn|ebp|echo|epal|epcsv|epsn|erase|etsn|exsn|fc|fhx|fl|foreach|ft|fw|gal|gbp|gc|gci|gcm|gcs|gdr|ghy|gi|gjb|gl|gm|gmo|gp|gps|gpv|group|gsn|gsnp|gsv|gu|gv|gwmi|h|history|icm|iex|ihy|ii|ipal|ipcsv|ipmo|ipsn|irm|ise|iwmi|iwr|kill|lp|ls|man|md|measure|mi|mount|move|mp|mv|nal|ndr|ni|nmo|npssc|nsn|nv|ogv|oh|popd|ps|pushd|pwd|r|rbp|rcjb|rcsn|rd|rdr|ren|ri|rjb|rm|rmdir|rmo|rni|rnp|rp|rsn|rsnp|rujb|rv|rvpa|rwmi|sajb|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spjb|spps|spsv|start|sujb|sv|swmi|tee|trcm|type|wget|where|wjb|write)\\s\">\n         <token type=\"NameBuiltin\"/>\n       </rule>\n-      <rule pattern=\"\\[[a-z_\\[][\\w. `,\\[\\]]*\\]\">\n-        <token type=\"NameConstant\"/>\n+      <rule pattern=\"(\\[)([a-z_\\[][\\w. `,\\[\\]]*)(\\])\">\n+        <bygroups>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"NameConstant\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\[)(?&lt;=\\S[^\\*|\\n]\\.)\\w+(?=\\s+|\\(|\\{|\\.)\">\n+        <token type=\"NameProperty\"/>\n       </rule>\n-      <rule pattern=\"-[a-z_]\\w*\">\n+      <rule pattern=\"(?&lt;!\\w)([-+]?(?:[0-9]+)?\\.?[0-9]+(?:(?:e|E)[0-9]+)?(?:F|f|D|d|M|m)?)((?i:[kmgtp]b)?)\\b\">\n+        <bygroups>\n+          <token type=\"LiteralNumberFloat\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"-[a-z_]\\w*:*\">\n         <token type=\"Name\"/>\n       </rule>\n       <rule pattern=\"\\w+\">\n         <token type=\"Name\"/>\n       </rule>\n-      <rule pattern=\"[.,;@{}\\[\\]$()=+*/\\\\&amp;%!~?^`|&lt;&gt;-]|::\">\n+      <rule pattern=\"[.,;@{}\\[\\]$()=+*/\\\\&amp;%!~?^\\x60|&lt;&gt;-]|::\">\n         <token type=\"Punctuation\"/>\n       </rule>\n     </state>\n+    <state name=\"requires\">\n+      <rule pattern=\"\\s*\\n|\\s*$\">\n+        <token type=\"TextWhitespace\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"-(?i:modules|pssnapin|runasadministrator|ahellid|version|assembly|psedition)\">\n+        <token type=\"KeywordDeclaration\"/>\n+      </rule>\n+      <rule pattern=\"-\\S*\\b\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+      <rule pattern=\"\\s+(\\S+)\">\n+        <token type=\"NameAttribute\"/>\n+      </rule>\n+    </state>\n     <state name=\"child\">\n       <rule pattern=\"\\)\">\n         <token type=\"Punctuation\"/>\n@@ -101,8 +171,12 @@\n         <token type=\"CommentMultiline\"/>\n         <pop depth=\"1\"/>\n       </rule>\n-      <rule pattern=\"\\.(component|description|example|externalhelp|forwardhelpcategory|forwardhelptargetname|functionality|inputs|link|notes|outputs|parameter|remotehelprunspace|role|synopsis)\">\n-        <token type=\"LiteralStringDoc\"/>\n+      <rule pattern=\"(\\s*\\.)(component|description|example|externalhelp|forwardhelpcategory|forwardhelptargetname|functionality|inputs|link|notes|outputs|parameter|remotehelprunspace|role|synopsis)(\\s*$)\">\n+        <bygroups>\n+          <token type=\"CommentMultiline\"/>\n+          <token type=\"LiteralStringDoc\"/>\n+          <token type=\"CommentMultiline\"/>\n+        </bygroups>\n       </rule>\n       <rule pattern=\"[#&amp;.]\">\n         <token type=\"CommentMultiline\"/>\n@@ -119,6 +193,9 @@\n         <token type=\"Punctuation\"/>\n         <push state=\"child\"/>\n       </rule>\n+      <rule pattern=\"((\\$)((global|script|private|env):)?\\w+)|((\\$){((global|script|private|env):)?\\w+})\">\n+        <token type=\"NameVariable\"/>\n+      </rule>\n       <rule pattern=\"&#34;&#34;\">\n         <token type=\"LiteralStringDouble\"/>\n       </rule>\n@@ -139,6 +216,9 @@\n         <token type=\"Punctuation\"/>\n         <push state=\"child\"/>\n       </rule>\n+      <rule pattern=\"((\\$)((global|script|private|env):)?\\w+)|((\\$){((global|script|private|env):)?\\w+})\">\n+        <token type=\"NameVariable\"/>\n+      </rule>\n       <rule pattern=\"[^@\\n]+&#34;]\">\n         <token type=\"LiteralStringHeredoc\"/>\n       </rule>"
    },
    {
      "sha": "93b24d2e9379d8750e9b4bec3b79073ce0bf3dc8",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/psl.xml",
      "status": "added",
      "additions": 126,
      "deletions": 0,
      "changes": 126,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fpsl.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fpsl.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fpsl.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,126 @@\n+<lexer>\n+  <config>\n+    <name>PSL</name>\n+    <alias>psl</alias>\n+    <filename>*.psl</filename>\n+    <filename>*.BATCH</filename>\n+    <filename>*.TRIG</filename>\n+    <filename>*.PROC</filename>\n+    <mime_type>text/x-psl</mime_type>\n+  </config>\n+  <rules>\n+  <!-- NameFunction|TypeName -->\n+    <state name=\"root\">\n+      <rule pattern=\"//.*$\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"/(\\\\\\n)?[*](.|\\n)*?[*](\\\\\\n)?/\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+      <rule pattern=\"\\+|-|\\*|/|%|'?&lt;|'?&gt;|'?=|\\band\\b|\\bor\\b|_|:\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"[{}(),\\[\\]]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"[+-]?\\d*\\.\\d+\">\n+        <token type=\"LiteralNumber\"/>\n+      </rule>\n+      <rule pattern=\"&quot;\">\n+        <token type=\"LiteralString\"/>\n+        <push state=\"string\"/>\n+      </rule>\n+      <rule pattern=\"\\.\">\n+        <token type=\"Operator\"/>\n+        <push state=\"method\"/>\n+      </rule>\n+      <rule pattern=\"\\$\\$\">\n+        <token type=\"NameFunction\"/>\n+        <push state=\"method\"/>\n+      </rule>\n+      <rule pattern=\"\\bdo\\b\">\n+        <token type=\"KeywordReserved\"/>\n+        <push state=\"callmethod\"/>\n+      </rule>\n+      <rule pattern=\"\\b(do|set|if|for|while|quit|catch|return|while)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"\\b(true|false)\\b\">\n+        <token type=\"KeywordConstant\"/>\n+      </rule>\n+      <rule pattern=\"\\btype\\b\">\n+        <token type=\"KeywordDeclaration\"/>\n+        <push state=\"typename\"/>\n+      </rule>\n+      <rule pattern=\"\\b(public|req|private|void)\\b\">\n+        <token type=\"KeywordDeclaration\"/>\n+      </rule>\n+      <rule pattern=\"\\b(Boolean|String|Number|Date)\\b\">\n+        <token type=\"KeywordType\"/>\n+      </rule>\n+      <rule pattern=\"\\^?[a-zA-Z][a-zA-Z0-9]*\">\n+        <token type=\"Name\"/>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+    </state>\n+    <state name=\"string\">\n+      <rule pattern=\"&quot;\">\n+        <token type=\"LiteralString\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"\\\\([\\\\abfnrtv&quot;\\&#x27;]|x[a-fA-F0-9]{2,4}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8}|[0-7]{1,3})\">\n+        <token type=\"LiteralStringEscape\"/>\n+      </rule>\n+      <rule pattern=\"[^\\\\&quot;\\n]+\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\\n\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"\\\\\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+    </state>\n+    <state name=\"method\">\n+      <rule pattern=\"\\(\">\n+        <token type=\"Punctuation\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"\\^[a-zA-Z][a-zA-Z0-9]*\">\n+        <token type=\"NameClass\"/>\n+      </rule>\n+      <rule pattern=\"[a-zA-Z][a-zA-Z0-9]*\">\n+        <token type=\"NameFunction\"/>\n+      </rule>\n+    </state>\n+    <state name=\"callmethod\">\n+      <rule pattern=\"\\(|{\">\n+        <token type=\"Punctuation\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\"\\^[a-zA-Z][a-zA-Z0-9]*\">\n+        <token type=\"NameClass\"/>\n+      </rule>\n+      <rule pattern=\"[a-zA-Z][a-zA-Z0-9]*\">\n+        <token type=\"NameFunction\"/>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+    </state>\n+    <state name=\"typename\">\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"\\b(public|req|private|void)\\b\">\n+        <token type=\"KeywordDeclaration\"/>\n+      </rule>\n+      <rule pattern=\"[a-zA-Z][a-zA-Z0-9]*\">\n+        <token type=\"NameClass\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "a6e889c642fb7340b51245220f632ece182b80ad",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/python.xml",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fpython.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fpython.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fpython.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -379,7 +379,7 @@\n       </rule>\n     </state>\n     <state name=\"name\">\n-      <rule pattern=\"@[_\\p{L}][_\\p{L}\\p{N}]*\">\n+      <rule pattern=\"@[_\\p{L}][_\\p{L}\\p{N}]*(\\s*\\.\\s*[_\\p{L}][_\\p{L}\\p{N}]*)*\">\n         <token type=\"NameDecorator\"/>\n       </rule>\n       <rule pattern=\"@\">"
    },
    {
      "sha": "2209aa77f51dde88b5fd5a9d29ad395d5324070b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/sed.xml",
      "status": "added",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fsed.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fsed.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fsed.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,28 @@\n+<lexer>\n+  <config>\n+    <name>Sed</name>\n+    <alias>sed</alias>\n+    <alias>gsed</alias>\n+    <alias>ssed</alias>\n+    <filename>*.sed</filename>\n+    <filename>*.[gs]sed</filename>\n+    <mime_type>text/x-sed</mime_type>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"\\s+\"><token type=\"TextWhitespace\"/></rule>\n+      <rule pattern=\"#.*$\"><token type=\"CommentSingle\"/></rule>\n+      <rule pattern=\"[0-9]+\"><token type=\"LiteralNumberInteger\"/></rule>\n+      <rule pattern=\"\\$\"><token type=\"Operator\"/></rule>\n+      <rule pattern=\"[{};,!]\"><token type=\"Punctuation\"/></rule>\n+      <rule pattern=\"[dDFgGhHlnNpPqQxz=]\"><token type=\"Keyword\"/></rule>\n+      <rule pattern=\"([berRtTvwW:])([^;\\n]*)\"><bygroups><token type=\"Keyword\"/><token type=\"LiteralStringSingle\"/></bygroups></rule>\n+      <rule pattern=\"([aci])((?:.*?\\\\\\n)*(?:.*?[^\\\\]$))\"><bygroups><token type=\"Keyword\"/><token type=\"LiteralStringDouble\"/></bygroups></rule>\n+      <rule pattern=\"([qQ])([0-9]*)\"><bygroups><token type=\"Keyword\"/><token type=\"LiteralNumberInteger\"/></bygroups></rule>\n+      <rule pattern=\"(/)((?:(?:\\\\[^\\n]|[^\\\\])*?\\\\\\n)*?(?:\\\\.|[^\\\\])*?)(/)\"><bygroups><token type=\"Punctuation\"/><token type=\"LiteralStringRegex\"/><token type=\"Punctuation\"/></bygroups></rule>\n+      <rule pattern=\"(\\\\(.))((?:(?:\\\\[^\\n]|[^\\\\])*?\\\\\\n)*?(?:\\\\.|[^\\\\])*?)(\\2)\"><bygroups><token type=\"Punctuation\"/>None<token type=\"LiteralStringRegex\"/><token type=\"Punctuation\"/></bygroups></rule>\n+      <rule pattern=\"(y)(.)((?:(?:\\\\[^\\n]|[^\\\\])*?\\\\\\n)*?(?:\\\\.|[^\\\\])*?)(\\2)((?:(?:\\\\[^\\n]|[^\\\\])*?\\\\\\n)*?(?:\\\\.|[^\\\\])*?)(\\2)\"><bygroups><token type=\"Keyword\"/><token type=\"Punctuation\"/><token type=\"LiteralStringSingle\"/><token type=\"Punctuation\"/><token type=\"LiteralStringSingle\"/><token type=\"Punctuation\"/></bygroups></rule>\n+      <rule pattern=\"(s)(.)((?:(?:\\\\[^\\n]|[^\\\\])*?\\\\\\n)*?(?:\\\\.|[^\\\\])*?)(\\2)((?:(?:\\\\[^\\n]|[^\\\\])*?\\\\\\n)*?(?:\\\\.|[^\\\\])*?)(\\2)((?:[gpeIiMm]|[0-9])*)\"><bygroups><token type=\"Keyword\"/><token type=\"Punctuation\"/><token type=\"LiteralStringRegex\"/><token type=\"Punctuation\"/><token type=\"LiteralStringSingle\"/><token type=\"Punctuation\"/><token type=\"Keyword\"/></bygroups></rule>\n+    </state>\n+  </rules>\n+</lexer>"
    },
    {
      "sha": "56b4f923827922f568a2bd3254edb84d7ab5987a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/stas.xml",
      "status": "added",
      "additions": 85,
      "deletions": 0,
      "changes": 85,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fstas.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fstas.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fstas.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,85 @@\n+<lexer>\n+  <config>\n+    <name>stas</name>\n+    <filename>*.stas</filename>\n+  </config>\n+  <rules>\n+    <state name=\"string-double-quoted\">\n+      <rule pattern=\"\\\\.\">\n+        <token type=\"LiteralStringEscape\"/>\n+      </rule>\n+      <rule pattern=\"[^\\\\&#34;]+\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"&#34;\">\n+        <token type=\"LiteralString\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"string-single-quoted\">\n+      <rule pattern=\"\\\\.\">\n+        <token type=\"LiteralStringEscape\"/>\n+      </rule>\n+      <rule pattern=\"[^\\\\&#39;]+\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"&#39;\">\n+        <token type=\"LiteralString\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"string-char-literal\">\n+      <rule pattern=\"\\\\.\">\n+        <token type=\"LiteralStringEscape\"/>\n+      </rule>\n+      <rule pattern=\"[^\\\\`]+\">\n+        <token type=\"LiteralString\"/>\n+      </rule>\n+      <rule pattern=\"`\">\n+        <token type=\"LiteralStringChar\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"root\">\n+      <rule pattern=\"(\\n|\\s)+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\S)(fn|argc|argv|swap|dup|over|over2|rot|rot4|drop|w8|w16|w32|w64|r8|r16|r32|r64|syscall0|syscall1|syscall2|syscall3|syscall4|syscall5|syscall6|_breakpoint|assert|const|auto|reserve|pop|include|addr|if|else|elif|while|break|continue|ret)(?!\\S)\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\S)(\\+|\\-|\\*|\\/|\\%|\\%\\%|\\+\\+|\\-\\-|&gt;&gt;|&lt;&lt;)(?!\\S)\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\S)(\\=|\\!\\=|&gt;|&lt;|&gt;\\=|&lt;\\=|&gt;s|&lt;s|&gt;\\=s|&lt;\\=s)(?!\\S)\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\S)(\\&amp;|\\||\\^|\\~|\\!|-\\>)(?!\\S)\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\S)\\-?(\\d+)(?!\\S)\">\n+        <token type=\"LiteralNumber\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\S);.*(\\S|\\n)\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+      <rule pattern=\"&#39;\">\n+        <token type=\"LiteralString\"/>\n+        <push state=\"string-single-quoted\"/>\n+      </rule>\n+      <rule pattern=\"&#34;\">\n+        <token type=\"LiteralString\"/>\n+        <push state=\"string-double-quoted\"/>\n+      </rule>\n+      <rule pattern=\"`\">\n+        <token type=\"LiteralStringChar\"/>\n+        <push state=\"string-char-literal\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\S)[{}](?!\\S)\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;!\\S)[^\\s]+(?!\\S)\">\n+        <token type=\"Name\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "d49241e6faea8912d1a6472b91ef23dfe0fbe0ee",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/typescript.xml",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ftypescript.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ftypescript.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ftypescript.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -6,6 +6,8 @@\n     <alias>typescript</alias>\n     <filename>*.ts</filename>\n     <filename>*.tsx</filename>\n+    <filename>*.mts</filename>\n+    <filename>*.cts</filename>\n     <mime_type>text/x-typescript</mime_type>\n     <dot_all>true</dot_all>\n     <ensure_nl>true</ensure_nl>"
    },
    {
      "sha": "17c1acf487f3e199e1044700cde0e0c15edb23a4",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/vala.xml",
      "status": "added",
      "additions": 72,
      "deletions": 0,
      "changes": 72,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fvala.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fvala.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fvala.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,72 @@\n+\n+<lexer>\n+  <config>\n+    <name>Vala</name>\n+    <alias>vala</alias>\n+    <alias>vapi</alias>\n+    <filename>*.vala</filename>\n+    <filename>*.vapi</filename>\n+    <mime_type>text/x-vala</mime_type>\n+  </config>\n+  <rules>\n+    <state name=\"whitespace\">\n+      <rule pattern=\"^\\s*#if\\s+0\"><token type=\"CommentPreproc\"/><push state=\"if0\"/></rule>\n+      <rule pattern=\"\\n\"><token type=\"TextWhitespace\"/></rule>\n+      <rule pattern=\"\\s+\"><token type=\"TextWhitespace\"/></rule>\n+      <rule pattern=\"\\\\\\n\"><token type=\"Text\"/></rule>\n+      <rule pattern=\"//(\\n|(.|\\n)*?[^\\\\]\\n)\"><token type=\"CommentSingle\"/></rule>\n+      <rule pattern=\"/(\\\\\\n)?[*](.|\\n)*?[*](\\\\\\n)?/\"><token type=\"CommentMultiline\"/></rule>\n+    </state>\n+    <state name=\"statements\">\n+      <rule pattern=\"[L@]?&quot;\"><token type=\"LiteralString\"/><push state=\"string\"/></rule>\n+      <rule pattern=\"L?&#x27;(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-fA-F0-9]{1,2}|[^\\\\\\&#x27;\\n])&#x27;\"><token type=\"LiteralStringChar\"/></rule>\n+      <rule pattern=\"(?s)&quot;&quot;&quot;.*?&quot;&quot;&quot;\"><token type=\"LiteralString\"/></rule>\n+      <rule pattern=\"(\\d+\\.\\d*|\\.\\d+|\\d+)[eE][+-]?\\d+[lL]?\"><token type=\"LiteralNumberFloat\"/></rule>\n+      <rule pattern=\"(\\d+\\.\\d*|\\.\\d+|\\d+[fF])[fF]?\"><token type=\"LiteralNumberFloat\"/></rule>\n+      <rule pattern=\"0x[0-9a-fA-F]+[Ll]?\"><token type=\"LiteralNumberHex\"/></rule>\n+      <rule pattern=\"0[0-7]+[Ll]?\"><token type=\"LiteralNumberOct\"/></rule>\n+      <rule pattern=\"\\d+[Ll]?\"><token type=\"LiteralNumberInteger\"/></rule>\n+      <rule pattern=\"[~!%^&amp;*+=|?:&lt;&gt;/-]\"><token type=\"Operator\"/></rule>\n+      <rule pattern=\"(\\[)(Compact|Immutable|(?:Boolean|Simple)Type)(\\])\"><bygroups><token type=\"Punctuation\"/><token type=\"NameDecorator\"/><token type=\"Punctuation\"/></bygroups></rule>\n+      <rule pattern=\"(\\[)(CCode|(?:Integer|Floating)Type)\"><bygroups><token type=\"Punctuation\"/><token type=\"NameDecorator\"/></bygroups></rule>\n+      <rule pattern=\"[()\\[\\],.]\"><token type=\"Punctuation\"/></rule>\n+      <rule pattern=\"(as|base|break|case|catch|construct|continue|default|delete|do|else|enum|finally|for|foreach|get|if|in|is|lock|new|out|params|return|set|sizeof|switch|this|throw|try|typeof|while|yield)\\b\"><token type=\"Keyword\"/></rule>\n+      <rule pattern=\"(abstract|const|delegate|dynamic|ensures|extern|inline|internal|override|owned|private|protected|public|ref|requires|signal|static|throws|unowned|var|virtual|volatile|weak|yields)\\b\"><token type=\"KeywordDeclaration\"/></rule>\n+      <rule pattern=\"(namespace|using)(\\s+)\"><bygroups><token type=\"KeywordNamespace\"/><token type=\"TextWhitespace\"/></bygroups><push state=\"namespace\"/></rule>\n+      <rule pattern=\"(class|errordomain|interface|struct)(\\s+)\"><bygroups><token type=\"KeywordDeclaration\"/><token type=\"TextWhitespace\"/></bygroups><push state=\"class\"/></rule>\n+      <rule pattern=\"(\\.)([a-zA-Z_]\\w*)\"><bygroups><token type=\"Operator\"/><token type=\"NameAttribute\"/></bygroups></rule>\n+      <rule pattern=\"(void|bool|char|double|float|int|int8|int16|int32|int64|long|short|size_t|ssize_t|string|time_t|uchar|uint|uint8|uint16|uint32|uint64|ulong|unichar|ushort)\\b\"><token type=\"KeywordType\"/></rule>\n+      <rule pattern=\"(true|false|null)\\b\"><token type=\"NameBuiltin\"/></rule>\n+      <rule pattern=\"[a-zA-Z_]\\w*\"><token type=\"Name\"/></rule>\n+    </state>\n+    <state name=\"root\">\n+      <rule><include state=\"whitespace\"/></rule>\n+      <rule><push state=\"statement\"/></rule>\n+    </state>\n+    <state name=\"statement\">\n+      <rule><include state=\"whitespace\"/></rule>\n+      <rule><include state=\"statements\"/></rule>\n+      <rule pattern=\"[{}]\"><token type=\"Punctuation\"/></rule>\n+      <rule pattern=\";\"><token type=\"Punctuation\"/><pop depth=\"1\"/></rule>\n+    </state>\n+    <state name=\"string\">\n+      <rule pattern=\"&quot;\"><token type=\"LiteralString\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"\\\\([\\\\abfnrtv&quot;\\&#x27;]|x[a-fA-F0-9]{2,4}|[0-7]{1,3})\"><token type=\"LiteralStringEscape\"/></rule>\n+      <rule pattern=\"[^\\\\&quot;\\n]+\"><token type=\"LiteralString\"/></rule>\n+      <rule pattern=\"\\\\\\n\"><token type=\"LiteralString\"/></rule>\n+      <rule pattern=\"\\\\\"><token type=\"LiteralString\"/></rule>\n+    </state>\n+    <state name=\"if0\">\n+      <rule pattern=\"^\\s*#if.*?(?&lt;!\\\\)\\n\"><token type=\"CommentPreproc\"/><push/></rule>\n+      <rule pattern=\"^\\s*#el(?:se|if).*\\n\"><token type=\"CommentPreproc\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\"^\\s*#endif.*?(?&lt;!\\\\)\\n\"><token type=\"CommentPreproc\"/><pop depth=\"1\"/></rule>\n+      <rule pattern=\".*?\\n\"><token type=\"Comment\"/></rule>\n+    </state>\n+    <state name=\"class\">\n+      <rule pattern=\"[a-zA-Z_]\\w*\"><token type=\"NameClass\"/><pop depth=\"1\"/></rule>\n+    </state>\n+    <state name=\"namespace\">\n+      <rule pattern=\"[a-zA-Z_][\\w.]*\"><token type=\"NameNamespace\"/><pop depth=\"1\"/></rule>\n+    </state>\n+  </rules>\n+</lexer>"
    },
    {
      "sha": "ee84d12924eaa07290733dc327364a8199b87f33",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/vhs.xml",
      "status": "added",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fvhs.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fvhs.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fvhs.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,48 @@\n+<lexer>\n+  <config>\n+    <name>VHS</name>\n+\t<alias>vhs</alias>\n+\t<alias>tape</alias>\n+\t<alias>cassette</alias>\n+\t<filename>*.tape</filename>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"(Output)(\\s+)(.*)(\\s+)\">\n+\t    <bygroups>\n+\t      <token type=\"Keyword\"/>\n+\t      <token type=\"TextWhitespace\"/>\n+\t      <token type=\"LiteralString\"/>\n+\t      <token type=\"TextWhitespace\"/>\n+\t\t</bygroups>\n+      </rule>\n+      <rule pattern=\"\\b(Set|Type|Left|Right|Up|Down|Backspace|Enter|Tab|Space|Ctrl|Sleep|Hide|Show|Escape)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"\\b(FontFamily|FontSize|Framerate|Height|Width|Theme|Padding|TypingSpeed|PlaybackSpeed|LineHeight|Framerate|LetterSpacing)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"#.*(\\S|$)\">\n+        <token type=\"Comment\"/>\n+      </rule>\n+      <rule pattern=\"(?s)&#34;.*&#34;\">\n+        <token type=\"LiteralStringDouble\"/>\n+      </rule>\n+      <rule pattern=\"(?s)&#39;.*&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+      <rule pattern=\"(@|\\+)\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"\\d+\">\n+        <token type=\"LiteralNumber\"/>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"TextWhitespace\"/>\n+      </rule>\n+      <rule pattern=\"(ms|s)\">\n+        <token type=\"Text\"/>\n+      </rule>\n+\t</state>\n+  </rules>\n+</lexer>"
    },
    {
      "sha": "1d2a5d32633c5676e1ab5365833a7d66fc765101",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/make.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fmake.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fmake.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fmake.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -7,7 +7,7 @@ import (\n // Makefile lexer.\n var Makefile = Register(MustNewLexer(\n \t&Config{\n-\t\tName:      \"Base Makefile\",\n+\t\tName:      \"Makefile\",\n \t\tAliases:   []string{\"make\", \"makefile\", \"mf\", \"bsdmake\"},\n \t\tFilenames: []string{\"*.mak\", \"*.mk\", \"Makefile\", \"makefile\", \"Makefile.*\", \"GNUmakefile\", \"BSDmakefile\"},\n \t\tMimeTypes: []string{\"text/x-makefile\"},"
    },
    {
      "sha": "30473b8c8aab28e794b7edf4c2da7fd33ea676e7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/openedgeabl.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fopenedgeabl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fopenedgeabl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fopenedgeabl.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -23,8 +23,8 @@ var OpenEdgeABL = Register(MustNewLexer(\n \t\t\t\t{`(?i)(DEFINE|DEF|DEFI|DEFIN)\\b`, KeywordDeclaration, nil},\n \t\t\t\t{`(?i)(^|(?<=[^\\w\\-]))(CHARACTER|CHAR|CHARA|CHARAC|CHARACT|CHARACTE|COM-HANDLE|DATE|DATETIME|DATETIME-TZ|DECIMAL|DEC|DECI|DECIM|DECIMA|HANDLE|INT64|INTEGER|INT|INTE|INTEG|INTEGE|LOGICAL|LONGCHAR|MEMPTR|RAW|RECID|ROWID)\\s*($|(?=[^\\w\\-]))`, KeywordType, nil},\n \t\t\t\t{Words(`(?i)(^|(?<=[^\\w\\-]))`, `\\s*($|(?=[^\\w\\-]))`, `ABS`, `ABSO`, `ABSOL`, `ABSOLU`, `ABSOLUT`, `ABSOLUTE`, `ABSTRACT`, `ACCELERATOR`, `ACCUM`, `ACCUMU`, `ACCUMUL`, `ACCUMULA`, `ACCUMULAT`, `ACCUMULATE`, `ACTIVE-FORM`, `ACTIVE-WINDOW`, `ADD`, `ADD-BUFFER`, `ADD-CALC-COLUMN`, `ADD-COLUMNS-FROM`, `ADD-EVENTS-PROCEDURE`, `ADD-FIELDS-FROM`, `ADD-FIRST`, `ADD-INDEX-FIELD`, `ADD-LAST`, `ADD-LIKE-COLUMN`, `ADD-LIKE-FIELD`, `ADD-LIKE-INDEX`, `ADD-NEW-FIELD`, `ADD-NEW-INDEX`, `ADD-SCHEMA-LOCATION`, `ADD-SUPER-PROCEDURE`, `ADM-DATA`, `ADVISE`, `ALERT-BOX`, `ALIAS`, `ALL`, `ALLOW-COLUMN-SEARCHING`, `ALLOW-REPLICATION`, `ALTER`, `ALWAYS-ON-TOP`, `AMBIG`, `AMBIGU`, `AMBIGUO`, `AMBIGUOU`, `AMBIGUOUS`, `ANALYZ`, `ANALYZE`, `AND`, `ANSI-ONLY`, `ANY`, `ANYWHERE`, `APPEND`, `APPL-ALERT`, `APPL-ALERT-`, `APPL-ALERT-B`, `APPL-ALERT-BO`, `APPL-ALERT-BOX`, `APPL-ALERT-BOXE`, `APPL-ALERT-BOXES`, `APPL-CONTEXT-ID`, `APPLICATION`, `APPLY`, `APPSERVER-INFO`, `APPSERVER-PASSWORD`, `APPSERVER-USERID`, `ARRAY-MESSAGE`, `AS`, `ASC`, `ASCE`, `ASCEN`, `ASCEND`, `ASCENDI`, `ASCENDIN`, `ASCENDING`, `ASK-OVERWRITE`, `ASSEMBLY`, `ASSIGN`, `ASYNC-REQUEST-COUNT`, `ASYNC-REQUEST-HANDLE`, `ASYNCHRONOUS`, `AT`, `ATTACHED-PAIRLIST`, `ATTR`, `ATTR-SPACE`, `ATTRI`, `ATTRIB`, `ATTRIBU`, `ATTRIBUT`, `AUDIT-CONTROL`, `AUDIT-ENABLED`, `AUDIT-EVENT-CONTEXT`, `AUDIT-POLICY`, `AUTHENTICATION-FAILED`, `AUTHORIZATION`, `AUTO-COMP`, `AUTO-COMPL`, `AUTO-COMPLE`, `AUTO-COMPLET`, `AUTO-COMPLETI`, `AUTO-COMPLETIO`, `AUTO-COMPLETION`, `AUTO-END-KEY`, `AUTO-ENDKEY`, `AUTO-GO`, `AUTO-IND`, `AUTO-INDE`, `AUTO-INDEN`, `AUTO-INDENT`, `AUTO-RESIZE`, `AUTO-RET`, `AUTO-RETU`, `AUTO-RETUR`, `AUTO-RETURN`, `AUTO-SYNCHRONIZE`, `AUTO-Z`, `AUTO-ZA`, `AUTO-ZAP`, `AUTOMATIC`, `AVAIL`, `AVAILA`, `AVAILAB`, `AVAILABL`, `AVAILABLE`, `AVAILABLE-FORMATS`, `AVE`, `AVER`, `AVERA`, `AVERAG`, `AVERAGE`, `AVG`, `BACK`, `BACKG`, `BACKGR`, `BACKGRO`, `BACKGROU`, `BACKGROUN`, `BACKGROUND`, `BACKWARD`, `BACKWARDS`, `BASE64-DECODE`, `BASE64-ENCODE`, `BASE-ADE`, `BASE-KEY`, `BATCH`, `BATCH-`, `BATCH-M`, `BATCH-MO`, `BATCH-MOD`, `BATCH-MODE`, `BATCH-SIZE`, `BEFORE-H`, `BEFORE-HI`, `BEFORE-HID`, `BEFORE-HIDE`, `BEGIN-EVENT-GROUP`, `BEGINS`, `BELL`, `BETWEEN`, `BGC`, `BGCO`, `BGCOL`, `BGCOLO`, `BGCOLOR`, `BIG-ENDIAN`, `BINARY`, `BIND`, `BIND-WHERE`, `BLANK`, `BLOCK-ITERATION-DISPLAY`, `BLOCK-LEVEL`, `BORDER-B`, `BORDER-BO`, `BORDER-BOT`, `BORDER-BOTT`, `BORDER-BOTTO`, `BORDER-BOTTOM-CHARS`, `BORDER-BOTTOM-P`, `BORDER-BOTTOM-PI`, `BORDER-BOTTOM-PIX`, `BORDER-BOTTOM-PIXE`, `BORDER-BOTTOM-PIXEL`, `BORDER-BOTTOM-PIXELS`, `BORDER-L`, `BORDER-LE`, `BORDER-LEF`, `BORDER-LEFT`, `BORDER-LEFT-`, `BORDER-LEFT-C`, `BORDER-LEFT-CH`, `BORDER-LEFT-CHA`, `BORDER-LEFT-CHAR`, `BORDER-LEFT-CHARS`, `BORDER-LEFT-P`, `BORDER-LEFT-PI`, `BORDER-LEFT-PIX`, `BORDER-LEFT-PIXE`, `BORDER-LEFT-PIXEL`, `BORDER-LEFT-PIXELS`, `BORDER-R`, `BORDER-RI`, `BORDER-RIG`, `BORDER-RIGH`, `BORDER-RIGHT`, `BORDER-RIGHT-`, `BORDER-RIGHT-C`, `BORDER-RIGHT-CH`, `BORDER-RIGHT-CHA`, `BORDER-RIGHT-CHAR`, `BORDER-RIGHT-CHARS`, `BORDER-RIGHT-P`, `BORDER-RIGHT-PI`, `BORDER-RIGHT-PIX`, `BORDER-RIGHT-PIXE`, `BORDER-RIGHT-PIXEL`, `BORDER-RIGHT-PIXELS`, `BORDER-T`, `BORDER-TO`, `BORDER-TOP`, `BORDER-TOP-`, `BORDER-TOP-C`, `BORDER-TOP-CH`, `BORDER-TOP-CHA`, `BORDER-TOP-CHAR`, `BORDER-TOP-CHARS`, `BORDER-TOP-P`, `BORDER-TOP-PI`, `BORDER-TOP-PIX`, `BORDER-TOP-PIXE`, `BORDER-TOP-PIXEL`, `BORDER-TOP-PIXELS`, `BOX`, `BOX-SELECT`, `BOX-SELECTA`, `BOX-SELECTAB`, `BOX-SELECTABL`, `BOX-SELECTABLE`, `BREAK`, `BROWSE`, `BUFFER`, `BUFFER-CHARS`, `BUFFER-COMPARE`, `BUFFER-COPY`, `BUFFER-CREATE`, `BUFFER-DELETE`, `BUFFER-FIELD`, `BUFFER-HANDLE`, `BUFFER-LINES`, `BUFFER-NAME`, `BUFFER-PARTITION-ID`, `BUFFER-RELEASE`, `BUFFER-VALUE`, `BUTTON`, `BUTTONS`, `BY`, `BY-POINTER`, `BY-VARIANT-POINTER`, `CACHE`, `CACHE-SIZE`, `CALL`, `CALL-NAME`, `CALL-TYPE`, `CAN-CREATE`, `CAN-DELETE`, `CAN-DO`, `CAN-DO-DOMAIN-SUPPORT`, `CAN-FIND`, `CAN-QUERY`, `CAN-READ`, `CAN-SET`, `CAN-WRITE`, `CANCEL-BREAK`, `CANCEL-BUTTON`, `CAPS`, `CAREFUL-PAINT`, `CASE`, `CASE-SEN`, `CASE-SENS`, `CASE-SENSI`, `CASE-SENSIT`, `CASE-SENSITI`, `CASE-SENSITIV`, `CASE-SENSITIVE`, `CAST`, `CATCH`, `CDECL`, `CENTER`, `CENTERE`, `CENTERED`, `CHAINED`, `CHARACTER`, `CHARACTER_LENGTH`, `CHARSET`, `CHECK`, `CHECKED`, `CHOOSE`, `CHR`, `CLASS`, `CLASS-TYPE`, `CLEAR`, `CLEAR-APPL-CONTEXT`, `CLEAR-LOG`, `CLEAR-SELECT`, `CLEAR-SELECTI`, `CLEAR-SELECTIO`, `CLEAR-SELECTION`, `CLEAR-SORT-ARROW`, `CLEAR-SORT-ARROWS`, `CLIENT-CONNECTION-ID`, `CLIENT-PRINCIPAL`, `CLIENT-TTY`, `CLIENT-TYPE`, `CLIENT-WORKSTATION`, `CLIPBOARD`, `CLOSE`, `CLOSE-LOG`, `CODE`, `CODEBASE-LOCATOR`, `CODEPAGE`, `CODEPAGE-CONVERT`, `COL`, `COL-OF`, `COLLATE`, `COLON`, `COLON-ALIGN`, `COLON-ALIGNE`, `COLON-ALIGNED`, `COLOR`, `COLOR-TABLE`, `COLU`, `COLUM`, `COLUMN`, `COLUMN-BGCOLOR`, `COLUMN-DCOLOR`, `COLUMN-FGCOLOR`, `COLUMN-FONT`, `COLUMN-LAB`, `COLUMN-LABE`, `COLUMN-LABEL`, `COLUMN-MOVABLE`, `COLUMN-OF`, `COLUMN-PFCOLOR`, `COLUMN-READ-ONLY`, `COLUMN-RESIZABLE`, `COLUMN-SCROLLING`, `COLUMNS`, `COM-HANDLE`, `COM-SELF`, `COMBO-BOX`, `COMMAND`, `COMPARES`, `COMPILE`, `COMPILER`, `COMPLETE`, `CONFIG-NAME`, `CONNECT`, `CONNECTED`, `CONSTRUCTOR`, `CONTAINS`, `CONTENTS`, `CONTEXT`, `CONTEXT-HELP`, `CONTEXT-HELP-FILE`, `CONTEXT-HELP-ID`, `CONTEXT-POPUP`, `CONTROL`, `CONTROL-BOX`, `CONTROL-FRAME`, `CONVERT`, `CONVERT-3D-COLORS`, `CONVERT-TO-OFFS`, `CONVERT-TO-OFFSE`, `CONVERT-TO-OFFSET`, `COPY-DATASET`, `COPY-LOB`, `COPY-SAX-ATTRIBUTES`, `COPY-TEMP-TABLE`, `COUNT`, `COUNT-OF`, `CPCASE`, `CPCOLL`, `CPINTERNAL`, `CPLOG`, `CPPRINT`, `CPRCODEIN`, `CPRCODEOUT`, `CPSTREAM`, `CPTERM`, `CRC-VALUE`, `CREATE`, `CREATE-LIKE`, `CREATE-LIKE-SEQUENTIAL`, `CREATE-NODE-NAMESPACE`, `CREATE-RESULT-LIST-ENTRY`, `CREATE-TEST-FILE`, `CURRENT`, `CURRENT-CHANGED`, `CURRENT-COLUMN`, `CURRENT-ENV`, `CURRENT-ENVI`, `CURRENT-ENVIR`, `CURRENT-ENVIRO`, `CURRENT-ENVIRON`, `CURRENT-ENVIRONM`, `CURRENT-ENVIRONME`, `CURRENT-ENVIRONMEN`, `CURRENT-ENVIRONMENT`, `CURRENT-ITERATION`, `CURRENT-LANG`, `CURRENT-LANGU`, `CURRENT-LANGUA`, `CURRENT-LANGUAG`, `CURRENT-LANGUAGE`, `CURRENT-QUERY`, `CURRENT-REQUEST-INFO`, `CURRENT-RESPONSE-INFO`, `CURRENT-RESULT-ROW`, `CURRENT-ROW-MODIFIED`, `CURRENT-VALUE`, `CURRENT-WINDOW`, `CURRENT_DATE`, `CURS`, `CURSO`, `CURSOR`, `CURSOR-CHAR`, `CURSOR-LINE`, `CURSOR-OFFSET`, `DATA-BIND`, `DATA-ENTRY-RET`, `DATA-ENTRY-RETU`, `DATA-ENTRY-RETUR`, `DATA-ENTRY-RETURN`, `DATA-REL`, `DATA-RELA`, `DATA-RELAT`, `DATA-RELATI`, `DATA-RELATIO`, `DATA-RELATION`, `DATA-SOURCE`, `DATA-SOURCE-COMPLETE-MAP`, `DATA-SOURCE-MODIFIED`, `DATA-SOURCE-ROWID`, `DATA-T`, `DATA-TY`, `DATA-TYP`, `DATA-TYPE`, `DATABASE`, `DATASERVERS`, `DATASET`, `DATASET-HANDLE`, `DATE`, `DATE-F`, `DATE-FO`, `DATE-FOR`, `DATE-FORM`, `DATE-FORMA`, `DATE-FORMAT`, `DAY`, `DB-CONTEXT`, `DB-REFERENCES`, `DBCODEPAGE`, `DBCOLLATION`, `DBNAME`, `DBPARAM`, `DBREST`, `DBRESTR`, `DBRESTRI`, `DBRESTRIC`, `DBRESTRICT`, `DBRESTRICTI`, `DBRESTRICTIO`, `DBRESTRICTION`, `DBRESTRICTIONS`, `DBTASKID`, `DBTYPE`, `DBVERS`, `DBVERSI`, `DBVERSIO`, `DBVERSION`, `DCOLOR`, `DDE`, `DDE-ERROR`, `DDE-I`, `DDE-ID`, `DDE-ITEM`, `DDE-NAME`, `DDE-TOPIC`, `DEBLANK`, `DEBU`, `DEBUG`, `DEBUG-ALERT`, `DEBUG-LIST`, `DEBUGGER`, `DECIMAL`, `DECIMALS`, `DECLARE`, `DECLARE-NAMESPACE`, `DECRYPT`, `DEFAULT`, `DEFAULT-B`, `DEFAULT-BU`, `DEFAULT-BUFFER-HANDLE`, `DEFAULT-BUT`, `DEFAULT-BUTT`, `DEFAULT-BUTTO`, `DEFAULT-BUTTON`, `DEFAULT-COMMIT`, `DEFAULT-EX`, `DEFAULT-EXT`, `DEFAULT-EXTE`, `DEFAULT-EXTEN`, `DEFAULT-EXTENS`, `DEFAULT-EXTENSI`, `DEFAULT-EXTENSIO`, `DEFAULT-EXTENSION`, `DEFAULT-NOXL`, `DEFAULT-NOXLA`, `DEFAULT-NOXLAT`, `DEFAULT-NOXLATE`, `DEFAULT-VALUE`, `DEFAULT-WINDOW`, `DEFINE`, `DEFINE-USER-EVENT-MANAGER`, `DEFINED`, `DEL`, `DELE`, `DELEGATE`, `DELET`, `DELETE PROCEDURE`, `DELETE`, `DELETE-CHAR`, `DELETE-CHARA`, `DELETE-CHARAC`, `DELETE-CHARACT`, `DELETE-CHARACTE`, `DELETE-CHARACTER`, `DELETE-CURRENT-ROW`, `DELETE-LINE`, `DELETE-RESULT-LIST-ENTRY`, `DELETE-SELECTED-ROW`, `DELETE-SELECTED-ROWS`, `DELIMITER`, `DESC`, `DESCE`, `DESCEN`, `DESCEND`, `DESCENDI`, `DESCENDIN`, `DESCENDING`, `DESELECT-FOCUSED-ROW`, `DESELECT-ROWS`, `DESELECT-SELECTED-ROW`, `DESELECTION`, `DESTRUCTOR`, `DIALOG-BOX`, `DICT`, `DICTI`, `DICTIO`, `DICTION`, `DICTIONA`, `DICTIONAR`, `DICTIONARY`, `DIR`, `DISABLE`, `DISABLE-AUTO-ZAP`, `DISABLE-DUMP-TRIGGERS`, `DISABLE-LOAD-TRIGGERS`, `DISABLED`, `DISCON`, `DISCONN`, `DISCONNE`, `DISCONNEC`, `DISCONNECT`, `DISP`, `DISPL`, `DISPLA`, `DISPLAY`, `DISPLAY-MESSAGE`, `DISPLAY-T`, `DISPLAY-TY`, `DISPLAY-TYP`, `DISPLAY-TYPE`, `DISTINCT`, `DO`, `DOMAIN-DESCRIPTION`, `DOMAIN-NAME`, `DOMAIN-TYPE`, `DOS`, `DOUBLE`, `DOWN`, `DRAG-ENABLED`, `DROP`, `DROP-DOWN`, `DROP-DOWN-LIST`, `DROP-FILE-NOTIFY`, `DROP-TARGET`, `DS-CLOSE-CURSOR`, `DSLOG-MANAGER`, `DUMP`, `DYNAMIC`, `DYNAMIC-ENUM`, `DYNAMIC-FUNCTION`, `DYNAMIC-INVOKE`, `EACH`, `ECHO`, `EDGE`, `EDGE-`, `EDGE-C`, `EDGE-CH`, `EDGE-CHA`, `EDGE-CHAR`, `EDGE-CHARS`, `EDGE-P`, `EDGE-PI`, `EDGE-PIX`, `EDGE-PIXE`, `EDGE-PIXEL`, `EDGE-PIXELS`, `EDIT-CAN-PASTE`, `EDIT-CAN-UNDO`, `EDIT-CLEAR`, `EDIT-COPY`, `EDIT-CUT`, `EDIT-PASTE`, `EDIT-UNDO`, `EDITING`, `EDITOR`, `ELSE`, `EMPTY`, `EMPTY-TEMP-TABLE`, `ENABLE`, `ENABLED-FIELDS`, `ENCODE`, `ENCRYPT`, `ENCRYPT-AUDIT-MAC-KEY`, `ENCRYPTION-SALT`, `END`, `END-DOCUMENT`, `END-ELEMENT`, `END-EVENT-GROUP`, `END-FILE-DROP`, `END-KEY`, `END-MOVE`, `END-RESIZE`, `END-ROW-RESIZE`, `END-USER-PROMPT`, `ENDKEY`, `ENTERED`, `ENTITY-EXPANSION-LIMIT`, `ENTRY`, `ENUM`, `EQ`, `ERROR`, `ERROR-COL`, `ERROR-COLU`, `ERROR-COLUM`, `ERROR-COLUMN`, `ERROR-ROW`, `ERROR-STACK-TRACE`, `ERROR-STAT`, `ERROR-STATU`, `ERROR-STATUS`, `ESCAPE`, `ETIME`, `EVENT`, `EVENT-GROUP-ID`, `EVENT-PROCEDURE`, `EVENT-PROCEDURE-CONTEXT`, `EVENT-T`, `EVENT-TY`, `EVENT-TYP`, `EVENT-TYPE`, `EVENTS`, `EXCEPT`, `EXCLUSIVE`, `EXCLUSIVE-`, `EXCLUSIVE-ID`, `EXCLUSIVE-L`, `EXCLUSIVE-LO`, `EXCLUSIVE-LOC`, `EXCLUSIVE-LOCK`, `EXCLUSIVE-WEB-USER`, `EXECUTE`, `EXISTS`, `EXP`, `EXPAND`, `EXPANDABLE`, `EXPLICIT`, `EXPORT`, `EXPORT-PRINCIPAL`, `EXTENDED`, `EXTENT`, `EXTERNAL`, `FALSE`, `FETCH`, `FETCH-SELECTED-ROW`, `FGC`, `FGCO`, `FGCOL`, `FGCOLO`, `FGCOLOR`, `FIELD`, `FIELDS`, `FILE`, `FILE-CREATE-DATE`, `FILE-CREATE-TIME`, `FILE-INFO`, `FILE-INFOR`, `FILE-INFORM`, `FILE-INFORMA`, `FILE-INFORMAT`, `FILE-INFORMATI`, `FILE-INFORMATIO`, `FILE-INFORMATION`, `FILE-MOD-DATE`, `FILE-MOD-TIME`, `FILE-NAME`, `FILE-OFF`, `FILE-OFFS`, `FILE-OFFSE`, `FILE-OFFSET`, `FILE-SIZE`, `FILE-TYPE`, `FILENAME`, `FILL`, `FILL-IN`, `FILLED`, `FILTERS`, `FINAL`, `FINALLY`, `FIND`, `FIND-BY-ROWID`, `FIND-CASE-SENSITIVE`, `FIND-CURRENT`, `FIND-FIRST`, `FIND-GLOBAL`, `FIND-LAST`, `FIND-NEXT-OCCURRENCE`, `FIND-PREV-OCCURRENCE`, `FIND-SELECT`, `FIND-UNIQUE`, `FIND-WRAP-AROUND`, `FINDER`, `FIRST`, `FIRST-ASYNCH-REQUEST`, `FIRST-CHILD`, `FIRST-COLUMN`, `FIRST-FORM`, `FIRST-OBJECT`, `FIRST-OF`, `FIRST-PROC`, `FIRST-PROCE`, `FIRST-PROCED`, `FIRST-PROCEDU`, `FIRST-PROCEDUR`, `FIRST-PROCEDURE`, `FIRST-SERVER`, `FIRST-TAB-I`, `FIRST-TAB-IT`, `FIRST-TAB-ITE`, `FIRST-TAB-ITEM`, `FIT-LAST-COLUMN`, `FIXED-ONLY`, `FLAT-BUTTON`, `FLOAT`, `FOCUS`, `FOCUSED-ROW`, `FOCUSED-ROW-SELECTED`, `FONT`, `FONT-TABLE`, `FOR`, `FORCE-FILE`, `FORE`, `FOREG`, `FOREGR`, `FOREGRO`, `FOREGROU`, `FOREGROUN`, `FOREGROUND`, `FORM INPUT`, `FORM`, `FORM-LONG-INPUT`, `FORMA`, `FORMAT`, `FORMATTE`, `FORMATTED`, `FORWARD`, `FORWARDS`, `FRAGMEN`, `FRAGMENT`, `FRAM`, `FRAME`, `FRAME-COL`, `FRAME-DB`, `FRAME-DOWN`, `FRAME-FIELD`, `FRAME-FILE`, `FRAME-INDE`, `FRAME-INDEX`, `FRAME-LINE`, `FRAME-NAME`, `FRAME-ROW`, `FRAME-SPA`, `FRAME-SPAC`, `FRAME-SPACI`, `FRAME-SPACIN`, `FRAME-SPACING`, `FRAME-VAL`, `FRAME-VALU`, `FRAME-VALUE`, `FRAME-X`, `FRAME-Y`, `FREQUENCY`, `FROM`, `FROM-C`, `FROM-CH`, `FROM-CHA`, `FROM-CHAR`, `FROM-CHARS`, `FROM-CUR`, `FROM-CURR`, `FROM-CURRE`, `FROM-CURREN`, `FROM-CURRENT`, `FROM-P`, `FROM-PI`, `FROM-PIX`, `FROM-PIXE`, `FROM-PIXEL`, `FROM-PIXELS`, `FULL-HEIGHT`, `FULL-HEIGHT-`, `FULL-HEIGHT-C`, `FULL-HEIGHT-CH`, `FULL-HEIGHT-CHA`, `FULL-HEIGHT-CHAR`, `FULL-HEIGHT-CHARS`, `FULL-HEIGHT-P`, `FULL-HEIGHT-PI`, `FULL-HEIGHT-PIX`, `FULL-HEIGHT-PIXE`, `FULL-HEIGHT-PIXEL`, `FULL-HEIGHT-PIXELS`, `FULL-PATHN`, `FULL-PATHNA`, `FULL-PATHNAM`, `FULL-PATHNAME`, `FULL-WIDTH`, `FULL-WIDTH-`, `FULL-WIDTH-C`, `FULL-WIDTH-CH`, `FULL-WIDTH-CHA`, `FULL-WIDTH-CHAR`, `FULL-WIDTH-CHARS`, `FULL-WIDTH-P`, `FULL-WIDTH-PI`, `FULL-WIDTH-PIX`, `FULL-WIDTH-PIXE`, `FULL-WIDTH-PIXEL`, `FULL-WIDTH-PIXELS`, `FUNCTION`, `FUNCTION-CALL-TYPE`, `GATEWAY`, `GATEWAYS`, `GE`, `GENERATE-MD5`, `GENERATE-PBE-KEY`, `GENERATE-PBE-SALT`, `GENERATE-RANDOM-KEY`, `GENERATE-UUID`, `GET`, `GET-ATTR-CALL-TYPE`, `GET-ATTRIBUTE-NODE`, `GET-BINARY-DATA`, `GET-BLUE`, `GET-BLUE-`, `GET-BLUE-V`, `GET-BLUE-VA`, `GET-BLUE-VAL`, `GET-BLUE-VALU`, `GET-BLUE-VALUE`, `GET-BROWSE-COLUMN`, `GET-BUFFER-HANDLE`, `GET-BYTE`, `GET-CALLBACK-PROC-CONTEXT`, `GET-CALLBACK-PROC-NAME`, `GET-CGI-LIST`, `GET-CGI-LONG-VALUE`, `GET-CGI-VALUE`, `GET-CLASS`, `GET-CODEPAGES`, `GET-COLLATIONS`, `GET-CONFIG-VALUE`, `GET-CURRENT`, `GET-DOUBLE`, `GET-DROPPED-FILE`, `GET-DYNAMIC`, `GET-ERROR-COLUMN`, `GET-ERROR-ROW`, `GET-FILE`, `GET-FILE-NAME`, `GET-FILE-OFFSE`, `GET-FILE-OFFSET`, `GET-FIRST`, `GET-FLOAT`, `GET-GREEN`, `GET-GREEN-`, `GET-GREEN-V`, `GET-GREEN-VA`, `GET-GREEN-VAL`, `GET-GREEN-VALU`, `GET-GREEN-VALUE`, `GET-INDEX-BY-NAMESPACE-NAME`, `GET-INDEX-BY-QNAME`, `GET-INT64`, `GET-ITERATION`, `GET-KEY-VAL`, `GET-KEY-VALU`, `GET-KEY-VALUE`, `GET-LAST`, `GET-LOCALNAME-BY-INDEX`, `GET-LONG`, `GET-MESSAGE`, `GET-NEXT`, `GET-NUMBER`, `GET-POINTER-VALUE`, `GET-PREV`, `GET-PRINTERS`, `GET-PROPERTY`, `GET-QNAME-BY-INDEX`, `GET-RED`, `GET-RED-`, `GET-RED-V`, `GET-RED-VA`, `GET-RED-VAL`, `GET-RED-VALU`, `GET-RED-VALUE`, `GET-REPOSITIONED-ROW`, `GET-RGB-VALUE`, `GET-SELECTED`, `GET-SELECTED-`, `GET-SELECTED-W`, `GET-SELECTED-WI`, `GET-SELECTED-WID`, `GET-SELECTED-WIDG`, `GET-SELECTED-WIDGE`, `GET-SELECTED-WIDGET`, `GET-SHORT`, `GET-SIGNATURE`, `GET-SIZE`, `GET-STRING`, `GET-TAB-ITEM`, `GET-TEXT-HEIGHT`, `GET-TEXT-HEIGHT-`, `GET-TEXT-HEIGHT-C`, `GET-TEXT-HEIGHT-CH`, `GET-TEXT-HEIGHT-CHA`, `GET-TEXT-HEIGHT-CHAR`, `GET-TEXT-HEIGHT-CHARS`, `GET-TEXT-HEIGHT-P`, `GET-TEXT-HEIGHT-PI`, `GET-TEXT-HEIGHT-PIX`, `GET-TEXT-HEIGHT-PIXE`, `GET-TEXT-HEIGHT-PIXEL`, `GET-TEXT-HEIGHT-PIXELS`, `GET-TEXT-WIDTH`, `GET-TEXT-WIDTH-`, `GET-TEXT-WIDTH-C`, `GET-TEXT-WIDTH-CH`, `GET-TEXT-WIDTH-CHA`, `GET-TEXT-WIDTH-CHAR`, `GET-TEXT-WIDTH-CHARS`, `GET-TEXT-WIDTH-P`, `GET-TEXT-WIDTH-PI`, `GET-TEXT-WIDTH-PIX`, `GET-TEXT-WIDTH-PIXE`, `GET-TEXT-WIDTH-PIXEL`, `GET-TEXT-WIDTH-PIXELS`, `GET-TYPE-BY-INDEX`, `GET-TYPE-BY-NAMESPACE-NAME`, `GET-TYPE-BY-QNAME`, `GET-UNSIGNED-LONG`, `GET-UNSIGNED-SHORT`, `GET-URI-BY-INDEX`, `GET-VALUE-BY-INDEX`, `GET-VALUE-BY-NAMESPACE-NAME`, `GET-VALUE-BY-QNAME`, `GET-WAIT-STATE`, `GETBYTE`, `GLOBAL`, `GO-ON`, `GO-PEND`, `GO-PENDI`, `GO-PENDIN`, `GO-PENDING`, `GRANT`, `GRAPHIC-E`, `GRAPHIC-ED`, `GRAPHIC-EDG`, `GRAPHIC-EDGE`, `GRID-FACTOR-H`, `GRID-FACTOR-HO`, `GRID-FACTOR-HOR`, `GRID-FACTOR-HORI`, `GRID-FACTOR-HORIZ`, `GRID-FACTOR-HORIZO`, `GRID-FACTOR-HORIZON`, `GRID-FACTOR-HORIZONT`, `GRID-FACTOR-HORIZONTA`, `GRID-FACTOR-HORIZONTAL`, `GRID-FACTOR-V`, `GRID-FACTOR-VE`, `GRID-FACTOR-VER`, `GRID-FACTOR-VERT`, `GRID-FACTOR-VERTI`, `GRID-FACTOR-VERTIC`, `GRID-FACTOR-VERTICA`, `GRID-FACTOR-VERTICAL`, `GRID-SNAP`, `GRID-UNIT-HEIGHT`, `GRID-UNIT-HEIGHT-`, `GRID-UNIT-HEIGHT-C`, `GRID-UNIT-HEIGHT-CH`, `GRID-UNIT-HEIGHT-CHA`, `GRID-UNIT-HEIGHT-CHARS`, `GRID-UNIT-HEIGHT-P`, `GRID-UNIT-HEIGHT-PI`, `GRID-UNIT-HEIGHT-PIX`, `GRID-UNIT-HEIGHT-PIXE`, `GRID-UNIT-HEIGHT-PIXEL`, `GRID-UNIT-HEIGHT-PIXELS`, `GRID-UNIT-WIDTH`, `GRID-UNIT-WIDTH-`, `GRID-UNIT-WIDTH-C`, `GRID-UNIT-WIDTH-CH`, `GRID-UNIT-WIDTH-CHA`, `GRID-UNIT-WIDTH-CHAR`, `GRID-UNIT-WIDTH-CHARS`, `GRID-UNIT-WIDTH-P`, `GRID-UNIT-WIDTH-PI`, `GRID-UNIT-WIDTH-PIX`, `GRID-UNIT-WIDTH-PIXE`, `GRID-UNIT-WIDTH-PIXEL`, `GRID-UNIT-WIDTH-PIXELS`, `GRID-VISIBLE`, `GROUP`, `GT`, `GUID`, `HANDLE`, `HANDLER`, `HAS-RECORDS`, `HAVING`, `HEADER`, `HEIGHT`, `HEIGHT-`, `HEIGHT-C`, `HEIGHT-CH`, `HEIGHT-CHA`, `HEIGHT-CHAR`, `HEIGHT-CHARS`, `HEIGHT-P`, `HEIGHT-PI`, `HEIGHT-PIX`, `HEIGHT-PIXE`, `HEIGHT-PIXEL`, `HEIGHT-PIXELS`, `HELP`, `HEX-DECODE`, `HEX-ENCODE`, `HIDDEN`, `HIDE`, `HORI`, `HORIZ`, `HORIZO`, `HORIZON`, `HORIZONT`, `HORIZONTA`, `HORIZONTAL`, `HOST-BYTE-ORDER`, `HTML-CHARSET`, `HTML-END-OF-LINE`, `HTML-END-OF-PAGE`, `HTML-FRAME-BEGIN`, `HTML-FRAME-END`, `HTML-HEADER-BEGIN`, `HTML-HEADER-END`, `HTML-TITLE-BEGIN`, `HTML-TITLE-END`, `HWND`, `ICON`, `IF`, `IMAGE`, `IMAGE-DOWN`, `IMAGE-INSENSITIVE`, `IMAGE-SIZE`, `IMAGE-SIZE-C`, `IMAGE-SIZE-CH`, `IMAGE-SIZE-CHA`, `IMAGE-SIZE-CHAR`, `IMAGE-SIZE-CHARS`, `IMAGE-SIZE-P`, `IMAGE-SIZE-PI`, `IMAGE-SIZE-PIX`, `IMAGE-SIZE-PIXE`, `IMAGE-SIZE-PIXEL`, `IMAGE-SIZE-PIXELS`, `IMAGE-UP`, `IMMEDIATE-DISPLAY`, `IMPLEMENTS`, `IMPORT`, `IMPORT-PRINCIPAL`, `IN`, `IN-HANDLE`, `INCREMENT-EXCLUSIVE-ID`, `INDEX`, `INDEX-HINT`, `INDEX-INFORMATION`, `INDEXED-REPOSITION`, `INDICATOR`, `INFO`, `INFOR`, `INFORM`, `INFORMA`, `INFORMAT`, `INFORMATI`, `INFORMATIO`, `INFORMATION`, `INHERIT-BGC`, `INHERIT-BGCO`, `INHERIT-BGCOL`, `INHERIT-BGCOLO`, `INHERIT-BGCOLOR`, `INHERIT-FGC`, `INHERIT-FGCO`, `INHERIT-FGCOL`, `INHERIT-FGCOLO`, `INHERIT-FGCOLOR`, `INHERITS`, `INIT`, `INITI`, `INITIA`, `INITIAL`, `INITIAL-DIR`, `INITIAL-FILTER`, `INITIALIZE-DOCUMENT-TYPE`, `INITIATE`, `INNER-CHARS`, `INNER-LINES`, `INPUT`, `INPUT-O`, `INPUT-OU`, `INPUT-OUT`, `INPUT-OUTP`, `INPUT-OUTPU`, `INPUT-OUTPUT`, `INPUT-VALUE`, `INSERT`, `INSERT-ATTRIBUTE`, `INSERT-B`, `INSERT-BA`, `INSERT-BAC`, `INSERT-BACK`, `INSERT-BACKT`, `INSERT-BACKTA`, `INSERT-BACKTAB`, `INSERT-FILE`, `INSERT-ROW`, `INSERT-STRING`, `INSERT-T`, `INSERT-TA`, `INSERT-TAB`, `INT64`, `INT`, `INTEGER`, `INTERFACE`, `INTERNAL-ENTRIES`, `INTO`, `INVOKE`, `IS`, `IS-ATTR`, `IS-ATTR-`, `IS-ATTR-S`, `IS-ATTR-SP`, `IS-ATTR-SPA`, `IS-ATTR-SPAC`, `IS-ATTR-SPACE`, `IS-CLASS`, `IS-JSON`, `IS-LEAD-BYTE`, `IS-OPEN`, `IS-PARAMETER-SET`, `IS-PARTITIONED`, `IS-ROW-SELECTED`, `IS-SELECTED`, `IS-XML`, `ITEM`, `ITEMS-PER-ROW`, `JOIN`, `JOIN-BY-SQLDB`, `KBLABEL`, `KEEP-CONNECTION-OPEN`, `KEEP-FRAME-Z`, `KEEP-FRAME-Z-`, `KEEP-FRAME-Z-O`, `KEEP-FRAME-Z-OR`, `KEEP-FRAME-Z-ORD`, `KEEP-FRAME-Z-ORDE`, `KEEP-FRAME-Z-ORDER`, `KEEP-MESSAGES`, `KEEP-SECURITY-CACHE`, `KEEP-TAB-ORDER`, `KEY`, `KEY-CODE`, `KEY-FUNC`, `KEY-FUNCT`, `KEY-FUNCTI`, `KEY-FUNCTIO`, `KEY-FUNCTION`, `KEY-LABEL`, `KEYCODE`, `KEYFUNC`, `KEYFUNCT`, `KEYFUNCTI`, `KEYFUNCTIO`, `KEYFUNCTION`, `KEYLABEL`, `KEYS`, `KEYWORD`, `KEYWORD-ALL`, `LABEL`, `LABEL-BGC`, `LABEL-BGCO`, `LABEL-BGCOL`, `LABEL-BGCOLO`, `LABEL-BGCOLOR`, `LABEL-DC`, `LABEL-DCO`, `LABEL-DCOL`, `LABEL-DCOLO`, `LABEL-DCOLOR`, `LABEL-FGC`, `LABEL-FGCO`, `LABEL-FGCOL`, `LABEL-FGCOLO`, `LABEL-FGCOLOR`, `LABEL-FONT`, `LABEL-PFC`, `LABEL-PFCO`, `LABEL-PFCOL`, `LABEL-PFCOLO`, `LABEL-PFCOLOR`, `LABELS`, `LABELS-HAVE-COLONS`, `LANDSCAPE`, `LANGUAGE`, `LANGUAGES`, `LARGE`, `LARGE-TO-SMALL`, `LAST`, `LAST-ASYNCH-REQUEST`, `LAST-BATCH`, `LAST-CHILD`, `LAST-EVEN`, `LAST-EVENT`, `LAST-FORM`, `LAST-KEY`, `LAST-OBJECT`, `LAST-OF`, `LAST-PROCE`, `LAST-PROCED`, `LAST-PROCEDU`, `LAST-PROCEDUR`, `LAST-PROCEDURE`, `LAST-SERVER`, `LAST-TAB-I`, `LAST-TAB-IT`, `LAST-TAB-ITE`, `LAST-TAB-ITEM`, `LASTKEY`, `LC`, `LDBNAME`, `LE`, `LEAVE`, `LEFT-ALIGN`, `LEFT-ALIGNE`, `LEFT-ALIGNED`, `LEFT-TRIM`, `LENGTH`, `LIBRARY`, `LIKE`, `LIKE-SEQUENTIAL`, `LINE`, `LINE-COUNT`, `LINE-COUNTE`, `LINE-COUNTER`, `LIST-EVENTS`, `LIST-ITEM-PAIRS`, `LIST-ITEMS`, `LIST-PROPERTY-NAMES`, `LIST-QUERY-ATTRS`, `LIST-SET-ATTRS`, `LIST-WIDGETS`, `LISTI`, `LISTIN`, `LISTING`, `LITERAL-QUESTION`, `LITTLE-ENDIAN`, `LOAD`, `LOAD-DOMAINS`, `LOAD-ICON`, `LOAD-IMAGE`, `LOAD-IMAGE-DOWN`, `LOAD-IMAGE-INSENSITIVE`, `LOAD-IMAGE-UP`, `LOAD-MOUSE-P`, `LOAD-MOUSE-PO`, `LOAD-MOUSE-POI`, `LOAD-MOUSE-POIN`, `LOAD-MOUSE-POINT`, `LOAD-MOUSE-POINTE`, `LOAD-MOUSE-POINTER`, `LOAD-PICTURE`, `LOAD-SMALL-ICON`, `LOCAL-NAME`, `LOCAL-VERSION-INFO`, `LOCATOR-COLUMN-NUMBER`, `LOCATOR-LINE-NUMBER`, `LOCATOR-PUBLIC-ID`, `LOCATOR-SYSTEM-ID`, `LOCATOR-TYPE`, `LOCK-REGISTRATION`, `LOCKED`, `LOG`, `LOG-AUDIT-EVENT`, `LOG-MANAGER`, `LOGICAL`, `LOGIN-EXPIRATION-TIMESTAMP`, `LOGIN-HOST`, `LOGIN-STATE`, `LOGOUT`, `LONGCHAR`, `LOOKAHEAD`, `LOOKUP`, `LT`, `MACHINE-CLASS`, `MANDATORY`, `MANUAL-HIGHLIGHT`, `MAP`, `MARGIN-EXTRA`, `MARGIN-HEIGHT`, `MARGIN-HEIGHT-`, `MARGIN-HEIGHT-C`, `MARGIN-HEIGHT-CH`, `MARGIN-HEIGHT-CHA`, `MARGIN-HEIGHT-CHAR`, `MARGIN-HEIGHT-CHARS`, `MARGIN-HEIGHT-P`, `MARGIN-HEIGHT-PI`, `MARGIN-HEIGHT-PIX`, `MARGIN-HEIGHT-PIXE`, `MARGIN-HEIGHT-PIXEL`, `MARGIN-HEIGHT-PIXELS`, `MARGIN-WIDTH`, `MARGIN-WIDTH-`, `MARGIN-WIDTH-C`, `MARGIN-WIDTH-CH`, `MARGIN-WIDTH-CHA`, `MARGIN-WIDTH-CHAR`, `MARGIN-WIDTH-CHARS`, `MARGIN-WIDTH-P`, `MARGIN-WIDTH-PI`, `MARGIN-WIDTH-PIX`, `MARGIN-WIDTH-PIXE`, `MARGIN-WIDTH-PIXEL`, `MARGIN-WIDTH-PIXELS`, `MARK-NEW`, `MARK-ROW-STATE`, `MATCHES`, `MAX`, `MAX-BUTTON`, `MAX-CHARS`, `MAX-DATA-GUESS`, `MAX-HEIGHT`, `MAX-HEIGHT-C`, `MAX-HEIGHT-CH`, `MAX-HEIGHT-CHA`, `MAX-HEIGHT-CHAR`, `MAX-HEIGHT-CHARS`, `MAX-HEIGHT-P`, `MAX-HEIGHT-PI`, `MAX-HEIGHT-PIX`, `MAX-HEIGHT-PIXE`, `MAX-HEIGHT-PIXEL`, `MAX-HEIGHT-PIXELS`, `MAX-ROWS`, `MAX-SIZE`, `MAX-VAL`, `MAX-VALU`, `MAX-VALUE`, `MAX-WIDTH`, `MAX-WIDTH-`, `MAX-WIDTH-C`, `MAX-WIDTH-CH`, `MAX-WIDTH-CHA`, `MAX-WIDTH-CHAR`, `MAX-WIDTH-CHARS`, `MAX-WIDTH-P`, `MAX-WIDTH-PI`, `MAX-WIDTH-PIX`, `MAX-WIDTH-PIXE`, `MAX-WIDTH-PIXEL`, `MAX-WIDTH-PIXELS`, `MAXI`, `MAXIM`, `MAXIMIZE`, `MAXIMU`, `MAXIMUM`, `MAXIMUM-LEVEL`, `MD5-DIGEST`, `MEMBER`, `MEMPTR-TO-NODE-VALUE`, `MENU`, `MENU-BAR`, `MENU-ITEM`, `MENU-K`, `MENU-KE`, `MENU-KEY`, `MENU-M`, `MENU-MO`, `MENU-MOU`, `MENU-MOUS`, `MENU-MOUSE`, `MENUBAR`, `MERGE-BY-FIELD`, `MESSAGE`, `MESSAGE-AREA`, `MESSAGE-AREA-FONT`, `MESSAGE-LINES`, `METHOD`, `MIN`, `MIN-BUTTON`, `MIN-COLUMN-WIDTH-C`, `MIN-COLUMN-WIDTH-CH`, `MIN-COLUMN-WIDTH-CHA`, `MIN-COLUMN-WIDTH-CHAR`, `MIN-COLUMN-WIDTH-CHARS`, `MIN-COLUMN-WIDTH-P`, `MIN-COLUMN-WIDTH-PI`, `MIN-COLUMN-WIDTH-PIX`, `MIN-COLUMN-WIDTH-PIXE`, `MIN-COLUMN-WIDTH-PIXEL`, `MIN-COLUMN-WIDTH-PIXELS`, `MIN-HEIGHT`, `MIN-HEIGHT-`, `MIN-HEIGHT-C`, `MIN-HEIGHT-CH`, `MIN-HEIGHT-CHA`, `MIN-HEIGHT-CHAR`, `MIN-HEIGHT-CHARS`, `MIN-HEIGHT-P`, `MIN-HEIGHT-PI`, `MIN-HEIGHT-PIX`, `MIN-HEIGHT-PIXE`, `MIN-HEIGHT-PIXEL`, `MIN-HEIGHT-PIXELS`, `MIN-SIZE`, `MIN-VAL`, `MIN-VALU`, `MIN-VALUE`, `MIN-WIDTH`, `MIN-WIDTH-`, `MIN-WIDTH-C`, `MIN-WIDTH-CH`, `MIN-WIDTH-CHA`, `MIN-WIDTH-CHAR`, `MIN-WIDTH-CHARS`, `MIN-WIDTH-P`, `MIN-WIDTH-PI`, `MIN-WIDTH-PIX`, `MIN-WIDTH-PIXE`, `MIN-WIDTH-PIXEL`, `MIN-WIDTH-PIXELS`, `MINI`, `MINIM`, `MINIMU`, `MINIMUM`, `MOD`, `MODIFIED`, `MODU`, `MODUL`, `MODULO`, `MONTH`, `MOUSE`, `MOUSE-P`, `MOUSE-PO`, `MOUSE-POI`, `MOUSE-POIN`, `MOUSE-POINT`, `MOUSE-POINTE`, `MOUSE-POINTER`, `MOVABLE`, `MOVE-AFTER`, `MOVE-AFTER-`, `MOVE-AFTER-T`, `MOVE-AFTER-TA`, `MOVE-AFTER-TAB`, `MOVE-AFTER-TAB-`, `MOVE-AFTER-TAB-I`, `MOVE-AFTER-TAB-IT`, `MOVE-AFTER-TAB-ITE`, `MOVE-AFTER-TAB-ITEM`, `MOVE-BEFOR`, `MOVE-BEFORE`, `MOVE-BEFORE-`, `MOVE-BEFORE-T`, `MOVE-BEFORE-TA`, `MOVE-BEFORE-TAB`, `MOVE-BEFORE-TAB-`, `MOVE-BEFORE-TAB-I`, `MOVE-BEFORE-TAB-IT`, `MOVE-BEFORE-TAB-ITE`, `MOVE-BEFORE-TAB-ITEM`, `MOVE-COL`, `MOVE-COLU`, `MOVE-COLUM`, `MOVE-COLUMN`, `MOVE-TO-B`, `MOVE-TO-BO`, `MOVE-TO-BOT`, `MOVE-TO-BOTT`, `MOVE-TO-BOTTO`, `MOVE-TO-BOTTOM`, `MOVE-TO-EOF`, `MOVE-TO-T`, `MOVE-TO-TO`, `MOVE-TO-TOP`, `MPE`, `MTIME`, `MULTI-COMPILE`, `MULTIPLE`, `MULTIPLE-KEY`, `MULTITASKING-INTERVAL`, `MUST-EXIST`, `NAME`, `NAMESPACE-PREFIX`, `NAMESPACE-URI`, `NATIVE`, `NE`, `NEEDS-APPSERVER-PROMPT`, `NEEDS-PROMPT`, `NEW`, `NEW-INSTANCE`, `NEW-ROW`, `NEXT`, `NEXT-COLUMN`, `NEXT-PROMPT`, `NEXT-ROWID`, `NEXT-SIBLING`, `NEXT-TAB-I`, `NEXT-TAB-IT`, `NEXT-TAB-ITE`, `NEXT-TAB-ITEM`, `NEXT-VALUE`, `NO`, `NO-APPLY`, `NO-ARRAY-MESSAGE`, `NO-ASSIGN`, `NO-ATTR`, `NO-ATTR-`, `NO-ATTR-L`, `NO-ATTR-LI`, `NO-ATTR-LIS`, `NO-ATTR-LIST`, `NO-ATTR-S`, `NO-ATTR-SP`, `NO-ATTR-SPA`, `NO-ATTR-SPAC`, `NO-ATTR-SPACE`, `NO-AUTO-VALIDATE`, `NO-BIND-WHERE`, `NO-BOX`, `NO-CONSOLE`, `NO-CONVERT`, `NO-CONVERT-3D-COLORS`, `NO-CURRENT-VALUE`, `NO-DEBUG`, `NO-DRAG`, `NO-ECHO`, `NO-EMPTY-SPACE`, `NO-ERROR`, `NO-F`, `NO-FI`, `NO-FIL`, `NO-FILL`, `NO-FOCUS`, `NO-HELP`, `NO-HIDE`, `NO-INDEX-HINT`, `NO-INHERIT-BGC`, `NO-INHERIT-BGCO`, `NO-INHERIT-BGCOLOR`, `NO-INHERIT-FGC`, `NO-INHERIT-FGCO`, `NO-INHERIT-FGCOL`, `NO-INHERIT-FGCOLO`, `NO-INHERIT-FGCOLOR`, `NO-JOIN-BY-SQLDB`, `NO-LABE`, `NO-LABELS`, `NO-LOBS`, `NO-LOCK`, `NO-LOOKAHEAD`, `NO-MAP`, `NO-MES`, `NO-MESS`, `NO-MESSA`, `NO-MESSAG`, `NO-MESSAGE`, `NO-PAUSE`, `NO-PREFE`, `NO-PREFET`, `NO-PREFETC`, `NO-PREFETCH`, `NO-ROW-MARKERS`, `NO-SCROLLBAR-VERTICAL`, `NO-SEPARATE-CONNECTION`, `NO-SEPARATORS`, `NO-TAB-STOP`, `NO-UND`, `NO-UNDE`, `NO-UNDER`, `NO-UNDERL`, `NO-UNDERLI`, `NO-UNDERLIN`, `NO-UNDERLINE`, `NO-UNDO`, `NO-VAL`, `NO-VALI`, `NO-VALID`, `NO-VALIDA`, `NO-VALIDAT`, `NO-VALIDATE`, `NO-WAIT`, `NO-WORD-WRAP`, `NODE-VALUE-TO-MEMPTR`, `NONAMESPACE-SCHEMA-LOCATION`, `NONE`, `NORMALIZE`, `NOT`, `NOT-ACTIVE`, `NOW`, `NULL`, `NUM-ALI`, `NUM-ALIA`, `NUM-ALIAS`, `NUM-ALIASE`, `NUM-ALIASES`, `NUM-BUFFERS`, `NUM-BUT`, `NUM-BUTT`, `NUM-BUTTO`, `NUM-BUTTON`, `NUM-BUTTONS`, `NUM-COL`, `NUM-COLU`, `NUM-COLUM`, `NUM-COLUMN`, `NUM-COLUMNS`, `NUM-COPIES`, `NUM-DBS`, `NUM-DROPPED-FILES`, `NUM-ENTRIES`, `NUM-FIELDS`, `NUM-FORMATS`, `NUM-ITEMS`, `NUM-ITERATIONS`, `NUM-LINES`, `NUM-LOCKED-COL`, `NUM-LOCKED-COLU`, `NUM-LOCKED-COLUM`, `NUM-LOCKED-COLUMN`, `NUM-LOCKED-COLUMNS`, `NUM-MESSAGES`, `NUM-PARAMETERS`, `NUM-REFERENCES`, `NUM-REPLACED`, `NUM-RESULTS`, `NUM-SELECTED`, `NUM-SELECTED-`, `NUM-SELECTED-ROWS`, `NUM-SELECTED-W`, `NUM-SELECTED-WI`, `NUM-SELECTED-WID`, `NUM-SELECTED-WIDG`, `NUM-SELECTED-WIDGE`, `NUM-SELECTED-WIDGET`, `NUM-SELECTED-WIDGETS`, `NUM-TABS`, `NUM-TO-RETAIN`, `NUM-VISIBLE-COLUMNS`, `NUMERIC`, `NUMERIC-F`, `NUMERIC-FO`, `NUMERIC-FOR`, `NUMERIC-FORM`, `NUMERIC-FORMA`, `NUMERIC-FORMAT`, `OCTET-LENGTH`, `OF`, `OFF`, `OK`, `OK-CANCEL`, `OLD`, `ON`, `ON-FRAME`, `ON-FRAME-`, `ON-FRAME-B`, `ON-FRAME-BO`, `ON-FRAME-BOR`, `ON-FRAME-BORD`, `ON-FRAME-BORDE`, `ON-FRAME-BORDER`, `OPEN`, `OPSYS`, `OPTION`, `OR`, `ORDERED-JOIN`, `ORDINAL`, `OS-APPEND`, `OS-COMMAND`, `OS-COPY`, `OS-CREATE-DIR`, `OS-DELETE`, `OS-DIR`, `OS-DRIVE`, `OS-DRIVES`, `OS-ERROR`, `OS-GETENV`, `OS-RENAME`, `OTHERWISE`, `OUTPUT`, `OVERLAY`, `OVERRIDE`, `OWNER`, `PAGE`, `PAGE-BOT`, `PAGE-BOTT`, `PAGE-BOTTO`, `PAGE-BOTTOM`, `PAGE-NUM`, `PAGE-NUMB`, `PAGE-NUMBE`, `PAGE-NUMBER`, `PAGE-SIZE`, `PAGE-TOP`, `PAGE-WID`, `PAGE-WIDT`, `PAGE-WIDTH`, `PAGED`, `PARAM`, `PARAME`, `PARAMET`, `PARAMETE`, `PARAMETER`, `PARENT`, `PARSE-STATUS`, `PARTIAL-KEY`, `PASCAL`, `PASSWORD-FIELD`, `PATHNAME`, `PAUSE`, `PBE-HASH-ALG`, `PBE-HASH-ALGO`, `PBE-HASH-ALGOR`, `PBE-HASH-ALGORI`, `PBE-HASH-ALGORIT`, `PBE-HASH-ALGORITH`, `PBE-HASH-ALGORITHM`, `PBE-KEY-ROUNDS`, `PDBNAME`, `PERSIST`, `PERSISTE`, `PERSISTEN`, `PERSISTENT`, `PERSISTENT-CACHE-DISABLED`, `PFC`, `PFCO`, `PFCOL`, `PFCOLO`, `PFCOLOR`, `PIXELS`, `PIXELS-PER-COL`, `PIXELS-PER-COLU`, `PIXELS-PER-COLUM`, `PIXELS-PER-COLUMN`, `PIXELS-PER-ROW`, `POPUP-M`, `POPUP-ME`, `POPUP-MEN`, `POPUP-MENU`, `POPUP-O`, `POPUP-ON`, `POPUP-ONL`, `POPUP-ONLY`, `PORTRAIT`, `POSITION`, `PRECISION`, `PREFER-DATASET`, `PREPARE-STRING`, `PREPARED`, `PREPROC`, `PREPROCE`, `PREPROCES`, `PREPROCESS`, `PRESEL`, `PRESELE`, `PRESELEC`, `PRESELECT`, `PREV`, `PREV-COLUMN`, `PREV-SIBLING`, `PREV-TAB-I`, `PREV-TAB-IT`, `PREV-TAB-ITE`, `PREV-TAB-ITEM`, `PRIMARY`, `PRINTER`, `PRINTER-CONTROL-HANDLE`, `PRINTER-HDC`, `PRINTER-NAME`, `PRINTER-PORT`, `PRINTER-SETUP`, `PRIVATE`, `PRIVATE-D`, `PRIVATE-DA`, `PRIVATE-DAT`, `PRIVATE-DATA`, `PRIVILEGES`, `PROC-HA`, `PROC-HAN`, `PROC-HAND`, `PROC-HANDL`, `PROC-HANDLE`, `PROC-ST`, `PROC-STA`, `PROC-STAT`, `PROC-STATU`, `PROC-STATUS`, `PROC-TEXT`, `PROC-TEXT-BUFFER`, `PROCE`, `PROCED`, `PROCEDU`, `PROCEDUR`, `PROCEDURE`, `PROCEDURE-CALL-TYPE`, `PROCEDURE-TYPE`, `PROCESS`, `PROFILER`, `PROGRAM-NAME`, `PROGRESS`, `PROGRESS-S`, `PROGRESS-SO`, `PROGRESS-SOU`, `PROGRESS-SOUR`, `PROGRESS-SOURC`, `PROGRESS-SOURCE`, `PROMPT`, `PROMPT-F`, `PROMPT-FO`, `PROMPT-FOR`, `PROMSGS`, `PROPATH`, `PROPERTY`, `PROTECTED`, `PROVERS`, `PROVERSI`, `PROVERSIO`, `PROVERSION`, `PROXY`, `PROXY-PASSWORD`, `PROXY-USERID`, `PUBLIC`, `PUBLIC-ID`, `PUBLISH`, `PUBLISHED-EVENTS`, `PUT`, `PUT-BYTE`, `PUT-DOUBLE`, `PUT-FLOAT`, `PUT-INT64`, `PUT-KEY-VAL`, `PUT-KEY-VALU`, `PUT-KEY-VALUE`, `PUT-LONG`, `PUT-SHORT`, `PUT-STRING`, `PUT-UNSIGNED-LONG`, `PUTBYTE`, `QUERY`, `QUERY-CLOSE`, `QUERY-OFF-END`, `QUERY-OPEN`, `QUERY-PREPARE`, `QUERY-TUNING`, `QUESTION`, `QUIT`, `QUOTER`, `R-INDEX`, `RADIO-BUTTONS`, `RADIO-SET`, `RANDOM`, `RAW`, `RAW-TRANSFER`, `RCODE-INFO`, `RCODE-INFOR`, `RCODE-INFORM`, `RCODE-INFORMA`, `RCODE-INFORMAT`, `RCODE-INFORMATI`, `RCODE-INFORMATIO`, `RCODE-INFORMATION`, `READ-AVAILABLE`, `READ-EXACT-NUM`, `READ-FILE`, `READ-JSON`, `READ-ONLY`, `READ-XML`, `READ-XMLSCHEMA`, `READKEY`, `REAL`, `RECID`, `RECORD-LENGTH`, `RECT`, `RECTA`, `RECTAN`, `RECTANG`, `RECTANGL`, `RECTANGLE`, `RECURSIVE`, `REFERENCE-ONLY`, `REFRESH`, `REFRESH-AUDIT-POLICY`, `REFRESHABLE`, `REGISTER-DOMAIN`, `RELEASE`, `REMOTE`, `REMOVE-EVENTS-PROCEDURE`, `REMOVE-SUPER-PROCEDURE`, `REPEAT`, `REPLACE`, `REPLACE-SELECTION-TEXT`, `REPOSITION`, `REPOSITION-BACKWARD`, `REPOSITION-FORWARD`, `REPOSITION-MODE`, `REPOSITION-TO-ROW`, `REPOSITION-TO-ROWID`, `REQUEST`, `REQUEST-INFO`, `RESET`, `RESIZA`, `RESIZAB`, `RESIZABL`, `RESIZABLE`, `RESIZE`, `RESPONSE-INFO`, `RESTART-ROW`, `RESTART-ROWID`, `RETAIN`, `RETAIN-SHAPE`, `RETRY`, `RETRY-CANCEL`, `RETURN`, `RETURN-ALIGN`, `RETURN-ALIGNE`, `RETURN-INS`, `RETURN-INSE`, `RETURN-INSER`, `RETURN-INSERT`, `RETURN-INSERTE`, `RETURN-INSERTED`, `RETURN-TO-START-DI`, `RETURN-TO-START-DIR`, `RETURN-VAL`, `RETURN-VALU`, `RETURN-VALUE`, `RETURN-VALUE-DATA-TYPE`, `RETURNS`, `REVERSE-FROM`, `REVERT`, `REVOKE`, `RGB-VALUE`, `RIGHT-ALIGNED`, `RIGHT-TRIM`, `ROLES`, `ROUND`, `ROUTINE-LEVEL`, `ROW`, `ROW-HEIGHT-CHARS`, `ROW-HEIGHT-PIXELS`, `ROW-MARKERS`, `ROW-OF`, `ROW-RESIZABLE`, `ROWID`, `RULE`, `RUN`, `RUN-PROCEDURE`, `SAVE CACHE`, `SAVE`, `SAVE-AS`, `SAVE-FILE`, `SAX-COMPLE`, `SAX-COMPLET`, `SAX-COMPLETE`, `SAX-PARSE`, `SAX-PARSE-FIRST`, `SAX-PARSE-NEXT`, `SAX-PARSER-ERROR`, `SAX-RUNNING`, `SAX-UNINITIALIZED`, `SAX-WRITE-BEGIN`, `SAX-WRITE-COMPLETE`, `SAX-WRITE-CONTENT`, `SAX-WRITE-ELEMENT`, `SAX-WRITE-ERROR`, `SAX-WRITE-IDLE`, `SAX-WRITE-TAG`, `SAX-WRITER`, `SCHEMA`, `SCHEMA-LOCATION`, `SCHEMA-MARSHAL`, `SCHEMA-PATH`, `SCREEN`, `SCREEN-IO`, `SCREEN-LINES`, `SCREEN-VAL`, `SCREEN-VALU`, `SCREEN-VALUE`, `SCROLL`, `SCROLL-BARS`, `SCROLL-DELTA`, `SCROLL-OFFSET`, `SCROLL-TO-CURRENT-ROW`, `SCROLL-TO-I`, `SCROLL-TO-IT`, `SCROLL-TO-ITE`, `SCROLL-TO-ITEM`, `SCROLL-TO-SELECTED-ROW`, `SCROLLABLE`, `SCROLLBAR-H`, `SCROLLBAR-HO`, `SCROLLBAR-HOR`, `SCROLLBAR-HORI`, `SCROLLBAR-HORIZ`, `SCROLLBAR-HORIZO`, `SCROLLBAR-HORIZON`, `SCROLLBAR-HORIZONT`, `SCROLLBAR-HORIZONTA`, `SCROLLBAR-HORIZONTAL`, `SCROLLBAR-V`, `SCROLLBAR-VE`, `SCROLLBAR-VER`, `SCROLLBAR-VERT`, `SCROLLBAR-VERTI`, `SCROLLBAR-VERTIC`, `SCROLLBAR-VERTICA`, `SCROLLBAR-VERTICAL`, `SCROLLED-ROW-POS`, `SCROLLED-ROW-POSI`, `SCROLLED-ROW-POSIT`, `SCROLLED-ROW-POSITI`, `SCROLLED-ROW-POSITIO`, `SCROLLED-ROW-POSITION`, `SCROLLING`, `SDBNAME`, `SEAL`, `SEAL-TIMESTAMP`, `SEARCH`, `SEARCH-SELF`, `SEARCH-TARGET`, `SECTION`, `SECURITY-POLICY`, `SEEK`, `SELECT`, `SELECT-ALL`, `SELECT-FOCUSED-ROW`, `SELECT-NEXT-ROW`, `SELECT-PREV-ROW`, `SELECT-ROW`, `SELECTABLE`, `SELECTED`, `SELECTION`, `SELECTION-END`, `SELECTION-LIST`, `SELECTION-START`, `SELECTION-TEXT`, `SELF`, `SEND`, `SEND-SQL-STATEMENT`, `SENSITIVE`, `SEPARATE-CONNECTION`, `SEPARATOR-FGCOLOR`, `SEPARATORS`, `SERIALIZABLE`, `SERIALIZE-HIDDEN`, `SERIALIZE-NAME`, `SERVER`, `SERVER-CONNECTION-BOUND`, `SERVER-CONNECTION-BOUND-REQUEST`, `SERVER-CONNECTION-CONTEXT`, `SERVER-CONNECTION-ID`, `SERVER-OPERATING-MODE`, `SESSION`, `SESSION-ID`, `SET`, `SET-APPL-CONTEXT`, `SET-ATTR-CALL-TYPE`, `SET-ATTRIBUTE-NODE`, `SET-BLUE`, `SET-BLUE-`, `SET-BLUE-V`, `SET-BLUE-VA`, `SET-BLUE-VAL`, `SET-BLUE-VALU`, `SET-BLUE-VALUE`, `SET-BREAK`, `SET-BUFFERS`, `SET-CALLBACK`, `SET-CLIENT`, `SET-COMMIT`, `SET-CONTENTS`, `SET-CURRENT-VALUE`, `SET-DB-CLIENT`, `SET-DYNAMIC`, `SET-EVENT-MANAGER-OPTION`, `SET-GREEN`, `SET-GREEN-`, `SET-GREEN-V`, `SET-GREEN-VA`, `SET-GREEN-VAL`, `SET-GREEN-VALU`, `SET-GREEN-VALUE`, `SET-INPUT-SOURCE`, `SET-OPTION`, `SET-OUTPUT-DESTINATION`, `SET-PARAMETER`, `SET-POINTER-VALUE`, `SET-PROPERTY`, `SET-RED`, `SET-RED-`, `SET-RED-V`, `SET-RED-VA`, `SET-RED-VAL`, `SET-RED-VALU`, `SET-RED-VALUE`, `SET-REPOSITIONED-ROW`, `SET-RGB-VALUE`, `SET-ROLLBACK`, `SET-SELECTION`, `SET-SIZE`, `SET-SORT-ARROW`, `SET-WAIT-STATE`, `SETUSER`, `SETUSERI`, `SETUSERID`, `SHA1-DIGEST`, `SHARE`, `SHARE-`, `SHARE-L`, `SHARE-LO`, `SHARE-LOC`, `SHARE-LOCK`, `SHARED`, `SHOW-IN-TASKBAR`, `SHOW-STAT`, `SHOW-STATS`, `SIDE-LAB`, `SIDE-LABE`, `SIDE-LABEL`, `SIDE-LABEL-H`, `SIDE-LABEL-HA`, `SIDE-LABEL-HAN`, `SIDE-LABEL-HAND`, `SIDE-LABEL-HANDL`, `SIDE-LABEL-HANDLE`, `SIDE-LABELS`, `SIGNATURE`, `SILENT`, `SIMPLE`, `SINGLE`, `SINGLE-RUN`, `SINGLETON`, `SIZE`, `SIZE-C`, `SIZE-CH`, `SIZE-CHA`, `SIZE-CHAR`, `SIZE-CHARS`, `SIZE-P`, `SIZE-PI`, `SIZE-PIX`, `SIZE-PIXE`, `SIZE-PIXEL`, `SIZE-PIXELS`, `SKIP`, `SKIP-DELETED-RECORD`, `SLIDER`, `SMALL-ICON`, `SMALL-TITLE`, `SMALLINT`, `SOME`, `SORT`, `SORT-ASCENDING`, `SORT-NUMBER`, `SOURCE`, `SOURCE-PROCEDURE`, `SPACE`, `SQL`, `SQRT`, `SSL-SERVER-NAME`, `STANDALONE`, `START`, `START-DOCUMENT`, `START-ELEMENT`, `START-MOVE`, `START-RESIZE`, `START-ROW-RESIZE`, `STATE-DETAIL`, `STATIC`, `STATUS`, `STATUS-AREA`, `STATUS-AREA-FONT`, `STDCALL`, `STOP`, `STOP-AFTER`, `STOP-PARSING`, `STOPPE`, `STOPPED`, `STORED-PROC`, `STORED-PROCE`, `STORED-PROCED`, `STORED-PROCEDU`, `STORED-PROCEDUR`, `STORED-PROCEDURE`, `STREAM`, `STREAM-HANDLE`, `STREAM-IO`, `STRETCH-TO-FIT`, `STRICT`, `STRICT-ENTITY-RESOLUTION`, `STRING`, `STRING-VALUE`, `STRING-XREF`, `SUB-AVE`, `SUB-AVER`, `SUB-AVERA`, `SUB-AVERAG`, `SUB-AVERAGE`, `SUB-COUNT`, `SUB-MAXIMUM`, `SUB-MENU`, `SUB-MIN`, `SUB-MINIMUM`, `SUB-TOTAL`, `SUBSCRIBE`, `SUBST`, `SUBSTI`, `SUBSTIT`, `SUBSTITU`, `SUBSTITUT`, `SUBSTITUTE`, `SUBSTR`, `SUBSTRI`, `SUBSTRIN`, `SUBSTRING`, `SUBTYPE`, `SUM`, `SUM-MAX`, `SUM-MAXI`, `SUM-MAXIM`, `SUM-MAXIMU`, `SUPER`, `SUPER-PROCEDURES`, `SUPPRESS-NAMESPACE-PROCESSING`, `SUPPRESS-W`, `SUPPRESS-WA`, `SUPPRESS-WAR`, `SUPPRESS-WARN`, `SUPPRESS-WARNI`, `SUPPRESS-WARNIN`, `SUPPRESS-WARNING`, `SUPPRESS-WARNINGS`, `SYMMETRIC-ENCRYPTION-ALGORITHM`, `SYMMETRIC-ENCRYPTION-IV`, `SYMMETRIC-ENCRYPTION-KEY`, `SYMMETRIC-SUPPORT`, `SYSTEM-ALERT`, `SYSTEM-ALERT-`, `SYSTEM-ALERT-B`, `SYSTEM-ALERT-BO`, `SYSTEM-ALERT-BOX`, `SYSTEM-ALERT-BOXE`, `SYSTEM-ALERT-BOXES`, `SYSTEM-DIALOG`, `SYSTEM-HELP`, `SYSTEM-ID`, `TAB-POSITION`, `TAB-STOP`, `TABLE`, `TABLE-HANDLE`, `TABLE-NUMBER`, `TABLE-SCAN`, `TARGET`, `TARGET-PROCEDURE`, `TEMP-DIR`, `TEMP-DIRE`, `TEMP-DIREC`, `TEMP-DIRECT`, `TEMP-DIRECTO`, `TEMP-DIRECTOR`, `TEMP-DIRECTORY`, `TEMP-TABLE`, `TEMP-TABLE-PREPARE`, `TERM`, `TERMI`, `TERMIN`, `TERMINA`, `TERMINAL`, `TERMINATE`, `TEXT`, `TEXT-CURSOR`, `TEXT-SEG-GROW`, `TEXT-SELECTED`, `THEN`, `THIS-OBJECT`, `THIS-PROCEDURE`, `THREAD-SAFE`, `THREE-D`, `THROUGH`, `THROW`, `THRU`, `TIC-MARKS`, `TIME`, `TIME-SOURCE`, `TITLE`, `TITLE-BGC`, `TITLE-BGCO`, `TITLE-BGCOL`, `TITLE-BGCOLO`, `TITLE-BGCOLOR`, `TITLE-DC`, `TITLE-DCO`, `TITLE-DCOL`, `TITLE-DCOLO`, `TITLE-DCOLOR`, `TITLE-FGC`, `TITLE-FGCO`, `TITLE-FGCOL`, `TITLE-FGCOLO`, `TITLE-FGCOLOR`, `TITLE-FO`, `TITLE-FON`, `TITLE-FONT`, `TO`, `TO-ROWID`, `TODAY`, `TOGGLE-BOX`, `TOOLTIP`, `TOOLTIPS`, `TOP-NAV-QUERY`, `TOP-ONLY`, `TOPIC`, `TOTAL`, `TRAILING`, `TRANS`, `TRANS-INIT-PROCEDURE`, `TRANSACTION`, `TRANSACTION-MODE`, `TRANSPARENT`, `TRIGGER`, `TRIGGERS`, `TRIM`, `TRUE`, `TRUNC`, `TRUNCA`, `TRUNCAT`, `TRUNCATE`, `TYPE`, `TYPE-OF`, `UNBOX`, `UNBUFF`, `UNBUFFE`, `UNBUFFER`, `UNBUFFERE`, `UNBUFFERED`, `UNDERL`, `UNDERLI`, `UNDERLIN`, `UNDERLINE`, `UNDO`, `UNFORM`, `UNFORMA`, `UNFORMAT`, `UNFORMATT`, `UNFORMATTE`, `UNFORMATTED`, `UNION`, `UNIQUE`, `UNIQUE-ID`, `UNIQUE-MATCH`, `UNIX`, `UNLESS-HIDDEN`, `UNLOAD`, `UNSIGNED-LONG`, `UNSUBSCRIBE`, `UP`, `UPDATE`, `UPDATE-ATTRIBUTE`, `URL`, `URL-DECODE`, `URL-ENCODE`, `URL-PASSWORD`, `URL-USERID`, `USE`, `USE-DICT-EXPS`, `USE-FILENAME`, `USE-INDEX`, `USE-REVVIDEO`, `USE-TEXT`, `USE-UNDERLINE`, `USE-WIDGET-POOL`, `USER`, `USER-ID`, `USERID`, `USING`, `V6DISPLAY`, `V6FRAME`, `VALID-EVENT`, `VALID-HANDLE`, `VALID-OBJECT`, `VALIDATE`, `VALIDATE-EXPRESSION`, `VALIDATE-MESSAGE`, `VALIDATE-SEAL`, `VALIDATION-ENABLED`, `VALUE`, `VALUE-CHANGED`, `VALUES`, `VAR`, `VARI`, `VARIA`, `VARIAB`, `VARIABL`, `VARIABLE`, `VERBOSE`, `VERSION`, `VERT`, `VERTI`, `VERTIC`, `VERTICA`, `VERTICAL`, `VIEW`, `VIEW-AS`, `VIEW-FIRST-COLUMN-ON-REOPEN`, `VIRTUAL-HEIGHT`, `VIRTUAL-HEIGHT-`, `VIRTUAL-HEIGHT-C`, `VIRTUAL-HEIGHT-CH`, `VIRTUAL-HEIGHT-CHA`, `VIRTUAL-HEIGHT-CHAR`, `VIRTUAL-HEIGHT-CHARS`, `VIRTUAL-HEIGHT-P`, `VIRTUAL-HEIGHT-PI`, `VIRTUAL-HEIGHT-PIX`, `VIRTUAL-HEIGHT-PIXE`, `VIRTUAL-HEIGHT-PIXEL`, `VIRTUAL-HEIGHT-PIXELS`, `VIRTUAL-WIDTH`, `VIRTUAL-WIDTH-`, `VIRTUAL-WIDTH-C`, `VIRTUAL-WIDTH-CH`, `VIRTUAL-WIDTH-CHA`, `VIRTUAL-WIDTH-CHAR`, `VIRTUAL-WIDTH-CHARS`, `VIRTUAL-WIDTH-P`, `VIRTUAL-WIDTH-PI`, `VIRTUAL-WIDTH-PIX`, `VIRTUAL-WIDTH-PIXE`, `VIRTUAL-WIDTH-PIXEL`, `VIRTUAL-WIDTH-PIXELS`, `VISIBLE`, `VOID`, `WAIT`, `WAIT-FOR`, `WARNING`, `WEB-CONTEXT`, `WEEKDAY`, `WHEN`, `WHERE`, `WHILE`, `WIDGET`, `WIDGET-E`, `WIDGET-EN`, `WIDGET-ENT`, `WIDGET-ENTE`, `WIDGET-ENTER`, `WIDGET-ID`, `WIDGET-L`, `WIDGET-LE`, `WIDGET-LEA`, `WIDGET-LEAV`, `WIDGET-LEAVE`, `WIDGET-POOL`, `WIDTH`, `WIDTH-`, `WIDTH-C`, `WIDTH-CH`, `WIDTH-CHA`, `WIDTH-CHAR`, `WIDTH-CHARS`, `WIDTH-P`, `WIDTH-PI`, `WIDTH-PIX`, `WIDTH-PIXE`, `WIDTH-PIXEL`, `WIDTH-PIXELS`, `WINDOW`, `WINDOW-MAXIM`, `WINDOW-MAXIMI`, `WINDOW-MAXIMIZ`, `WINDOW-MAXIMIZE`, `WINDOW-MAXIMIZED`, `WINDOW-MINIM`, `WINDOW-MINIMI`, `WINDOW-MINIMIZ`, `WINDOW-MINIMIZE`, `WINDOW-MINIMIZED`, `WINDOW-NAME`, `WINDOW-NORMAL`, `WINDOW-STA`, `WINDOW-STAT`, `WINDOW-STATE`, `WINDOW-SYSTEM`, `WITH`, `WORD-INDEX`, `WORD-WRAP`, `WORK-AREA-HEIGHT-PIXELS`, `WORK-AREA-WIDTH-PIXELS`, `WORK-AREA-X`, `WORK-AREA-Y`, `WORK-TAB`, `WORK-TABL`, `WORK-TABLE`, `WORKFILE`, `WRITE`, `WRITE-CDATA`, `WRITE-CHARACTERS`, `WRITE-COMMENT`, `WRITE-DATA-ELEMENT`, `WRITE-EMPTY-ELEMENT`, `WRITE-ENTITY-REF`, `WRITE-EXTERNAL-DTD`, `WRITE-FRAGMENT`, `WRITE-JSON`, `WRITE-MESSAGE`, `WRITE-PROCESSING-INSTRUCTION`, `WRITE-STATUS`, `WRITE-XML`, `WRITE-XMLSCHEMA`, `X`, `X-OF`, `XCODE`, `XML-DATA-TYPE`, `XML-ENTITY-EXPANSION-LIMIT`, `XML-NODE-TYPE`, `XML-SCHEMA-PATH`, `XML-STRICT-ENTITY-RESOLUTION`, `XML-SUPPRESS-NAMESPACE-PROCESSING`, `XREF`, `XREF-XML`, `Y`, `Y-OF`, `YEAR`, `YEAR-OFFSET`, `YES`, `YES-NO`, `YES-NO-CANCEL`), KeywordReserved, nil}, // nolint\n-\t\t\t\t{`\"(\\\\\\\\|\\\\[^\\\\]|[^\"\\\\])*\"`, LiteralStringDouble, nil},\n-\t\t\t\t{`'(\\\\\\\\|\\\\[^\\\\]|[^'\\\\])*'`, LiteralStringSingle, nil},\n+\t\t\t\t{`\"(~~|~[^~]|[^\"~])*\"`, LiteralStringDouble, nil},\n+\t\t\t\t{`'(~~|~[^~]|[^\"~])*'`, LiteralStringSingle, nil},\n \t\t\t\t{`[0-9][0-9]*\\.[0-9]+([eE][0-9]+)?[fd]?`, LiteralNumberFloat, nil},\n \t\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n \t\t\t\t{`\\s+`, Text, nil},"
    },
    {
      "sha": "bcf5e66d1752ddf48c736287b2e16f1d15f1e68e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/remap.go",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fremap.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fremap.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fremap.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -60,10 +60,10 @@ type TypeMapping []struct {\n //\n // eg. Map \"defvaralias\" tokens of type NameVariable to NameFunction:\n //\n-// \t\tmapping := TypeMapping{\n-// \t\t\t{NameVariable, NameFunction, []string{\"defvaralias\"},\n-// \t\t}\n-// \t\tlexer = TypeRemappingLexer(lexer, mapping)\n+//\tmapping := TypeMapping{\n+//\t\t{NameVariable, NameFunction, []string{\"defvaralias\"},\n+//\t}\n+//\tlexer = TypeRemappingLexer(lexer, mapping)\n func TypeRemappingLexer(lexer Lexer, mapping TypeMapping) Lexer {\n \t// Lookup table for fast remapping.\n \tlut := map[TokenType]map[string]TokenType{}"
    },
    {
      "sha": "2b727db8a821e6ae0291fe2cddaf364ecb4dc48b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/serialise.go",
      "status": "modified",
      "additions": 28,
      "deletions": 29,
      "changes": 57,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fserialise.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fserialise.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fserialise.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -15,42 +15,42 @@ import (\n \n // Serialisation of Chroma rules to XML. The format is:\n //\n-//     <rules>\n-//       <state name=\"$STATE\">\n-//         <rule [pattern=\"$PATTERN\"]>\n-//           [<$EMITTER ...>]\n-//           [<$MUTATOR ...>]\n-//         </rule>\n-//       </state>\n-//     </rules>\n+//\t<rules>\n+//\t  <state name=\"$STATE\">\n+//\t    <rule [pattern=\"$PATTERN\"]>\n+//\t      [<$EMITTER ...>]\n+//\t      [<$MUTATOR ...>]\n+//\t    </rule>\n+//\t  </state>\n+//\t</rules>\n //\n // eg. Include(\"String\") would become:\n //\n-//     <rule>\n-//       <include state=\"String\" />\n-//     </rule>\n+//\t<rule>\n+//\t  <include state=\"String\" />\n+//\t</rule>\n //\n-//     [null, null, {\"kind\": \"include\", \"state\": \"String\"}]\n+//\t[null, null, {\"kind\": \"include\", \"state\": \"String\"}]\n //\n // eg. Rule{`\\d+`, Text, nil} would become:\n //\n-//     <rule pattern=\"\\\\d+\">\n-//       <token type=\"Text\"/>\n-//     </rule>\n+//\t<rule pattern=\"\\\\d+\">\n+//\t  <token type=\"Text\"/>\n+//\t</rule>\n //\n // eg. Rule{`\"`, String, Push(\"String\")}\n //\n-//     <rule pattern=\"\\\"\">\n-//       <token type=\"String\" />\n-//       <push state=\"String\" />\n-//     </rule>\n+//\t<rule pattern=\"\\\"\">\n+//\t  <token type=\"String\" />\n+//\t  <push state=\"String\" />\n+//\t</rule>\n //\n // eg. Rule{`(\\w+)(\\n)`, ByGroups(Keyword, Whitespace), nil},\n //\n-//     <rule pattern=\"(\\\\w+)(\\\\n)\">\n-//       <bygroups token=\"Keyword\" token=\"Whitespace\" />\n-//       <push state=\"String\" />\n-//     </rule>\n+//\t<rule pattern=\"(\\\\w+)(\\\\n)\">\n+//\t  <bygroups token=\"Keyword\" token=\"Whitespace\" />\n+//\t  <push state=\"String\" />\n+//\t</rule>\n var (\n \t// ErrNotSerialisable is returned if a lexer contains Rules that cannot be serialised.\n \tErrNotSerialisable = fmt.Errorf(\"not serialisable\")\n@@ -372,13 +372,12 @@ func (t *TokenType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {\n \tif err := d.DecodeElement(&el, &start); err != nil {\n \t\treturn err\n \t}\n-\tfor tt, text := range _TokenType_map {\n-\t\tif text == el.Type {\n-\t\t\t*t = tt\n-\t\t\treturn nil\n-\t\t}\n+\ttt, err := TokenTypeString(el.Type)\n+\tif err != nil {\n+\t\treturn err\n \t}\n-\treturn fmt.Errorf(\"unknown TokenType %q\", el.Type)\n+\t*t = tt\n+\treturn nil\n }\n \n func (t TokenType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {"
    },
    {
      "sha": "cc8d9a602f1805765e7eea3756ec49bb00234e6f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/style.go",
      "status": "modified",
      "additions": 115,
      "deletions": 0,
      "changes": 115,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyle.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyle.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyle.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -1,7 +1,10 @@\n package chroma\n \n import (\n+\t\"encoding/xml\"\n \t\"fmt\"\n+\t\"io\"\n+\t\"sort\"\n \t\"strings\"\n )\n \n@@ -49,6 +52,10 @@ type StyleEntry struct {\n \tNoInherit bool\n }\n \n+func (s StyleEntry) MarshalText() ([]byte, error) {\n+\treturn []byte(s.String()), nil\n+}\n+\n func (s StyleEntry) String() string {\n \tout := []string{}\n \tif s.Bold != Pass {\n@@ -216,6 +223,22 @@ func (s *StyleBuilder) Build() (*Style, error) {\n // StyleEntries mapping TokenType to colour definition.\n type StyleEntries map[TokenType]string\n \n+// NewXMLStyle parses an XML style definition.\n+func NewXMLStyle(r io.Reader) (*Style, error) {\n+\tdec := xml.NewDecoder(r)\n+\tstyle := &Style{}\n+\treturn style, dec.Decode(style)\n+}\n+\n+// MustNewXMLStyle is like NewXMLStyle but panics on error.\n+func MustNewXMLStyle(r io.Reader) *Style {\n+\tstyle, err := NewXMLStyle(r)\n+\tif err != nil {\n+\t\tpanic(err)\n+\t}\n+\treturn style\n+}\n+\n // NewStyle creates a new style definition.\n func NewStyle(name string, entries StyleEntries) (*Style, error) {\n \treturn NewStyleBuilder(name).AddAll(entries).Build()\n@@ -239,6 +262,89 @@ type Style struct {\n \tparent  *Style\n }\n \n+func (s *Style) MarshalXML(e *xml.Encoder, start xml.StartElement) error {\n+\tif s.parent != nil {\n+\t\treturn fmt.Errorf(\"cannot marshal style with parent\")\n+\t}\n+\tstart.Name = xml.Name{Local: \"style\"}\n+\tstart.Attr = []xml.Attr{{Name: xml.Name{Local: \"name\"}, Value: s.Name}}\n+\tif err := e.EncodeToken(start); err != nil {\n+\t\treturn err\n+\t}\n+\tsorted := make([]TokenType, 0, len(s.entries))\n+\tfor ttype := range s.entries {\n+\t\tsorted = append(sorted, ttype)\n+\t}\n+\tsort.Slice(sorted, func(i, j int) bool { return sorted[i] < sorted[j] })\n+\tfor _, ttype := range sorted {\n+\t\tentry := s.entries[ttype]\n+\t\tel := xml.StartElement{Name: xml.Name{Local: \"entry\"}}\n+\t\tel.Attr = []xml.Attr{\n+\t\t\t{Name: xml.Name{Local: \"type\"}, Value: ttype.String()},\n+\t\t\t{Name: xml.Name{Local: \"style\"}, Value: entry.String()},\n+\t\t}\n+\t\tif err := e.EncodeToken(el); err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tif err := e.EncodeToken(xml.EndElement{Name: el.Name}); err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t}\n+\treturn e.EncodeToken(xml.EndElement{Name: start.Name})\n+}\n+\n+func (s *Style) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {\n+\tfor _, attr := range start.Attr {\n+\t\tif attr.Name.Local == \"name\" {\n+\t\t\ts.Name = attr.Value\n+\t\t} else {\n+\t\t\treturn fmt.Errorf(\"unexpected attribute %s\", attr.Name.Local)\n+\t\t}\n+\t}\n+\tif s.Name == \"\" {\n+\t\treturn fmt.Errorf(\"missing style name attribute\")\n+\t}\n+\ts.entries = map[TokenType]StyleEntry{}\n+\tfor {\n+\t\ttok, err := d.Token()\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tswitch el := tok.(type) {\n+\t\tcase xml.StartElement:\n+\t\t\tif el.Name.Local != \"entry\" {\n+\t\t\t\treturn fmt.Errorf(\"unexpected element %s\", el.Name.Local)\n+\t\t\t}\n+\t\t\tvar ttype TokenType\n+\t\t\tvar entry StyleEntry\n+\t\t\tfor _, attr := range el.Attr {\n+\t\t\t\tswitch attr.Name.Local {\n+\t\t\t\tcase \"type\":\n+\t\t\t\t\tttype, err = TokenTypeString(attr.Value)\n+\t\t\t\t\tif err != nil {\n+\t\t\t\t\t\treturn err\n+\t\t\t\t\t}\n+\n+\t\t\t\tcase \"style\":\n+\t\t\t\t\tentry, err = ParseStyleEntry(attr.Value)\n+\t\t\t\t\tif err != nil {\n+\t\t\t\t\t\treturn err\n+\t\t\t\t\t}\n+\n+\t\t\t\tdefault:\n+\t\t\t\t\treturn fmt.Errorf(\"unexpected attribute %s\", attr.Name.Local)\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\ts.entries[ttype] = entry\n+\n+\t\tcase xml.EndElement:\n+\t\t\tif el.Name.Local == start.Name.Local {\n+\t\t\t\treturn nil\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n // Types that are styled.\n func (s *Style) Types() []TokenType {\n \tdedupe := map[TokenType]bool{}\n@@ -319,6 +425,15 @@ func (s *Style) synthesisable(ttype TokenType) bool {\n \treturn ttype == LineHighlight || ttype == LineNumbers || ttype == LineNumbersTable\n }\n \n+// MustParseStyleEntry parses a Pygments style entry or panics.\n+func MustParseStyleEntry(entry string) StyleEntry {\n+\tout, err := ParseStyleEntry(entry)\n+\tif err != nil {\n+\t\tpanic(err)\n+\t}\n+\treturn out\n+}\n+\n // ParseStyleEntry parses a Pygments style entry.\n func ParseStyleEntry(entry string) (StyleEntry, error) { // nolint: gocyclo\n \tout := StyleEntry{}"
    },
    {
      "sha": "2807dc78fdd80383495fe5674a06b12e0b47af2f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/abap.go",
      "status": "removed",
      "additions": 0,
      "deletions": 18,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fabap.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fabap.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fabap.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,18 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Abap style.\n-var Abap = Register(chroma.MustNewStyle(\"abap\", chroma.StyleEntries{\n-\tchroma.Comment:        \"italic #888\",\n-\tchroma.CommentSpecial: \"#888\",\n-\tchroma.Keyword:        \"#00f\",\n-\tchroma.OperatorWord:   \"#00f\",\n-\tchroma.Name:           \"#000\",\n-\tchroma.LiteralNumber:  \"#3af\",\n-\tchroma.LiteralString:  \"#5a2\",\n-\tchroma.Error:          \"#F00\",\n-\tchroma.Background:     \" bg:#ffffff\",\n-}))"
    },
    {
      "sha": "36ea2f1d08417ca66633adff02d8053c48b2b611",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/abap.xml",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fabap.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fabap.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fabap.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,11 @@\n+<style name=\"abap\">\n+  <entry type=\"Error\" style=\"#ff0000\"/>\n+  <entry type=\"Background\" style=\"bg:#ffffff\"/>\n+  <entry type=\"Keyword\" style=\"#0000ff\"/>\n+  <entry type=\"Name\" style=\"#000000\"/>\n+  <entry type=\"LiteralString\" style=\"#55aa22\"/>\n+  <entry type=\"LiteralNumber\" style=\"#33aaff\"/>\n+  <entry type=\"OperatorWord\" style=\"#0000ff\"/>\n+  <entry type=\"Comment\" style=\"italic #888888\"/>\n+  <entry type=\"CommentSpecial\" style=\"#888888\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "b38715eec0bb6308c6b81a783b9cabaa1e65a3e4",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/algol.go",
      "status": "removed",
      "additions": 0,
      "deletions": 25,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Falgol.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Falgol.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Falgol.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,25 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Algol style.\n-var Algol = Register(chroma.MustNewStyle(\"algol\", chroma.StyleEntries{\n-\tchroma.Comment:            \"italic #888\",\n-\tchroma.CommentPreproc:     \"bold noitalic #888\",\n-\tchroma.CommentSpecial:     \"bold noitalic #888\",\n-\tchroma.Keyword:            \"underline bold\",\n-\tchroma.KeywordDeclaration: \"italic\",\n-\tchroma.NameBuiltin:        \"bold italic\",\n-\tchroma.NameBuiltinPseudo:  \"bold italic\",\n-\tchroma.NameNamespace:      \"bold italic #666\",\n-\tchroma.NameClass:          \"bold italic #666\",\n-\tchroma.NameFunction:       \"bold italic #666\",\n-\tchroma.NameVariable:       \"bold italic #666\",\n-\tchroma.NameConstant:       \"bold italic #666\",\n-\tchroma.OperatorWord:       \"bold\",\n-\tchroma.LiteralString:      \"italic #666\",\n-\tchroma.Error:              \"border:#FF0000\",\n-\tchroma.Background:         \" bg:#ffffff\",\n-}))"
    },
    {
      "sha": "e8a6dc1b82992d7bf4f9c1fab7f1776a5d491c7d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/algol.xml",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Falgol.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Falgol.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Falgol.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,18 @@\n+<style name=\"algol\">\n+  <entry type=\"Error\" style=\"border:#ff0000\"/>\n+  <entry type=\"Background\" style=\"bg:#ffffff\"/>\n+  <entry type=\"Keyword\" style=\"bold underline\"/>\n+  <entry type=\"KeywordDeclaration\" style=\"italic\"/>\n+  <entry type=\"NameBuiltin\" style=\"bold italic\"/>\n+  <entry type=\"NameBuiltinPseudo\" style=\"bold italic\"/>\n+  <entry type=\"NameClass\" style=\"bold italic #666666\"/>\n+  <entry type=\"NameConstant\" style=\"bold italic #666666\"/>\n+  <entry type=\"NameFunction\" style=\"bold italic #666666\"/>\n+  <entry type=\"NameNamespace\" style=\"bold italic #666666\"/>\n+  <entry type=\"NameVariable\" style=\"bold italic #666666\"/>\n+  <entry type=\"LiteralString\" style=\"italic #666666\"/>\n+  <entry type=\"OperatorWord\" style=\"bold\"/>\n+  <entry type=\"Comment\" style=\"italic #888888\"/>\n+  <entry type=\"CommentSpecial\" style=\"bold noitalic #888888\"/>\n+  <entry type=\"CommentPreproc\" style=\"bold noitalic #888888\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "487086d4ac36db048229b53a1af4587961818f14",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/algol_nu.go",
      "status": "removed",
      "additions": 0,
      "deletions": 25,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Falgol_nu.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Falgol_nu.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Falgol_nu.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,25 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// AlgolNu style.\n-var AlgolNu = Register(chroma.MustNewStyle(\"algol_nu\", chroma.StyleEntries{\n-\tchroma.Comment:            \"italic #888\",\n-\tchroma.CommentPreproc:     \"bold noitalic #888\",\n-\tchroma.CommentSpecial:     \"bold noitalic #888\",\n-\tchroma.Keyword:            \"bold\",\n-\tchroma.KeywordDeclaration: \"italic\",\n-\tchroma.NameBuiltin:        \"bold italic\",\n-\tchroma.NameBuiltinPseudo:  \"bold italic\",\n-\tchroma.NameNamespace:      \"bold italic #666\",\n-\tchroma.NameClass:          \"bold italic #666\",\n-\tchroma.NameFunction:       \"bold italic #666\",\n-\tchroma.NameVariable:       \"bold italic #666\",\n-\tchroma.NameConstant:       \"bold italic #666\",\n-\tchroma.OperatorWord:       \"bold\",\n-\tchroma.LiteralString:      \"italic #666\",\n-\tchroma.Error:              \"border:#FF0000\",\n-\tchroma.Background:         \" bg:#ffffff\",\n-}))"
    },
    {
      "sha": "7fa340f32b38a59c8acd961dcf6a8175c1dc7fa7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/algol_nu.xml",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Falgol_nu.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Falgol_nu.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Falgol_nu.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,18 @@\n+<style name=\"algol_nu\">\n+  <entry type=\"Error\" style=\"border:#ff0000\"/>\n+  <entry type=\"Background\" style=\"bg:#ffffff\"/>\n+  <entry type=\"Keyword\" style=\"bold\"/>\n+  <entry type=\"KeywordDeclaration\" style=\"italic\"/>\n+  <entry type=\"NameBuiltin\" style=\"bold italic\"/>\n+  <entry type=\"NameBuiltinPseudo\" style=\"bold italic\"/>\n+  <entry type=\"NameClass\" style=\"bold italic #666666\"/>\n+  <entry type=\"NameConstant\" style=\"bold italic #666666\"/>\n+  <entry type=\"NameFunction\" style=\"bold italic #666666\"/>\n+  <entry type=\"NameNamespace\" style=\"bold italic #666666\"/>\n+  <entry type=\"NameVariable\" style=\"bold italic #666666\"/>\n+  <entry type=\"LiteralString\" style=\"italic #666666\"/>\n+  <entry type=\"OperatorWord\" style=\"bold\"/>\n+  <entry type=\"Comment\" style=\"italic #888888\"/>\n+  <entry type=\"CommentSpecial\" style=\"bold noitalic #888888\"/>\n+  <entry type=\"CommentPreproc\" style=\"bold noitalic #888888\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "e26d6f0a56a0f737314853241db339fee29aa3c6",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/api.go",
      "status": "modified",
      "additions": 30,
      "deletions": 2,
      "changes": 32,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fapi.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fapi.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fapi.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -1,16 +1,44 @@\n package styles\n \n import (\n+\t\"embed\"\n+\t\"io/fs\"\n \t\"sort\"\n \n \t\"github.com/alecthomas/chroma/v2\"\n )\n \n+//go:embed *.xml\n+var embedded embed.FS\n+\n // Registry of Styles.\n-var Registry = map[string]*chroma.Style{}\n+var Registry = func() map[string]*chroma.Style {\n+\tregistry := map[string]*chroma.Style{}\n+\t// Register all embedded styles.\n+\tfiles, err := fs.ReadDir(embedded, \".\")\n+\tif err != nil {\n+\t\tpanic(err)\n+\t}\n+\tfor _, file := range files {\n+\t\tif file.IsDir() {\n+\t\t\tcontinue\n+\t\t}\n+\t\tr, err := embedded.Open(file.Name())\n+\t\tif err != nil {\n+\t\t\tpanic(err)\n+\t\t}\n+\t\tstyle, err := chroma.NewXMLStyle(r)\n+\t\tif err != nil {\n+\t\t\tpanic(err)\n+\t\t}\n+\t\tregistry[style.Name] = style\n+\t\t_ = r.Close()\n+\t}\n+\treturn registry\n+}()\n \n // Fallback style. Reassign to change the default fallback style.\n-var Fallback = SwapOff\n+var Fallback = Registry[\"swapoff\"]\n \n // Register a chroma.Style.\n func Register(style *chroma.Style) *chroma.Style {"
    },
    {
      "sha": "3099b7e893b8cb513343f6f2e7e7815ddf08cfb4",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/arduino.go",
      "status": "removed",
      "additions": 0,
      "deletions": 25,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Farduino.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Farduino.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Farduino.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,25 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Arduino style.\n-var Arduino = Register(chroma.MustNewStyle(\"arduino\", chroma.StyleEntries{\n-\tchroma.Error:           \"#a61717\",\n-\tchroma.Comment:         \"#95a5a6\",\n-\tchroma.CommentPreproc:  \"#728E00\",\n-\tchroma.Keyword:         \"#728E00\",\n-\tchroma.KeywordConstant: \"#00979D\",\n-\tchroma.KeywordPseudo:   \"#00979D\",\n-\tchroma.KeywordReserved: \"#00979D\",\n-\tchroma.KeywordType:     \"#00979D\",\n-\tchroma.Operator:        \"#728E00\",\n-\tchroma.Name:            \"#434f54\",\n-\tchroma.NameBuiltin:     \"#728E00\",\n-\tchroma.NameFunction:    \"#D35400\",\n-\tchroma.NameOther:       \"#728E00\",\n-\tchroma.LiteralNumber:   \"#8A7B52\",\n-\tchroma.LiteralString:   \"#7F8C8D\",\n-\tchroma.Background:      \" bg:#ffffff\",\n-}))"
    },
    {
      "sha": "d9891dc53819096b748d310b7be2404edb2ce74e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/arduino.xml",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Farduino.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Farduino.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Farduino.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,18 @@\n+<style name=\"arduino\">\n+  <entry type=\"Error\" style=\"#a61717\"/>\n+  <entry type=\"Background\" style=\"bg:#ffffff\"/>\n+  <entry type=\"Keyword\" style=\"#728e00\"/>\n+  <entry type=\"KeywordConstant\" style=\"#00979d\"/>\n+  <entry type=\"KeywordPseudo\" style=\"#00979d\"/>\n+  <entry type=\"KeywordReserved\" style=\"#00979d\"/>\n+  <entry type=\"KeywordType\" style=\"#00979d\"/>\n+  <entry type=\"Name\" style=\"#434f54\"/>\n+  <entry type=\"NameBuiltin\" style=\"#728e00\"/>\n+  <entry type=\"NameFunction\" style=\"#d35400\"/>\n+  <entry type=\"NameOther\" style=\"#728e00\"/>\n+  <entry type=\"LiteralString\" style=\"#7f8c8d\"/>\n+  <entry type=\"LiteralNumber\" style=\"#8a7b52\"/>\n+  <entry type=\"Operator\" style=\"#728e00\"/>\n+  <entry type=\"Comment\" style=\"#95a5a6\"/>\n+  <entry type=\"CommentPreproc\" style=\"#728e00\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "df225005ce8cb2b42bdafcd5a15d6098b20431bf",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/autumn.go",
      "status": "removed",
      "additions": 0,
      "deletions": 43,
      "changes": 43,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fautumn.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fautumn.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fautumn.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,43 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Autumn style.\n-var Autumn = Register(chroma.MustNewStyle(\"autumn\", chroma.StyleEntries{\n-\tchroma.TextWhitespace:      \"#bbbbbb\",\n-\tchroma.Comment:             \"italic #aaaaaa\",\n-\tchroma.CommentPreproc:      \"noitalic #4c8317\",\n-\tchroma.CommentSpecial:      \"italic #0000aa\",\n-\tchroma.Keyword:             \"#0000aa\",\n-\tchroma.KeywordType:         \"#00aaaa\",\n-\tchroma.OperatorWord:        \"#0000aa\",\n-\tchroma.NameBuiltin:         \"#00aaaa\",\n-\tchroma.NameFunction:        \"#00aa00\",\n-\tchroma.NameClass:           \"underline #00aa00\",\n-\tchroma.NameNamespace:       \"underline #00aaaa\",\n-\tchroma.NameVariable:        \"#aa0000\",\n-\tchroma.NameConstant:        \"#aa0000\",\n-\tchroma.NameEntity:          \"bold #800\",\n-\tchroma.NameAttribute:       \"#1e90ff\",\n-\tchroma.NameTag:             \"bold #1e90ff\",\n-\tchroma.NameDecorator:       \"#888888\",\n-\tchroma.LiteralString:       \"#aa5500\",\n-\tchroma.LiteralStringSymbol: \"#0000aa\",\n-\tchroma.LiteralStringRegex:  \"#009999\",\n-\tchroma.LiteralNumber:       \"#009999\",\n-\tchroma.GenericHeading:      \"bold #000080\",\n-\tchroma.GenericSubheading:   \"bold #800080\",\n-\tchroma.GenericDeleted:      \"#aa0000\",\n-\tchroma.GenericInserted:     \"#00aa00\",\n-\tchroma.GenericError:        \"#aa0000\",\n-\tchroma.GenericEmph:         \"italic\",\n-\tchroma.GenericStrong:       \"bold\",\n-\tchroma.GenericPrompt:       \"#555555\",\n-\tchroma.GenericOutput:       \"#888888\",\n-\tchroma.GenericTraceback:    \"#aa0000\",\n-\tchroma.GenericUnderline:    \"underline\",\n-\tchroma.Error:               \"#F00 bg:#FAA\",\n-\tchroma.Background:          \" bg:#ffffff\",\n-}))"
    },
    {
      "sha": "74d2eae988272357ed58bcf643f61a00b7a68ee0",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/autumn.xml",
      "status": "added",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fautumn.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fautumn.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fautumn.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,36 @@\n+<style name=\"autumn\">\n+  <entry type=\"Error\" style=\"#ff0000 bg:#ffaaaa\"/>\n+  <entry type=\"Background\" style=\"bg:#ffffff\"/>\n+  <entry type=\"Keyword\" style=\"#0000aa\"/>\n+  <entry type=\"KeywordType\" style=\"#00aaaa\"/>\n+  <entry type=\"NameAttribute\" style=\"#1e90ff\"/>\n+  <entry type=\"NameBuiltin\" style=\"#00aaaa\"/>\n+  <entry type=\"NameClass\" style=\"underline #00aa00\"/>\n+  <entry type=\"NameConstant\" style=\"#aa0000\"/>\n+  <entry type=\"NameDecorator\" style=\"#888888\"/>\n+  <entry type=\"NameEntity\" style=\"bold #880000\"/>\n+  <entry type=\"NameFunction\" style=\"#00aa00\"/>\n+  <entry type=\"NameNamespace\" style=\"underline #00aaaa\"/>\n+  <entry type=\"NameTag\" style=\"bold #1e90ff\"/>\n+  <entry type=\"NameVariable\" style=\"#aa0000\"/>\n+  <entry type=\"LiteralString\" style=\"#aa5500\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#009999\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#0000aa\"/>\n+  <entry type=\"LiteralNumber\" style=\"#009999\"/>\n+  <entry type=\"OperatorWord\" style=\"#0000aa\"/>\n+  <entry type=\"Comment\" style=\"italic #aaaaaa\"/>\n+  <entry type=\"CommentSpecial\" style=\"italic #0000aa\"/>\n+  <entry type=\"CommentPreproc\" style=\"noitalic #4c8317\"/>\n+  <entry type=\"GenericDeleted\" style=\"#aa0000\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#aa0000\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #000080\"/>\n+  <entry type=\"GenericInserted\" style=\"#00aa00\"/>\n+  <entry type=\"GenericOutput\" style=\"#888888\"/>\n+  <entry type=\"GenericPrompt\" style=\"#555555\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #800080\"/>\n+  <entry type=\"GenericTraceback\" style=\"#aa0000\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"TextWhitespace\" style=\"#bbbbbb\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "b1276e2ac27d81c21babc1a7022c2b84c92b0165",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/average.go",
      "status": "removed",
      "additions": 0,
      "deletions": 81,
      "changes": 81,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Faverage.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Faverage.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Faverage.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,81 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Average style.\n-var Average = Register(chroma.MustNewStyle(\"average\", chroma.StyleEntries{\n-\tchroma.Comment:                  \"#757575\",\n-\tchroma.CommentHashbang:          \"#757575\",\n-\tchroma.CommentMultiline:         \"#757575\",\n-\tchroma.CommentPreproc:           \"#757575\",\n-\tchroma.CommentSingle:            \"#757575\",\n-\tchroma.CommentSpecial:           \"#757575\",\n-\tchroma.Generic:                  \"#757575\",\n-\tchroma.GenericDeleted:           \"#ec0000\",\n-\tchroma.GenericEmph:              \"#757575 underline\",\n-\tchroma.GenericError:             \"#ec0000\",\n-\tchroma.GenericHeading:           \"#757575 bold\",\n-\tchroma.GenericInserted:          \"#757575 bold\",\n-\tchroma.GenericOutput:            \"#757575\",\n-\tchroma.GenericPrompt:            \"#757575\",\n-\tchroma.GenericStrong:            \"#757575 italic\",\n-\tchroma.GenericSubheading:        \"#757575 bold\",\n-\tchroma.GenericTraceback:         \"#757575\",\n-\tchroma.GenericUnderline:         \"underline\",\n-\tchroma.Error:                    \"#ec0000\",\n-\tchroma.Keyword:                  \"#ec0000\",\n-\tchroma.KeywordConstant:          \"#ec0000\",\n-\tchroma.KeywordDeclaration:       \"#ec0000\",\n-\tchroma.KeywordNamespace:         \"#ec0000\",\n-\tchroma.KeywordPseudo:            \"#ec0000\",\n-\tchroma.KeywordReserved:          \"#ec0000\",\n-\tchroma.KeywordType:              \"#5f5fff\",\n-\tchroma.Literal:                  \"#757575\",\n-\tchroma.LiteralDate:              \"#757575\",\n-\tchroma.Name:                     \"#757575\",\n-\tchroma.NameAttribute:            \"#5f5fff\",\n-\tchroma.NameBuiltin:              \"#ec0000\",\n-\tchroma.NameBuiltinPseudo:        \"#757575\",\n-\tchroma.NameClass:                \"#5f5fff\",\n-\tchroma.NameConstant:             \"#008900\",\n-\tchroma.NameDecorator:            \"#008900\",\n-\tchroma.NameEntity:               \"#757575\",\n-\tchroma.NameException:            \"#757575\",\n-\tchroma.NameFunction:             \"#5f5fff\",\n-\tchroma.NameLabel:                \"#ec0000\",\n-\tchroma.NameNamespace:            \"#757575\",\n-\tchroma.NameOther:                \"#757575\",\n-\tchroma.NameTag:                  \"#ec0000\",\n-\tchroma.NameVariable:             \"#ec0000\",\n-\tchroma.NameVariableClass:        \"#ec0000\",\n-\tchroma.NameVariableGlobal:       \"#ec0000\",\n-\tchroma.NameVariableInstance:     \"#ec0000\",\n-\tchroma.LiteralNumber:            \"#008900\",\n-\tchroma.LiteralNumberBin:         \"#008900\",\n-\tchroma.LiteralNumberFloat:       \"#008900\",\n-\tchroma.LiteralNumberHex:         \"#008900\",\n-\tchroma.LiteralNumberInteger:     \"#008900\",\n-\tchroma.LiteralNumberIntegerLong: \"#008900\",\n-\tchroma.LiteralNumberOct:         \"#008900\",\n-\tchroma.Operator:                 \"#ec0000\",\n-\tchroma.OperatorWord:             \"#ec0000\",\n-\tchroma.Other:                    \"#757575\",\n-\tchroma.Punctuation:              \"#757575\",\n-\tchroma.LiteralString:            \"#008900\",\n-\tchroma.LiteralStringBacktick:    \"#008900\",\n-\tchroma.LiteralStringChar:        \"#008900\",\n-\tchroma.LiteralStringDoc:         \"#008900\",\n-\tchroma.LiteralStringDouble:      \"#008900\",\n-\tchroma.LiteralStringEscape:      \"#008900\",\n-\tchroma.LiteralStringHeredoc:     \"#008900\",\n-\tchroma.LiteralStringInterpol:    \"#008900\",\n-\tchroma.LiteralStringOther:       \"#008900\",\n-\tchroma.LiteralStringRegex:       \"#008900\",\n-\tchroma.LiteralStringSingle:      \"#008900\",\n-\tchroma.LiteralStringSymbol:      \"#008900\",\n-\tchroma.Text:                     \"#757575\",\n-\tchroma.TextWhitespace:           \"#757575\",\n-\tchroma.Background:               \" bg:#000000\",\n-}))"
    },
    {
      "sha": "79bdb95f340a7242f5c8b3c04aa9baee34f646c2",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/average.xml",
      "status": "added",
      "additions": 74,
      "deletions": 0,
      "changes": 74,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Faverage.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Faverage.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Faverage.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,74 @@\n+<style name=\"average\">\n+  <entry type=\"Other\" style=\"#757575\"/>\n+  <entry type=\"Error\" style=\"#ec0000\"/>\n+  <entry type=\"Background\" style=\"bg:#000000\"/>\n+  <entry type=\"Keyword\" style=\"#ec0000\"/>\n+  <entry type=\"KeywordConstant\" style=\"#ec0000\"/>\n+  <entry type=\"KeywordDeclaration\" style=\"#ec0000\"/>\n+  <entry type=\"KeywordNamespace\" style=\"#ec0000\"/>\n+  <entry type=\"KeywordPseudo\" style=\"#ec0000\"/>\n+  <entry type=\"KeywordReserved\" style=\"#ec0000\"/>\n+  <entry type=\"KeywordType\" style=\"#5f5fff\"/>\n+  <entry type=\"Name\" style=\"#757575\"/>\n+  <entry type=\"NameAttribute\" style=\"#5f5fff\"/>\n+  <entry type=\"NameBuiltin\" style=\"#ec0000\"/>\n+  <entry type=\"NameBuiltinPseudo\" style=\"#757575\"/>\n+  <entry type=\"NameClass\" style=\"#5f5fff\"/>\n+  <entry type=\"NameConstant\" style=\"#008900\"/>\n+  <entry type=\"NameDecorator\" style=\"#008900\"/>\n+  <entry type=\"NameEntity\" style=\"#757575\"/>\n+  <entry type=\"NameException\" style=\"#757575\"/>\n+  <entry type=\"NameFunction\" style=\"#5f5fff\"/>\n+  <entry type=\"NameLabel\" style=\"#ec0000\"/>\n+  <entry type=\"NameNamespace\" style=\"#757575\"/>\n+  <entry type=\"NameOther\" style=\"#757575\"/>\n+  <entry type=\"NameTag\" style=\"#ec0000\"/>\n+  <entry type=\"NameVariable\" style=\"#ec0000\"/>\n+  <entry type=\"NameVariableClass\" style=\"#ec0000\"/>\n+  <entry type=\"NameVariableGlobal\" style=\"#ec0000\"/>\n+  <entry type=\"NameVariableInstance\" style=\"#ec0000\"/>\n+  <entry type=\"Literal\" style=\"#757575\"/>\n+  <entry type=\"LiteralDate\" style=\"#757575\"/>\n+  <entry type=\"LiteralString\" style=\"#008900\"/>\n+  <entry type=\"LiteralStringBacktick\" style=\"#008900\"/>\n+  <entry type=\"LiteralStringChar\" style=\"#008900\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#008900\"/>\n+  <entry type=\"LiteralStringDouble\" style=\"#008900\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#008900\"/>\n+  <entry type=\"LiteralStringHeredoc\" style=\"#008900\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#008900\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#008900\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#008900\"/>\n+  <entry type=\"LiteralStringSingle\" style=\"#008900\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#008900\"/>\n+  <entry type=\"LiteralNumber\" style=\"#008900\"/>\n+  <entry type=\"LiteralNumberBin\" style=\"#008900\"/>\n+  <entry type=\"LiteralNumberFloat\" style=\"#008900\"/>\n+  <entry type=\"LiteralNumberHex\" style=\"#008900\"/>\n+  <entry type=\"LiteralNumberInteger\" style=\"#008900\"/>\n+  <entry type=\"LiteralNumberIntegerLong\" style=\"#008900\"/>\n+  <entry type=\"LiteralNumberOct\" style=\"#008900\"/>\n+  <entry type=\"Operator\" style=\"#ec0000\"/>\n+  <entry type=\"OperatorWord\" style=\"#ec0000\"/>\n+  <entry type=\"Punctuation\" style=\"#757575\"/>\n+  <entry type=\"Comment\" style=\"#757575\"/>\n+  <entry type=\"CommentHashbang\" style=\"#757575\"/>\n+  <entry type=\"CommentMultiline\" style=\"#757575\"/>\n+  <entry type=\"CommentSingle\" style=\"#757575\"/>\n+  <entry type=\"CommentSpecial\" style=\"#757575\"/>\n+  <entry type=\"CommentPreproc\" style=\"#757575\"/>\n+  <entry type=\"Generic\" style=\"#757575\"/>\n+  <entry type=\"GenericDeleted\" style=\"#ec0000\"/>\n+  <entry type=\"GenericEmph\" style=\"underline #757575\"/>\n+  <entry type=\"GenericError\" style=\"#ec0000\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #757575\"/>\n+  <entry type=\"GenericInserted\" style=\"bold #757575\"/>\n+  <entry type=\"GenericOutput\" style=\"#757575\"/>\n+  <entry type=\"GenericPrompt\" style=\"#757575\"/>\n+  <entry type=\"GenericStrong\" style=\"italic #757575\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #757575\"/>\n+  <entry type=\"GenericTraceback\" style=\"#757575\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"Text\" style=\"#757575\"/>\n+  <entry type=\"TextWhitespace\" style=\"#757575\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "731dba8d485bf3bcfbcee9852fe2bf20b90ab973",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/base16-snazzy.go",
      "status": "removed",
      "additions": 0,
      "deletions": 81,
      "changes": 81,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fbase16-snazzy.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fbase16-snazzy.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fbase16-snazzy.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,81 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Base16Snazzy style\n-var Base16Snazzy = Register(chroma.MustNewStyle(\"base16-snazzy\", chroma.StyleEntries{\n-\tchroma.Comment:                  \"#78787e\",\n-\tchroma.CommentHashbang:          \"#78787e\",\n-\tchroma.CommentMultiline:         \"#78787e\",\n-\tchroma.CommentPreproc:           \"#78787e\",\n-\tchroma.CommentSingle:            \"#78787e\",\n-\tchroma.CommentSpecial:           \"#78787e\",\n-\tchroma.Generic:                  \"#e2e4e5\",\n-\tchroma.GenericDeleted:           \"#ff5c57\",\n-\tchroma.GenericEmph:              \"#e2e4e5 underline\",\n-\tchroma.GenericError:             \"#ff5c57\",\n-\tchroma.GenericHeading:           \"#e2e4e5 bold\",\n-\tchroma.GenericInserted:          \"#e2e4e5 bold\",\n-\tchroma.GenericOutput:            \"#43454f\",\n-\tchroma.GenericPrompt:            \"#e2e4e5\",\n-\tchroma.GenericStrong:            \"#e2e4e5 italic\",\n-\tchroma.GenericSubheading:        \"#e2e4e5 bold\",\n-\tchroma.GenericTraceback:         \"#e2e4e5\",\n-\tchroma.GenericUnderline:         \"underline\",\n-\tchroma.Error:                    \"#ff5c57\",\n-\tchroma.Keyword:                  \"#ff6ac1\",\n-\tchroma.KeywordConstant:          \"#ff6ac1\",\n-\tchroma.KeywordDeclaration:       \"#ff5c57\",\n-\tchroma.KeywordNamespace:         \"#ff6ac1\",\n-\tchroma.KeywordPseudo:            \"#ff6ac1\",\n-\tchroma.KeywordReserved:          \"#ff6ac1\",\n-\tchroma.KeywordType:              \"#9aedfe\",\n-\tchroma.Literal:                  \"#e2e4e5\",\n-\tchroma.LiteralDate:              \"#e2e4e5\",\n-\tchroma.Name:                     \"#e2e4e5\",\n-\tchroma.NameAttribute:            \"#57c7ff\",\n-\tchroma.NameBuiltin:              \"#ff5c57\",\n-\tchroma.NameBuiltinPseudo:        \"#e2e4e5\",\n-\tchroma.NameClass:                \"#f3f99d\",\n-\tchroma.NameConstant:             \"#ff9f43\",\n-\tchroma.NameDecorator:            \"#ff9f43\",\n-\tchroma.NameEntity:               \"#e2e4e5\",\n-\tchroma.NameException:            \"#e2e4e5\",\n-\tchroma.NameFunction:             \"#57c7ff\",\n-\tchroma.NameLabel:                \"#ff5c57\",\n-\tchroma.NameNamespace:            \"#e2e4e5\",\n-\tchroma.NameOther:                \"#e2e4e5\",\n-\tchroma.NameTag:                  \"#ff6ac1\",\n-\tchroma.NameVariable:             \"#ff5c57\",\n-\tchroma.NameVariableClass:        \"#ff5c57\",\n-\tchroma.NameVariableGlobal:       \"#ff5c57\",\n-\tchroma.NameVariableInstance:     \"#ff5c57\",\n-\tchroma.LiteralNumber:            \"#ff9f43\",\n-\tchroma.LiteralNumberBin:         \"#ff9f43\",\n-\tchroma.LiteralNumberFloat:       \"#ff9f43\",\n-\tchroma.LiteralNumberHex:         \"#ff9f43\",\n-\tchroma.LiteralNumberInteger:     \"#ff9f43\",\n-\tchroma.LiteralNumberIntegerLong: \"#ff9f43\",\n-\tchroma.LiteralNumberOct:         \"#ff9f43\",\n-\tchroma.Operator:                 \"#ff6ac1\",\n-\tchroma.OperatorWord:             \"#ff6ac1\",\n-\tchroma.Other:                    \"#e2e4e5\",\n-\tchroma.Punctuation:              \"#e2e4e5\",\n-\tchroma.LiteralString:            \"#5af78e\",\n-\tchroma.LiteralStringBacktick:    \"#5af78e\",\n-\tchroma.LiteralStringChar:        \"#5af78e\",\n-\tchroma.LiteralStringDoc:         \"#5af78e\",\n-\tchroma.LiteralStringDouble:      \"#5af78e\",\n-\tchroma.LiteralStringEscape:      \"#5af78e\",\n-\tchroma.LiteralStringHeredoc:     \"#5af78e\",\n-\tchroma.LiteralStringInterpol:    \"#5af78e\",\n-\tchroma.LiteralStringOther:       \"#5af78e\",\n-\tchroma.LiteralStringRegex:       \"#5af78e\",\n-\tchroma.LiteralStringSingle:      \"#5af78e\",\n-\tchroma.LiteralStringSymbol:      \"#5af78e\",\n-\tchroma.Text:                     \"#e2e4e5\",\n-\tchroma.TextWhitespace:           \"#e2e4e5\",\n-\tchroma.Background:               \" bg:#282a36\",\n-}))"
    },
    {
      "sha": "a05ba24e5299d4019bb4bd54c91bd2da87779569",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/base16-snazzy.xml",
      "status": "added",
      "additions": 74,
      "deletions": 0,
      "changes": 74,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fbase16-snazzy.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fbase16-snazzy.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fbase16-snazzy.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,74 @@\n+<style name=\"base16-snazzy\">\n+  <entry type=\"Other\" style=\"#e2e4e5\"/>\n+  <entry type=\"Error\" style=\"#ff5c57\"/>\n+  <entry type=\"Background\" style=\"bg:#282a36\"/>\n+  <entry type=\"Keyword\" style=\"#ff6ac1\"/>\n+  <entry type=\"KeywordConstant\" style=\"#ff6ac1\"/>\n+  <entry type=\"KeywordDeclaration\" style=\"#ff5c57\"/>\n+  <entry type=\"KeywordNamespace\" style=\"#ff6ac1\"/>\n+  <entry type=\"KeywordPseudo\" style=\"#ff6ac1\"/>\n+  <entry type=\"KeywordReserved\" style=\"#ff6ac1\"/>\n+  <entry type=\"KeywordType\" style=\"#9aedfe\"/>\n+  <entry type=\"Name\" style=\"#e2e4e5\"/>\n+  <entry type=\"NameAttribute\" style=\"#57c7ff\"/>\n+  <entry type=\"NameBuiltin\" style=\"#ff5c57\"/>\n+  <entry type=\"NameBuiltinPseudo\" style=\"#e2e4e5\"/>\n+  <entry type=\"NameClass\" style=\"#f3f99d\"/>\n+  <entry type=\"NameConstant\" style=\"#ff9f43\"/>\n+  <entry type=\"NameDecorator\" style=\"#ff9f43\"/>\n+  <entry type=\"NameEntity\" style=\"#e2e4e5\"/>\n+  <entry type=\"NameException\" style=\"#e2e4e5\"/>\n+  <entry type=\"NameFunction\" style=\"#57c7ff\"/>\n+  <entry type=\"NameLabel\" style=\"#ff5c57\"/>\n+  <entry type=\"NameNamespace\" style=\"#e2e4e5\"/>\n+  <entry type=\"NameOther\" style=\"#e2e4e5\"/>\n+  <entry type=\"NameTag\" style=\"#ff6ac1\"/>\n+  <entry type=\"NameVariable\" style=\"#ff5c57\"/>\n+  <entry type=\"NameVariableClass\" style=\"#ff5c57\"/>\n+  <entry type=\"NameVariableGlobal\" style=\"#ff5c57\"/>\n+  <entry type=\"NameVariableInstance\" style=\"#ff5c57\"/>\n+  <entry type=\"Literal\" style=\"#e2e4e5\"/>\n+  <entry type=\"LiteralDate\" style=\"#e2e4e5\"/>\n+  <entry type=\"LiteralString\" style=\"#5af78e\"/>\n+  <entry type=\"LiteralStringBacktick\" style=\"#5af78e\"/>\n+  <entry type=\"LiteralStringChar\" style=\"#5af78e\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#5af78e\"/>\n+  <entry type=\"LiteralStringDouble\" style=\"#5af78e\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#5af78e\"/>\n+  <entry type=\"LiteralStringHeredoc\" style=\"#5af78e\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#5af78e\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#5af78e\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#5af78e\"/>\n+  <entry type=\"LiteralStringSingle\" style=\"#5af78e\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#5af78e\"/>\n+  <entry type=\"LiteralNumber\" style=\"#ff9f43\"/>\n+  <entry type=\"LiteralNumberBin\" style=\"#ff9f43\"/>\n+  <entry type=\"LiteralNumberFloat\" style=\"#ff9f43\"/>\n+  <entry type=\"LiteralNumberHex\" style=\"#ff9f43\"/>\n+  <entry type=\"LiteralNumberInteger\" style=\"#ff9f43\"/>\n+  <entry type=\"LiteralNumberIntegerLong\" style=\"#ff9f43\"/>\n+  <entry type=\"LiteralNumberOct\" style=\"#ff9f43\"/>\n+  <entry type=\"Operator\" style=\"#ff6ac1\"/>\n+  <entry type=\"OperatorWord\" style=\"#ff6ac1\"/>\n+  <entry type=\"Punctuation\" style=\"#e2e4e5\"/>\n+  <entry type=\"Comment\" style=\"#78787e\"/>\n+  <entry type=\"CommentHashbang\" style=\"#78787e\"/>\n+  <entry type=\"CommentMultiline\" style=\"#78787e\"/>\n+  <entry type=\"CommentSingle\" style=\"#78787e\"/>\n+  <entry type=\"CommentSpecial\" style=\"#78787e\"/>\n+  <entry type=\"CommentPreproc\" style=\"#78787e\"/>\n+  <entry type=\"Generic\" style=\"#e2e4e5\"/>\n+  <entry type=\"GenericDeleted\" style=\"#ff5c57\"/>\n+  <entry type=\"GenericEmph\" style=\"underline #e2e4e5\"/>\n+  <entry type=\"GenericError\" style=\"#ff5c57\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #e2e4e5\"/>\n+  <entry type=\"GenericInserted\" style=\"bold #e2e4e5\"/>\n+  <entry type=\"GenericOutput\" style=\"#43454f\"/>\n+  <entry type=\"GenericPrompt\" style=\"#e2e4e5\"/>\n+  <entry type=\"GenericStrong\" style=\"italic #e2e4e5\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #e2e4e5\"/>\n+  <entry type=\"GenericTraceback\" style=\"#e2e4e5\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"Text\" style=\"#e2e4e5\"/>\n+  <entry type=\"TextWhitespace\" style=\"#e2e4e5\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "4d192b18887faf7edad92b747c98ce2f397df7c0",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/borland.go",
      "status": "removed",
      "additions": 0,
      "deletions": 33,
      "changes": 33,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fborland.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fborland.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fborland.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,33 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Borland style.\n-var Borland = Register(chroma.MustNewStyle(\"borland\", chroma.StyleEntries{\n-\tchroma.TextWhitespace:    \"#bbbbbb\",\n-\tchroma.Comment:           \"italic #008800\",\n-\tchroma.CommentPreproc:    \"noitalic #008080\",\n-\tchroma.CommentSpecial:    \"noitalic bold\",\n-\tchroma.LiteralString:     \"#0000FF\",\n-\tchroma.LiteralStringChar: \"#800080\",\n-\tchroma.LiteralNumber:     \"#0000FF\",\n-\tchroma.Keyword:           \"bold #000080\",\n-\tchroma.OperatorWord:      \"bold\",\n-\tchroma.NameTag:           \"bold #000080\",\n-\tchroma.NameAttribute:     \"#FF0000\",\n-\tchroma.GenericHeading:    \"#999999\",\n-\tchroma.GenericSubheading: \"#aaaaaa\",\n-\tchroma.GenericDeleted:    \"bg:#ffdddd #000000\",\n-\tchroma.GenericInserted:   \"bg:#ddffdd #000000\",\n-\tchroma.GenericError:      \"#aa0000\",\n-\tchroma.GenericEmph:       \"italic\",\n-\tchroma.GenericStrong:     \"bold\",\n-\tchroma.GenericPrompt:     \"#555555\",\n-\tchroma.GenericOutput:     \"#888888\",\n-\tchroma.GenericTraceback:  \"#aa0000\",\n-\tchroma.GenericUnderline:  \"underline\",\n-\tchroma.Error:             \"bg:#e3d2d2 #a61717\",\n-\tchroma.Background:        \" bg:#ffffff\",\n-}))"
    },
    {
      "sha": "0d8f574c646bc092f2e46a86e6779fdfcf8e4bd2",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/borland.xml",
      "status": "added",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fborland.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fborland.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fborland.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,26 @@\n+<style name=\"borland\">\n+  <entry type=\"Error\" style=\"#a61717 bg:#e3d2d2\"/>\n+  <entry type=\"Background\" style=\"bg:#ffffff\"/>\n+  <entry type=\"Keyword\" style=\"bold #000080\"/>\n+  <entry type=\"NameAttribute\" style=\"#ff0000\"/>\n+  <entry type=\"NameTag\" style=\"bold #000080\"/>\n+  <entry type=\"LiteralString\" style=\"#0000ff\"/>\n+  <entry type=\"LiteralStringChar\" style=\"#800080\"/>\n+  <entry type=\"LiteralNumber\" style=\"#0000ff\"/>\n+  <entry type=\"OperatorWord\" style=\"bold\"/>\n+  <entry type=\"Comment\" style=\"italic #008800\"/>\n+  <entry type=\"CommentSpecial\" style=\"bold noitalic\"/>\n+  <entry type=\"CommentPreproc\" style=\"noitalic #008080\"/>\n+  <entry type=\"GenericDeleted\" style=\"#000000 bg:#ffdddd\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#aa0000\"/>\n+  <entry type=\"GenericHeading\" style=\"#999999\"/>\n+  <entry type=\"GenericInserted\" style=\"#000000 bg:#ddffdd\"/>\n+  <entry type=\"GenericOutput\" style=\"#888888\"/>\n+  <entry type=\"GenericPrompt\" style=\"#555555\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"#aaaaaa\"/>\n+  <entry type=\"GenericTraceback\" style=\"#aa0000\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"TextWhitespace\" style=\"#bbbbbb\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "2f41f208b5aa02617b09f95c8edb5a0a6e32e7cb",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/bw.go",
      "status": "removed",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fbw.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fbw.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fbw.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,30 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// BlackWhite style.\n-var BlackWhite = Register(chroma.MustNewStyle(\"bw\", chroma.StyleEntries{\n-\tchroma.Comment:               \"italic\",\n-\tchroma.CommentPreproc:        \"noitalic\",\n-\tchroma.Keyword:               \"bold\",\n-\tchroma.KeywordPseudo:         \"nobold\",\n-\tchroma.KeywordType:           \"nobold\",\n-\tchroma.OperatorWord:          \"bold\",\n-\tchroma.NameClass:             \"bold\",\n-\tchroma.NameNamespace:         \"bold\",\n-\tchroma.NameException:         \"bold\",\n-\tchroma.NameEntity:            \"bold\",\n-\tchroma.NameTag:               \"bold\",\n-\tchroma.LiteralString:         \"italic\",\n-\tchroma.LiteralStringInterpol: \"bold\",\n-\tchroma.LiteralStringEscape:   \"bold\",\n-\tchroma.GenericHeading:        \"bold\",\n-\tchroma.GenericSubheading:     \"bold\",\n-\tchroma.GenericEmph:           \"italic\",\n-\tchroma.GenericStrong:         \"bold\",\n-\tchroma.GenericPrompt:         \"bold\",\n-\tchroma.Error:                 \"border:#FF0000\",\n-\tchroma.Background:            \" bg:#ffffff\",\n-}))"
    },
    {
      "sha": "fb0e868d15978fcc7b299bf9aa0dbe1904da43c2",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/bw.xml",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fbw.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fbw.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fbw.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,23 @@\n+<style name=\"bw\">\n+  <entry type=\"Error\" style=\"border:#ff0000\"/>\n+  <entry type=\"Background\" style=\"bg:#ffffff\"/>\n+  <entry type=\"Keyword\" style=\"bold\"/>\n+  <entry type=\"KeywordPseudo\" style=\"nobold\"/>\n+  <entry type=\"KeywordType\" style=\"nobold\"/>\n+  <entry type=\"NameClass\" style=\"bold\"/>\n+  <entry type=\"NameEntity\" style=\"bold\"/>\n+  <entry type=\"NameException\" style=\"bold\"/>\n+  <entry type=\"NameNamespace\" style=\"bold\"/>\n+  <entry type=\"NameTag\" style=\"bold\"/>\n+  <entry type=\"LiteralString\" style=\"italic\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"bold\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"bold\"/>\n+  <entry type=\"OperatorWord\" style=\"bold\"/>\n+  <entry type=\"Comment\" style=\"italic\"/>\n+  <entry type=\"CommentPreproc\" style=\"noitalic\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericHeading\" style=\"bold\"/>\n+  <entry type=\"GenericPrompt\" style=\"bold\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "b739c1401056e6a9dbb965fc000227dd67130bfb",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/catppuccin-frappe.xml",
      "status": "added",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-frappe.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-frappe.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-frappe.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,46 @@\n+<style name=\"catppuccin-frappe\">\n+  <entry type=\"Error\" style=\"#e78284\"/>\n+  <entry type=\"Background\" style=\"#ef9f76 bg:#303446\"/>\n+  <entry type=\"Keyword\" style=\"#ca9ee6\"/>\n+  <entry type=\"KeywordConstant\" style=\"italic #ca9ee6\"/>\n+  <entry type=\"KeywordPseudo\" style=\"bold #ca9ee6\"/>\n+  <entry type=\"KeywordType\" style=\"#e5c890\"/>\n+  <entry type=\"Name\" style=\"#babbf1\"/>\n+  <entry type=\"NameAttribute\" style=\"#e5c890\"/>\n+  <entry type=\"NameBuiltin\" style=\"italic #c6d0f5\"/>\n+  <entry type=\"NameClass\" style=\"#e5c890\"/>\n+  <entry type=\"NameConstant\" style=\"#e5c890\"/>\n+  <entry type=\"NameDecorator\" style=\"#f4b8e4\"/>\n+  <entry type=\"NameEntity\" style=\"#f4b8e4\"/>\n+  <entry type=\"NameException\" style=\"#ea999c\"/>\n+  <entry type=\"NameFunction\" style=\"#99d1db\"/>\n+  <entry type=\"NameLabel\" style=\"#e5c890\"/>\n+  <entry type=\"NameNamespace\" style=\"#e5c890\"/>\n+  <entry type=\"NameOther\" style=\"#ef9f76\"/>\n+  <entry type=\"NameTag\" style=\"#ca9ee6\"/>\n+  <entry type=\"NameVariable\" style=\"#ef9f76\"/>\n+  <entry type=\"LiteralString\" style=\"#a6d189\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#a6d189\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#8caaee\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#a6d189\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#a6d189\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#8caaee\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#a6d189\"/>\n+  <entry type=\"LiteralNumber\" style=\"#ef9f76\"/>\n+  <entry type=\"Operator\" style=\"#99d1db\"/>\n+  <entry type=\"OperatorWord\" style=\"bold #99d1db\"/>\n+  <entry type=\"Punctuation\" style=\"#c6d0f5\"/>\n+  <entry type=\"Comment\" style=\"italic #626880\"/>\n+  <entry type=\"CommentPreproc\" style=\"#8caaee\"/>\n+  <entry type=\"GenericDeleted\" style=\"#ea999c\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#ea999c\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #99d1db\"/>\n+  <entry type=\"GenericInserted\" style=\"#a6d189\"/>\n+  <entry type=\"GenericOutput\" style=\"#ef9f76\"/>\n+  <entry type=\"GenericPrompt\" style=\"bold #737994\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #99d1db\"/>\n+  <entry type=\"GenericTraceback\" style=\"#ea999c\"/>\n+  <entry type=\"TextWhitespace\" style=\"#414559\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "7c6bddd067bc5087e44a3aaf473f202bc95fa2b7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/catppuccin-latte.xml",
      "status": "added",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-latte.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-latte.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-latte.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,46 @@\n+<style name=\"catppuccin-latte\">\n+  <entry type=\"Error\" style=\"#d20f39\"/>\n+  <entry type=\"Background\" style=\"#fe640b bg:#eff1f5\"/>\n+  <entry type=\"Keyword\" style=\"#8839ef\"/>\n+  <entry type=\"KeywordConstant\" style=\"italic #8839ef\"/>\n+  <entry type=\"KeywordPseudo\" style=\"bold #8839ef\"/>\n+  <entry type=\"KeywordType\" style=\"#df8e1d\"/>\n+  <entry type=\"Name\" style=\"#7287fd\"/>\n+  <entry type=\"NameAttribute\" style=\"#df8e1d\"/>\n+  <entry type=\"NameBuiltin\" style=\"italic #fe640b\"/>\n+  <entry type=\"NameClass\" style=\"#df8e1d\"/>\n+  <entry type=\"NameConstant\" style=\"#df8e1d\"/>\n+  <entry type=\"NameDecorator\" style=\"#ea76cb\"/>\n+  <entry type=\"NameEntity\" style=\"#ea76cb\"/>\n+  <entry type=\"NameException\" style=\"#e64553\"/>\n+  <entry type=\"NameFunction\" style=\"#04a5e5\"/>\n+  <entry type=\"NameLabel\" style=\"#df8e1d\"/>\n+  <entry type=\"NameNamespace\" style=\"#df8e1d\"/>\n+  <entry type=\"NameOther\" style=\"#fe640b\"/>\n+  <entry type=\"NameTag\" style=\"#8839ef\"/>\n+  <entry type=\"NameVariable\" style=\"#fe640b\"/>\n+  <entry type=\"LiteralString\" style=\"#40a02b\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#40a02b\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#1e66f5\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#40a02b\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#40a02b\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#1e66f5\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#40a02b\"/>\n+  <entry type=\"LiteralNumber\" style=\"#fe640b\"/>\n+  <entry type=\"Operator\" style=\"#04a5e5\"/>\n+  <entry type=\"OperatorWord\" style=\"bold #04a5e5\"/>\n+  <entry type=\"Punctuation\" style=\"#4c4f69\"/>\n+  <entry type=\"Comment\" style=\"italic #acb0be\"/>\n+  <entry type=\"CommentPreproc\" style=\"#1e66f5\"/>\n+  <entry type=\"GenericDeleted\" style=\"#e64553\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#e64553\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #04a5e5\"/>\n+  <entry type=\"GenericInserted\" style=\"#40a02b\"/>\n+  <entry type=\"GenericOutput\" style=\"#fe640b\"/>\n+  <entry type=\"GenericPrompt\" style=\"bold #9ca0b0\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #04a5e5\"/>\n+  <entry type=\"GenericTraceback\" style=\"#e64553\"/>\n+  <entry type=\"TextWhitespace\" style=\"#ccd0da\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "c9d25e2dfbede9a15d076c2a5ff19ae3e93fa551",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/catppuccin-macchiato.xml",
      "status": "added",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-macchiato.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-macchiato.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-macchiato.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,46 @@\n+<style name=\"catppuccin-macchiato\">\n+  <entry type=\"Error\" style=\"#ed8796\"/>\n+  <entry type=\"Background\" style=\"#f5a97f bg:#24273a\"/>\n+  <entry type=\"Keyword\" style=\"#c6a0f6\"/>\n+  <entry type=\"KeywordConstant\" style=\"italic #c6a0f6\"/>\n+  <entry type=\"KeywordPseudo\" style=\"bold #c6a0f6\"/>\n+  <entry type=\"KeywordType\" style=\"#eed49f\"/>\n+  <entry type=\"Name\" style=\"#b7bdf8\"/>\n+  <entry type=\"NameAttribute\" style=\"#eed49f\"/>\n+  <entry type=\"NameBuiltin\" style=\"italic #f5a97f\"/>\n+  <entry type=\"NameClass\" style=\"#eed49f\"/>\n+  <entry type=\"NameConstant\" style=\"#eed49f\"/>\n+  <entry type=\"NameDecorator\" style=\"#f5bde6\"/>\n+  <entry type=\"NameEntity\" style=\"#f5bde6\"/>\n+  <entry type=\"NameException\" style=\"#ee99a0\"/>\n+  <entry type=\"NameFunction\" style=\"#91d7e3\"/>\n+  <entry type=\"NameLabel\" style=\"#eed49f\"/>\n+  <entry type=\"NameNamespace\" style=\"#eed49f\"/>\n+  <entry type=\"NameOther\" style=\"#f5a97f\"/>\n+  <entry type=\"NameTag\" style=\"#c6a0f6\"/>\n+  <entry type=\"NameVariable\" style=\"#f5a97f\"/>\n+  <entry type=\"LiteralString\" style=\"#a6da95\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#a6da95\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#8aadf4\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#a6da95\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#a6da95\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#8aadf4\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#a6da95\"/>\n+  <entry type=\"LiteralNumber\" style=\"#f5a97f\"/>\n+  <entry type=\"Operator\" style=\"#91d7e3\"/>\n+  <entry type=\"OperatorWord\" style=\"bold #91d7e3\"/>\n+  <entry type=\"Punctuation\" style=\"#cad3f5\"/>\n+  <entry type=\"Comment\" style=\"italic #5b6078\"/>\n+  <entry type=\"CommentPreproc\" style=\"#8aadf4\"/>\n+  <entry type=\"GenericDeleted\" style=\"#ee99a0\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#ee99a0\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #91d7e3\"/>\n+  <entry type=\"GenericInserted\" style=\"#a6da95\"/>\n+  <entry type=\"GenericOutput\" style=\"#f5a97f\"/>\n+  <entry type=\"GenericPrompt\" style=\"bold #6e738d\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #91d7e3\"/>\n+  <entry type=\"GenericTraceback\" style=\"#ee99a0\"/>\n+  <entry type=\"TextWhitespace\" style=\"#363a4f\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "4d69ae386f2091d8670b5fc8c23b02d284488e6b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/catppuccin-mocha.xml",
      "status": "added",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-mocha.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-mocha.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcatppuccin-mocha.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,46 @@\n+<style name=\"catppuccin-mocha\">\n+  <entry type=\"Error\" style=\"#f38ba8\"/>\n+  <entry type=\"Background\" style=\"#fab387 bg:#1e1e2e\"/>\n+  <entry type=\"Keyword\" style=\"#cba6f7\"/>\n+  <entry type=\"KeywordConstant\" style=\"italic #cba6f7\"/>\n+  <entry type=\"KeywordPseudo\" style=\"bold #cba6f7\"/>\n+  <entry type=\"KeywordType\" style=\"#f9e2af\"/>\n+  <entry type=\"Name\" style=\"#b4befe\"/>\n+  <entry type=\"NameAttribute\" style=\"#f9e2af\"/>\n+  <entry type=\"NameBuiltin\" style=\"italic #fab387\"/>\n+  <entry type=\"NameClass\" style=\"#f9e2af\"/>\n+  <entry type=\"NameConstant\" style=\"#f9e2af\"/>\n+  <entry type=\"NameDecorator\" style=\"#f5c2e7\"/>\n+  <entry type=\"NameEntity\" style=\"#f5c2e7\"/>\n+  <entry type=\"NameException\" style=\"#eba0ac\"/>\n+  <entry type=\"NameFunction\" style=\"#89dceb\"/>\n+  <entry type=\"NameLabel\" style=\"#f9e2af\"/>\n+  <entry type=\"NameNamespace\" style=\"#f9e2af\"/>\n+  <entry type=\"NameOther\" style=\"#fab387\"/>\n+  <entry type=\"NameTag\" style=\"#cba6f7\"/>\n+  <entry type=\"NameVariable\" style=\"#fab387\"/>\n+  <entry type=\"LiteralString\" style=\"#a6e3a1\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#a6e3a1\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#89b4fa\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#a6e3a1\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#a6e3a1\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#89b4fa\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#a6e3a1\"/>\n+  <entry type=\"LiteralNumber\" style=\"#fab387\"/>\n+  <entry type=\"Operator\" style=\"#89dceb\"/>\n+  <entry type=\"OperatorWord\" style=\"bold #89dceb\"/>\n+  <entry type=\"Punctuation\" style=\"#cdd6f4\"/>\n+  <entry type=\"Comment\" style=\"italic #585b70\"/>\n+  <entry type=\"CommentPreproc\" style=\"#89b4fa\"/>\n+  <entry type=\"GenericDeleted\" style=\"#eba0ac\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#eba0ac\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #89dceb\"/>\n+  <entry type=\"GenericInserted\" style=\"#a6e3a1\"/>\n+  <entry type=\"GenericOutput\" style=\"#fab387\"/>\n+  <entry type=\"GenericPrompt\" style=\"bold #6c7086\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #89dceb\"/>\n+  <entry type=\"GenericTraceback\" style=\"#eba0ac\"/>\n+  <entry type=\"TextWhitespace\" style=\"#313244\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "69f0373d781aa0a5aa60b4004277e947d1272723",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/colorful.go",
      "status": "removed",
      "additions": 0,
      "deletions": 59,
      "changes": 59,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcolorful.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcolorful.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcolorful.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,59 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Colorful style.\n-var Colorful = Register(chroma.MustNewStyle(\"colorful\", chroma.StyleEntries{\n-\tchroma.TextWhitespace:        \"#bbbbbb\",\n-\tchroma.Comment:               \"#888\",\n-\tchroma.CommentPreproc:        \"#579\",\n-\tchroma.CommentSpecial:        \"bold #cc0000\",\n-\tchroma.Keyword:               \"bold #080\",\n-\tchroma.KeywordPseudo:         \"#038\",\n-\tchroma.KeywordType:           \"#339\",\n-\tchroma.Operator:              \"#333\",\n-\tchroma.OperatorWord:          \"bold #000\",\n-\tchroma.NameBuiltin:           \"#007020\",\n-\tchroma.NameFunction:          \"bold #06B\",\n-\tchroma.NameClass:             \"bold #B06\",\n-\tchroma.NameNamespace:         \"bold #0e84b5\",\n-\tchroma.NameException:         \"bold #F00\",\n-\tchroma.NameVariable:          \"#963\",\n-\tchroma.NameVariableInstance:  \"#33B\",\n-\tchroma.NameVariableClass:     \"#369\",\n-\tchroma.NameVariableGlobal:    \"bold #d70\",\n-\tchroma.NameConstant:          \"bold #036\",\n-\tchroma.NameLabel:             \"bold #970\",\n-\tchroma.NameEntity:            \"bold #800\",\n-\tchroma.NameAttribute:         \"#00C\",\n-\tchroma.NameTag:               \"#070\",\n-\tchroma.NameDecorator:         \"bold #555\",\n-\tchroma.LiteralString:         \"bg:#fff0f0\",\n-\tchroma.LiteralStringChar:     \"#04D bg:\",\n-\tchroma.LiteralStringDoc:      \"#D42 bg:\",\n-\tchroma.LiteralStringInterpol: \"bg:#eee\",\n-\tchroma.LiteralStringEscape:   \"bold #666\",\n-\tchroma.LiteralStringRegex:    \"bg:#fff0ff #000\",\n-\tchroma.LiteralStringSymbol:   \"#A60 bg:\",\n-\tchroma.LiteralStringOther:    \"#D20\",\n-\tchroma.LiteralNumber:         \"bold #60E\",\n-\tchroma.LiteralNumberInteger:  \"bold #00D\",\n-\tchroma.LiteralNumberFloat:    \"bold #60E\",\n-\tchroma.LiteralNumberHex:      \"bold #058\",\n-\tchroma.LiteralNumberOct:      \"bold #40E\",\n-\tchroma.GenericHeading:        \"bold #000080\",\n-\tchroma.GenericSubheading:     \"bold #800080\",\n-\tchroma.GenericDeleted:        \"#A00000\",\n-\tchroma.GenericInserted:       \"#00A000\",\n-\tchroma.GenericError:          \"#FF0000\",\n-\tchroma.GenericEmph:           \"italic\",\n-\tchroma.GenericStrong:         \"bold\",\n-\tchroma.GenericPrompt:         \"bold #c65d09\",\n-\tchroma.GenericOutput:         \"#888\",\n-\tchroma.GenericTraceback:      \"#04D\",\n-\tchroma.GenericUnderline:      \"underline\",\n-\tchroma.Error:                 \"#F00 bg:#FAA\",\n-\tchroma.Background:            \" bg:#ffffff\",\n-}))"
    },
    {
      "sha": "32442d716dabf2e2d92feb33202bc8099b299b79",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/colorful.xml",
      "status": "added",
      "additions": 52,
      "deletions": 0,
      "changes": 52,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcolorful.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcolorful.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcolorful.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,52 @@\n+<style name=\"colorful\">\n+  <entry type=\"Error\" style=\"#ff0000 bg:#ffaaaa\"/>\n+  <entry type=\"Background\" style=\"bg:#ffffff\"/>\n+  <entry type=\"Keyword\" style=\"bold #008800\"/>\n+  <entry type=\"KeywordPseudo\" style=\"#003388\"/>\n+  <entry type=\"KeywordType\" style=\"#333399\"/>\n+  <entry type=\"NameAttribute\" style=\"#0000cc\"/>\n+  <entry type=\"NameBuiltin\" style=\"#007020\"/>\n+  <entry type=\"NameClass\" style=\"bold #bb0066\"/>\n+  <entry type=\"NameConstant\" style=\"bold #003366\"/>\n+  <entry type=\"NameDecorator\" style=\"bold #555555\"/>\n+  <entry type=\"NameEntity\" style=\"bold #880000\"/>\n+  <entry type=\"NameException\" style=\"bold #ff0000\"/>\n+  <entry type=\"NameFunction\" style=\"bold #0066bb\"/>\n+  <entry type=\"NameLabel\" style=\"bold #997700\"/>\n+  <entry type=\"NameNamespace\" style=\"bold #0e84b5\"/>\n+  <entry type=\"NameTag\" style=\"#007700\"/>\n+  <entry type=\"NameVariable\" style=\"#996633\"/>\n+  <entry type=\"NameVariableClass\" style=\"#336699\"/>\n+  <entry type=\"NameVariableGlobal\" style=\"bold #dd7700\"/>\n+  <entry type=\"NameVariableInstance\" style=\"#3333bb\"/>\n+  <entry type=\"LiteralString\" style=\"bg:#fff0f0\"/>\n+  <entry type=\"LiteralStringChar\" style=\"#0044dd\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#dd4422\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"bold #666666\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"bg:#eeeeee\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#dd2200\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#000000 bg:#fff0ff\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#aa6600\"/>\n+  <entry type=\"LiteralNumber\" style=\"bold #6600ee\"/>\n+  <entry type=\"LiteralNumberFloat\" style=\"bold #6600ee\"/>\n+  <entry type=\"LiteralNumberHex\" style=\"bold #005588\"/>\n+  <entry type=\"LiteralNumberInteger\" style=\"bold #0000dd\"/>\n+  <entry type=\"LiteralNumberOct\" style=\"bold #4400ee\"/>\n+  <entry type=\"Operator\" style=\"#333333\"/>\n+  <entry type=\"OperatorWord\" style=\"bold #000000\"/>\n+  <entry type=\"Comment\" style=\"#888888\"/>\n+  <entry type=\"CommentSpecial\" style=\"bold #cc0000\"/>\n+  <entry type=\"CommentPreproc\" style=\"#557799\"/>\n+  <entry type=\"GenericDeleted\" style=\"#a00000\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#ff0000\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #000080\"/>\n+  <entry type=\"GenericInserted\" style=\"#00a000\"/>\n+  <entry type=\"GenericOutput\" style=\"#888888\"/>\n+  <entry type=\"GenericPrompt\" style=\"bold #c65d09\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #800080\"/>\n+  <entry type=\"GenericTraceback\" style=\"#0044dd\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"TextWhitespace\" style=\"#bbbbbb\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "4a6aaa6652dd2a57ee6dcb923ea2e2fda9091f6c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/compat.go",
      "status": "added",
      "additions": 66,
      "deletions": 0,
      "changes": 66,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcompat.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcompat.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fcompat.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,66 @@\n+package styles\n+\n+// Present for backwards compatibility.\n+//\n+// Deprecated: use styles.Get(name) instead.\n+var (\n+\tAbap                = Registry[\"abap\"]\n+\tAlgol               = Registry[\"algol\"]\n+\tAlgolNu             = Registry[\"algol_nu\"]\n+\tArduino             = Registry[\"arduino\"]\n+\tAutumn              = Registry[\"autumn\"]\n+\tAverage             = Registry[\"average\"]\n+\tBase16Snazzy        = Registry[\"base16-snazzy\"]\n+\tBorland             = Registry[\"borland\"]\n+\tBlackWhite          = Registry[\"bw\"]\n+\tCatppuccinFrappe    = Registry[\"catppuccin-frappe\"]\n+\tCatppuccinLatte     = Registry[\"catppuccin-latte\"]\n+\tCatppuccinMacchiato = Registry[\"catppuccin-macchiato\"]\n+\tCatppuccinMocha     = Registry[\"catppuccin-mocha\"]\n+\tColorful            = Registry[\"colorful\"]\n+\tDoomOne             = Registry[\"doom-one\"]\n+\tDoomOne2            = Registry[\"doom-one2\"]\n+\tDracula             = Registry[\"dracula\"]\n+\tEmacs               = Registry[\"emacs\"]\n+\tFriendly            = Registry[\"friendly\"]\n+\tFruity              = Registry[\"fruity\"]\n+\tGitHubDark          = Registry[\"github-dark\"]\n+\tGitHub              = Registry[\"github\"]\n+\tGruvboxLight        = Registry[\"gruvbox-light\"]\n+\tGruvbox             = Registry[\"gruvbox\"]\n+\tHrDark              = Registry[\"hrdark\"]\n+\tHrHighContrast      = Registry[\"hr_high_contrast\"]\n+\tIgor                = Registry[\"igor\"]\n+\tLovelace            = Registry[\"lovelace\"]\n+\tManni               = Registry[\"manni\"]\n+\tModusOperandi       = Registry[\"modus-operandi\"]\n+\tModusVivendi        = Registry[\"modus-vivendi\"]\n+\tMonokai             = Registry[\"monokai\"]\n+\tMonokaiLight        = Registry[\"monokailight\"]\n+\tMurphy              = Registry[\"murphy\"]\n+\tNative              = Registry[\"native\"]\n+\tNord                = Registry[\"nord\"]\n+\tOnesEnterprise      = Registry[\"onesenterprise\"]\n+\tParaisoDark         = Registry[\"paraiso-dark\"]\n+\tParaisoLight        = Registry[\"paraiso-light\"]\n+\tPastie              = Registry[\"pastie\"]\n+\tPerldoc             = Registry[\"perldoc\"]\n+\tPygments            = Registry[\"pygments\"]\n+\tRainbowDash         = Registry[\"rainbow_dash\"]\n+\tRosePineDawn        = Registry[\"rose-pine-dawn\"]\n+\tRosePineMoon        = Registry[\"rose-pine-moon\"]\n+\tRosePine            = Registry[\"rose-pine\"]\n+\tRrt                 = Registry[\"rrt\"]\n+\tSolarizedDark       = Registry[\"solarized-dark\"]\n+\tSolarizedDark256    = Registry[\"solarized-dark256\"]\n+\tSolarizedLight      = Registry[\"solarized-light\"]\n+\tSwapOff             = Registry[\"swapoff\"]\n+\tTango               = Registry[\"tango\"]\n+\tTrac                = Registry[\"trac\"]\n+\tVim                 = Registry[\"vim\"]\n+\tVisualStudio        = Registry[\"vs\"]\n+\tVulcan              = Registry[\"vulcan\"]\n+\tWitchHazel          = Registry[\"witchhazel\"]\n+\tXcodeDark           = Registry[\"xcode-dark\"]\n+\tXcode               = Registry[\"xcode\"]\n+)"
    },
    {
      "sha": "8bca8aa938dd117fcfd1b422c1b6213b4ef7a500",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/doom-one.go",
      "status": "removed",
      "additions": 0,
      "deletions": 58,
      "changes": 58,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fdoom-one.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fdoom-one.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fdoom-one.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,58 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Doom One style. Inspired by Atom One and Doom Emacs's Atom One theme\n-var DoomOne = Register(chroma.MustNewStyle(\"doom-one\", chroma.StyleEntries{\n-\tchroma.Text:                 \"#b0c4de\",\n-\tchroma.Error:                \"#b0c4de\",\n-\tchroma.Comment:              \"italic #8a93a5\",\n-\tchroma.CommentHashbang:      \"bold\",\n-\tchroma.Keyword:              \"#c678dd\",\n-\tchroma.KeywordType:          \"#ef8383\",\n-\tchroma.KeywordConstant:      \"bold #b756ff\",\n-\tchroma.Operator:             \"#c7bf54\",\n-\tchroma.OperatorWord:         \"bold #b756ff\",\n-\tchroma.Punctuation:          \"#b0c4de\",\n-\tchroma.Name:                 \"#c1abea\",\n-\tchroma.NameAttribute:        \"#b3d23c\",\n-\tchroma.NameBuiltin:          \"#ef8383\",\n-\tchroma.NameClass:            \"#76a9f9\",\n-\tchroma.NameConstant:         \"bold #b756ff\",\n-\tchroma.NameDecorator:        \"#e5c07b\",\n-\tchroma.NameEntity:           \"#bda26f\",\n-\tchroma.NameException:        \"bold #fd7474\",\n-\tchroma.NameFunction:         \"#00b1f7\",\n-\tchroma.NameProperty:         \"#cebc3a\",\n-\tchroma.NameLabel:            \"#f5a40d\",\n-\tchroma.NameNamespace:        \"#76a9f9\",\n-\tchroma.NameTag:              \"#e06c75\",\n-\tchroma.NameVariable:         \"#DCAEEA\",\n-\tchroma.NameVariableGlobal:   \"bold #DCAEEA\",\n-\tchroma.NameVariableInstance: \"#e06c75\",\n-\tchroma.Literal:              \"#98c379\",\n-\tchroma.Number:               \"#d19a66\",\n-\tchroma.String:               \"#98c379\",\n-\tchroma.StringDoc:            \"#7e97c3\",\n-\tchroma.StringDouble:         \"#63c381\",\n-\tchroma.StringEscape:         \"bold #d26464\",\n-\tchroma.StringHeredoc:        \"#98c379\",\n-\tchroma.StringInterpol:       \"#98c379\",\n-\tchroma.StringOther:          \"#70b33f\",\n-\tchroma.StringRegex:          \"#56b6c2\",\n-\tchroma.StringSingle:         \"#98c379\",\n-\tchroma.StringSymbol:         \"#56b6c2\",\n-\tchroma.Generic:              \"#b0c4de\",\n-\tchroma.GenericEmph:          \"italic\",\n-\tchroma.GenericHeading:       \"bold #a2cbff\",\n-\tchroma.GenericInserted:      \"#a6e22e\",\n-\tchroma.GenericOutput:        \"#a6e22e\",\n-\tchroma.GenericUnderline:     \"underline\",\n-\tchroma.GenericPrompt:        \"#a6e22e\",\n-\tchroma.GenericStrong:        \"bold\",\n-\tchroma.GenericSubheading:    \"#a2cbff\",\n-\tchroma.GenericTraceback:     \"#a2cbff\",\n-\tchroma.Background:           \"#b0c4de bg:#282c34\",\n-}))"
    },
    {
      "sha": "1f5127ef90d9eca0406ae3506dbf4e56f9e3ef23",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/doom-one.xml",
      "status": "added",
      "additions": 51,
      "deletions": 0,
      "changes": 51,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fdoom-one.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fdoom-one.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fdoom-one.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,51 @@\n+<style name=\"doom-one\">\n+  <entry type=\"Error\" style=\"#b0c4de\"/>\n+  <entry type=\"Background\" style=\"#b0c4de bg:#282c34\"/>\n+  <entry type=\"Keyword\" style=\"#c678dd\"/>\n+  <entry type=\"KeywordConstant\" style=\"bold #b756ff\"/>\n+  <entry type=\"KeywordType\" style=\"#ef8383\"/>\n+  <entry type=\"Name\" style=\"#c1abea\"/>\n+  <entry type=\"NameAttribute\" style=\"#b3d23c\"/>\n+  <entry type=\"NameBuiltin\" style=\"#ef8383\"/>\n+  <entry type=\"NameClass\" style=\"#76a9f9\"/>\n+  <entry type=\"NameConstant\" style=\"bold #b756ff\"/>\n+  <entry type=\"NameDecorator\" style=\"#e5c07b\"/>\n+  <entry type=\"NameEntity\" style=\"#bda26f\"/>\n+  <entry type=\"NameException\" style=\"bold #fd7474\"/>\n+  <entry type=\"NameFunction\" style=\"#00b1f7\"/>\n+  <entry type=\"NameLabel\" style=\"#f5a40d\"/>\n+  <entry type=\"NameNamespace\" style=\"#76a9f9\"/>\n+  <entry type=\"NameProperty\" style=\"#cebc3a\"/>\n+  <entry type=\"NameTag\" style=\"#e06c75\"/>\n+  <entry type=\"NameVariable\" style=\"#dcaeea\"/>\n+  <entry type=\"NameVariableGlobal\" style=\"bold #dcaeea\"/>\n+  <entry type=\"NameVariableInstance\" style=\"#e06c75\"/>\n+  <entry type=\"Literal\" style=\"#98c379\"/>\n+  <entry type=\"LiteralString\" style=\"#98c379\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#7e97c3\"/>\n+  <entry type=\"LiteralStringDouble\" style=\"#63c381\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"bold #d26464\"/>\n+  <entry type=\"LiteralStringHeredoc\" style=\"#98c379\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#98c379\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#70b33f\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#56b6c2\"/>\n+  <entry type=\"LiteralStringSingle\" style=\"#98c379\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#56b6c2\"/>\n+  <entry type=\"LiteralNumber\" style=\"#d19a66\"/>\n+  <entry type=\"Operator\" style=\"#c7bf54\"/>\n+  <entry type=\"OperatorWord\" style=\"bold #b756ff\"/>\n+  <entry type=\"Punctuation\" style=\"#b0c4de\"/>\n+  <entry type=\"Comment\" style=\"italic #8a93a5\"/>\n+  <entry type=\"CommentHashbang\" style=\"bold\"/>\n+  <entry type=\"Generic\" style=\"#b0c4de\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #a2cbff\"/>\n+  <entry type=\"GenericInserted\" style=\"#a6e22e\"/>\n+  <entry type=\"GenericOutput\" style=\"#a6e22e\"/>\n+  <entry type=\"GenericPrompt\" style=\"#a6e22e\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"#a2cbff\"/>\n+  <entry type=\"GenericTraceback\" style=\"#a2cbff\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"Text\" style=\"#b0c4de\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "080f6d7e5b1c58b13a3db94778260e78f1d7b33b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/doom-one2.go",
      "status": "removed",
      "additions": 0,
      "deletions": 71,
      "changes": 71,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fdoom-one2.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fdoom-one2.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fdoom-one2.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,71 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Doom One 2 style. Inspired by Atom One and Doom Emacs's Atom One theme\n-var DoomOne2 = Register(chroma.MustNewStyle(\"doom-one2\", chroma.StyleEntries{\n-\tchroma.Text:                 \"#b0c4de\",\n-\tchroma.Error:                \"#b0c4de\",\n-\tchroma.Comment:              \"italic #8a93a5\",\n-\tchroma.CommentHashbang:      \"bold\",\n-\tchroma.Keyword:              \"#76a9f9\",\n-\tchroma.KeywordConstant:      \"#e5c07b\",\n-\tchroma.KeywordType:          \"#e5c07b\",\n-\tchroma.Operator:             \"#54b1c7\",\n-\tchroma.OperatorWord:         \"bold #b756ff\",\n-\tchroma.Punctuation:          \"#abb2bf\",\n-\tchroma.Name:                 \"#aa89ea\",\n-\tchroma.NameAttribute:        \"#cebc3a\",\n-\tchroma.NameBuiltin:          \"#e5c07b\",\n-\tchroma.NameClass:            \"#ca72ff\",\n-\tchroma.NameConstant:         \"bold\",\n-\tchroma.NameDecorator:        \"#e5c07b\",\n-\tchroma.NameEntity:           \"#bda26f\",\n-\tchroma.NameException:        \"bold #fd7474\",\n-\tchroma.NameFunction:         \"#00b1f7\",\n-\tchroma.NameProperty:         \"#cebc3a\",\n-\tchroma.NameLabel:            \"#f5a40d\",\n-\tchroma.NameNamespace:        \"#ca72ff\",\n-\tchroma.NameTag:              \"#76a9f9\",\n-\tchroma.NameVariable:         \"#DCAEEA\",\n-\tchroma.NameVariableClass:    \"#DCAEEA\",\n-\tchroma.NameVariableGlobal:   \"bold #DCAEEA\",\n-\tchroma.NameVariableInstance: \"#e06c75\",\n-\tchroma.NameVariableMagic:    \"#DCAEEA\",\n-\tchroma.Literal:              \"#98c379\",\n-\tchroma.LiteralDate:          \"#98c379\",\n-\tchroma.Number:               \"#d19a66\",\n-\tchroma.NumberBin:            \"#d19a66\",\n-\tchroma.NumberFloat:          \"#d19a66\",\n-\tchroma.NumberHex:            \"#d19a66\",\n-\tchroma.NumberInteger:        \"#d19a66\",\n-\tchroma.NumberIntegerLong:    \"#d19a66\",\n-\tchroma.NumberOct:            \"#d19a66\",\n-\tchroma.String:               \"#98c379\",\n-\tchroma.StringAffix:          \"#98c379\",\n-\tchroma.StringBacktick:       \"#98c379\",\n-\tchroma.StringDelimiter:      \"#98c379\",\n-\tchroma.StringDoc:            \"#7e97c3\",\n-\tchroma.StringDouble:         \"#63c381\",\n-\tchroma.StringEscape:         \"bold #d26464\",\n-\tchroma.StringHeredoc:        \"#98c379\",\n-\tchroma.StringInterpol:       \"#98c379\",\n-\tchroma.StringOther:          \"#70b33f\",\n-\tchroma.StringRegex:          \"#56b6c2\",\n-\tchroma.StringSingle:         \"#98c379\",\n-\tchroma.StringSymbol:         \"#56b6c2\",\n-\tchroma.Generic:              \"#b0c4de\",\n-\tchroma.GenericDeleted:       \"#b0c4de\",\n-\tchroma.GenericEmph:          \"italic\",\n-\tchroma.GenericHeading:       \"bold #a2cbff\",\n-\tchroma.GenericInserted:      \"#a6e22e\",\n-\tchroma.GenericOutput:        \"#a6e22e\",\n-\tchroma.GenericUnderline:     \"underline\",\n-\tchroma.GenericPrompt:        \"#a6e22e\",\n-\tchroma.GenericStrong:        \"bold\",\n-\tchroma.GenericSubheading:    \"#a2cbff\",\n-\tchroma.GenericTraceback:     \"#a2cbff\",\n-\tchroma.Background:           \"#b0c4de bg:#282c34\",\n-}))"
    },
    {
      "sha": "f47debaf0919d7fec57720a7ca346cfaf6271961",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/doom-one2.xml",
      "status": "added",
      "additions": 64,
      "deletions": 0,
      "changes": 64,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fdoom-one2.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fdoom-one2.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fdoom-one2.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,64 @@\n+<style name=\"doom-one2\">\n+  <entry type=\"Error\" style=\"#b0c4de\"/>\n+  <entry type=\"Background\" style=\"#b0c4de bg:#282c34\"/>\n+  <entry type=\"Keyword\" style=\"#76a9f9\"/>\n+  <entry type=\"KeywordConstant\" style=\"#e5c07b\"/>\n+  <entry type=\"KeywordType\" style=\"#e5c07b\"/>\n+  <entry type=\"Name\" style=\"#aa89ea\"/>\n+  <entry type=\"NameAttribute\" style=\"#cebc3a\"/>\n+  <entry type=\"NameBuiltin\" style=\"#e5c07b\"/>\n+  <entry type=\"NameClass\" style=\"#ca72ff\"/>\n+  <entry type=\"NameConstant\" style=\"bold\"/>\n+  <entry type=\"NameDecorator\" style=\"#e5c07b\"/>\n+  <entry type=\"NameEntity\" style=\"#bda26f\"/>\n+  <entry type=\"NameException\" style=\"bold #fd7474\"/>\n+  <entry type=\"NameFunction\" style=\"#00b1f7\"/>\n+  <entry type=\"NameLabel\" style=\"#f5a40d\"/>\n+  <entry type=\"NameNamespace\" style=\"#ca72ff\"/>\n+  <entry type=\"NameProperty\" style=\"#cebc3a\"/>\n+  <entry type=\"NameTag\" style=\"#76a9f9\"/>\n+  <entry type=\"NameVariable\" style=\"#dcaeea\"/>\n+  <entry type=\"NameVariableClass\" style=\"#dcaeea\"/>\n+  <entry type=\"NameVariableGlobal\" style=\"bold #dcaeea\"/>\n+  <entry type=\"NameVariableInstance\" style=\"#e06c75\"/>\n+  <entry type=\"NameVariableMagic\" style=\"#dcaeea\"/>\n+  <entry type=\"Literal\" style=\"#98c379\"/>\n+  <entry type=\"LiteralDate\" style=\"#98c379\"/>\n+  <entry type=\"LiteralString\" style=\"#98c379\"/>\n+  <entry type=\"LiteralStringAffix\" style=\"#98c379\"/>\n+  <entry type=\"LiteralStringBacktick\" style=\"#98c379\"/>\n+  <entry type=\"LiteralStringDelimiter\" style=\"#98c379\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#7e97c3\"/>\n+  <entry type=\"LiteralStringDouble\" style=\"#63c381\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"bold #d26464\"/>\n+  <entry type=\"LiteralStringHeredoc\" style=\"#98c379\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#98c379\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#70b33f\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#56b6c2\"/>\n+  <entry type=\"LiteralStringSingle\" style=\"#98c379\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#56b6c2\"/>\n+  <entry type=\"LiteralNumber\" style=\"#d19a66\"/>\n+  <entry type=\"LiteralNumberBin\" style=\"#d19a66\"/>\n+  <entry type=\"LiteralNumberFloat\" style=\"#d19a66\"/>\n+  <entry type=\"LiteralNumberHex\" style=\"#d19a66\"/>\n+  <entry type=\"LiteralNumberInteger\" style=\"#d19a66\"/>\n+  <entry type=\"LiteralNumberIntegerLong\" style=\"#d19a66\"/>\n+  <entry type=\"LiteralNumberOct\" style=\"#d19a66\"/>\n+  <entry type=\"Operator\" style=\"#54b1c7\"/>\n+  <entry type=\"OperatorWord\" style=\"bold #b756ff\"/>\n+  <entry type=\"Punctuation\" style=\"#abb2bf\"/>\n+  <entry type=\"Comment\" style=\"italic #8a93a5\"/>\n+  <entry type=\"CommentHashbang\" style=\"bold\"/>\n+  <entry type=\"Generic\" style=\"#b0c4de\"/>\n+  <entry type=\"GenericDeleted\" style=\"#b0c4de\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #a2cbff\"/>\n+  <entry type=\"GenericInserted\" style=\"#a6e22e\"/>\n+  <entry type=\"GenericOutput\" style=\"#a6e22e\"/>\n+  <entry type=\"GenericPrompt\" style=\"#a6e22e\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"#a2cbff\"/>\n+  <entry type=\"GenericTraceback\" style=\"#a2cbff\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"Text\" style=\"#b0c4de\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "67fdfca1b18cae695a1c2ed980d68291c603392f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/dracula.go",
      "status": "removed",
      "additions": 0,
      "deletions": 81,
      "changes": 81,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fdracula.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fdracula.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fdracula.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,81 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Dracula Style\n-var Dracula = Register(chroma.MustNewStyle(\"dracula\", chroma.StyleEntries{\n-\tchroma.Comment:                  \"#6272a4\",\n-\tchroma.CommentHashbang:          \"#6272a4\",\n-\tchroma.CommentMultiline:         \"#6272a4\",\n-\tchroma.CommentPreproc:           \"#ff79c6\",\n-\tchroma.CommentSingle:            \"#6272a4\",\n-\tchroma.CommentSpecial:           \"#6272a4\",\n-\tchroma.Generic:                  \"#f8f8f2\",\n-\tchroma.GenericDeleted:           \"#ff5555\",\n-\tchroma.GenericEmph:              \"#f8f8f2 underline\",\n-\tchroma.GenericError:             \"#f8f8f2\",\n-\tchroma.GenericHeading:           \"#f8f8f2 bold\",\n-\tchroma.GenericInserted:          \"#50fa7b bold\",\n-\tchroma.GenericOutput:            \"#44475a\",\n-\tchroma.GenericPrompt:            \"#f8f8f2\",\n-\tchroma.GenericStrong:            \"#f8f8f2\",\n-\tchroma.GenericSubheading:        \"#f8f8f2 bold\",\n-\tchroma.GenericTraceback:         \"#f8f8f2\",\n-\tchroma.GenericUnderline:         \"underline\",\n-\tchroma.Error:                    \"#f8f8f2\",\n-\tchroma.Keyword:                  \"#ff79c6\",\n-\tchroma.KeywordConstant:          \"#ff79c6\",\n-\tchroma.KeywordDeclaration:       \"#8be9fd italic\",\n-\tchroma.KeywordNamespace:         \"#ff79c6\",\n-\tchroma.KeywordPseudo:            \"#ff79c6\",\n-\tchroma.KeywordReserved:          \"#ff79c6\",\n-\tchroma.KeywordType:              \"#8be9fd\",\n-\tchroma.Literal:                  \"#f8f8f2\",\n-\tchroma.LiteralDate:              \"#f8f8f2\",\n-\tchroma.Name:                     \"#f8f8f2\",\n-\tchroma.NameAttribute:            \"#50fa7b\",\n-\tchroma.NameBuiltin:              \"#8be9fd italic\",\n-\tchroma.NameBuiltinPseudo:        \"#f8f8f2\",\n-\tchroma.NameClass:                \"#50fa7b\",\n-\tchroma.NameConstant:             \"#f8f8f2\",\n-\tchroma.NameDecorator:            \"#f8f8f2\",\n-\tchroma.NameEntity:               \"#f8f8f2\",\n-\tchroma.NameException:            \"#f8f8f2\",\n-\tchroma.NameFunction:             \"#50fa7b\",\n-\tchroma.NameLabel:                \"#8be9fd italic\",\n-\tchroma.NameNamespace:            \"#f8f8f2\",\n-\tchroma.NameOther:                \"#f8f8f2\",\n-\tchroma.NameTag:                  \"#ff79c6\",\n-\tchroma.NameVariable:             \"#8be9fd italic\",\n-\tchroma.NameVariableClass:        \"#8be9fd italic\",\n-\tchroma.NameVariableGlobal:       \"#8be9fd italic\",\n-\tchroma.NameVariableInstance:     \"#8be9fd italic\",\n-\tchroma.LiteralNumber:            \"#bd93f9\",\n-\tchroma.LiteralNumberBin:         \"#bd93f9\",\n-\tchroma.LiteralNumberFloat:       \"#bd93f9\",\n-\tchroma.LiteralNumberHex:         \"#bd93f9\",\n-\tchroma.LiteralNumberInteger:     \"#bd93f9\",\n-\tchroma.LiteralNumberIntegerLong: \"#bd93f9\",\n-\tchroma.LiteralNumberOct:         \"#bd93f9\",\n-\tchroma.Operator:                 \"#ff79c6\",\n-\tchroma.OperatorWord:             \"#ff79c6\",\n-\tchroma.Other:                    \"#f8f8f2\",\n-\tchroma.Punctuation:              \"#f8f8f2\",\n-\tchroma.LiteralString:            \"#f1fa8c\",\n-\tchroma.LiteralStringBacktick:    \"#f1fa8c\",\n-\tchroma.LiteralStringChar:        \"#f1fa8c\",\n-\tchroma.LiteralStringDoc:         \"#f1fa8c\",\n-\tchroma.LiteralStringDouble:      \"#f1fa8c\",\n-\tchroma.LiteralStringEscape:      \"#f1fa8c\",\n-\tchroma.LiteralStringHeredoc:     \"#f1fa8c\",\n-\tchroma.LiteralStringInterpol:    \"#f1fa8c\",\n-\tchroma.LiteralStringOther:       \"#f1fa8c\",\n-\tchroma.LiteralStringRegex:       \"#f1fa8c\",\n-\tchroma.LiteralStringSingle:      \"#f1fa8c\",\n-\tchroma.LiteralStringSymbol:      \"#f1fa8c\",\n-\tchroma.Text:                     \"#f8f8f2\",\n-\tchroma.TextWhitespace:           \"#f8f8f2\",\n-\tchroma.Background:               \" bg:#282a36\",\n-}))"
    },
    {
      "sha": "9df7da11c23c3fd06edafcc086b668dd7e588be2",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/dracula.xml",
      "status": "added",
      "additions": 74,
      "deletions": 0,
      "changes": 74,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fdracula.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fdracula.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fdracula.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,74 @@\n+<style name=\"dracula\">\n+  <entry type=\"Other\" style=\"#f8f8f2\"/>\n+  <entry type=\"Error\" style=\"#f8f8f2\"/>\n+  <entry type=\"Background\" style=\"bg:#282a36\"/>\n+  <entry type=\"Keyword\" style=\"#ff79c6\"/>\n+  <entry type=\"KeywordConstant\" style=\"#ff79c6\"/>\n+  <entry type=\"KeywordDeclaration\" style=\"italic #8be9fd\"/>\n+  <entry type=\"KeywordNamespace\" style=\"#ff79c6\"/>\n+  <entry type=\"KeywordPseudo\" style=\"#ff79c6\"/>\n+  <entry type=\"KeywordReserved\" style=\"#ff79c6\"/>\n+  <entry type=\"KeywordType\" style=\"#8be9fd\"/>\n+  <entry type=\"Name\" style=\"#f8f8f2\"/>\n+  <entry type=\"NameAttribute\" style=\"#50fa7b\"/>\n+  <entry type=\"NameBuiltin\" style=\"italic #8be9fd\"/>\n+  <entry type=\"NameBuiltinPseudo\" style=\"#f8f8f2\"/>\n+  <entry type=\"NameClass\" style=\"#50fa7b\"/>\n+  <entry type=\"NameConstant\" style=\"#f8f8f2\"/>\n+  <entry type=\"NameDecorator\" style=\"#f8f8f2\"/>\n+  <entry type=\"NameEntity\" style=\"#f8f8f2\"/>\n+  <entry type=\"NameException\" style=\"#f8f8f2\"/>\n+  <entry type=\"NameFunction\" style=\"#50fa7b\"/>\n+  <entry type=\"NameLabel\" style=\"italic #8be9fd\"/>\n+  <entry type=\"NameNamespace\" style=\"#f8f8f2\"/>\n+  <entry type=\"NameOther\" style=\"#f8f8f2\"/>\n+  <entry type=\"NameTag\" style=\"#ff79c6\"/>\n+  <entry type=\"NameVariable\" style=\"italic #8be9fd\"/>\n+  <entry type=\"NameVariableClass\" style=\"italic #8be9fd\"/>\n+  <entry type=\"NameVariableGlobal\" style=\"italic #8be9fd\"/>\n+  <entry type=\"NameVariableInstance\" style=\"italic #8be9fd\"/>\n+  <entry type=\"Literal\" style=\"#f8f8f2\"/>\n+  <entry type=\"LiteralDate\" style=\"#f8f8f2\"/>\n+  <entry type=\"LiteralString\" style=\"#f1fa8c\"/>\n+  <entry type=\"LiteralStringBacktick\" style=\"#f1fa8c\"/>\n+  <entry type=\"LiteralStringChar\" style=\"#f1fa8c\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#f1fa8c\"/>\n+  <entry type=\"LiteralStringDouble\" style=\"#f1fa8c\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#f1fa8c\"/>\n+  <entry type=\"LiteralStringHeredoc\" style=\"#f1fa8c\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#f1fa8c\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#f1fa8c\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#f1fa8c\"/>\n+  <entry type=\"LiteralStringSingle\" style=\"#f1fa8c\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#f1fa8c\"/>\n+  <entry type=\"LiteralNumber\" style=\"#bd93f9\"/>\n+  <entry type=\"LiteralNumberBin\" style=\"#bd93f9\"/>\n+  <entry type=\"LiteralNumberFloat\" style=\"#bd93f9\"/>\n+  <entry type=\"LiteralNumberHex\" style=\"#bd93f9\"/>\n+  <entry type=\"LiteralNumberInteger\" style=\"#bd93f9\"/>\n+  <entry type=\"LiteralNumberIntegerLong\" style=\"#bd93f9\"/>\n+  <entry type=\"LiteralNumberOct\" style=\"#bd93f9\"/>\n+  <entry type=\"Operator\" style=\"#ff79c6\"/>\n+  <entry type=\"OperatorWord\" style=\"#ff79c6\"/>\n+  <entry type=\"Punctuation\" style=\"#f8f8f2\"/>\n+  <entry type=\"Comment\" style=\"#6272a4\"/>\n+  <entry type=\"CommentHashbang\" style=\"#6272a4\"/>\n+  <entry type=\"CommentMultiline\" style=\"#6272a4\"/>\n+  <entry type=\"CommentSingle\" style=\"#6272a4\"/>\n+  <entry type=\"CommentSpecial\" style=\"#6272a4\"/>\n+  <entry type=\"CommentPreproc\" style=\"#ff79c6\"/>\n+  <entry type=\"Generic\" style=\"#f8f8f2\"/>\n+  <entry type=\"GenericDeleted\" style=\"#ff5555\"/>\n+  <entry type=\"GenericEmph\" style=\"underline #f8f8f2\"/>\n+  <entry type=\"GenericError\" style=\"#f8f8f2\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #f8f8f2\"/>\n+  <entry type=\"GenericInserted\" style=\"bold #50fa7b\"/>\n+  <entry type=\"GenericOutput\" style=\"#44475a\"/>\n+  <entry type=\"GenericPrompt\" style=\"#f8f8f2\"/>\n+  <entry type=\"GenericStrong\" style=\"#f8f8f2\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #f8f8f2\"/>\n+  <entry type=\"GenericTraceback\" style=\"#f8f8f2\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"Text\" style=\"#f8f8f2\"/>\n+  <entry type=\"TextWhitespace\" style=\"#f8f8f2\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "461f1978324ae39732ffa7ff8f326682c7f0e0ba",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/emacs.go",
      "status": "removed",
      "additions": 0,
      "deletions": 51,
      "changes": 51,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Femacs.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Femacs.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Femacs.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,51 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Emacs style.\n-var Emacs = Register(chroma.MustNewStyle(\"emacs\", chroma.StyleEntries{\n-\tchroma.TextWhitespace:        \"#bbbbbb\",\n-\tchroma.Comment:               \"italic #008800\",\n-\tchroma.CommentPreproc:        \"noitalic\",\n-\tchroma.CommentSpecial:        \"noitalic bold\",\n-\tchroma.Keyword:               \"bold #AA22FF\",\n-\tchroma.KeywordPseudo:         \"nobold\",\n-\tchroma.KeywordType:           \"bold #00BB00\",\n-\tchroma.Operator:              \"#666666\",\n-\tchroma.OperatorWord:          \"bold #AA22FF\",\n-\tchroma.NameBuiltin:           \"#AA22FF\",\n-\tchroma.NameFunction:          \"#00A000\",\n-\tchroma.NameClass:             \"#0000FF\",\n-\tchroma.NameNamespace:         \"bold #0000FF\",\n-\tchroma.NameException:         \"bold #D2413A\",\n-\tchroma.NameVariable:          \"#B8860B\",\n-\tchroma.NameConstant:          \"#880000\",\n-\tchroma.NameLabel:             \"#A0A000\",\n-\tchroma.NameEntity:            \"bold #999999\",\n-\tchroma.NameAttribute:         \"#BB4444\",\n-\tchroma.NameTag:               \"bold #008000\",\n-\tchroma.NameDecorator:         \"#AA22FF\",\n-\tchroma.LiteralString:         \"#BB4444\",\n-\tchroma.LiteralStringDoc:      \"italic\",\n-\tchroma.LiteralStringInterpol: \"bold #BB6688\",\n-\tchroma.LiteralStringEscape:   \"bold #BB6622\",\n-\tchroma.LiteralStringRegex:    \"#BB6688\",\n-\tchroma.LiteralStringSymbol:   \"#B8860B\",\n-\tchroma.LiteralStringOther:    \"#008000\",\n-\tchroma.LiteralNumber:         \"#666666\",\n-\tchroma.GenericHeading:        \"bold #000080\",\n-\tchroma.GenericSubheading:     \"bold #800080\",\n-\tchroma.GenericDeleted:        \"#A00000\",\n-\tchroma.GenericInserted:       \"#00A000\",\n-\tchroma.GenericError:          \"#FF0000\",\n-\tchroma.GenericEmph:           \"italic\",\n-\tchroma.GenericStrong:         \"bold\",\n-\tchroma.GenericPrompt:         \"bold #000080\",\n-\tchroma.GenericOutput:         \"#888\",\n-\tchroma.GenericTraceback:      \"#04D\",\n-\tchroma.GenericUnderline:      \"underline\",\n-\tchroma.Error:                 \"border:#FF0000\",\n-\tchroma.Background:            \" bg:#f8f8f8\",\n-}))"
    },
    {
      "sha": "981ce8e40fb3e82254a744719ce694b71f5d7134",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/emacs.xml",
      "status": "added",
      "additions": 44,
      "deletions": 0,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Femacs.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Femacs.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Femacs.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,44 @@\n+<style name=\"emacs\">\n+  <entry type=\"Error\" style=\"border:#ff0000\"/>\n+  <entry type=\"Background\" style=\"bg:#f8f8f8\"/>\n+  <entry type=\"Keyword\" style=\"bold #aa22ff\"/>\n+  <entry type=\"KeywordPseudo\" style=\"nobold\"/>\n+  <entry type=\"KeywordType\" style=\"bold #00bb00\"/>\n+  <entry type=\"NameAttribute\" style=\"#bb4444\"/>\n+  <entry type=\"NameBuiltin\" style=\"#aa22ff\"/>\n+  <entry type=\"NameClass\" style=\"#0000ff\"/>\n+  <entry type=\"NameConstant\" style=\"#880000\"/>\n+  <entry type=\"NameDecorator\" style=\"#aa22ff\"/>\n+  <entry type=\"NameEntity\" style=\"bold #999999\"/>\n+  <entry type=\"NameException\" style=\"bold #d2413a\"/>\n+  <entry type=\"NameFunction\" style=\"#00a000\"/>\n+  <entry type=\"NameLabel\" style=\"#a0a000\"/>\n+  <entry type=\"NameNamespace\" style=\"bold #0000ff\"/>\n+  <entry type=\"NameTag\" style=\"bold #008000\"/>\n+  <entry type=\"NameVariable\" style=\"#b8860b\"/>\n+  <entry type=\"LiteralString\" style=\"#bb4444\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"italic\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"bold #bb6622\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"bold #bb6688\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#008000\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#bb6688\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#b8860b\"/>\n+  <entry type=\"LiteralNumber\" style=\"#666666\"/>\n+  <entry type=\"Operator\" style=\"#666666\"/>\n+  <entry type=\"OperatorWord\" style=\"bold #aa22ff\"/>\n+  <entry type=\"Comment\" style=\"italic #008800\"/>\n+  <entry type=\"CommentSpecial\" style=\"bold noitalic\"/>\n+  <entry type=\"CommentPreproc\" style=\"noitalic\"/>\n+  <entry type=\"GenericDeleted\" style=\"#a00000\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#ff0000\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #000080\"/>\n+  <entry type=\"GenericInserted\" style=\"#00a000\"/>\n+  <entry type=\"GenericOutput\" style=\"#888888\"/>\n+  <entry type=\"GenericPrompt\" style=\"bold #000080\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #800080\"/>\n+  <entry type=\"GenericTraceback\" style=\"#0044dd\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"TextWhitespace\" style=\"#bbbbbb\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "572d0174c96cbd9a96033282e26e38678c7ebc06",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/friendly.go",
      "status": "removed",
      "additions": 0,
      "deletions": 51,
      "changes": 51,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ffriendly.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ffriendly.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ffriendly.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,51 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Friendly style.\n-var Friendly = Register(chroma.MustNewStyle(\"friendly\", chroma.StyleEntries{\n-\tchroma.TextWhitespace:        \"#bbbbbb\",\n-\tchroma.Comment:               \"italic #60a0b0\",\n-\tchroma.CommentPreproc:        \"noitalic #007020\",\n-\tchroma.CommentSpecial:        \"noitalic bg:#fff0f0\",\n-\tchroma.Keyword:               \"bold #007020\",\n-\tchroma.KeywordPseudo:         \"nobold\",\n-\tchroma.KeywordType:           \"nobold #902000\",\n-\tchroma.Operator:              \"#666666\",\n-\tchroma.OperatorWord:          \"bold #007020\",\n-\tchroma.NameBuiltin:           \"#007020\",\n-\tchroma.NameFunction:          \"#06287e\",\n-\tchroma.NameClass:             \"bold #0e84b5\",\n-\tchroma.NameNamespace:         \"bold #0e84b5\",\n-\tchroma.NameException:         \"#007020\",\n-\tchroma.NameVariable:          \"#bb60d5\",\n-\tchroma.NameConstant:          \"#60add5\",\n-\tchroma.NameLabel:             \"bold #002070\",\n-\tchroma.NameEntity:            \"bold #d55537\",\n-\tchroma.NameAttribute:         \"#4070a0\",\n-\tchroma.NameTag:               \"bold #062873\",\n-\tchroma.NameDecorator:         \"bold #555555\",\n-\tchroma.LiteralString:         \"#4070a0\",\n-\tchroma.LiteralStringDoc:      \"italic\",\n-\tchroma.LiteralStringInterpol: \"#70a0d0\",\n-\tchroma.LiteralStringEscape:   \"bold #4070a0\",\n-\tchroma.LiteralStringRegex:    \"#235388\",\n-\tchroma.LiteralStringSymbol:   \"#517918\",\n-\tchroma.LiteralStringOther:    \"#c65d09\",\n-\tchroma.LiteralNumber:         \"#40a070\",\n-\tchroma.GenericHeading:        \"bold #000080\",\n-\tchroma.GenericSubheading:     \"bold #800080\",\n-\tchroma.GenericDeleted:        \"#A00000\",\n-\tchroma.GenericInserted:       \"#00A000\",\n-\tchroma.GenericError:          \"#FF0000\",\n-\tchroma.GenericEmph:           \"italic\",\n-\tchroma.GenericStrong:         \"bold\",\n-\tchroma.GenericPrompt:         \"bold #c65d09\",\n-\tchroma.GenericOutput:         \"#888\",\n-\tchroma.GenericTraceback:      \"#04D\",\n-\tchroma.GenericUnderline:      \"underline\",\n-\tchroma.Error:                 \"border:#FF0000\",\n-\tchroma.Background:            \" bg:#f0f0f0\",\n-}))"
    },
    {
      "sha": "f49801040eb531f59eea12a98ea5115f327fb8bf",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/friendly.xml",
      "status": "added",
      "additions": 44,
      "deletions": 0,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ffriendly.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ffriendly.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ffriendly.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,44 @@\n+<style name=\"friendly\">\n+  <entry type=\"Error\" style=\"border:#ff0000\"/>\n+  <entry type=\"Background\" style=\"bg:#f0f0f0\"/>\n+  <entry type=\"Keyword\" style=\"bold #007020\"/>\n+  <entry type=\"KeywordPseudo\" style=\"nobold\"/>\n+  <entry type=\"KeywordType\" style=\"nobold #902000\"/>\n+  <entry type=\"NameAttribute\" style=\"#4070a0\"/>\n+  <entry type=\"NameBuiltin\" style=\"#007020\"/>\n+  <entry type=\"NameClass\" style=\"bold #0e84b5\"/>\n+  <entry type=\"NameConstant\" style=\"#60add5\"/>\n+  <entry type=\"NameDecorator\" style=\"bold #555555\"/>\n+  <entry type=\"NameEntity\" style=\"bold #d55537\"/>\n+  <entry type=\"NameException\" style=\"#007020\"/>\n+  <entry type=\"NameFunction\" style=\"#06287e\"/>\n+  <entry type=\"NameLabel\" style=\"bold #002070\"/>\n+  <entry type=\"NameNamespace\" style=\"bold #0e84b5\"/>\n+  <entry type=\"NameTag\" style=\"bold #062873\"/>\n+  <entry type=\"NameVariable\" style=\"#bb60d5\"/>\n+  <entry type=\"LiteralString\" style=\"#4070a0\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"italic\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"bold #4070a0\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#70a0d0\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#c65d09\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#235388\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#517918\"/>\n+  <entry type=\"LiteralNumber\" style=\"#40a070\"/>\n+  <entry type=\"Operator\" style=\"#666666\"/>\n+  <entry type=\"OperatorWord\" style=\"bold #007020\"/>\n+  <entry type=\"Comment\" style=\"italic #60a0b0\"/>\n+  <entry type=\"CommentSpecial\" style=\"noitalic bg:#fff0f0\"/>\n+  <entry type=\"CommentPreproc\" style=\"noitalic #007020\"/>\n+  <entry type=\"GenericDeleted\" style=\"#a00000\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#ff0000\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #000080\"/>\n+  <entry type=\"GenericInserted\" style=\"#00a000\"/>\n+  <entry type=\"GenericOutput\" style=\"#888888\"/>\n+  <entry type=\"GenericPrompt\" style=\"bold #c65d09\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #800080\"/>\n+  <entry type=\"GenericTraceback\" style=\"#0044dd\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"TextWhitespace\" style=\"#bbbbbb\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "6ed99b7dcb8731b408899e8e05264f7f982743e5",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/fruity.go",
      "status": "removed",
      "additions": 0,
      "deletions": 26,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ffruity.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ffruity.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ffruity.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,26 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Fruity style.\n-var Fruity = Register(chroma.MustNewStyle(\"fruity\", chroma.StyleEntries{\n-\tchroma.TextWhitespace:    \"#888888\",\n-\tchroma.Background:        \"#ffffff bg:#111111\",\n-\tchroma.GenericOutput:     \"#444444 bg:#222222\",\n-\tchroma.Keyword:           \"#fb660a bold\",\n-\tchroma.KeywordPseudo:     \"nobold\",\n-\tchroma.LiteralNumber:     \"#0086f7 bold\",\n-\tchroma.NameTag:           \"#fb660a bold\",\n-\tchroma.NameVariable:      \"#fb660a\",\n-\tchroma.Comment:           \"#008800 bg:#0f140f italic\",\n-\tchroma.NameAttribute:     \"#ff0086 bold\",\n-\tchroma.LiteralString:     \"#0086d2\",\n-\tchroma.NameFunction:      \"#ff0086 bold\",\n-\tchroma.GenericHeading:    \"#ffffff bold\",\n-\tchroma.KeywordType:       \"#cdcaa9 bold\",\n-\tchroma.GenericSubheading: \"#ffffff bold\",\n-\tchroma.NameConstant:      \"#0086d2\",\n-\tchroma.CommentPreproc:    \"#ff0007 bold\",\n-}))"
    },
    {
      "sha": "bcc06aa7bcfcce42b077b2a3e8f505dee59f6188",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/fruity.xml",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ffruity.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ffruity.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ffruity.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,19 @@\n+<style name=\"fruity\">\n+  <entry type=\"Background\" style=\"#ffffff bg:#111111\"/>\n+  <entry type=\"Keyword\" style=\"bold #fb660a\"/>\n+  <entry type=\"KeywordPseudo\" style=\"nobold\"/>\n+  <entry type=\"KeywordType\" style=\"bold #cdcaa9\"/>\n+  <entry type=\"NameAttribute\" style=\"bold #ff0086\"/>\n+  <entry type=\"NameConstant\" style=\"#0086d2\"/>\n+  <entry type=\"NameFunction\" style=\"bold #ff0086\"/>\n+  <entry type=\"NameTag\" style=\"bold #fb660a\"/>\n+  <entry type=\"NameVariable\" style=\"#fb660a\"/>\n+  <entry type=\"LiteralString\" style=\"#0086d2\"/>\n+  <entry type=\"LiteralNumber\" style=\"bold #0086f7\"/>\n+  <entry type=\"Comment\" style=\"italic #008800 bg:#0f140f\"/>\n+  <entry type=\"CommentPreproc\" style=\"bold #ff0007\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #ffffff\"/>\n+  <entry type=\"GenericOutput\" style=\"#444444 bg:#222222\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #ffffff\"/>\n+  <entry type=\"TextWhitespace\" style=\"#888888\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "48c0d61de631d10fbd39583f6eda527ca233f0d3",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/github-dark.go",
      "status": "removed",
      "additions": 0,
      "deletions": 86,
      "changes": 86,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgithub-dark.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgithub-dark.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgithub-dark.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,86 +0,0 @@\n-package styles\n-\n-import (\n-\t\"fmt\"\n-\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-var (\n-\t// colors used from https://github.com/primer/primitives\n-\tghRed2      = \"#ffa198\"\n-\tghRed3      = \"#ff7b72\"\n-\tghRed9      = \"#490202\"\n-\tghOrange2   = \"#ffa657\"\n-\tghOrange3   = \"#f0883e\"\n-\tghGreen1    = \"#7ee787\"\n-\tghGreen2    = \"#56d364\"\n-\tghGreen7    = \"#0f5323\"\n-\tghBlue1     = \"#a5d6ff\"\n-\tghBlue2     = \"#79c0ff\"\n-\tghPurple2   = \"#d2a8ff\"\n-\tghGray3     = \"#8b949e\"\n-\tghGray4     = \"#6e7681\"\n-\tghFgSubtle  = \"#6e7681\"\n-\tghFgDefault = \"#c9d1d9\"\n-\tghBgDefault = \"#0d1117\"\n-\tghDangerFg  = \"#f85149\"\n-)\n-\n-// GitHub Dark style.\n-var GitHubDark = Register(chroma.MustNewStyle(\"github-dark\", chroma.StyleEntries{\n-\t// Default Token Style\n-\tchroma.Background: fmt.Sprintf(\"bg:%s %s\", ghBgDefault, ghFgDefault),\n-\n-\tchroma.LineNumbers: ghGray4,\n-\t// has transparency in VS Code theme as `colors.codemirror.activelineBg`\n-\tchroma.LineHighlight: ghGray4,\n-\n-\tchroma.Error: ghDangerFg,\n-\n-\tchroma.Keyword:         ghRed3,\n-\tchroma.KeywordConstant: ghBlue2,\n-\tchroma.KeywordPseudo:   ghBlue2,\n-\n-\tchroma.Name:          ghFgDefault,\n-\tchroma.NameClass:     \"bold \" + ghOrange3,\n-\tchroma.NameConstant:  \"bold \" + ghBlue2,\n-\tchroma.NameDecorator: \"bold \" + ghPurple2,\n-\tchroma.NameEntity:    ghOrange2,\n-\tchroma.NameException: \"bold \" + ghOrange3,\n-\tchroma.NameFunction:  \"bold \" + ghPurple2,\n-\tchroma.NameLabel:     \"bold \" + ghBlue2,\n-\tchroma.NameNamespace: ghRed3,\n-\tchroma.NameProperty:  ghBlue2,\n-\tchroma.NameTag:       ghGreen1,\n-\tchroma.NameVariable:  ghBlue2,\n-\n-\tchroma.Literal:                ghBlue1,\n-\tchroma.LiteralDate:            ghBlue2,\n-\tchroma.LiteralStringAffix:     ghBlue2,\n-\tchroma.LiteralStringDelimiter: ghBlue2,\n-\tchroma.LiteralStringEscape:    ghBlue2,\n-\tchroma.LiteralStringHeredoc:   ghBlue2,\n-\tchroma.LiteralStringRegex:     ghBlue2,\n-\n-\tchroma.Operator: \"bold \" + ghRed3,\n-\n-\tchroma.Comment:        \"italic \" + ghGray3,\n-\tchroma.CommentPreproc: \"bold \" + ghGray3,\n-\tchroma.CommentSpecial: \"bold italic \" + ghGray3,\n-\n-\tchroma.Generic:           ghFgDefault,\n-\tchroma.GenericDeleted:    fmt.Sprintf(\"bg:%s %s\", ghRed9, ghRed2),\n-\tchroma.GenericEmph:       \"italic\",\n-\tchroma.GenericError:      ghRed2,\n-\tchroma.GenericHeading:    \"bold \" + ghBlue2,\n-\tchroma.GenericInserted:   fmt.Sprintf(\"bg:%s %s\", ghGreen7, ghGreen2),\n-\tchroma.GenericOutput:     ghGray3,\n-\tchroma.GenericPrompt:     ghGray3,\n-\tchroma.GenericStrong:     \"bold\",\n-\tchroma.GenericSubheading: ghBlue2,\n-\tchroma.GenericTraceback:  ghRed3,\n-\tchroma.GenericUnderline:  \"underline\",\n-\n-\tchroma.TextWhitespace: ghFgSubtle,\n-}))"
    },
    {
      "sha": "7ade2be255658b9ff7625d46e2f0df819910be62",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/github-dark.xml",
      "status": "added",
      "additions": 45,
      "deletions": 0,
      "changes": 45,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgithub-dark.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgithub-dark.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgithub-dark.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,45 @@\n+<style name=\"github-dark\">\n+  <entry type=\"Error\" style=\"#f85149\"/>\n+  <entry type=\"LineHighlight\" style=\"#6e7681\"/>\n+  <entry type=\"LineNumbers\" style=\"#6e7681\"/>\n+  <entry type=\"Background\" style=\"#c9d1d9 bg:#0d1117\"/>\n+  <entry type=\"Keyword\" style=\"#ff7b72\"/>\n+  <entry type=\"KeywordConstant\" style=\"#79c0ff\"/>\n+  <entry type=\"KeywordPseudo\" style=\"#79c0ff\"/>\n+  <entry type=\"Name\" style=\"#c9d1d9\"/>\n+  <entry type=\"NameClass\" style=\"bold #f0883e\"/>\n+  <entry type=\"NameConstant\" style=\"bold #79c0ff\"/>\n+  <entry type=\"NameDecorator\" style=\"bold #d2a8ff\"/>\n+  <entry type=\"NameEntity\" style=\"#ffa657\"/>\n+  <entry type=\"NameException\" style=\"bold #f0883e\"/>\n+  <entry type=\"NameFunction\" style=\"bold #d2a8ff\"/>\n+  <entry type=\"NameLabel\" style=\"bold #79c0ff\"/>\n+  <entry type=\"NameNamespace\" style=\"#ff7b72\"/>\n+  <entry type=\"NameProperty\" style=\"#79c0ff\"/>\n+  <entry type=\"NameTag\" style=\"#7ee787\"/>\n+  <entry type=\"NameVariable\" style=\"#79c0ff\"/>\n+  <entry type=\"Literal\" style=\"#a5d6ff\"/>\n+  <entry type=\"LiteralDate\" style=\"#79c0ff\"/>\n+  <entry type=\"LiteralStringAffix\" style=\"#79c0ff\"/>\n+  <entry type=\"LiteralStringDelimiter\" style=\"#79c0ff\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#79c0ff\"/>\n+  <entry type=\"LiteralStringHeredoc\" style=\"#79c0ff\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#79c0ff\"/>\n+  <entry type=\"Operator\" style=\"bold #ff7b72\"/>\n+  <entry type=\"Comment\" style=\"italic #8b949e\"/>\n+  <entry type=\"CommentSpecial\" style=\"bold italic #8b949e\"/>\n+  <entry type=\"CommentPreproc\" style=\"bold #8b949e\"/>\n+  <entry type=\"Generic\" style=\"#c9d1d9\"/>\n+  <entry type=\"GenericDeleted\" style=\"#ffa198 bg:#490202\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#ffa198\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #79c0ff\"/>\n+  <entry type=\"GenericInserted\" style=\"#56d364 bg:#0f5323\"/>\n+  <entry type=\"GenericOutput\" style=\"#8b949e\"/>\n+  <entry type=\"GenericPrompt\" style=\"#8b949e\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"#79c0ff\"/>\n+  <entry type=\"GenericTraceback\" style=\"#ff7b72\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"TextWhitespace\" style=\"#6e7681\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "b1ef17fa3182360f2114bc7b4a0248a350e7c108",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/github.go",
      "status": "removed",
      "additions": 0,
      "deletions": 51,
      "changes": 51,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgithub.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgithub.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgithub.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,51 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// GitHub style.\n-var GitHub = Register(chroma.MustNewStyle(\"github\", chroma.StyleEntries{\n-\tchroma.CommentMultiline:     \"italic #999988\",\n-\tchroma.CommentPreproc:       \"bold #999999\",\n-\tchroma.CommentSingle:        \"italic #999988\",\n-\tchroma.CommentSpecial:       \"bold italic #999999\",\n-\tchroma.Comment:              \"italic #999988\",\n-\tchroma.Error:                \"bg:#e3d2d2 #a61717\",\n-\tchroma.GenericDeleted:       \"bg:#ffdddd #000000\",\n-\tchroma.GenericEmph:          \"italic #000000\",\n-\tchroma.GenericError:         \"#aa0000\",\n-\tchroma.GenericHeading:       \"#999999\",\n-\tchroma.GenericInserted:      \"bg:#ddffdd #000000\",\n-\tchroma.GenericOutput:        \"#888888\",\n-\tchroma.GenericPrompt:        \"#555555\",\n-\tchroma.GenericStrong:        \"bold\",\n-\tchroma.GenericSubheading:    \"#aaaaaa\",\n-\tchroma.GenericTraceback:     \"#aa0000\",\n-\tchroma.GenericUnderline:     \"underline\",\n-\tchroma.KeywordType:          \"bold #445588\",\n-\tchroma.Keyword:              \"bold #000000\",\n-\tchroma.LiteralNumber:        \"#009999\",\n-\tchroma.LiteralStringRegex:   \"#009926\",\n-\tchroma.LiteralStringSymbol:  \"#990073\",\n-\tchroma.LiteralString:        \"#d14\",\n-\tchroma.NameAttribute:        \"#008080\",\n-\tchroma.NameBuiltinPseudo:    \"#999999\",\n-\tchroma.NameBuiltin:          \"#0086B3\",\n-\tchroma.NameClass:            \"bold #445588\",\n-\tchroma.NameConstant:         \"#008080\",\n-\tchroma.NameDecorator:        \"bold #3c5d5d\",\n-\tchroma.NameEntity:           \"#800080\",\n-\tchroma.NameException:        \"bold #990000\",\n-\tchroma.NameFunction:         \"bold #990000\",\n-\tchroma.NameLabel:            \"bold #990000\",\n-\tchroma.NameNamespace:        \"#555555\",\n-\tchroma.NameTag:              \"#000080\",\n-\tchroma.NameVariableClass:    \"#008080\",\n-\tchroma.NameVariableGlobal:   \"#008080\",\n-\tchroma.NameVariableInstance: \"#008080\",\n-\tchroma.NameVariable:         \"#008080\",\n-\tchroma.Operator:             \"bold #000000\",\n-\tchroma.TextWhitespace:       \"#bbbbbb\",\n-\tchroma.Background:           \" bg:#ffffff\",\n-}))"
    },
    {
      "sha": "e7caee7b668ea83e3f1e2a4692f6315df1cd27ea",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/github.xml",
      "status": "added",
      "additions": 44,
      "deletions": 0,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgithub.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgithub.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgithub.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,44 @@\n+<style name=\"github\">\n+  <entry type=\"Error\" style=\"#a61717 bg:#e3d2d2\"/>\n+  <entry type=\"Background\" style=\"bg:#ffffff\"/>\n+  <entry type=\"Keyword\" style=\"bold #000000\"/>\n+  <entry type=\"KeywordType\" style=\"bold #445588\"/>\n+  <entry type=\"NameAttribute\" style=\"#008080\"/>\n+  <entry type=\"NameBuiltin\" style=\"#0086b3\"/>\n+  <entry type=\"NameBuiltinPseudo\" style=\"#999999\"/>\n+  <entry type=\"NameClass\" style=\"bold #445588\"/>\n+  <entry type=\"NameConstant\" style=\"#008080\"/>\n+  <entry type=\"NameDecorator\" style=\"bold #3c5d5d\"/>\n+  <entry type=\"NameEntity\" style=\"#800080\"/>\n+  <entry type=\"NameException\" style=\"bold #990000\"/>\n+  <entry type=\"NameFunction\" style=\"bold #990000\"/>\n+  <entry type=\"NameLabel\" style=\"bold #990000\"/>\n+  <entry type=\"NameNamespace\" style=\"#555555\"/>\n+  <entry type=\"NameTag\" style=\"#000080\"/>\n+  <entry type=\"NameVariable\" style=\"#008080\"/>\n+  <entry type=\"NameVariableClass\" style=\"#008080\"/>\n+  <entry type=\"NameVariableGlobal\" style=\"#008080\"/>\n+  <entry type=\"NameVariableInstance\" style=\"#008080\"/>\n+  <entry type=\"LiteralString\" style=\"#dd1144\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#009926\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#990073\"/>\n+  <entry type=\"LiteralNumber\" style=\"#009999\"/>\n+  <entry type=\"Operator\" style=\"bold #000000\"/>\n+  <entry type=\"Comment\" style=\"italic #999988\"/>\n+  <entry type=\"CommentMultiline\" style=\"italic #999988\"/>\n+  <entry type=\"CommentSingle\" style=\"italic #999988\"/>\n+  <entry type=\"CommentSpecial\" style=\"bold italic #999999\"/>\n+  <entry type=\"CommentPreproc\" style=\"bold #999999\"/>\n+  <entry type=\"GenericDeleted\" style=\"#000000 bg:#ffdddd\"/>\n+  <entry type=\"GenericEmph\" style=\"italic #000000\"/>\n+  <entry type=\"GenericError\" style=\"#aa0000\"/>\n+  <entry type=\"GenericHeading\" style=\"#999999\"/>\n+  <entry type=\"GenericInserted\" style=\"#000000 bg:#ddffdd\"/>\n+  <entry type=\"GenericOutput\" style=\"#888888\"/>\n+  <entry type=\"GenericPrompt\" style=\"#555555\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"#aaaaaa\"/>\n+  <entry type=\"GenericTraceback\" style=\"#aa0000\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"TextWhitespace\" style=\"#bbbbbb\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "6f6de7cba55f0c88a9b13fd7f4ff486a6c45f368",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/gruvbox-light.go",
      "status": "removed",
      "additions": 0,
      "deletions": 40,
      "changes": 40,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgruvbox-light.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgruvbox-light.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgruvbox-light.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,40 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Gruvbox light style.\n-var GruvboxLight = Register(chroma.MustNewStyle(\"gruvbox-light\", chroma.StyleEntries{\n-\tchroma.CommentPreproc:      \"noinherit #427B58\",\n-\tchroma.Comment:             \"#928374 italic\",\n-\tchroma.GenericDeleted:      \"noinherit #282828 bg:#9D0006\",\n-\tchroma.GenericEmph:         \"#076678 underline\",\n-\tchroma.GenericError:        \"bg:#9D0006 bold\",\n-\tchroma.GenericHeading:      \"#79740E bold\",\n-\tchroma.GenericInserted:     \"noinherit #282828 bg:#79740E\",\n-\tchroma.GenericOutput:       \"noinherit #504945\",\n-\tchroma.GenericPrompt:       \"#3C3836\",\n-\tchroma.GenericStrong:       \"#3C3836\",\n-\tchroma.GenericSubheading:   \"#79740E bold\",\n-\tchroma.GenericTraceback:    \"bg:#3C3836 bold\",\n-\tchroma.Generic:             \"#3C3836\",\n-\tchroma.KeywordType:         \"noinherit #B57614\",\n-\tchroma.Keyword:             \"noinherit #AF3A03\",\n-\tchroma.NameAttribute:       \"#79740E bold\",\n-\tchroma.NameBuiltin:         \"#B57614\",\n-\tchroma.NameConstant:        \"noinherit #d3869b\",\n-\tchroma.NameEntity:          \"noinherit #B57614\",\n-\tchroma.NameException:       \"noinherit #fb4934\",\n-\tchroma.NameFunction:        \"#B57614\",\n-\tchroma.NameLabel:           \"noinherit #9D0006\",\n-\tchroma.NameTag:             \"noinherit #9D0006\",\n-\tchroma.NameVariable:        \"noinherit #3C3836\",\n-\tchroma.Name:                \"#3C3836\",\n-\tchroma.LiteralNumberFloat:  \"noinherit #8F3F71\",\n-\tchroma.LiteralNumber:       \"noinherit #8F3F71\",\n-\tchroma.Operator:            \"#AF3A03\",\n-\tchroma.LiteralStringSymbol: \"#076678\",\n-\tchroma.LiteralString:       \"noinherit #79740E\",\n-\tchroma.Background:          \"noinherit #3C3836 bg:#FBF1C7 bg:#FBF1C7\",\n-}))"
    },
    {
      "sha": "8c4f0642c6489a2e6d2b7fcb8449791f5547e677",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/gruvbox-light.xml",
      "status": "added",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgruvbox-light.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgruvbox-light.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgruvbox-light.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,33 @@\n+<style name=\"gruvbox-light\">\n+  <entry type=\"Background\" style=\"noinherit #3c3836 bg:#fbf1c7\"/>\n+  <entry type=\"Keyword\" style=\"noinherit #af3a03\"/>\n+  <entry type=\"KeywordType\" style=\"noinherit #b57614\"/>\n+  <entry type=\"Name\" style=\"#3c3836\"/>\n+  <entry type=\"NameAttribute\" style=\"bold #79740e\"/>\n+  <entry type=\"NameBuiltin\" style=\"#b57614\"/>\n+  <entry type=\"NameConstant\" style=\"noinherit #d3869b\"/>\n+  <entry type=\"NameEntity\" style=\"noinherit #b57614\"/>\n+  <entry type=\"NameException\" style=\"noinherit #fb4934\"/>\n+  <entry type=\"NameFunction\" style=\"#b57614\"/>\n+  <entry type=\"NameLabel\" style=\"noinherit #9d0006\"/>\n+  <entry type=\"NameTag\" style=\"noinherit #9d0006\"/>\n+  <entry type=\"NameVariable\" style=\"noinherit #3c3836\"/>\n+  <entry type=\"LiteralString\" style=\"noinherit #79740e\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#076678\"/>\n+  <entry type=\"LiteralNumber\" style=\"noinherit #8f3f71\"/>\n+  <entry type=\"LiteralNumberFloat\" style=\"noinherit #8f3f71\"/>\n+  <entry type=\"Operator\" style=\"#af3a03\"/>\n+  <entry type=\"Comment\" style=\"italic #928374\"/>\n+  <entry type=\"CommentPreproc\" style=\"noinherit #427b58\"/>\n+  <entry type=\"Generic\" style=\"#3c3836\"/>\n+  <entry type=\"GenericDeleted\" style=\"noinherit #282828 bg:#9d0006\"/>\n+  <entry type=\"GenericEmph\" style=\"underline #076678\"/>\n+  <entry type=\"GenericError\" style=\"bold bg:#9d0006\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #79740e\"/>\n+  <entry type=\"GenericInserted\" style=\"noinherit #282828 bg:#79740e\"/>\n+  <entry type=\"GenericOutput\" style=\"noinherit #504945\"/>\n+  <entry type=\"GenericPrompt\" style=\"#3c3836\"/>\n+  <entry type=\"GenericStrong\" style=\"#3c3836\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #79740e\"/>\n+  <entry type=\"GenericTraceback\" style=\"bold bg:#3c3836\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "44ccf9be2555c63f04eb86cede9873657eb77c46",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/gruvbox.go",
      "status": "removed",
      "additions": 0,
      "deletions": 40,
      "changes": 40,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgruvbox.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgruvbox.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgruvbox.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,40 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Gruvbox style.\n-var Gruvbox = Register(chroma.MustNewStyle(\"gruvbox\", chroma.StyleEntries{\n-\tchroma.CommentPreproc:      \"noinherit #8ec07c\",\n-\tchroma.Comment:             \"#928374 italic\",\n-\tchroma.GenericDeleted:      \"noinherit #282828 bg:#fb4934\",\n-\tchroma.GenericEmph:         \"#83a598 underline\",\n-\tchroma.GenericError:        \"bg:#fb4934 bold\",\n-\tchroma.GenericHeading:      \"#b8bb26 bold\",\n-\tchroma.GenericInserted:     \"noinherit #282828 bg:#b8bb26\",\n-\tchroma.GenericOutput:       \"noinherit #504945\",\n-\tchroma.GenericPrompt:       \"#ebdbb2\",\n-\tchroma.GenericStrong:       \"#ebdbb2\",\n-\tchroma.GenericSubheading:   \"#b8bb26 bold\",\n-\tchroma.GenericTraceback:    \"bg:#fb4934 bold\",\n-\tchroma.Generic:             \"#ebdbb2\",\n-\tchroma.KeywordType:         \"noinherit #fabd2f\",\n-\tchroma.Keyword:             \"noinherit #fe8019\",\n-\tchroma.NameAttribute:       \"#b8bb26 bold\",\n-\tchroma.NameBuiltin:         \"#fabd2f\",\n-\tchroma.NameConstant:        \"noinherit #d3869b\",\n-\tchroma.NameEntity:          \"noinherit #fabd2f\",\n-\tchroma.NameException:       \"noinherit #fb4934\",\n-\tchroma.NameFunction:        \"#fabd2f\",\n-\tchroma.NameLabel:           \"noinherit #fb4934\",\n-\tchroma.NameTag:             \"noinherit #fb4934\",\n-\tchroma.NameVariable:        \"noinherit #ebdbb2\",\n-\tchroma.Name:                \"#ebdbb2\",\n-\tchroma.LiteralNumberFloat:  \"noinherit #d3869b\",\n-\tchroma.LiteralNumber:       \"noinherit #d3869b\",\n-\tchroma.Operator:            \"#fe8019\",\n-\tchroma.LiteralStringSymbol: \"#83a598\",\n-\tchroma.LiteralString:       \"noinherit #b8bb26\",\n-\tchroma.Background:          \"noinherit #ebdbb2 bg:#282828 bg:#282828\",\n-}))"
    },
    {
      "sha": "2f6a0a2a050c96b7f1f44f80b49471e605652402",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/gruvbox.xml",
      "status": "added",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgruvbox.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgruvbox.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fgruvbox.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,33 @@\n+<style name=\"gruvbox\">\n+  <entry type=\"Background\" style=\"noinherit #ebdbb2 bg:#282828\"/>\n+  <entry type=\"Keyword\" style=\"noinherit #fe8019\"/>\n+  <entry type=\"KeywordType\" style=\"noinherit #fabd2f\"/>\n+  <entry type=\"Name\" style=\"#ebdbb2\"/>\n+  <entry type=\"NameAttribute\" style=\"bold #b8bb26\"/>\n+  <entry type=\"NameBuiltin\" style=\"#fabd2f\"/>\n+  <entry type=\"NameConstant\" style=\"noinherit #d3869b\"/>\n+  <entry type=\"NameEntity\" style=\"noinherit #fabd2f\"/>\n+  <entry type=\"NameException\" style=\"noinherit #fb4934\"/>\n+  <entry type=\"NameFunction\" style=\"#fabd2f\"/>\n+  <entry type=\"NameLabel\" style=\"noinherit #fb4934\"/>\n+  <entry type=\"NameTag\" style=\"noinherit #fb4934\"/>\n+  <entry type=\"NameVariable\" style=\"noinherit #ebdbb2\"/>\n+  <entry type=\"LiteralString\" style=\"noinherit #b8bb26\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#83a598\"/>\n+  <entry type=\"LiteralNumber\" style=\"noinherit #d3869b\"/>\n+  <entry type=\"LiteralNumberFloat\" style=\"noinherit #d3869b\"/>\n+  <entry type=\"Operator\" style=\"#fe8019\"/>\n+  <entry type=\"Comment\" style=\"italic #928374\"/>\n+  <entry type=\"CommentPreproc\" style=\"noinherit #8ec07c\"/>\n+  <entry type=\"Generic\" style=\"#ebdbb2\"/>\n+  <entry type=\"GenericDeleted\" style=\"noinherit #282828 bg:#fb4934\"/>\n+  <entry type=\"GenericEmph\" style=\"underline #83a598\"/>\n+  <entry type=\"GenericError\" style=\"bold bg:#fb4934\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #b8bb26\"/>\n+  <entry type=\"GenericInserted\" style=\"noinherit #282828 bg:#b8bb26\"/>\n+  <entry type=\"GenericOutput\" style=\"noinherit #504945\"/>\n+  <entry type=\"GenericPrompt\" style=\"#ebdbb2\"/>\n+  <entry type=\"GenericStrong\" style=\"#ebdbb2\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #b8bb26\"/>\n+  <entry type=\"GenericTraceback\" style=\"bold bg:#fb4934\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "74867f619cd8fe988216899996b021613272beb5",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/hr_dark.go",
      "status": "removed",
      "additions": 0,
      "deletions": 17,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fhr_dark.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fhr_dark.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fhr_dark.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,17 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Theme based on HackerRank Dark Editor theme\n-var HrDark = Register(chroma.MustNewStyle(\"hrdark\", chroma.StyleEntries{\n-\tchroma.Comment:      \"italic #828b96\",\n-\tchroma.Keyword:      \"#ff636f\",\n-\tchroma.OperatorWord: \"#ff636f\",\n-\tchroma.Name:         \"#58a1dd\",\n-\tchroma.Literal:      \"#a6be9d\",\n-\tchroma.Operator:     \"#ff636f\",\n-\tchroma.Background:   \"#1d2432\",\n-\tchroma.Other:        \"#fff\",\n-}))"
    },
    {
      "sha": "6bf2eb20534645c4165f9a6f9c5011b5ff0957be",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/hr_high_contrast.go",
      "status": "removed",
      "additions": 0,
      "deletions": 19,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fhr_high_contrast.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fhr_high_contrast.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fhr_high_contrast.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,19 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Theme based on HackerRank High Contrast Editor Theme\n-var HrHighContrast = Register(chroma.MustNewStyle(\"hr_high_contrast\", chroma.StyleEntries{\n-\tchroma.Comment:              \"#5a8349\",\n-\tchroma.Keyword:              \"#467faf\",\n-\tchroma.OperatorWord:         \"#467faf\",\n-\tchroma.Name:                 \"#ffffff\",\n-\tchroma.LiteralString:        \"#a87662\",\n-\tchroma.LiteralNumber:        \"#fff\",\n-\tchroma.LiteralStringBoolean: \"#467faf\",\n-\tchroma.Operator:             \"#e4e400\",\n-\tchroma.Background:           \"#000\",\n-\tchroma.Other:                \"#d5d500\",\n-}))"
    },
    {
      "sha": "61cde204a4b32d06f63046a593622d99191faccc",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/hr_high_contrast.xml",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fhr_high_contrast.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fhr_high_contrast.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fhr_high_contrast.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,12 @@\n+<style name=\"hr_high_contrast\">\n+  <entry type=\"Other\" style=\"#d5d500\"/>\n+  <entry type=\"Background\" style=\"#000000\"/>\n+  <entry type=\"Keyword\" style=\"#467faf\"/>\n+  <entry type=\"Name\" style=\"#ffffff\"/>\n+  <entry type=\"LiteralString\" style=\"#a87662\"/>\n+  <entry type=\"LiteralStringBoolean\" style=\"#467faf\"/>\n+  <entry type=\"LiteralNumber\" style=\"#ffffff\"/>\n+  <entry type=\"Operator\" style=\"#e4e400\"/>\n+  <entry type=\"OperatorWord\" style=\"#467faf\"/>\n+  <entry type=\"Comment\" style=\"#5a8349\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "bc7a6f315ec65606b9673a1b0e1d387098d5784f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/hrdark.xml",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fhrdark.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fhrdark.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fhrdark.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,10 @@\n+<style name=\"hrdark\">\n+  <entry type=\"Other\" style=\"#ffffff\"/>\n+  <entry type=\"Background\" style=\"#1d2432\"/>\n+  <entry type=\"Keyword\" style=\"#ff636f\"/>\n+  <entry type=\"Name\" style=\"#58a1dd\"/>\n+  <entry type=\"Literal\" style=\"#a6be9d\"/>\n+  <entry type=\"Operator\" style=\"#ff636f\"/>\n+  <entry type=\"OperatorWord\" style=\"#ff636f\"/>\n+  <entry type=\"Comment\" style=\"italic #828b96\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "fef8eeef26a356aacde01e3ef460e216e8043425",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/igor.go",
      "status": "removed",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Figor.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Figor.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Figor.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,16 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Igor style.\n-var Igor = Register(chroma.MustNewStyle(\"igor\", chroma.StyleEntries{\n-\tchroma.Comment:       \"italic #FF0000\",\n-\tchroma.Keyword:       \"#0000FF\",\n-\tchroma.NameFunction:  \"#C34E00\",\n-\tchroma.NameDecorator: \"#CC00A3\",\n-\tchroma.NameClass:     \"#007575\",\n-\tchroma.LiteralString: \"#009C00\",\n-\tchroma.Background:    \" bg:#ffffff\",\n-}))"
    },
    {
      "sha": "773c83b6034c2bd8521ee094c894f6be2c737879",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/igor.xml",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Figor.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Figor.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Figor.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,9 @@\n+<style name=\"igor\">\n+  <entry type=\"Background\" style=\"bg:#ffffff\"/>\n+  <entry type=\"Keyword\" style=\"#0000ff\"/>\n+  <entry type=\"NameClass\" style=\"#007575\"/>\n+  <entry type=\"NameDecorator\" style=\"#cc00a3\"/>\n+  <entry type=\"NameFunction\" style=\"#c34e00\"/>\n+  <entry type=\"LiteralString\" style=\"#009c00\"/>\n+  <entry type=\"Comment\" style=\"italic #ff0000\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "90999202ca9c757c840f8fd48cec07ed46ca36d9",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/lovelace.go",
      "status": "removed",
      "additions": 0,
      "deletions": 60,
      "changes": 60,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Flovelace.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Flovelace.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Flovelace.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,60 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Lovelace style.\n-var Lovelace = Register(chroma.MustNewStyle(\"lovelace\", chroma.StyleEntries{\n-\tchroma.TextWhitespace:         \"#a89028\",\n-\tchroma.Comment:                \"italic #888888\",\n-\tchroma.CommentHashbang:        \"#287088\",\n-\tchroma.CommentMultiline:       \"#888888\",\n-\tchroma.CommentPreproc:         \"noitalic #289870\",\n-\tchroma.Keyword:                \"#2838b0\",\n-\tchroma.KeywordConstant:        \"italic #444444\",\n-\tchroma.KeywordDeclaration:     \"italic\",\n-\tchroma.KeywordType:            \"italic\",\n-\tchroma.Operator:               \"#666666\",\n-\tchroma.OperatorWord:           \"#a848a8\",\n-\tchroma.Punctuation:            \"#888888\",\n-\tchroma.NameAttribute:          \"#388038\",\n-\tchroma.NameBuiltin:            \"#388038\",\n-\tchroma.NameBuiltinPseudo:      \"italic\",\n-\tchroma.NameClass:              \"#287088\",\n-\tchroma.NameConstant:           \"#b85820\",\n-\tchroma.NameDecorator:          \"#287088\",\n-\tchroma.NameEntity:             \"#709030\",\n-\tchroma.NameException:          \"#908828\",\n-\tchroma.NameFunction:           \"#785840\",\n-\tchroma.NameFunctionMagic:      \"#b85820\",\n-\tchroma.NameLabel:              \"#289870\",\n-\tchroma.NameNamespace:          \"#289870\",\n-\tchroma.NameTag:                \"#2838b0\",\n-\tchroma.NameVariable:           \"#b04040\",\n-\tchroma.NameVariableGlobal:     \"#908828\",\n-\tchroma.NameVariableMagic:      \"#b85820\",\n-\tchroma.LiteralString:          \"#b83838\",\n-\tchroma.LiteralStringAffix:     \"#444444\",\n-\tchroma.LiteralStringChar:      \"#a848a8\",\n-\tchroma.LiteralStringDelimiter: \"#b85820\",\n-\tchroma.LiteralStringDoc:       \"italic #b85820\",\n-\tchroma.LiteralStringEscape:    \"#709030\",\n-\tchroma.LiteralStringInterpol:  \"underline\",\n-\tchroma.LiteralStringOther:     \"#a848a8\",\n-\tchroma.LiteralStringRegex:     \"#a848a8\",\n-\tchroma.LiteralNumber:          \"#444444\",\n-\tchroma.GenericDeleted:         \"#c02828\",\n-\tchroma.GenericEmph:            \"italic\",\n-\tchroma.GenericError:           \"#c02828\",\n-\tchroma.GenericHeading:         \"#666666\",\n-\tchroma.GenericSubheading:      \"#444444\",\n-\tchroma.GenericInserted:        \"#388038\",\n-\tchroma.GenericOutput:          \"#666666\",\n-\tchroma.GenericPrompt:          \"#444444\",\n-\tchroma.GenericStrong:          \"bold\",\n-\tchroma.GenericTraceback:       \"#2838b0\",\n-\tchroma.GenericUnderline:       \"underline\",\n-\tchroma.Error:                  \"bg:#a848a8\",\n-\tchroma.Background:             \" bg:#ffffff\",\n-}))"
    },
    {
      "sha": "e336c930a495610aa6a9d6b4131172d38c7caa6b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/lovelace.xml",
      "status": "added",
      "additions": 53,
      "deletions": 0,
      "changes": 53,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Flovelace.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Flovelace.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Flovelace.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,53 @@\n+<style name=\"lovelace\">\n+  <entry type=\"Error\" style=\"bg:#a848a8\"/>\n+  <entry type=\"Background\" style=\"bg:#ffffff\"/>\n+  <entry type=\"Keyword\" style=\"#2838b0\"/>\n+  <entry type=\"KeywordConstant\" style=\"italic #444444\"/>\n+  <entry type=\"KeywordDeclaration\" style=\"italic\"/>\n+  <entry type=\"KeywordType\" style=\"italic\"/>\n+  <entry type=\"NameAttribute\" style=\"#388038\"/>\n+  <entry type=\"NameBuiltin\" style=\"#388038\"/>\n+  <entry type=\"NameBuiltinPseudo\" style=\"italic\"/>\n+  <entry type=\"NameClass\" style=\"#287088\"/>\n+  <entry type=\"NameConstant\" style=\"#b85820\"/>\n+  <entry type=\"NameDecorator\" style=\"#287088\"/>\n+  <entry type=\"NameEntity\" style=\"#709030\"/>\n+  <entry type=\"NameException\" style=\"#908828\"/>\n+  <entry type=\"NameFunction\" style=\"#785840\"/>\n+  <entry type=\"NameFunctionMagic\" style=\"#b85820\"/>\n+  <entry type=\"NameLabel\" style=\"#289870\"/>\n+  <entry type=\"NameNamespace\" style=\"#289870\"/>\n+  <entry type=\"NameTag\" style=\"#2838b0\"/>\n+  <entry type=\"NameVariable\" style=\"#b04040\"/>\n+  <entry type=\"NameVariableGlobal\" style=\"#908828\"/>\n+  <entry type=\"NameVariableMagic\" style=\"#b85820\"/>\n+  <entry type=\"LiteralString\" style=\"#b83838\"/>\n+  <entry type=\"LiteralStringAffix\" style=\"#444444\"/>\n+  <entry type=\"LiteralStringChar\" style=\"#a848a8\"/>\n+  <entry type=\"LiteralStringDelimiter\" style=\"#b85820\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"italic #b85820\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#709030\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"underline\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#a848a8\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#a848a8\"/>\n+  <entry type=\"LiteralNumber\" style=\"#444444\"/>\n+  <entry type=\"Operator\" style=\"#666666\"/>\n+  <entry type=\"OperatorWord\" style=\"#a848a8\"/>\n+  <entry type=\"Punctuation\" style=\"#888888\"/>\n+  <entry type=\"Comment\" style=\"italic #888888\"/>\n+  <entry type=\"CommentHashbang\" style=\"#287088\"/>\n+  <entry type=\"CommentMultiline\" style=\"#888888\"/>\n+  <entry type=\"CommentPreproc\" style=\"noitalic #289870\"/>\n+  <entry type=\"GenericDeleted\" style=\"#c02828\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#c02828\"/>\n+  <entry type=\"GenericHeading\" style=\"#666666\"/>\n+  <entry type=\"GenericInserted\" style=\"#388038\"/>\n+  <entry type=\"GenericOutput\" style=\"#666666\"/>\n+  <entry type=\"GenericPrompt\" style=\"#444444\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"#444444\"/>\n+  <entry type=\"GenericTraceback\" style=\"#2838b0\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"TextWhitespace\" style=\"#a89028\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "c958176100debfe48a5ea22c214c72ca08013e26",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/manni.go",
      "status": "removed",
      "additions": 0,
      "deletions": 51,
      "changes": 51,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmanni.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmanni.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmanni.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,51 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Manni style.\n-var Manni = Register(chroma.MustNewStyle(\"manni\", chroma.StyleEntries{\n-\tchroma.TextWhitespace:        \"#bbbbbb\",\n-\tchroma.Comment:               \"italic #0099FF\",\n-\tchroma.CommentPreproc:        \"noitalic #009999\",\n-\tchroma.CommentSpecial:        \"bold\",\n-\tchroma.Keyword:               \"bold #006699\",\n-\tchroma.KeywordPseudo:         \"nobold\",\n-\tchroma.KeywordType:           \"#007788\",\n-\tchroma.Operator:              \"#555555\",\n-\tchroma.OperatorWord:          \"bold #000000\",\n-\tchroma.NameBuiltin:           \"#336666\",\n-\tchroma.NameFunction:          \"#CC00FF\",\n-\tchroma.NameClass:             \"bold #00AA88\",\n-\tchroma.NameNamespace:         \"bold #00CCFF\",\n-\tchroma.NameException:         \"bold #CC0000\",\n-\tchroma.NameVariable:          \"#003333\",\n-\tchroma.NameConstant:          \"#336600\",\n-\tchroma.NameLabel:             \"#9999FF\",\n-\tchroma.NameEntity:            \"bold #999999\",\n-\tchroma.NameAttribute:         \"#330099\",\n-\tchroma.NameTag:               \"bold #330099\",\n-\tchroma.NameDecorator:         \"#9999FF\",\n-\tchroma.LiteralString:         \"#CC3300\",\n-\tchroma.LiteralStringDoc:      \"italic\",\n-\tchroma.LiteralStringInterpol: \"#AA0000\",\n-\tchroma.LiteralStringEscape:   \"bold #CC3300\",\n-\tchroma.LiteralStringRegex:    \"#33AAAA\",\n-\tchroma.LiteralStringSymbol:   \"#FFCC33\",\n-\tchroma.LiteralStringOther:    \"#CC3300\",\n-\tchroma.LiteralNumber:         \"#FF6600\",\n-\tchroma.GenericHeading:        \"bold #003300\",\n-\tchroma.GenericSubheading:     \"bold #003300\",\n-\tchroma.GenericDeleted:        \"border:#CC0000 bg:#FFCCCC\",\n-\tchroma.GenericInserted:       \"border:#00CC00 bg:#CCFFCC\",\n-\tchroma.GenericError:          \"#FF0000\",\n-\tchroma.GenericEmph:           \"italic\",\n-\tchroma.GenericStrong:         \"bold\",\n-\tchroma.GenericPrompt:         \"bold #000099\",\n-\tchroma.GenericOutput:         \"#AAAAAA\",\n-\tchroma.GenericTraceback:      \"#99CC66\",\n-\tchroma.GenericUnderline:      \"underline\",\n-\tchroma.Error:                 \"bg:#FFAAAA #AA0000\",\n-\tchroma.Background:            \" bg:#f0f3f3\",\n-}))"
    },
    {
      "sha": "99324bd3b12ca95dd8a3798b3cfb52457a1a6b19",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/manni.xml",
      "status": "added",
      "additions": 44,
      "deletions": 0,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmanni.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmanni.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmanni.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,44 @@\n+<style name=\"manni\">\n+  <entry type=\"Error\" style=\"#aa0000 bg:#ffaaaa\"/>\n+  <entry type=\"Background\" style=\"bg:#f0f3f3\"/>\n+  <entry type=\"Keyword\" style=\"bold #006699\"/>\n+  <entry type=\"KeywordPseudo\" style=\"nobold\"/>\n+  <entry type=\"KeywordType\" style=\"#007788\"/>\n+  <entry type=\"NameAttribute\" style=\"#330099\"/>\n+  <entry type=\"NameBuiltin\" style=\"#336666\"/>\n+  <entry type=\"NameClass\" style=\"bold #00aa88\"/>\n+  <entry type=\"NameConstant\" style=\"#336600\"/>\n+  <entry type=\"NameDecorator\" style=\"#9999ff\"/>\n+  <entry type=\"NameEntity\" style=\"bold #999999\"/>\n+  <entry type=\"NameException\" style=\"bold #cc0000\"/>\n+  <entry type=\"NameFunction\" style=\"#cc00ff\"/>\n+  <entry type=\"NameLabel\" style=\"#9999ff\"/>\n+  <entry type=\"NameNamespace\" style=\"bold #00ccff\"/>\n+  <entry type=\"NameTag\" style=\"bold #330099\"/>\n+  <entry type=\"NameVariable\" style=\"#003333\"/>\n+  <entry type=\"LiteralString\" style=\"#cc3300\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"italic\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"bold #cc3300\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#aa0000\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#cc3300\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#33aaaa\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#ffcc33\"/>\n+  <entry type=\"LiteralNumber\" style=\"#ff6600\"/>\n+  <entry type=\"Operator\" style=\"#555555\"/>\n+  <entry type=\"OperatorWord\" style=\"bold #000000\"/>\n+  <entry type=\"Comment\" style=\"italic #0099ff\"/>\n+  <entry type=\"CommentSpecial\" style=\"bold\"/>\n+  <entry type=\"CommentPreproc\" style=\"noitalic #009999\"/>\n+  <entry type=\"GenericDeleted\" style=\"bg:#ffcccc border:#cc0000\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#ff0000\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #003300\"/>\n+  <entry type=\"GenericInserted\" style=\"bg:#ccffcc border:#00cc00\"/>\n+  <entry type=\"GenericOutput\" style=\"#aaaaaa\"/>\n+  <entry type=\"GenericPrompt\" style=\"bold #000099\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #003300\"/>\n+  <entry type=\"GenericTraceback\" style=\"#99cc66\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"TextWhitespace\" style=\"#bbbbbb\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "023137aae550d9ed44b4e608410d8f0a1a641fff",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/modus-operandi.xml",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmodus-operandi.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmodus-operandi.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmodus-operandi.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,13 @@\n+<style name=\"modus-operandi\">\n+  <entry type=\"Background\" style=\"#000000 bg:#ffffff\"/>\n+  <entry type=\"Keyword\" style=\"#5317ac\"/>\n+  <entry type=\"KeywordConstant\" style=\"#0000c0\"/>\n+  <entry type=\"KeywordType\" style=\"#005a5f\"/>\n+  <entry type=\"NameBuiltin\" style=\"#8f0075\"/>\n+  <entry type=\"NameFunction\" style=\"#721045\"/>\n+  <entry type=\"NameVariable\" style=\"#00538b\"/>\n+  <entry type=\"Literal\" style=\"#0000c0\"/>\n+  <entry type=\"LiteralString\" style=\"#2544bb\"/>\n+  <entry type=\"Operator\" style=\"#00538b\"/>\n+  <entry type=\"Comment\" style=\"#505050\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "8da663dcc0c763a9d975ebf7b8ffba6380d51b42",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/modus-vivendi.xml",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmodus-vivendi.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmodus-vivendi.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmodus-vivendi.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,13 @@\n+<style name=\"modus-vivendi\">\n+  <entry type=\"Background\" style=\"#ffffff bg:#000000\"/>\n+  <entry type=\"Keyword\" style=\"#b6a0ff\"/>\n+  <entry type=\"KeywordConstant\" style=\"#00bcff\"/>\n+  <entry type=\"KeywordType\" style=\"#6ae4b9\"/>\n+  <entry type=\"NameBuiltin\" style=\"#f78fe7\"/>\n+  <entry type=\"NameFunction\" style=\"#feacd0\"/>\n+  <entry type=\"NameVariable\" style=\"#00d3d0\"/>\n+  <entry type=\"Literal\" style=\"#00bcff\"/>\n+  <entry type=\"LiteralString\" style=\"#79a8ff\"/>\n+  <entry type=\"Operator\" style=\"#00d3d0\"/>\n+  <entry type=\"Comment\" style=\"#a8a8a8\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "85647a2969c969f4878a4f669cdf40b28c6be85f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/monokai.go",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmonokai.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmonokai.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmonokai.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,36 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Monokai style.\n-var Monokai = Register(chroma.MustNewStyle(\"monokai\", chroma.StyleEntries{\n-\tchroma.Text:                \"#f8f8f2\",\n-\tchroma.Error:               \"#960050 bg:#1e0010\",\n-\tchroma.Comment:             \"#75715e\",\n-\tchroma.Keyword:             \"#66d9ef\",\n-\tchroma.KeywordNamespace:    \"#f92672\",\n-\tchroma.Operator:            \"#f92672\",\n-\tchroma.Punctuation:         \"#f8f8f2\",\n-\tchroma.Name:                \"#f8f8f2\",\n-\tchroma.NameAttribute:       \"#a6e22e\",\n-\tchroma.NameClass:           \"#a6e22e\",\n-\tchroma.NameConstant:        \"#66d9ef\",\n-\tchroma.NameDecorator:       \"#a6e22e\",\n-\tchroma.NameException:       \"#a6e22e\",\n-\tchroma.NameFunction:        \"#a6e22e\",\n-\tchroma.NameOther:           \"#a6e22e\",\n-\tchroma.NameTag:             \"#f92672\",\n-\tchroma.LiteralNumber:       \"#ae81ff\",\n-\tchroma.Literal:             \"#ae81ff\",\n-\tchroma.LiteralDate:         \"#e6db74\",\n-\tchroma.LiteralString:       \"#e6db74\",\n-\tchroma.LiteralStringEscape: \"#ae81ff\",\n-\tchroma.GenericDeleted:      \"#f92672\",\n-\tchroma.GenericEmph:         \"italic\",\n-\tchroma.GenericInserted:     \"#a6e22e\",\n-\tchroma.GenericStrong:       \"bold\",\n-\tchroma.GenericSubheading:   \"#75715e\",\n-\tchroma.Background:          \"bg:#272822\",\n-}))"
    },
    {
      "sha": "1a789ddec58fdac179c69160b7b56709a93d4555",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/monokai.xml",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmonokai.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmonokai.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmonokai.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,29 @@\n+<style name=\"monokai\">\n+  <entry type=\"Error\" style=\"#960050 bg:#1e0010\"/>\n+  <entry type=\"Background\" style=\"bg:#272822\"/>\n+  <entry type=\"Keyword\" style=\"#66d9ef\"/>\n+  <entry type=\"KeywordNamespace\" style=\"#f92672\"/>\n+  <entry type=\"Name\" style=\"#f8f8f2\"/>\n+  <entry type=\"NameAttribute\" style=\"#a6e22e\"/>\n+  <entry type=\"NameClass\" style=\"#a6e22e\"/>\n+  <entry type=\"NameConstant\" style=\"#66d9ef\"/>\n+  <entry type=\"NameDecorator\" style=\"#a6e22e\"/>\n+  <entry type=\"NameException\" style=\"#a6e22e\"/>\n+  <entry type=\"NameFunction\" style=\"#a6e22e\"/>\n+  <entry type=\"NameOther\" style=\"#a6e22e\"/>\n+  <entry type=\"NameTag\" style=\"#f92672\"/>\n+  <entry type=\"Literal\" style=\"#ae81ff\"/>\n+  <entry type=\"LiteralDate\" style=\"#e6db74\"/>\n+  <entry type=\"LiteralString\" style=\"#e6db74\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#ae81ff\"/>\n+  <entry type=\"LiteralNumber\" style=\"#ae81ff\"/>\n+  <entry type=\"Operator\" style=\"#f92672\"/>\n+  <entry type=\"Punctuation\" style=\"#f8f8f2\"/>\n+  <entry type=\"Comment\" style=\"#75715e\"/>\n+  <entry type=\"GenericDeleted\" style=\"#f92672\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericInserted\" style=\"#a6e22e\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"#75715e\"/>\n+  <entry type=\"Text\" style=\"#f8f8f2\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "74af78e5e7acfe1b6c49f0b08cf3a38b3776b8b2",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/monokailight.go",
      "status": "removed",
      "additions": 0,
      "deletions": 33,
      "changes": 33,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmonokailight.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmonokailight.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmonokailight.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,33 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// MonokaiLight style.\n-var MonokaiLight = Register(chroma.MustNewStyle(\"monokailight\", chroma.StyleEntries{\n-\tchroma.Text:                \"#272822\",\n-\tchroma.Error:               \"#960050 bg:#1e0010\",\n-\tchroma.Comment:             \"#75715e\",\n-\tchroma.Keyword:             \"#00a8c8\",\n-\tchroma.KeywordNamespace:    \"#f92672\",\n-\tchroma.Operator:            \"#f92672\",\n-\tchroma.Punctuation:         \"#111111\",\n-\tchroma.Name:                \"#111111\",\n-\tchroma.NameAttribute:       \"#75af00\",\n-\tchroma.NameClass:           \"#75af00\",\n-\tchroma.NameConstant:        \"#00a8c8\",\n-\tchroma.NameDecorator:       \"#75af00\",\n-\tchroma.NameException:       \"#75af00\",\n-\tchroma.NameFunction:        \"#75af00\",\n-\tchroma.NameOther:           \"#75af00\",\n-\tchroma.NameTag:             \"#f92672\",\n-\tchroma.LiteralNumber:       \"#ae81ff\",\n-\tchroma.Literal:             \"#ae81ff\",\n-\tchroma.LiteralDate:         \"#d88200\",\n-\tchroma.LiteralString:       \"#d88200\",\n-\tchroma.LiteralStringEscape: \"#8045FF\",\n-\tchroma.GenericEmph:         \"italic\",\n-\tchroma.GenericStrong:       \"bold\",\n-\tchroma.Background:          \" bg:#fafafa\",\n-}))"
    },
    {
      "sha": "85cd23e008687fa1ad33d47542501ee180f95976",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/monokailight.xml",
      "status": "added",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmonokailight.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmonokailight.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmonokailight.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,26 @@\n+<style name=\"monokailight\">\n+  <entry type=\"Error\" style=\"#960050 bg:#1e0010\"/>\n+  <entry type=\"Background\" style=\"bg:#fafafa\"/>\n+  <entry type=\"Keyword\" style=\"#00a8c8\"/>\n+  <entry type=\"KeywordNamespace\" style=\"#f92672\"/>\n+  <entry type=\"Name\" style=\"#111111\"/>\n+  <entry type=\"NameAttribute\" style=\"#75af00\"/>\n+  <entry type=\"NameClass\" style=\"#75af00\"/>\n+  <entry type=\"NameConstant\" style=\"#00a8c8\"/>\n+  <entry type=\"NameDecorator\" style=\"#75af00\"/>\n+  <entry type=\"NameException\" style=\"#75af00\"/>\n+  <entry type=\"NameFunction\" style=\"#75af00\"/>\n+  <entry type=\"NameOther\" style=\"#75af00\"/>\n+  <entry type=\"NameTag\" style=\"#f92672\"/>\n+  <entry type=\"Literal\" style=\"#ae81ff\"/>\n+  <entry type=\"LiteralDate\" style=\"#d88200\"/>\n+  <entry type=\"LiteralString\" style=\"#d88200\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#8045ff\"/>\n+  <entry type=\"LiteralNumber\" style=\"#ae81ff\"/>\n+  <entry type=\"Operator\" style=\"#f92672\"/>\n+  <entry type=\"Punctuation\" style=\"#111111\"/>\n+  <entry type=\"Comment\" style=\"#75715e\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"Text\" style=\"#272822\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "d0d6ae0818ca052f4952708ff94a6d6f1fb166fa",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/murphy.go",
      "status": "removed",
      "additions": 0,
      "deletions": 59,
      "changes": 59,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmurphy.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmurphy.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmurphy.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,59 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Murphy style.\n-var Murphy = Register(chroma.MustNewStyle(\"murphy\", chroma.StyleEntries{\n-\tchroma.TextWhitespace:        \"#bbbbbb\",\n-\tchroma.Comment:               \"#666 italic\",\n-\tchroma.CommentPreproc:        \"#579 noitalic\",\n-\tchroma.CommentSpecial:        \"#c00 bold\",\n-\tchroma.Keyword:               \"bold #289\",\n-\tchroma.KeywordPseudo:         \"#08f\",\n-\tchroma.KeywordType:           \"#66f\",\n-\tchroma.Operator:              \"#333\",\n-\tchroma.OperatorWord:          \"bold #000\",\n-\tchroma.NameBuiltin:           \"#072\",\n-\tchroma.NameFunction:          \"bold #5ed\",\n-\tchroma.NameClass:             \"bold #e9e\",\n-\tchroma.NameNamespace:         \"bold #0e84b5\",\n-\tchroma.NameException:         \"bold #F00\",\n-\tchroma.NameVariable:          \"#036\",\n-\tchroma.NameVariableInstance:  \"#aaf\",\n-\tchroma.NameVariableClass:     \"#ccf\",\n-\tchroma.NameVariableGlobal:    \"#f84\",\n-\tchroma.NameConstant:          \"bold #5ed\",\n-\tchroma.NameLabel:             \"bold #970\",\n-\tchroma.NameEntity:            \"#800\",\n-\tchroma.NameAttribute:         \"#007\",\n-\tchroma.NameTag:               \"#070\",\n-\tchroma.NameDecorator:         \"bold #555\",\n-\tchroma.LiteralString:         \"bg:#e0e0ff\",\n-\tchroma.LiteralStringChar:     \"#88F bg:\",\n-\tchroma.LiteralStringDoc:      \"#D42 bg:\",\n-\tchroma.LiteralStringInterpol: \"bg:#eee\",\n-\tchroma.LiteralStringEscape:   \"bold #666\",\n-\tchroma.LiteralStringRegex:    \"bg:#e0e0ff #000\",\n-\tchroma.LiteralStringSymbol:   \"#fc8 bg:\",\n-\tchroma.LiteralStringOther:    \"#f88\",\n-\tchroma.LiteralNumber:         \"bold #60E\",\n-\tchroma.LiteralNumberInteger:  \"bold #66f\",\n-\tchroma.LiteralNumberFloat:    \"bold #60E\",\n-\tchroma.LiteralNumberHex:      \"bold #058\",\n-\tchroma.LiteralNumberOct:      \"bold #40E\",\n-\tchroma.GenericHeading:        \"bold #000080\",\n-\tchroma.GenericSubheading:     \"bold #800080\",\n-\tchroma.GenericDeleted:        \"#A00000\",\n-\tchroma.GenericInserted:       \"#00A000\",\n-\tchroma.GenericError:          \"#FF0000\",\n-\tchroma.GenericEmph:           \"italic\",\n-\tchroma.GenericStrong:         \"bold\",\n-\tchroma.GenericPrompt:         \"bold #c65d09\",\n-\tchroma.GenericOutput:         \"#888\",\n-\tchroma.GenericTraceback:      \"#04D\",\n-\tchroma.GenericUnderline:      \"underline\",\n-\tchroma.Error:                 \"#F00 bg:#FAA\",\n-\tchroma.Background:            \" bg:#ffffff\",\n-}))"
    },
    {
      "sha": "112d6205c5b71d227331d34288ff1c42c9ef9ede",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/murphy.xml",
      "status": "added",
      "additions": 52,
      "deletions": 0,
      "changes": 52,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmurphy.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmurphy.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fmurphy.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,52 @@\n+<style name=\"murphy\">\n+  <entry type=\"Error\" style=\"#ff0000 bg:#ffaaaa\"/>\n+  <entry type=\"Background\" style=\"bg:#ffffff\"/>\n+  <entry type=\"Keyword\" style=\"bold #228899\"/>\n+  <entry type=\"KeywordPseudo\" style=\"#0088ff\"/>\n+  <entry type=\"KeywordType\" style=\"#6666ff\"/>\n+  <entry type=\"NameAttribute\" style=\"#000077\"/>\n+  <entry type=\"NameBuiltin\" style=\"#007722\"/>\n+  <entry type=\"NameClass\" style=\"bold #ee99ee\"/>\n+  <entry type=\"NameConstant\" style=\"bold #55eedd\"/>\n+  <entry type=\"NameDecorator\" style=\"bold #555555\"/>\n+  <entry type=\"NameEntity\" style=\"#880000\"/>\n+  <entry type=\"NameException\" style=\"bold #ff0000\"/>\n+  <entry type=\"NameFunction\" style=\"bold #55eedd\"/>\n+  <entry type=\"NameLabel\" style=\"bold #997700\"/>\n+  <entry type=\"NameNamespace\" style=\"bold #0e84b5\"/>\n+  <entry type=\"NameTag\" style=\"#007700\"/>\n+  <entry type=\"NameVariable\" style=\"#003366\"/>\n+  <entry type=\"NameVariableClass\" style=\"#ccccff\"/>\n+  <entry type=\"NameVariableGlobal\" style=\"#ff8844\"/>\n+  <entry type=\"NameVariableInstance\" style=\"#aaaaff\"/>\n+  <entry type=\"LiteralString\" style=\"bg:#e0e0ff\"/>\n+  <entry type=\"LiteralStringChar\" style=\"#8888ff\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#dd4422\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"bold #666666\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"bg:#eeeeee\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#ff8888\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#000000 bg:#e0e0ff\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#ffcc88\"/>\n+  <entry type=\"LiteralNumber\" style=\"bold #6600ee\"/>\n+  <entry type=\"LiteralNumberFloat\" style=\"bold #6600ee\"/>\n+  <entry type=\"LiteralNumberHex\" style=\"bold #005588\"/>\n+  <entry type=\"LiteralNumberInteger\" style=\"bold #6666ff\"/>\n+  <entry type=\"LiteralNumberOct\" style=\"bold #4400ee\"/>\n+  <entry type=\"Operator\" style=\"#333333\"/>\n+  <entry type=\"OperatorWord\" style=\"bold #000000\"/>\n+  <entry type=\"Comment\" style=\"italic #666666\"/>\n+  <entry type=\"CommentSpecial\" style=\"bold #cc0000\"/>\n+  <entry type=\"CommentPreproc\" style=\"noitalic #557799\"/>\n+  <entry type=\"GenericDeleted\" style=\"#a00000\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#ff0000\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #000080\"/>\n+  <entry type=\"GenericInserted\" style=\"#00a000\"/>\n+  <entry type=\"GenericOutput\" style=\"#888888\"/>\n+  <entry type=\"GenericPrompt\" style=\"bold #c65d09\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #800080\"/>\n+  <entry type=\"GenericTraceback\" style=\"#0044dd\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"TextWhitespace\" style=\"#bbbbbb\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "2c6dfdb417105b2b79c3abe5125ae8780524ab2d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/native.go",
      "status": "removed",
      "additions": 0,
      "deletions": 42,
      "changes": 42,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fnative.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fnative.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fnative.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,42 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Native style.\n-var Native = Register(chroma.MustNewStyle(\"native\", chroma.StyleEntries{\n-\tchroma.Background:         \"#d0d0d0 bg:#202020\",\n-\tchroma.TextWhitespace:     \"#666666\",\n-\tchroma.Comment:            \"italic #999999\",\n-\tchroma.CommentPreproc:     \"noitalic bold #cd2828\",\n-\tchroma.CommentSpecial:     \"noitalic bold #e50808 bg:#520000\",\n-\tchroma.Keyword:            \"bold #6ab825\",\n-\tchroma.KeywordPseudo:      \"nobold\",\n-\tchroma.OperatorWord:       \"bold #6ab825\",\n-\tchroma.LiteralString:      \"#ed9d13\",\n-\tchroma.LiteralStringOther: \"#ffa500\",\n-\tchroma.LiteralNumber:      \"#3677a9\",\n-\tchroma.NameBuiltin:        \"#24909d\",\n-\tchroma.NameVariable:       \"#40ffff\",\n-\tchroma.NameConstant:       \"#40ffff\",\n-\tchroma.NameClass:          \"underline #447fcf\",\n-\tchroma.NameFunction:       \"#447fcf\",\n-\tchroma.NameNamespace:      \"underline #447fcf\",\n-\tchroma.NameException:      \"#bbbbbb\",\n-\tchroma.NameTag:            \"bold #6ab825\",\n-\tchroma.NameAttribute:      \"#bbbbbb\",\n-\tchroma.NameDecorator:      \"#ffa500\",\n-\tchroma.GenericHeading:     \"bold #ffffff\",\n-\tchroma.GenericSubheading:  \"underline #ffffff\",\n-\tchroma.GenericDeleted:     \"#d22323\",\n-\tchroma.GenericInserted:    \"#589819\",\n-\tchroma.GenericError:       \"#d22323\",\n-\tchroma.GenericEmph:        \"italic\",\n-\tchroma.GenericStrong:      \"bold\",\n-\tchroma.GenericPrompt:      \"#aaaaaa\",\n-\tchroma.GenericOutput:      \"#cccccc\",\n-\tchroma.GenericTraceback:   \"#d22323\",\n-\tchroma.GenericUnderline:   \"underline\",\n-\tchroma.Error:              \"bg:#e3d2d2 #a61717\",\n-}))"
    },
    {
      "sha": "43eea7fd53724e0f316f7a2f48f76e1c04eb305d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/native.xml",
      "status": "added",
      "additions": 35,
      "deletions": 0,
      "changes": 35,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fnative.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fnative.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fnative.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,35 @@\n+<style name=\"native\">\n+  <entry type=\"Error\" style=\"#a61717 bg:#e3d2d2\"/>\n+  <entry type=\"Background\" style=\"#d0d0d0 bg:#202020\"/>\n+  <entry type=\"Keyword\" style=\"bold #6ab825\"/>\n+  <entry type=\"KeywordPseudo\" style=\"nobold\"/>\n+  <entry type=\"NameAttribute\" style=\"#bbbbbb\"/>\n+  <entry type=\"NameBuiltin\" style=\"#24909d\"/>\n+  <entry type=\"NameClass\" style=\"underline #447fcf\"/>\n+  <entry type=\"NameConstant\" style=\"#40ffff\"/>\n+  <entry type=\"NameDecorator\" style=\"#ffa500\"/>\n+  <entry type=\"NameException\" style=\"#bbbbbb\"/>\n+  <entry type=\"NameFunction\" style=\"#447fcf\"/>\n+  <entry type=\"NameNamespace\" style=\"underline #447fcf\"/>\n+  <entry type=\"NameTag\" style=\"bold #6ab825\"/>\n+  <entry type=\"NameVariable\" style=\"#40ffff\"/>\n+  <entry type=\"LiteralString\" style=\"#ed9d13\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#ffa500\"/>\n+  <entry type=\"LiteralNumber\" style=\"#3677a9\"/>\n+  <entry type=\"OperatorWord\" style=\"bold #6ab825\"/>\n+  <entry type=\"Comment\" style=\"italic #999999\"/>\n+  <entry type=\"CommentSpecial\" style=\"bold noitalic #e50808 bg:#520000\"/>\n+  <entry type=\"CommentPreproc\" style=\"bold noitalic #cd2828\"/>\n+  <entry type=\"GenericDeleted\" style=\"#d22323\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#d22323\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #ffffff\"/>\n+  <entry type=\"GenericInserted\" style=\"#589819\"/>\n+  <entry type=\"GenericOutput\" style=\"#cccccc\"/>\n+  <entry type=\"GenericPrompt\" style=\"#aaaaaa\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"underline #ffffff\"/>\n+  <entry type=\"GenericTraceback\" style=\"#d22323\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"TextWhitespace\" style=\"#666666\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "77635412e829d29515d242aa5da36e4ea94dc7b4",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/nord.go",
      "status": "removed",
      "additions": 0,
      "deletions": 75,
      "changes": 75,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fnord.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fnord.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fnord.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,75 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-var (\n-\t// colors and palettes based on https://www.nordtheme.com/docs/colors-and-palettes\n-\tnord0  = \"#2e3440\"\n-\tnord1  = \"#3b4252\" // nolint\n-\tnord2  = \"#434c5e\" // nolint\n-\tnord3  = \"#4c566a\"\n-\tnord3b = \"#616e87\"\n-\n-\tnord4 = \"#d8dee9\"\n-\tnord5 = \"#e5e9f0\" // nolint\n-\tnord6 = \"#eceff4\"\n-\n-\tnord7  = \"#8fbcbb\"\n-\tnord8  = \"#88c0d0\"\n-\tnord9  = \"#81a1c1\"\n-\tnord10 = \"#5e81ac\"\n-\n-\tnord11 = \"#bf616a\"\n-\tnord12 = \"#d08770\"\n-\tnord13 = \"#ebcb8b\"\n-\tnord14 = \"#a3be8c\"\n-\tnord15 = \"#b48ead\"\n-)\n-\n-// Nord, an arctic, north-bluish color palette\n-var Nord = Register(chroma.MustNewStyle(\"nord\", chroma.StyleEntries{\n-\tchroma.TextWhitespace:        nord4,\n-\tchroma.Comment:               \"italic \" + nord3b,\n-\tchroma.CommentPreproc:        nord10,\n-\tchroma.Keyword:               \"bold \" + nord9,\n-\tchroma.KeywordPseudo:         \"nobold \" + nord9,\n-\tchroma.KeywordType:           \"nobold \" + nord9,\n-\tchroma.Operator:              nord9,\n-\tchroma.OperatorWord:          \"bold \" + nord9,\n-\tchroma.Name:                  nord4,\n-\tchroma.NameBuiltin:           nord9,\n-\tchroma.NameFunction:          nord8,\n-\tchroma.NameClass:             nord7,\n-\tchroma.NameNamespace:         nord7,\n-\tchroma.NameException:         nord11,\n-\tchroma.NameVariable:          nord4,\n-\tchroma.NameConstant:          nord7,\n-\tchroma.NameLabel:             nord7,\n-\tchroma.NameEntity:            nord12,\n-\tchroma.NameAttribute:         nord7,\n-\tchroma.NameTag:               nord9,\n-\tchroma.NameDecorator:         nord12,\n-\tchroma.Punctuation:           nord6,\n-\tchroma.LiteralString:         nord14,\n-\tchroma.LiteralStringDoc:      nord3b,\n-\tchroma.LiteralStringInterpol: nord14,\n-\tchroma.LiteralStringEscape:   nord13,\n-\tchroma.LiteralStringRegex:    nord13,\n-\tchroma.LiteralStringSymbol:   nord14,\n-\tchroma.LiteralStringOther:    nord14,\n-\tchroma.LiteralNumber:         nord15,\n-\tchroma.GenericHeading:        \"bold \" + nord8,\n-\tchroma.GenericSubheading:     \"bold \" + nord8,\n-\tchroma.GenericDeleted:        nord11,\n-\tchroma.GenericInserted:       nord14,\n-\tchroma.GenericError:          nord11,\n-\tchroma.GenericEmph:           \"italic\",\n-\tchroma.GenericStrong:         \"bold\",\n-\tchroma.GenericPrompt:         \"bold \" + nord3,\n-\tchroma.GenericOutput:         nord4,\n-\tchroma.GenericTraceback:      nord11,\n-\tchroma.Error:                 nord11,\n-\tchroma.Background:            nord4 + \" bg:\" + nord0,\n-}))"
    },
    {
      "sha": "0698fdd55cdef08a8b3967ad0d72ecabb1800742",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/nord.xml",
      "status": "added",
      "additions": 44,
      "deletions": 0,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fnord.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fnord.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fnord.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,44 @@\n+<style name=\"nord\">\n+  <entry type=\"Error\" style=\"#bf616a\"/>\n+  <entry type=\"Background\" style=\"#d8dee9 bg:#2e3440\"/>\n+  <entry type=\"Keyword\" style=\"bold #81a1c1\"/>\n+  <entry type=\"KeywordPseudo\" style=\"nobold #81a1c1\"/>\n+  <entry type=\"KeywordType\" style=\"nobold #81a1c1\"/>\n+  <entry type=\"Name\" style=\"#d8dee9\"/>\n+  <entry type=\"NameAttribute\" style=\"#8fbcbb\"/>\n+  <entry type=\"NameBuiltin\" style=\"#81a1c1\"/>\n+  <entry type=\"NameClass\" style=\"#8fbcbb\"/>\n+  <entry type=\"NameConstant\" style=\"#8fbcbb\"/>\n+  <entry type=\"NameDecorator\" style=\"#d08770\"/>\n+  <entry type=\"NameEntity\" style=\"#d08770\"/>\n+  <entry type=\"NameException\" style=\"#bf616a\"/>\n+  <entry type=\"NameFunction\" style=\"#88c0d0\"/>\n+  <entry type=\"NameLabel\" style=\"#8fbcbb\"/>\n+  <entry type=\"NameNamespace\" style=\"#8fbcbb\"/>\n+  <entry type=\"NameTag\" style=\"#81a1c1\"/>\n+  <entry type=\"NameVariable\" style=\"#d8dee9\"/>\n+  <entry type=\"LiteralString\" style=\"#a3be8c\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#616e87\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#ebcb8b\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#a3be8c\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#a3be8c\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#ebcb8b\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#a3be8c\"/>\n+  <entry type=\"LiteralNumber\" style=\"#b48ead\"/>\n+  <entry type=\"Operator\" style=\"#81a1c1\"/>\n+  <entry type=\"OperatorWord\" style=\"bold #81a1c1\"/>\n+  <entry type=\"Punctuation\" style=\"#eceff4\"/>\n+  <entry type=\"Comment\" style=\"italic #616e87\"/>\n+  <entry type=\"CommentPreproc\" style=\"#5e81ac\"/>\n+  <entry type=\"GenericDeleted\" style=\"#bf616a\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#bf616a\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #88c0d0\"/>\n+  <entry type=\"GenericInserted\" style=\"#a3be8c\"/>\n+  <entry type=\"GenericOutput\" style=\"#d8dee9\"/>\n+  <entry type=\"GenericPrompt\" style=\"bold #4c566a\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #88c0d0\"/>\n+  <entry type=\"GenericTraceback\" style=\"#bf616a\"/>\n+  <entry type=\"TextWhitespace\" style=\"#d8dee9\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "f5217b6003bc007c318652c94ff6c58a09cf67d4",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/onedark.xml",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fonedark.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fonedark.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fonedark.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,23 @@\n+<style name=\"onedark\">\n+  <entry type=\"Background\" style=\"#ABB2BF bg:#282C34\"/>\n+  <entry type=\"Punctuation\"        style=\"#ABB2BF\"/>\n+  <entry type=\"Keyword\"            style=\"#C678DD\"/>\n+  <entry type=\"KeywordConstant\"    style=\"#E5C07B\"/>\n+  <entry type=\"KeywordDeclaration\" style=\"#C678DD\"/>\n+  <entry type=\"KeywordNamespace\"   style=\"#C678DD\"/>\n+  <entry type=\"KeywordReserved\"    style=\"#C678DD\"/>\n+  <entry type=\"KeywordType\"        style=\"#E5C07B\"/>\n+  <entry type=\"Name\"               style=\"#E06C75\"/>\n+  <entry type=\"NameAttribute\"      style=\"#E06C75\"/>\n+  <entry type=\"NameBuiltin\"         style=\"#E5C07B\"/>\n+  <entry type=\"NameClass\"           style=\"#E5C07B\"/>\n+  <entry type=\"NameFunction\"        style=\"bold #61AFEF\"/>\n+  <entry type=\"NameFunctionMagic\"   style=\"bold #56B6C2\"/>\n+  <entry type=\"NameOther\"           style=\"#E06C75\"/>\n+  <entry type=\"NameTag\"             style=\"#E06C75\"/>\n+  <entry type=\"NameDecorator\"       style=\"#61AFEF\"/>\n+  <entry type=\"LiteralString\"       style=\"#98C379\"/>\n+  <entry type=\"LiteralNumber\"       style=\"#D19A66\"/>\n+  <entry type=\"Operator\"            style=\"#56B6C2\"/>\n+  <entry type=\"Comment\"             style=\"#7F848E\"/>\n+</style>"
    },
    {
      "sha": "7273b03b68490905cb89051f894358674abe6c57",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/onesenterprise.go",
      "status": "removed",
      "additions": 0,
      "deletions": 17,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fonesenterprise.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fonesenterprise.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fonesenterprise.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,17 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// 1S:Designer color palette\n-var OnesEnterprise = Register(chroma.MustNewStyle(\"onesenterprise\", chroma.StyleEntries{\n-\tchroma.Text:           \"#000000\",\n-\tchroma.Comment:        \"#008000\",\n-\tchroma.CommentPreproc: \"#963200\",\n-\tchroma.Operator:       \"#FF0000\",\n-\tchroma.Keyword:        \"#FF0000\",\n-\tchroma.Punctuation:    \"#FF0000\",\n-\tchroma.LiteralString:  \"#000000\",\n-\tchroma.Name:           \"#0000FF\",\n-}))"
    },
    {
      "sha": "ce86db3fbc3a3c99e314f8f0b0af4dca746fb998",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/onesenterprise.xml",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fonesenterprise.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fonesenterprise.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fonesenterprise.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,10 @@\n+<style name=\"onesenterprise\">\n+  <entry type=\"Keyword\" style=\"#ff0000\"/>\n+  <entry type=\"Name\" style=\"#0000ff\"/>\n+  <entry type=\"LiteralString\" style=\"#000000\"/>\n+  <entry type=\"Operator\" style=\"#ff0000\"/>\n+  <entry type=\"Punctuation\" style=\"#ff0000\"/>\n+  <entry type=\"Comment\" style=\"#008000\"/>\n+  <entry type=\"CommentPreproc\" style=\"#963200\"/>\n+  <entry type=\"Text\" style=\"#000000\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "d0c534acc376a3f90e7531133d5293cdc6fb39ac",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/paraiso-dark.go",
      "status": "removed",
      "additions": 0,
      "deletions": 44,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fparaiso-dark.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fparaiso-dark.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fparaiso-dark.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,44 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// ParaisoDark style.\n-var ParaisoDark = Register(chroma.MustNewStyle(\"paraiso-dark\", chroma.StyleEntries{\n-\tchroma.Text:                  \"#e7e9db\",\n-\tchroma.Error:                 \"#ef6155\",\n-\tchroma.Comment:               \"#776e71\",\n-\tchroma.Keyword:               \"#815ba4\",\n-\tchroma.KeywordNamespace:      \"#5bc4bf\",\n-\tchroma.KeywordType:           \"#fec418\",\n-\tchroma.Operator:              \"#5bc4bf\",\n-\tchroma.Punctuation:           \"#e7e9db\",\n-\tchroma.Name:                  \"#e7e9db\",\n-\tchroma.NameAttribute:         \"#06b6ef\",\n-\tchroma.NameClass:             \"#fec418\",\n-\tchroma.NameConstant:          \"#ef6155\",\n-\tchroma.NameDecorator:         \"#5bc4bf\",\n-\tchroma.NameException:         \"#ef6155\",\n-\tchroma.NameFunction:          \"#06b6ef\",\n-\tchroma.NameNamespace:         \"#fec418\",\n-\tchroma.NameOther:             \"#06b6ef\",\n-\tchroma.NameTag:               \"#5bc4bf\",\n-\tchroma.NameVariable:          \"#ef6155\",\n-\tchroma.LiteralNumber:         \"#f99b15\",\n-\tchroma.Literal:               \"#f99b15\",\n-\tchroma.LiteralDate:           \"#48b685\",\n-\tchroma.LiteralString:         \"#48b685\",\n-\tchroma.LiteralStringChar:     \"#e7e9db\",\n-\tchroma.LiteralStringDoc:      \"#776e71\",\n-\tchroma.LiteralStringEscape:   \"#f99b15\",\n-\tchroma.LiteralStringInterpol: \"#f99b15\",\n-\tchroma.GenericDeleted:        \"#ef6155\",\n-\tchroma.GenericEmph:           \"italic\",\n-\tchroma.GenericHeading:        \"bold #e7e9db\",\n-\tchroma.GenericInserted:       \"#48b685\",\n-\tchroma.GenericPrompt:         \"bold #776e71\",\n-\tchroma.GenericStrong:         \"bold\",\n-\tchroma.GenericSubheading:     \"bold #5bc4bf\",\n-\tchroma.Background:            \"bg:#2f1e2e\",\n-}))"
    },
    {
      "sha": "788db3f7cb607633cf1227640126bd4f2798417e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/paraiso-dark.xml",
      "status": "added",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fparaiso-dark.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fparaiso-dark.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fparaiso-dark.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,37 @@\n+<style name=\"paraiso-dark\">\n+  <entry type=\"Error\" style=\"#ef6155\"/>\n+  <entry type=\"Background\" style=\"bg:#2f1e2e\"/>\n+  <entry type=\"Keyword\" style=\"#815ba4\"/>\n+  <entry type=\"KeywordNamespace\" style=\"#5bc4bf\"/>\n+  <entry type=\"KeywordType\" style=\"#fec418\"/>\n+  <entry type=\"Name\" style=\"#e7e9db\"/>\n+  <entry type=\"NameAttribute\" style=\"#06b6ef\"/>\n+  <entry type=\"NameClass\" style=\"#fec418\"/>\n+  <entry type=\"NameConstant\" style=\"#ef6155\"/>\n+  <entry type=\"NameDecorator\" style=\"#5bc4bf\"/>\n+  <entry type=\"NameException\" style=\"#ef6155\"/>\n+  <entry type=\"NameFunction\" style=\"#06b6ef\"/>\n+  <entry type=\"NameNamespace\" style=\"#fec418\"/>\n+  <entry type=\"NameOther\" style=\"#06b6ef\"/>\n+  <entry type=\"NameTag\" style=\"#5bc4bf\"/>\n+  <entry type=\"NameVariable\" style=\"#ef6155\"/>\n+  <entry type=\"Literal\" style=\"#f99b15\"/>\n+  <entry type=\"LiteralDate\" style=\"#48b685\"/>\n+  <entry type=\"LiteralString\" style=\"#48b685\"/>\n+  <entry type=\"LiteralStringChar\" style=\"#e7e9db\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#776e71\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#f99b15\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#f99b15\"/>\n+  <entry type=\"LiteralNumber\" style=\"#f99b15\"/>\n+  <entry type=\"Operator\" style=\"#5bc4bf\"/>\n+  <entry type=\"Punctuation\" style=\"#e7e9db\"/>\n+  <entry type=\"Comment\" style=\"#776e71\"/>\n+  <entry type=\"GenericDeleted\" style=\"#ef6155\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #e7e9db\"/>\n+  <entry type=\"GenericInserted\" style=\"#48b685\"/>\n+  <entry type=\"GenericPrompt\" style=\"bold #776e71\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #5bc4bf\"/>\n+  <entry type=\"Text\" style=\"#e7e9db\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "4048b26299d13ee335f780236341a563c0fd9198",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/paraiso-light.go",
      "status": "removed",
      "additions": 0,
      "deletions": 44,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fparaiso-light.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fparaiso-light.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fparaiso-light.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,44 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// ParaisoLight style.\n-var ParaisoLight = Register(chroma.MustNewStyle(\"paraiso-light\", chroma.StyleEntries{\n-\tchroma.Text:                  \"#2f1e2e\",\n-\tchroma.Error:                 \"#ef6155\",\n-\tchroma.Comment:               \"#8d8687\",\n-\tchroma.Keyword:               \"#815ba4\",\n-\tchroma.KeywordNamespace:      \"#5bc4bf\",\n-\tchroma.KeywordType:           \"#fec418\",\n-\tchroma.Operator:              \"#5bc4bf\",\n-\tchroma.Punctuation:           \"#2f1e2e\",\n-\tchroma.Name:                  \"#2f1e2e\",\n-\tchroma.NameAttribute:         \"#06b6ef\",\n-\tchroma.NameClass:             \"#fec418\",\n-\tchroma.NameConstant:          \"#ef6155\",\n-\tchroma.NameDecorator:         \"#5bc4bf\",\n-\tchroma.NameException:         \"#ef6155\",\n-\tchroma.NameFunction:          \"#06b6ef\",\n-\tchroma.NameNamespace:         \"#fec418\",\n-\tchroma.NameOther:             \"#06b6ef\",\n-\tchroma.NameTag:               \"#5bc4bf\",\n-\tchroma.NameVariable:          \"#ef6155\",\n-\tchroma.LiteralNumber:         \"#f99b15\",\n-\tchroma.Literal:               \"#f99b15\",\n-\tchroma.LiteralDate:           \"#48b685\",\n-\tchroma.LiteralString:         \"#48b685\",\n-\tchroma.LiteralStringChar:     \"#2f1e2e\",\n-\tchroma.LiteralStringDoc:      \"#8d8687\",\n-\tchroma.LiteralStringEscape:   \"#f99b15\",\n-\tchroma.LiteralStringInterpol: \"#f99b15\",\n-\tchroma.GenericDeleted:        \"#ef6155\",\n-\tchroma.GenericEmph:           \"italic\",\n-\tchroma.GenericHeading:        \"bold #2f1e2e\",\n-\tchroma.GenericInserted:       \"#48b685\",\n-\tchroma.GenericPrompt:         \"bold #8d8687\",\n-\tchroma.GenericStrong:         \"bold\",\n-\tchroma.GenericSubheading:     \"bold #5bc4bf\",\n-\tchroma.Background:            \"bg:#e7e9db\",\n-}))"
    },
    {
      "sha": "06a63bae176bdcd74f624a0675b091d34dd2d985",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/paraiso-light.xml",
      "status": "added",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fparaiso-light.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fparaiso-light.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fparaiso-light.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,37 @@\n+<style name=\"paraiso-light\">\n+  <entry type=\"Error\" style=\"#ef6155\"/>\n+  <entry type=\"Background\" style=\"bg:#e7e9db\"/>\n+  <entry type=\"Keyword\" style=\"#815ba4\"/>\n+  <entry type=\"KeywordNamespace\" style=\"#5bc4bf\"/>\n+  <entry type=\"KeywordType\" style=\"#fec418\"/>\n+  <entry type=\"Name\" style=\"#2f1e2e\"/>\n+  <entry type=\"NameAttribute\" style=\"#06b6ef\"/>\n+  <entry type=\"NameClass\" style=\"#fec418\"/>\n+  <entry type=\"NameConstant\" style=\"#ef6155\"/>\n+  <entry type=\"NameDecorator\" style=\"#5bc4bf\"/>\n+  <entry type=\"NameException\" style=\"#ef6155\"/>\n+  <entry type=\"NameFunction\" style=\"#06b6ef\"/>\n+  <entry type=\"NameNamespace\" style=\"#fec418\"/>\n+  <entry type=\"NameOther\" style=\"#06b6ef\"/>\n+  <entry type=\"NameTag\" style=\"#5bc4bf\"/>\n+  <entry type=\"NameVariable\" style=\"#ef6155\"/>\n+  <entry type=\"Literal\" style=\"#f99b15\"/>\n+  <entry type=\"LiteralDate\" style=\"#48b685\"/>\n+  <entry type=\"LiteralString\" style=\"#48b685\"/>\n+  <entry type=\"LiteralStringChar\" style=\"#2f1e2e\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#8d8687\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#f99b15\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#f99b15\"/>\n+  <entry type=\"LiteralNumber\" style=\"#f99b15\"/>\n+  <entry type=\"Operator\" style=\"#5bc4bf\"/>\n+  <entry type=\"Punctuation\" style=\"#2f1e2e\"/>\n+  <entry type=\"Comment\" style=\"#8d8687\"/>\n+  <entry type=\"GenericDeleted\" style=\"#ef6155\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #2f1e2e\"/>\n+  <entry type=\"GenericInserted\" style=\"#48b685\"/>\n+  <entry type=\"GenericPrompt\" style=\"bold #8d8687\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #5bc4bf\"/>\n+  <entry type=\"Text\" style=\"#2f1e2e\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "8e41b50d7477e8b0adbb9dc712312d1c61b51226",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/pastie.go",
      "status": "removed",
      "additions": 0,
      "deletions": 52,
      "changes": 52,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fpastie.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fpastie.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fpastie.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,52 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Pastie style.\n-var Pastie = Register(chroma.MustNewStyle(\"pastie\", chroma.StyleEntries{\n-\tchroma.TextWhitespace:        \"#bbbbbb\",\n-\tchroma.Comment:               \"#888888\",\n-\tchroma.CommentPreproc:        \"bold #cc0000\",\n-\tchroma.CommentSpecial:        \"bg:#fff0f0 bold #cc0000\",\n-\tchroma.LiteralString:         \"bg:#fff0f0 #dd2200\",\n-\tchroma.LiteralStringRegex:    \"bg:#fff0ff #008800\",\n-\tchroma.LiteralStringOther:    \"bg:#f0fff0 #22bb22\",\n-\tchroma.LiteralStringSymbol:   \"#aa6600\",\n-\tchroma.LiteralStringInterpol: \"#3333bb\",\n-\tchroma.LiteralStringEscape:   \"#0044dd\",\n-\tchroma.OperatorWord:          \"#008800\",\n-\tchroma.Keyword:               \"bold #008800\",\n-\tchroma.KeywordPseudo:         \"nobold\",\n-\tchroma.KeywordType:           \"#888888\",\n-\tchroma.NameClass:             \"bold #bb0066\",\n-\tchroma.NameException:         \"bold #bb0066\",\n-\tchroma.NameFunction:          \"bold #0066bb\",\n-\tchroma.NameProperty:          \"bold #336699\",\n-\tchroma.NameNamespace:         \"bold #bb0066\",\n-\tchroma.NameBuiltin:           \"#003388\",\n-\tchroma.NameVariable:          \"#336699\",\n-\tchroma.NameVariableClass:     \"#336699\",\n-\tchroma.NameVariableInstance:  \"#3333bb\",\n-\tchroma.NameVariableGlobal:    \"#dd7700\",\n-\tchroma.NameConstant:          \"bold #003366\",\n-\tchroma.NameTag:               \"bold #bb0066\",\n-\tchroma.NameAttribute:         \"#336699\",\n-\tchroma.NameDecorator:         \"#555555\",\n-\tchroma.NameLabel:             \"italic #336699\",\n-\tchroma.LiteralNumber:         \"bold #0000DD\",\n-\tchroma.GenericHeading:        \"#333\",\n-\tchroma.GenericSubheading:     \"#666\",\n-\tchroma.GenericDeleted:        \"bg:#ffdddd #000000\",\n-\tchroma.GenericInserted:       \"bg:#ddffdd #000000\",\n-\tchroma.GenericError:          \"#aa0000\",\n-\tchroma.GenericEmph:           \"italic\",\n-\tchroma.GenericStrong:         \"bold\",\n-\tchroma.GenericPrompt:         \"#555555\",\n-\tchroma.GenericOutput:         \"#888888\",\n-\tchroma.GenericTraceback:      \"#aa0000\",\n-\tchroma.GenericUnderline:      \"underline\",\n-\tchroma.Error:                 \"bg:#e3d2d2 #a61717\",\n-\tchroma.Background:            \" bg:#ffffff\",\n-}))"
    },
    {
      "sha": "a3b0abde5ce6e64e7b6bb56045aa140fb22303ba",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/pastie.xml",
      "status": "added",
      "additions": 45,
      "deletions": 0,
      "changes": 45,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fpastie.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fpastie.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fpastie.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,45 @@\n+<style name=\"pastie\">\n+  <entry type=\"Error\" style=\"#a61717 bg:#e3d2d2\"/>\n+  <entry type=\"Background\" style=\"bg:#ffffff\"/>\n+  <entry type=\"Keyword\" style=\"bold #008800\"/>\n+  <entry type=\"KeywordPseudo\" style=\"nobold\"/>\n+  <entry type=\"KeywordType\" style=\"#888888\"/>\n+  <entry type=\"NameAttribute\" style=\"#336699\"/>\n+  <entry type=\"NameBuiltin\" style=\"#003388\"/>\n+  <entry type=\"NameClass\" style=\"bold #bb0066\"/>\n+  <entry type=\"NameConstant\" style=\"bold #003366\"/>\n+  <entry type=\"NameDecorator\" style=\"#555555\"/>\n+  <entry type=\"NameException\" style=\"bold #bb0066\"/>\n+  <entry type=\"NameFunction\" style=\"bold #0066bb\"/>\n+  <entry type=\"NameLabel\" style=\"italic #336699\"/>\n+  <entry type=\"NameNamespace\" style=\"bold #bb0066\"/>\n+  <entry type=\"NameProperty\" style=\"bold #336699\"/>\n+  <entry type=\"NameTag\" style=\"bold #bb0066\"/>\n+  <entry type=\"NameVariable\" style=\"#336699\"/>\n+  <entry type=\"NameVariableClass\" style=\"#336699\"/>\n+  <entry type=\"NameVariableGlobal\" style=\"#dd7700\"/>\n+  <entry type=\"NameVariableInstance\" style=\"#3333bb\"/>\n+  <entry type=\"LiteralString\" style=\"#dd2200 bg:#fff0f0\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#0044dd\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#3333bb\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#22bb22 bg:#f0fff0\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#008800 bg:#fff0ff\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#aa6600\"/>\n+  <entry type=\"LiteralNumber\" style=\"bold #0000dd\"/>\n+  <entry type=\"OperatorWord\" style=\"#008800\"/>\n+  <entry type=\"Comment\" style=\"#888888\"/>\n+  <entry type=\"CommentSpecial\" style=\"bold #cc0000 bg:#fff0f0\"/>\n+  <entry type=\"CommentPreproc\" style=\"bold #cc0000\"/>\n+  <entry type=\"GenericDeleted\" style=\"#000000 bg:#ffdddd\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#aa0000\"/>\n+  <entry type=\"GenericHeading\" style=\"#333333\"/>\n+  <entry type=\"GenericInserted\" style=\"#000000 bg:#ddffdd\"/>\n+  <entry type=\"GenericOutput\" style=\"#888888\"/>\n+  <entry type=\"GenericPrompt\" style=\"#555555\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"#666666\"/>\n+  <entry type=\"GenericTraceback\" style=\"#aa0000\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"TextWhitespace\" style=\"#bbbbbb\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "813b713b2fe767468152e115b137d6c2f59a9fd3",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/perldoc.go",
      "status": "removed",
      "additions": 0,
      "deletions": 44,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fperldoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fperldoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fperldoc.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,44 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Perldoc style.\n-var Perldoc = Register(chroma.MustNewStyle(\"perldoc\", chroma.StyleEntries{\n-\tchroma.TextWhitespace:       \"#bbbbbb\",\n-\tchroma.Comment:              \"#228B22\",\n-\tchroma.CommentPreproc:       \"#1e889b\",\n-\tchroma.CommentSpecial:       \"#8B008B bold\",\n-\tchroma.LiteralString:        \"#CD5555\",\n-\tchroma.LiteralStringHeredoc: \"#1c7e71 italic\",\n-\tchroma.LiteralStringRegex:   \"#1c7e71\",\n-\tchroma.LiteralStringOther:   \"#cb6c20\",\n-\tchroma.LiteralNumber:        \"#B452CD\",\n-\tchroma.OperatorWord:         \"#8B008B\",\n-\tchroma.Keyword:              \"#8B008B bold\",\n-\tchroma.KeywordType:          \"#00688B\",\n-\tchroma.NameClass:            \"#008b45 bold\",\n-\tchroma.NameException:        \"#008b45 bold\",\n-\tchroma.NameFunction:         \"#008b45\",\n-\tchroma.NameNamespace:        \"#008b45 underline\",\n-\tchroma.NameVariable:         \"#00688B\",\n-\tchroma.NameConstant:         \"#00688B\",\n-\tchroma.NameDecorator:        \"#707a7c\",\n-\tchroma.NameTag:              \"#8B008B bold\",\n-\tchroma.NameAttribute:        \"#658b00\",\n-\tchroma.NameBuiltin:          \"#658b00\",\n-\tchroma.GenericHeading:       \"bold #000080\",\n-\tchroma.GenericSubheading:    \"bold #800080\",\n-\tchroma.GenericDeleted:       \"#aa0000\",\n-\tchroma.GenericInserted:      \"#00aa00\",\n-\tchroma.GenericError:         \"#aa0000\",\n-\tchroma.GenericEmph:          \"italic\",\n-\tchroma.GenericStrong:        \"bold\",\n-\tchroma.GenericPrompt:        \"#555555\",\n-\tchroma.GenericOutput:        \"#888888\",\n-\tchroma.GenericTraceback:     \"#aa0000\",\n-\tchroma.GenericUnderline:     \"underline\",\n-\tchroma.Error:                \"bg:#e3d2d2 #a61717\",\n-\tchroma.Background:           \" bg:#eeeedd\",\n-}))"
    },
    {
      "sha": "9e5564c3fbd36d9169799f12cd10d5882fcf7da5",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/perldoc.xml",
      "status": "added",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fperldoc.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fperldoc.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fperldoc.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,37 @@\n+<style name=\"perldoc\">\n+  <entry type=\"Error\" style=\"#a61717 bg:#e3d2d2\"/>\n+  <entry type=\"Background\" style=\"bg:#eeeedd\"/>\n+  <entry type=\"Keyword\" style=\"bold #8b008b\"/>\n+  <entry type=\"KeywordType\" style=\"#00688b\"/>\n+  <entry type=\"NameAttribute\" style=\"#658b00\"/>\n+  <entry type=\"NameBuiltin\" style=\"#658b00\"/>\n+  <entry type=\"NameClass\" style=\"bold #008b45\"/>\n+  <entry type=\"NameConstant\" style=\"#00688b\"/>\n+  <entry type=\"NameDecorator\" style=\"#707a7c\"/>\n+  <entry type=\"NameException\" style=\"bold #008b45\"/>\n+  <entry type=\"NameFunction\" style=\"#008b45\"/>\n+  <entry type=\"NameNamespace\" style=\"underline #008b45\"/>\n+  <entry type=\"NameTag\" style=\"bold #8b008b\"/>\n+  <entry type=\"NameVariable\" style=\"#00688b\"/>\n+  <entry type=\"LiteralString\" style=\"#cd5555\"/>\n+  <entry type=\"LiteralStringHeredoc\" style=\"italic #1c7e71\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#cb6c20\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#1c7e71\"/>\n+  <entry type=\"LiteralNumber\" style=\"#b452cd\"/>\n+  <entry type=\"OperatorWord\" style=\"#8b008b\"/>\n+  <entry type=\"Comment\" style=\"#228b22\"/>\n+  <entry type=\"CommentSpecial\" style=\"bold #8b008b\"/>\n+  <entry type=\"CommentPreproc\" style=\"#1e889b\"/>\n+  <entry type=\"GenericDeleted\" style=\"#aa0000\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#aa0000\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #000080\"/>\n+  <entry type=\"GenericInserted\" style=\"#00aa00\"/>\n+  <entry type=\"GenericOutput\" style=\"#888888\"/>\n+  <entry type=\"GenericPrompt\" style=\"#555555\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #800080\"/>\n+  <entry type=\"GenericTraceback\" style=\"#aa0000\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"TextWhitespace\" style=\"#bbbbbb\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "856e387b67ceaa27ae7a57d77847313f446505da",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/pygments.go",
      "status": "removed",
      "additions": 0,
      "deletions": 55,
      "changes": 55,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fpygments.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fpygments.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fpygments.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,55 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Pygments default theme.\n-var Pygments = Register(chroma.MustNewStyle(\"pygments\", chroma.StyleEntries{\n-\tchroma.Whitespace:     \"#bbbbbb\",\n-\tchroma.Comment:        \"italic #408080\",\n-\tchroma.CommentPreproc: \"noitalic #BC7A00\",\n-\n-\tchroma.Keyword:       \"bold #008000\",\n-\tchroma.KeywordPseudo: \"nobold\",\n-\tchroma.KeywordType:   \"nobold #B00040\",\n-\n-\tchroma.Operator:     \"#666666\",\n-\tchroma.OperatorWord: \"bold #AA22FF\",\n-\n-\tchroma.NameBuiltin:   \"#008000\",\n-\tchroma.NameFunction:  \"#0000FF\",\n-\tchroma.NameClass:     \"bold #0000FF\",\n-\tchroma.NameNamespace: \"bold #0000FF\",\n-\tchroma.NameException: \"bold #D2413A\",\n-\tchroma.NameVariable:  \"#19177C\",\n-\tchroma.NameConstant:  \"#880000\",\n-\tchroma.NameLabel:     \"#A0A000\",\n-\tchroma.NameEntity:    \"bold #999999\",\n-\tchroma.NameAttribute: \"#7D9029\",\n-\tchroma.NameTag:       \"bold #008000\",\n-\tchroma.NameDecorator: \"#AA22FF\",\n-\n-\tchroma.String:         \"#BA2121\",\n-\tchroma.StringDoc:      \"italic\",\n-\tchroma.StringInterpol: \"bold #BB6688\",\n-\tchroma.StringEscape:   \"bold #BB6622\",\n-\tchroma.StringRegex:    \"#BB6688\",\n-\tchroma.StringSymbol:   \"#19177C\",\n-\tchroma.StringOther:    \"#008000\",\n-\tchroma.Number:         \"#666666\",\n-\n-\tchroma.GenericHeading:    \"bold #000080\",\n-\tchroma.GenericSubheading: \"bold #800080\",\n-\tchroma.GenericDeleted:    \"#A00000\",\n-\tchroma.GenericInserted:   \"#00A000\",\n-\tchroma.GenericError:      \"#FF0000\",\n-\tchroma.GenericEmph:       \"italic\",\n-\tchroma.GenericStrong:     \"bold\",\n-\tchroma.GenericPrompt:     \"bold #000080\",\n-\tchroma.GenericOutput:     \"#888\",\n-\tchroma.GenericTraceback:  \"#04D\",\n-\tchroma.GenericUnderline:  \"underline\",\n-\n-\tchroma.Error: \"border:#FF0000\",\n-}))"
    },
    {
      "sha": "a3d0d8bab537d0878dab62805c6709393b048fc7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/pygments.xml",
      "status": "added",
      "additions": 42,
      "deletions": 0,
      "changes": 42,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fpygments.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fpygments.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fpygments.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,42 @@\n+<style name=\"pygments\">\n+  <entry type=\"Error\" style=\"border:#ff0000\"/>\n+  <entry type=\"Keyword\" style=\"bold #008000\"/>\n+  <entry type=\"KeywordPseudo\" style=\"nobold\"/>\n+  <entry type=\"KeywordType\" style=\"nobold #b00040\"/>\n+  <entry type=\"NameAttribute\" style=\"#7d9029\"/>\n+  <entry type=\"NameBuiltin\" style=\"#008000\"/>\n+  <entry type=\"NameClass\" style=\"bold #0000ff\"/>\n+  <entry type=\"NameConstant\" style=\"#880000\"/>\n+  <entry type=\"NameDecorator\" style=\"#aa22ff\"/>\n+  <entry type=\"NameEntity\" style=\"bold #999999\"/>\n+  <entry type=\"NameException\" style=\"bold #d2413a\"/>\n+  <entry type=\"NameFunction\" style=\"#0000ff\"/>\n+  <entry type=\"NameLabel\" style=\"#a0a000\"/>\n+  <entry type=\"NameNamespace\" style=\"bold #0000ff\"/>\n+  <entry type=\"NameTag\" style=\"bold #008000\"/>\n+  <entry type=\"NameVariable\" style=\"#19177c\"/>\n+  <entry type=\"LiteralString\" style=\"#ba2121\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"italic\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"bold #bb6622\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"bold #bb6688\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#008000\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#bb6688\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#19177c\"/>\n+  <entry type=\"LiteralNumber\" style=\"#666666\"/>\n+  <entry type=\"Operator\" style=\"#666666\"/>\n+  <entry type=\"OperatorWord\" style=\"bold #aa22ff\"/>\n+  <entry type=\"Comment\" style=\"italic #408080\"/>\n+  <entry type=\"CommentPreproc\" style=\"noitalic #bc7a00\"/>\n+  <entry type=\"GenericDeleted\" style=\"#a00000\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#ff0000\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #000080\"/>\n+  <entry type=\"GenericInserted\" style=\"#00a000\"/>\n+  <entry type=\"GenericOutput\" style=\"#888888\"/>\n+  <entry type=\"GenericPrompt\" style=\"bold #000080\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #800080\"/>\n+  <entry type=\"GenericTraceback\" style=\"#0044dd\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"TextWhitespace\" style=\"#bbbbbb\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "b681eb1e0de6b6beb1eaca8c026bbc93ad3254fb",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/rainbow_dash.go",
      "status": "removed",
      "additions": 0,
      "deletions": 47,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frainbow_dash.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frainbow_dash.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frainbow_dash.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,47 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// RainbowDash style.\n-var RainbowDash = Register(chroma.MustNewStyle(\"rainbow_dash\", chroma.StyleEntries{\n-\tchroma.Comment:             \"italic #0080ff\",\n-\tchroma.CommentPreproc:      \"noitalic\",\n-\tchroma.CommentSpecial:      \"bold\",\n-\tchroma.Error:               \"bg:#cc0000 #ffffff\",\n-\tchroma.GenericDeleted:      \"border:#c5060b bg:#ffcccc\",\n-\tchroma.GenericEmph:         \"italic\",\n-\tchroma.GenericError:        \"#ff0000\",\n-\tchroma.GenericHeading:      \"bold #2c5dcd\",\n-\tchroma.GenericInserted:     \"border:#00cc00 bg:#ccffcc\",\n-\tchroma.GenericOutput:       \"#aaaaaa\",\n-\tchroma.GenericPrompt:       \"bold #2c5dcd\",\n-\tchroma.GenericStrong:       \"bold\",\n-\tchroma.GenericSubheading:   \"bold #2c5dcd\",\n-\tchroma.GenericTraceback:    \"#c5060b\",\n-\tchroma.GenericUnderline:    \"underline\",\n-\tchroma.Keyword:             \"bold #2c5dcd\",\n-\tchroma.KeywordPseudo:       \"nobold\",\n-\tchroma.KeywordType:         \"#5918bb\",\n-\tchroma.NameAttribute:       \"italic #2c5dcd\",\n-\tchroma.NameBuiltin:         \"bold #5918bb\",\n-\tchroma.NameClass:           \"underline\",\n-\tchroma.NameConstant:        \"#318495\",\n-\tchroma.NameDecorator:       \"bold #ff8000\",\n-\tchroma.NameEntity:          \"bold #5918bb\",\n-\tchroma.NameException:       \"bold #5918bb\",\n-\tchroma.NameFunction:        \"bold #ff8000\",\n-\tchroma.NameTag:             \"bold #2c5dcd\",\n-\tchroma.LiteralNumber:       \"bold #5918bb\",\n-\tchroma.Operator:            \"#2c5dcd\",\n-\tchroma.OperatorWord:        \"bold\",\n-\tchroma.LiteralString:       \"#00cc66\",\n-\tchroma.LiteralStringDoc:    \"italic\",\n-\tchroma.LiteralStringEscape: \"bold #c5060b\",\n-\tchroma.LiteralStringOther:  \"#318495\",\n-\tchroma.LiteralStringSymbol: \"bold #c5060b\",\n-\tchroma.Text:                \"#4d4d4d\",\n-\tchroma.TextWhitespace:      \"#cbcbcb\",\n-\tchroma.Background:          \" bg:#ffffff\",\n-}))"
    },
    {
      "sha": "5b0fe49d633a7af769fa1445abe27c2605818f35",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/rainbow_dash.xml",
      "status": "added",
      "additions": 40,
      "deletions": 0,
      "changes": 40,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frainbow_dash.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frainbow_dash.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frainbow_dash.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,40 @@\n+<style name=\"rainbow_dash\">\n+  <entry type=\"Error\" style=\"#ffffff bg:#cc0000\"/>\n+  <entry type=\"Background\" style=\"bg:#ffffff\"/>\n+  <entry type=\"Keyword\" style=\"bold #2c5dcd\"/>\n+  <entry type=\"KeywordPseudo\" style=\"nobold\"/>\n+  <entry type=\"KeywordType\" style=\"#5918bb\"/>\n+  <entry type=\"NameAttribute\" style=\"italic #2c5dcd\"/>\n+  <entry type=\"NameBuiltin\" style=\"bold #5918bb\"/>\n+  <entry type=\"NameClass\" style=\"underline\"/>\n+  <entry type=\"NameConstant\" style=\"#318495\"/>\n+  <entry type=\"NameDecorator\" style=\"bold #ff8000\"/>\n+  <entry type=\"NameEntity\" style=\"bold #5918bb\"/>\n+  <entry type=\"NameException\" style=\"bold #5918bb\"/>\n+  <entry type=\"NameFunction\" style=\"bold #ff8000\"/>\n+  <entry type=\"NameTag\" style=\"bold #2c5dcd\"/>\n+  <entry type=\"LiteralString\" style=\"#00cc66\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"italic\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"bold #c5060b\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#318495\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"bold #c5060b\"/>\n+  <entry type=\"LiteralNumber\" style=\"bold #5918bb\"/>\n+  <entry type=\"Operator\" style=\"#2c5dcd\"/>\n+  <entry type=\"OperatorWord\" style=\"bold\"/>\n+  <entry type=\"Comment\" style=\"italic #0080ff\"/>\n+  <entry type=\"CommentSpecial\" style=\"bold\"/>\n+  <entry type=\"CommentPreproc\" style=\"noitalic\"/>\n+  <entry type=\"GenericDeleted\" style=\"bg:#ffcccc border:#c5060b\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#ff0000\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #2c5dcd\"/>\n+  <entry type=\"GenericInserted\" style=\"bg:#ccffcc border:#00cc00\"/>\n+  <entry type=\"GenericOutput\" style=\"#aaaaaa\"/>\n+  <entry type=\"GenericPrompt\" style=\"bold #2c5dcd\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #2c5dcd\"/>\n+  <entry type=\"GenericTraceback\" style=\"#c5060b\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"Text\" style=\"#4d4d4d\"/>\n+  <entry type=\"TextWhitespace\" style=\"#cbcbcb\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "788bd6f65c2b945157e7f0abb014a0a2db585815",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/rose-pine-dawn.xml",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frose-pine-dawn.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frose-pine-dawn.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frose-pine-dawn.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,29 @@\n+<style name=\"rose-pine-dawn\">\n+  <entry type=\"Error\" style=\"#b4637a\"/>\n+  <entry type=\"Background\" style=\"bg:#faf4ed\"/>\n+  <entry type=\"Keyword\" style=\"#286983\"/>\n+  <entry type=\"KeywordNamespace\" style=\"#907aa9\"/>\n+  <entry type=\"Name\" style=\"#d7827e\"/>\n+  <entry type=\"NameAttribute\" style=\"#d7827e\"/>\n+  <entry type=\"NameClass\" style=\"#56949f\"/>\n+  <entry type=\"NameConstant\" style=\"#ea9d34\"/>\n+  <entry type=\"NameDecorator\" style=\"#797593\"/>\n+  <entry type=\"NameException\" style=\"#286983\"/>\n+  <entry type=\"NameFunction\" style=\"#d7827e\"/>\n+  <entry type=\"NameOther\" style=\"#575279\"/>\n+  <entry type=\"NameTag\" style=\"#d7827e\"/>\n+  <entry type=\"Literal\" style=\"#ea9d34\"/>\n+  <entry type=\"LiteralDate\" style=\"#ea9d34\"/>\n+  <entry type=\"LiteralString\" style=\"#ea9d34\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#286983\"/>\n+  <entry type=\"LiteralNumber\" style=\"#ea9d34\"/>\n+  <entry type=\"Operator\" style=\"#797593\"/>\n+  <entry type=\"Punctuation\" style=\"#797593\"/>\n+  <entry type=\"Comment\" style=\"#9893a5\"/>\n+  <entry type=\"GenericDeleted\" style=\"#b4637a\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericInserted\" style=\"#56949f\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"#907aa9\"/>\n+  <entry type=\"Text\" style=\"#575279\"/>\n+</style>"
    },
    {
      "sha": "f67b804324e6e051541a4c53d252e99038ec3980",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/rose-pine-moon.xml",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frose-pine-moon.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frose-pine-moon.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frose-pine-moon.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,29 @@\n+<style name=\"rose-pine-moon\">\n+  <entry type=\"Error\" style=\"#eb6f92\"/>\n+  <entry type=\"Background\" style=\"bg:#232136\"/>\n+  <entry type=\"Keyword\" style=\"#3e8fb0\"/>\n+  <entry type=\"KeywordNamespace\" style=\"#c4a7e7\"/>\n+  <entry type=\"Name\" style=\"#ea9a97\"/>\n+  <entry type=\"NameAttribute\" style=\"#ea9a97\"/>\n+  <entry type=\"NameClass\" style=\"#9ccfd8\"/>\n+  <entry type=\"NameConstant\" style=\"#f6c177\"/>\n+  <entry type=\"NameDecorator\" style=\"#908caa\"/>\n+  <entry type=\"NameException\" style=\"#3e8fb0\"/>\n+  <entry type=\"NameFunction\" style=\"#ea9a97\"/>\n+  <entry type=\"NameOther\" style=\"#e0def4\"/>\n+  <entry type=\"NameTag\" style=\"#ea9a97\"/>\n+  <entry type=\"Literal\" style=\"#f6c177\"/>\n+  <entry type=\"LiteralDate\" style=\"#f6c177\"/>\n+  <entry type=\"LiteralString\" style=\"#f6c177\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#3e8fb0\"/>\n+  <entry type=\"LiteralNumber\" style=\"#f6c177\"/>\n+  <entry type=\"Operator\" style=\"#908caa\"/>\n+  <entry type=\"Punctuation\" style=\"#908caa\"/>\n+  <entry type=\"Comment\" style=\"#6e6a86\"/>\n+  <entry type=\"GenericDeleted\" style=\"#eb6f92\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericInserted\" style=\"#9ccfd8\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"#c4a7e7\"/>\n+  <entry type=\"Text\" style=\"#e0def4\"/>\n+</style>"
    },
    {
      "sha": "3fb70a5ac79c47a527b42c697d10449a74cefb2f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/rose-pine.xml",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frose-pine.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frose-pine.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frose-pine.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,29 @@\n+<style name=\"rose-pine\">\n+  <entry type=\"Error\" style=\"#eb6f92\"/>\n+  <entry type=\"Background\" style=\"bg:#191724\"/>\n+  <entry type=\"Keyword\" style=\"#31748f\"/>\n+  <entry type=\"KeywordNamespace\" style=\"#c4a7e7\"/>\n+  <entry type=\"Name\" style=\"#ebbcba\"/>\n+  <entry type=\"NameAttribute\" style=\"#ebbcba\"/>\n+  <entry type=\"NameClass\" style=\"#9ccfd8\"/>\n+  <entry type=\"NameConstant\" style=\"#f6c177\"/>\n+  <entry type=\"NameDecorator\" style=\"#908caa\"/>\n+  <entry type=\"NameException\" style=\"#31748f\"/>\n+  <entry type=\"NameFunction\" style=\"#ebbcba\"/>\n+  <entry type=\"NameOther\" style=\"#e0def4\"/>\n+  <entry type=\"NameTag\" style=\"#ebbcba\"/>\n+  <entry type=\"Literal\" style=\"#f6c177\"/>\n+  <entry type=\"LiteralDate\" style=\"#f6c177\"/>\n+  <entry type=\"LiteralString\" style=\"#f6c177\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#31748f\"/>\n+  <entry type=\"LiteralNumber\" style=\"#f6c177\"/>\n+  <entry type=\"Operator\" style=\"#908caa\"/>\n+  <entry type=\"Punctuation\" style=\"#908caa\"/>\n+  <entry type=\"Comment\" style=\"#6e6a86\"/>\n+  <entry type=\"GenericDeleted\" style=\"#eb6f92\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericInserted\" style=\"#9ccfd8\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"#c4a7e7\"/>\n+  <entry type=\"Text\" style=\"#e0def4\"/>\n+</style>"
    },
    {
      "sha": "6eda8c440bb4812b23047b6a05c2d6b80f4a4f9b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/rrt.go",
      "status": "removed",
      "additions": 0,
      "deletions": 20,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frrt.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frrt.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frrt.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,20 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Rrt style.\n-var Rrt = Register(chroma.MustNewStyle(\"rrt\", chroma.StyleEntries{\n-\tchroma.CommentPreproc:      \"#e5e5e5\",\n-\tchroma.Comment:             \"#00ff00\",\n-\tchroma.KeywordType:         \"#ee82ee\",\n-\tchroma.Keyword:             \"#ff0000\",\n-\tchroma.LiteralNumber:       \"#ff6600\",\n-\tchroma.LiteralStringSymbol: \"#ff6600\",\n-\tchroma.LiteralString:       \"#87ceeb\",\n-\tchroma.NameFunction:        \"#ffff00\",\n-\tchroma.NameConstant:        \"#7fffd4\",\n-\tchroma.NameVariable:        \"#eedd82\",\n-\tchroma.Background:          \"#f8f8f2 bg:#000000\",\n-}))"
    },
    {
      "sha": "5f1daaa2c70f0124d71d65735cb3121ce5eb9489",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/rrt.xml",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frrt.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frrt.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Frrt.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,13 @@\n+<style name=\"rrt\">\n+  <entry type=\"Background\" style=\"#f8f8f2 bg:#000000\"/>\n+  <entry type=\"Keyword\" style=\"#ff0000\"/>\n+  <entry type=\"KeywordType\" style=\"#ee82ee\"/>\n+  <entry type=\"NameConstant\" style=\"#7fffd4\"/>\n+  <entry type=\"NameFunction\" style=\"#ffff00\"/>\n+  <entry type=\"NameVariable\" style=\"#eedd82\"/>\n+  <entry type=\"LiteralString\" style=\"#87ceeb\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#ff6600\"/>\n+  <entry type=\"LiteralNumber\" style=\"#ff6600\"/>\n+  <entry type=\"Comment\" style=\"#00ff00\"/>\n+  <entry type=\"CommentPreproc\" style=\"#e5e5e5\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "91ce4d906ab6921864819523edd2ef10db5931ca",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/solarized-dark.go",
      "status": "removed",
      "additions": 0,
      "deletions": 46,
      "changes": 46,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fsolarized-dark.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fsolarized-dark.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fsolarized-dark.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,46 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// SolarizedDark style.\n-var SolarizedDark = Register(chroma.MustNewStyle(\"solarized-dark\", chroma.StyleEntries{\n-\tchroma.Keyword:               \"#719e07\",\n-\tchroma.KeywordConstant:       \"#CB4B16\",\n-\tchroma.KeywordDeclaration:    \"#268BD2\",\n-\tchroma.KeywordReserved:       \"#268BD2\",\n-\tchroma.KeywordType:           \"#DC322F\",\n-\tchroma.NameAttribute:         \"#93A1A1\",\n-\tchroma.NameBuiltin:           \"#B58900\",\n-\tchroma.NameBuiltinPseudo:     \"#268BD2\",\n-\tchroma.NameClass:             \"#268BD2\",\n-\tchroma.NameConstant:          \"#CB4B16\",\n-\tchroma.NameDecorator:         \"#268BD2\",\n-\tchroma.NameEntity:            \"#CB4B16\",\n-\tchroma.NameException:         \"#CB4B16\",\n-\tchroma.NameFunction:          \"#268BD2\",\n-\tchroma.NameTag:               \"#268BD2\",\n-\tchroma.NameVariable:          \"#268BD2\",\n-\tchroma.LiteralString:         \"#2AA198\",\n-\tchroma.LiteralStringBacktick: \"#586E75\",\n-\tchroma.LiteralStringChar:     \"#2AA198\",\n-\tchroma.LiteralStringDoc:      \"#93A1A1\",\n-\tchroma.LiteralStringEscape:   \"#CB4B16\",\n-\tchroma.LiteralStringHeredoc:  \"#93A1A1\",\n-\tchroma.LiteralStringRegex:    \"#DC322F\",\n-\tchroma.LiteralNumber:         \"#2AA198\",\n-\tchroma.Operator:              \"#719e07\",\n-\tchroma.Comment:               \"#586E75\",\n-\tchroma.CommentPreproc:        \"#719e07\",\n-\tchroma.CommentSpecial:        \"#719e07\",\n-\tchroma.GenericDeleted:        \"#DC322F\",\n-\tchroma.GenericEmph:           \"italic\",\n-\tchroma.GenericError:          \"#DC322F bold\",\n-\tchroma.GenericHeading:        \"#CB4B16\",\n-\tchroma.GenericInserted:       \"#719e07\",\n-\tchroma.GenericStrong:         \"bold\",\n-\tchroma.GenericSubheading:     \"#268BD2\",\n-\tchroma.Background:            \"#93A1A1 bg:#002B36\",\n-\tchroma.Other:                 \"#CB4B16\",\n-}))"
    },
    {
      "sha": "a3cf46fddbb2fa97fa8bbc606ca557ebfcacf4e9",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/solarized-dark.xml",
      "status": "added",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fsolarized-dark.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fsolarized-dark.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fsolarized-dark.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,39 @@\n+<style name=\"solarized-dark\">\n+  <entry type=\"Other\" style=\"#cb4b16\"/>\n+  <entry type=\"Background\" style=\"#93a1a1 bg:#002b36\"/>\n+  <entry type=\"Keyword\" style=\"#719e07\"/>\n+  <entry type=\"KeywordConstant\" style=\"#cb4b16\"/>\n+  <entry type=\"KeywordDeclaration\" style=\"#268bd2\"/>\n+  <entry type=\"KeywordReserved\" style=\"#268bd2\"/>\n+  <entry type=\"KeywordType\" style=\"#dc322f\"/>\n+  <entry type=\"NameAttribute\" style=\"#93a1a1\"/>\n+  <entry type=\"NameBuiltin\" style=\"#b58900\"/>\n+  <entry type=\"NameBuiltinPseudo\" style=\"#268bd2\"/>\n+  <entry type=\"NameClass\" style=\"#268bd2\"/>\n+  <entry type=\"NameConstant\" style=\"#cb4b16\"/>\n+  <entry type=\"NameDecorator\" style=\"#268bd2\"/>\n+  <entry type=\"NameEntity\" style=\"#cb4b16\"/>\n+  <entry type=\"NameException\" style=\"#cb4b16\"/>\n+  <entry type=\"NameFunction\" style=\"#268bd2\"/>\n+  <entry type=\"NameTag\" style=\"#268bd2\"/>\n+  <entry type=\"NameVariable\" style=\"#268bd2\"/>\n+  <entry type=\"LiteralString\" style=\"#2aa198\"/>\n+  <entry type=\"LiteralStringBacktick\" style=\"#586e75\"/>\n+  <entry type=\"LiteralStringChar\" style=\"#2aa198\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#93a1a1\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#cb4b16\"/>\n+  <entry type=\"LiteralStringHeredoc\" style=\"#93a1a1\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#dc322f\"/>\n+  <entry type=\"LiteralNumber\" style=\"#2aa198\"/>\n+  <entry type=\"Operator\" style=\"#719e07\"/>\n+  <entry type=\"Comment\" style=\"#586e75\"/>\n+  <entry type=\"CommentSpecial\" style=\"#719e07\"/>\n+  <entry type=\"CommentPreproc\" style=\"#719e07\"/>\n+  <entry type=\"GenericDeleted\" style=\"#dc322f\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"bold #dc322f\"/>\n+  <entry type=\"GenericHeading\" style=\"#cb4b16\"/>\n+  <entry type=\"GenericInserted\" style=\"#719e07\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"#268bd2\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "8e313928ad10b5073fc508af9439c7b78c4398ff",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/solarized-dark256.go",
      "status": "removed",
      "additions": 0,
      "deletions": 48,
      "changes": 48,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fsolarized-dark256.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fsolarized-dark256.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fsolarized-dark256.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,48 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// SolarizedDark256 style.\n-var SolarizedDark256 = Register(chroma.MustNewStyle(\"solarized-dark256\", chroma.StyleEntries{\n-\tchroma.Keyword:               \"#5f8700\",\n-\tchroma.KeywordConstant:       \"#d75f00\",\n-\tchroma.KeywordDeclaration:    \"#0087ff\",\n-\tchroma.KeywordNamespace:      \"#d75f00\",\n-\tchroma.KeywordReserved:       \"#0087ff\",\n-\tchroma.KeywordType:           \"#af0000\",\n-\tchroma.NameAttribute:         \"#8a8a8a\",\n-\tchroma.NameBuiltin:           \"#0087ff\",\n-\tchroma.NameBuiltinPseudo:     \"#0087ff\",\n-\tchroma.NameClass:             \"#0087ff\",\n-\tchroma.NameConstant:          \"#d75f00\",\n-\tchroma.NameDecorator:         \"#0087ff\",\n-\tchroma.NameEntity:            \"#d75f00\",\n-\tchroma.NameException:         \"#af8700\",\n-\tchroma.NameFunction:          \"#0087ff\",\n-\tchroma.NameTag:               \"#0087ff\",\n-\tchroma.NameVariable:          \"#0087ff\",\n-\tchroma.LiteralString:         \"#00afaf\",\n-\tchroma.LiteralStringBacktick: \"#4e4e4e\",\n-\tchroma.LiteralStringChar:     \"#00afaf\",\n-\tchroma.LiteralStringDoc:      \"#00afaf\",\n-\tchroma.LiteralStringEscape:   \"#af0000\",\n-\tchroma.LiteralStringHeredoc:  \"#00afaf\",\n-\tchroma.LiteralStringRegex:    \"#af0000\",\n-\tchroma.LiteralNumber:         \"#00afaf\",\n-\tchroma.Operator:              \"#8a8a8a\",\n-\tchroma.OperatorWord:          \"#5f8700\",\n-\tchroma.Comment:               \"#4e4e4e\",\n-\tchroma.CommentPreproc:        \"#5f8700\",\n-\tchroma.CommentSpecial:        \"#5f8700\",\n-\tchroma.GenericDeleted:        \"#af0000\",\n-\tchroma.GenericEmph:           \"italic\",\n-\tchroma.GenericError:          \"#af0000 bold\",\n-\tchroma.GenericHeading:        \"#d75f00\",\n-\tchroma.GenericInserted:       \"#5f8700\",\n-\tchroma.GenericStrong:         \"bold\",\n-\tchroma.GenericSubheading:     \"#0087ff\",\n-\tchroma.Background:            \"#8a8a8a bg:#1c1c1c\",\n-\tchroma.Other:                 \"#d75f00\",\n-}))"
    },
    {
      "sha": "977cfbe3f3f0e58bc0055f16be2404caa0c7a16c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/solarized-dark256.xml",
      "status": "added",
      "additions": 41,
      "deletions": 0,
      "changes": 41,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fsolarized-dark256.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fsolarized-dark256.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fsolarized-dark256.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,41 @@\n+<style name=\"solarized-dark256\">\n+  <entry type=\"Other\" style=\"#d75f00\"/>\n+  <entry type=\"Background\" style=\"#8a8a8a bg:#1c1c1c\"/>\n+  <entry type=\"Keyword\" style=\"#5f8700\"/>\n+  <entry type=\"KeywordConstant\" style=\"#d75f00\"/>\n+  <entry type=\"KeywordDeclaration\" style=\"#0087ff\"/>\n+  <entry type=\"KeywordNamespace\" style=\"#d75f00\"/>\n+  <entry type=\"KeywordReserved\" style=\"#0087ff\"/>\n+  <entry type=\"KeywordType\" style=\"#af0000\"/>\n+  <entry type=\"NameAttribute\" style=\"#8a8a8a\"/>\n+  <entry type=\"NameBuiltin\" style=\"#0087ff\"/>\n+  <entry type=\"NameBuiltinPseudo\" style=\"#0087ff\"/>\n+  <entry type=\"NameClass\" style=\"#0087ff\"/>\n+  <entry type=\"NameConstant\" style=\"#d75f00\"/>\n+  <entry type=\"NameDecorator\" style=\"#0087ff\"/>\n+  <entry type=\"NameEntity\" style=\"#d75f00\"/>\n+  <entry type=\"NameException\" style=\"#af8700\"/>\n+  <entry type=\"NameFunction\" style=\"#0087ff\"/>\n+  <entry type=\"NameTag\" style=\"#0087ff\"/>\n+  <entry type=\"NameVariable\" style=\"#0087ff\"/>\n+  <entry type=\"LiteralString\" style=\"#00afaf\"/>\n+  <entry type=\"LiteralStringBacktick\" style=\"#4e4e4e\"/>\n+  <entry type=\"LiteralStringChar\" style=\"#00afaf\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#00afaf\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#af0000\"/>\n+  <entry type=\"LiteralStringHeredoc\" style=\"#00afaf\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#af0000\"/>\n+  <entry type=\"LiteralNumber\" style=\"#00afaf\"/>\n+  <entry type=\"Operator\" style=\"#8a8a8a\"/>\n+  <entry type=\"OperatorWord\" style=\"#5f8700\"/>\n+  <entry type=\"Comment\" style=\"#4e4e4e\"/>\n+  <entry type=\"CommentSpecial\" style=\"#5f8700\"/>\n+  <entry type=\"CommentPreproc\" style=\"#5f8700\"/>\n+  <entry type=\"GenericDeleted\" style=\"#af0000\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"bold #af0000\"/>\n+  <entry type=\"GenericHeading\" style=\"#d75f00\"/>\n+  <entry type=\"GenericInserted\" style=\"#5f8700\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"#0087ff\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "517fd0282e0b2219e27cdacc696a07e20503d865",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/solarized-light.go",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fsolarized-light.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fsolarized-light.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fsolarized-light.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,24 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// SolarizedLight style.\n-var SolarizedLight = Register(chroma.MustNewStyle(\"solarized-light\", chroma.StyleEntries{\n-\tchroma.Text:             \"bg: #eee8d5 #586e75\",\n-\tchroma.Keyword:          \"#859900\",\n-\tchroma.KeywordConstant:  \"bold\",\n-\tchroma.KeywordNamespace: \"#dc322f bold\",\n-\tchroma.KeywordType:      \"bold\",\n-\tchroma.Name:             \"#268bd2\",\n-\tchroma.NameBuiltin:      \"#cb4b16\",\n-\tchroma.NameClass:        \"#cb4b16\",\n-\tchroma.NameTag:          \"bold\",\n-\tchroma.Literal:          \"#2aa198\",\n-\tchroma.LiteralNumber:    \"bold\",\n-\tchroma.OperatorWord:     \"#859900\",\n-\tchroma.Comment:          \"#93a1a1 italic\",\n-\tchroma.Generic:          \"#d33682\",\n-\tchroma.Background:       \" bg:#eee8d5\",\n-}))"
    },
    {
      "sha": "4fbc1d4a6754780fcebf6d41fdc706824c3b8066",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/solarized-light.xml",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fsolarized-light.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fsolarized-light.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fsolarized-light.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,17 @@\n+<style name=\"solarized-light\">\n+  <entry type=\"Background\" style=\"bg:#eee8d5\"/>\n+  <entry type=\"Keyword\" style=\"#859900\"/>\n+  <entry type=\"KeywordConstant\" style=\"bold\"/>\n+  <entry type=\"KeywordNamespace\" style=\"bold #dc322f\"/>\n+  <entry type=\"KeywordType\" style=\"bold\"/>\n+  <entry type=\"Name\" style=\"#268bd2\"/>\n+  <entry type=\"NameBuiltin\" style=\"#cb4b16\"/>\n+  <entry type=\"NameClass\" style=\"#cb4b16\"/>\n+  <entry type=\"NameTag\" style=\"bold\"/>\n+  <entry type=\"Literal\" style=\"#2aa198\"/>\n+  <entry type=\"LiteralNumber\" style=\"bold\"/>\n+  <entry type=\"OperatorWord\" style=\"#859900\"/>\n+  <entry type=\"Comment\" style=\"italic #93a1a1\"/>\n+  <entry type=\"Generic\" style=\"#d33682\"/>\n+  <entry type=\"Text\" style=\"#586e75\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "0cf7135e33a4586e2932820eddf91d8a601b290c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/swapoff.go",
      "status": "removed",
      "additions": 0,
      "deletions": 25,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fswapoff.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fswapoff.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fswapoff.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,25 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// SwapOff theme.\n-var SwapOff = Register(chroma.MustNewStyle(\"swapoff\", chroma.StyleEntries{\n-\tchroma.Background:        \"#lightgray bg:#black\",\n-\tchroma.Number:            \"bold #ansiyellow\",\n-\tchroma.Comment:           \"#ansiteal\",\n-\tchroma.CommentPreproc:    \"bold #ansigreen\",\n-\tchroma.String:            \"bold #ansiturquoise\",\n-\tchroma.Keyword:           \"bold #ansiwhite\",\n-\tchroma.NameKeyword:       \"bold #ansiwhite\",\n-\tchroma.NameBuiltin:       \"bold #ansiwhite\",\n-\tchroma.GenericHeading:    \"bold\",\n-\tchroma.GenericSubheading: \"bold\",\n-\tchroma.GenericStrong:     \"bold\",\n-\tchroma.GenericUnderline:  \"underline\",\n-\tchroma.NameTag:           \"bold\",\n-\tchroma.NameAttribute:     \"#ansiteal\",\n-\tchroma.Error:             \"#ansired\",\n-\tchroma.LiteralDate:       \"bold #ansiyellow\",\n-}))"
    },
    {
      "sha": "8a398df8d9d6d21d0958ca5c9a30ba001f7c1cad",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/swapoff.xml",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fswapoff.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fswapoff.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fswapoff.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,18 @@\n+<style name=\"swapoff\">\n+  <entry type=\"Error\" style=\"#ff0000\"/>\n+  <entry type=\"Background\" style=\"#e5e5e5 bg:#000000\"/>\n+  <entry type=\"Keyword\" style=\"bold #ffffff\"/>\n+  <entry type=\"NameAttribute\" style=\"#007f7f\"/>\n+  <entry type=\"NameBuiltin\" style=\"bold #ffffff\"/>\n+  <entry type=\"NameKeyword\" style=\"bold #ffffff\"/>\n+  <entry type=\"NameTag\" style=\"bold\"/>\n+  <entry type=\"LiteralDate\" style=\"bold #ffff00\"/>\n+  <entry type=\"LiteralString\" style=\"bold #00ffff\"/>\n+  <entry type=\"LiteralNumber\" style=\"bold #ffff00\"/>\n+  <entry type=\"Comment\" style=\"#007f7f\"/>\n+  <entry type=\"CommentPreproc\" style=\"bold #00ff00\"/>\n+  <entry type=\"GenericHeading\" style=\"bold\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "5608752d52d1a76b04822a33dc3cdcabdc6bffad",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/tango.go",
      "status": "removed",
      "additions": 0,
      "deletions": 79,
      "changes": 79,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ftango.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ftango.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ftango.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,79 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Tango style.\n-var Tango = Register(chroma.MustNewStyle(\"tango\", chroma.StyleEntries{\n-\tchroma.TextWhitespace:           \"underline #f8f8f8\",\n-\tchroma.Error:                    \"#a40000 border:#ef2929\",\n-\tchroma.Other:                    \"#000000\",\n-\tchroma.Comment:                  \"italic #8f5902\",\n-\tchroma.CommentMultiline:         \"italic #8f5902\",\n-\tchroma.CommentPreproc:           \"italic #8f5902\",\n-\tchroma.CommentSingle:            \"italic #8f5902\",\n-\tchroma.CommentSpecial:           \"italic #8f5902\",\n-\tchroma.Keyword:                  \"bold #204a87\",\n-\tchroma.KeywordConstant:          \"bold #204a87\",\n-\tchroma.KeywordDeclaration:       \"bold #204a87\",\n-\tchroma.KeywordNamespace:         \"bold #204a87\",\n-\tchroma.KeywordPseudo:            \"bold #204a87\",\n-\tchroma.KeywordReserved:          \"bold #204a87\",\n-\tchroma.KeywordType:              \"bold #204a87\",\n-\tchroma.Operator:                 \"bold #ce5c00\",\n-\tchroma.OperatorWord:             \"bold #204a87\",\n-\tchroma.Punctuation:              \"bold #000000\",\n-\tchroma.Name:                     \"#000000\",\n-\tchroma.NameAttribute:            \"#c4a000\",\n-\tchroma.NameBuiltin:              \"#204a87\",\n-\tchroma.NameBuiltinPseudo:        \"#3465a4\",\n-\tchroma.NameClass:                \"#000000\",\n-\tchroma.NameConstant:             \"#000000\",\n-\tchroma.NameDecorator:            \"bold #5c35cc\",\n-\tchroma.NameEntity:               \"#ce5c00\",\n-\tchroma.NameException:            \"bold #cc0000\",\n-\tchroma.NameFunction:             \"#000000\",\n-\tchroma.NameProperty:             \"#000000\",\n-\tchroma.NameLabel:                \"#f57900\",\n-\tchroma.NameNamespace:            \"#000000\",\n-\tchroma.NameOther:                \"#000000\",\n-\tchroma.NameTag:                  \"bold #204a87\",\n-\tchroma.NameVariable:             \"#000000\",\n-\tchroma.NameVariableClass:        \"#000000\",\n-\tchroma.NameVariableGlobal:       \"#000000\",\n-\tchroma.NameVariableInstance:     \"#000000\",\n-\tchroma.LiteralNumber:            \"bold #0000cf\",\n-\tchroma.LiteralNumberFloat:       \"bold #0000cf\",\n-\tchroma.LiteralNumberHex:         \"bold #0000cf\",\n-\tchroma.LiteralNumberInteger:     \"bold #0000cf\",\n-\tchroma.LiteralNumberIntegerLong: \"bold #0000cf\",\n-\tchroma.LiteralNumberOct:         \"bold #0000cf\",\n-\tchroma.Literal:                  \"#000000\",\n-\tchroma.LiteralDate:              \"#000000\",\n-\tchroma.LiteralString:            \"#4e9a06\",\n-\tchroma.LiteralStringBacktick:    \"#4e9a06\",\n-\tchroma.LiteralStringChar:        \"#4e9a06\",\n-\tchroma.LiteralStringDoc:         \"italic #8f5902\",\n-\tchroma.LiteralStringDouble:      \"#4e9a06\",\n-\tchroma.LiteralStringEscape:      \"#4e9a06\",\n-\tchroma.LiteralStringHeredoc:     \"#4e9a06\",\n-\tchroma.LiteralStringInterpol:    \"#4e9a06\",\n-\tchroma.LiteralStringOther:       \"#4e9a06\",\n-\tchroma.LiteralStringRegex:       \"#4e9a06\",\n-\tchroma.LiteralStringSingle:      \"#4e9a06\",\n-\tchroma.LiteralStringSymbol:      \"#4e9a06\",\n-\tchroma.Generic:                  \"#000000\",\n-\tchroma.GenericDeleted:           \"#a40000\",\n-\tchroma.GenericEmph:              \"italic #000000\",\n-\tchroma.GenericError:             \"#ef2929\",\n-\tchroma.GenericHeading:           \"bold #000080\",\n-\tchroma.GenericInserted:          \"#00A000\",\n-\tchroma.GenericOutput:            \"italic #000000\",\n-\tchroma.GenericPrompt:            \"#8f5902\",\n-\tchroma.GenericStrong:            \"bold #000000\",\n-\tchroma.GenericSubheading:        \"bold #800080\",\n-\tchroma.GenericTraceback:         \"bold #a40000\",\n-\tchroma.GenericUnderline:         \"underline\",\n-\tchroma.Background:               \" bg:#f8f8f8\",\n-}))"
    },
    {
      "sha": "5ca46bb75e15561fca3f49f6f800caf88e5ec302",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/tango.xml",
      "status": "added",
      "additions": 72,
      "deletions": 0,
      "changes": 72,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ftango.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ftango.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ftango.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,72 @@\n+<style name=\"tango\">\n+  <entry type=\"Other\" style=\"#000000\"/>\n+  <entry type=\"Error\" style=\"#a40000 border:#ef2929\"/>\n+  <entry type=\"Background\" style=\"bg:#f8f8f8\"/>\n+  <entry type=\"Keyword\" style=\"bold #204a87\"/>\n+  <entry type=\"KeywordConstant\" style=\"bold #204a87\"/>\n+  <entry type=\"KeywordDeclaration\" style=\"bold #204a87\"/>\n+  <entry type=\"KeywordNamespace\" style=\"bold #204a87\"/>\n+  <entry type=\"KeywordPseudo\" style=\"bold #204a87\"/>\n+  <entry type=\"KeywordReserved\" style=\"bold #204a87\"/>\n+  <entry type=\"KeywordType\" style=\"bold #204a87\"/>\n+  <entry type=\"Name\" style=\"#000000\"/>\n+  <entry type=\"NameAttribute\" style=\"#c4a000\"/>\n+  <entry type=\"NameBuiltin\" style=\"#204a87\"/>\n+  <entry type=\"NameBuiltinPseudo\" style=\"#3465a4\"/>\n+  <entry type=\"NameClass\" style=\"#000000\"/>\n+  <entry type=\"NameConstant\" style=\"#000000\"/>\n+  <entry type=\"NameDecorator\" style=\"bold #5c35cc\"/>\n+  <entry type=\"NameEntity\" style=\"#ce5c00\"/>\n+  <entry type=\"NameException\" style=\"bold #cc0000\"/>\n+  <entry type=\"NameFunction\" style=\"#000000\"/>\n+  <entry type=\"NameLabel\" style=\"#f57900\"/>\n+  <entry type=\"NameNamespace\" style=\"#000000\"/>\n+  <entry type=\"NameOther\" style=\"#000000\"/>\n+  <entry type=\"NameProperty\" style=\"#000000\"/>\n+  <entry type=\"NameTag\" style=\"bold #204a87\"/>\n+  <entry type=\"NameVariable\" style=\"#000000\"/>\n+  <entry type=\"NameVariableClass\" style=\"#000000\"/>\n+  <entry type=\"NameVariableGlobal\" style=\"#000000\"/>\n+  <entry type=\"NameVariableInstance\" style=\"#000000\"/>\n+  <entry type=\"Literal\" style=\"#000000\"/>\n+  <entry type=\"LiteralDate\" style=\"#000000\"/>\n+  <entry type=\"LiteralString\" style=\"#4e9a06\"/>\n+  <entry type=\"LiteralStringBacktick\" style=\"#4e9a06\"/>\n+  <entry type=\"LiteralStringChar\" style=\"#4e9a06\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"italic #8f5902\"/>\n+  <entry type=\"LiteralStringDouble\" style=\"#4e9a06\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#4e9a06\"/>\n+  <entry type=\"LiteralStringHeredoc\" style=\"#4e9a06\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#4e9a06\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#4e9a06\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#4e9a06\"/>\n+  <entry type=\"LiteralStringSingle\" style=\"#4e9a06\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#4e9a06\"/>\n+  <entry type=\"LiteralNumber\" style=\"bold #0000cf\"/>\n+  <entry type=\"LiteralNumberFloat\" style=\"bold #0000cf\"/>\n+  <entry type=\"LiteralNumberHex\" style=\"bold #0000cf\"/>\n+  <entry type=\"LiteralNumberInteger\" style=\"bold #0000cf\"/>\n+  <entry type=\"LiteralNumberIntegerLong\" style=\"bold #0000cf\"/>\n+  <entry type=\"LiteralNumberOct\" style=\"bold #0000cf\"/>\n+  <entry type=\"Operator\" style=\"bold #ce5c00\"/>\n+  <entry type=\"OperatorWord\" style=\"bold #204a87\"/>\n+  <entry type=\"Punctuation\" style=\"bold #000000\"/>\n+  <entry type=\"Comment\" style=\"italic #8f5902\"/>\n+  <entry type=\"CommentMultiline\" style=\"italic #8f5902\"/>\n+  <entry type=\"CommentSingle\" style=\"italic #8f5902\"/>\n+  <entry type=\"CommentSpecial\" style=\"italic #8f5902\"/>\n+  <entry type=\"CommentPreproc\" style=\"italic #8f5902\"/>\n+  <entry type=\"Generic\" style=\"#000000\"/>\n+  <entry type=\"GenericDeleted\" style=\"#a40000\"/>\n+  <entry type=\"GenericEmph\" style=\"italic #000000\"/>\n+  <entry type=\"GenericError\" style=\"#ef2929\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #000080\"/>\n+  <entry type=\"GenericInserted\" style=\"#00a000\"/>\n+  <entry type=\"GenericOutput\" style=\"italic #000000\"/>\n+  <entry type=\"GenericPrompt\" style=\"#8f5902\"/>\n+  <entry type=\"GenericStrong\" style=\"bold #000000\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #800080\"/>\n+  <entry type=\"GenericTraceback\" style=\"bold #a40000\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"TextWhitespace\" style=\"underline #f8f8f8\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "c149cd2a29f048a8528bc2571a7fe0497ef8b789",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/trac.go",
      "status": "removed",
      "additions": 0,
      "deletions": 42,
      "changes": 42,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ftrac.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ftrac.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ftrac.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,42 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Trac style.\n-var Trac = Register(chroma.MustNewStyle(\"trac\", chroma.StyleEntries{\n-\tchroma.TextWhitespace:     \"#bbbbbb\",\n-\tchroma.Comment:            \"italic #999988\",\n-\tchroma.CommentPreproc:     \"bold noitalic #999999\",\n-\tchroma.CommentSpecial:     \"bold #999999\",\n-\tchroma.Operator:           \"bold\",\n-\tchroma.LiteralString:      \"#bb8844\",\n-\tchroma.LiteralStringRegex: \"#808000\",\n-\tchroma.LiteralNumber:      \"#009999\",\n-\tchroma.Keyword:            \"bold\",\n-\tchroma.KeywordType:        \"#445588\",\n-\tchroma.NameBuiltin:        \"#999999\",\n-\tchroma.NameFunction:       \"bold #990000\",\n-\tchroma.NameClass:          \"bold #445588\",\n-\tchroma.NameException:      \"bold #990000\",\n-\tchroma.NameNamespace:      \"#555555\",\n-\tchroma.NameVariable:       \"#008080\",\n-\tchroma.NameConstant:       \"#008080\",\n-\tchroma.NameTag:            \"#000080\",\n-\tchroma.NameAttribute:      \"#008080\",\n-\tchroma.NameEntity:         \"#800080\",\n-\tchroma.GenericHeading:     \"#999999\",\n-\tchroma.GenericSubheading:  \"#aaaaaa\",\n-\tchroma.GenericDeleted:     \"bg:#ffdddd #000000\",\n-\tchroma.GenericInserted:    \"bg:#ddffdd #000000\",\n-\tchroma.GenericError:       \"#aa0000\",\n-\tchroma.GenericEmph:        \"italic\",\n-\tchroma.GenericStrong:      \"bold\",\n-\tchroma.GenericPrompt:      \"#555555\",\n-\tchroma.GenericOutput:      \"#888888\",\n-\tchroma.GenericTraceback:   \"#aa0000\",\n-\tchroma.GenericUnderline:   \"underline\",\n-\tchroma.Error:              \"bg:#e3d2d2 #a61717\",\n-\tchroma.Background:         \" bg:#ffffff\",\n-}))"
    },
    {
      "sha": "9f1d266780c3c67347515f49226f7b38dddc8683",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/trac.xml",
      "status": "added",
      "additions": 35,
      "deletions": 0,
      "changes": 35,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ftrac.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ftrac.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Ftrac.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,35 @@\n+<style name=\"trac\">\n+  <entry type=\"Error\" style=\"#a61717 bg:#e3d2d2\"/>\n+  <entry type=\"Background\" style=\"bg:#ffffff\"/>\n+  <entry type=\"Keyword\" style=\"bold\"/>\n+  <entry type=\"KeywordType\" style=\"#445588\"/>\n+  <entry type=\"NameAttribute\" style=\"#008080\"/>\n+  <entry type=\"NameBuiltin\" style=\"#999999\"/>\n+  <entry type=\"NameClass\" style=\"bold #445588\"/>\n+  <entry type=\"NameConstant\" style=\"#008080\"/>\n+  <entry type=\"NameEntity\" style=\"#800080\"/>\n+  <entry type=\"NameException\" style=\"bold #990000\"/>\n+  <entry type=\"NameFunction\" style=\"bold #990000\"/>\n+  <entry type=\"NameNamespace\" style=\"#555555\"/>\n+  <entry type=\"NameTag\" style=\"#000080\"/>\n+  <entry type=\"NameVariable\" style=\"#008080\"/>\n+  <entry type=\"LiteralString\" style=\"#bb8844\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#808000\"/>\n+  <entry type=\"LiteralNumber\" style=\"#009999\"/>\n+  <entry type=\"Operator\" style=\"bold\"/>\n+  <entry type=\"Comment\" style=\"italic #999988\"/>\n+  <entry type=\"CommentSpecial\" style=\"bold #999999\"/>\n+  <entry type=\"CommentPreproc\" style=\"bold noitalic #999999\"/>\n+  <entry type=\"GenericDeleted\" style=\"#000000 bg:#ffdddd\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#aa0000\"/>\n+  <entry type=\"GenericHeading\" style=\"#999999\"/>\n+  <entry type=\"GenericInserted\" style=\"#000000 bg:#ddffdd\"/>\n+  <entry type=\"GenericOutput\" style=\"#888888\"/>\n+  <entry type=\"GenericPrompt\" style=\"#555555\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"#aaaaaa\"/>\n+  <entry type=\"GenericTraceback\" style=\"#aa0000\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"TextWhitespace\" style=\"#bbbbbb\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "caa2e09ee68d623d45e7391503289357e0148dbc",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/vim.go",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvim.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvim.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvim.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,36 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Vim style.\n-var Vim = Register(chroma.MustNewStyle(\"vim\", chroma.StyleEntries{\n-\tchroma.Background:         \"#cccccc bg:#000000\",\n-\tchroma.Comment:            \"#000080\",\n-\tchroma.CommentSpecial:     \"bold #cd0000\",\n-\tchroma.Keyword:            \"#cdcd00\",\n-\tchroma.KeywordDeclaration: \"#00cd00\",\n-\tchroma.KeywordNamespace:   \"#cd00cd\",\n-\tchroma.KeywordType:        \"#00cd00\",\n-\tchroma.Operator:           \"#3399cc\",\n-\tchroma.OperatorWord:       \"#cdcd00\",\n-\tchroma.NameClass:          \"#00cdcd\",\n-\tchroma.NameBuiltin:        \"#cd00cd\",\n-\tchroma.NameException:      \"bold #666699\",\n-\tchroma.NameVariable:       \"#00cdcd\",\n-\tchroma.LiteralString:      \"#cd0000\",\n-\tchroma.LiteralNumber:      \"#cd00cd\",\n-\tchroma.GenericHeading:     \"bold #000080\",\n-\tchroma.GenericSubheading:  \"bold #800080\",\n-\tchroma.GenericDeleted:     \"#cd0000\",\n-\tchroma.GenericInserted:    \"#00cd00\",\n-\tchroma.GenericError:       \"#FF0000\",\n-\tchroma.GenericEmph:        \"italic\",\n-\tchroma.GenericStrong:      \"bold\",\n-\tchroma.GenericPrompt:      \"bold #000080\",\n-\tchroma.GenericOutput:      \"#888\",\n-\tchroma.GenericTraceback:   \"#04D\",\n-\tchroma.GenericUnderline:   \"underline\",\n-\tchroma.Error:              \"border:#FF0000\",\n-}))"
    },
    {
      "sha": "fec6934347eaef7fc6ecadbf3fde521fe576ffe3",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/vim.xml",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvim.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvim.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvim.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,29 @@\n+<style name=\"vim\">\n+  <entry type=\"Error\" style=\"border:#ff0000\"/>\n+  <entry type=\"Background\" style=\"#cccccc bg:#000000\"/>\n+  <entry type=\"Keyword\" style=\"#cdcd00\"/>\n+  <entry type=\"KeywordDeclaration\" style=\"#00cd00\"/>\n+  <entry type=\"KeywordNamespace\" style=\"#cd00cd\"/>\n+  <entry type=\"KeywordType\" style=\"#00cd00\"/>\n+  <entry type=\"NameBuiltin\" style=\"#cd00cd\"/>\n+  <entry type=\"NameClass\" style=\"#00cdcd\"/>\n+  <entry type=\"NameException\" style=\"bold #666699\"/>\n+  <entry type=\"NameVariable\" style=\"#00cdcd\"/>\n+  <entry type=\"LiteralString\" style=\"#cd0000\"/>\n+  <entry type=\"LiteralNumber\" style=\"#cd00cd\"/>\n+  <entry type=\"Operator\" style=\"#3399cc\"/>\n+  <entry type=\"OperatorWord\" style=\"#cdcd00\"/>\n+  <entry type=\"Comment\" style=\"#000080\"/>\n+  <entry type=\"CommentSpecial\" style=\"bold #cd0000\"/>\n+  <entry type=\"GenericDeleted\" style=\"#cd0000\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericError\" style=\"#ff0000\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #000080\"/>\n+  <entry type=\"GenericInserted\" style=\"#00cd00\"/>\n+  <entry type=\"GenericOutput\" style=\"#888888\"/>\n+  <entry type=\"GenericPrompt\" style=\"bold #000080\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold #800080\"/>\n+  <entry type=\"GenericTraceback\" style=\"#0044dd\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "c601a31395ac65419d03837608d770dc950d8ea0",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/vs.go",
      "status": "removed",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvs.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvs.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvs.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,23 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// VisualStudio style.\n-var VisualStudio = Register(chroma.MustNewStyle(\"vs\", chroma.StyleEntries{\n-\tchroma.Comment:           \"#008000\",\n-\tchroma.CommentPreproc:    \"#0000ff\",\n-\tchroma.Keyword:           \"#0000ff\",\n-\tchroma.OperatorWord:      \"#0000ff\",\n-\tchroma.KeywordType:       \"#2b91af\",\n-\tchroma.NameClass:         \"#2b91af\",\n-\tchroma.LiteralString:     \"#a31515\",\n-\tchroma.GenericHeading:    \"bold\",\n-\tchroma.GenericSubheading: \"bold\",\n-\tchroma.GenericEmph:       \"italic\",\n-\tchroma.GenericStrong:     \"bold\",\n-\tchroma.GenericPrompt:     \"bold\",\n-\tchroma.Error:             \"border:#FF0000\",\n-\tchroma.Background:        \" bg:#ffffff\",\n-}))"
    },
    {
      "sha": "56435015497920bca11624070fd63d2a0eb7f6e1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/vs.xml",
      "status": "added",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvs.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvs.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvs.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,16 @@\n+<style name=\"vs\">\n+  <entry type=\"Error\" style=\"border:#ff0000\"/>\n+  <entry type=\"Background\" style=\"bg:#ffffff\"/>\n+  <entry type=\"Keyword\" style=\"#0000ff\"/>\n+  <entry type=\"KeywordType\" style=\"#2b91af\"/>\n+  <entry type=\"NameClass\" style=\"#2b91af\"/>\n+  <entry type=\"LiteralString\" style=\"#a31515\"/>\n+  <entry type=\"OperatorWord\" style=\"#0000ff\"/>\n+  <entry type=\"Comment\" style=\"#008000\"/>\n+  <entry type=\"CommentPreproc\" style=\"#0000ff\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericHeading\" style=\"bold\"/>\n+  <entry type=\"GenericPrompt\" style=\"bold\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"bold\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "4060422f8f8e76e3c4d596ec6ba8a486ded562c5",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/vulcan.go",
      "status": "removed",
      "additions": 0,
      "deletions": 95,
      "changes": 95,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvulcan.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvulcan.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvulcan.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,95 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-var (\n-\t// inspired by Doom Emacs's One Doom Theme\n-\tblack  = \"#282C34\"\n-\tgrey   = \"#3E4460\"\n-\tgrey2  = \"#43454f\"\n-\twhite  = \"#C9C9C9\"\n-\tred    = \"#CF5967\"\n-\tyellow = \"#ECBE7B\"\n-\tgreen  = \"#82CC6A\"\n-\tcyan   = \"#56B6C2\"\n-\tblue   = \"#7FBAF5\"\n-\tblue2  = \"#57C7FF\"\n-\tpurple = \"#BC74C4\"\n-)\n-\n-var Vulcan = Register(chroma.MustNewStyle(\"vulcan\", chroma.StyleEntries{\n-\tchroma.Comment:                  grey,\n-\tchroma.CommentHashbang:          grey + \" italic\",\n-\tchroma.CommentMultiline:         grey,\n-\tchroma.CommentPreproc:           blue,\n-\tchroma.CommentSingle:            grey,\n-\tchroma.CommentSpecial:           purple + \" italic\",\n-\tchroma.Generic:                  white,\n-\tchroma.GenericDeleted:           red,\n-\tchroma.GenericEmph:              white + \" underline\",\n-\tchroma.GenericError:             red + \" bold\",\n-\tchroma.GenericHeading:           yellow + \" bold\",\n-\tchroma.GenericInserted:          yellow,\n-\tchroma.GenericOutput:            grey2,\n-\tchroma.GenericPrompt:            white,\n-\tchroma.GenericStrong:            red + \" bold\",\n-\tchroma.GenericSubheading:        red + \" italic\",\n-\tchroma.GenericTraceback:         white,\n-\tchroma.GenericUnderline:         \"underline\",\n-\tchroma.Error:                    red,\n-\tchroma.Keyword:                  blue,\n-\tchroma.KeywordConstant:          red + \" bg:\" + grey2,\n-\tchroma.KeywordDeclaration:       blue,\n-\tchroma.KeywordNamespace:         purple,\n-\tchroma.KeywordPseudo:            purple,\n-\tchroma.KeywordReserved:          blue,\n-\tchroma.KeywordType:              blue2 + \" bold\",\n-\tchroma.Literal:                  white,\n-\tchroma.LiteralDate:              blue2,\n-\tchroma.Name:                     white,\n-\tchroma.NameAttribute:            purple,\n-\tchroma.NameBuiltin:              blue,\n-\tchroma.NameBuiltinPseudo:        blue,\n-\tchroma.NameClass:                yellow,\n-\tchroma.NameConstant:             yellow,\n-\tchroma.NameDecorator:            yellow,\n-\tchroma.NameEntity:               white,\n-\tchroma.NameException:            red,\n-\tchroma.NameFunction:             blue2,\n-\tchroma.NameLabel:                red,\n-\tchroma.NameNamespace:            white,\n-\tchroma.NameOther:                white,\n-\tchroma.NameTag:                  purple,\n-\tchroma.NameVariable:             purple + \" italic\",\n-\tchroma.NameVariableClass:        blue2 + \" bold\",\n-\tchroma.NameVariableGlobal:       yellow,\n-\tchroma.NameVariableInstance:     blue2,\n-\tchroma.LiteralNumber:            cyan,\n-\tchroma.LiteralNumberBin:         blue2,\n-\tchroma.LiteralNumberFloat:       cyan,\n-\tchroma.LiteralNumberHex:         blue2,\n-\tchroma.LiteralNumberInteger:     cyan,\n-\tchroma.LiteralNumberIntegerLong: cyan,\n-\tchroma.LiteralNumberOct:         blue2,\n-\tchroma.Operator:                 purple,\n-\tchroma.OperatorWord:             purple,\n-\tchroma.Other:                    white,\n-\tchroma.Punctuation:              cyan,\n-\tchroma.LiteralString:            green,\n-\tchroma.LiteralStringBacktick:    blue2,\n-\tchroma.LiteralStringChar:        blue2,\n-\tchroma.LiteralStringDoc:         green,\n-\tchroma.LiteralStringDouble:      green,\n-\tchroma.LiteralStringEscape:      cyan,\n-\tchroma.LiteralStringHeredoc:     cyan,\n-\tchroma.LiteralStringInterpol:    green,\n-\tchroma.LiteralStringOther:       green,\n-\tchroma.LiteralStringRegex:       blue2,\n-\tchroma.LiteralStringSingle:      green,\n-\tchroma.LiteralStringSymbol:      green,\n-\tchroma.Text:                     white,\n-\tchroma.TextWhitespace:           white,\n-\tchroma.Background:               \" bg: \" + black,\n-}))"
    },
    {
      "sha": "41996ff76f2199a643600667071e6208fde070fb",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/vulcan.xml",
      "status": "added",
      "additions": 74,
      "deletions": 0,
      "changes": 74,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvulcan.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvulcan.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fvulcan.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,74 @@\n+<style name=\"vulcan\">\n+  <entry type=\"Other\" style=\"#c9c9c9\"/>\n+  <entry type=\"Error\" style=\"#cf5967\"/>\n+  <entry type=\"Background\" style=\"#282c34\"/>\n+  <entry type=\"Keyword\" style=\"#7fbaf5\"/>\n+  <entry type=\"KeywordConstant\" style=\"#cf5967 bg:#43454f\"/>\n+  <entry type=\"KeywordDeclaration\" style=\"#7fbaf5\"/>\n+  <entry type=\"KeywordNamespace\" style=\"#bc74c4\"/>\n+  <entry type=\"KeywordPseudo\" style=\"#bc74c4\"/>\n+  <entry type=\"KeywordReserved\" style=\"#7fbaf5\"/>\n+  <entry type=\"KeywordType\" style=\"bold #57c7ff\"/>\n+  <entry type=\"Name\" style=\"#c9c9c9\"/>\n+  <entry type=\"NameAttribute\" style=\"#bc74c4\"/>\n+  <entry type=\"NameBuiltin\" style=\"#7fbaf5\"/>\n+  <entry type=\"NameBuiltinPseudo\" style=\"#7fbaf5\"/>\n+  <entry type=\"NameClass\" style=\"#ecbe7b\"/>\n+  <entry type=\"NameConstant\" style=\"#ecbe7b\"/>\n+  <entry type=\"NameDecorator\" style=\"#ecbe7b\"/>\n+  <entry type=\"NameEntity\" style=\"#c9c9c9\"/>\n+  <entry type=\"NameException\" style=\"#cf5967\"/>\n+  <entry type=\"NameFunction\" style=\"#57c7ff\"/>\n+  <entry type=\"NameLabel\" style=\"#cf5967\"/>\n+  <entry type=\"NameNamespace\" style=\"#c9c9c9\"/>\n+  <entry type=\"NameOther\" style=\"#c9c9c9\"/>\n+  <entry type=\"NameTag\" style=\"#bc74c4\"/>\n+  <entry type=\"NameVariable\" style=\"italic #bc74c4\"/>\n+  <entry type=\"NameVariableClass\" style=\"bold #57c7ff\"/>\n+  <entry type=\"NameVariableGlobal\" style=\"#ecbe7b\"/>\n+  <entry type=\"NameVariableInstance\" style=\"#57c7ff\"/>\n+  <entry type=\"Literal\" style=\"#c9c9c9\"/>\n+  <entry type=\"LiteralDate\" style=\"#57c7ff\"/>\n+  <entry type=\"LiteralString\" style=\"#82cc6a\"/>\n+  <entry type=\"LiteralStringBacktick\" style=\"#57c7ff\"/>\n+  <entry type=\"LiteralStringChar\" style=\"#57c7ff\"/>\n+  <entry type=\"LiteralStringDoc\" style=\"#82cc6a\"/>\n+  <entry type=\"LiteralStringDouble\" style=\"#82cc6a\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#56b6c2\"/>\n+  <entry type=\"LiteralStringHeredoc\" style=\"#56b6c2\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#82cc6a\"/>\n+  <entry type=\"LiteralStringOther\" style=\"#82cc6a\"/>\n+  <entry type=\"LiteralStringRegex\" style=\"#57c7ff\"/>\n+  <entry type=\"LiteralStringSingle\" style=\"#82cc6a\"/>\n+  <entry type=\"LiteralStringSymbol\" style=\"#82cc6a\"/>\n+  <entry type=\"LiteralNumber\" style=\"#56b6c2\"/>\n+  <entry type=\"LiteralNumberBin\" style=\"#57c7ff\"/>\n+  <entry type=\"LiteralNumberFloat\" style=\"#56b6c2\"/>\n+  <entry type=\"LiteralNumberHex\" style=\"#57c7ff\"/>\n+  <entry type=\"LiteralNumberInteger\" style=\"#56b6c2\"/>\n+  <entry type=\"LiteralNumberIntegerLong\" style=\"#56b6c2\"/>\n+  <entry type=\"LiteralNumberOct\" style=\"#57c7ff\"/>\n+  <entry type=\"Operator\" style=\"#bc74c4\"/>\n+  <entry type=\"OperatorWord\" style=\"#bc74c4\"/>\n+  <entry type=\"Punctuation\" style=\"#56b6c2\"/>\n+  <entry type=\"Comment\" style=\"#3e4460\"/>\n+  <entry type=\"CommentHashbang\" style=\"italic #3e4460\"/>\n+  <entry type=\"CommentMultiline\" style=\"#3e4460\"/>\n+  <entry type=\"CommentSingle\" style=\"#3e4460\"/>\n+  <entry type=\"CommentSpecial\" style=\"italic #bc74c4\"/>\n+  <entry type=\"CommentPreproc\" style=\"#7fbaf5\"/>\n+  <entry type=\"Generic\" style=\"#c9c9c9\"/>\n+  <entry type=\"GenericDeleted\" style=\"#cf5967\"/>\n+  <entry type=\"GenericEmph\" style=\"underline #c9c9c9\"/>\n+  <entry type=\"GenericError\" style=\"bold #cf5967\"/>\n+  <entry type=\"GenericHeading\" style=\"bold #ecbe7b\"/>\n+  <entry type=\"GenericInserted\" style=\"#ecbe7b\"/>\n+  <entry type=\"GenericOutput\" style=\"#43454f\"/>\n+  <entry type=\"GenericPrompt\" style=\"#c9c9c9\"/>\n+  <entry type=\"GenericStrong\" style=\"bold #cf5967\"/>\n+  <entry type=\"GenericSubheading\" style=\"italic #cf5967\"/>\n+  <entry type=\"GenericTraceback\" style=\"#c9c9c9\"/>\n+  <entry type=\"GenericUnderline\" style=\"underline\"/>\n+  <entry type=\"Text\" style=\"#c9c9c9\"/>\n+  <entry type=\"TextWhitespace\" style=\"#c9c9c9\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "201e6972ef1c1f60c3a7baae7ea934d734219b31",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/witchhazel.go",
      "status": "removed",
      "additions": 0,
      "deletions": 52,
      "changes": 52,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fwitchhazel.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fwitchhazel.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fwitchhazel.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,52 +0,0 @@\n-// Copyright 2018 Alethea Katherine Flowers\n-//\n-// Licensed under the Apache License, Version 2.0 (the \"License\");\n-// you may not use this file except in compliance with the License.\n-// You may obtain a copy of the License at\n-//\n-//    http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// WitchHazel Style\n-var WitchHazel = Register(chroma.MustNewStyle(\"witchhazel\", chroma.StyleEntries{\n-\tchroma.Text:              \"#F8F8F2\",\n-\tchroma.Whitespace:        \"#A8757B\",\n-\tchroma.Error:             \"#960050 bg:#1e0010\",\n-\tchroma.Comment:           \"#b0bec5\",\n-\tchroma.Keyword:           \"#C2FFDF\",\n-\tchroma.KeywordNamespace:  \"#FFB8D1\",\n-\tchroma.Operator:          \"#FFB8D1\",\n-\tchroma.Punctuation:       \"#F8F8F2\",\n-\tchroma.Name:              \"#F8F8F2\",\n-\tchroma.NameAttribute:     \"#ceb1ff\",\n-\tchroma.NameBuiltinPseudo: \"#80cbc4\",\n-\tchroma.NameClass:         \"#ceb1ff\",\n-\tchroma.NameConstant:      \"#C5A3FF\",\n-\tchroma.NameDecorator:     \"#ceb1ff\",\n-\tchroma.NameException:     \"#ceb1ff\",\n-\tchroma.NameFunction:      \"#ceb1ff\",\n-\tchroma.NameProperty:      \"#F8F8F2\",\n-\tchroma.NameTag:           \"#FFB8D1\",\n-\tchroma.NameVariable:      \"#F8F8F2\",\n-\tchroma.Number:            \"#C5A3FF\",\n-\tchroma.Literal:           \"#ae81ff\",\n-\tchroma.LiteralDate:       \"#e6db74\",\n-\tchroma.String:            \"#1bc5e0\",\n-\tchroma.GenericDeleted:    \"#f92672\",\n-\tchroma.GenericEmph:       \"italic\",\n-\tchroma.GenericInserted:   \"#a6e22e\",\n-\tchroma.GenericStrong:     \"bold\",\n-\tchroma.GenericSubheading: \"#75715e\",\n-\tchroma.Background:        \" bg:#433e56\",\n-}))"
    },
    {
      "sha": "52f2299133ec44f21cb448b9d0f4579deb2bf98d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/witchhazel.xml",
      "status": "added",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fwitchhazel.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fwitchhazel.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fwitchhazel.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,31 @@\n+<style name=\"witchhazel\">\n+  <entry type=\"Error\" style=\"#960050 bg:#1e0010\"/>\n+  <entry type=\"Background\" style=\"bg:#433e56\"/>\n+  <entry type=\"Keyword\" style=\"#c2ffdf\"/>\n+  <entry type=\"KeywordNamespace\" style=\"#ffb8d1\"/>\n+  <entry type=\"Name\" style=\"#f8f8f2\"/>\n+  <entry type=\"NameAttribute\" style=\"#ceb1ff\"/>\n+  <entry type=\"NameBuiltinPseudo\" style=\"#80cbc4\"/>\n+  <entry type=\"NameClass\" style=\"#ceb1ff\"/>\n+  <entry type=\"NameConstant\" style=\"#c5a3ff\"/>\n+  <entry type=\"NameDecorator\" style=\"#ceb1ff\"/>\n+  <entry type=\"NameException\" style=\"#ceb1ff\"/>\n+  <entry type=\"NameFunction\" style=\"#ceb1ff\"/>\n+  <entry type=\"NameProperty\" style=\"#f8f8f2\"/>\n+  <entry type=\"NameTag\" style=\"#ffb8d1\"/>\n+  <entry type=\"NameVariable\" style=\"#f8f8f2\"/>\n+  <entry type=\"Literal\" style=\"#ae81ff\"/>\n+  <entry type=\"LiteralDate\" style=\"#e6db74\"/>\n+  <entry type=\"LiteralString\" style=\"#1bc5e0\"/>\n+  <entry type=\"LiteralNumber\" style=\"#c5a3ff\"/>\n+  <entry type=\"Operator\" style=\"#ffb8d1\"/>\n+  <entry type=\"Punctuation\" style=\"#f8f8f2\"/>\n+  <entry type=\"Comment\" style=\"#b0bec5\"/>\n+  <entry type=\"GenericDeleted\" style=\"#f92672\"/>\n+  <entry type=\"GenericEmph\" style=\"italic\"/>\n+  <entry type=\"GenericInserted\" style=\"#a6e22e\"/>\n+  <entry type=\"GenericStrong\" style=\"bold\"/>\n+  <entry type=\"GenericSubheading\" style=\"#75715e\"/>\n+  <entry type=\"Text\" style=\"#f8f8f2\"/>\n+  <entry type=\"TextWhitespace\" style=\"#a8757b\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "80a2a8324fc9f41e9b91a86fb26d75b124cdd1fd",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/xcode-dark.go",
      "status": "removed",
      "additions": 0,
      "deletions": 62,
      "changes": 62,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fxcode-dark.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fxcode-dark.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fxcode-dark.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,62 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-var (\n-\t// Inspired by Apple's Xcode \"Default (Dark)\" Theme\n-\tbackground                  = \"#1F1F24\"\n-\tplainText                   = \"#FFFFFF\"\n-\tcomments                    = \"#6C7986\"\n-\tstrings                     = \"#FC6A5D\"\n-\tnumbers                     = \"#D0BF69\"\n-\tkeywords                    = \"#FC5FA3\"\n-\tpreprocessorStatements      = \"#FD8F3F\"\n-\ttypeDeclarations            = \"#5DD8FF\"\n-\totherDeclarations           = \"#41A1C0\"\n-\totherFunctionAndMethodNames = \"#A167E6\"\n-\totherTypeNames              = \"#D0A8FF\"\n-)\n-\n-// Xcode dark style\n-var XcodeDark = Register(chroma.MustNewStyle(\"xcode-dark\", chroma.StyleEntries{\n-\tchroma.Background: plainText + \" bg:\" + background,\n-\n-\tchroma.Comment:          comments,\n-\tchroma.CommentMultiline: comments,\n-\tchroma.CommentPreproc:   preprocessorStatements,\n-\tchroma.CommentSingle:    comments,\n-\tchroma.CommentSpecial:   comments + \" italic\",\n-\n-\tchroma.Error: \"#960050\",\n-\n-\tchroma.Keyword:            keywords,\n-\tchroma.KeywordConstant:    keywords,\n-\tchroma.KeywordDeclaration: keywords,\n-\tchroma.KeywordReserved:    keywords,\n-\n-\tchroma.LiteralNumber:        numbers,\n-\tchroma.LiteralNumberBin:     numbers,\n-\tchroma.LiteralNumberFloat:   numbers,\n-\tchroma.LiteralNumberHex:     numbers,\n-\tchroma.LiteralNumberInteger: numbers,\n-\tchroma.LiteralNumberOct:     numbers,\n-\n-\tchroma.LiteralString:         strings,\n-\tchroma.LiteralStringEscape:   strings,\n-\tchroma.LiteralStringInterpol: plainText,\n-\n-\tchroma.Name:              plainText,\n-\tchroma.NameBuiltin:       otherTypeNames,\n-\tchroma.NameBuiltinPseudo: otherFunctionAndMethodNames,\n-\tchroma.NameClass:         typeDeclarations,\n-\tchroma.NameFunction:      otherDeclarations,\n-\tchroma.NameVariable:      otherDeclarations,\n-\n-\tchroma.Operator: plainText,\n-\n-\tchroma.Punctuation: plainText,\n-\n-\tchroma.Text: plainText,\n-}))"
    },
    {
      "sha": "93439791fd84fcf1a720ce80049bb72511f680e8",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/xcode-dark.xml",
      "status": "added",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fxcode-dark.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fxcode-dark.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fxcode-dark.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,31 @@\n+<style name=\"xcode-dark\">\n+  <entry type=\"Error\" style=\"#960050\"/>\n+  <entry type=\"Background\" style=\"#ffffff bg:#1f1f24\"/>\n+  <entry type=\"Keyword\" style=\"#fc5fa3\"/>\n+  <entry type=\"KeywordConstant\" style=\"#fc5fa3\"/>\n+  <entry type=\"KeywordDeclaration\" style=\"#fc5fa3\"/>\n+  <entry type=\"KeywordReserved\" style=\"#fc5fa3\"/>\n+  <entry type=\"Name\" style=\"#ffffff\"/>\n+  <entry type=\"NameBuiltin\" style=\"#d0a8ff\"/>\n+  <entry type=\"NameBuiltinPseudo\" style=\"#a167e6\"/>\n+  <entry type=\"NameClass\" style=\"#5dd8ff\"/>\n+  <entry type=\"NameFunction\" style=\"#41a1c0\"/>\n+  <entry type=\"NameVariable\" style=\"#41a1c0\"/>\n+  <entry type=\"LiteralString\" style=\"#fc6a5d\"/>\n+  <entry type=\"LiteralStringEscape\" style=\"#fc6a5d\"/>\n+  <entry type=\"LiteralStringInterpol\" style=\"#ffffff\"/>\n+  <entry type=\"LiteralNumber\" style=\"#d0bf69\"/>\n+  <entry type=\"LiteralNumberBin\" style=\"#d0bf69\"/>\n+  <entry type=\"LiteralNumberFloat\" style=\"#d0bf69\"/>\n+  <entry type=\"LiteralNumberHex\" style=\"#d0bf69\"/>\n+  <entry type=\"LiteralNumberInteger\" style=\"#d0bf69\"/>\n+  <entry type=\"LiteralNumberOct\" style=\"#d0bf69\"/>\n+  <entry type=\"Operator\" style=\"#ffffff\"/>\n+  <entry type=\"Punctuation\" style=\"#ffffff\"/>\n+  <entry type=\"Comment\" style=\"#6c7986\"/>\n+  <entry type=\"CommentMultiline\" style=\"#6c7986\"/>\n+  <entry type=\"CommentSingle\" style=\"#6c7986\"/>\n+  <entry type=\"CommentSpecial\" style=\"italic #6c7986\"/>\n+  <entry type=\"CommentPreproc\" style=\"#fd8f3f\"/>\n+  <entry type=\"Text\" style=\"#ffffff\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "592c9e31513468330f98d9d398d079e5a1117f93",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/xcode.go",
      "status": "removed",
      "additions": 0,
      "deletions": 29,
      "changes": 29,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fxcode.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fxcode.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fxcode.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,29 +0,0 @@\n-package styles\n-\n-import (\n-\t\"github.com/alecthomas/chroma/v2\"\n-)\n-\n-// Xcode style.\n-var Xcode = Register(chroma.MustNewStyle(\"xcode\", chroma.StyleEntries{\n-\tchroma.Comment:           \"#177500\",\n-\tchroma.CommentPreproc:    \"#633820\",\n-\tchroma.LiteralString:     \"#C41A16\",\n-\tchroma.LiteralStringChar: \"#2300CE\",\n-\tchroma.Operator:          \"#000000\",\n-\tchroma.Keyword:           \"#A90D91\",\n-\tchroma.Name:              \"#000000\",\n-\tchroma.NameAttribute:     \"#836C28\",\n-\tchroma.NameClass:         \"#3F6E75\",\n-\tchroma.NameFunction:      \"#000000\",\n-\tchroma.NameBuiltin:       \"#A90D91\",\n-\tchroma.NameBuiltinPseudo: \"#5B269A\",\n-\tchroma.NameVariable:      \"#000000\",\n-\tchroma.NameTag:           \"#000000\",\n-\tchroma.NameDecorator:     \"#000000\",\n-\tchroma.NameLabel:         \"#000000\",\n-\tchroma.Literal:           \"#1C01CE\",\n-\tchroma.LiteralNumber:     \"#1C01CE\",\n-\tchroma.Error:             \"#000000\",\n-\tchroma.Background:        \" bg:#ffffff\",\n-}))"
    },
    {
      "sha": "523d746cf6d9cfff7a07077f8cbdc67c629997dc",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/styles/xcode.xml",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fxcode.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fxcode.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fstyles%2Fxcode.xml?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,22 @@\n+<style name=\"xcode\">\n+  <entry type=\"Error\" style=\"#000000\"/>\n+  <entry type=\"Background\" style=\"bg:#ffffff\"/>\n+  <entry type=\"Keyword\" style=\"#a90d91\"/>\n+  <entry type=\"Name\" style=\"#000000\"/>\n+  <entry type=\"NameAttribute\" style=\"#836c28\"/>\n+  <entry type=\"NameBuiltin\" style=\"#a90d91\"/>\n+  <entry type=\"NameBuiltinPseudo\" style=\"#5b269a\"/>\n+  <entry type=\"NameClass\" style=\"#3f6e75\"/>\n+  <entry type=\"NameDecorator\" style=\"#000000\"/>\n+  <entry type=\"NameFunction\" style=\"#000000\"/>\n+  <entry type=\"NameLabel\" style=\"#000000\"/>\n+  <entry type=\"NameTag\" style=\"#000000\"/>\n+  <entry type=\"NameVariable\" style=\"#000000\"/>\n+  <entry type=\"Literal\" style=\"#1c01ce\"/>\n+  <entry type=\"LiteralString\" style=\"#c41a16\"/>\n+  <entry type=\"LiteralStringChar\" style=\"#2300ce\"/>\n+  <entry type=\"LiteralNumber\" style=\"#1c01ce\"/>\n+  <entry type=\"Operator\" style=\"#000000\"/>\n+  <entry type=\"Comment\" style=\"#177500\"/>\n+  <entry type=\"CommentPreproc\" style=\"#633820\"/>\n+</style>\n\\ No newline at end of file"
    },
    {
      "sha": "da5fa0c7cff2a1a6af172f07a604281863925f71",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/tokentype_enumer.go",
      "status": "added",
      "additions": 254,
      "deletions": 0,
      "changes": 254,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Ftokentype_enumer.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Ftokentype_enumer.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Ftokentype_enumer.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,254 @@\n+// Code generated by \"enumer -text -type TokenType\"; DO NOT EDIT.\n+\n+package chroma\n+\n+import (\n+\t\"fmt\"\n+)\n+\n+const _TokenTypeName = \"NoneOtherErrorCodeLineLineLinkLineTableTDLineTableLineHighlightLineNumbersTableLineNumbersLinePreWrapperBackgroundEOFTypeKeywordKeywordConstantKeywordDeclarationKeywordNamespaceKeywordPseudoKeywordReservedKeywordTypeNameNameAttributeNameBuiltinNameBuiltinPseudoNameClassNameConstantNameDecoratorNameEntityNameExceptionNameFunctionNameFunctionMagicNameKeywordNameLabelNameNamespaceNameOperatorNameOtherNamePseudoNamePropertyNameTagNameVariableNameVariableAnonymousNameVariableClassNameVariableGlobalNameVariableInstanceNameVariableMagicLiteralLiteralDateLiteralOtherLiteralStringLiteralStringAffixLiteralStringAtomLiteralStringBacktickLiteralStringBooleanLiteralStringCharLiteralStringDelimiterLiteralStringDocLiteralStringDoubleLiteralStringEscapeLiteralStringHeredocLiteralStringInterpolLiteralStringNameLiteralStringOtherLiteralStringRegexLiteralStringSingleLiteralStringSymbolLiteralNumberLiteralNumberBinLiteralNumberFloatLiteralNumberHexLiteralNumberIntegerLiteralNumberIntegerLongLiteralNumberOctOperatorOperatorWordPunctuationCommentCommentHashbangCommentMultilineCommentSingleCommentSpecialCommentPreprocCommentPreprocFileGenericGenericDeletedGenericEmphGenericErrorGenericHeadingGenericInsertedGenericOutputGenericPromptGenericStrongGenericSubheadingGenericTracebackGenericUnderlineTextTextWhitespaceTextSymbolTextPunctuation\"\n+\n+var _TokenTypeMap = map[TokenType]string{\n+\t-13:  _TokenTypeName[0:4],\n+\t-12:  _TokenTypeName[4:9],\n+\t-11:  _TokenTypeName[9:14],\n+\t-10:  _TokenTypeName[14:22],\n+\t-9:   _TokenTypeName[22:30],\n+\t-8:   _TokenTypeName[30:41],\n+\t-7:   _TokenTypeName[41:50],\n+\t-6:   _TokenTypeName[50:63],\n+\t-5:   _TokenTypeName[63:79],\n+\t-4:   _TokenTypeName[79:90],\n+\t-3:   _TokenTypeName[90:94],\n+\t-2:   _TokenTypeName[94:104],\n+\t-1:   _TokenTypeName[104:114],\n+\t0:    _TokenTypeName[114:121],\n+\t1000: _TokenTypeName[121:128],\n+\t1001: _TokenTypeName[128:143],\n+\t1002: _TokenTypeName[143:161],\n+\t1003: _TokenTypeName[161:177],\n+\t1004: _TokenTypeName[177:190],\n+\t1005: _TokenTypeName[190:205],\n+\t1006: _TokenTypeName[205:216],\n+\t2000: _TokenTypeName[216:220],\n+\t2001: _TokenTypeName[220:233],\n+\t2002: _TokenTypeName[233:244],\n+\t2003: _TokenTypeName[244:261],\n+\t2004: _TokenTypeName[261:270],\n+\t2005: _TokenTypeName[270:282],\n+\t2006: _TokenTypeName[282:295],\n+\t2007: _TokenTypeName[295:305],\n+\t2008: _TokenTypeName[305:318],\n+\t2009: _TokenTypeName[318:330],\n+\t2010: _TokenTypeName[330:347],\n+\t2011: _TokenTypeName[347:358],\n+\t2012: _TokenTypeName[358:367],\n+\t2013: _TokenTypeName[367:380],\n+\t2014: _TokenTypeName[380:392],\n+\t2015: _TokenTypeName[392:401],\n+\t2016: _TokenTypeName[401:411],\n+\t2017: _TokenTypeName[411:423],\n+\t2018: _TokenTypeName[423:430],\n+\t2019: _TokenTypeName[430:442],\n+\t2020: _TokenTypeName[442:463],\n+\t2021: _TokenTypeName[463:480],\n+\t2022: _TokenTypeName[480:498],\n+\t2023: _TokenTypeName[498:518],\n+\t2024: _TokenTypeName[518:535],\n+\t3000: _TokenTypeName[535:542],\n+\t3001: _TokenTypeName[542:553],\n+\t3002: _TokenTypeName[553:565],\n+\t3100: _TokenTypeName[565:578],\n+\t3101: _TokenTypeName[578:596],\n+\t3102: _TokenTypeName[596:613],\n+\t3103: _TokenTypeName[613:634],\n+\t3104: _TokenTypeName[634:654],\n+\t3105: _TokenTypeName[654:671],\n+\t3106: _TokenTypeName[671:693],\n+\t3107: _TokenTypeName[693:709],\n+\t3108: _TokenTypeName[709:728],\n+\t3109: _TokenTypeName[728:747],\n+\t3110: _TokenTypeName[747:767],\n+\t3111: _TokenTypeName[767:788],\n+\t3112: _TokenTypeName[788:805],\n+\t3113: _TokenTypeName[805:823],\n+\t3114: _TokenTypeName[823:841],\n+\t3115: _TokenTypeName[841:860],\n+\t3116: _TokenTypeName[860:879],\n+\t3200: _TokenTypeName[879:892],\n+\t3201: _TokenTypeName[892:908],\n+\t3202: _TokenTypeName[908:926],\n+\t3203: _TokenTypeName[926:942],\n+\t3204: _TokenTypeName[942:962],\n+\t3205: _TokenTypeName[962:986],\n+\t3206: _TokenTypeName[986:1002],\n+\t4000: _TokenTypeName[1002:1010],\n+\t4001: _TokenTypeName[1010:1022],\n+\t5000: _TokenTypeName[1022:1033],\n+\t6000: _TokenTypeName[1033:1040],\n+\t6001: _TokenTypeName[1040:1055],\n+\t6002: _TokenTypeName[1055:1071],\n+\t6003: _TokenTypeName[1071:1084],\n+\t6004: _TokenTypeName[1084:1098],\n+\t6100: _TokenTypeName[1098:1112],\n+\t6101: _TokenTypeName[1112:1130],\n+\t7000: _TokenTypeName[1130:1137],\n+\t7001: _TokenTypeName[1137:1151],\n+\t7002: _TokenTypeName[1151:1162],\n+\t7003: _TokenTypeName[1162:1174],\n+\t7004: _TokenTypeName[1174:1188],\n+\t7005: _TokenTypeName[1188:1203],\n+\t7006: _TokenTypeName[1203:1216],\n+\t7007: _TokenTypeName[1216:1229],\n+\t7008: _TokenTypeName[1229:1242],\n+\t7009: _TokenTypeName[1242:1259],\n+\t7010: _TokenTypeName[1259:1275],\n+\t7011: _TokenTypeName[1275:1291],\n+\t8000: _TokenTypeName[1291:1295],\n+\t8001: _TokenTypeName[1295:1309],\n+\t8002: _TokenTypeName[1309:1319],\n+\t8003: _TokenTypeName[1319:1334],\n+}\n+\n+func (i TokenType) String() string {\n+\tif str, ok := _TokenTypeMap[i]; ok {\n+\t\treturn str\n+\t}\n+\treturn fmt.Sprintf(\"TokenType(%d)\", i)\n+}\n+\n+var _TokenTypeValues = []TokenType{-13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 3000, 3001, 3002, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 3200, 3201, 3202, 3203, 3204, 3205, 3206, 4000, 4001, 5000, 6000, 6001, 6002, 6003, 6004, 6100, 6101, 7000, 7001, 7002, 7003, 7004, 7005, 7006, 7007, 7008, 7009, 7010, 7011, 8000, 8001, 8002, 8003}\n+\n+var _TokenTypeNameToValueMap = map[string]TokenType{\n+\t_TokenTypeName[0:4]:       -13,\n+\t_TokenTypeName[4:9]:       -12,\n+\t_TokenTypeName[9:14]:      -11,\n+\t_TokenTypeName[14:22]:     -10,\n+\t_TokenTypeName[22:30]:     -9,\n+\t_TokenTypeName[30:41]:     -8,\n+\t_TokenTypeName[41:50]:     -7,\n+\t_TokenTypeName[50:63]:     -6,\n+\t_TokenTypeName[63:79]:     -5,\n+\t_TokenTypeName[79:90]:     -4,\n+\t_TokenTypeName[90:94]:     -3,\n+\t_TokenTypeName[94:104]:    -2,\n+\t_TokenTypeName[104:114]:   -1,\n+\t_TokenTypeName[114:121]:   0,\n+\t_TokenTypeName[121:128]:   1000,\n+\t_TokenTypeName[128:143]:   1001,\n+\t_TokenTypeName[143:161]:   1002,\n+\t_TokenTypeName[161:177]:   1003,\n+\t_TokenTypeName[177:190]:   1004,\n+\t_TokenTypeName[190:205]:   1005,\n+\t_TokenTypeName[205:216]:   1006,\n+\t_TokenTypeName[216:220]:   2000,\n+\t_TokenTypeName[220:233]:   2001,\n+\t_TokenTypeName[233:244]:   2002,\n+\t_TokenTypeName[244:261]:   2003,\n+\t_TokenTypeName[261:270]:   2004,\n+\t_TokenTypeName[270:282]:   2005,\n+\t_TokenTypeName[282:295]:   2006,\n+\t_TokenTypeName[295:305]:   2007,\n+\t_TokenTypeName[305:318]:   2008,\n+\t_TokenTypeName[318:330]:   2009,\n+\t_TokenTypeName[330:347]:   2010,\n+\t_TokenTypeName[347:358]:   2011,\n+\t_TokenTypeName[358:367]:   2012,\n+\t_TokenTypeName[367:380]:   2013,\n+\t_TokenTypeName[380:392]:   2014,\n+\t_TokenTypeName[392:401]:   2015,\n+\t_TokenTypeName[401:411]:   2016,\n+\t_TokenTypeName[411:423]:   2017,\n+\t_TokenTypeName[423:430]:   2018,\n+\t_TokenTypeName[430:442]:   2019,\n+\t_TokenTypeName[442:463]:   2020,\n+\t_TokenTypeName[463:480]:   2021,\n+\t_TokenTypeName[480:498]:   2022,\n+\t_TokenTypeName[498:518]:   2023,\n+\t_TokenTypeName[518:535]:   2024,\n+\t_TokenTypeName[535:542]:   3000,\n+\t_TokenTypeName[542:553]:   3001,\n+\t_TokenTypeName[553:565]:   3002,\n+\t_TokenTypeName[565:578]:   3100,\n+\t_TokenTypeName[578:596]:   3101,\n+\t_TokenTypeName[596:613]:   3102,\n+\t_TokenTypeName[613:634]:   3103,\n+\t_TokenTypeName[634:654]:   3104,\n+\t_TokenTypeName[654:671]:   3105,\n+\t_TokenTypeName[671:693]:   3106,\n+\t_TokenTypeName[693:709]:   3107,\n+\t_TokenTypeName[709:728]:   3108,\n+\t_TokenTypeName[728:747]:   3109,\n+\t_TokenTypeName[747:767]:   3110,\n+\t_TokenTypeName[767:788]:   3111,\n+\t_TokenTypeName[788:805]:   3112,\n+\t_TokenTypeName[805:823]:   3113,\n+\t_TokenTypeName[823:841]:   3114,\n+\t_TokenTypeName[841:860]:   3115,\n+\t_TokenTypeName[860:879]:   3116,\n+\t_TokenTypeName[879:892]:   3200,\n+\t_TokenTypeName[892:908]:   3201,\n+\t_TokenTypeName[908:926]:   3202,\n+\t_TokenTypeName[926:942]:   3203,\n+\t_TokenTypeName[942:962]:   3204,\n+\t_TokenTypeName[962:986]:   3205,\n+\t_TokenTypeName[986:1002]:  3206,\n+\t_TokenTypeName[1002:1010]: 4000,\n+\t_TokenTypeName[1010:1022]: 4001,\n+\t_TokenTypeName[1022:1033]: 5000,\n+\t_TokenTypeName[1033:1040]: 6000,\n+\t_TokenTypeName[1040:1055]: 6001,\n+\t_TokenTypeName[1055:1071]: 6002,\n+\t_TokenTypeName[1071:1084]: 6003,\n+\t_TokenTypeName[1084:1098]: 6004,\n+\t_TokenTypeName[1098:1112]: 6100,\n+\t_TokenTypeName[1112:1130]: 6101,\n+\t_TokenTypeName[1130:1137]: 7000,\n+\t_TokenTypeName[1137:1151]: 7001,\n+\t_TokenTypeName[1151:1162]: 7002,\n+\t_TokenTypeName[1162:1174]: 7003,\n+\t_TokenTypeName[1174:1188]: 7004,\n+\t_TokenTypeName[1188:1203]: 7005,\n+\t_TokenTypeName[1203:1216]: 7006,\n+\t_TokenTypeName[1216:1229]: 7007,\n+\t_TokenTypeName[1229:1242]: 7008,\n+\t_TokenTypeName[1242:1259]: 7009,\n+\t_TokenTypeName[1259:1275]: 7010,\n+\t_TokenTypeName[1275:1291]: 7011,\n+\t_TokenTypeName[1291:1295]: 8000,\n+\t_TokenTypeName[1295:1309]: 8001,\n+\t_TokenTypeName[1309:1319]: 8002,\n+\t_TokenTypeName[1319:1334]: 8003,\n+}\n+\n+// TokenTypeString retrieves an enum value from the enum constants string name.\n+// Throws an error if the param is not part of the enum.\n+func TokenTypeString(s string) (TokenType, error) {\n+\tif val, ok := _TokenTypeNameToValueMap[s]; ok {\n+\t\treturn val, nil\n+\t}\n+\treturn 0, fmt.Errorf(\"%s does not belong to TokenType values\", s)\n+}\n+\n+// TokenTypeValues returns all values of the enum\n+func TokenTypeValues() []TokenType {\n+\treturn _TokenTypeValues\n+}\n+\n+// IsATokenType returns \"true\" if the value is listed in the enum definition. \"false\" otherwise\n+func (i TokenType) IsATokenType() bool {\n+\t_, ok := _TokenTypeMap[i]\n+\treturn ok\n+}\n+\n+// MarshalText implements the encoding.TextMarshaler interface for TokenType\n+func (i TokenType) MarshalText() ([]byte, error) {\n+\treturn []byte(i.String()), nil\n+}\n+\n+// UnmarshalText implements the encoding.TextUnmarshaler interface for TokenType\n+func (i *TokenType) UnmarshalText(text []byte) error {\n+\tvar err error\n+\t*i, err = TokenTypeString(string(text))\n+\treturn err\n+}"
    },
    {
      "sha": "9c302f9c9c178786d0909630a602fe02e0bcd1a9",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/tokentype_string.go",
      "status": "removed",
      "additions": 0,
      "deletions": 219,
      "changes": 219,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Ftokentype_string.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Ftokentype_string.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Ftokentype_string.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,219 +0,0 @@\n-// Code generated by \"stringer -type TokenType\"; DO NOT EDIT.\n-\n-package chroma\n-\n-import \"strconv\"\n-\n-func _() {\n-\t// An \"invalid array index\" compiler error signifies that the constant values have changed.\n-\t// Re-run the stringer command to generate them again.\n-\tvar x [1]struct{}\n-\t_ = x[Background - -1]\n-\t_ = x[PreWrapper - -2]\n-\t_ = x[Line - -3]\n-\t_ = x[LineNumbers - -4]\n-\t_ = x[LineNumbersTable - -5]\n-\t_ = x[LineHighlight - -6]\n-\t_ = x[LineTable - -7]\n-\t_ = x[LineTableTD - -8]\n-\t_ = x[CodeLine - -9]\n-\t_ = x[Error - -10]\n-\t_ = x[Other - -11]\n-\t_ = x[None - -12]\n-\t_ = x[EOFType-0]\n-\t_ = x[Keyword-1000]\n-\t_ = x[KeywordConstant-1001]\n-\t_ = x[KeywordDeclaration-1002]\n-\t_ = x[KeywordNamespace-1003]\n-\t_ = x[KeywordPseudo-1004]\n-\t_ = x[KeywordReserved-1005]\n-\t_ = x[KeywordType-1006]\n-\t_ = x[Name-2000]\n-\t_ = x[NameAttribute-2001]\n-\t_ = x[NameBuiltin-2002]\n-\t_ = x[NameBuiltinPseudo-2003]\n-\t_ = x[NameClass-2004]\n-\t_ = x[NameConstant-2005]\n-\t_ = x[NameDecorator-2006]\n-\t_ = x[NameEntity-2007]\n-\t_ = x[NameException-2008]\n-\t_ = x[NameFunction-2009]\n-\t_ = x[NameFunctionMagic-2010]\n-\t_ = x[NameKeyword-2011]\n-\t_ = x[NameLabel-2012]\n-\t_ = x[NameNamespace-2013]\n-\t_ = x[NameOperator-2014]\n-\t_ = x[NameOther-2015]\n-\t_ = x[NamePseudo-2016]\n-\t_ = x[NameProperty-2017]\n-\t_ = x[NameTag-2018]\n-\t_ = x[NameVariable-2019]\n-\t_ = x[NameVariableAnonymous-2020]\n-\t_ = x[NameVariableClass-2021]\n-\t_ = x[NameVariableGlobal-2022]\n-\t_ = x[NameVariableInstance-2023]\n-\t_ = x[NameVariableMagic-2024]\n-\t_ = x[Literal-3000]\n-\t_ = x[LiteralDate-3001]\n-\t_ = x[LiteralOther-3002]\n-\t_ = x[LiteralString-3100]\n-\t_ = x[LiteralStringAffix-3101]\n-\t_ = x[LiteralStringAtom-3102]\n-\t_ = x[LiteralStringBacktick-3103]\n-\t_ = x[LiteralStringBoolean-3104]\n-\t_ = x[LiteralStringChar-3105]\n-\t_ = x[LiteralStringDelimiter-3106]\n-\t_ = x[LiteralStringDoc-3107]\n-\t_ = x[LiteralStringDouble-3108]\n-\t_ = x[LiteralStringEscape-3109]\n-\t_ = x[LiteralStringHeredoc-3110]\n-\t_ = x[LiteralStringInterpol-3111]\n-\t_ = x[LiteralStringName-3112]\n-\t_ = x[LiteralStringOther-3113]\n-\t_ = x[LiteralStringRegex-3114]\n-\t_ = x[LiteralStringSingle-3115]\n-\t_ = x[LiteralStringSymbol-3116]\n-\t_ = x[LiteralNumber-3200]\n-\t_ = x[LiteralNumberBin-3201]\n-\t_ = x[LiteralNumberFloat-3202]\n-\t_ = x[LiteralNumberHex-3203]\n-\t_ = x[LiteralNumberInteger-3204]\n-\t_ = x[LiteralNumberIntegerLong-3205]\n-\t_ = x[LiteralNumberOct-3206]\n-\t_ = x[Operator-4000]\n-\t_ = x[OperatorWord-4001]\n-\t_ = x[Punctuation-5000]\n-\t_ = x[Comment-6000]\n-\t_ = x[CommentHashbang-6001]\n-\t_ = x[CommentMultiline-6002]\n-\t_ = x[CommentSingle-6003]\n-\t_ = x[CommentSpecial-6004]\n-\t_ = x[CommentPreproc-6100]\n-\t_ = x[CommentPreprocFile-6101]\n-\t_ = x[Generic-7000]\n-\t_ = x[GenericDeleted-7001]\n-\t_ = x[GenericEmph-7002]\n-\t_ = x[GenericError-7003]\n-\t_ = x[GenericHeading-7004]\n-\t_ = x[GenericInserted-7005]\n-\t_ = x[GenericOutput-7006]\n-\t_ = x[GenericPrompt-7007]\n-\t_ = x[GenericStrong-7008]\n-\t_ = x[GenericSubheading-7009]\n-\t_ = x[GenericTraceback-7010]\n-\t_ = x[GenericUnderline-7011]\n-\t_ = x[Text-8000]\n-\t_ = x[TextWhitespace-8001]\n-\t_ = x[TextSymbol-8002]\n-\t_ = x[TextPunctuation-8003]\n-}\n-\n-const _TokenType_name = \"NoneOtherErrorCodeLineLineTableTDLineTableLineHighlightLineNumbersTableLineNumbersLinePreWrapperBackgroundEOFTypeKeywordKeywordConstantKeywordDeclarationKeywordNamespaceKeywordPseudoKeywordReservedKeywordTypeNameNameAttributeNameBuiltinNameBuiltinPseudoNameClassNameConstantNameDecoratorNameEntityNameExceptionNameFunctionNameFunctionMagicNameKeywordNameLabelNameNamespaceNameOperatorNameOtherNamePseudoNamePropertyNameTagNameVariableNameVariableAnonymousNameVariableClassNameVariableGlobalNameVariableInstanceNameVariableMagicLiteralLiteralDateLiteralOtherLiteralStringLiteralStringAffixLiteralStringAtomLiteralStringBacktickLiteralStringBooleanLiteralStringCharLiteralStringDelimiterLiteralStringDocLiteralStringDoubleLiteralStringEscapeLiteralStringHeredocLiteralStringInterpolLiteralStringNameLiteralStringOtherLiteralStringRegexLiteralStringSingleLiteralStringSymbolLiteralNumberLiteralNumberBinLiteralNumberFloatLiteralNumberHexLiteralNumberIntegerLiteralNumberIntegerLongLiteralNumberOctOperatorOperatorWordPunctuationCommentCommentHashbangCommentMultilineCommentSingleCommentSpecialCommentPreprocCommentPreprocFileGenericGenericDeletedGenericEmphGenericErrorGenericHeadingGenericInsertedGenericOutputGenericPromptGenericStrongGenericSubheadingGenericTracebackGenericUnderlineTextTextWhitespaceTextSymbolTextPunctuation\"\n-\n-var _TokenType_map = map[TokenType]string{\n-\t-12:  _TokenType_name[0:4],\n-\t-11:  _TokenType_name[4:9],\n-\t-10:  _TokenType_name[9:14],\n-\t-9:   _TokenType_name[14:22],\n-\t-8:   _TokenType_name[22:33],\n-\t-7:   _TokenType_name[33:42],\n-\t-6:   _TokenType_name[42:55],\n-\t-5:   _TokenType_name[55:71],\n-\t-4:   _TokenType_name[71:82],\n-\t-3:   _TokenType_name[82:86],\n-\t-2:   _TokenType_name[86:96],\n-\t-1:   _TokenType_name[96:106],\n-\t0:    _TokenType_name[106:113],\n-\t1000: _TokenType_name[113:120],\n-\t1001: _TokenType_name[120:135],\n-\t1002: _TokenType_name[135:153],\n-\t1003: _TokenType_name[153:169],\n-\t1004: _TokenType_name[169:182],\n-\t1005: _TokenType_name[182:197],\n-\t1006: _TokenType_name[197:208],\n-\t2000: _TokenType_name[208:212],\n-\t2001: _TokenType_name[212:225],\n-\t2002: _TokenType_name[225:236],\n-\t2003: _TokenType_name[236:253],\n-\t2004: _TokenType_name[253:262],\n-\t2005: _TokenType_name[262:274],\n-\t2006: _TokenType_name[274:287],\n-\t2007: _TokenType_name[287:297],\n-\t2008: _TokenType_name[297:310],\n-\t2009: _TokenType_name[310:322],\n-\t2010: _TokenType_name[322:339],\n-\t2011: _TokenType_name[339:350],\n-\t2012: _TokenType_name[350:359],\n-\t2013: _TokenType_name[359:372],\n-\t2014: _TokenType_name[372:384],\n-\t2015: _TokenType_name[384:393],\n-\t2016: _TokenType_name[393:403],\n-\t2017: _TokenType_name[403:415],\n-\t2018: _TokenType_name[415:422],\n-\t2019: _TokenType_name[422:434],\n-\t2020: _TokenType_name[434:455],\n-\t2021: _TokenType_name[455:472],\n-\t2022: _TokenType_name[472:490],\n-\t2023: _TokenType_name[490:510],\n-\t2024: _TokenType_name[510:527],\n-\t3000: _TokenType_name[527:534],\n-\t3001: _TokenType_name[534:545],\n-\t3002: _TokenType_name[545:557],\n-\t3100: _TokenType_name[557:570],\n-\t3101: _TokenType_name[570:588],\n-\t3102: _TokenType_name[588:605],\n-\t3103: _TokenType_name[605:626],\n-\t3104: _TokenType_name[626:646],\n-\t3105: _TokenType_name[646:663],\n-\t3106: _TokenType_name[663:685],\n-\t3107: _TokenType_name[685:701],\n-\t3108: _TokenType_name[701:720],\n-\t3109: _TokenType_name[720:739],\n-\t3110: _TokenType_name[739:759],\n-\t3111: _TokenType_name[759:780],\n-\t3112: _TokenType_name[780:797],\n-\t3113: _TokenType_name[797:815],\n-\t3114: _TokenType_name[815:833],\n-\t3115: _TokenType_name[833:852],\n-\t3116: _TokenType_name[852:871],\n-\t3200: _TokenType_name[871:884],\n-\t3201: _TokenType_name[884:900],\n-\t3202: _TokenType_name[900:918],\n-\t3203: _TokenType_name[918:934],\n-\t3204: _TokenType_name[934:954],\n-\t3205: _TokenType_name[954:978],\n-\t3206: _TokenType_name[978:994],\n-\t4000: _TokenType_name[994:1002],\n-\t4001: _TokenType_name[1002:1014],\n-\t5000: _TokenType_name[1014:1025],\n-\t6000: _TokenType_name[1025:1032],\n-\t6001: _TokenType_name[1032:1047],\n-\t6002: _TokenType_name[1047:1063],\n-\t6003: _TokenType_name[1063:1076],\n-\t6004: _TokenType_name[1076:1090],\n-\t6100: _TokenType_name[1090:1104],\n-\t6101: _TokenType_name[1104:1122],\n-\t7000: _TokenType_name[1122:1129],\n-\t7001: _TokenType_name[1129:1143],\n-\t7002: _TokenType_name[1143:1154],\n-\t7003: _TokenType_name[1154:1166],\n-\t7004: _TokenType_name[1166:1180],\n-\t7005: _TokenType_name[1180:1195],\n-\t7006: _TokenType_name[1195:1208],\n-\t7007: _TokenType_name[1208:1221],\n-\t7008: _TokenType_name[1221:1234],\n-\t7009: _TokenType_name[1234:1251],\n-\t7010: _TokenType_name[1251:1267],\n-\t7011: _TokenType_name[1267:1283],\n-\t8000: _TokenType_name[1283:1287],\n-\t8001: _TokenType_name[1287:1301],\n-\t8002: _TokenType_name[1301:1311],\n-\t8003: _TokenType_name[1311:1326],\n-}\n-\n-func (i TokenType) String() string {\n-\tif str, ok := _TokenType_map[i]; ok {\n-\t\treturn str\n-\t}\n-\treturn \"TokenType(\" + strconv.FormatInt(int64(i), 10) + \")\"\n-}"
    },
    {
      "sha": "3d12310a0eeea389027a8298a2d9483ffec0aa33",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/types.go",
      "status": "modified",
      "additions": 5,
      "deletions": 17,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Ftypes.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Ftypes.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Ftypes.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -1,10 +1,6 @@\n package chroma\n \n-import (\n-\t\"fmt\"\n-)\n-\n-//go:generate stringer -type TokenType\n+//go:generate enumer -text -type TokenType\n \n // TokenType is the type of token to highlight.\n //\n@@ -35,6 +31,8 @@ const (\n \tLineTable\n \t// Line numbers table TD wrapper style.\n \tLineTableTD\n+\t// Line number links.\n+\tLineLink\n \t// Code line wrapper style.\n \tCodeLine\n \t// Input that could not be tokenised.\n@@ -216,6 +214,7 @@ var (\n \t\tLineHighlight:    \"hl\",\n \t\tLineTable:        \"lntable\",\n \t\tLineTableTD:      \"lntd\",\n+\t\tLineLink:         \"lnlinks\",\n \t\tCodeLine:         \"cl\",\n \t\tText:             \"\",\n \t\tWhitespace:       \"w\",\n@@ -338,15 +337,4 @@ func (t TokenType) Emit(groups []string, _ *LexerState) Iterator {\n \treturn Literator(Token{Type: t, Value: groups[0]})\n }\n \n-func (t TokenType) EmitterKind() string          { return \"token\" }\n-func (t TokenType) MarshalText() ([]byte, error) { return []byte(t.String()), nil }\n-func (t *TokenType) UnmarshalText(data []byte) error {\n-\tkey := string(data)\n-\tfor tt, text := range _TokenType_map {\n-\t\tif text == key {\n-\t\t\t*t = tt\n-\t\t\treturn nil\n-\t\t}\n-\t}\n-\treturn fmt.Errorf(\"unknown TokenType %q\", data)\n-}\n+func (t TokenType) EmitterKind() string { return \"token\" }"
    },
    {
      "sha": "1abf12c83cc530a51480fda8b151f9d76f888b1c",
      "filename": "backend/vendor/github.com/dghubble/oauth1/CHANGES.md",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2FCHANGES.md",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2FCHANGES.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2FCHANGES.md?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -4,6 +4,10 @@ Notable changes between releases.\n \n ## Latest\n \n+## v0.7.2\n+\n+* Update minimum Go version from v1.17 to v1.18 ([#66](https://github.com/dghubble/oauth1/pull/66))\n+\n ## v0.7.1\n \n * Show body when `RequestToken` or `AccessToken` requests return an invalid status code ([#54](https://github.com/dghubble/oauth1/pull/54))"
    },
    {
      "sha": "d427534057155911f68347413a8fc62934370766",
      "filename": "backend/vendor/github.com/dghubble/oauth1/Makefile",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2FMakefile",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2FMakefile",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2FMakefile?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -1,5 +1,5 @@\n .PHONY: all\n-all: test vet lint fmt\n+all: test vet fmt\n \n .PHONY: test\n test:\n@@ -9,10 +9,6 @@ test:\n vet:\n \t@go vet -all $$(go list ./... | grep -v examples)\n \n-.PHONY: lint\n-lint:\n-\t@golint -set_exit_status ./...\n-\n .PHONY: fmt\n fmt:\n \t@test -z $$(go fmt ./...)"
    },
    {
      "sha": "c54803c4108e926dbc4bfcbf99b5f0e4326ce52b",
      "filename": "backend/vendor/github.com/dghubble/oauth1/README.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2FREADME.md?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -1,4 +1,4 @@\n-# OAuth1 [![Build Status](https://github.com/dghubble/oauth1/workflows/test/badge.svg)](https://github.com/dghubble/oauth1/actions?query=workflow%3Atest+branch%3Amaster) [![Coverage](https://gocover.io/_badge/github.com/dghubble/oauth1)](https://gocover.io/github.com/dghubble/oauth1) [![GoDoc](http://godoc.org/github.com/dghubble/oauth1?status.svg)](http://godoc.org/github.com/dghubble/oauth1)\n+# OAuth1 [![GoDoc](https://pkg.go.dev/badge/github.com/dghubble/oauth1.svg)](https://pkg.go.dev/github.com/dghubble/oauth1) [![Workflow](https://github.com/dghubble/oauth1/actions/workflows/test.yaml/badge.svg)](https://github.com/dghubble/oauth1/actions/workflows/test.yaml?query=branch%3Amain) [![Sponsors](https://img.shields.io/github/sponsors/dghubble?logo=github)](https://github.com/sponsors/dghubble) [![Mastodon](https://img.shields.io/badge/follow-news-6364ff?logo=mastodon)](https://fosstodon.org/@typhoon)\n \n <img align=\"right\" src=\"https://storage.googleapis.com/dghubble/oauth1.png\">\n "
    },
    {
      "sha": "27b437ce134ee5655cd2861deaa0096e36b24799",
      "filename": "backend/vendor/github.com/dghubble/oauth1/doc.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fdghubble%2Foauth1%2Fdoc.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -8,7 +8,7 @@ authorized requests on behalf of a user (e.g. API calls).\n It takes design cues from golang.org/x/oauth2, providing an http.Client which\n handles request signing and authorization.\n \n-Usage\n+# Usage\n \n Package oauth1 implements the OAuth1 authorization flow and provides an\n http.Client which can sign and authorize OAuth1 requests.\n@@ -23,7 +23,7 @@ clients.\n * https://github.com/dghubble/go-digits\n * https://github.com/benfb/go-tumblr\n \n-Authorization Flow\n+# Authorization Flow\n \n Perform the OAuth 1 authorization flow to ask a user to grant an application\n access to his/her resources via an access token.\n@@ -69,7 +69,7 @@ to make requests on behalf of the user.\n Check the examples to see this authorization flow in action from the command\n line, with Twitter PIN-based login and Tumblr login.\n \n-Authorized Requests\n+# Authorized Requests\n \n Use an access Token to make authorized requests on behalf of a user.\n "
    },
    {
      "sha": "a1feeec0551e0c875f48da6ecb4c7ebd5940e79b",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/CHANGELOG.md",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FCHANGELOG.md",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FCHANGELOG.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FCHANGELOG.md?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -1,5 +1,10 @@\n # Changelog\n \n+## v5.0.8 (2022-12-07)\n+\n+- History of changes: see https://github.com/go-chi/chi/compare/v5.0.7...v5.0.8\n+\n+\n ## v5.0.7 (2021-11-18)\n \n - History of changes: see https://github.com/go-chi/chi/compare/v5.0.6...v5.0.7"
    },
    {
      "sha": "e0f18c7da21a2becf96b6a0dc85cc70ce01c7b25",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/Makefile",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FMakefile",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FMakefile",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FMakefile?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -1,15 +1,19 @@\n+.PHONY: all\n all:\n \t@echo \"**********************************************************\"\n \t@echo \"**                    chi build tool                    **\"\n \t@echo \"**********************************************************\"\n \n \n+.PHONY: test\n test:\n \tgo clean -testcache && $(MAKE) test-router && $(MAKE) test-middleware\n \n+.PHONY: test-router\n test-router:\n \tgo test -race -v .\n \n+.PHONY: test-middleware\n test-middleware:\n \tgo test -race -v ./middleware\n "
    },
    {
      "sha": "3e4cc4a2e1a1e103085c64d448d6f274b19b5b6a",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/README.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2FREADME.md?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -30,7 +30,7 @@ and [docgen](https://github.com/go-chi/docgen). We hope you enjoy it too!\n * **100% compatible with net/http** - use any http or middleware pkg in the ecosystem that is also compatible with `net/http`\n * **Designed for modular/composable APIs** - middlewares, inline middlewares, route groups and sub-router mounting\n * **Context control** - built on new `context` package, providing value chaining, cancellations and timeouts\n-* **Robust** - in production at Pressly, CloudFlare, Heroku, 99Designs, and many others (see [discussion](https://github.com/go-chi/chi/issues/91))\n+* **Robust** - in production at Pressly, Cloudflare, Heroku, 99Designs, and many others (see [discussion](https://github.com/go-chi/chi/issues/91))\n * **Doc generation** - `docgen` auto-generates routing documentation from your source to JSON or Markdown\n * **Go.mod support** - as of v5, go.mod support (see [CHANGELOG](https://github.com/go-chi/chi/blob/master/CHANGELOG.md))\n * **No external dependencies** - plain ol' Go stdlib + net/http"
    },
    {
      "sha": "a1691bbeb102e20f8761337e4f265d715b7a0571",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/chi.go",
      "status": "modified",
      "additions": 22,
      "deletions": 22,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fchi.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fchi.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fchi.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -1,29 +1,29 @@\n-//\n // Package chi is a small, idiomatic and composable router for building HTTP services.\n //\n-// chi requires Go 1.10 or newer.\n+// chi requires Go 1.14 or newer.\n //\n // Example:\n-//  package main\n //\n-//  import (\n-//  \t\"net/http\"\n+//\tpackage main\n+//\n+//\timport (\n+//\t\t\"net/http\"\n //\n-//  \t\"github.com/go-chi/chi/v5\"\n-//  \t\"github.com/go-chi/chi/v5/middleware\"\n-//  )\n+//\t\t\"github.com/go-chi/chi/v5\"\n+//\t\t\"github.com/go-chi/chi/v5/middleware\"\n+//\t)\n //\n-//  func main() {\n-//  \tr := chi.NewRouter()\n-//  \tr.Use(middleware.Logger)\n-//  \tr.Use(middleware.Recoverer)\n+//\tfunc main() {\n+//\t\tr := chi.NewRouter()\n+//\t\tr.Use(middleware.Logger)\n+//\t\tr.Use(middleware.Recoverer)\n //\n-//  \tr.Get(\"/\", func(w http.ResponseWriter, r *http.Request) {\n-//  \t\tw.Write([]byte(\"root.\"))\n-//  \t})\n+//\t\tr.Get(\"/\", func(w http.ResponseWriter, r *http.Request) {\n+//\t\t\tw.Write([]byte(\"root.\"))\n+//\t\t})\n //\n-//  \thttp.ListenAndServe(\":3333\", r)\n-//  }\n+//\t\thttp.ListenAndServe(\":3333\", r)\n+//\t}\n //\n // See github.com/go-chi/chi/_examples/ for more in-depth examples.\n //\n@@ -47,12 +47,12 @@\n // placeholder which will match / characters.\n //\n // Examples:\n-//  \"/user/{name}\" matches \"/user/jsmith\" but not \"/user/jsmith/info\" or \"/user/jsmith/\"\n-//  \"/user/{name}/info\" matches \"/user/jsmith/info\"\n-//  \"/page/*\" matches \"/page/intro/latest\"\n-//  \"/page/*/index\" also matches \"/page/intro/latest\"\n-//  \"/date/{yyyy:\\\\d\\\\d\\\\d\\\\d}/{mm:\\\\d\\\\d}/{dd:\\\\d\\\\d}\" matches \"/date/2017/04/01\"\n //\n+//\t\"/user/{name}\" matches \"/user/jsmith\" but not \"/user/jsmith/info\" or \"/user/jsmith/\"\n+//\t\"/user/{name}/info\" matches \"/user/jsmith/info\"\n+//\t\"/page/*\" matches \"/page/intro/latest\"\n+//\t\"/page/{other}/index\" also matches \"/page/intro/latest\"\n+//\t\"/date/{yyyy:\\\\d\\\\d\\\\d\\\\d}/{mm:\\\\d\\\\d}/{dd:\\\\d\\\\d}\" matches \"/date/2017/04/01\"\n package chi\n \n import \"net/http\""
    },
    {
      "sha": "e78a2385d8aee1802c826fa556dc0cd66528dd2d",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/context.go",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fcontext.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fcontext.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fcontext.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -121,7 +121,10 @@ func (x *Context) URLParam(key string) string {\n //   }\n func (x *Context) RoutePattern() string {\n \troutePattern := strings.Join(x.RoutePatterns, \"\")\n-\treturn replaceWildcards(routePattern)\n+\troutePattern = replaceWildcards(routePattern)\n+\troutePattern = strings.TrimSuffix(routePattern, \"//\")\n+\troutePattern = strings.TrimSuffix(routePattern, \"/\")\n+\treturn routePattern\n }\n \n // replaceWildcards takes a route pattern and recursively replaces all\n@@ -130,7 +133,6 @@ func replaceWildcards(p string) string {\n \tif strings.Contains(p, \"/*/\") {\n \t\treturn replaceWildcards(strings.Replace(p, \"/*/\", \"/\", -1))\n \t}\n-\n \treturn p\n }\n "
    },
    {
      "sha": "52f4e0b53910b2e7116c82b11c21be45e8314d55",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/middleware/compress.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fcompress.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fcompress.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Fcompress.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -318,7 +318,7 @@ func (cw *compressResponseWriter) WriteHeader(code int) {\n \tif cw.encoding != \"\" {\n \t\tcw.compressable = true\n \t\tcw.Header().Set(\"Content-Encoding\", cw.encoding)\n-\t\tcw.Header().Set(\"Vary\", \"Accept-Encoding\")\n+\t\tcw.Header().Add(\"Vary\", \"Accept-Encoding\")\n \n \t\t// The content-length after compression is unknown\n \t\tcw.Header().Del(\"Content-Length\")"
    },
    {
      "sha": "98250d8231063c40c5445003f40f00d1330cb34b",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/middleware/logger.go",
      "status": "modified",
      "additions": 5,
      "deletions": 8,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Flogger.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Flogger.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Flogger.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -30,14 +30,11 @@ var (\n // http logger with structured logging support.\n //\n // IMPORTANT NOTE: Logger should go before any other middleware that may change\n-// the response, such as `middleware.Recoverer`. Example:\n-//\n-// ```go\n-// r := chi.NewRouter()\n-// r.Use(middleware.Logger)        // <--<< Logger should come before Recoverer\n-// r.Use(middleware.Recoverer)\n-// r.Get(\"/\", handler)\n-// ```\n+// the response, such as middleware.Recoverer. Example:\n+//     r := chi.NewRouter()\n+//     r.Use(middleware.Logger)        // <--<< Logger should come before Recoverer\n+//     r.Use(middleware.Recoverer)\n+//     r.Get(\"/\", handler)\n func Logger(next http.Handler) http.Handler {\n \treturn DefaultLogger(next)\n }"
    },
    {
      "sha": "2c6b3b33a75a0e5cb2dda1895fd88d89c398e49c",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/middleware/realip.go",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Frealip.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Frealip.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Frealip.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -4,6 +4,7 @@ package middleware\n // https://github.com/zenazn/goji/tree/master/web/middleware\n \n import (\n+\t\"net\"\n \t\"net/http\"\n \t\"strings\"\n )\n@@ -46,12 +47,14 @@ func realIP(r *http.Request) string {\n \t} else if xrip := r.Header.Get(xRealIP); xrip != \"\" {\n \t\tip = xrip\n \t} else if xff := r.Header.Get(xForwardedFor); xff != \"\" {\n-\t\ti := strings.Index(xff, \", \")\n+\t\ti := strings.Index(xff, \",\")\n \t\tif i == -1 {\n \t\t\ti = len(xff)\n \t\t}\n \t\tip = xff[:i]\n \t}\n-\n+\tif ip == \"\" || net.ParseIP(ip) == nil {\n+\t\treturn \"\"\n+\t}\n \treturn ip\n }"
    },
    {
      "sha": "8fa69baddbd8aaeaf31291402f801a25807e3eeb",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/middleware/recoverer.go",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Frecoverer.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Frecoverer.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Frecoverer.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -18,11 +18,16 @@ import (\n // backtrace), and returns a HTTP 500 (Internal Server Error) status if\n // possible. Recoverer prints a request ID if one is provided.\n //\n-// Alternatively, look at https://github.com/pressly/lg middleware pkgs.\n+// Alternatively, look at https://github.com/go-chi/httplog middleware pkgs.\n func Recoverer(next http.Handler) http.Handler {\n \tfn := func(w http.ResponseWriter, r *http.Request) {\n \t\tdefer func() {\n-\t\t\tif rvr := recover(); rvr != nil && rvr != http.ErrAbortHandler {\n+\t\t\tif rvr := recover(); rvr != nil {\n+\t\t\t\tif rvr == http.ErrAbortHandler {\n+\t\t\t\t\t// we don't recover http.ErrAbortHandler so the response\n+\t\t\t\t\t// to the client is aborted, this should not be logged\n+\t\t\t\t\tpanic(rvr)\n+\t\t\t\t}\n \n \t\t\t\tlogEntry := GetLogEntry(r)\n \t\t\t\tif logEntry != nil {"
    },
    {
      "sha": "919eb0fea27cb9f4d869e19a3bb07a2f90eabfd4",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/middleware/url_format.go",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Furl_format.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Furl_format.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmiddleware%2Furl_format.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -51,6 +51,11 @@ func URLFormat(next http.Handler) http.Handler {\n \t\tvar format string\n \t\tpath := r.URL.Path\n \n+\t\trctx := chi.RouteContext(r.Context())\n+\t\tif rctx != nil && rctx.RoutePath != \"\" {\n+\t\t\tpath = rctx.RoutePath\n+\t\t}\n+\n \t\tif strings.Index(path, \".\") > 0 {\n \t\t\tbase := strings.LastIndex(path, \"/\")\n \t\t\tidx := strings.LastIndex(path[base:], \".\")\n@@ -59,7 +64,6 @@ func URLFormat(next http.Handler) http.Handler {\n \t\t\t\tidx += base\n \t\t\t\tformat = path[idx+1:]\n \n-\t\t\t\trctx := chi.RouteContext(r.Context())\n \t\t\t\trctx.RoutePath = path[:idx]\n \t\t\t}\n \t\t}"
    },
    {
      "sha": "47e64cf296f2d956a5bfa974ed857baf5e3ed2d2",
      "filename": "backend/vendor/github.com/go-chi/chi/v5/mux.go",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-chi%2Fchi%2Fv5%2Fmux.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -29,8 +29,8 @@ type Mux struct {\n \t// Custom method not allowed handler\n \tmethodNotAllowedHandler http.HandlerFunc\n \n-\t// Controls the behaviour of middleware chain generation when a mux\n-\t// is registered as an inline group inside another mux.\n+\t// A reference to the parent mux used by subrouters when mounting\n+\t// to a parent mux\n \tparent *Mux\n \n \t// Routing context pool\n@@ -42,6 +42,8 @@ type Mux struct {\n \t// The middleware stack\n \tmiddlewares []func(http.Handler) http.Handler\n \n+\t// Controls the behaviour of middleware chain generation when a mux\n+\t// is registered as an inline group inside another mux.\n \tinline bool\n }\n "
    },
    {
      "sha": "3343c041450db538a47c768352d0c01896e247b2",
      "filename": "backend/vendor/github.com/go-pkgz/auth/auth.go",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fauth.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fauth.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fauth.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -181,7 +181,11 @@ func (s *Service) Handlers() (authHandler, avatarHandler http.Handler) {\n \t\t\tclaims, _, err := s.jwtService.Get(r)\n \t\t\tif err != nil || claims.User == nil {\n \t\t\t\tw.WriteHeader(http.StatusUnauthorized)\n-\t\t\t\trest.RenderJSON(w, rest.JSON{\"error\": err.Error()})\n+\t\t\t\tmsg := \"user is nil\"\n+\t\t\t\tif err != nil {\n+\t\t\t\t\tmsg = err.Error()\n+\t\t\t\t}\n+\t\t\t\trest.RenderJSON(w, rest.JSON{\"error\": msg})\n \t\t\t\treturn\n \t\t\t}\n \t\t\trest.RenderJSON(w, claims.User)"
    },
    {
      "sha": "fcee0a142b988f085c010c485539c078f88481e1",
      "filename": "backend/vendor/github.com/go-pkgz/auth/provider/custom_server.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fcustom_server.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fcustom_server.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fcustom_server.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -135,7 +135,7 @@ func (c *CustomServer) handleAuthorize(w http.ResponseWriter, r *http.Request) {\n \t\t\t\treturn\n \t\t\t}\n \n-\t\t\tformData := struct{ Query string }{Query: r.URL.RawQuery}\n+\t\t\tformData := struct{ Query template.URL }{Query: template.URL(r.URL.RawQuery)} //nolint:gosec // query is safe\n \n \t\t\tif err := userLoginTmpl.Execute(w, formData); err != nil {\n \t\t\t\tc.Logf(\"[WARN] can't write, %s\", err)"
    },
    {
      "sha": "e93bb0e605b395ff2f028e2374fbd4bb76a78736",
      "filename": "backend/vendor/github.com/go-pkgz/auth/provider/dev_provider.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fdev_provider.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fdev_provider.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fdev_provider.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -67,7 +67,7 @@ func (d *DevAuthServer) Run(ctx context.Context) { // nolint (gocyclo)\n \n \t\t\t\t// first time it will be called without username and will ask for one\n \t\t\t\tif !d.Automatic && (r.ParseForm() != nil || r.Form.Get(\"username\") == \"\") {\n-\t\t\t\t\tformData := struct{ Query template.URL }{Query: template.URL(r.URL.RawQuery)} //nolint:gosec // query is safes\n+\t\t\t\t\tformData := struct{ Query template.URL }{Query: template.URL(r.URL.RawQuery)} //nolint:gosec // query is safe\n \t\t\t\t\tif err = userFormTmpl.Execute(w, formData); err != nil {\n \t\t\t\t\t\td.Logf(\"[WARN] can't write, %s\", err)\n \t\t\t\t\t}"
    },
    {
      "sha": "f5d77777d5c42bbea292d30f8b4e65946c5f8b1c",
      "filename": "backend/vendor/github.com/go-pkgz/rest/basic_auth.go",
      "status": "modified",
      "additions": 22,
      "deletions": 1,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Frest%2Fbasic_auth.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Frest%2Fbasic_auth.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Frest%2Fbasic_auth.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -1,9 +1,13 @@\n package rest\n \n import (\n+\t\"context\"\n+\t\"crypto/subtle\"\n \t\"net/http\"\n )\n \n+const baContextKey = \"authorizedWithBasicAuth\"\n+\n // BasicAuth middleware requires basic auth and matches user & passwd with client-provided checker\n func BasicAuth(checker func(user, passwd string) bool) func(http.Handler) http.Handler {\n \n@@ -19,8 +23,25 @@ func BasicAuth(checker func(user, passwd string) bool) func(http.Handler) http.H\n \t\t\t\tw.WriteHeader(http.StatusForbidden)\n \t\t\t\treturn\n \t\t\t}\n-\t\t\th.ServeHTTP(w, r)\n+\t\t\th.ServeHTTP(w, r.WithContext(context.WithValue(r.Context(), contextKey(baContextKey), true)))\n \t\t}\n \t\treturn http.HandlerFunc(fn)\n \t}\n }\n+\n+// BasicAuthWithUserPasswd middleware requires basic auth and matches user & passwd with client-provided values\n+func BasicAuthWithUserPasswd(user, passwd string) func(http.Handler) http.Handler {\n+\tcheckFn := func(reqUser, reqPasswd string) bool {\n+\t\tmatchUser := subtle.ConstantTimeCompare([]byte(user), []byte(reqUser))\n+\t\tmatchPass := subtle.ConstantTimeCompare([]byte(passwd), []byte(reqPasswd))\n+\t\treturn matchUser == 1 && matchPass == 1\n+\t}\n+\treturn BasicAuth(checkFn)\n+}\n+\n+// IsAuthorized returns true is user authorized.\n+// it can be used in handlers to check if BasicAuth middleware was applied\n+func IsAuthorized(ctx context.Context) bool {\n+\tv := ctx.Value(contextKey(baContextKey))\n+\treturn v != nil && v.(bool)\n+}"
    },
    {
      "sha": "7cf9ba5759f0138bb0c0133f277c359240626a91",
      "filename": "backend/vendor/github.com/kyokomi/emoji/v2/README.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fkyokomi%2Femoji%2Fv2%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fkyokomi%2Femoji%2Fv2%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fkyokomi%2Femoji%2Fv2%2FREADME.md?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -1,7 +1,7 @@\n # Emoji\n Emoji is a simple golang package.\n \n-[![wercker status](https://app.wercker.com/status/7bef60de2c6d3e0e6c13d56b2393c5d8/s/master \"wercker status\")](https://app.wercker.com/project/byKey/7bef60de2c6d3e0e6c13d56b2393c5d8)\n+![master workflow](https://github.com/kyokomi/emoji/actions/workflows/go.yml/badge.svg)\n [![Coverage Status](https://coveralls.io/repos/kyokomi/emoji/badge.png?branch=master)](https://coveralls.io/r/kyokomi/emoji?branch=master)\n [![GoDoc](https://pkg.go.dev/badge/github.com/kyokomi/emoji.svg)](https://pkg.go.dev/github.com/kyokomi/emoji/v2)\n "
    },
    {
      "sha": "c44cb6186a65852b240da7f400e41de60128e8c6",
      "filename": "backend/vendor/github.com/kyokomi/emoji/v2/emoji_codemap.go",
      "status": "modified",
      "additions": 50,
      "deletions": 5,
      "changes": 55,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fkyokomi%2Femoji%2Fv2%2Femoji_codemap.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fkyokomi%2Femoji%2Fv2%2Femoji_codemap.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fkyokomi%2Femoji%2Fv2%2Femoji_codemap.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -84,6 +84,7 @@ func emojiCode() map[string]string {\n \t\t\t\":UP!_button:\":                         \"\\U0001f199\",\n \t\t\t\":VS_button:\":                          \"\\U0001f19a\",\n \t\t\t\":Virgo:\":                              \"\\u264d\",\n+\t\t\t\":ZZZ:\":                                \"\\U0001f4a4\",\n \t\t\t\":a:\":                                  \"\\U0001f170\\ufe0f\",\n \t\t\t\":ab:\":                                 \"\\U0001f18e\",\n \t\t\t\":abacus:\":                             \"\\U0001f9ee\",\n@@ -298,6 +299,7 @@ func emojiCode() map[string]string {\n \t\t\t\":birthday_cake:\":                      \"\\U0001f382\",\n \t\t\t\":bison:\":                              \"\\U0001f9ac\",\n \t\t\t\":biting_lip:\":                         \"\\U0001fae6\",\n+\t\t\t\":black_bird:\":                         \"\\U0001f426\\u200d\\u2b1b\",\n \t\t\t\":black_cat:\":                          \"\\U0001f408\\u200d\\u2b1b\",\n \t\t\t\":black_circle:\":                       \"\\u26ab\",\n \t\t\t\":black_circle_for_record:\":            \"\\u23fa\\ufe0f\",\n@@ -779,6 +781,7 @@ func emojiCode() map[string]string {\n \t\t\t\":dolphin:\":                                                \"\\U0001f42c\",\n \t\t\t\":dominica:\":                                               \"\\U0001f1e9\\U0001f1f2\",\n \t\t\t\":dominican_republic:\":                                     \"\\U0001f1e9\\U0001f1f4\",\n+\t\t\t\":donkey:\":                                                 \"\\U0001facf\",\n \t\t\t\":door:\":                                                   \"\\U0001f6aa\",\n \t\t\t\":dotted_line_face:\":                                       \"\\U0001fae5\",\n \t\t\t\":dotted_six-pointed_star:\":                                \"\\U0001f52f\",\n@@ -850,6 +853,7 @@ func emojiCode() map[string]string {\n \t\t\t\":empty_nest:\":                                             \"\\U0001fab9\",\n \t\t\t\":end:\":                                                    \"\\U0001f51a\",\n \t\t\t\":england:\":                                                \"\\U0001f3f4\\U000e0067\\U000e0062\\U000e0065\\U000e006e\\U000e0067\\U000e007f\",\n+\t\t\t\":enraged_face:\":                                           \"\\U0001f621\",\n \t\t\t\":envelope:\":                                               \"\\u2709\",\n \t\t\t\":envelope_with_arrow:\":                                    \"\\U0001f4e9\",\n \t\t\t\":equatorial_guinea:\":                                      \"\\U0001f1ec\\U0001f1f6\",\n@@ -1837,12 +1841,14 @@ func emojiCode() map[string]string {\n \t\t\t\":flower_playing_cards:\":                        \"\\U0001f3b4\",\n \t\t\t\":flushed:\":                                     \"\\U0001f633\",\n \t\t\t\":flushed_face:\":                                \"\\U0001f633\",\n+\t\t\t\":flute:\":                                       \"\\U0001fa88\",\n \t\t\t\":fly:\":                                         \"\\U0001fab0\",\n \t\t\t\":flying_disc:\":                                 \"\\U0001f94f\",\n \t\t\t\":flying_saucer:\":                               \"\\U0001f6f8\",\n \t\t\t\":fog:\":                                         \"\\U0001f32b\\ufe0f\",\n \t\t\t\":foggy:\":                                       \"\\U0001f301\",\n \t\t\t\":folded_hands:\":                                \"\\U0001f64f\",\n+\t\t\t\":folding_hand_fan:\":                            \"\\U0001faad\",\n \t\t\t\":fondue:\":                                      \"\\U0001fad5\",\n \t\t\t\":foot:\":                                        \"\\U0001f9b6\",\n \t\t\t\":football:\":                                    \"\\U0001f3c8\",\n@@ -1906,6 +1912,7 @@ func emojiCode() map[string]string {\n \t\t\t\":gibraltar:\":                                   \"\\U0001f1ec\\U0001f1ee\",\n \t\t\t\":gift:\":                                        \"\\U0001f381\",\n \t\t\t\":gift_heart:\":                                  \"\\U0001f49d\",\n+\t\t\t\":ginger_root:\":                                 \"\\U0001fada\",\n \t\t\t\":giraffe:\":                                     \"\\U0001f992\",\n \t\t\t\":giraffe_face:\":                                \"\\U0001f992\",\n \t\t\t\":girl:\":                                        \"\\U0001f467\",\n@@ -1932,6 +1939,7 @@ func emojiCode() map[string]string {\n \t\t\t\":golfing:\":                                     \"\\U0001f3cc\\ufe0f\",\n \t\t\t\":golfing_man:\":                                 \"\\U0001f3cc\\ufe0f\\u200d\\u2642\\ufe0f\",\n \t\t\t\":golfing_woman:\":                               \"\\U0001f3cc\\ufe0f\\u200d\\u2640\\ufe0f\",\n+\t\t\t\":goose:\":                                       \"\\U0001fabf\",\n \t\t\t\":gorilla:\":                                     \"\\U0001f98d\",\n \t\t\t\":graduation_cap:\":                              \"\\U0001f393\",\n \t\t\t\":grapes:\":                                      \"\\U0001f347\",\n@@ -1945,6 +1953,7 @@ func emojiCode() map[string]string {\n \t\t\t\":greenland:\":                                   \"\\U0001f1ec\\U0001f1f1\",\n \t\t\t\":grenada:\":                                     \"\\U0001f1ec\\U0001f1e9\",\n \t\t\t\":grey_exclamation:\":                            \"\\u2755\",\n+\t\t\t\":grey_heart:\":                                  \"\\U0001fa76\",\n \t\t\t\":grey_question:\":                               \"\\u2754\",\n \t\t\t\":grimacing:\":                                   \"\\U0001f62c\",\n \t\t\t\":grimacing_face:\":                              \"\\U0001f62c\",\n@@ -1976,6 +1985,7 @@ func emojiCode() map[string]string {\n \t\t\t\":guitar:\":                                      \"\\U0001f3b8\",\n \t\t\t\":gun:\":                                         \"\\U0001f52b\",\n \t\t\t\":guyana:\":                                      \"\\U0001f1ec\\U0001f1fe\",\n+\t\t\t\":hair_pick:\":                                   \"\\U0001faae\",\n \t\t\t\":haircut:\":                                     \"\\U0001f487\\u200d\\u2640\\ufe0f\",\n \t\t\t\":haircut_man:\":                                 \"\\U0001f487\\u200d\\u2642\\ufe0f\",\n \t\t\t\":haircut_woman:\":                               \"\\U0001f487\\u200d\\u2640\\ufe0f\",\n@@ -2094,6 +2104,7 @@ func emojiCode() map[string]string {\n \t\t\t\":hushed:\":                                \"\\U0001f62f\",\n \t\t\t\":hushed_face:\":                           \"\\U0001f62f\",\n \t\t\t\":hut:\":                                   \"\\U0001f6d6\",\n+\t\t\t\":hyacinth:\":                              \"\\U0001fabb\",\n \t\t\t\":i_love_you_hand_sign:\":                  \"\\U0001f91f\",\n \t\t\t\":ice:\":                                   \"\\U0001f9ca\",\n \t\t\t\":ice_cream:\":                             \"\\U0001f368\",\n@@ -2142,6 +2153,7 @@ func emojiCode() map[string]string {\n \t\t\t\":japanese_ogre:\":                         \"\\U0001f479\",\n \t\t\t\":jar:\":                                   \"\\U0001fad9\",\n \t\t\t\":jeans:\":                                 \"\\U0001f456\",\n+\t\t\t\":jellyfish:\":                             \"\\U0001fabc\",\n \t\t\t\":jersey:\":                                \"\\U0001f1ef\\U0001f1ea\",\n \t\t\t\":jigsaw:\":                                \"\\U0001f9e9\",\n \t\t\t\":joker:\":                                 \"\\U0001f0cf\",\n@@ -2175,6 +2187,7 @@ func emojiCode() map[string]string {\n \t\t\t\":keycap_9:\":                              \"9\\ufe0f\\u20e3\",\n \t\t\t\":keycap_star:\":                           \"*\\ufe0f\\u20e3\",\n \t\t\t\":keycap_ten:\":                            \"\\U0001f51f\",\n+\t\t\t\":khanda:\":                                \"\\U0001faaf\",\n \t\t\t\":kick_scooter:\":                          \"\\U0001f6f4\",\n \t\t\t\":kimono:\":                                \"\\U0001f458\",\n \t\t\t\":kiribati:\":                              \"\\U0001f1f0\\U0001f1ee\",\n@@ -2261,6 +2274,7 @@ func emojiCode() map[string]string {\n \t\t\t\":left_speech_bubble:\":                    \"\\U0001f5e8\\ufe0f\",\n \t\t\t\":leftwards_arrow_with_hook:\":             \"\\u21a9\\ufe0f\",\n \t\t\t\":leftwards_hand:\":                        \"\\U0001faf2\",\n+\t\t\t\":leftwards_pushing_hand:\":                \"\\U0001faf7\",\n \t\t\t\":leg:\":                                   \"\\U0001f9b5\",\n \t\t\t\":lemon:\":                                 \"\\U0001f34b\",\n \t\t\t\":leo:\":                                   \"\\u264c\",\n@@ -2271,6 +2285,7 @@ func emojiCode() map[string]string {\n \t\t\t\":libra:\":                                 \"\\u264e\",\n \t\t\t\":libya:\":                                 \"\\U0001f1f1\\U0001f1fe\",\n \t\t\t\":liechtenstein:\":                         \"\\U0001f1f1\\U0001f1ee\",\n+\t\t\t\":light_blue_heart:\":                      \"\\U0001fa75\",\n \t\t\t\":light_bulb:\":                            \"\\U0001f4a1\",\n \t\t\t\":light_rail:\":                            \"\\U0001f688\",\n \t\t\t\":lightning:\":                             \"\\U0001f329\\ufe0f\",\n@@ -2807,6 +2822,7 @@ func emojiCode() map[string]string {\n \t\t\t\":map:\":                                   \"\\U0001f5fa\",\n \t\t\t\":map_of_Japan:\":                          \"\\U0001f5fe\",\n \t\t\t\":maple_leaf:\":                            \"\\U0001f341\",\n+\t\t\t\":maracas:\":                               \"\\U0001fa87\",\n \t\t\t\":marshall_islands:\":                      \"\\U0001f1f2\\U0001f1ed\",\n \t\t\t\":martial_arts_uniform:\":                  \"\\U0001f94b\",\n \t\t\t\":martinique:\":                            \"\\U0001f1f2\\U0001f1f6\",\n@@ -2911,6 +2927,7 @@ func emojiCode() map[string]string {\n \t\t\t\":moon:\":                                  \"\\U0001f314\",\n \t\t\t\":moon_cake:\":                             \"\\U0001f96e\",\n \t\t\t\":moon_viewing_ceremony:\":                 \"\\U0001f391\",\n+\t\t\t\":moose:\":                                 \"\\U0001face\",\n \t\t\t\":morocco:\":                               \"\\U0001f1f2\\U0001f1e6\",\n \t\t\t\":mortar_board:\":                          \"\\U0001f393\",\n \t\t\t\":mosque:\":                                \"\\U0001f54c\",\n@@ -3159,6 +3176,7 @@ func emojiCode() map[string]string {\n \t\t\t\":passport_control:\":                      \"\\U0001f6c2\",\n \t\t\t\":pause_button:\":                          \"\\u23f8\",\n \t\t\t\":paw_prints:\":                            \"\\U0001f43e\",\n+\t\t\t\":pea_pod:\":                               \"\\U0001fadb\",\n \t\t\t\":peace:\":                                 \"\\u262e\",\n \t\t\t\":peace_symbol:\":                          \"\\u262e\\ufe0f\",\n \t\t\t\":peach:\":                                 \"\\U0001f351\",\n@@ -3410,6 +3428,7 @@ func emojiCode() map[string]string {\n \t\t\t\":pine_decoration:\":                       \"\\U0001f38d\",\n \t\t\t\":pineapple:\":                             \"\\U0001f34d\",\n \t\t\t\":ping_pong:\":                             \"\\U0001f3d3\",\n+\t\t\t\":pink_heart:\":                            \"\\U0001fa77\",\n \t\t\t\":pirate_flag:\":                           \"\\U0001f3f4\\u200d\\u2620\\ufe0f\",\n \t\t\t\":pisces:\":                                \"\\u2653\",\n \t\t\t\":pitcairn_islands:\":                      \"\\U0001f1f5\\U0001f1f3\",\n@@ -3486,7 +3505,7 @@ func emojiCode() map[string]string {\n \t\t\t\":pouring_liquid:\":                        \"\\U0001fad7\",\n \t\t\t\":pout:\":                                  \"\\U0001f621\",\n \t\t\t\":pouting_cat:\":                           \"\\U0001f63e\",\n-\t\t\t\":pouting_face:\":                          \"\\U0001f621\",\n+\t\t\t\":pouting_face:\":                          \"\\U0001f64e\",\n \t\t\t\":pouting_man:\":                           \"\\U0001f64e\\u200d\\u2642\\ufe0f\",\n \t\t\t\":pouting_woman:\":                         \"\\U0001f64e\\u200d\\u2640\\ufe0f\",\n \t\t\t\":pray:\":                                  \"\\U0001f64f\",\n@@ -3641,6 +3660,7 @@ func emojiCode() map[string]string {\n \t\t\t\":right_facing_fist_tone4:\":               \"\\U0001f91c\\U0001f3fe\",\n \t\t\t\":right_facing_fist_tone5:\":               \"\\U0001f91c\\U0001f3ff\",\n \t\t\t\":rightwards_hand:\":                       \"\\U0001faf1\",\n+\t\t\t\":rightwards_pushing_hand:\":               \"\\U0001faf8\",\n \t\t\t\":ring:\":                                  \"\\U0001f48d\",\n \t\t\t\":ring_buoy:\":                             \"\\U0001f6df\",\n \t\t\t\":ringed_planet:\":                         \"\\U0001fa90\",\n@@ -3747,6 +3767,7 @@ func emojiCode() map[string]string {\n \t\t\t\":seven_o’clock:\":                         \"\\U0001f556\",\n \t\t\t\":sewing_needle:\":                         \"\\U0001faa1\",\n \t\t\t\":seychelles:\":                            \"\\U0001f1f8\\U0001f1e8\",\n+\t\t\t\":shaking_face:\":                          \"\\U0001fae8\",\n \t\t\t\":shallow_pan_of_food:\":                   \"\\U0001f958\",\n \t\t\t\":shamrock:\":                              \"\\u2618\\ufe0f\",\n \t\t\t\":shark:\":                                 \"\\U0001f988\",\n@@ -4275,9 +4296,11 @@ func emojiCode() map[string]string {\n \t\t\t\":wind_face:\":                             \"\\U0001f32c\",\n \t\t\t\":window:\":                                \"\\U0001fa9f\",\n \t\t\t\":wine_glass:\":                            \"\\U0001f377\",\n+\t\t\t\":wing:\":                                  \"\\U0001fabd\",\n \t\t\t\":wink:\":                                  \"\\U0001f609\",\n \t\t\t\":winking_face:\":                          \"\\U0001f609\",\n \t\t\t\":winking_face_with_tongue:\":              \"\\U0001f61c\",\n+\t\t\t\":wireless:\":                              \"\\U0001f6dc\",\n \t\t\t\":wolf:\":                                  \"\\U0001f43a\",\n \t\t\t\":woman:\":                                 \"\\U0001f469\",\n \t\t\t\":woman-biking:\":                          \"\\U0001f6b4\\u200d\\u2640\\ufe0f\",\n@@ -4708,6 +4731,7 @@ func emojiCode() map[string]string {\n \t\t\t\":writing_hand_tone5:\":                    \"\\u270d\\U0001f3ff\",\n \t\t\t\":x:\":                                     \"\\u274c\",\n \t\t\t\":x-ray:\":                                 \"\\U0001fa7b\",\n+\t\t\t\":x_ray:\":                                 \"\\U0001fa7b\",\n \t\t\t\":yarn:\":                                  \"\\U0001f9f6\",\n \t\t\t\":yawning_face:\":                          \"\\U0001f971\",\n \t\t\t\":yellow_circle:\":                         \"\\U0001f7e1\",\n@@ -5470,6 +5494,7 @@ func emojiRevCode() map[string][]string {\n \t\t\t\"\\U0001f424\":                                                             {\":baby_chick:\"},\n \t\t\t\"\\U0001f425\":                                                             {\":hatched_chick:\", \":front-facing_baby_chick:\"},\n \t\t\t\"\\U0001f426\":                                                             {\":bird:\"},\n+\t\t\t\"\\U0001f426\\u200d\\u2b1b\":                                                 {\":black_bird:\"},\n \t\t\t\"\\U0001f427\":                                                             {\":penguin:\"},\n \t\t\t\"\\U0001f428\":                                                             {\":koala:\"},\n \t\t\t\"\\U0001f429\":                                                             {\":poodle:\"},\n@@ -6104,7 +6129,7 @@ func emojiRevCode() map[string][]string {\n \t\t\t\"\\U0001f4a1\":                                 {\":bulb:\", \":light_bulb:\"},\n \t\t\t\"\\U0001f4a2\":                                 {\":anger:\", \":anger_symbol:\"},\n \t\t\t\"\\U0001f4a3\":                                 {\":bomb:\"},\n-\t\t\t\"\\U0001f4a4\":                                 {\":zzz:\"},\n+\t\t\t\"\\U0001f4a4\":                                 {\":ZZZ:\", \":zzz:\"},\n \t\t\t\"\\U0001f4a5\":                                 {\":boom:\", \":collision:\"},\n \t\t\t\"\\U0001f4a6\":                                 {\":sweat_drops:\", \":sweat_droplets:\"},\n \t\t\t\"\\U0001f4a7\":                                 {\":droplet:\"},\n@@ -6438,7 +6463,7 @@ func emojiRevCode() map[string][]string {\n \t\t\t\"\\U0001f61e\":                                 {\":disappointed:\", \":disappointed_face:\"},\n \t\t\t\"\\U0001f61f\":                                 {\":worried:\", \":worried_face:\"},\n \t\t\t\"\\U0001f620\":                                 {\":angry:\", \":angry_face:\"},\n-\t\t\t\"\\U0001f621\":                                 {\":pout:\", \":rage:\", \":pouting_face:\"},\n+\t\t\t\"\\U0001f621\":                                 {\":pout:\", \":rage:\", \":enraged_face:\"},\n \t\t\t\"\\U0001f622\":                                 {\":cry:\", \":crying_face:\"},\n \t\t\t\"\\U0001f623\":                                 {\":persevere:\", \":persevering_face:\"},\n \t\t\t\"\\U0001f624\":                                 {\":triumph:\", \":face_with_steam_from_nose:\"},\n@@ -6576,7 +6601,7 @@ func emojiRevCode() map[string][]string {\n \t\t\t\"\\U0001f64d\\U0001f3ff\\u200d\\u2642\\ufe0f\":     {\":man_frowning_tone5:\"},\n \t\t\t\"\\U0001f64d\\u200d\\u2640\\ufe0f\":               {\":frowning_woman:\", \":woman-frowning:\", \":woman_frowning:\", \":person_frowning:\"},\n \t\t\t\"\\U0001f64d\\u200d\\u2642\\ufe0f\":               {\":frowning_man:\", \":man-frowning:\", \":man_frowning:\"},\n-\t\t\t\"\\U0001f64e\":                                 {\":person_pouting:\"},\n+\t\t\t\"\\U0001f64e\":                                 {\":pouting_face:\", \":person_pouting:\"},\n \t\t\t\"\\U0001f64e\\U0001f3fb\":                       {\":person_pouting_tone1:\"},\n \t\t\t\"\\U0001f64e\\U0001f3fb\\u200d\\u2640\\ufe0f\":     {\":woman_pouting_tone1:\"},\n \t\t\t\"\\U0001f64e\\U0001f3fb\\u200d\\u2642\\ufe0f\":     {\":man_pouting_tone1:\"},\n@@ -6761,6 +6786,7 @@ func emojiRevCode() map[string][]string {\n \t\t\t\"\\U0001f6d5\":                                 {\":hindu_temple:\"},\n \t\t\t\"\\U0001f6d6\":                                 {\":hut:\"},\n \t\t\t\"\\U0001f6d7\":                                 {\":elevator:\"},\n+\t\t\t\"\\U0001f6dc\":                                 {\":wireless:\"},\n \t\t\t\"\\U0001f6dd\":                                 {\":playground_slide:\"},\n \t\t\t\"\\U0001f6de\":                                 {\":wheel:\"},\n \t\t\t\"\\U0001f6df\":                                 {\":ring_buoy:\"},\n@@ -7422,10 +7448,13 @@ func emojiRevCode() map[string][]string {\n \t\t\t\"\\U0001fa72\":                                 {\":briefs:\", \":swim_brief:\"},\n \t\t\t\"\\U0001fa73\":                                 {\":shorts:\"},\n \t\t\t\"\\U0001fa74\":                                 {\":thong_sandal:\"},\n+\t\t\t\"\\U0001fa75\":                                 {\":light_blue_heart:\"},\n+\t\t\t\"\\U0001fa76\":                                 {\":grey_heart:\"},\n+\t\t\t\"\\U0001fa77\":                                 {\":pink_heart:\"},\n \t\t\t\"\\U0001fa78\":                                 {\":drop_of_blood:\"},\n \t\t\t\"\\U0001fa79\":                                 {\":adhesive_bandage:\"},\n \t\t\t\"\\U0001fa7a\":                                 {\":stethoscope:\"},\n-\t\t\t\"\\U0001fa7b\":                                 {\":x-ray:\"},\n+\t\t\t\"\\U0001fa7b\":                                 {\":x-ray:\", \":x_ray:\"},\n \t\t\t\"\\U0001fa7c\":                                 {\":crutch:\"},\n \t\t\t\"\\U0001fa80\":                                 {\":yo-yo:\", \":yo_yo:\"},\n \t\t\t\"\\U0001fa81\":                                 {\":kite:\"},\n@@ -7434,6 +7463,8 @@ func emojiRevCode() map[string][]string {\n \t\t\t\"\\U0001fa84\":                                 {\":magic_wand:\"},\n \t\t\t\"\\U0001fa85\":                                 {\":pinata:\", \":piñata:\"},\n \t\t\t\"\\U0001fa86\":                                 {\":nesting_dolls:\"},\n+\t\t\t\"\\U0001fa87\":                                 {\":maracas:\"},\n+\t\t\t\"\\U0001fa88\":                                 {\":flute:\"},\n \t\t\t\"\\U0001fa90\":                                 {\":ringed_planet:\"},\n \t\t\t\"\\U0001fa91\":                                 {\":chair:\"},\n \t\t\t\"\\U0001fa92\":                                 {\":razor:\"},\n@@ -7463,6 +7494,9 @@ func emojiRevCode() map[string][]string {\n \t\t\t\"\\U0001faaa\":                                 {\":identification_card:\"},\n \t\t\t\"\\U0001faab\":                                 {\":low_battery:\"},\n \t\t\t\"\\U0001faac\":                                 {\":hamsa:\"},\n+\t\t\t\"\\U0001faad\":                                 {\":folding_hand_fan:\"},\n+\t\t\t\"\\U0001faae\":                                 {\":hair_pick:\"},\n+\t\t\t\"\\U0001faaf\":                                 {\":khanda:\"},\n \t\t\t\"\\U0001fab0\":                                 {\":fly:\"},\n \t\t\t\"\\U0001fab1\":                                 {\":worm:\"},\n \t\t\t\"\\U0001fab2\":                                 {\":beetle:\"},\n@@ -7474,12 +7508,18 @@ func emojiRevCode() map[string][]string {\n \t\t\t\"\\U0001fab8\":                                 {\":coral:\"},\n \t\t\t\"\\U0001fab9\":                                 {\":empty_nest:\"},\n \t\t\t\"\\U0001faba\":                                 {\":nest_with_eggs:\"},\n+\t\t\t\"\\U0001fabb\":                                 {\":hyacinth:\"},\n+\t\t\t\"\\U0001fabc\":                                 {\":jellyfish:\"},\n+\t\t\t\"\\U0001fabd\":                                 {\":wing:\"},\n+\t\t\t\"\\U0001fabf\":                                 {\":goose:\"},\n \t\t\t\"\\U0001fac0\":                                 {\":anatomical_heart:\"},\n \t\t\t\"\\U0001fac1\":                                 {\":lungs:\"},\n \t\t\t\"\\U0001fac2\":                                 {\":people_hugging:\"},\n \t\t\t\"\\U0001fac3\":                                 {\":pregnant_man:\"},\n \t\t\t\"\\U0001fac4\":                                 {\":pregnant_person:\"},\n \t\t\t\"\\U0001fac5\":                                 {\":person_with_crown:\"},\n+\t\t\t\"\\U0001face\":                                 {\":moose:\"},\n+\t\t\t\"\\U0001facf\":                                 {\":donkey:\"},\n \t\t\t\"\\U0001fad0\":                                 {\":blueberries:\"},\n \t\t\t\"\\U0001fad1\":                                 {\":bell_pepper:\"},\n \t\t\t\"\\U0001fad2\":                                 {\":olive:\"},\n@@ -7490,6 +7530,8 @@ func emojiRevCode() map[string][]string {\n \t\t\t\"\\U0001fad7\":                                 {\":pouring_liquid:\"},\n \t\t\t\"\\U0001fad8\":                                 {\":beans:\"},\n \t\t\t\"\\U0001fad9\":                                 {\":jar:\"},\n+\t\t\t\"\\U0001fada\":                                 {\":ginger_root:\"},\n+\t\t\t\"\\U0001fadb\":                                 {\":pea_pod:\"},\n \t\t\t\"\\U0001fae0\":                                 {\":melting_face:\"},\n \t\t\t\"\\U0001fae1\":                                 {\":saluting_face:\"},\n \t\t\t\"\\U0001fae2\":                                 {\":face_with_open_eyes_and_hand_over_mouth:\"},\n@@ -7498,13 +7540,16 @@ func emojiRevCode() map[string][]string {\n \t\t\t\"\\U0001fae5\":                                 {\":dotted_line_face:\"},\n \t\t\t\"\\U0001fae6\":                                 {\":biting_lip:\"},\n \t\t\t\"\\U0001fae7\":                                 {\":bubbles:\"},\n+\t\t\t\"\\U0001fae8\":                                 {\":shaking_face:\"},\n \t\t\t\"\\U0001faf0\":                                 {\":hand_with_index_finger_and_thumb_crossed:\"},\n \t\t\t\"\\U0001faf1\":                                 {\":rightwards_hand:\"},\n \t\t\t\"\\U0001faf2\":                                 {\":leftwards_hand:\"},\n \t\t\t\"\\U0001faf3\":                                 {\":palm_down_hand:\"},\n \t\t\t\"\\U0001faf4\":                                 {\":palm_up_hand:\"},\n \t\t\t\"\\U0001faf5\":                                 {\":index_pointing_at_the_viewer:\"},\n \t\t\t\"\\U0001faf6\":                                 {\":heart_hands:\"},\n+\t\t\t\"\\U0001faf7\":                                 {\":leftwards_pushing_hand:\"},\n+\t\t\t\"\\U0001faf8\":                                 {\":rightwards_pushing_hand:\"},\n \t\t\t\"\\u00a9\\ufe0f\":                               {\":copyright:\"},\n \t\t\t\"\\u00ae\\ufe0f\":                               {\":registered:\"},\n \t\t\t\"\\u203c\":                                     {\":double_exclamation_mark:\"},"
    },
    {
      "sha": "82bd2099391049bb6629b4fa8900fcaf2eb02c4c",
      "filename": "backend/vendor/github.com/kyokomi/emoji/v2/wercker.yml",
      "status": "removed",
      "additions": 0,
      "deletions": 33,
      "changes": 33,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Fkyokomi%2Femoji%2Fv2%2Fwercker.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgithub.com%2Fkyokomi%2Femoji%2Fv2%2Fwercker.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fkyokomi%2Femoji%2Fv2%2Fwercker.yml?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,33 +0,0 @@\n-box: golang\n-build:\n-  steps:\n-    - setup-go-workspace\n-    - script:\n-        name: go version\n-        code: go version\n-    - script:\n-        name: install tools\n-        code: |\n-          go install github.com/mattn/goveralls@latest\n-          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest\n-    - script:\n-        name: go get\n-        code: |\n-          go get ./...\n-    - script:\n-        name: go build\n-        code: |\n-          go build ./...\n-    - script:\n-        name: golangci-lint\n-        code: |\n-          golangci-lint run\n-    - script:\n-        name: go test\n-        code: |\n-          go test ./...\n-    - script:\n-        name: coveralls\n-        code: |\n-          goveralls -v -service wercker.com -repotoken $COVERALLS_TOKEN\n-"
    },
    {
      "sha": "d95e8a9d2fd61a512a7d15aa26f434e03dcebca5",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/doc.go",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fdoc.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -35,31 +35,31 @@ the allowlist will be stripped.\n \n The default bluemonday.UGCPolicy().Sanitize() turns this:\n \n-    Hello <STYLE>.XSS{background-image:url(\"javascript:alert('XSS')\");}</STYLE><A CLASS=XSS></A>World\n+\tHello <STYLE>.XSS{background-image:url(\"javascript:alert('XSS')\");}</STYLE><A CLASS=XSS></A>World\n \n Into the more harmless:\n \n-    Hello World\n+\tHello World\n \n And it turns this:\n \n-    <a href=\"javascript:alert('XSS1')\" onmouseover=\"alert('XSS2')\">XSS<a>\n+\t<a href=\"javascript:alert('XSS1')\" onmouseover=\"alert('XSS2')\">XSS<a>\n \n Into this:\n \n-    XSS\n+\tXSS\n \n Whilst still allowing this:\n \n-    <a href=\"http://www.google.com/\">\n-      <img src=\"https://ssl.gstatic.com/accounts/ui/logo_2x.png\"/>\n-    </a>\n+\t<a href=\"http://www.google.com/\">\n+\t  <img src=\"https://ssl.gstatic.com/accounts/ui/logo_2x.png\"/>\n+\t</a>\n \n To pass through mostly unaltered (it gained a rel=\"nofollow\"):\n \n-    <a href=\"http://www.google.com/\" rel=\"nofollow\">\n-      <img src=\"https://ssl.gstatic.com/accounts/ui/logo_2x.png\"/>\n-    </a>\n+\t<a href=\"http://www.google.com/\" rel=\"nofollow\">\n+\t  <img src=\"https://ssl.gstatic.com/accounts/ui/logo_2x.png\"/>\n+\t</a>\n \n The primary purpose of bluemonday is to take potentially unsafe user generated\n content (from things like Markdown, HTML WYSIWYG tools, etc) and make it safe\n@@ -95,10 +95,10 @@ attributes are considered safe for your scenario. OWASP provide an XSS\n prevention cheat sheet ( https://www.google.com/search?q=xss+prevention+cheat+sheet )\n to help explain the risks, but essentially:\n \n-    1. Avoid allowing anything other than plain HTML elements\n-    2. Avoid allowing `script`, `style`, `iframe`, `object`, `embed`, `base`\n-       elements\n-    3. Avoid allowing anything other than plain HTML elements with simple\n-       values that you can match to a regexp\n+ 1. Avoid allowing anything other than plain HTML elements\n+ 2. Avoid allowing `script`, `style`, `iframe`, `object`, `embed`, `base`\n+    elements\n+ 3. Avoid allowing anything other than plain HTML elements with simple\n+    values that you can match to a regexp\n */\n package bluemonday"
    },
    {
      "sha": "2b03d7e7d1d2265f30ab6b4f961fca0d18b8db76",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/helpers.go",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fhelpers.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fhelpers.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fhelpers.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -193,10 +193,11 @@ func (p *Policy) AllowImages() {\n // http://en.wikipedia.org/wiki/Data_URI_scheme\n //\n // Images must have a mimetype matching:\n-//   image/gif\n-//   image/jpeg\n-//   image/png\n-//   image/webp\n+//\n+//\timage/gif\n+//\timage/jpeg\n+//\timage/png\n+//\timage/webp\n //\n // NOTE: There is a potential security risk to allowing data URIs and you should\n // only permit them on content you already trust."
    },
    {
      "sha": "10461458355818ebf63b08cc9adb6bc8dd778efc",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/sanitize.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fsanitize.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fsanitize.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fsanitize.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -440,8 +440,8 @@ func (p *Policy) sanitize(r io.Reader, w io.Writer) error {\n \t\t\t\t\tif _, err := buff.WriteString(\" \"); err != nil {\n \t\t\t\t\t\treturn err\n \t\t\t\t\t}\n-\t\t\t\t\tbreak\n \t\t\t\t}\n+\t\t\t\tbreak\n \t\t\t}\n \t\t\tif !skipElementContent {\n \t\t\t\tif _, err := buff.WriteString(token.String()); err != nil {"
    },
    {
      "sha": "a0d81858261161005d82cabf0671bbfc415ec118",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bson.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbson.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbson.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbson.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -27,7 +27,7 @@ type Zeroer interface {\n //\n // Example usage:\n //\n-// \t\tbson.D{{\"foo\", \"bar\"}, {\"hello\", \"world\"}, {\"pi\", 3.14159}}\n+//\tbson.D{{\"foo\", \"bar\"}, {\"hello\", \"world\"}, {\"pi\", 3.14159}}\n type D = primitive.D\n \n // E represents a BSON element for a D. It is usually used inside a D.\n@@ -39,12 +39,12 @@ type E = primitive.E\n //\n // Example usage:\n //\n-// \t\tbson.M{\"foo\": \"bar\", \"hello\": \"world\", \"pi\": 3.14159}\n+//\tbson.M{\"foo\": \"bar\", \"hello\": \"world\", \"pi\": 3.14159}\n type M = primitive.M\n \n // An A is an ordered representation of a BSON array.\n //\n // Example usage:\n //\n-// \t\tbson.A{\"bar\", \"world\", 3.14159, bson.D{{\"qux\", 12345}}}\n+//\tbson.A{\"bar\", \"world\", 3.14159, bson.D{{\"qux\", 12345}}}\n type A = primitive.A"
    },
    {
      "sha": "5f903ebea6c9e48b22dac1880b6b662c07f40222",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsoncodec/doc.go",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fdoc.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -17,7 +17,7 @@\n // 2) A Registry that holds these ValueEncoders and ValueDecoders and provides methods for\n // retrieving them.\n //\n-// ValueEncoders and ValueDecoders\n+// # ValueEncoders and ValueDecoders\n //\n // The ValueEncoder interface is implemented by types that can encode a provided Go type to BSON.\n // The value to encode is provided as a reflect.Value and a bsonrw.ValueWriter is used within the\n@@ -31,7 +31,7 @@\n // allow the use of a function with the correct signature as a ValueDecoder. A DecodeContext\n // instance is provided and serves similar functionality to the EncodeContext.\n //\n-// Registry and RegistryBuilder\n+// # Registry and RegistryBuilder\n //\n // A Registry is an immutable store for ValueEncoders, ValueDecoders, and a type map. See the Registry type\n // documentation for examples of registering various custom encoders and decoders. A Registry can be constructed using a\n@@ -53,15 +53,15 @@\n // values decode as Go int32 and int64 instances, respectively, when decoding into a bson.D. The following code would\n // change the behavior so these values decode as Go int instances instead:\n //\n-//\t\tintType := reflect.TypeOf(int(0))\n-//\t\tregistryBuilder.RegisterTypeMapEntry(bsontype.Int32, intType).RegisterTypeMapEntry(bsontype.Int64, intType)\n+//\tintType := reflect.TypeOf(int(0))\n+//\tregistryBuilder.RegisterTypeMapEntry(bsontype.Int32, intType).RegisterTypeMapEntry(bsontype.Int64, intType)\n //\n // 4. Kind encoder/decoders - These can be registered using the RegisterDefaultEncoder and RegisterDefaultDecoder\n // methods. The registered codec will be invoked when encoding or decoding values whose reflect.Kind matches the\n // registered reflect.Kind as long as the value's type doesn't match a registered type or hook encoder/decoder first.\n // These methods should be used to change the behavior for all values for a specific kind.\n //\n-// Registry Lookup Procedure\n+// # Registry Lookup Procedure\n //\n // When looking up an encoder in a Registry, the precedence rules are as follows:\n //\n@@ -79,7 +79,7 @@\n // rules apply for decoders, with the exception that an error of type ErrNoDecoder will be returned if no decoder is\n // found.\n //\n-// DefaultValueEncoders and DefaultValueDecoders\n+// # DefaultValueEncoders and DefaultValueDecoders\n //\n // The DefaultValueEncoders and DefaultValueDecoders types provide a full set of ValueEncoders and\n // ValueDecoders for handling a wide range of Go types, including all of the types within the"
    },
    {
      "sha": "80644023c2496e1efb712ffe10e2917eaa626197",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsoncodec/registry.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fregistry.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fregistry.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fregistry.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -254,6 +254,7 @@ func (rb *RegistryBuilder) RegisterDefaultDecoder(kind reflect.Kind, dec ValueDe\n // By default, BSON documents will decode into interface{} values as bson.D. To change the default type for BSON\n // documents, a type map entry for bsontype.EmbeddedDocument should be registered. For example, to force BSON documents\n // to decode to bson.Raw, use the following code:\n+//\n //\trb.RegisterTypeMapEntry(bsontype.EmbeddedDocument, reflect.TypeOf(bson.Raw{}))\n func (rb *RegistryBuilder) RegisterTypeMapEntry(bt bsontype.Type, rt reflect.Type) *RegistryBuilder {\n \trb.typeMap[bt] = rt"
    },
    {
      "sha": "62708c5c745e102cfdd06f9a06777168eb9cc8f6",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/bsoncodec/struct_tag_parser.go",
      "status": "modified",
      "additions": 21,
      "deletions": 21,
      "changes": 42,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fstruct_tag_parser.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fstruct_tag_parser.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fbsoncodec%2Fstruct_tag_parser.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -34,21 +34,21 @@ func (stpf StructTagParserFunc) ParseStructTags(sf reflect.StructField) (StructT\n //\n // The properties are defined below:\n //\n-//     OmitEmpty  Only include the field if it's not set to the zero value for the type or to\n-//                empty slices or maps.\n+//\tOmitEmpty  Only include the field if it's not set to the zero value for the type or to\n+//\t           empty slices or maps.\n //\n-//     MinSize    Marshal an integer of a type larger than 32 bits value as an int32, if that's\n-//                feasible while preserving the numeric value.\n+//\tMinSize    Marshal an integer of a type larger than 32 bits value as an int32, if that's\n+//\t           feasible while preserving the numeric value.\n //\n-//     Truncate   When unmarshaling a BSON double, it is permitted to lose precision to fit within\n-//                a float32.\n+//\tTruncate   When unmarshaling a BSON double, it is permitted to lose precision to fit within\n+//\t           a float32.\n //\n-//     Inline     Inline the field, which must be a struct or a map, causing all of its fields\n-//                or keys to be processed as if they were part of the outer struct. For maps,\n-//                keys must not conflict with the bson keys of other struct fields.\n+//\tInline     Inline the field, which must be a struct or a map, causing all of its fields\n+//\t           or keys to be processed as if they were part of the outer struct. For maps,\n+//\t           keys must not conflict with the bson keys of other struct fields.\n //\n-//     Skip       This struct field should be skipped. This is usually denoted by parsing a \"-\"\n-//                for the name.\n+//\tSkip       This struct field should be skipped. This is usually denoted by parsing a \"-\"\n+//\t           for the name.\n //\n // TODO(skriptble): Add tags for undefined as nil and for null as nil.\n type StructTags struct {\n@@ -67,20 +67,20 @@ type StructTags struct {\n // If there is no name in the struct tag fields, the struct field name is lowercased.\n // The tag formats accepted are:\n //\n-//     \"[<key>][,<flag1>[,<flag2>]]\"\n+//\t\"[<key>][,<flag1>[,<flag2>]]\"\n //\n-//     `(...) bson:\"[<key>][,<flag1>[,<flag2>]]\" (...)`\n+//\t`(...) bson:\"[<key>][,<flag1>[,<flag2>]]\" (...)`\n //\n // An example:\n //\n-//     type T struct {\n-//         A bool\n-//         B int    \"myb\"\n-//         C string \"myc,omitempty\"\n-//         D string `bson:\",omitempty\" json:\"jsonkey\"`\n-//         E int64  \",minsize\"\n-//         F int64  \"myf,omitempty,minsize\"\n-//     }\n+//\ttype T struct {\n+//\t    A bool\n+//\t    B int    \"myb\"\n+//\t    C string \"myc,omitempty\"\n+//\t    D string `bson:\",omitempty\" json:\"jsonkey\"`\n+//\t    E int64  \",minsize\"\n+//\t    F int64  \"myf,omitempty,minsize\"\n+//\t}\n //\n // A struct tag either consisting entirely of '-' or with a bson key with a\n // value consisting entirely of '-' will return a StructTags with Skip true and"
    },
    {
      "sha": "0134006d8eaf34d080608b53f591f9b8ef03b372",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/doc.go",
      "status": "modified",
      "additions": 56,
      "deletions": 53,
      "changes": 109,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fdoc.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -9,21 +9,22 @@\n // The BSON library handles marshalling and unmarshalling of values through a configurable codec system. For a description\n // of the codec system and examples of registering custom codecs, see the bsoncodec package.\n //\n-// Raw BSON\n+// # Raw BSON\n //\n // The Raw family of types is used to validate and retrieve elements from a slice of bytes. This\n // type is most useful when you want do lookups on BSON bytes without unmarshaling it into another\n // type.\n //\n // Example:\n-// \t\tvar raw bson.Raw = ... // bytes from somewhere\n-// \t\terr := raw.Validate()\n-// \t\tif err != nil { return err }\n-// \t\tval := raw.Lookup(\"foo\")\n-// \t\ti32, ok := val.Int32OK()\n-// \t\t// do something with i32...\n //\n-// Native Go Types\n+//\tvar raw bson.Raw = ... // bytes from somewhere\n+//\terr := raw.Validate()\n+//\tif err != nil { return err }\n+//\tval := raw.Lookup(\"foo\")\n+//\ti32, ok := val.Int32OK()\n+//\t// do something with i32...\n+//\n+// # Native Go Types\n //\n // The D and M types defined in this package can be used to build representations of BSON using native Go types. D is a\n // slice and M is a map. For more information about the use cases for these types, see the documentation on the type\n@@ -32,63 +33,64 @@\n // Note that a D should not be constructed with duplicate key names, as that can cause undefined server behavior.\n //\n // Example:\n-// \t\tbson.D{{\"foo\", \"bar\"}, {\"hello\", \"world\"}, {\"pi\", 3.14159}}\n-//\t\tbson.M{\"foo\": \"bar\", \"hello\": \"world\", \"pi\": 3.14159}\n+//\n+//\tbson.D{{\"foo\", \"bar\"}, {\"hello\", \"world\"}, {\"pi\", 3.14159}}\n+//\tbson.M{\"foo\": \"bar\", \"hello\": \"world\", \"pi\": 3.14159}\n //\n // When decoding BSON to a D or M, the following type mappings apply when unmarshalling:\n //\n-// \t\t1. BSON int32 unmarshals to an int32.\n-// \t\t2. BSON int64 unmarshals to an int64.\n-// \t\t3. BSON double unmarshals to a float64.\n-// \t\t4. BSON string unmarshals to a string.\n-// \t\t5. BSON boolean unmarshals to a bool.\n-// \t\t6. BSON embedded document unmarshals to the parent type (i.e. D for a D, M for an M).\n-// \t\t7. BSON array unmarshals to a bson.A.\n-// \t\t8. BSON ObjectId unmarshals to a primitive.ObjectID.\n-// \t\t9. BSON datetime unmarshals to a primitive.DateTime.\n-// \t\t10. BSON binary unmarshals to a primitive.Binary.\n-// \t\t11. BSON regular expression unmarshals to a primitive.Regex.\n-// \t\t12. BSON JavaScript unmarshals to a primitive.JavaScript.\n-// \t\t13. BSON code with scope unmarshals to a primitive.CodeWithScope.\n-// \t\t14. BSON timestamp unmarshals to an primitive.Timestamp.\n-// \t\t15. BSON 128-bit decimal unmarshals to an primitive.Decimal128.\n-// \t\t16. BSON min key unmarshals to an primitive.MinKey.\n-// \t\t17. BSON max key unmarshals to an primitive.MaxKey.\n-// \t\t18. BSON undefined unmarshals to a primitive.Undefined.\n-// \t\t19. BSON null unmarshals to nil.\n-// \t\t20. BSON DBPointer unmarshals to a primitive.DBPointer.\n-// \t\t21. BSON symbol unmarshals to a primitive.Symbol.\n+//  1. BSON int32 unmarshals to an int32.\n+//  2. BSON int64 unmarshals to an int64.\n+//  3. BSON double unmarshals to a float64.\n+//  4. BSON string unmarshals to a string.\n+//  5. BSON boolean unmarshals to a bool.\n+//  6. BSON embedded document unmarshals to the parent type (i.e. D for a D, M for an M).\n+//  7. BSON array unmarshals to a bson.A.\n+//  8. BSON ObjectId unmarshals to a primitive.ObjectID.\n+//  9. BSON datetime unmarshals to a primitive.DateTime.\n+//  10. BSON binary unmarshals to a primitive.Binary.\n+//  11. BSON regular expression unmarshals to a primitive.Regex.\n+//  12. BSON JavaScript unmarshals to a primitive.JavaScript.\n+//  13. BSON code with scope unmarshals to a primitive.CodeWithScope.\n+//  14. BSON timestamp unmarshals to an primitive.Timestamp.\n+//  15. BSON 128-bit decimal unmarshals to an primitive.Decimal128.\n+//  16. BSON min key unmarshals to an primitive.MinKey.\n+//  17. BSON max key unmarshals to an primitive.MaxKey.\n+//  18. BSON undefined unmarshals to a primitive.Undefined.\n+//  19. BSON null unmarshals to nil.\n+//  20. BSON DBPointer unmarshals to a primitive.DBPointer.\n+//  21. BSON symbol unmarshals to a primitive.Symbol.\n //\n // The above mappings also apply when marshalling a D or M to BSON. Some other useful marshalling mappings are:\n //\n-//       1. time.Time marshals to a BSON datetime.\n-//       2. int8, int16, and int32 marshal to a BSON int32.\n-//       3. int marshals to a BSON int32 if the value is between math.MinInt32 and math.MaxInt32, inclusive, and a BSON int64\n-//       otherwise.\n-//       4. int64 marshals to BSON int64.\n-//       5. uint8 and uint16 marshal to a BSON int32.\n-//       6. uint, uint32, and uint64 marshal to a BSON int32 if the value is between math.MinInt32 and math.MaxInt32,\n-//       inclusive, and BSON int64 otherwise.\n-//       7. BSON null and undefined values will unmarshal into the zero value of a field (e.g. unmarshalling a BSON null or\n-//       undefined value into a string will yield the empty string.).\n+//  1. time.Time marshals to a BSON datetime.\n+//  2. int8, int16, and int32 marshal to a BSON int32.\n+//  3. int marshals to a BSON int32 if the value is between math.MinInt32 and math.MaxInt32, inclusive, and a BSON int64\n+//     otherwise.\n+//  4. int64 marshals to BSON int64.\n+//  5. uint8 and uint16 marshal to a BSON int32.\n+//  6. uint, uint32, and uint64 marshal to a BSON int32 if the value is between math.MinInt32 and math.MaxInt32,\n+//     inclusive, and BSON int64 otherwise.\n+//  7. BSON null and undefined values will unmarshal into the zero value of a field (e.g. unmarshalling a BSON null or\n+//     undefined value into a string will yield the empty string.).\n //\n-// Structs\n+// # Structs\n //\n // Structs can be marshalled/unmarshalled to/from BSON or Extended JSON. When transforming structs to/from BSON or Extended\n // JSON, the following rules apply:\n //\n-//     1. Only exported fields in structs will be marshalled or unmarshalled.\n+//  1. Only exported fields in structs will be marshalled or unmarshalled.\n //\n-//     2. When marshalling a struct, each field will be lowercased to generate the key for the corresponding BSON element.\n+//  2. When marshalling a struct, each field will be lowercased to generate the key for the corresponding BSON element.\n //     For example, a struct field named \"Foo\" will generate key \"foo\". This can be overridden via a struct tag (e.g.\n //     `bson:\"fooField\"` to generate key \"fooField\" instead).\n //\n-//     3. An embedded struct field is marshalled as a subdocument. The key will be the lowercased name of the field's type.\n+//  3. An embedded struct field is marshalled as a subdocument. The key will be the lowercased name of the field's type.\n //\n-//     4. A pointer field is marshalled as the underlying type if the pointer is non-nil. If the pointer is nil, it is\n+//  4. A pointer field is marshalled as the underlying type if the pointer is non-nil. If the pointer is nil, it is\n //     marshalled as a BSON null value.\n //\n-//     5. When unmarshalling, a field of type interface{} will follow the D/M type mappings listed above. BSON documents\n+//  5. When unmarshalling, a field of type interface{} will follow the D/M type mappings listed above. BSON documents\n //     unmarshalled into an interface{} field will be unmarshalled as a D.\n //\n // The encoding of each struct field can be customized by the \"bson\" struct tag.\n@@ -98,13 +100,14 @@\n // are not honored, but that can be enabled by creating a StructCodec with JSONFallbackStructTagParser, like below:\n //\n // Example:\n-//      structcodec, _ := bsoncodec.NewStructCodec(bsoncodec.JSONFallbackStructTagParser)\n+//\n+//\tstructcodec, _ := bsoncodec.NewStructCodec(bsoncodec.JSONFallbackStructTagParser)\n //\n // The bson tag gives the name of the field, possibly followed by a comma-separated list of options.\n // The name may be empty in order to specify options without overriding the default field name. The following options can be used\n // to configure behavior:\n //\n-//     1. omitempty: If the omitempty struct tag is specified on a field, the field will not be marshalled if it is set to\n+//  1. omitempty: If the omitempty struct tag is specified on a field, the field will not be marshalled if it is set to\n //     the zero value. Fields with language primitive types such as integers, booleans, and strings are considered empty if\n //     their value is equal to the zero value for the type (i.e. 0 for integers, false for booleans, and \"\" for strings).\n //     Slices, maps, and arrays are considered empty if they are of length zero. Interfaces and pointers are considered\n@@ -113,16 +116,16 @@\n //     never considered empty and will be marshalled as embedded documents.\n //     NOTE: It is recommended that this tag be used for all slice and map fields.\n //\n-//     2. minsize: If the minsize struct tag is specified on a field of type int64, uint, uint32, or uint64 and the value of\n+//  2. minsize: If the minsize struct tag is specified on a field of type int64, uint, uint32, or uint64 and the value of\n //     the field can fit in a signed int32, the field will be serialized as a BSON int32 rather than a BSON int64. For other\n //     types, this tag is ignored.\n //\n-//     3. truncate: If the truncate struct tag is specified on a field with a non-float numeric type, BSON doubles unmarshalled\n+//  3. truncate: If the truncate struct tag is specified on a field with a non-float numeric type, BSON doubles unmarshalled\n //     into that field will be truncated at the decimal point. For example, if 3.14 is unmarshalled into a field of type int,\n //     it will be unmarshalled as 3. If this tag is not specified, the decoder will throw an error if the value cannot be\n //     decoded without losing precision. For float64 or non-numeric types, this tag is ignored.\n //\n-//     4. inline: If the inline struct tag is specified for a struct or map field, the field will be \"flattened\" when\n+//  4. inline: If the inline struct tag is specified for a struct or map field, the field will be \"flattened\" when\n //     marshalling and \"un-flattened\" when unmarshalling. This means that all of the fields in that struct/map will be\n //     pulled up one level and will become top-level fields rather than being fields in a nested document. For example, if a\n //     map field named \"Map\" with value map[string]interface{}{\"foo\": \"bar\"} is inlined, the resulting document will be\n@@ -132,7 +135,7 @@\n //     This tag can be used with fields that are pointers to structs. If an inlined pointer field is nil, it will not be\n //     marshalled. For fields that are not maps or structs, this tag is ignored.\n //\n-// Marshalling and Unmarshalling\n+// # Marshalling and Unmarshalling\n //\n // Manually marshalling and unmarshalling can be done with the Marshal and Unmarshal family of functions.\n package bson"
    },
    {
      "sha": "ba7c9112e9b26fb2e0fd9f5ae4c0f859ac5511cc",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/primitive/decimal.go",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fprimitive%2Fdecimal.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fprimitive%2Fdecimal.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fprimitive%2Fdecimal.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -191,10 +191,9 @@ func (d Decimal128) IsNaN() bool {\n \n // IsInf returns:\n //\n-//   +1 d == Infinity\n-//    0 other case\n-//   -1 d == -Infinity\n-//\n+//\t+1 d == Infinity\n+//\t 0 other case\n+//\t-1 d == -Infinity\n func (d Decimal128) IsInf() int {\n \tif d.h>>58&(1<<5-1) != 0x1E {\n \t\treturn 0"
    },
    {
      "sha": "ded3673165d2ca0449ad78eb8508ce9201a3690f",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/primitive/objectid.go",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fprimitive%2Fobjectid.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fprimitive%2Fobjectid.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fprimitive%2Fobjectid.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -61,7 +61,9 @@ func (id ObjectID) Timestamp() time.Time {\n \n // Hex returns the hex encoding of the ObjectID as a string.\n func (id ObjectID) Hex() string {\n-\treturn hex.EncodeToString(id[:])\n+\tvar buf [24]byte\n+\thex.Encode(buf[:], id[:])\n+\treturn string(buf[:])\n }\n \n func (id ObjectID) String() string {"
    },
    {
      "sha": "c72ccc1c4d491cacf6105beb27126a9057948e66",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/bson/primitive/primitive.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fprimitive%2Fprimitive.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fprimitive%2Fprimitive.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fbson%2Fprimitive%2Fprimitive.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -182,7 +182,7 @@ type MaxKey struct{}\n //\n // Example usage:\n //\n-// \t\tbson.D{{\"foo\", \"bar\"}, {\"hello\", \"world\"}, {\"pi\", 3.14159}}\n+//\tbson.D{{\"foo\", \"bar\"}, {\"hello\", \"world\"}, {\"pi\", 3.14159}}\n type D []E\n \n // Map creates a map from the elements of the D.\n@@ -206,12 +206,12 @@ type E struct {\n //\n // Example usage:\n //\n-// \t\tbson.M{\"foo\": \"bar\", \"hello\": \"world\", \"pi\": 3.14159}\n+//\tbson.M{\"foo\": \"bar\", \"hello\": \"world\", \"pi\": 3.14159}\n type M map[string]interface{}\n \n // An A is an ordered representation of a BSON array.\n //\n // Example usage:\n //\n-// \t\tbson.A{\"bar\", \"world\", 3.14159, bson.D{{\"qux\", 12345}}}\n+//\tbson.A{\"bar\", \"world\", 3.14159, bson.D{{\"qux\", 12345}}}\n type A []interface{}"
    },
    {
      "sha": "da1da4d47fa14d0f1344bc15f4b0ecab77fe5ddf",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/event/doc.go",
      "status": "modified",
      "additions": 29,
      "deletions": 29,
      "changes": 58,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fevent%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fevent%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fevent%2Fdoc.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -14,43 +14,43 @@\n // CommandSucceededEvent or CommandFailedEvent through the RequestID field. For\n // example, the following code collects the names of started events:\n //\n-//    var commandStarted []string\n-//    cmdMonitor := &event.CommandMonitor{\n-//      Started: func(_ context.Context, evt *event.CommandStartedEvent) {\n-//        commandStarted = append(commandStarted, evt.CommandName)\n-//      },\n-//    }\n-//    clientOpts := options.Client().ApplyURI(\"mongodb://localhost:27017\").SetMonitor(cmdMonitor)\n-//    client, err := mongo.Connect(context.Background(), clientOpts)\n+//\tvar commandStarted []string\n+//\tcmdMonitor := &event.CommandMonitor{\n+//\t  Started: func(_ context.Context, evt *event.CommandStartedEvent) {\n+//\t    commandStarted = append(commandStarted, evt.CommandName)\n+//\t  },\n+//\t}\n+//\tclientOpts := options.Client().ApplyURI(\"mongodb://localhost:27017\").SetMonitor(cmdMonitor)\n+//\tclient, err := mongo.Connect(context.Background(), clientOpts)\n //\n // Monitoring the connection pool requires specifying a PoolMonitor when constructing\n // a mongo.Client. The following code tracks the number of checked out connections:\n //\n-//    var int connsCheckedOut\n-//    poolMonitor := &event.PoolMonitor{\n-//      Event: func(evt *event.PoolEvent) {\n-//        switch evt.Type {\n-//        case event.GetSucceeded:\n-//          connsCheckedOut++\n-//        case event.ConnectionReturned:\n-//          connsCheckedOut--\n-//        }\n-//      },\n-//    }\n-//    clientOpts := options.Client().ApplyURI(\"mongodb://localhost:27017\").SetPoolMonitor(poolMonitor)\n-//    client, err := mongo.Connect(context.Background(), clientOpts)\n+//\tvar int connsCheckedOut\n+//\tpoolMonitor := &event.PoolMonitor{\n+//\t  Event: func(evt *event.PoolEvent) {\n+//\t    switch evt.Type {\n+//\t    case event.GetSucceeded:\n+//\t      connsCheckedOut++\n+//\t    case event.ConnectionReturned:\n+//\t      connsCheckedOut--\n+//\t    }\n+//\t  },\n+//\t}\n+//\tclientOpts := options.Client().ApplyURI(\"mongodb://localhost:27017\").SetPoolMonitor(poolMonitor)\n+//\tclient, err := mongo.Connect(context.Background(), clientOpts)\n //\n // Monitoring server changes specifying a ServerMonitor object when constructing\n // a mongo.Client. Different functions can be set on the ServerMonitor to\n // monitor different kinds of events. See ServerMonitor for more details.\n // The following code appends ServerHeartbeatStartedEvents to a slice:\n //\n-//    var heartbeatStarted []*event.ServerHeartbeatStartedEvent\n-//    svrMonitor := &event.ServerMonitor{\n-//      ServerHeartbeatStarted: func(e *event.ServerHeartbeatStartedEvent) {\n-//\t      heartbeatStarted = append(heartbeatStarted, e)\n-//      }\n-//    }\n-//    clientOpts := options.Client().ApplyURI(\"mongodb://localhost:27017\").SetServerMonitor(svrMonitor)\n-//    client, err := mongo.Connect(context.Background(), clientOpts)\n+//\t   var heartbeatStarted []*event.ServerHeartbeatStartedEvent\n+//\t   svrMonitor := &event.ServerMonitor{\n+//\t     ServerHeartbeatStarted: func(e *event.ServerHeartbeatStartedEvent) {\n+//\t\t      heartbeatStarted = append(heartbeatStarted, e)\n+//\t     }\n+//\t   }\n+//\t   clientOpts := options.Client().ApplyURI(\"mongodb://localhost:27017\").SetServerMonitor(svrMonitor)\n+//\t   client, err := mongo.Connect(context.Background(), clientOpts)\n package event"
    },
    {
      "sha": "1e63257b30ad4769c42d8a5941f6ba1e4390d55b",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/internal/csot_util.go",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Fcsot_util.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Fcsot_util.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Fcsot_util.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -32,3 +32,27 @@ func MakeTimeoutContext(ctx context.Context, to time.Duration) (context.Context,\n func IsTimeoutContext(ctx context.Context) bool {\n \treturn ctx.Value(timeoutKey{}) != nil\n }\n+\n+// ZeroRTTMonitor implements the RTTMonitor interface and is used internally for testing. It returns 0 for all\n+// RTT calculations and an empty string for RTT statistics.\n+type ZeroRTTMonitor struct{}\n+\n+// EWMA implements the RTT monitor interface.\n+func (zrm *ZeroRTTMonitor) EWMA() time.Duration {\n+\treturn 0\n+}\n+\n+// Min implements the RTT monitor interface.\n+func (zrm *ZeroRTTMonitor) Min() time.Duration {\n+\treturn 0\n+}\n+\n+// P90 implements the RTT monitor interface.\n+func (zrm *ZeroRTTMonitor) P90() time.Duration {\n+\treturn 0\n+}\n+\n+// Stats implements the RTT monitor interface.\n+func (zrm *ZeroRTTMonitor) Stats() string {\n+\treturn \"\"\n+}"
    },
    {
      "sha": "348bcdfb1ad0609772aeeac7bdce529d5851fb1c",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/internal/error.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Ferror.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Ferror.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Ferror.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -32,7 +32,7 @@ func RolledUpErrorMessage(err error) string {\n \treturn err.Error()\n }\n \n-//UnwrapError attempts to unwrap the error down to its root cause.\n+// UnwrapError attempts to unwrap the error down to its root cause.\n func UnwrapError(err error) error {\n \n \tswitch tErr := err.(type) {"
    },
    {
      "sha": "13c5fbe9cbe5baa9c340f165feda5364610e0074",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/internal/http.go",
      "status": "added",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Fhttp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Fhttp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Finternal%2Fhttp.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,38 @@\n+// Copyright (C) MongoDB, Inc. 2022-present.\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n+// not use this file except in compliance with the License. You may obtain\n+// a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n+\n+package internal // import \"go.mongodb.org/mongo-driver/internal\"\n+\n+import (\n+\t\"net/http\"\n+\t\"time\"\n+)\n+\n+// DefaultHTTPClient is the default HTTP client used across the driver.\n+var DefaultHTTPClient = &http.Client{\n+\t// TODO(GODRIVER-2623): Use \"http.DefaultTransport.Clone\" once we change the minimum supported Go version to 1.13.\n+\tTransport: &http.Transport{\n+\t\tProxy:                 http.ProxyFromEnvironment,\n+\t\tMaxIdleConns:          100,\n+\t\tIdleConnTimeout:       90 * time.Second,\n+\t\tTLSHandshakeTimeout:   10 * time.Second,\n+\t\tExpectContinueTimeout: 1 * time.Second,\n+\t},\n+}\n+\n+// CloseIdleHTTPConnections closes any connections which were previously\n+// connected from previous requests but are now sitting idle in\n+// a \"keep-alive\" state. It does not interrupt any connections currently\n+// in use.\n+// Borrowed from go standard library.\n+func CloseIdleHTTPConnections(client *http.Client) {\n+\ttype closeIdler interface {\n+\t\tCloseIdleConnections()\n+\t}\n+\tif tr, ok := client.Transport.(closeIdler); ok {\n+\t\ttr.CloseIdleConnections()\n+\t}\n+}"
    },
    {
      "sha": "82d2b579982c76a3dd4d31c5c3651ca24fa2bb53",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/change_stream.go",
      "status": "modified",
      "additions": 37,
      "deletions": 27,
      "changes": 64,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fchange_stream.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fchange_stream.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fchange_stream.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -240,7 +240,6 @@ func (cs *ChangeStream) createOperationDeployment(server driver.Server, connecti\n func (cs *ChangeStream) executeOperation(ctx context.Context, resuming bool) error {\n \tvar server driver.Server\n \tvar conn driver.Connection\n-\tvar err error\n \n \tif server, cs.err = cs.client.deployment.SelectServer(ctx, cs.selector); cs.err != nil {\n \t\treturn cs.Err()\n@@ -284,48 +283,62 @@ func (cs *ChangeStream) executeOperation(ctx context.Context, resuming bool) err\n \t\t// Cancel the timeout-derived context at the end of executeOperation to avoid a context leak.\n \t\tdefer cancelFunc()\n \t}\n-\tif original := cs.aggregate.Execute(ctx); original != nil {\n-\t\tretryableRead := cs.client.retryReads && cs.wireVersion != nil && cs.wireVersion.Max >= 6\n-\t\tif !retryableRead {\n-\t\t\tcs.err = replaceErrors(original)\n-\t\t\treturn cs.err\n+\n+\t// Execute the aggregate, retrying on retryable errors once (1) if retryable reads are enabled and\n+\t// infinitely (-1) if context is a Timeout context.\n+\tvar retries int\n+\tif cs.client.retryReads {\n+\t\tretries = 1\n+\t}\n+\tif internal.IsTimeoutContext(ctx) {\n+\t\tretries = -1\n+\t}\n+\n+\tvar err error\n+AggregateExecuteLoop:\n+\tfor {\n+\t\terr = cs.aggregate.Execute(ctx)\n+\t\t// If no error or no retries remain, do not retry.\n+\t\tif err == nil || retries == 0 {\n+\t\t\tbreak AggregateExecuteLoop\n \t\t}\n \n-\t\tcs.err = original\n-\t\tswitch tt := original.(type) {\n+\t\tswitch tt := err.(type) {\n \t\tcase driver.Error:\n+\t\t\t// If error is not retryable, do not retry.\n \t\t\tif !tt.RetryableRead() {\n-\t\t\t\tbreak\n+\t\t\t\tbreak AggregateExecuteLoop\n \t\t\t}\n \n+\t\t\t// If error is retryable: subtract 1 from retries, redo server selection, checkout\n+\t\t\t// a connection, and restart loop.\n+\t\t\tretries--\n \t\t\tserver, err = cs.client.deployment.SelectServer(ctx, cs.selector)\n \t\t\tif err != nil {\n-\t\t\t\tbreak\n+\t\t\t\tbreak AggregateExecuteLoop\n \t\t\t}\n \n \t\t\tconn.Close()\n \t\t\tconn, err = server.Connection(ctx)\n \t\t\tif err != nil {\n-\t\t\t\tbreak\n+\t\t\t\tbreak AggregateExecuteLoop\n \t\t\t}\n \t\t\tdefer conn.Close()\n-\t\t\tcs.wireVersion = conn.Description().WireVersion\n \n-\t\t\tif cs.wireVersion == nil || cs.wireVersion.Max < 6 {\n-\t\t\t\tbreak\n-\t\t\t}\n+\t\t\t// Update the wire version with data from the new connection.\n+\t\t\tcs.wireVersion = conn.Description().WireVersion\n \n+\t\t\t// Reset deployment.\n \t\t\tcs.aggregate.Deployment(cs.createOperationDeployment(server, conn))\n-\t\t\tcs.err = cs.aggregate.Execute(ctx)\n-\t\t}\n-\n-\t\tif cs.err != nil {\n-\t\t\tcs.err = replaceErrors(cs.err)\n-\t\t\treturn cs.Err()\n+\t\tdefault:\n+\t\t\t// Do not retry if error is not a driver error.\n+\t\t\tbreak AggregateExecuteLoop\n \t\t}\n-\n \t}\n-\tcs.err = nil\n+\tif err != nil {\n+\t\tcs.err = replaceErrors(err)\n+\t\treturn cs.err\n+\t}\n \n \tcr := cs.aggregate.ResultCursorResponse()\n \tcr.Server = server\n@@ -419,10 +432,7 @@ func (cs *ChangeStream) createPipelineOptionsDoc() (bsoncore.Document, error) {\n \t}\n \n \tif cs.options.FullDocument != nil {\n-\t\t// Only append a default \"fullDocument\" field if wire version is less than 6 (3.6). Otherwise,\n-\t\t// the server will assume users want the default behavior, and \"fullDocument\" does not need to be\n-\t\t// specified.\n-\t\tif *cs.options.FullDocument != options.Default || (cs.wireVersion != nil && cs.wireVersion.Max < 6) {\n+\t\tif *cs.options.FullDocument != options.Default {\n \t\t\tplDoc = bsoncore.AppendStringElement(plDoc, \"fullDocument\", string(*cs.options.FullDocument))\n \t\t}\n \t}"
    },
    {
      "sha": "4dca59f91c423bf013e21382f9f115e88dfd6685",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/change_stream_deployment.go",
      "status": "modified",
      "additions": 2,
      "deletions": 7,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fchange_stream_deployment.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fchange_stream_deployment.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fchange_stream_deployment.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -8,7 +8,6 @@ package mongo\n \n import (\n \t\"context\"\n-\t\"time\"\n \n \t\"go.mongodb.org/mongo-driver/mongo/description\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver\"\n@@ -36,12 +35,8 @@ func (c *changeStreamDeployment) Connection(context.Context) (driver.Connection,\n \treturn c.conn, nil\n }\n \n-func (c *changeStreamDeployment) MinRTT() time.Duration {\n-\treturn c.server.MinRTT()\n-}\n-\n-func (c *changeStreamDeployment) RTT90() time.Duration {\n-\treturn c.server.RTT90()\n+func (c *changeStreamDeployment) RTTMonitor() driver.RTTMonitor {\n+\treturn c.server.RTTMonitor()\n }\n \n func (c *changeStreamDeployment) ProcessError(err error, conn driver.Connection) driver.ProcessErrorResult {"
    },
    {
      "sha": "d80fd1d55e7b142d951aabfeba09cf519f8de5b8",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/client.go",
      "status": "modified",
      "additions": 108,
      "deletions": 397,
      "changes": 505,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fclient.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fclient.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fclient.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -8,15 +8,15 @@ package mongo\n \n import (\n \t\"context\"\n-\t\"crypto/tls\"\n \t\"errors\"\n \t\"fmt\"\n-\t\"strings\"\n+\t\"net/http\"\n \t\"time\"\n \n \t\"go.mongodb.org/mongo-driver/bson\"\n \t\"go.mongodb.org/mongo-driver/bson/bsoncodec\"\n \t\"go.mongodb.org/mongo-driver/event\"\n+\t\"go.mongodb.org/mongo-driver/internal\"\n \t\"go.mongodb.org/mongo-driver/internal/uuid\"\n \t\"go.mongodb.org/mongo-driver/mongo/description\"\n \t\"go.mongodb.org/mongo-driver/mongo/options\"\n@@ -25,18 +25,16 @@ import (\n \t\"go.mongodb.org/mongo-driver/mongo/writeconcern\"\n \t\"go.mongodb.org/mongo-driver/x/bsonx/bsoncore\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver\"\n-\t\"go.mongodb.org/mongo-driver/x/mongo/driver/auth\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver/mongocrypt\"\n \tmcopts \"go.mongodb.org/mongo-driver/x/mongo/driver/mongocrypt/options\"\n-\t\"go.mongodb.org/mongo-driver/x/mongo/driver/ocsp\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver/operation\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver/session\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver/topology\"\n )\n \n const (\n-\tdefaultLocalThreshold        = 15 * time.Millisecond\n-\tdefaultMaxPoolSize    uint64 = 100\n+\tdefaultLocalThreshold = 15 * time.Millisecond\n+\tdefaultMaxPoolSize    = 100\n )\n \n var (\n@@ -53,22 +51,22 @@ var (\n // The Client type opens and closes connections automatically and maintains a pool of idle connections. For\n // connection pool configuration options, see documentation for the ClientOptions type in the mongo/options package.\n type Client struct {\n-\tid              uuid.UUID\n-\ttopologyOptions []topology.Option\n-\tdeployment      driver.Deployment\n-\tlocalThreshold  time.Duration\n-\tretryWrites     bool\n-\tretryReads      bool\n-\tclock           *session.ClusterClock\n-\treadPreference  *readpref.ReadPref\n-\treadConcern     *readconcern.ReadConcern\n-\twriteConcern    *writeconcern.WriteConcern\n-\tregistry        *bsoncodec.Registry\n-\tmonitor         *event.CommandMonitor\n-\tserverAPI       *driver.ServerAPIOptions\n-\tserverMonitor   *event.ServerMonitor\n-\tsessionPool     *session.Pool\n-\ttimeout         *time.Duration\n+\tid             uuid.UUID\n+\tdeployment     driver.Deployment\n+\tlocalThreshold time.Duration\n+\tretryWrites    bool\n+\tretryReads     bool\n+\tclock          *session.ClusterClock\n+\treadPreference *readpref.ReadPref\n+\treadConcern    *readconcern.ReadConcern\n+\twriteConcern   *writeconcern.WriteConcern\n+\tregistry       *bsoncodec.Registry\n+\tmonitor        *event.CommandMonitor\n+\tserverAPI      *driver.ServerAPIOptions\n+\tserverMonitor  *event.ServerMonitor\n+\tsessionPool    *session.Pool\n+\ttimeout        *time.Duration\n+\thttpClient     *http.Client\n \n \t// client-side encryption fields\n \tkeyVaultClientFLE  *Client\n@@ -136,13 +134,84 @@ func NewClient(opts ...*options.ClientOptions) (*Client, error) {\n \t}\n \tclient := &Client{id: id}\n \n-\terr = client.configure(clientOpt)\n+\t// ClusterClock\n+\tclient.clock = new(session.ClusterClock)\n+\n+\t// LocalThreshold\n+\tclient.localThreshold = defaultLocalThreshold\n+\tif clientOpt.LocalThreshold != nil {\n+\t\tclient.localThreshold = *clientOpt.LocalThreshold\n+\t}\n+\t// Monitor\n+\tif clientOpt.Monitor != nil {\n+\t\tclient.monitor = clientOpt.Monitor\n+\t}\n+\t// ServerMonitor\n+\tif clientOpt.ServerMonitor != nil {\n+\t\tclient.serverMonitor = clientOpt.ServerMonitor\n+\t}\n+\t// ReadConcern\n+\tclient.readConcern = readconcern.New()\n+\tif clientOpt.ReadConcern != nil {\n+\t\tclient.readConcern = clientOpt.ReadConcern\n+\t}\n+\t// ReadPreference\n+\tclient.readPreference = readpref.Primary()\n+\tif clientOpt.ReadPreference != nil {\n+\t\tclient.readPreference = clientOpt.ReadPreference\n+\t}\n+\t// Registry\n+\tclient.registry = bson.DefaultRegistry\n+\tif clientOpt.Registry != nil {\n+\t\tclient.registry = clientOpt.Registry\n+\t}\n+\t// RetryWrites\n+\tclient.retryWrites = true // retry writes on by default\n+\tif clientOpt.RetryWrites != nil {\n+\t\tclient.retryWrites = *clientOpt.RetryWrites\n+\t}\n+\tclient.retryReads = true\n+\tif clientOpt.RetryReads != nil {\n+\t\tclient.retryReads = *clientOpt.RetryReads\n+\t}\n+\t// Timeout\n+\tclient.timeout = clientOpt.Timeout\n+\tclient.httpClient = clientOpt.HTTPClient\n+\t// WriteConcern\n+\tif clientOpt.WriteConcern != nil {\n+\t\tclient.writeConcern = clientOpt.WriteConcern\n+\t}\n+\t// AutoEncryptionOptions\n+\tif clientOpt.AutoEncryptionOptions != nil {\n+\t\tif err := client.configureAutoEncryption(clientOpt); err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n+\t} else {\n+\t\tclient.cryptFLE = clientOpt.Crypt\n+\t}\n+\n+\t// Deployment\n+\tif clientOpt.Deployment != nil {\n+\t\tclient.deployment = clientOpt.Deployment\n+\t}\n+\n+\t// Set default options\n+\tif clientOpt.MaxPoolSize == nil {\n+\t\tclientOpt.SetMaxPoolSize(defaultMaxPoolSize)\n+\t}\n+\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tcfg, err := topology.NewConfig(clientOpt, client.clock)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n+\tclient.serverAPI = topology.ServerAPIFromServerOptions(cfg.ServerOpts)\n \n \tif client.deployment == nil {\n-\t\tclient.deployment, err = topology.New(client.topologyOptions...)\n+\t\tclient.deployment, err = topology.New(cfg)\n \t\tif err != nil {\n \t\t\treturn nil, replaceErrors(err)\n \t\t}\n@@ -212,6 +281,10 @@ func (c *Client) Disconnect(ctx context.Context) error {\n \t\tctx = context.Background()\n \t}\n \n+\tif c.httpClient == internal.DefaultHTTPClient {\n+\t\tdefer internal.CloseIdleHTTPConnections(c.httpClient)\n+\t}\n+\n \tc.endSessions(ctx)\n \tif c.mongocryptdFLE != nil {\n \t\tif err := c.mongocryptdFLE.disconnect(ctx); err != nil {\n@@ -242,6 +315,7 @@ func (c *Client) Disconnect(ctx context.Context) error {\n \tif disconnector, ok := c.deployment.(driver.Disconnector); ok {\n \t\treturn replaceErrors(disconnector.Disconnect(ctx))\n \t}\n+\n \treturn nil\n }\n \n@@ -357,366 +431,6 @@ func (c *Client) endSessions(ctx context.Context) {\n \t}\n }\n \n-func (c *Client) configure(opts *options.ClientOptions) error {\n-\tvar defaultOptions int\n-\t// Set default options\n-\tif opts.MaxPoolSize == nil {\n-\t\tdefaultOptions++\n-\t\topts.SetMaxPoolSize(defaultMaxPoolSize)\n-\t}\n-\tif err := opts.Validate(); err != nil {\n-\t\treturn err\n-\t}\n-\n-\tvar connOpts []topology.ConnectionOption\n-\tvar serverOpts []topology.ServerOption\n-\tvar topologyOpts []topology.Option\n-\n-\t// TODO(GODRIVER-814): Add tests for topology, server, and connection related options.\n-\n-\t// ServerAPIOptions need to be handled early as other client and server options below reference\n-\t// c.serverAPI and serverOpts.serverAPI.\n-\tif opts.ServerAPIOptions != nil {\n-\t\t// convert passed in options to driver form for client.\n-\t\tc.serverAPI = convertToDriverAPIOptions(opts.ServerAPIOptions)\n-\n-\t\tserverOpts = append(serverOpts, topology.WithServerAPI(func(*driver.ServerAPIOptions) *driver.ServerAPIOptions {\n-\t\t\treturn c.serverAPI\n-\t\t}))\n-\t}\n-\n-\t// ClusterClock\n-\tc.clock = new(session.ClusterClock)\n-\n-\t// Pass down URI, SRV service name, and SRV max hosts so topology can poll SRV records correctly.\n-\ttopologyOpts = append(topologyOpts,\n-\t\ttopology.WithURI(func(uri string) string { return opts.GetURI() }),\n-\t\ttopology.WithSRVServiceName(func(srvName string) string {\n-\t\t\tif opts.SRVServiceName != nil {\n-\t\t\t\treturn *opts.SRVServiceName\n-\t\t\t}\n-\t\t\treturn \"\"\n-\t\t}),\n-\t\ttopology.WithSRVMaxHosts(func(srvMaxHosts int) int {\n-\t\t\tif opts.SRVMaxHosts != nil {\n-\t\t\t\treturn *opts.SRVMaxHosts\n-\t\t\t}\n-\t\t\treturn 0\n-\t\t}),\n-\t)\n-\n-\t// AppName\n-\tvar appName string\n-\tif opts.AppName != nil {\n-\t\tappName = *opts.AppName\n-\n-\t\tserverOpts = append(serverOpts, topology.WithServerAppName(func(string) string {\n-\t\t\treturn appName\n-\t\t}))\n-\t}\n-\t// Compressors & ZlibLevel\n-\tvar comps []string\n-\tif len(opts.Compressors) > 0 {\n-\t\tcomps = opts.Compressors\n-\n-\t\tconnOpts = append(connOpts, topology.WithCompressors(\n-\t\t\tfunc(compressors []string) []string {\n-\t\t\t\treturn append(compressors, comps...)\n-\t\t\t},\n-\t\t))\n-\n-\t\tfor _, comp := range comps {\n-\t\t\tswitch comp {\n-\t\t\tcase \"zlib\":\n-\t\t\t\tconnOpts = append(connOpts, topology.WithZlibLevel(func(level *int) *int {\n-\t\t\t\t\treturn opts.ZlibLevel\n-\t\t\t\t}))\n-\t\t\tcase \"zstd\":\n-\t\t\t\tconnOpts = append(connOpts, topology.WithZstdLevel(func(level *int) *int {\n-\t\t\t\t\treturn opts.ZstdLevel\n-\t\t\t\t}))\n-\t\t\t}\n-\t\t}\n-\n-\t\tserverOpts = append(serverOpts, topology.WithCompressionOptions(\n-\t\t\tfunc(opts ...string) []string { return append(opts, comps...) },\n-\t\t))\n-\t}\n-\n-\tvar loadBalanced bool\n-\tif opts.LoadBalanced != nil {\n-\t\tloadBalanced = *opts.LoadBalanced\n-\t}\n-\n-\t// Handshaker\n-\tvar handshaker = func(driver.Handshaker) driver.Handshaker {\n-\t\treturn operation.NewHello().AppName(appName).Compressors(comps).ClusterClock(c.clock).\n-\t\t\tServerAPI(c.serverAPI).LoadBalanced(loadBalanced)\n-\t}\n-\t// Auth & Database & Password & Username\n-\tif opts.Auth != nil {\n-\t\tcred := &auth.Cred{\n-\t\t\tUsername:    opts.Auth.Username,\n-\t\t\tPassword:    opts.Auth.Password,\n-\t\t\tPasswordSet: opts.Auth.PasswordSet,\n-\t\t\tProps:       opts.Auth.AuthMechanismProperties,\n-\t\t\tSource:      opts.Auth.AuthSource,\n-\t\t}\n-\t\tmechanism := opts.Auth.AuthMechanism\n-\n-\t\tif len(cred.Source) == 0 {\n-\t\t\tswitch strings.ToUpper(mechanism) {\n-\t\t\tcase auth.MongoDBX509, auth.GSSAPI, auth.PLAIN:\n-\t\t\t\tcred.Source = \"$external\"\n-\t\t\tdefault:\n-\t\t\t\tcred.Source = \"admin\"\n-\t\t\t}\n-\t\t}\n-\n-\t\tauthenticator, err := auth.CreateAuthenticator(mechanism, cred)\n-\t\tif err != nil {\n-\t\t\treturn err\n-\t\t}\n-\n-\t\thandshakeOpts := &auth.HandshakeOptions{\n-\t\t\tAppName:       appName,\n-\t\t\tAuthenticator: authenticator,\n-\t\t\tCompressors:   comps,\n-\t\t\tClusterClock:  c.clock,\n-\t\t\tServerAPI:     c.serverAPI,\n-\t\t\tLoadBalanced:  loadBalanced,\n-\t\t}\n-\t\tif mechanism == \"\" {\n-\t\t\t// Required for SASL mechanism negotiation during handshake\n-\t\t\thandshakeOpts.DBUser = cred.Source + \".\" + cred.Username\n-\t\t}\n-\t\tif opts.AuthenticateToAnything != nil && *opts.AuthenticateToAnything {\n-\t\t\t// Authenticate arbiters\n-\t\t\thandshakeOpts.PerformAuthentication = func(serv description.Server) bool {\n-\t\t\t\treturn true\n-\t\t\t}\n-\t\t}\n-\n-\t\thandshaker = func(driver.Handshaker) driver.Handshaker {\n-\t\t\treturn auth.Handshaker(nil, handshakeOpts)\n-\t\t}\n-\t}\n-\tconnOpts = append(connOpts, topology.WithHandshaker(handshaker))\n-\t// ConnectTimeout\n-\tif opts.ConnectTimeout != nil {\n-\t\tserverOpts = append(serverOpts, topology.WithHeartbeatTimeout(\n-\t\t\tfunc(time.Duration) time.Duration { return *opts.ConnectTimeout },\n-\t\t))\n-\t\tconnOpts = append(connOpts, topology.WithConnectTimeout(\n-\t\t\tfunc(time.Duration) time.Duration { return *opts.ConnectTimeout },\n-\t\t))\n-\t}\n-\t// Dialer\n-\tif opts.Dialer != nil {\n-\t\tconnOpts = append(connOpts, topology.WithDialer(\n-\t\t\tfunc(topology.Dialer) topology.Dialer { return opts.Dialer },\n-\t\t))\n-\t}\n-\t// Direct\n-\tif opts.Direct != nil && *opts.Direct {\n-\t\ttopologyOpts = append(topologyOpts, topology.WithMode(\n-\t\t\tfunc(topology.MonitorMode) topology.MonitorMode { return topology.SingleMode },\n-\t\t))\n-\t}\n-\t// HeartbeatInterval\n-\tif opts.HeartbeatInterval != nil {\n-\t\tserverOpts = append(serverOpts, topology.WithHeartbeatInterval(\n-\t\t\tfunc(time.Duration) time.Duration { return *opts.HeartbeatInterval },\n-\t\t))\n-\t}\n-\t// Hosts\n-\thosts := []string{\"localhost:27017\"} // default host\n-\tif len(opts.Hosts) > 0 {\n-\t\thosts = opts.Hosts\n-\t}\n-\ttopologyOpts = append(topologyOpts, topology.WithSeedList(\n-\t\tfunc(...string) []string { return hosts },\n-\t))\n-\t// LocalThreshold\n-\tc.localThreshold = defaultLocalThreshold\n-\tif opts.LocalThreshold != nil {\n-\t\tc.localThreshold = *opts.LocalThreshold\n-\t}\n-\t// MaxConIdleTime\n-\tif opts.MaxConnIdleTime != nil {\n-\t\tconnOpts = append(connOpts, topology.WithIdleTimeout(\n-\t\t\tfunc(time.Duration) time.Duration { return *opts.MaxConnIdleTime },\n-\t\t))\n-\t}\n-\t// MaxPoolSize\n-\tif opts.MaxPoolSize != nil {\n-\t\tserverOpts = append(\n-\t\t\tserverOpts,\n-\t\t\ttopology.WithMaxConnections(func(uint64) uint64 { return *opts.MaxPoolSize }),\n-\t\t)\n-\t}\n-\t// MinPoolSize\n-\tif opts.MinPoolSize != nil {\n-\t\tserverOpts = append(\n-\t\t\tserverOpts,\n-\t\t\ttopology.WithMinConnections(func(uint64) uint64 { return *opts.MinPoolSize }),\n-\t\t)\n-\t}\n-\t// MaxConnecting\n-\tif opts.MaxConnecting != nil {\n-\t\tserverOpts = append(\n-\t\t\tserverOpts,\n-\t\t\ttopology.WithMaxConnecting(func(uint64) uint64 { return *opts.MaxConnecting }),\n-\t\t)\n-\t}\n-\t// PoolMonitor\n-\tif opts.PoolMonitor != nil {\n-\t\tserverOpts = append(\n-\t\t\tserverOpts,\n-\t\t\ttopology.WithConnectionPoolMonitor(func(*event.PoolMonitor) *event.PoolMonitor { return opts.PoolMonitor }),\n-\t\t)\n-\t}\n-\t// Monitor\n-\tif opts.Monitor != nil {\n-\t\tc.monitor = opts.Monitor\n-\t\tconnOpts = append(connOpts, topology.WithMonitor(\n-\t\t\tfunc(*event.CommandMonitor) *event.CommandMonitor { return opts.Monitor },\n-\t\t))\n-\t}\n-\t// ServerMonitor\n-\tif opts.ServerMonitor != nil {\n-\t\tc.serverMonitor = opts.ServerMonitor\n-\t\tserverOpts = append(\n-\t\t\tserverOpts,\n-\t\t\ttopology.WithServerMonitor(func(*event.ServerMonitor) *event.ServerMonitor { return opts.ServerMonitor }),\n-\t\t)\n-\n-\t\ttopologyOpts = append(\n-\t\t\ttopologyOpts,\n-\t\t\ttopology.WithTopologyServerMonitor(func(*event.ServerMonitor) *event.ServerMonitor { return opts.ServerMonitor }),\n-\t\t)\n-\t}\n-\t// ReadConcern\n-\tc.readConcern = readconcern.New()\n-\tif opts.ReadConcern != nil {\n-\t\tc.readConcern = opts.ReadConcern\n-\t}\n-\t// ReadPreference\n-\tc.readPreference = readpref.Primary()\n-\tif opts.ReadPreference != nil {\n-\t\tc.readPreference = opts.ReadPreference\n-\t}\n-\t// Registry\n-\tc.registry = bson.DefaultRegistry\n-\tif opts.Registry != nil {\n-\t\tc.registry = opts.Registry\n-\t}\n-\t// ReplicaSet\n-\tif opts.ReplicaSet != nil {\n-\t\ttopologyOpts = append(topologyOpts, topology.WithReplicaSetName(\n-\t\t\tfunc(string) string { return *opts.ReplicaSet },\n-\t\t))\n-\t}\n-\t// RetryWrites\n-\tc.retryWrites = true // retry writes on by default\n-\tif opts.RetryWrites != nil {\n-\t\tc.retryWrites = *opts.RetryWrites\n-\t}\n-\tc.retryReads = true\n-\tif opts.RetryReads != nil {\n-\t\tc.retryReads = *opts.RetryReads\n-\t}\n-\t// ServerSelectionTimeout\n-\tif opts.ServerSelectionTimeout != nil {\n-\t\ttopologyOpts = append(topologyOpts, topology.WithServerSelectionTimeout(\n-\t\t\tfunc(time.Duration) time.Duration { return *opts.ServerSelectionTimeout },\n-\t\t))\n-\t}\n-\t// SocketTimeout\n-\tif opts.SocketTimeout != nil {\n-\t\tconnOpts = append(\n-\t\t\tconnOpts,\n-\t\t\ttopology.WithReadTimeout(func(time.Duration) time.Duration { return *opts.SocketTimeout }),\n-\t\t\ttopology.WithWriteTimeout(func(time.Duration) time.Duration { return *opts.SocketTimeout }),\n-\t\t)\n-\t}\n-\t// Timeout\n-\tc.timeout = opts.Timeout\n-\t// TLSConfig\n-\tif opts.TLSConfig != nil {\n-\t\tconnOpts = append(connOpts, topology.WithTLSConfig(\n-\t\t\tfunc(*tls.Config) *tls.Config {\n-\t\t\t\treturn opts.TLSConfig\n-\t\t\t},\n-\t\t))\n-\t}\n-\t// WriteConcern\n-\tif opts.WriteConcern != nil {\n-\t\tc.writeConcern = opts.WriteConcern\n-\t}\n-\t// AutoEncryptionOptions\n-\tif opts.AutoEncryptionOptions != nil {\n-\t\tif err := c.configureAutoEncryption(opts); err != nil {\n-\t\t\treturn err\n-\t\t}\n-\t} else {\n-\t\tc.cryptFLE = opts.Crypt\n-\t}\n-\n-\t// OCSP cache\n-\tocspCache := ocsp.NewCache()\n-\tconnOpts = append(\n-\t\tconnOpts,\n-\t\ttopology.WithOCSPCache(func(ocsp.Cache) ocsp.Cache { return ocspCache }),\n-\t)\n-\n-\t// Disable communication with external OCSP responders.\n-\tif opts.DisableOCSPEndpointCheck != nil {\n-\t\tconnOpts = append(\n-\t\t\tconnOpts,\n-\t\t\ttopology.WithDisableOCSPEndpointCheck(func(bool) bool { return *opts.DisableOCSPEndpointCheck }),\n-\t\t)\n-\t}\n-\n-\t// LoadBalanced\n-\tif opts.LoadBalanced != nil {\n-\t\ttopologyOpts = append(\n-\t\t\ttopologyOpts,\n-\t\t\ttopology.WithLoadBalanced(func(bool) bool { return *opts.LoadBalanced }),\n-\t\t)\n-\t\tserverOpts = append(\n-\t\t\tserverOpts,\n-\t\t\ttopology.WithServerLoadBalanced(func(bool) bool { return *opts.LoadBalanced }),\n-\t\t)\n-\t\tconnOpts = append(\n-\t\t\tconnOpts,\n-\t\t\ttopology.WithConnectionLoadBalanced(func(bool) bool { return *opts.LoadBalanced }),\n-\t\t)\n-\t}\n-\n-\tserverOpts = append(\n-\t\tserverOpts,\n-\t\ttopology.WithClock(func(*session.ClusterClock) *session.ClusterClock { return c.clock }),\n-\t\ttopology.WithConnectionOptions(func(...topology.ConnectionOption) []topology.ConnectionOption { return connOpts }),\n-\t)\n-\ttopologyOpts = append(topologyOpts, topology.WithServerOptions(\n-\t\tfunc(...topology.ServerOption) []topology.ServerOption { return serverOpts },\n-\t))\n-\tc.topologyOptions = topologyOpts\n-\n-\t// Deployment\n-\tif opts.Deployment != nil {\n-\t\t// topology options: WithSeedlist, WithURI, WithSRVServiceName, WithSRVMaxHosts, and WithServerOptions\n-\t\t// server options: WithClock and WithConnectionOptions + default maxPoolSize\n-\t\tif len(serverOpts) > 2+defaultOptions || len(topologyOpts) > 5 {\n-\t\t\treturn errors.New(\"cannot specify topology or server options with a deployment\")\n-\t\t}\n-\t\tc.deployment = opts.Deployment\n-\t}\n-\n-\treturn nil\n-}\n-\n func (c *Client) configureAutoEncryption(clientOpts *options.ClientOptions) error {\n \tc.encryptedFieldsMap = clientOpts.AutoEncryptionOptions.EncryptedFieldsMap\n \tif err := c.configureKeyVaultClientFLE(clientOpts); err != nil {\n@@ -895,6 +609,7 @@ func (c *Client) configureCryptFLE(mc *mongocrypt.MongoCrypt, opts *options.Auto\n \t\tKeyFn:                kr.cryptKeys,\n \t\tMarkFn:               c.mongocryptdFLE.markCommand,\n \t\tTLSConfig:            opts.TLSConfig,\n+\t\tHTTPClient:           opts.HTTPClient,\n \t\tBypassAutoEncryption: bypass,\n \t})\n }\n@@ -907,18 +622,6 @@ func (c *Client) validSession(sess *session.Client) error {\n \treturn nil\n }\n \n-// convertToDriverAPIOptions converts a options.ServerAPIOptions instance to a driver.ServerAPIOptions.\n-func convertToDriverAPIOptions(s *options.ServerAPIOptions) *driver.ServerAPIOptions {\n-\tdriverOpts := driver.NewServerAPIOptions(string(s.ServerAPIVersion))\n-\tif s.Strict != nil {\n-\t\tdriverOpts.SetStrict(*s.Strict)\n-\t}\n-\tif s.DeprecationErrors != nil {\n-\t\tdriverOpts.SetDeprecationErrors(*s.DeprecationErrors)\n-\t}\n-\treturn driverOpts\n-}\n-\n // Database returns a handle for a database with the given name configured with the given DatabaseOptions.\n func (c *Client) Database(name string, opts ...*options.DatabaseOptions) *Database {\n \treturn newDatabase(c, name, opts...)\n@@ -1099,7 +802,15 @@ func (c *Client) Watch(ctx context.Context, pipeline interface{},\n // NumberSessionsInProgress returns the number of sessions that have been started for this client but have not been\n // closed (i.e. EndSession has not been called).\n func (c *Client) NumberSessionsInProgress() int {\n-\treturn c.sessionPool.CheckedOut()\n+\t// The underlying session pool uses an int64 for checkedOut to allow atomic\n+\t// access. We convert to an int here to maintain backward compatibility with\n+\t// older versions of the driver that did not atomically access checkedOut.\n+\treturn int(c.sessionPool.CheckedOut())\n+}\n+\n+// Timeout returns the timeout set for this client.\n+func (c *Client) Timeout() *time.Duration {\n+\treturn c.timeout\n }\n \n func (c *Client) createBaseCursorOptions() driver.CursorOptions {"
    },
    {
      "sha": "59c550b95d4c7f3cac62531e4cc4e1196e63c2c5",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/client_encryption.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fclient_encryption.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fclient_encryption.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fclient_encryption.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -66,6 +66,7 @@ func NewClientEncryption(keyVaultClient *Client, opts ...*options.ClientEncrypti\n \t\tKeyFn:      kr.cryptKeys,\n \t\tCollInfoFn: cir.cryptCollInfo,\n \t\tTLSConfig:  ceo.TLSConfig,\n+\t\tHTTPClient: ceo.HTTPClient,\n \t})\n \n \treturn ce, nil"
    },
    {
      "sha": "2a697064c000540de61903f9453802879c163c38",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/collection.go",
      "status": "modified",
      "additions": 17,
      "deletions": 37,
      "changes": 54,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcollection.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcollection.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcollection.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -846,7 +846,8 @@ func aggregate(a aggregateParams) (cur *Cursor, err error) {\n \t\tCrypt(a.client.cryptFLE).\n \t\tServerAPI(a.client.serverAPI).\n \t\tHasOutputStage(hasOutputStage).\n-\t\tTimeout(a.client.timeout)\n+\t\tTimeout(a.client.timeout).\n+\t\tMaxTime(ao.MaxTime)\n \n \tif ao.AllowDiskUse != nil {\n \t\top.AllowDiskUse(*ao.AllowDiskUse)\n@@ -862,9 +863,6 @@ func aggregate(a aggregateParams) (cur *Cursor, err error) {\n \tif ao.Collation != nil {\n \t\top.Collation(bsoncore.Document(ao.Collation.ToDocument()))\n \t}\n-\tif ao.MaxTime != nil {\n-\t\top.MaxTimeMS(int64(*ao.MaxTime / time.Millisecond))\n-\t}\n \tif ao.MaxAwaitTime != nil {\n \t\tcursorOpts.MaxTimeMS = int64(*ao.MaxAwaitTime / time.Millisecond)\n \t}\n@@ -971,16 +969,13 @@ func (coll *Collection) CountDocuments(ctx context.Context, filter interface{},\n \top := operation.NewAggregate(pipelineArr).Session(sess).ReadConcern(rc).ReadPreference(coll.readPreference).\n \t\tCommandMonitor(coll.client.monitor).ServerSelector(selector).ClusterClock(coll.client.clock).Database(coll.db.name).\n \t\tCollection(coll.name).Deployment(coll.client.deployment).Crypt(coll.client.cryptFLE).ServerAPI(coll.client.serverAPI).\n-\t\tTimeout(coll.client.timeout)\n+\t\tTimeout(coll.client.timeout).MaxTime(countOpts.MaxTime)\n \tif countOpts.Collation != nil {\n \t\top.Collation(bsoncore.Document(countOpts.Collation.ToDocument()))\n \t}\n \tif countOpts.Comment != nil {\n \t\top.Comment(*countOpts.Comment)\n \t}\n-\tif countOpts.MaxTime != nil {\n-\t\top.MaxTimeMS(int64(*countOpts.MaxTime / time.Millisecond))\n-\t}\n \tif countOpts.Hint != nil {\n \t\thintVal, err := transformValue(coll.registry, countOpts.Hint, false, \"hint\")\n \t\tif err != nil {\n@@ -1052,32 +1047,30 @@ func (coll *Collection) EstimatedDocumentCount(ctx context.Context,\n \t\trc = nil\n \t}\n \n+\tco := options.MergeEstimatedDocumentCountOptions(opts...)\n+\n \tselector := makeReadPrefSelector(sess, coll.readSelector, coll.client.localThreshold)\n \top := operation.NewCount().Session(sess).ClusterClock(coll.client.clock).\n \t\tDatabase(coll.db.name).Collection(coll.name).CommandMonitor(coll.client.monitor).\n \t\tDeployment(coll.client.deployment).ReadConcern(rc).ReadPreference(coll.readPreference).\n \t\tServerSelector(selector).Crypt(coll.client.cryptFLE).ServerAPI(coll.client.serverAPI).\n-\t\tTimeout(coll.client.timeout)\n+\t\tTimeout(coll.client.timeout).MaxTime(co.MaxTime)\n \n-\tco := options.MergeEstimatedDocumentCountOptions(opts...)\n \tif co.Comment != nil {\n \t\tcomment, err := transformValue(coll.registry, co.Comment, false, \"comment\")\n \t\tif err != nil {\n \t\t\treturn 0, err\n \t\t}\n \t\top = op.Comment(comment)\n \t}\n-\tif co.MaxTime != nil {\n-\t\top = op.MaxTimeMS(int64(*co.MaxTime / time.Millisecond))\n-\t}\n+\n \tretry := driver.RetryNone\n \tif coll.client.retryReads {\n \t\tretry = driver.RetryOncePerCommand\n \t}\n \top.Retry(retry)\n \n \terr = op.Execute(ctx)\n-\n \treturn op.Result().N, replaceErrors(err)\n }\n \n@@ -1131,7 +1124,7 @@ func (coll *Collection) Distinct(ctx context.Context, fieldName string, filter i\n \t\tDatabase(coll.db.name).Collection(coll.name).CommandMonitor(coll.client.monitor).\n \t\tDeployment(coll.client.deployment).ReadConcern(rc).ReadPreference(coll.readPreference).\n \t\tServerSelector(selector).Crypt(coll.client.cryptFLE).ServerAPI(coll.client.serverAPI).\n-\t\tTimeout(coll.client.timeout)\n+\t\tTimeout(coll.client.timeout).MaxTime(option.MaxTime)\n \n \tif option.Collation != nil {\n \t\top.Collation(bsoncore.Document(option.Collation.ToDocument()))\n@@ -1143,9 +1136,6 @@ func (coll *Collection) Distinct(ctx context.Context, fieldName string, filter i\n \t\t}\n \t\top.Comment(comment)\n \t}\n-\tif option.MaxTime != nil {\n-\t\top.MaxTimeMS(int64(*option.MaxTime / time.Millisecond))\n-\t}\n \tretry := driver.RetryNone\n \tif coll.client.retryReads {\n \t\tretry = driver.RetryOncePerCommand\n@@ -1225,17 +1215,17 @@ func (coll *Collection) Find(ctx context.Context, filter interface{},\n \t\trc = nil\n \t}\n \n+\tfo := options.MergeFindOptions(opts...)\n+\n \tselector := makeReadPrefSelector(sess, coll.readSelector, coll.client.localThreshold)\n \top := operation.NewFind(f).\n \t\tSession(sess).ReadConcern(rc).ReadPreference(coll.readPreference).\n \t\tCommandMonitor(coll.client.monitor).ServerSelector(selector).\n \t\tClusterClock(coll.client.clock).Database(coll.db.name).Collection(coll.name).\n \t\tDeployment(coll.client.deployment).Crypt(coll.client.cryptFLE).ServerAPI(coll.client.serverAPI).\n-\t\tTimeout(coll.client.timeout)\n+\t\tTimeout(coll.client.timeout).MaxTime(fo.MaxTime)\n \n-\tfo := options.MergeFindOptions(opts...)\n \tcursorOpts := coll.client.createBaseCursorOptions()\n-\n \tif fo.AllowDiskUse != nil {\n \t\top.AllowDiskUse(*fo.AllowDiskUse)\n \t}\n@@ -1300,9 +1290,6 @@ func (coll *Collection) Find(ctx context.Context, filter interface{},\n \tif fo.MaxAwaitTime != nil {\n \t\tcursorOpts.MaxTimeMS = int64(*fo.MaxAwaitTime / time.Millisecond)\n \t}\n-\tif fo.MaxTime != nil {\n-\t\top.MaxTimeMS(int64(*fo.MaxTime / time.Millisecond))\n-\t}\n \tif fo.Min != nil {\n \t\tmin, err := transformBsoncoreDocument(coll.registry, fo.Min, true, \"min\")\n \t\tif err != nil {\n@@ -1482,7 +1469,8 @@ func (coll *Collection) FindOneAndDelete(ctx context.Context, filter interface{}\n \t\treturn &SingleResult{err: err}\n \t}\n \tfod := options.MergeFindOneAndDeleteOptions(opts...)\n-\top := operation.NewFindAndModify(f).Remove(true).ServerAPI(coll.client.serverAPI).Timeout(coll.client.timeout)\n+\top := operation.NewFindAndModify(f).Remove(true).ServerAPI(coll.client.serverAPI).Timeout(coll.client.timeout).\n+\t\tMaxTime(fod.MaxTime)\n \tif fod.Collation != nil {\n \t\top = op.Collation(bsoncore.Document(fod.Collation.ToDocument()))\n \t}\n@@ -1493,9 +1481,6 @@ func (coll *Collection) FindOneAndDelete(ctx context.Context, filter interface{}\n \t\t}\n \t\top = op.Comment(comment)\n \t}\n-\tif fod.MaxTime != nil {\n-\t\top = op.MaxTimeMS(int64(*fod.MaxTime / time.Millisecond))\n-\t}\n \tif fod.Projection != nil {\n \t\tproj, err := transformBsoncoreDocument(coll.registry, fod.Projection, true, \"projection\")\n \t\tif err != nil {\n@@ -1559,7 +1544,7 @@ func (coll *Collection) FindOneAndReplace(ctx context.Context, filter interface{\n \n \tfo := options.MergeFindOneAndReplaceOptions(opts...)\n \top := operation.NewFindAndModify(f).Update(bsoncore.Value{Type: bsontype.EmbeddedDocument, Data: r}).\n-\t\tServerAPI(coll.client.serverAPI).Timeout(coll.client.timeout)\n+\t\tServerAPI(coll.client.serverAPI).Timeout(coll.client.timeout).MaxTime(fo.MaxTime)\n \tif fo.BypassDocumentValidation != nil && *fo.BypassDocumentValidation {\n \t\top = op.BypassDocumentValidation(*fo.BypassDocumentValidation)\n \t}\n@@ -1573,9 +1558,6 @@ func (coll *Collection) FindOneAndReplace(ctx context.Context, filter interface{\n \t\t}\n \t\top = op.Comment(comment)\n \t}\n-\tif fo.MaxTime != nil {\n-\t\top = op.MaxTimeMS(int64(*fo.MaxTime / time.Millisecond))\n-\t}\n \tif fo.Projection != nil {\n \t\tproj, err := transformBsoncoreDocument(coll.registry, fo.Projection, true, \"projection\")\n \t\tif err != nil {\n@@ -1642,7 +1624,8 @@ func (coll *Collection) FindOneAndUpdate(ctx context.Context, filter interface{}\n \t}\n \n \tfo := options.MergeFindOneAndUpdateOptions(opts...)\n-\top := operation.NewFindAndModify(f).ServerAPI(coll.client.serverAPI).Timeout(coll.client.timeout)\n+\top := operation.NewFindAndModify(f).ServerAPI(coll.client.serverAPI).Timeout(coll.client.timeout).\n+\t\tMaxTime(fo.MaxTime)\n \n \tu, err := transformUpdateValue(coll.registry, update, true)\n \tif err != nil {\n@@ -1670,9 +1653,6 @@ func (coll *Collection) FindOneAndUpdate(ctx context.Context, filter interface{}\n \t\t}\n \t\top = op.Comment(comment)\n \t}\n-\tif fo.MaxTime != nil {\n-\t\top = op.MaxTimeMS(int64(*fo.MaxTime / time.Millisecond))\n-\t}\n \tif fo.Projection != nil {\n \t\tproj, err := transformBsoncoreDocument(coll.registry, fo.Projection, true, \"projection\")\n \t\tif err != nil {\n@@ -1845,7 +1825,7 @@ func (coll *Collection) drop(ctx context.Context) error {\n \t\tServerSelector(selector).ClusterClock(coll.client.clock).\n \t\tDatabase(coll.db.name).Collection(coll.name).\n \t\tDeployment(coll.client.deployment).Crypt(coll.client.cryptFLE).\n-\t\tServerAPI(coll.client.serverAPI)\n+\t\tServerAPI(coll.client.serverAPI).Timeout(coll.client.timeout)\n \terr = op.Execute(ctx)\n \n \t// ignore namespace not found erorrs"
    },
    {
      "sha": "99f86951521414071ce898f4a0743702165d80bc",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/cursor.go",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcursor.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcursor.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fcursor.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -246,7 +246,10 @@ func (c *Cursor) All(ctx context.Context, results interface{}) error {\n \tvar index int\n \tvar err error\n \n-\tdefer c.Close(ctx)\n+\t// Defer a call to Close to try to clean up the cursor server-side when all\n+\t// documents have not been exhausted. Use context.Background() to ensure Close\n+\t// completes even if the context passed to All has errored.\n+\tdefer c.Close(context.Background())\n \n \tbatch := c.batch // exhaust the current batch before iterating the batch cursor\n \tfor {"
    },
    {
      "sha": "cd93fb860e0d0e576393a0ca820b19fca1bc5246",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/database.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdatabase.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdatabase.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdatabase.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -745,7 +745,7 @@ func (db *Database) createCollectionOperation(name string, opts ...*options.Crea\n //\n // The viewName parameter specifies the name of the view to create.\n //\n-// The viewOn parameter specifies the name of the collection or view on which this view will be created\n+// # The viewOn parameter specifies the name of the collection or view on which this view will be created\n //\n // The pipeline parameter specifies an aggregation pipeline that will be exececuted against the source collection or\n // view to create this view."
    },
    {
      "sha": "a20c86ac9901d44828e4b41cffda432a5d9e8268",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/description/server.go",
      "status": "modified",
      "additions": 11,
      "deletions": 4,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdescription%2Fserver.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdescription%2Fserver.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdescription%2Fserver.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -40,6 +40,7 @@ type Server struct {\n \tHeartbeatInterval     time.Duration\n \tHelloOK               bool\n \tHosts                 []string\n+\tIsCryptd              bool\n \tLastError             error\n \tLastUpdateTime        time.Time\n \tLastWriteTime         time.Time\n@@ -72,7 +73,7 @@ func NewServer(addr address.Address, response bson.Raw) Server {\n \tvar ok bool\n \tvar isReplicaSet, isWritablePrimary, hidden, secondary, arbiterOnly bool\n \tvar msg string\n-\tvar version VersionRange\n+\tvar versionRange VersionRange\n \tfor _, element := range elements {\n \t\tswitch element.Key() {\n \t\tcase \"arbiters\":\n@@ -101,6 +102,12 @@ func NewServer(addr address.Address, response bson.Raw) Server {\n \t\t\t\tdesc.LastError = fmt.Errorf(\"expected 'electionId' to be a objectID but it's a BSON %s\", element.Value().Type)\n \t\t\t\treturn desc\n \t\t\t}\n+\t\tcase \"iscryptd\":\n+\t\t\tdesc.IsCryptd, ok = element.Value().BooleanOK()\n+\t\t\tif !ok {\n+\t\t\t\tdesc.LastError = fmt.Errorf(\"expected 'iscryptd' to be a boolean but it's a BSON %s\", element.Value().Type)\n+\t\t\t\treturn desc\n+\t\t\t}\n \t\tcase \"helloOk\":\n \t\t\tdesc.HelloOK, ok = element.Value().BooleanOK()\n \t\t\tif !ok {\n@@ -189,13 +196,13 @@ func NewServer(addr address.Address, response bson.Raw) Server {\n \t\t\t}\n \t\t\tdesc.CanonicalAddr = address.Address(me).Canonicalize()\n \t\tcase \"maxWireVersion\":\n-\t\t\tversion.Max, ok = element.Value().AsInt32OK()\n+\t\t\tversionRange.Max, ok = element.Value().AsInt32OK()\n \t\t\tif !ok {\n \t\t\t\tdesc.LastError = fmt.Errorf(\"expected 'maxWireVersion' to be an integer but it's a BSON %s\", element.Value().Type)\n \t\t\t\treturn desc\n \t\t\t}\n \t\tcase \"minWireVersion\":\n-\t\t\tversion.Min, ok = element.Value().AsInt32OK()\n+\t\t\tversionRange.Min, ok = element.Value().AsInt32OK()\n \t\t\tif !ok {\n \t\t\t\tdesc.LastError = fmt.Errorf(\"expected 'minWireVersion' to be an integer but it's a BSON %s\", element.Value().Type)\n \t\t\t\treturn desc\n@@ -321,7 +328,7 @@ func NewServer(addr address.Address, response bson.Raw) Server {\n \t\tdesc.Kind = Mongos\n \t}\n \n-\tdesc.WireVersion = &version\n+\tdesc.WireVersion = &versionRange\n \n \treturn desc\n }"
    },
    {
      "sha": "df5e77a45487d4f8fffb843b2f201d9a3ffdd0fe",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/description/server_selector.go",
      "status": "modified",
      "additions": 9,
      "deletions": 4,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdescription%2Fserver_selector.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdescription%2Fserver_selector.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdescription%2Fserver_selector.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -296,13 +296,18 @@ func selectByTagSet(candidates []Server, tagSets []tag.Set) []Server {\n }\n \n func selectByKind(candidates []Server, kind ServerKind) []Server {\n-\tvar result []Server\n-\tfor _, s := range candidates {\n+\t// Record the indices of viable candidates first and then append those to the returned slice\n+\t// to avoid appending costly Server structs directly as an optimization.\n+\tviableIndexes := make([]int, 0, len(candidates))\n+\tfor i, s := range candidates {\n \t\tif s.Kind == kind {\n-\t\t\tresult = append(result, s)\n+\t\t\tviableIndexes = append(viableIndexes, i)\n \t\t}\n \t}\n-\n+\tresult := make([]Server, len(viableIndexes))\n+\tfor i, idx := range viableIndexes {\n+\t\tresult[i] = candidates[idx]\n+\t}\n \treturn result\n }\n "
    },
    {
      "sha": "39bb530995cf70dadd4364f3aeb7a5e0d2b36648",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/doc.go",
      "status": "modified",
      "additions": 63,
      "deletions": 60,
      "changes": 123,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fdoc.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -11,99 +11,102 @@\n // Basic usage of the driver starts with creating a Client from a connection\n // string. To do so, call Connect:\n //\n-//    ctx, cancel := context.WithTimeout(context.Background(), 20*time.Second)\n-//    defer cancel()\n-//    client, err := mongo.Connect(ctx, options.Client().ApplyURI(\"mongodb://foo:bar@localhost:27017\"))\n-//    if err != nil { return err }\n+//\tctx, cancel := context.WithTimeout(context.Background(), 20*time.Second)\n+//\tdefer cancel()\n+//\tclient, err := mongo.Connect(ctx, options.Client().ApplyURI(\"mongodb://foo:bar@localhost:27017\"))\n+//\tif err != nil { return err }\n //\n // This will create a new client and start monitoring the MongoDB server on localhost.\n // The Database and Collection types can be used to access the database:\n //\n-//    collection := client.Database(\"baz\").Collection(\"qux\")\n+//\tcollection := client.Database(\"baz\").Collection(\"qux\")\n //\n // A Collection can be used to query the database or insert documents:\n //\n-//    res, err := collection.InsertOne(context.Background(), bson.M{\"hello\": \"world\"})\n-//    if err != nil { return err }\n-//    id := res.InsertedID\n+//\tres, err := collection.InsertOne(context.Background(), bson.M{\"hello\": \"world\"})\n+//\tif err != nil { return err }\n+//\tid := res.InsertedID\n //\n // Several methods return a cursor, which can be used like this:\n //\n-//    cur, err := collection.Find(context.Background(), bson.D{})\n-//    if err != nil { log.Fatal(err) }\n-//    defer cur.Close(context.Background())\n-//    for cur.Next(context.Background()) {\n-//      // To decode into a struct, use cursor.Decode()\n-//      result := struct{\n-//        Foo string\n-//        Bar int32\n-//      }{}\n-//      err := cur.Decode(&result)\n-//      if err != nil { log.Fatal(err) }\n-//      // do something with result...\n-//\n-//      // To get the raw bson bytes use cursor.Current\n-//      raw := cur.Current\n-//      // do something with raw...\n-//    }\n-//    if err := cur.Err(); err != nil {\n-//      return err\n-//    }\n+//\tcur, err := collection.Find(context.Background(), bson.D{})\n+//\tif err != nil { log.Fatal(err) }\n+//\tdefer cur.Close(context.Background())\n+//\tfor cur.Next(context.Background()) {\n+//\t  // To decode into a struct, use cursor.Decode()\n+//\t  result := struct{\n+//\t    Foo string\n+//\t    Bar int32\n+//\t  }{}\n+//\t  err := cur.Decode(&result)\n+//\t  if err != nil { log.Fatal(err) }\n+//\t  // do something with result...\n+//\n+//\t  // To get the raw bson bytes use cursor.Current\n+//\t  raw := cur.Current\n+//\t  // do something with raw...\n+//\t}\n+//\tif err := cur.Err(); err != nil {\n+//\t  return err\n+//\t}\n //\n // Cursor.All will decode all of the returned elements at once:\n //\n-//    var results []struct{\n-//      Foo string\n-//      Bar int32\n-//    }\n-//    if err = cur.All(context.Background(), &results); err != nil {\n-//      log.Fatal(err)\n-//    }\n-//    // do something with results...\n+//\tvar results []struct{\n+//\t  Foo string\n+//\t  Bar int32\n+//\t}\n+//\tif err = cur.All(context.Background(), &results); err != nil {\n+//\t  log.Fatal(err)\n+//\t}\n+//\t// do something with results...\n //\n // Methods that only return a single document will return a *SingleResult, which works\n // like a *sql.Row:\n //\n-//    result := struct{\n-//      Foo string\n-//      Bar int32\n-//    }{}\n-//    filter := bson.D{{\"hello\", \"world\"}}\n-//    err := collection.FindOne(context.Background(), filter).Decode(&result)\n-//    if err != nil { return err }\n-//    // do something with result...\n+//\tresult := struct{\n+//\t  Foo string\n+//\t  Bar int32\n+//\t}{}\n+//\tfilter := bson.D{{\"hello\", \"world\"}}\n+//\terr := collection.FindOne(context.Background(), filter).Decode(&result)\n+//\tif err != nil { return err }\n+//\t// do something with result...\n //\n // All Client, Collection, and Database methods that take parameters of type interface{}\n // will return ErrNilDocument if nil is passed in for an interface{}.\n //\n // Additional examples can be found under the examples directory in the driver's repository and\n // on the MongoDB website.\n //\n-// Error Handling\n+// # Error Handling\n //\n // Errors from the MongoDB server will implement the ServerError interface, which has functions to check for specific\n // error codes, labels, and message substrings. These can be used to check for and handle specific errors. Some methods,\n // like InsertMany and BulkWrite, can return an error representing multiple errors, and in those cases the ServerError\n // functions will return true if any of the contained errors satisfy the check.\n //\n // There are also helper functions to check for certain specific types of errors:\n-//    IsDuplicateKeyError(error)\n-//    IsNetworkError(error)\n-//    IsTimeout(error)\n //\n-// Potential DNS Issues\n+//\tIsDuplicateKeyError(error)\n+//\tIsNetworkError(error)\n+//\tIsTimeout(error)\n+//\n+// # Potential DNS Issues\n //\n // Building with Go 1.11+ and using connection strings with the \"mongodb+srv\"[1] scheme is\n // incompatible with some DNS servers in the wild due to the change introduced in\n // https://github.com/golang/go/issues/10622. If you receive an error with the message \"cannot\n // unmarshal DNS message\" while running an operation, we suggest you use a different DNS server.\n //\n-// Client Side Encryption\n+// # Client Side Encryption\n //\n // Client-side encryption is a new feature in MongoDB 4.2 that allows specific data fields to be encrypted. Using this\n-// feature requires specifying the \"cse\" build tag during compilation.\n+// feature requires specifying the \"cse\" build tag during compilation:\n+//\n+//\tgo build -tags cse\n //\n-// Note: Auto encryption is an enterprise-only feature.\n+// Note: Auto encryption is an enterprise- and Atlas-only feature.\n //\n // The libmongocrypt C library is required when using client-side encryption. Specific versions of libmongocrypt\n // are required for different versions of the Go Driver:\n@@ -131,16 +134,16 @@\n //\n // 3. Windows:\n //\n-//    mkdir -p c:/libmongocrypt/bin\n-//    mkdir -p c:/libmongocrypt/include\n+//\tmkdir -p c:/libmongocrypt/bin\n+//\tmkdir -p c:/libmongocrypt/include\n //\n-//    // Run the curl command in an empty directory as it will create new directories when unpacked.\n-//    curl https://s3.amazonaws.com/mciuploads/libmongocrypt/windows/latest_release/libmongocrypt.tar.gz --output libmongocrypt.tar.gz\n-//    tar -xvzf libmongocrypt.tar.gz\n+//\t// Run the curl command in an empty directory as it will create new directories when unpacked.\n+//\tcurl https://s3.amazonaws.com/mciuploads/libmongocrypt/windows/latest_release/libmongocrypt.tar.gz --output libmongocrypt.tar.gz\n+//\ttar -xvzf libmongocrypt.tar.gz\n //\n-//    cp ./bin/mongocrypt.dll c:/libmongocrypt/bin\n-//    cp ./include/mongocrypt/*.h c:/libmongocrypt/include\n-//    export PATH=$PATH:/cygdrive/c/libmongocrypt/bin\n+//\tcp ./bin/mongocrypt.dll c:/libmongocrypt/bin\n+//\tcp ./include/mongocrypt/*.h c:/libmongocrypt/include\n+//\texport PATH=$PATH:/cygdrive/c/libmongocrypt/bin\n //\n // libmongocrypt communicates with the mongocryptd process or mongo_crypt shared library for automatic encryption.\n // See AutoEncryptionOpts.SetExtraOptions for options to configure use of mongocryptd or mongo_crypt."
    },
    {
      "sha": "620022ee5d2633fb3dacd4a3b5a3b6d174d1b2f8",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/errors.go",
      "status": "modified",
      "additions": 25,
      "deletions": 1,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Ferrors.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Ferrors.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Ferrors.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -46,6 +46,11 @@ func (e ErrMapForOrderedArgument) Error() string {\n }\n \n func replaceErrors(err error) error {\n+\t// Return nil when err is nil to avoid costly reflection logic below.\n+\tif err == nil {\n+\t\treturn nil\n+\t}\n+\n \tif err == topology.ErrTopologyClosed {\n \t\treturn ErrClientDisconnected\n \t}\n@@ -107,6 +112,19 @@ func IsTimeout(err error) bool {\n \t\tif err == driver.ErrDeadlineWouldBeExceeded {\n \t\t\treturn true\n \t\t}\n+\t\tif err == topology.ErrServerSelectionTimeout {\n+\t\t\treturn true\n+\t\t}\n+\t\tif _, ok := err.(topology.WaitQueueTimeoutError); ok {\n+\t\t\treturn true\n+\t\t}\n+\t\tif ce, ok := err.(CommandError); ok && ce.IsMaxTimeMSExpiredError() {\n+\t\t\treturn true\n+\t\t}\n+\t\tif we, ok := err.(WriteException); ok && we.WriteConcernError != nil &&\n+\t\t\twe.WriteConcernError.IsMaxTimeMSExpiredError() {\n+\t\t\treturn true\n+\t\t}\n \t\tif ne, ok := err.(net.Error); ok {\n \t\t\treturn ne.Timeout()\n \t\t}\n@@ -365,6 +383,11 @@ func (wce WriteConcernError) Error() string {\n \treturn wce.Message\n }\n \n+// IsMaxTimeMSExpiredError returns true if the error is a MaxTimeMSExpired error.\n+func (wce WriteConcernError) IsMaxTimeMSExpiredError() bool {\n+\treturn wce.Code == 50\n+}\n+\n // WriteException is the error type returned by the InsertOne, DeleteOne, DeleteMany, UpdateOne, UpdateMany, and\n // ReplaceOne operations.\n type WriteException struct {\n@@ -619,7 +642,8 @@ const batchErrorsTargetLength = 2000\n // to the end.\n //\n // Example format:\n-//     \"[message 1, message 2, +8 more errors...]\"\n+//\n+//\t\"[message 1, message 2, +8 more errors...]\"\n func joinBatchErrors(errs []error) string {\n \tvar buf bytes.Buffer\n \tfmt.Fprint(&buf, \"[\")"
    },
    {
      "sha": "5c1c05cad6ca6bc434ace7209af03e893be56d7d",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/gridfs/bucket.go",
      "status": "modified",
      "additions": 65,
      "deletions": 3,
      "changes": 68,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fgridfs%2Fbucket.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fgridfs%2Fbucket.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fgridfs%2Fbucket.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -16,6 +16,7 @@ import (\n \n \t\"go.mongodb.org/mongo-driver/bson\"\n \t\"go.mongodb.org/mongo-driver/bson/primitive\"\n+\t\"go.mongodb.org/mongo-driver/internal\"\n \t\"go.mongodb.org/mongo-driver/mongo\"\n \t\"go.mongodb.org/mongo-driver/mongo/options\"\n \t\"go.mongodb.org/mongo-driver/mongo/readconcern\"\n@@ -241,20 +242,39 @@ func (b *Bucket) DownloadToStreamByName(filename string, stream io.Writer, opts\n //\n // If this operation requires a custom write deadline to be set on the bucket, it cannot be done concurrently with other\n // write operations operations on this bucket that also require a custom deadline.\n+//\n+// Use SetWriteDeadline to set a deadline for the delete operation.\n func (b *Bucket) Delete(fileID interface{}) error {\n-\t// delete document in files collection and then chunks to minimize race conditions\n-\n \tctx, cancel := deadlineContext(b.writeDeadline)\n \tif cancel != nil {\n \t\tdefer cancel()\n \t}\n+\treturn b.DeleteContext(ctx, fileID)\n+}\n \n+// DeleteContext deletes all chunks and metadata associated with the file with the given file ID and runs the underlying\n+// delete operations with the provided context.\n+//\n+// Use the context parameter to time-out or cancel the delete operation. The deadline set by SetWriteDeadline is ignored.\n+func (b *Bucket) DeleteContext(ctx context.Context, fileID interface{}) error {\n+\t// If no deadline is set on the passed-in context, Timeout is set on the Client, and context is\n+\t// not already a Timeout context, honor Timeout in new Timeout context for operation execution to\n+\t// be shared by both delete operations.\n+\tif _, deadlineSet := ctx.Deadline(); !deadlineSet && b.db.Client().Timeout() != nil && !internal.IsTimeoutContext(ctx) {\n+\t\tnewCtx, cancelFunc := internal.MakeTimeoutContext(ctx, *b.db.Client().Timeout())\n+\t\t// Redefine ctx to be the new timeout-derived context.\n+\t\tctx = newCtx\n+\t\t// Cancel the timeout-derived context at the end of Execute to avoid a context leak.\n+\t\tdefer cancelFunc()\n+\t}\n+\n+\t// Delete document in files collection and then chunks to minimize race conditions.\n \tres, err := b.filesColl.DeleteOne(ctx, bson.D{{\"_id\", fileID}})\n \tif err == nil && res.DeletedCount == 0 {\n \t\terr = ErrFileNotFound\n \t}\n \tif err != nil {\n-\t\t_ = b.deleteChunks(ctx, fileID) // can attempt to delete chunks even if no docs in files collection matched\n+\t\t_ = b.deleteChunks(ctx, fileID) // Can attempt to delete chunks even if no docs in files collection matched.\n \t\treturn err\n \t}\n \n@@ -265,12 +285,23 @@ func (b *Bucket) Delete(fileID interface{}) error {\n //\n // If this download requires a custom read deadline to be set on the bucket, it cannot be done concurrently with other\n // read operations operations on this bucket that also require a custom deadline.\n+//\n+// Use SetReadDeadline to set a deadline for the find operation.\n func (b *Bucket) Find(filter interface{}, opts ...*options.GridFSFindOptions) (*mongo.Cursor, error) {\n \tctx, cancel := deadlineContext(b.readDeadline)\n \tif cancel != nil {\n \t\tdefer cancel()\n \t}\n \n+\treturn b.FindContext(ctx, filter, opts...)\n+}\n+\n+// FindContext returns the files collection documents that match the given filter and runs the underlying\n+// find query with the provided context.\n+//\n+// Use the context parameter to time-out or cancel the find operation. The deadline set by SetReadDeadline\n+// is ignored.\n+func (b *Bucket) FindContext(ctx context.Context, filter interface{}, opts ...*options.GridFSFindOptions) (*mongo.Cursor, error) {\n \tgfsOpts := options.MergeGridFSFindOptions(opts...)\n \tfind := options.Find()\n \tif gfsOpts.AllowDiskUse != nil {\n@@ -302,12 +333,22 @@ func (b *Bucket) Find(filter interface{}, opts ...*options.GridFSFindOptions) (*\n //\n // If this operation requires a custom write deadline to be set on the bucket, it cannot be done concurrently with other\n // write operations operations on this bucket that also require a custom deadline\n+//\n+// Use SetWriteDeadline to set a deadline for the rename operation.\n func (b *Bucket) Rename(fileID interface{}, newFilename string) error {\n \tctx, cancel := deadlineContext(b.writeDeadline)\n \tif cancel != nil {\n \t\tdefer cancel()\n \t}\n \n+\treturn b.RenameContext(ctx, fileID, newFilename)\n+}\n+\n+// RenameContext renames the stored file with the specified file ID and runs the underlying update with the provided\n+// context.\n+//\n+// Use the context parameter to time-out or cancel the rename operation. The deadline set by SetWriteDeadline is ignored.\n+func (b *Bucket) RenameContext(ctx context.Context, fileID interface{}, newFilename string) error {\n \tres, err := b.filesColl.UpdateOne(ctx,\n \t\tbson.D{{\"_id\", fileID}},\n \t\tbson.D{{\"$set\", bson.D{{\"filename\", newFilename}}}},\n@@ -327,12 +368,33 @@ func (b *Bucket) Rename(fileID interface{}, newFilename string) error {\n //\n // If this operation requires a custom write deadline to be set on the bucket, it cannot be done concurrently with other\n // write operations operations on this bucket that also require a custom deadline\n+//\n+// Use SetWriteDeadline to set a deadline for the drop operation.\n func (b *Bucket) Drop() error {\n \tctx, cancel := deadlineContext(b.writeDeadline)\n \tif cancel != nil {\n \t\tdefer cancel()\n \t}\n \n+\treturn b.DropContext(ctx)\n+}\n+\n+// DropContext drops the files and chunks collections associated with this bucket and runs the drop operations with\n+// the provided context.\n+//\n+// Use the context parameter to time-out or cancel the drop operation. The deadline set by SetWriteDeadline is ignored.\n+func (b *Bucket) DropContext(ctx context.Context) error {\n+\t// If no deadline is set on the passed-in context, Timeout is set on the Client, and context is\n+\t// not already a Timeout context, honor Timeout in new Timeout context for operation execution to\n+\t// be shared by both drop operations.\n+\tif _, deadlineSet := ctx.Deadline(); !deadlineSet && b.db.Client().Timeout() != nil && !internal.IsTimeoutContext(ctx) {\n+\t\tnewCtx, cancelFunc := internal.MakeTimeoutContext(ctx, *b.db.Client().Timeout())\n+\t\t// Redefine ctx to be the new timeout-derived context.\n+\t\tctx = newCtx\n+\t\t// Cancel the timeout-derived context at the end of Execute to avoid a context leak.\n+\t\tdefer cancelFunc()\n+\t}\n+\n \terr := b.filesColl.Drop(ctx)\n \tif err != nil {\n \t\treturn err"
    },
    {
      "sha": "69f9d2f1d7aa7f31c9af1d3c3583dc49e0e00a2a",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/gridfs/doc.go",
      "status": "modified",
      "additions": 14,
      "deletions": 12,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fgridfs%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fgridfs%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fgridfs%2Fdoc.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -7,29 +7,31 @@\n // Package gridfs provides a MongoDB GridFS API. See https://www.mongodb.com/docs/manual/core/gridfs/ for more\n // information about GridFS and its use cases.\n //\n-// Buckets\n+// # Buckets\n //\n // The main type defined in this package is Bucket. A Bucket wraps a mongo.Database instance and operates on two\n // collections in the database. The first is the files collection, which contains one metadata document per file stored\n // in the bucket. This collection is named \"<bucket name>.files\". The second is the chunks collection, which contains\n // chunks of files. This collection is named \"<bucket name>.chunks\".\n //\n-// Uploading a File\n+// # Uploading a File\n //\n // Files can be uploaded in two ways:\n-// \t1. OpenUploadStream/OpenUploadStreamWithID - These methods return an UploadStream instance. UploadStream\n-// \timplements the io.Writer interface and the Write() method can be used to upload a file to the database.\n //\n-//\t2. UploadFromStream/UploadFromStreamWithID - These methods take an io.Reader, which represents the file to\n-// \tupload. They internally create a new UploadStream and close it once the operation is complete.\n+//  1. OpenUploadStream/OpenUploadStreamWithID - These methods return an UploadStream instance. UploadStream\n+//     implements the io.Writer interface and the Write() method can be used to upload a file to the database.\n //\n-// Downloading a File\n+//  2. UploadFromStream/UploadFromStreamWithID - These methods take an io.Reader, which represents the file to\n+//     upload. They internally create a new UploadStream and close it once the operation is complete.\n+//\n+// # Downloading a File\n //\n // Similar to uploads, files can be downloaded in two ways:\n-//\t1. OpenDownloadStream/OpenDownloadStreamByName - These methods return a DownloadStream instance. DownloadStream\n-//\timplements the io.Reader interface. A file can be read either using the Read() method or any standard library\n-//\tmethods that reads from an io.Reader such as io.Copy.\n //\n-//\t2. DownloadToStream/DownloadToStreamByName - These methods take an io.Writer, which represents the download\n-// \tdestination. They internally create a new DownloadStream and close it once the operation is complete.\n+//  1. OpenDownloadStream/OpenDownloadStreamByName - These methods return a DownloadStream instance. DownloadStream\n+//     implements the io.Reader interface. A file can be read either using the Read() method or any standard library\n+//     methods that reads from an io.Reader such as io.Copy.\n+//\n+//  2. DownloadToStream/DownloadToStreamByName - These methods take an io.Writer, which represents the download\n+//     destination. They internally create a new DownloadStream and close it once the operation is complete.\n package gridfs"
    },
    {
      "sha": "6bb33f07b260b6adc5d07f2a4aac0fc92235179d",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/index_view.go",
      "status": "modified",
      "additions": 3,
      "deletions": 13,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Findex_view.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Findex_view.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Findex_view.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -12,7 +12,6 @@ import (\n \t\"errors\"\n \t\"fmt\"\n \t\"strconv\"\n-\t\"time\"\n \n \t\"go.mongodb.org/mongo-driver/bson\"\n \t\"go.mongodb.org/mongo-driver/bson/bsontype\"\n@@ -104,9 +103,7 @@ func (iv IndexView) List(ctx context.Context, opts ...*options.ListIndexesOption\n \t\top = op.BatchSize(*lio.BatchSize)\n \t\tcursorOpts.BatchSize = *lio.BatchSize\n \t}\n-\tif lio.MaxTime != nil {\n-\t\top = op.MaxTimeMS(int64(*lio.MaxTime / time.Millisecond))\n-\t}\n+\top = op.MaxTime(lio.MaxTime)\n \tretry := driver.RetryNone\n \tif iv.coll.client.retryReads {\n \t\tretry = driver.RetryOncePerCommand\n@@ -258,11 +255,7 @@ func (iv IndexView) CreateMany(ctx context.Context, models []IndexModel, opts ..\n \t\tSession(sess).WriteConcern(wc).ClusterClock(iv.coll.client.clock).\n \t\tDatabase(iv.coll.db.name).Collection(iv.coll.name).CommandMonitor(iv.coll.client.monitor).\n \t\tDeployment(iv.coll.client.deployment).ServerSelector(selector).ServerAPI(iv.coll.client.serverAPI).\n-\t\tTimeout(iv.coll.client.timeout)\n-\n-\tif option.MaxTime != nil {\n-\t\top.MaxTimeMS(int64(*option.MaxTime / time.Millisecond))\n-\t}\n+\t\tTimeout(iv.coll.client.timeout).MaxTime(option.MaxTime)\n \tif option.CommitQuorum != nil {\n \t\tcommitQuorum, err := transformValue(iv.coll.registry, option.CommitQuorum, true, \"commitQuorum\")\n \t\tif err != nil {\n@@ -403,10 +396,7 @@ func (iv IndexView) drop(ctx context.Context, name string, opts ...*options.Drop\n \t\tServerSelector(selector).ClusterClock(iv.coll.client.clock).\n \t\tDatabase(iv.coll.db.name).Collection(iv.coll.name).\n \t\tDeployment(iv.coll.client.deployment).ServerAPI(iv.coll.client.serverAPI).\n-\t\tTimeout(iv.coll.client.timeout)\n-\tif dio.MaxTime != nil {\n-\t\top.MaxTimeMS(int64(*dio.MaxTime / time.Millisecond))\n-\t}\n+\t\tTimeout(iv.coll.client.timeout).MaxTime(dio.MaxTime)\n \n \terr = op.Execute(ctx)\n \tif err != nil {"
    },
    {
      "sha": "2fa5e54aee2b32ec229d974b7d68da31992d7173",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/mongo.go",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fmongo.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fmongo.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fmongo.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -65,11 +65,10 @@ func (me MarshalError) Error() string {\n //\n // Example usage:\n //\n-//\t\tmongo.Pipeline{\n-//\t\t\t{{\"$group\", bson.D{{\"_id\", \"$state\"}, {\"totalPop\", bson.D{{\"$sum\", \"$pop\"}}}}}},\n-//\t\t\t{{\"$match\", bson.D{{\"totalPop\", bson.D{{\"$gte\", 10*1000*1000}}}}}},\n-//\t\t}\n-//\n+//\tmongo.Pipeline{\n+//\t\t{{\"$group\", bson.D{{\"_id\", \"$state\"}, {\"totalPop\", bson.D{{\"$sum\", \"$pop\"}}}}}},\n+//\t\t{{\"$match\", bson.D{{\"totalPop\", bson.D{{\"$gte\", 10*1000*1000}}}}}},\n+//\t}\n type Pipeline []bson.D\n \n // transformAndEnsureID is a hack that makes it easy to get a RawValue as the _id value."
    },
    {
      "sha": "f42714b3d0c57fc258cd6597b05d10553eb457d9",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/options/autoencryptionoptions.go",
      "status": "modified",
      "additions": 11,
      "deletions": 2,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fautoencryptionoptions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fautoencryptionoptions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fautoencryptionoptions.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -8,6 +8,9 @@ package options\n \n import (\n \t\"crypto/tls\"\n+\t\"net/http\"\n+\n+\t\"go.mongodb.org/mongo-driver/internal\"\n )\n \n // AutoEncryptionOptions represents options used to configure auto encryption/decryption behavior for a mongo.Client\n@@ -32,13 +35,16 @@ type AutoEncryptionOptions struct {\n \tBypassAutoEncryption  *bool\n \tExtraOptions          map[string]interface{}\n \tTLSConfig             map[string]*tls.Config\n+\tHTTPClient            *http.Client\n \tEncryptedFieldsMap    map[string]interface{}\n \tBypassQueryAnalysis   *bool\n }\n \n // AutoEncryption creates a new AutoEncryptionOptions configured with default values.\n func AutoEncryption() *AutoEncryptionOptions {\n-\treturn &AutoEncryptionOptions{}\n+\treturn &AutoEncryptionOptions{\n+\t\tHTTPClient: internal.DefaultHTTPClient,\n+\t}\n }\n \n // SetKeyVaultClientOptions specifies options for the client used to communicate with the key vault collection.\n@@ -94,7 +100,7 @@ func (a *AutoEncryptionOptions) SetBypassAutoEncryption(bypass bool) *AutoEncryp\n \n // SetExtraOptions specifies a map of options to configure the mongocryptd process or mongo_crypt shared library.\n //\n-// Supported Extra Options\n+// # Supported Extra Options\n //\n // \"mongocryptdURI\" - The mongocryptd URI. Allows setting a custom URI used to communicate with the\n // mongocryptd process. The default is \"mongodb://localhost:27020\", which works with the default\n@@ -194,6 +200,9 @@ func MergeAutoEncryptionOptions(opts ...*AutoEncryptionOptions) *AutoEncryptionO\n \t\tif opt.BypassQueryAnalysis != nil {\n \t\t\taeo.BypassQueryAnalysis = opt.BypassQueryAnalysis\n \t\t}\n+\t\tif opt.HTTPClient != nil {\n+\t\t\taeo.HTTPClient = opt.HTTPClient\n+\t\t}\n \t}\n \n \treturn aeo"
    },
    {
      "sha": "81ea42d42a249dcd858ed780106fd5454bd60670",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/options/clientencryptionoptions.go",
      "status": "modified",
      "additions": 16,
      "deletions": 7,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fclientencryptionoptions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fclientencryptionoptions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fclientencryptionoptions.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -9,18 +9,24 @@ package options\n import (\n \t\"crypto/tls\"\n \t\"fmt\"\n+\t\"net/http\"\n+\n+\t\"go.mongodb.org/mongo-driver/internal\"\n )\n \n // ClientEncryptionOptions represents all possible options used to configure a ClientEncryption instance.\n type ClientEncryptionOptions struct {\n \tKeyVaultNamespace string\n \tKmsProviders      map[string]map[string]interface{}\n \tTLSConfig         map[string]*tls.Config\n+\tHTTPClient        *http.Client\n }\n \n // ClientEncryption creates a new ClientEncryptionOptions instance.\n func ClientEncryption() *ClientEncryptionOptions {\n-\treturn &ClientEncryptionOptions{}\n+\treturn &ClientEncryptionOptions{\n+\t\tHTTPClient: internal.DefaultHTTPClient,\n+\t}\n }\n \n // SetKeyVaultNamespace specifies the namespace of the key vault collection. This is required.\n@@ -56,12 +62,12 @@ func (c *ClientEncryptionOptions) SetTLSConfig(tlsOpts map[string]*tls.Config) *\n // to the KMS provider. The input map should contain a mapping from each KMS provider to a document containing the necessary\n // options, as follows:\n //\n-// {\n-//\t\t\"kmip\": {\n-//\t\t\t\"tlsCertificateKeyFile\": \"foo.pem\",\n-// \t\t\t\"tlsCAFile\": \"fooCA.pem\"\n-//\t\t}\n-// }\n+//\t{\n+//\t\t\t\"kmip\": {\n+//\t\t\t\t\"tlsCertificateKeyFile\": \"foo.pem\",\n+//\t\t\t\t\"tlsCAFile\": \"fooCA.pem\"\n+//\t\t\t}\n+//\t}\n //\n // Currently, the following TLS options are supported:\n //\n@@ -132,6 +138,9 @@ func MergeClientEncryptionOptions(opts ...*ClientEncryptionOptions) *ClientEncry\n \t\tif opt.TLSConfig != nil {\n \t\t\tceo.TLSConfig = opt.TLSConfig\n \t\t}\n+\t\tif opt.HTTPClient != nil {\n+\t\t\tceo.HTTPClient = opt.HTTPClient\n+\t\t}\n \t}\n \n \treturn ceo"
    },
    {
      "sha": "4355b2f303383bb6e2c8392f6a05362f8e965e4b",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/options/clientoptions.go",
      "status": "modified",
      "additions": 20,
      "deletions": 5,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fclientoptions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fclientoptions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fclientoptions.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -16,6 +16,7 @@ import (\n \t\"fmt\"\n \t\"io/ioutil\"\n \t\"net\"\n+\t\"net/http\"\n \t\"strings\"\n \t\"time\"\n \n@@ -104,6 +105,7 @@ type ClientOptions struct {\n \tDisableOCSPEndpointCheck *bool\n \tHeartbeatInterval        *time.Duration\n \tHosts                    []string\n+\tHTTPClient               *http.Client\n \tLoadBalanced             *bool\n \tLocalThreshold           *time.Duration\n \tMaxConnIdleTime          *time.Duration\n@@ -162,7 +164,9 @@ type ClientOptions struct {\n \n // Client creates a new ClientOptions instance.\n func Client() *ClientOptions {\n-\treturn new(ClientOptions)\n+\treturn &ClientOptions{\n+\t\tHTTPClient: internal.DefaultHTTPClient,\n+\t}\n }\n \n // Validate validates the client options. This method will return the first error found.\n@@ -204,7 +208,7 @@ func (c *ClientOptions) validate() error {\n \t\tif c.ReplicaSet != nil {\n \t\t\treturn internal.ErrLoadBalancedWithReplicaSet\n \t\t}\n-\t\tif c.Direct != nil {\n+\t\tif c.Direct != nil && *c.Direct {\n \t\t\treturn internal.ErrLoadBalancedWithDirectConnection\n \t\t}\n \t}\n@@ -728,9 +732,9 @@ func (c *ClientOptions) SetSocketTimeout(d time.Duration) *ClientOptions {\n // be honored if there is no deadline on the operation Context. Timeout can also be set through the \"timeoutMS\" URI option\n // (e.g. \"timeoutMS=1000\"). The default value is nil, meaning operations do not inherit a timeout from the Client.\n //\n-// If any Timeout is set (even 0) on the Client, the values of MaxTime on operations, TransactionOptions.MaxCommitTime and\n-// SessionOptions.DefaultMaxCommitTime will be ignored. Setting Timeout and ClientOptions.SocketTimeout or WriteConcern.wTimeout\n-// will result in undefined behavior.\n+// If any Timeout is set (even 0) on the Client, the values of MaxTime on operation options, TransactionOptions.MaxCommitTime and\n+// SessionOptions.DefaultMaxCommitTime will be ignored. Setting Timeout and SocketTimeout or WriteConcern.wTimeout will result\n+// in undefined behavior.\n //\n // NOTE(benjirewis): SetTimeout represents unstable, provisional API. The behavior of the driver when a Timeout is specified is\n // subject to change.\n@@ -767,6 +771,14 @@ func (c *ClientOptions) SetTLSConfig(cfg *tls.Config) *ClientOptions {\n \treturn c\n }\n \n+// SetHTTPClient specifies the http.Client to be used for any HTTP requests.\n+//\n+// This should only be used to set custom HTTP client configurations. By default, the connection will use an internal.DefaultHTTPClient.\n+func (c *ClientOptions) SetHTTPClient(client *http.Client) *ClientOptions {\n+\tc.HTTPClient = client\n+\treturn c\n+}\n+\n // SetWriteConcern specifies the write concern to use to for write operations. This can also be set through the following\n // URI options:\n //\n@@ -889,6 +901,9 @@ func MergeClientOptions(opts ...*ClientOptions) *ClientOptions {\n \t\tif len(opt.Hosts) > 0 {\n \t\t\tc.Hosts = opt.Hosts\n \t\t}\n+\t\tif opt.HTTPClient != nil {\n+\t\t\tc.HTTPClient = opt.HTTPClient\n+\t\t}\n \t\tif opt.LoadBalanced != nil {\n \t\t\tc.LoadBalanced = opt.LoadBalanced\n \t\t}"
    },
    {
      "sha": "059805a6a004101f998d67209182aa02d5d6b40e",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/options/datakeyoptions.go",
      "status": "modified",
      "additions": 24,
      "deletions": 18,
      "changes": 42,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fdatakeyoptions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fdatakeyoptions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Foptions%2Fdatakeyoptions.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -29,30 +29,36 @@ func DataKey() *DataKeyOptions {\n // \"endpoint\" or \"keyVaultEndpoint\" must be a host name with an optional port number (e.g. \"foo.com\" or \"foo.com:443\").\n //\n // When using AWS, the document must have the format:\n-// {\n-//   region: <string>,\n-//   key: <string>,             // The Amazon Resource Name (ARN) to the AWS customer master key (CMK).\n-//   endpoint: Optional<string> // An alternate host identifier to send KMS requests to.\n-// }\n+//\n+//\t{\n+//\t  region: <string>,\n+//\t  key: <string>,             // The Amazon Resource Name (ARN) to the AWS customer master key (CMK).\n+//\t  endpoint: Optional<string> // An alternate host identifier to send KMS requests to.\n+//\t}\n+//\n // If unset, the \"endpoint\" defaults to \"kms.<region>.amazonaws.com\".\n //\n // When using Azure, the document must have the format:\n-// {\n-//   keyVaultEndpoint: <string>,  // A host identifier to send KMS requests to.\n-//   keyName: <string>,\n-//   keyVersion: Optional<string> // A specific version of the named key.\n-// }\n+//\n+//\t{\n+//\t  keyVaultEndpoint: <string>,  // A host identifier to send KMS requests to.\n+//\t  keyName: <string>,\n+//\t  keyVersion: Optional<string> // A specific version of the named key.\n+//\t}\n+//\n // If unset, \"keyVersion\" defaults to the key's primary version.\n //\n // When using GCP, the document must have the format:\n-// {\n-//   projectId: <string>,\n-//   location: <string>,\n-//   keyRing: <string>,\n-//   keyName: <string>,\n-//   keyVersion: Optional<string>, // A specific version of the named key.\n-//   endpoint: Optional<string>    // An alternate host identifier to send KMS requests to.\n-// }\n+//\n+//\t{\n+//\t  projectId: <string>,\n+//\t  location: <string>,\n+//\t  keyRing: <string>,\n+//\t  keyName: <string>,\n+//\t  keyVersion: Optional<string>, // A specific version of the named key.\n+//\t  endpoint: Optional<string>    // An alternate host identifier to send KMS requests to.\n+//\t}\n+//\n // If unset, \"keyVersion\" defaults to the key's primary version and \"endpoint\" defaults to \"cloudkms.googleapis.com\".\n func (dk *DataKeyOptions) SetMasterKey(masterKey interface{}) *DataKeyOptions {\n \tdk.MasterKey = masterKey"
    },
    {
      "sha": "37d5b757616c19b6253543be914290ef3122d0dd",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/mongo/session.go",
      "status": "modified",
      "additions": 17,
      "deletions": 4,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fsession.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fsession.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fmongo%2Fsession.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -206,11 +206,27 @@ func (s *sessionImpl) WithTransaction(ctx context.Context, fn func(sessCtx Sessi\n \t\t\treturn res, err\n \t\t}\n \n+\t\t// Check if callback intentionally aborted and, if so, return immediately\n+\t\t// with no error.\n \t\terr = s.clientSession.CheckAbortTransaction()\n \t\tif err != nil {\n \t\t\treturn res, nil\n \t\t}\n \n+\t\t// If context has errored, run AbortTransaction and return, as the CommitLoop\n+\t\t// has no chance of succeeding.\n+\t\t//\n+\t\t// Aborting after a failed CommitTransaction is dangerous. Failed transaction\n+\t\t// commits may unpin the session server-side, and subsequent transaction aborts\n+\t\t// may run on a new mongos which could end up with commit and abort being executed\n+\t\t// simultaneously.\n+\t\tif ctx.Err() != nil {\n+\t\t\t// Wrap the user-provided Context in a new one that behaves like context.Background() for deadlines and\n+\t\t\t// cancellations, but forwards Value requests to the original one.\n+\t\t\t_ = s.AbortTransaction(internal.NewBackgroundContext(ctx))\n+\t\t\treturn nil, ctx.Err()\n+\t\t}\n+\n \tCommitLoop:\n \t\tfor {\n \t\t\terr = s.CommitTransaction(ctx)\n@@ -308,10 +324,7 @@ func (s *sessionImpl) CommitTransaction(ctx context.Context) error {\n \t\tSession(s.clientSession).ClusterClock(s.client.clock).Database(\"admin\").Deployment(s.deployment).\n \t\tWriteConcern(s.clientSession.CurrentWc).ServerSelector(selector).Retry(driver.RetryOncePerCommand).\n \t\tCommandMonitor(s.client.monitor).RecoveryToken(bsoncore.Document(s.clientSession.RecoveryToken)).\n-\t\tServerAPI(s.client.serverAPI)\n-\tif s.clientSession.CurrentMct != nil {\n-\t\top.MaxTimeMS(int64(*s.clientSession.CurrentMct / time.Millisecond))\n-\t}\n+\t\tServerAPI(s.client.serverAPI).MaxTime(s.clientSession.CurrentMct)\n \n \terr = op.Execute(ctx)\n \t// Return error without updating transaction state if it is a timeout, as the transaction has not"
    },
    {
      "sha": "bde75421a241931bd7c3a82743defad3ea4a2bb0",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/version/version.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fversion%2Fversion.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fversion%2Fversion.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fversion%2Fversion.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -8,4 +8,4 @@\n package version // import \"go.mongodb.org/mongo-driver/version\"\n \n // Driver is the current version of the driver.\n-var Driver = \"v1.10.2\"\n+var Driver = \"v1.11.1\""
    },
    {
      "sha": "e35bd0cd9ad3eb6e713f0bff0b0259731e5c6ca6",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/bsonx/bsoncore/document_sequence.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fbsonx%2Fbsoncore%2Fdocument_sequence.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fbsonx%2Fbsoncore%2Fdocument_sequence.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fbsonx%2Fbsoncore%2Fdocument_sequence.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -96,8 +96,8 @@ func (ds *DocumentSequence) Empty() bool {\n \t}\n }\n \n-//ResetIterator resets the iteration point for the Next method to the beginning of the document\n-//sequence.\n+// ResetIterator resets the iteration point for the Next method to the beginning of the document\n+// sequence.\n func (ds *DocumentSequence) ResetIterator() {\n \tif ds == nil {\n \t\treturn"
    },
    {
      "sha": "6eeaf0ee01cc7e9ebdac5b4fa004c5341eebc3b5",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/auth/auth.go",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Fauth.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Fauth.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Fauth.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -10,6 +10,7 @@ import (\n \t\"context\"\n \t\"errors\"\n \t\"fmt\"\n+\t\"net/http\"\n \n \t\"go.mongodb.org/mongo-driver/mongo/address\"\n \t\"go.mongodb.org/mongo-driver/mongo/description\"\n@@ -60,6 +61,7 @@ type HandshakeOptions struct {\n \tClusterClock          *session.ClusterClock\n \tServerAPI             *driver.ServerAPIOptions\n \tLoadBalanced          bool\n+\tHTTPClient            *http.Client\n }\n \n type authHandshaker struct {\n@@ -130,6 +132,7 @@ func (ah *authHandshaker) FinishHandshake(ctx context.Context, conn driver.Conne\n \t\t\tClusterClock:  ah.options.ClusterClock,\n \t\t\tHandshakeInfo: ah.handshakeInfo,\n \t\t\tServerAPI:     ah.options.ServerAPI,\n+\t\t\tHTTPClient:    ah.options.HTTPClient,\n \t\t}\n \n \t\tif err := ah.authenticate(ctx, cfg); err != nil {\n@@ -174,6 +177,7 @@ type Config struct {\n \tClusterClock  *session.ClusterClock\n \tHandshakeInfo driver.HandshakeInformation\n \tServerAPI     *driver.ServerAPIOptions\n+\tHTTPClient    *http.Client\n }\n \n // Authenticator handles authenticating a connection."
    },
    {
      "sha": "8509abfbde8287c703330fcabe9644c1b0072dfb",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/auth/aws_conv.go",
      "status": "modified",
      "additions": 14,
      "deletions": 13,
      "changes": 27,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Faws_conv.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Faws_conv.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Faws_conv.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -36,12 +36,13 @@ const (\n )\n \n type awsConversation struct {\n-\tstate    clientState\n-\tvalid    bool\n-\tnonce    []byte\n-\tusername string\n-\tpassword string\n-\ttoken    string\n+\tstate      clientState\n+\tvalid      bool\n+\tnonce      []byte\n+\tusername   string\n+\tpassword   string\n+\ttoken      string\n+\thttpClient *http.Client\n }\n \n type serverMessage struct {\n@@ -147,14 +148,14 @@ func (ac *awsConversation) validateAndMakeCredentials() (*awsv4.StaticProvider,\n \treturn nil, nil\n }\n \n-func executeAWSHTTPRequest(req *http.Request) ([]byte, error) {\n+func executeAWSHTTPRequest(httpClient *http.Client, req *http.Request) ([]byte, error) {\n \tctx, cancel := context.WithTimeout(context.Background(), defaultHTTPTimeout)\n \tdefer cancel()\n-\tresp, err := http.DefaultClient.Do(req.WithContext(ctx))\n+\tresp, err := httpClient.Do(req.WithContext(ctx))\n \tif err != nil {\n \t\treturn nil, err\n \t}\n-\tdefer func() { _ = resp.Body.Close() }()\n+\tdefer resp.Body.Close()\n \n \treturn ioutil.ReadAll(resp.Body)\n }\n@@ -167,7 +168,7 @@ func (ac *awsConversation) getEC2Credentials() (*awsv4.StaticProvider, error) {\n \t}\n \treq.Header.Set(\"X-aws-ec2-metadata-token-ttl-seconds\", \"30\")\n \n-\ttoken, err := executeAWSHTTPRequest(req)\n+\ttoken, err := executeAWSHTTPRequest(ac.httpClient, req)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n@@ -183,7 +184,7 @@ func (ac *awsConversation) getEC2Credentials() (*awsv4.StaticProvider, error) {\n \t}\n \treq.Header.Set(\"X-aws-ec2-metadata-token\", tokenStr)\n \n-\trole, err := executeAWSHTTPRequest(req)\n+\trole, err := executeAWSHTTPRequest(ac.httpClient, req)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n@@ -198,7 +199,7 @@ func (ac *awsConversation) getEC2Credentials() (*awsv4.StaticProvider, error) {\n \t\treturn nil, err\n \t}\n \treq.Header.Set(\"X-aws-ec2-metadata-token\", tokenStr)\n-\tcreds, err := executeAWSHTTPRequest(req)\n+\tcreds, err := executeAWSHTTPRequest(ac.httpClient, req)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n@@ -242,7 +243,7 @@ func (ac *awsConversation) getCredentials() (*awsv4.StaticProvider, error) {\n \t\t\treturn nil, err\n \t\t}\n \n-\t\tbody, err := executeAWSHTTPRequest(req)\n+\t\tbody, err := executeAWSHTTPRequest(ac.httpClient, req)\n \t\tif err != nil {\n \t\t\treturn nil, err\n \t\t}"
    },
    {
      "sha": "8982f04da6f8b8cec6ef2e782238a49209f43278",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/auth/mongodbaws.go",
      "status": "modified",
      "additions": 9,
      "deletions": 3,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Fmongodbaws.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Fmongodbaws.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fauth%2Fmongodbaws.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -8,6 +8,7 @@ package auth\n \n import (\n \t\"context\"\n+\t\"errors\"\n )\n \n // MongoDBAWS is the mechanism name for MongoDBAWS.\n@@ -35,11 +36,16 @@ type MongoDBAWSAuthenticator struct {\n \n // Auth authenticates the connection.\n func (a *MongoDBAWSAuthenticator) Auth(ctx context.Context, cfg *Config) error {\n+\thttpClient := cfg.HTTPClient\n+\tif httpClient == nil {\n+\t\treturn errors.New(\"cfg.HTTPClient must not be nil\")\n+\t}\n \tadapter := &awsSaslAdapter{\n \t\tconversation: &awsConversation{\n-\t\t\tusername: a.username,\n-\t\t\tpassword: a.password,\n-\t\t\ttoken:    a.sessionToken,\n+\t\t\tusername:   a.username,\n+\t\t\tpassword:   a.password,\n+\t\t\ttoken:      a.sessionToken,\n+\t\t\thttpClient: httpClient,\n \t\t},\n \t}\n \terr := ConductSaslConversation(ctx, cfg, a.source, adapter)"
    },
    {
      "sha": "032bbeb9016e1009f491f62743186104e74d2968",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/batch_cursor.go",
      "status": "modified",
      "additions": 6,
      "deletions": 11,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fbatch_cursor.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fbatch_cursor.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fbatch_cursor.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -11,10 +11,10 @@ import (\n \t\"errors\"\n \t\"fmt\"\n \t\"strings\"\n-\t\"time\"\n \n \t\"go.mongodb.org/mongo-driver/bson/bsontype\"\n \t\"go.mongodb.org/mongo-driver/event\"\n+\t\"go.mongodb.org/mongo-driver/internal\"\n \t\"go.mongodb.org/mongo-driver/mongo/description\"\n \t\"go.mongodb.org/mongo-driver/x/bsonx/bsoncore\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver/session\"\n@@ -305,7 +305,7 @@ func (bc *BatchCursor) KillCursor(ctx context.Context) error {\n \t\tLegacy:         LegacyKillCursors,\n \t\tCommandMonitor: bc.cmdMonitor,\n \t\tServerAPI:      bc.serverAPI,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n }\n \n func (bc *BatchCursor) getMore(ctx context.Context) {\n@@ -384,7 +384,7 @@ func (bc *BatchCursor) getMore(ctx context.Context) {\n \t\tCommandMonitor: bc.cmdMonitor,\n \t\tCrypt:          bc.crypt,\n \t\tServerAPI:      bc.serverAPI,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \n \t// Once the cursor has been drained, we can unpin the connection if one is currently pinned.\n \tif bc.id == 0 {\n@@ -455,14 +455,9 @@ func (lbcd *loadBalancedCursorDeployment) Connection(_ context.Context) (Connect\n \treturn lbcd.conn, nil\n }\n \n-// MinRTT always returns 0. It implements the driver.Server interface.\n-func (lbcd *loadBalancedCursorDeployment) MinRTT() time.Duration {\n-\treturn 0\n-}\n-\n-// RTT90 always returns 0. It implements the driver.Server interface.\n-func (lbcd *loadBalancedCursorDeployment) RTT90() time.Duration {\n-\treturn 0\n+// RTTMonitor implements the driver.Server interface.\n+func (lbcd *loadBalancedCursorDeployment) RTTMonitor() RTTMonitor {\n+\treturn &internal.ZeroRTTMonitor{}\n }\n \n func (lbcd *loadBalancedCursorDeployment) ProcessError(err error, conn Connection) ProcessErrorResult {"
    },
    {
      "sha": "6f03a5857793605dfa90154c55a902ca78a136ed",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/connstring/connstring.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fconnstring%2Fconnstring.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fconnstring%2Fconnstring.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fconnstring%2Fconnstring.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -494,7 +494,7 @@ func (p *parser) validateAuth() error {\n \t\t\treturn fmt.Errorf(\"username required for GSSAPI\")\n \t\t}\n \t\tfor k := range p.AuthMechanismProperties {\n-\t\t\tif k != \"SERVICE_NAME\" && k != \"CANONICALIZE_HOST_NAME\" && k != \"SERVICE_REALM\" {\n+\t\t\tif k != \"SERVICE_NAME\" && k != \"CANONICALIZE_HOST_NAME\" && k != \"SERVICE_REALM\" && k != \"SERVICE_HOST\" {\n \t\t\t\treturn fmt.Errorf(\"invalid auth property for GSSAPI\")\n \t\t\t}\n \t\t}"
    },
    {
      "sha": "cd918fc46c672a62258669302d94a2b7d47aae99",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/crypt.go",
      "status": "modified",
      "additions": 90,
      "deletions": 1,
      "changes": 91,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fcrypt.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fcrypt.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fcrypt.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -9,12 +9,17 @@ package driver\n import (\n \t\"context\"\n \t\"crypto/tls\"\n+\t\"encoding/json\"\n \t\"fmt\"\n \t\"io\"\n+\t\"io/ioutil\"\n+\t\"net/http\"\n+\t\"os\"\n \t\"strings\"\n \t\"time\"\n \n \t\"go.mongodb.org/mongo-driver/bson/bsontype\"\n+\t\"go.mongodb.org/mongo-driver/internal\"\n \t\"go.mongodb.org/mongo-driver/x/bsonx/bsoncore\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver/mongocrypt\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver/mongocrypt/options\"\n@@ -41,6 +46,7 @@ type CryptOptions struct {\n \tKeyFn                KeyRetrieverFn\n \tMarkFn               MarkCommandFn\n \tTLSConfig            map[string]*tls.Config\n+\tHTTPClient           *http.Client\n \tBypassAutoEncryption bool\n \tBypassQueryAnalysis  bool\n }\n@@ -78,20 +84,26 @@ type crypt struct {\n \tkeyFn      KeyRetrieverFn\n \tmarkFn     MarkCommandFn\n \ttlsConfig  map[string]*tls.Config\n+\thttpClient *http.Client\n \n \tbypassAutoEncryption bool\n }\n \n // NewCrypt creates a new Crypt instance configured with the given AutoEncryptionOptions.\n func NewCrypt(opts *CryptOptions) Crypt {\n-\treturn &crypt{\n+\tc := &crypt{\n \t\tmongoCrypt:           opts.MongoCrypt,\n \t\tcollInfoFn:           opts.CollInfoFn,\n \t\tkeyFn:                opts.KeyFn,\n \t\tmarkFn:               opts.MarkFn,\n \t\ttlsConfig:            opts.TLSConfig,\n+\t\thttpClient:           opts.HTTPClient,\n \t\tbypassAutoEncryption: opts.BypassAutoEncryption,\n \t}\n+\tif c.httpClient == nil {\n+\t\tc.httpClient = internal.DefaultHTTPClient\n+\t}\n+\treturn c\n }\n \n // Encrypt encrypts the given command.\n@@ -226,6 +238,9 @@ func (c *crypt) DecryptExplicit(ctx context.Context, subtype byte, data []byte)\n // Close cleans up any resources associated with the Crypt instance.\n func (c *crypt) Close() {\n \tc.mongoCrypt.Close()\n+\tif c.httpClient == internal.DefaultHTTPClient {\n+\t\tinternal.CloseIdleHTTPConnections(c.httpClient)\n+\t}\n }\n \n func (c *crypt) BypassAutoEncryption() bool {\n@@ -249,6 +264,8 @@ func (c *crypt) executeStateMachine(ctx context.Context, cryptCtx *mongocrypt.Co\n \t\t\treturn cryptCtx.Finish()\n \t\tcase mongocrypt.Done:\n \t\t\treturn nil, nil\n+\t\tcase mongocrypt.NeedKmsCredentials:\n+\t\t\terr = c.provideKmsProviders(ctx, cryptCtx)\n \t\tdefault:\n \t\t\treturn nil, fmt.Errorf(\"invalid Crypt state: %v\", state)\n \t\t}\n@@ -382,3 +399,75 @@ func (c *crypt) decryptKey(kmsCtx *mongocrypt.KmsContext) error {\n \t\t}\n \t}\n }\n+\n+// needsKmsProvider returns true if provider was initially set to an empty document.\n+// An empty document signals the driver to fetch credentials.\n+func needsKmsProvider(kmsProviders bsoncore.Document, provider string) bool {\n+\tval, err := kmsProviders.LookupErr(provider)\n+\tif err != nil {\n+\t\t// KMS provider is not configured.\n+\t\treturn false\n+\t}\n+\tdoc, ok := val.DocumentOK()\n+\t// KMS provider is an empty document.\n+\treturn ok && len(doc) == 5\n+}\n+\n+func getGCPAccessToken(ctx context.Context, httpClient *http.Client) (string, error) {\n+\tmetadataHost := \"metadata.google.internal\"\n+\tif envhost := os.Getenv(\"GCE_METADATA_HOST\"); envhost != \"\" {\n+\t\tmetadataHost = envhost\n+\t}\n+\turl := fmt.Sprintf(\"http://%s/computeMetadata/v1/instance/service-accounts/default/token\", metadataHost)\n+\treq, err := http.NewRequest(\"GET\", url, nil)\n+\tif err != nil {\n+\t\treturn \"\", internal.WrapErrorf(err, \"unable to retrieve GCP credentials\")\n+\t}\n+\treq.Header.Set(\"Metadata-Flavor\", \"Google\")\n+\tresp, err := httpClient.Do(req.WithContext(ctx))\n+\tif err != nil {\n+\t\treturn \"\", internal.WrapErrorf(err, \"unable to retrieve GCP credentials\")\n+\t}\n+\tdefer resp.Body.Close()\n+\tbody, err := ioutil.ReadAll(resp.Body)\n+\tif err != nil {\n+\t\treturn \"\", internal.WrapErrorf(err, \"unable to retrieve GCP credentials: error reading response body\")\n+\t}\n+\tif resp.StatusCode != http.StatusOK {\n+\t\treturn \"\", internal.WrapErrorf(err, \"unable to retrieve GCP credentials: expected StatusCode 200, got StatusCode: %v. Response body: %s\", resp.StatusCode, body)\n+\t}\n+\tvar tokenResponse struct {\n+\t\tAccessToken string `json:\"access_token\"`\n+\t}\n+\t// Attempt to read body as JSON\n+\terr = json.Unmarshal(body, &tokenResponse)\n+\tif err != nil {\n+\t\treturn \"\", internal.WrapErrorf(err, \"unable to retrieve GCP credentials: error reading body JSON. Response body: %s\", body)\n+\t}\n+\tif tokenResponse.AccessToken == \"\" {\n+\t\treturn \"\", fmt.Errorf(\"unable to retrieve GCP credentials: got unexpected empty accessToken from GCP Metadata Server. Response body: %s\", body)\n+\t}\n+\treturn tokenResponse.AccessToken, nil\n+}\n+\n+func (c *crypt) provideKmsProviders(ctx context.Context, cryptCtx *mongocrypt.Context) error {\n+\tkmsProviders := c.mongoCrypt.GetKmsProviders()\n+\tbuilder := bsoncore.NewDocumentBuilder()\n+\n+\tif needsKmsProvider(kmsProviders, \"gcp\") {\n+\t\t// \"gcp\" KMS provider is an empty document.\n+\t\t// Attempt to fetch from GCP Instance Metadata server.\n+\t\t{\n+\t\t\ttoken, err := getGCPAccessToken(ctx, c.httpClient)\n+\t\t\tif err != nil {\n+\t\t\t\treturn err\n+\t\t\t}\n+\t\t\tbuilder.StartDocument(\"gcp\").\n+\t\t\t\tAppendString(\"accessToken\", token).\n+\t\t\t\tFinishDocument()\n+\n+\t\t}\n+\t}\n+\n+\treturn cryptCtx.ProvideKmsProviders(builder.Build())\n+}"
    },
    {
      "sha": "2ca9ab38b3d23316b408f2a68a33777c150e2884",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/driver.go",
      "status": "modified",
      "additions": 30,
      "deletions": 18,
      "changes": 48,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fdriver.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fdriver.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fdriver.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -10,6 +10,7 @@ import (\n \t\"context\"\n \t\"time\"\n \n+\t\"go.mongodb.org/mongo-driver/internal\"\n \t\"go.mongodb.org/mongo-driver/mongo/address\"\n \t\"go.mongodb.org/mongo-driver/mongo/description\"\n \t\"go.mongodb.org/mongo-driver/x/bsonx/bsoncore\"\n@@ -51,11 +52,8 @@ type Subscriber interface {\n type Server interface {\n \tConnection(context.Context) (Connection, error)\n \n-\t// MinRTT returns the minimum round-trip time to the server observed over the window period.\n-\tMinRTT() time.Duration\n-\n-\t// RTT90 returns the 90th percentile round-trip time to the server observed over the window period.\n-\tRTT90() time.Duration\n+\t// RTTMonitor returns the round-trip time monitor associated with this server.\n+\tRTTMonitor() RTTMonitor\n }\n \n // Connection represents a connection to a MongoDB server.\n@@ -75,6 +73,23 @@ type Connection interface {\n \tStale() bool\n }\n \n+// RTTMonitor represents a round-trip-time monitor.\n+type RTTMonitor interface {\n+\t// EWMA returns the exponentially weighted moving average observed round-trip time.\n+\tEWMA() time.Duration\n+\n+\t// Min returns the minimum observed round-trip time over the window period.\n+\tMin() time.Duration\n+\n+\t// P90 returns the 90th percentile observed round-trip time over the window period.\n+\tP90() time.Duration\n+\n+\t// Stats returns stringified stats of the current state of the monitor.\n+\tStats() string\n+}\n+\n+var _ RTTMonitor = &internal.ZeroRTTMonitor{}\n+\n // PinnedConnection represents a Connection that can be pinned by one or more cursors or transactions. Implementations\n // of this interface should maintain the following invariants:\n //\n@@ -212,14 +227,9 @@ func (ssd SingleConnectionDeployment) Connection(context.Context) (Connection, e\n \treturn ssd.C, nil\n }\n \n-// MinRTT always returns 0. It implements the driver.Server interface.\n-func (ssd SingleConnectionDeployment) MinRTT() time.Duration {\n-\treturn 0\n-}\n-\n-// RTT90 always returns 0. It implements the driver.Server interface.\n-func (ssd SingleConnectionDeployment) RTT90() time.Duration {\n-\treturn 0\n+// RTTMonitor implements the driver.Server interface.\n+func (ssd SingleConnectionDeployment) RTTMonitor() RTTMonitor {\n+\treturn &internal.ZeroRTTMonitor{}\n }\n \n // TODO(GODRIVER-617): We can likely use 1 type for both the Type and the RetryMode by using 2 bits for the mode and 1\n@@ -241,15 +251,17 @@ const (\n // RetryMode specifies the way that retries are handled for retryable operations.\n type RetryMode uint\n \n-// These are the modes available for retrying.\n+// These are the modes available for retrying. Note that if Timeout is specified on the Client, the\n+// operation will automatically retry as many times as possible within the context's deadline\n+// unless RetryNone is used.\n const (\n \t// RetryNone disables retrying.\n \tRetryNone RetryMode = iota\n-\t// RetryOnce will enable retrying the entire operation once.\n+\t// RetryOnce will enable retrying the entire operation once if Timeout is not specified.\n \tRetryOnce\n-\t// RetryOncePerCommand will enable retrying each command associated with an operation. For\n-\t// example, if an insert is batch split into 4 commands then each of those commands is eligible\n-\t// for one retry.\n+\t// RetryOncePerCommand will enable retrying each command associated with an operation if Timeout\n+\t// is not specified. For example, if an insert is batch split into 4 commands then each of\n+\t// those commands is eligible for one retry.\n \tRetryOncePerCommand\n \t// RetryContext will enable retrying until the context.Context's deadline is exceeded or it is\n \t// cancelled."
    },
    {
      "sha": "cb56b84f506d0f8de831ac4a0ec0dc947e238bb8",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/errors.go",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ferrors.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ferrors.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ferrors.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -37,6 +37,8 @@ var (\n \tNetworkError = \"NetworkError\"\n \t// RetryableWriteError is an error lable for retryable write errors.\n \tRetryableWriteError = \"RetryableWriteError\"\n+\t// NoWritesPerformed is an error label indicated that no writes were performed for an operation.\n+\tNoWritesPerformed = \"NoWritesPerformed\"\n \t// ErrCursorNotFound is the cursor not found error for legacy find operations.\n \tErrCursorNotFound = errors.New(\"cursor not found\")\n \t// ErrUnacknowledgedWrite is returned from functions that have an unacknowledged\n@@ -48,6 +50,8 @@ var (\n \t// ErrDeadlineWouldBeExceeded is returned when a Timeout set on an operation would be exceeded\n \t// if the operation were sent to the server.\n \tErrDeadlineWouldBeExceeded = errors.New(\"operation not sent to server, as Timeout would be exceeded\")\n+\t// ErrNegativeMaxTime is returned when MaxTime on an operation is a negative value.\n+\tErrNegativeMaxTime = errors.New(\"a negative value was provided for MaxTime on an operation\")\n )\n \n // QueryFailureError is an error representing a command failure as a document.\n@@ -130,6 +134,18 @@ func (wce WriteCommandError) Retryable(wireVersion *description.VersionRange) bo\n \treturn (*wce.WriteConcernError).Retryable()\n }\n \n+// HasErrorLabel returns true if the error contains the specified label.\n+func (wce WriteCommandError) HasErrorLabel(label string) bool {\n+\tif wce.Labels != nil {\n+\t\tfor _, l := range wce.Labels {\n+\t\t\tif l == label {\n+\t\t\t\treturn true\n+\t\t\t}\n+\t\t}\n+\t}\n+\treturn false\n+}\n+\n // WriteConcernError is a write concern failure that occurred as a result of a\n // write operation.\n type WriteConcernError struct {"
    },
    {
      "sha": "a6a60c7304d4981f52c9aab8fede7d5be0f30049",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/mongocrypt/mongocrypt.go",
      "status": "modified",
      "additions": 11,
      "deletions": 2,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Fmongocrypt.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Fmongocrypt.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Fmongocrypt.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -26,7 +26,8 @@ import (\n )\n \n type MongoCrypt struct {\n-\twrapped *C.mongocrypt_t\n+\twrapped      *C.mongocrypt_t\n+\tkmsProviders bsoncore.Document\n }\n \n // Version returns the version string for the loaded libmongocrypt, or an empty string\n@@ -44,7 +45,8 @@ func NewMongoCrypt(opts *options.MongoCryptOptions) (*MongoCrypt, error) {\n \t\treturn nil, errors.New(\"could not create new mongocrypt object\")\n \t}\n \tcrypt := &MongoCrypt{\n-\t\twrapped: wrapped,\n+\t\twrapped:      wrapped,\n+\t\tkmsProviders: opts.KmsProviders,\n \t}\n \n \t// set options in mongocrypt\n@@ -76,6 +78,8 @@ func NewMongoCrypt(opts *options.MongoCryptOptions) (*MongoCrypt, error) {\n \t\t}\n \t}\n \n+\tC.mongocrypt_setopt_use_need_kms_credentials_state(crypt.wrapped)\n+\n \t// initialize handle\n \tif !C.mongocrypt_init(crypt.wrapped) {\n \t\treturn nil, crypt.createErrorFromStatus()\n@@ -405,3 +409,8 @@ func (m *MongoCrypt) createErrorFromStatus() error {\n \tC.mongocrypt_status(m.wrapped, status)\n \treturn errorFromStatus(status)\n }\n+\n+// GetKmsProviders returns the originally configured KMS providers.\n+func (m *MongoCrypt) GetKmsProviders() bsoncore.Document {\n+\treturn m.kmsProviders\n+}"
    },
    {
      "sha": "04e98d01c17092b5c6b3d95cfa142fa6a0c74515",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/mongocrypt/mongocrypt_context.go",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Fmongocrypt_context.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Fmongocrypt_context.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Fmongocrypt_context.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -102,3 +102,14 @@ func (c *Context) createErrorFromStatus() error {\n \tC.mongocrypt_ctx_status(c.wrapped, status)\n \treturn errorFromStatus(status)\n }\n+\n+// ProvideKmsProviders provides the KMS providers when in the NeedKmsCredentials state.\n+func (c *Context) ProvideKmsProviders(kmsProviders bsoncore.Document) error {\n+\tkmsProvidersBinary := newBinaryFromBytes(kmsProviders)\n+\tdefer kmsProvidersBinary.close()\n+\n+\tif ok := C.mongocrypt_ctx_provide_kms_providers(c.wrapped, kmsProvidersBinary.wrapped); !ok {\n+\t\treturn c.createErrorFromStatus()\n+\t}\n+\treturn nil\n+}"
    },
    {
      "sha": "2e2776914a5ef6e8e29f3d7ae4c7c92561756a28",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/mongocrypt/mongocrypt_context_not_enabled.go",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Fmongocrypt_context_not_enabled.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Fmongocrypt_context_not_enabled.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Fmongocrypt_context_not_enabled.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -55,3 +55,8 @@ func (c *Context) Finish() (bsoncore.Document, error) {\n func (c *Context) Close() {\n \tpanic(cseNotSupportedMsg)\n }\n+\n+// ProvideKmsProviders provides the KMS providers when in the NeedKmsCredentials state.\n+func (c *Context) ProvideKmsProviders(kmsProviders bsoncore.Document) error {\n+\tpanic(cseNotSupportedMsg)\n+}"
    },
    {
      "sha": "a333dc536fd8f6efac15a6bf90862fc0b1aed006",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/mongocrypt/mongocrypt_not_enabled.go",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Fmongocrypt_not_enabled.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Fmongocrypt_not_enabled.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Fmongocrypt_not_enabled.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -76,3 +76,8 @@ func (m *MongoCrypt) CryptSharedLibVersionString() string {\n func (m *MongoCrypt) Close() {\n \tpanic(cseNotSupportedMsg)\n }\n+\n+// GetKmsProviders returns the originally configured KMS providers.\n+func (m *MongoCrypt) GetKmsProviders() bsoncore.Document {\n+\tpanic(cseNotSupportedMsg)\n+}"
    },
    {
      "sha": "60546160ce1bbd7d522390d1a0161bd4cf8dd436",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/mongocrypt/state.go",
      "status": "modified",
      "additions": 11,
      "deletions": 7,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Fstate.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Fstate.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fmongocrypt%2Fstate.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -10,14 +10,16 @@ package mongocrypt\n type State int\n \n // These constants are valid values for the State type.\n+// The values must match the values defined in the mongocrypt_ctx_state_t enum in libmongocrypt.\n const (\n-\tStateError State = iota\n-\tNeedMongoCollInfo\n-\tNeedMongoMarkings\n-\tNeedMongoKeys\n-\tNeedKms\n-\tReady\n-\tDone\n+\tStateError         State = 0\n+\tNeedMongoCollInfo  State = 1\n+\tNeedMongoMarkings  State = 2\n+\tNeedMongoKeys      State = 3\n+\tNeedKms            State = 4\n+\tReady              State = 5\n+\tDone               State = 6\n+\tNeedKmsCredentials State = 7\n )\n \n // String implements the Stringer interface.\n@@ -37,6 +39,8 @@ func (s State) String() string {\n \t\treturn \"Ready\"\n \tcase Done:\n \t\treturn \"Done\"\n+\tcase NeedKmsCredentials:\n+\t\treturn \"NeedKmsCredentials\"\n \tdefault:\n \t\treturn \"Unknown State\"\n \t}"
    },
    {
      "sha": "4cb14e4d01bd64331a0776ce9ee924ea8e09bc90",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/ocsp/config.go",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Focsp%2Fconfig.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Focsp%2Fconfig.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Focsp%2Fconfig.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -10,7 +10,9 @@ import (\n \t\"crypto/x509\"\n \t\"errors\"\n \t\"fmt\"\n+\t\"net/http\"\n \n+\t\"go.mongodb.org/mongo-driver/internal\"\n \t\"golang.org/x/crypto/ocsp\"\n )\n \n@@ -20,12 +22,18 @@ type config struct {\n \tdisableEndpointChecking bool\n \tocspRequest             *ocsp.Request\n \tocspRequestBytes        []byte\n+\thttpClient              *http.Client\n }\n \n func newConfig(certChain []*x509.Certificate, opts *VerifyOptions) (config, error) {\n \tcfg := config{\n \t\tcache:                   opts.Cache,\n \t\tdisableEndpointChecking: opts.DisableEndpointChecking,\n+\t\thttpClient:              opts.HTTPClient,\n+\t}\n+\n+\tif cfg.httpClient == nil {\n+\t\tcfg.httpClient = internal.DefaultHTTPClient\n \t}\n \n \tif len(certChain) == 0 {"
    },
    {
      "sha": "0e7dbfe2d5d3cc3e146393ce944e4c41d23bc31e",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/ocsp/ocsp.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Focsp%2Focsp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Focsp%2Focsp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Focsp%2Focsp.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -240,7 +240,7 @@ func contactResponders(ctx context.Context, cfg config) *ResponseDetails {\n \t\t\t}\n \t\t\trequest = request.WithContext(ctx)\n \n-\t\t\thttpResponse, err := http.DefaultClient.Do(request)\n+\t\t\thttpResponse, err := cfg.httpClient.Do(request)\n \t\t\tif err != nil {\n \t\t\t\treturn nil\n \t\t\t}"
    },
    {
      "sha": "281bf515b7eb4c93058ec17a082bc992357802ca",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/ocsp/options.go",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Focsp%2Foptions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Focsp%2Foptions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Focsp%2Foptions.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -6,8 +6,11 @@\n \n package ocsp\n \n+import \"net/http\"\n+\n // VerifyOptions specifies options to configure OCSP verification.\n type VerifyOptions struct {\n \tCache                   Cache\n \tDisableEndpointChecking bool\n+\tHTTPClient              *http.Client\n }"
    },
    {
      "sha": "bbc25ecf221726db8d0dec6129df6852666e469e",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation.go",
      "status": "modified",
      "additions": 203,
      "deletions": 80,
      "changes": 283,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -13,6 +13,7 @@ import (\n \t\"fmt\"\n \t\"strconv\"\n \t\"strings\"\n+\t\"sync\"\n \t\"time\"\n \n \t\"go.mongodb.org/mongo-driver/bson\"\n@@ -58,6 +59,12 @@ type RetryablePoolError interface {\n \tRetryable() bool\n }\n \n+// labeledError is an error that can have error labels added to it.\n+type labeledError interface {\n+\terror\n+\tHasErrorLabel(string) bool\n+}\n+\n // InvalidOperationError is returned from Validate and indicates that a required field is missing\n // from an instance of Operation.\n type InvalidOperationError struct{ MissingField string }\n@@ -185,6 +192,8 @@ type Operation struct {\n \t// RetryMode specifies how to retry. There are three modes that enable retry: RetryOnce,\n \t// RetryOncePerCommand, and RetryContext. For more information about what these modes do, please\n \t// refer to their definitions. Both RetryMode and Type must be set for retryability to be enabled.\n+\t// If Timeout is set on the Client, the operation will automatically retry as many times as\n+\t// possible unless RetryNone is used.\n \tRetryMode *RetryMode\n \n \t// Type specifies the kind of operation this is. There is only one mode that enables retry: Write.\n@@ -217,6 +226,9 @@ type Operation struct {\n \t// read preference will not be added to the command on wire versions < 13.\n \tIsOutputAggregate bool\n \n+\t// MaxTime specifies the maximum amount of time to allow the operation to run on the server.\n+\tMaxTime *time.Duration\n+\n \t// Timeout is the amount of time that this operation can execute before returning an error. The default value\n \t// nil, which means that the timeout of the operation's caller will be used.\n \tTimeout *time.Duration\n@@ -306,9 +318,17 @@ func (op Operation) Validate() error {\n \treturn nil\n }\n \n-// Execute runs this operation. The scratch parameter will be used and overwritten (potentially many\n-// times), this should mainly be used to enable pooling of byte slices.\n-func (op Operation) Execute(ctx context.Context, scratch []byte) error {\n+var memoryPool = sync.Pool{\n+\tNew: func() interface{} {\n+\t\t// Start with 1kb buffers.\n+\t\tb := make([]byte, 1024)\n+\t\t// Return a pointer as the static analysis tool suggests.\n+\t\treturn &b\n+\t},\n+}\n+\n+// Execute runs this operation.\n+func (op Operation) Execute(ctx context.Context) error {\n \terr := op.Validate()\n \tif err != nil {\n \t\treturn err\n@@ -352,14 +372,20 @@ func (op Operation) Execute(ctx context.Context, scratch []byte) error {\n \t\t\t}\n \t\t}\n \t}\n+\t// If context is a Timeout context, automatically set retries to -1 (infinite) if retrying is\n+\t// enabled.\n+\tretryEnabled := op.RetryMode != nil && op.RetryMode.Enabled()\n+\tif internal.IsTimeoutContext(ctx) && retryEnabled {\n+\t\tretries = -1\n+\t}\n \n \tvar srvr Server\n \tvar conn Connection\n \tvar res bsoncore.Document\n \tvar operationErr WriteCommandError\n \tvar prevErr error\n+\tvar prevIndefiniteErr error\n \tbatching := op.Batches.Valid()\n-\tretryEnabled := op.RetryMode != nil && op.RetryMode.Enabled()\n \tretrySupported := false\n \tfirst := true\n \tcurrIndex := 0\n@@ -369,6 +395,26 @@ func (op Operation) Execute(ctx context.Context, scratch []byte) error {\n \tresetForRetry := func(err error) {\n \t\tretries--\n \t\tprevErr = err\n+\n+\t\t// Set the previous indefinite error to be returned in any case where a retryable write error does not have a\n+\t\t// NoWritesPerfomed label (the definite case).\n+\t\tswitch err := err.(type) {\n+\t\tcase labeledError:\n+\t\t\t// If the \"prevIndefiniteErr\" is nil, then the current error is the first error encountered\n+\t\t\t// during the retry attempt cycle. We must persist the first error in the case where all\n+\t\t\t// following errors are labeled \"NoWritesPerformed\", which would otherwise raise nil as the\n+\t\t\t// error.\n+\t\t\tif prevIndefiniteErr == nil {\n+\t\t\t\tprevIndefiniteErr = err\n+\t\t\t}\n+\n+\t\t\t// If the error is not labeled NoWritesPerformed and is retryable, then set the previous\n+\t\t\t// indefinite error to be the current error.\n+\t\t\tif !err.HasErrorLabel(NoWritesPerformed) && err.HasErrorLabel(RetryableWriteError) {\n+\t\t\t\tprevIndefiniteErr = err\n+\t\t\t}\n+\t\t}\n+\n \t\t// If we got a connection, close it immediately to release pool resources for\n \t\t// subsequent retries.\n \t\tif conn != nil {\n@@ -379,6 +425,19 @@ func (op Operation) Execute(ctx context.Context, scratch []byte) error {\n \t\tconn = nil\n \t}\n \n+\twm := memoryPool.Get().(*[]byte)\n+\tdefer func() {\n+\t\t// Proper usage of a sync.Pool requires each entry to have approximately the same memory\n+\t\t// cost. To obtain this property when the stored type contains a variably-sized buffer,\n+\t\t// we add a hard limit on the maximum buffer to place back in the pool. We limit the\n+\t\t// size to 16MiB because that's the maximum wire message size supported by MongoDB.\n+\t\t//\n+\t\t// Comment copied from https://cs.opensource.google/go/go/+/refs/tags/go1.19:src/fmt/print.go;l=147\n+\t\tif cap(*wm) > 16*1024*1024 {\n+\t\t\treturn\n+\t\t}\n+\t\tmemoryPool.Put(wm)\n+\t}()\n \tfor {\n \t\t// If the server or connection are nil, try to select a new server and get a new connection.\n \t\tif srvr == nil || conn == nil {\n@@ -400,6 +459,18 @@ func (op Operation) Execute(ctx context.Context, scratch []byte) error {\n \t\t\t\treturn err\n \t\t\t}\n \t\t\tdefer conn.Close()\n+\n+\t\t\t// Set the server if it has not already been set and the session type is implicit. This will\n+\t\t\t// limit the number of implicit sessions to no greater than an application's maxPoolSize\n+\t\t\t// (ignoring operations that hold on to the session like cursors).\n+\t\t\tif op.Client != nil && op.Client.Server == nil && op.Client.SessionType == session.Implicit {\n+\t\t\t\tif op.Client.Terminated {\n+\t\t\t\t\treturn fmt.Errorf(\"unexpected nil session for a terminated implicit session\")\n+\t\t\t\t}\n+\t\t\t\tif err := op.Client.SetServer(); err != nil {\n+\t\t\t\t\treturn err\n+\t\t\t\t}\n+\t\t\t}\n \t\t}\n \n \t\t// Run steps that must only be run on the first attempt, but not again for retries.\n@@ -432,27 +503,20 @@ func (op Operation) Execute(ctx context.Context, scratch []byte) error {\n \t\t\tfirst = false\n \t\t}\n \n-\t\tdesc := description.SelectedServer{Server: conn.Description(), Kind: op.Deployment.Kind()}\n-\t\tscratch = scratch[:0]\n-\t\tif desc.WireVersion == nil || desc.WireVersion.Max < 4 {\n-\t\t\tswitch op.Legacy {\n-\t\t\tcase LegacyFind:\n-\t\t\t\treturn op.legacyFind(ctx, scratch, srvr, conn, desc)\n-\t\t\tcase LegacyGetMore:\n-\t\t\t\treturn op.legacyGetMore(ctx, scratch, srvr, conn, desc)\n-\t\t\tcase LegacyKillCursors:\n-\t\t\t\treturn op.legacyKillCursors(ctx, scratch, srvr, conn, desc)\n-\t\t\t}\n+\t\t// Calculate maxTimeMS value to potentially be appended to the wire message.\n+\t\tmaxTimeMS, err := op.calculateMaxTimeMS(ctx, srvr.RTTMonitor().P90(), srvr.RTTMonitor().Stats())\n+\t\tif err != nil {\n+\t\t\treturn err\n \t\t}\n-\t\tif desc.WireVersion == nil || desc.WireVersion.Max < 3 {\n-\t\t\tswitch op.Legacy {\n-\t\t\tcase LegacyListCollections:\n-\t\t\t\treturn op.legacyListCollections(ctx, scratch, srvr, conn, desc)\n-\t\t\tcase LegacyListIndexes:\n-\t\t\t\treturn op.legacyListIndexes(ctx, scratch, srvr, conn, desc)\n-\t\t\t}\n+\n+\t\t// Set maxTimeMS to 0 if connected to mongocryptd to avoid appending the field. The final\n+\t\t// encrypted command may contain multiple maxTimeMS fields otherwise.\n+\t\tif conn.Description().IsCryptd {\n+\t\t\tmaxTimeMS = 0\n \t\t}\n \n+\t\tdesc := description.SelectedServer{Server: conn.Description(), Kind: op.Deployment.Kind()}\n+\n \t\tif batching {\n \t\t\ttargetBatchSize := desc.MaxDocumentSize\n \t\t\tmaxDocSize := desc.MaxDocumentSize\n@@ -471,30 +535,8 @@ func (op Operation) Execute(ctx context.Context, scratch []byte) error {\n \t\t\t}\n \t\t}\n \n-\t\t// Calculate value of 'maxTimeMS' field to potentially append to the wire message based on the current\n-\t\t// context's deadline and the 90th percentile RTT if the ctx is a Timeout Context.\n-\t\tvar maxTimeMS uint64\n-\t\tif internal.IsTimeoutContext(ctx) {\n-\t\t\tif deadline, ok := ctx.Deadline(); ok {\n-\t\t\t\tremainingTimeout := time.Until(deadline)\n-\n-\t\t\t\tmaxTimeMSVal := int64(remainingTimeout/time.Millisecond) -\n-\t\t\t\t\tint64(srvr.RTT90()/time.Millisecond)\n-\n-\t\t\t\t// A maxTimeMS value <= 0 indicates that we are already at or past the Context's deadline.\n-\t\t\t\tif maxTimeMSVal <= 0 {\n-\t\t\t\t\treturn internal.WrapErrorf(ErrDeadlineWouldBeExceeded,\n-\t\t\t\t\t\t\"Context deadline has already been surpassed by %v\", remainingTimeout)\n-\t\t\t\t}\n-\t\t\t\tmaxTimeMS = uint64(maxTimeMSVal)\n-\t\t\t}\n-\t\t}\n-\n-\t\t// convert to wire message\n-\t\tif len(scratch) > 0 {\n-\t\t\tscratch = scratch[:0]\n-\t\t}\n-\t\twm, startedInfo, err := op.createWireMessage(ctx, scratch, desc, maxTimeMS, conn)\n+\t\tvar startedInfo startedInformation\n+\t\t*wm, startedInfo, err = op.createWireMessage(ctx, (*wm)[:0], desc, maxTimeMS, conn)\n \t\tif err != nil {\n \t\t\treturn err\n \t\t}\n@@ -509,11 +551,14 @@ func (op Operation) Execute(ctx context.Context, scratch []byte) error {\n \t\top.publishStartedEvent(ctx, startedInfo)\n \n \t\t// get the moreToCome flag information before we compress\n-\t\tmoreToCome := wiremessage.IsMsgMoreToCome(wm)\n+\t\tmoreToCome := wiremessage.IsMsgMoreToCome(*wm)\n \n \t\t// compress wiremessage if allowed\n \t\tif compressor, ok := conn.(Compressor); ok && op.canCompress(startedInfo.cmdName) {\n-\t\t\twm, err = compressor.CompressWireMessage(wm, nil)\n+\t\t\tb := memoryPool.Get().(*[]byte)\n+\t\t\t*b, err = compressor.CompressWireMessage(*wm, (*b)[:0])\n+\t\t\tmemoryPool.Put(wm)\n+\t\t\twm = b\n \t\t\tif err != nil {\n \t\t\t\treturn err\n \t\t\t}\n@@ -535,10 +580,10 @@ func (op Operation) Execute(ctx context.Context, scratch []byte) error {\n \t\tif ctx.Err() != nil {\n \t\t\terr = ctx.Err()\n \t\t} else if deadline, ok := ctx.Deadline(); ok {\n-\t\t\tif internal.IsTimeoutContext(ctx) && time.Now().Add(srvr.RTT90()).After(deadline) {\n+\t\t\tif internal.IsTimeoutContext(ctx) && time.Now().Add(srvr.RTTMonitor().P90()).After(deadline) {\n \t\t\t\terr = internal.WrapErrorf(ErrDeadlineWouldBeExceeded,\n-\t\t\t\t\t\"Remaining timeout %v applied from Timeout is less than 90th percentile RTT\", time.Until(deadline))\n-\t\t\t} else if time.Now().Add(srvr.MinRTT()).After(deadline) {\n+\t\t\t\t\t\"remaining time %v until context deadline is less than 90th percentile RTT\\n%v\", time.Until(deadline), srvr.RTTMonitor().Stats())\n+\t\t\t} else if time.Now().Add(srvr.RTTMonitor().Min()).After(deadline) {\n \t\t\t\terr = context.DeadlineExceeded\n \t\t\t}\n \t\t}\n@@ -550,7 +595,7 @@ func (op Operation) Execute(ctx context.Context, scratch []byte) error {\n \t\t\tif moreToCome {\n \t\t\t\troundTrip = op.moreToComeRoundTrip\n \t\t\t}\n-\t\t\tres, err = roundTrip(ctx, conn, wm)\n+\t\t\tres, *wm, err = roundTrip(ctx, conn, *wm)\n \n \t\t\tif ep, ok := srvr.(ErrorProcessor); ok {\n \t\t\t\t_ = ep.ProcessError(err, conn)\n@@ -561,6 +606,13 @@ func (op Operation) Execute(ctx context.Context, scratch []byte) error {\n \t\tfinishedInfo.cmdErr = err\n \t\top.publishFinishedEvent(ctx, finishedInfo)\n \n+\t\t// prevIndefiniteErrorIsSet is \"true\" if the \"err\" variable has been set to the \"prevIndefiniteErr\" in\n+\t\t// a case in the switch statement below.\n+\t\tvar prevIndefiniteErrIsSet bool\n+\n+\t\t// TODO(GODRIVER-2579): When refactoring the \"Execute\" method, consider creating a separate method for the\n+\t\t// error handling logic below. This will remove the necessity of the \"checkError\" goto label.\n+\tcheckError:\n \t\tvar perr error\n \t\tswitch tt := err.(type) {\n \t\tcase WriteCommandError:\n@@ -592,6 +644,16 @@ func (op Operation) Execute(ctx context.Context, scratch []byte) error {\n \t\t\t\tcontinue\n \t\t\t}\n \n+\t\t\t// If the error is no longer retryable and has the NoWritesPerformed label, then we should\n+\t\t\t// set the error to the \"previous indefinite error\" unless the current error is already the\n+\t\t\t// \"previous indefinite error\". After reseting, repeat the error check.\n+\t\t\tif tt.HasErrorLabel(NoWritesPerformed) && !prevIndefiniteErrIsSet {\n+\t\t\t\terr = prevIndefiniteErr\n+\t\t\t\tprevIndefiniteErrIsSet = true\n+\n+\t\t\t\tgoto checkError\n+\t\t\t}\n+\n \t\t\t// If the operation isn't being retried, process the response\n \t\t\tif op.ProcessResponseFn != nil {\n \t\t\t\tinfo := ResponseInfo{\n@@ -679,6 +741,16 @@ func (op Operation) Execute(ctx context.Context, scratch []byte) error {\n \t\t\t\tcontinue\n \t\t\t}\n \n+\t\t\t// If the error is no longer retryable and has the NoWritesPerformed label, then we should\n+\t\t\t// set the error to the \"previous indefinite error\" unless the current error is already the\n+\t\t\t// \"previous indefinite error\". After reseting, repeat the error check.\n+\t\t\tif tt.HasErrorLabel(NoWritesPerformed) && !prevIndefiniteErrIsSet {\n+\t\t\t\terr = prevIndefiniteErr\n+\t\t\t\tprevIndefiniteErrIsSet = true\n+\n+\t\t\t\tgoto checkError\n+\t\t\t}\n+\n \t\t\t// If the operation isn't being retried, process the response\n \t\t\tif op.ProcessResponseFn != nil {\n \t\t\t\tinfo := ResponseInfo{\n@@ -731,11 +803,17 @@ func (op Operation) Execute(ctx context.Context, scratch []byte) error {\n \t\t// a retry, so increment the transaction number, reset the retries number, and don't set\n \t\t// server or connection to nil to continue using the same connection.\n \t\tif batching && len(op.Batches.Documents) > 0 {\n+\t\t\t// If retries are supported for the current operation on the current server description,\n+\t\t\t// the session isn't nil, and client retries are enabled, increment the txn number.\n+\t\t\t// Calling IncrementTxnNumber() for server descriptions or topologies that do not\n+\t\t\t// support retries (e.g. standalone topologies) will cause server errors.\n \t\t\tif retrySupported && op.Client != nil && op.RetryMode != nil {\n-\t\t\t\tif *op.RetryMode > RetryNone {\n+\t\t\t\tif op.RetryMode.Enabled() {\n \t\t\t\t\top.Client.IncrementTxnNumber()\n \t\t\t\t}\n-\t\t\t\tif *op.RetryMode == RetryOncePerCommand {\n+\t\t\t\t// Reset the retries number for RetryOncePerCommand unless context is a Timeout context, in\n+\t\t\t\t// which case retries should remain as -1 (as many times as possible).\n+\t\t\t\tif *op.RetryMode == RetryOncePerCommand && !internal.IsTimeoutContext(ctx) {\n \t\t\t\t\tretries = 1\n \t\t\t\t}\n \t\t\t}\n@@ -760,7 +838,6 @@ func (op Operation) retryable(desc description.Server) bool {\n \t\t\treturn true\n \t\t}\n \t\tif retryWritesSupported(desc) &&\n-\t\t\tdesc.WireVersion != nil && desc.WireVersion.Max >= 6 &&\n \t\t\top.Client != nil && !(op.Client.TransactionInProgress() || op.Client.TransactionStarting()) &&\n \t\t\twriteconcern.AckWrite(op.WriteConcern) {\n \t\t\treturn true\n@@ -769,8 +846,7 @@ func (op Operation) retryable(desc description.Server) bool {\n \t\tif op.Client != nil && (op.Client.Committing || op.Client.Aborting) {\n \t\t\treturn true\n \t\t}\n-\t\tif desc.WireVersion != nil && desc.WireVersion.Max >= 6 &&\n-\t\t\t(op.Client == nil || !(op.Client.TransactionInProgress() || op.Client.TransactionStarting())) {\n+\t\tif op.Client == nil || !(op.Client.TransactionInProgress() || op.Client.TransactionStarting()) {\n \t\t\treturn true\n \t\t}\n \t}\n@@ -779,21 +855,18 @@ func (op Operation) retryable(desc description.Server) bool {\n \n // roundTrip writes a wiremessage to the connection and then reads a wiremessage. The wm parameter\n // is reused when reading the wiremessage.\n-func (op Operation) roundTrip(ctx context.Context, conn Connection, wm []byte) ([]byte, error) {\n-\terr := conn.WriteWireMessage(ctx, wm)\n+func (op Operation) roundTrip(ctx context.Context, conn Connection, wm []byte) (result, pooledSlice []byte, err error) {\n+\terr = conn.WriteWireMessage(ctx, wm)\n \tif err != nil {\n-\t\treturn nil, op.networkError(err)\n+\t\treturn nil, wm, op.networkError(err)\n \t}\n-\n \treturn op.readWireMessage(ctx, conn, wm)\n }\n \n-func (op Operation) readWireMessage(ctx context.Context, conn Connection, wm []byte) ([]byte, error) {\n-\tvar err error\n-\n+func (op Operation) readWireMessage(ctx context.Context, conn Connection, wm []byte) (result, pooledSlice []byte, err error) {\n \twm, err = conn.ReadWireMessage(ctx, wm[:0])\n \tif err != nil {\n-\t\treturn nil, op.networkError(err)\n+\t\treturn nil, wm, op.networkError(err)\n \t}\n \n \t// If we're using a streamable connection, we set its streaming state based on the moreToCome flag in the server\n@@ -805,11 +878,14 @@ func (op Operation) readWireMessage(ctx context.Context, conn Connection, wm []b\n \t// decompress wiremessage\n \twm, err = op.decompressWireMessage(wm)\n \tif err != nil {\n-\t\treturn nil, err\n+\t\treturn nil, wm, err\n \t}\n \n \t// decode\n-\tres, err := op.decodeResult(wm)\n+\tb, err := op.decodeResult(wm)\n+\t// Copy b to extend the lifetime. b may be a subslice of wm. wm will be added back to the memory pool and reused.\n+\tres := make([]byte, len(b))\n+\tcopy(res, b)\n \t// Update cluster/operation time and recovery tokens before handling the error to ensure we're properly updating\n \t// everything.\n \top.updateClusterTimes(res)\n@@ -822,14 +898,14 @@ func (op Operation) readWireMessage(ctx context.Context, conn Connection, wm []b\n \t}\n \n \tif err != nil {\n-\t\treturn res, err\n+\t\treturn res, wm, err\n \t}\n \n \t// If there is no error, automatically attempt to decrypt all results if client side encryption is enabled.\n \tif op.Crypt != nil {\n-\t\treturn op.Crypt.Decrypt(ctx, res)\n+\t\tres, err = op.Crypt.Decrypt(ctx, res)\n \t}\n-\treturn res, nil\n+\treturn res, wm, err\n }\n \n // networkError wraps the provided error in an Error with label \"NetworkError\" and, if a transaction\n@@ -855,15 +931,15 @@ func (op Operation) networkError(err error) error {\n \n // moreToComeRoundTrip writes a wiremessage to the provided connection. This is used when an OP_MSG is\n // being sent with  the moreToCome bit set.\n-func (op *Operation) moreToComeRoundTrip(ctx context.Context, conn Connection, wm []byte) ([]byte, error) {\n-\terr := conn.WriteWireMessage(ctx, wm)\n+func (op *Operation) moreToComeRoundTrip(ctx context.Context, conn Connection, wm []byte) (result, pooledSlice []byte, err error) {\n+\terr = conn.WriteWireMessage(ctx, wm)\n \tif err != nil {\n \t\tif op.Client != nil {\n \t\t\top.Client.MarkDirty()\n \t\t}\n \t\terr = Error{Message: err.Error(), Labels: []string{TransientTransactionError, NetworkError}, Wrapped: err}\n \t}\n-\treturn bsoncore.BuildDocument(nil, bsoncore.AppendInt32Element(nil, \"ok\", 1)), err\n+\treturn bsoncore.BuildDocument(nil, bsoncore.AppendInt32Element(nil, \"ok\", 1)), wm, err\n }\n \n // decompressWireMessage handles decompressing a wiremessage. If the wiremessage\n@@ -893,23 +969,37 @@ func (Operation) decompressWireMessage(wm []byte) ([]byte, error) {\n \t}\n \tcompressedSize := length - 25 // header (16) + original opcode (4) + uncompressed size (4) + compressor ID (1)\n \t// return the original wiremessage\n-\tmsg, rem, ok := wiremessage.ReadCompressedCompressedMessage(rem, compressedSize)\n+\tmsg, _, ok := wiremessage.ReadCompressedCompressedMessage(rem, compressedSize)\n \tif !ok {\n \t\treturn nil, errors.New(\"malformed OP_COMPRESSED: insufficient bytes for compressed wiremessage\")\n \t}\n \n-\theader := make([]byte, 0, uncompressedSize+16)\n-\theader = wiremessage.AppendHeader(header, uncompressedSize+16, reqid, respto, opcode)\n+\t// Copy msg, which is a subslice of wm. wm will be used to store the return value of the decompressed message.\n+\tb := memoryPool.Get().(*[]byte)\n+\tmsglen := len(msg)\n+\tif len(*b) < msglen {\n+\t\t*b = make([]byte, msglen)\n+\t}\n+\tcopy(*b, msg)\n+\tdefer func() {\n+\t\tmemoryPool.Put(b)\n+\t}()\n+\n+\tif l := int(uncompressedSize) + 16; cap(wm) < l {\n+\t\twm = make([]byte, 0, l)\n+\t}\n+\twm = wiremessage.AppendHeader(wm[:0], uncompressedSize+16, reqid, respto, opcode)\n \topts := CompressionOpts{\n \t\tCompressor:       compressorID,\n \t\tUncompressedSize: uncompressedSize,\n \t}\n-\tuncompressed, err := DecompressPayload(msg, opts)\n+\tuncompressed, err := DecompressPayload((*b)[0:msglen], opts)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n+\twm = append(wm, uncompressed...)\n \n-\treturn append(header, uncompressed...), nil\n+\treturn wm, nil\n }\n \n func (op Operation) createWireMessage(\n@@ -1262,6 +1352,40 @@ func (op Operation) addClusterTime(dst []byte, desc description.SelectedServer)\n \t// return bsoncore.AppendDocumentElement(dst, \"$clusterTime\", clusterTime)\n }\n \n+// calculateMaxTimeMS calculates the value of the 'maxTimeMS' field to potentially append\n+// to the wire message based on the current context's deadline and the 90th percentile RTT\n+// if the ctx is a Timeout context. If the context is not a Timeout context, it uses the\n+// operation's MaxTimeMS if set. If no MaxTimeMS is set on the operation, and context is\n+// not a Timeout context, calculateMaxTimeMS returns 0.\n+func (op Operation) calculateMaxTimeMS(ctx context.Context, rtt90 time.Duration, rttStats string) (uint64, error) {\n+\tif internal.IsTimeoutContext(ctx) {\n+\t\tif deadline, ok := ctx.Deadline(); ok {\n+\t\t\tremainingTimeout := time.Until(deadline)\n+\t\t\tmaxTime := remainingTimeout - rtt90\n+\n+\t\t\t// Always round up to the next millisecond value so we never truncate the calculated\n+\t\t\t// maxTimeMS value (e.g. 400 microseconds evaluates to 1ms, not 0ms).\n+\t\t\tmaxTimeMS := int64((maxTime + (time.Millisecond - 1)) / time.Millisecond)\n+\t\t\tif maxTimeMS <= 0 {\n+\t\t\t\treturn 0, internal.WrapErrorf(ErrDeadlineWouldBeExceeded,\n+\t\t\t\t\t\"remaining time %v until context deadline is less than or equal to 90th percentile RTT\\n%v\",\n+\t\t\t\t\tremainingTimeout, rttStats)\n+\t\t\t}\n+\t\t\treturn uint64(maxTimeMS), nil\n+\t\t}\n+\t} else if op.MaxTime != nil {\n+\t\t// Users are not allowed to pass a negative value as MaxTime. A value of 0 would indicate\n+\t\t// no timeout and is allowed.\n+\t\tif *op.MaxTime < 0 {\n+\t\t\treturn 0, ErrNegativeMaxTime\n+\t\t}\n+\t\t// Always round up to the next millisecond value so we never truncate the requested\n+\t\t// MaxTime value (e.g. 400 microseconds evaluates to 1ms, not 0ms).\n+\t\treturn uint64((*op.MaxTime + (time.Millisecond - 1)) / time.Millisecond), nil\n+\t}\n+\treturn 0, nil\n+}\n+\n // updateClusterTimes updates the cluster times for the session and cluster clock attached to this\n // operation. While the session's AdvanceClusterTime may return an error, this method does not\n // because an error being returned from this method will not be returned further up.\n@@ -1652,8 +1776,7 @@ func (op Operation) publishFinishedEvent(ctx context.Context, info finishedInfor\n \t\tres := bson.Raw{}\n \t\t// Only copy the reply for commands that are not security sensitive\n \t\tif !info.redacted {\n-\t\t\tres = make([]byte, len(info.response))\n-\t\t\tcopy(res, info.response)\n+\t\t\tres = bson.Raw(info.response)\n \t\t}\n \t\tsuccessEvent := &event.CommandSucceededEvent{\n \t\t\tReply:                res,"
    },
    {
      "sha": "2bf0ec052e2532fc87fbb1a6d5084a8f2026ddc6",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/abort_transaction.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fabort_transaction.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fabort_transaction.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fabort_transaction.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -64,7 +64,7 @@ func (at *AbortTransaction) Execute(ctx context.Context) error {\n \t\tSelector:          at.selector,\n \t\tWriteConcern:      at.writeConcern,\n \t\tServerAPI:         at.serverAPI,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \n }\n "
    },
    {
      "sha": "4ea2263cbd2dd1a5be7fcb1921425fe10007e1bd",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/aggregate.go",
      "status": "modified",
      "additions": 6,
      "deletions": 11,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Faggregate.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Faggregate.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Faggregate.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -30,7 +30,7 @@ type Aggregate struct {\n \tcollation                bsoncore.Document\n \tcomment                  *string\n \thint                     bsoncore.Value\n-\tmaxTimeMS                *int64\n+\tmaxTime                  *time.Duration\n \tpipeline                 bsoncore.Document\n \tsession                  *session.Client\n \tclock                    *session.ClusterClock\n@@ -109,8 +109,9 @@ func (a *Aggregate) Execute(ctx context.Context) error {\n \t\tMinimumWriteConcernWireVersion: 5,\n \t\tServerAPI:                      a.serverAPI,\n \t\tIsOutputAggregate:              a.hasOutputStage,\n+\t\tMaxTime:                        a.maxTime,\n \t\tTimeout:                        a.timeout,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \n }\n \n@@ -148,12 +149,6 @@ func (a *Aggregate) command(dst []byte, desc description.SelectedServer) ([]byte\n \n \t\tdst = bsoncore.AppendValueElement(dst, \"hint\", a.hint)\n \t}\n-\n-\t// Only append specified maxTimeMS if timeout is not also specified.\n-\tif a.maxTimeMS != nil && a.timeout == nil {\n-\n-\t\tdst = bsoncore.AppendInt64Element(dst, \"maxTimeMS\", *a.maxTimeMS)\n-\t}\n \tif a.pipeline != nil {\n \n \t\tdst = bsoncore.AppendArrayElement(dst, \"pipeline\", a.pipeline)\n@@ -230,13 +225,13 @@ func (a *Aggregate) Hint(hint bsoncore.Value) *Aggregate {\n \treturn a\n }\n \n-// MaxTimeMS specifies the maximum amount of time to allow the query to run.\n-func (a *Aggregate) MaxTimeMS(maxTimeMS int64) *Aggregate {\n+// MaxTime specifies the maximum amount of time to allow the query to run on the server.\n+func (a *Aggregate) MaxTime(maxTime *time.Duration) *Aggregate {\n \tif a == nil {\n \t\ta = new(Aggregate)\n \t}\n \n-\ta.maxTimeMS = &maxTimeMS\n+\ta.maxTime = maxTime\n \treturn a\n }\n "
    },
    {
      "sha": "574cb03144fd467ae7bb28485f4511bc4272fa37",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/command.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fcommand.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fcommand.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fcommand.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -106,7 +106,7 @@ func (c *Command) Execute(ctx context.Context) error {\n \t\tCrypt:          c.crypt,\n \t\tServerAPI:      c.serverAPI,\n \t\tTimeout:        c.timeout,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n }\n \n // Session sets the session for this operation."
    },
    {
      "sha": "ff2794a1f10682ba548b7d462073999c03236a24",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/commit_transaction.go",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fcommit_transaction.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fcommit_transaction.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fcommit_transaction.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -9,6 +9,7 @@ package operation\n import (\n \t\"context\"\n \t\"errors\"\n+\t\"time\"\n \n \t\"go.mongodb.org/mongo-driver/event\"\n \t\"go.mongodb.org/mongo-driver/mongo/description\"\n@@ -20,7 +21,7 @@ import (\n \n // CommitTransaction attempts to commit a transaction.\n type CommitTransaction struct {\n-\tmaxTimeMS     *int64\n+\tmaxTime       *time.Duration\n \trecoveryToken bsoncore.Document\n \tsession       *session.Client\n \tclock         *session.ClusterClock\n@@ -61,32 +62,30 @@ func (ct *CommitTransaction) Execute(ctx context.Context) error {\n \t\tCrypt:             ct.crypt,\n \t\tDatabase:          ct.database,\n \t\tDeployment:        ct.deployment,\n+\t\tMaxTime:           ct.maxTime,\n \t\tSelector:          ct.selector,\n \t\tWriteConcern:      ct.writeConcern,\n \t\tServerAPI:         ct.serverAPI,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \n }\n \n func (ct *CommitTransaction) command(dst []byte, desc description.SelectedServer) ([]byte, error) {\n \n \tdst = bsoncore.AppendInt32Element(dst, \"commitTransaction\", 1)\n-\tif ct.maxTimeMS != nil {\n-\t\tdst = bsoncore.AppendInt64Element(dst, \"maxTimeMS\", *ct.maxTimeMS)\n-\t}\n \tif ct.recoveryToken != nil {\n \t\tdst = bsoncore.AppendDocumentElement(dst, \"recoveryToken\", ct.recoveryToken)\n \t}\n \treturn dst, nil\n }\n \n-// MaxTimeMS specifies the maximum amount of time to allow the query to run.\n-func (ct *CommitTransaction) MaxTimeMS(maxTimeMS int64) *CommitTransaction {\n+// MaxTime specifies the maximum amount of time to allow the query to run on the server.\n+func (ct *CommitTransaction) MaxTime(maxTime *time.Duration) *CommitTransaction {\n \tif ct == nil {\n \t\tct = new(CommitTransaction)\n \t}\n \n-\tct.maxTimeMS = &maxTimeMS\n+\tct.maxTime = maxTime\n \treturn ct\n }\n "
    },
    {
      "sha": "7e605572db75cb8e8e1e963b43910d4dd617faa5",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/count.go",
      "status": "modified",
      "additions": 6,
      "deletions": 10,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fcount.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fcount.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fcount.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -24,7 +24,7 @@ import (\n \n // Count represents a count operation.\n type Count struct {\n-\tmaxTimeMS      *int64\n+\tmaxTime        *time.Duration\n \tquery          bsoncore.Document\n \tsession        *session.Client\n \tclock          *session.ClusterClock\n@@ -120,12 +120,13 @@ func (c *Count) Execute(ctx context.Context) error {\n \t\tCrypt:             c.crypt,\n \t\tDatabase:          c.database,\n \t\tDeployment:        c.deployment,\n+\t\tMaxTime:           c.maxTime,\n \t\tReadConcern:       c.readConcern,\n \t\tReadPreference:    c.readPreference,\n \t\tSelector:          c.selector,\n \t\tServerAPI:         c.serverAPI,\n \t\tTimeout:           c.timeout,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \n \t// Swallow error if NamespaceNotFound(26) is returned from aggregate on non-existent namespace\n \tif err != nil {\n@@ -142,24 +143,19 @@ func (c *Count) command(dst []byte, desc description.SelectedServer) ([]byte, er\n \tif c.query != nil {\n \t\tdst = bsoncore.AppendDocumentElement(dst, \"query\", c.query)\n \t}\n-\n-\t// Only append specified maxTimeMS if timeout is not also specified.\n-\tif c.maxTimeMS != nil && c.timeout == nil {\n-\t\tdst = bsoncore.AppendInt64Element(dst, \"maxTimeMS\", *c.maxTimeMS)\n-\t}\n \tif c.comment.Type != bsontype.Type(0) {\n \t\tdst = bsoncore.AppendValueElement(dst, \"comment\", c.comment)\n \t}\n \treturn dst, nil\n }\n \n-// MaxTimeMS specifies the maximum amount of time to allow the query to run.\n-func (c *Count) MaxTimeMS(maxTimeMS int64) *Count {\n+// MaxTime specifies the maximum amount of time to allow the query to run on the server.\n+func (c *Count) MaxTime(maxTime *time.Duration) *Count {\n \tif c == nil {\n \t\tc = new(Count)\n \t}\n \n-\tc.maxTimeMS = &maxTimeMS\n+\tc.maxTime = maxTime\n \treturn c\n }\n "
    },
    {
      "sha": "c333c5a99b7cf6c4b4fee151fea0e982e2e06dbf",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/create.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fcreate.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fcreate.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fcreate.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -77,7 +77,7 @@ func (c *Create) Execute(ctx context.Context) error {\n \t\tSelector:          c.selector,\n \t\tWriteConcern:      c.writeConcern,\n \t\tServerAPI:         c.serverAPI,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \n }\n "
    },
    {
      "sha": "70f7b5495ab40d8bc84bcb4829e1980383510103",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/createIndexes.go",
      "status": "modified",
      "additions": 6,
      "deletions": 9,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2FcreateIndexes.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2FcreateIndexes.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2FcreateIndexes.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -25,7 +25,7 @@ import (\n type CreateIndexes struct {\n \tcommitQuorum bsoncore.Value\n \tindexes      bsoncore.Document\n-\tmaxTimeMS    *int64\n+\tmaxTime      *time.Duration\n \tsession      *session.Client\n \tclock        *session.ClusterClock\n \tcollection   string\n@@ -112,11 +112,12 @@ func (ci *CreateIndexes) Execute(ctx context.Context) error {\n \t\tCrypt:             ci.crypt,\n \t\tDatabase:          ci.database,\n \t\tDeployment:        ci.deployment,\n+\t\tMaxTime:           ci.maxTime,\n \t\tSelector:          ci.selector,\n \t\tWriteConcern:      ci.writeConcern,\n \t\tServerAPI:         ci.serverAPI,\n \t\tTimeout:           ci.timeout,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \n }\n \n@@ -131,10 +132,6 @@ func (ci *CreateIndexes) command(dst []byte, desc description.SelectedServer) ([\n \tif ci.indexes != nil {\n \t\tdst = bsoncore.AppendArrayElement(dst, \"indexes\", ci.indexes)\n \t}\n-\t// Only append specified maxTimeMS if timeout is not also specified.\n-\tif ci.maxTimeMS != nil && ci.timeout == nil {\n-\t\tdst = bsoncore.AppendInt64Element(dst, \"maxTimeMS\", *ci.maxTimeMS)\n-\t}\n \treturn dst, nil\n }\n \n@@ -160,13 +157,13 @@ func (ci *CreateIndexes) Indexes(indexes bsoncore.Document) *CreateIndexes {\n \treturn ci\n }\n \n-// MaxTimeMS specifies the maximum amount of time to allow the query to run.\n-func (ci *CreateIndexes) MaxTimeMS(maxTimeMS int64) *CreateIndexes {\n+// MaxTime specifies the maximum amount of time to allow the query to run on the server.\n+func (ci *CreateIndexes) MaxTime(maxTime *time.Duration) *CreateIndexes {\n \tif ci == nil {\n \t\tci = new(CreateIndexes)\n \t}\n \n-\tci.maxTimeMS = &maxTimeMS\n+\tci.maxTime = maxTime\n \treturn ci\n }\n "
    },
    {
      "sha": "bb835942550350315e4d35bd7d44cc9073deb949",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/delete.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdelete.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdelete.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdelete.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -111,7 +111,7 @@ func (d *Delete) Execute(ctx context.Context) error {\n \t\tWriteConcern:      d.writeConcern,\n \t\tServerAPI:         d.serverAPI,\n \t\tTimeout:           d.timeout,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \n }\n "
    },
    {
      "sha": "af66654d62cac7ba8327bdeeb3e19312b53601bb",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/distinct.go",
      "status": "modified",
      "additions": 6,
      "deletions": 8,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdistinct.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdistinct.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdistinct.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -25,7 +25,7 @@ import (\n type Distinct struct {\n \tcollation      bsoncore.Document\n \tkey            *string\n-\tmaxTimeMS      *int64\n+\tmaxTime        *time.Duration\n \tquery          bsoncore.Document\n \tsession        *session.Client\n \tclock          *session.ClusterClock\n@@ -99,12 +99,13 @@ func (d *Distinct) Execute(ctx context.Context) error {\n \t\tCrypt:             d.crypt,\n \t\tDatabase:          d.database,\n \t\tDeployment:        d.deployment,\n+\t\tMaxTime:           d.maxTime,\n \t\tReadConcern:       d.readConcern,\n \t\tReadPreference:    d.readPreference,\n \t\tSelector:          d.selector,\n \t\tServerAPI:         d.serverAPI,\n \t\tTimeout:           d.timeout,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \n }\n \n@@ -122,9 +123,6 @@ func (d *Distinct) command(dst []byte, desc description.SelectedServer) ([]byte,\n \tif d.key != nil {\n \t\tdst = bsoncore.AppendStringElement(dst, \"key\", *d.key)\n \t}\n-\tif d.maxTimeMS != nil {\n-\t\tdst = bsoncore.AppendInt64Element(dst, \"maxTimeMS\", *d.maxTimeMS)\n-\t}\n \tif d.query != nil {\n \t\tdst = bsoncore.AppendDocumentElement(dst, \"query\", d.query)\n \t}\n@@ -151,13 +149,13 @@ func (d *Distinct) Key(key string) *Distinct {\n \treturn d\n }\n \n-// MaxTimeMS specifies the maximum amount of time to allow the query to run.\n-func (d *Distinct) MaxTimeMS(maxTimeMS int64) *Distinct {\n+// MaxTime specifies the maximum amount of time to allow the query to run on the server.\n+func (d *Distinct) MaxTime(maxTime *time.Duration) *Distinct {\n \tif d == nil {\n \t\td = new(Distinct)\n \t}\n \n-\td.maxTimeMS = &maxTimeMS\n+\td.maxTime = maxTime\n \treturn d\n }\n "
    },
    {
      "sha": "2b65d484443b16571455f854c1535e88f026e391",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/drop_collection.go",
      "status": "modified",
      "additions": 14,
      "deletions": 1,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdrop_collection.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdrop_collection.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdrop_collection.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -10,6 +10,7 @@ import (\n \t\"context\"\n \t\"errors\"\n \t\"fmt\"\n+\t\"time\"\n \n \t\"go.mongodb.org/mongo-driver/event\"\n \t\"go.mongodb.org/mongo-driver/mongo/description\"\n@@ -32,6 +33,7 @@ type DropCollection struct {\n \twriteConcern *writeconcern.WriteConcern\n \tresult       DropCollectionResult\n \tserverAPI    *driver.ServerAPIOptions\n+\ttimeout      *time.Duration\n }\n \n // DropCollectionResult represents a dropCollection result returned by the server.\n@@ -99,7 +101,8 @@ func (dc *DropCollection) Execute(ctx context.Context) error {\n \t\tSelector:          dc.selector,\n \t\tWriteConcern:      dc.writeConcern,\n \t\tServerAPI:         dc.serverAPI,\n-\t}.Execute(ctx, nil)\n+\t\tTimeout:           dc.timeout,\n+\t}.Execute(ctx)\n \n }\n \n@@ -207,3 +210,13 @@ func (dc *DropCollection) ServerAPI(serverAPI *driver.ServerAPIOptions) *DropCol\n \tdc.serverAPI = serverAPI\n \treturn dc\n }\n+\n+// Timeout sets the timeout for this operation.\n+func (dc *DropCollection) Timeout(timeout *time.Duration) *DropCollection {\n+\tif dc == nil {\n+\t\tdc = new(DropCollection)\n+\t}\n+\n+\tdc.timeout = timeout\n+\treturn dc\n+}"
    },
    {
      "sha": "ae011e2ba4a3f6833f4a6a6a4223830a65eb2a54",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/drop_database.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdrop_database.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdrop_database.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdrop_database.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -53,7 +53,7 @@ func (dd *DropDatabase) Execute(ctx context.Context) error {\n \t\tSelector:       dd.selector,\n \t\tWriteConcern:   dd.writeConcern,\n \t\tServerAPI:      dd.serverAPI,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \n }\n "
    },
    {
      "sha": "2e8569021b1e2296d7cc421d3e02722b9536be31",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/drop_indexes.go",
      "status": "modified",
      "additions": 6,
      "deletions": 10,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdrop_indexes.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdrop_indexes.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fdrop_indexes.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -23,7 +23,7 @@ import (\n // DropIndexes performs an dropIndexes operation.\n type DropIndexes struct {\n \tindex        *string\n-\tmaxTimeMS    *int64\n+\tmaxTime      *time.Duration\n \tsession      *session.Client\n \tclock        *session.ClusterClock\n \tcollection   string\n@@ -94,11 +94,12 @@ func (di *DropIndexes) Execute(ctx context.Context) error {\n \t\tCrypt:             di.crypt,\n \t\tDatabase:          di.database,\n \t\tDeployment:        di.deployment,\n+\t\tMaxTime:           di.maxTime,\n \t\tSelector:          di.selector,\n \t\tWriteConcern:      di.writeConcern,\n \t\tServerAPI:         di.serverAPI,\n \t\tTimeout:           di.timeout,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \n }\n \n@@ -107,15 +108,10 @@ func (di *DropIndexes) command(dst []byte, desc description.SelectedServer) ([]b\n \tif di.index != nil {\n \t\tdst = bsoncore.AppendStringElement(dst, \"index\", *di.index)\n \t}\n-\t// Only append specified maxTimeMS if timeout is not also specified.\n-\tif di.maxTimeMS != nil && di.timeout == nil {\n-\t\tdst = bsoncore.AppendInt64Element(dst, \"maxTimeMS\", *di.maxTimeMS)\n-\t}\n \treturn dst, nil\n }\n \n // Index specifies the name of the index to drop. If '*' is specified, all indexes will be dropped.\n-//\n func (di *DropIndexes) Index(index string) *DropIndexes {\n \tif di == nil {\n \t\tdi = new(DropIndexes)\n@@ -125,13 +121,13 @@ func (di *DropIndexes) Index(index string) *DropIndexes {\n \treturn di\n }\n \n-// MaxTimeMS specifies the maximum amount of time to allow the query to run.\n-func (di *DropIndexes) MaxTimeMS(maxTimeMS int64) *DropIndexes {\n+// MaxTime specifies the maximum amount of time to allow the query to run on the server.\n+func (di *DropIndexes) MaxTime(maxTime *time.Duration) *DropIndexes {\n \tif di == nil {\n \t\tdi = new(DropIndexes)\n \t}\n \n-\tdi.maxTimeMS = &maxTimeMS\n+\tdi.maxTime = maxTime\n \treturn di\n }\n "
    },
    {
      "sha": "644d19555a878e48c124214974c4cfdb566b5553",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/end_sessions.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fend_sessions.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fend_sessions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fend_sessions.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -59,7 +59,7 @@ func (es *EndSessions) Execute(ctx context.Context) error {\n \t\tDeployment:        es.deployment,\n \t\tSelector:          es.selector,\n \t\tServerAPI:         es.serverAPI,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \n }\n "
    },
    {
      "sha": "6ccdfcae85e00fd40261b8a9d159b749d6df1036",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/find.go",
      "status": "modified",
      "additions": 6,
      "deletions": 9,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Ffind.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Ffind.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Ffind.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -34,7 +34,7 @@ type Find struct {\n \tlet                 bsoncore.Document\n \tlimit               *int64\n \tmax                 bsoncore.Document\n-\tmaxTimeMS           *int64\n+\tmaxTime             *time.Duration\n \tmin                 bsoncore.Document\n \tnoCursorTimeout     *bool\n \toplogReplay         *bool\n@@ -98,13 +98,14 @@ func (f *Find) Execute(ctx context.Context) error {\n \t\tCrypt:             f.crypt,\n \t\tDatabase:          f.database,\n \t\tDeployment:        f.deployment,\n+\t\tMaxTime:           f.maxTime,\n \t\tReadConcern:       f.readConcern,\n \t\tReadPreference:    f.readPreference,\n \t\tSelector:          f.selector,\n \t\tLegacy:            driver.LegacyFind,\n \t\tServerAPI:         f.serverAPI,\n \t\tTimeout:           f.timeout,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \n }\n \n@@ -149,10 +150,6 @@ func (f *Find) command(dst []byte, desc description.SelectedServer) ([]byte, err\n \tif f.max != nil {\n \t\tdst = bsoncore.AppendDocumentElement(dst, \"max\", f.max)\n \t}\n-\t// Only append specified maxTimeMS if timeout is not also specified.\n-\tif f.maxTimeMS != nil && f.timeout == nil {\n-\t\tdst = bsoncore.AppendInt64Element(dst, \"maxTimeMS\", *f.maxTimeMS)\n-\t}\n \tif f.min != nil {\n \t\tdst = bsoncore.AppendDocumentElement(dst, \"min\", f.min)\n \t}\n@@ -299,13 +296,13 @@ func (f *Find) Max(max bsoncore.Document) *Find {\n \treturn f\n }\n \n-// MaxTimeMS specifies the maximum amount of time to allow the query to run.\n-func (f *Find) MaxTimeMS(maxTimeMS int64) *Find {\n+// MaxTime specifies the maximum amount of time to allow the query to run on the server.\n+func (f *Find) MaxTime(maxTime *time.Duration) *Find {\n \tif f == nil {\n \t\tf = new(Find)\n \t}\n \n-\tf.maxTimeMS = &maxTimeMS\n+\tf.maxTime = maxTime\n \treturn f\n }\n "
    },
    {
      "sha": "7c4cb527bfd8c63203f6f07d522e6c8940dec9f9",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/find_and_modify.go",
      "status": "modified",
      "additions": 6,
      "deletions": 12,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Ffind_and_modify.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Ffind_and_modify.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Ffind_and_modify.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -29,7 +29,7 @@ type FindAndModify struct {\n \tcollation                bsoncore.Document\n \tcomment                  bsoncore.Value\n \tfields                   bsoncore.Document\n-\tmaxTimeMS                *int64\n+\tmaxTime                  *time.Duration\n \tnewDocument              *bool\n \tquery                    bsoncore.Document\n \tremove                   *bool\n@@ -137,12 +137,13 @@ func (fam *FindAndModify) Execute(ctx context.Context) error {\n \t\tCommandMonitor: fam.monitor,\n \t\tDatabase:       fam.database,\n \t\tDeployment:     fam.deployment,\n+\t\tMaxTime:        fam.maxTime,\n \t\tSelector:       fam.selector,\n \t\tWriteConcern:   fam.writeConcern,\n \t\tCrypt:          fam.crypt,\n \t\tServerAPI:      fam.serverAPI,\n \t\tTimeout:        fam.timeout,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \n }\n \n@@ -173,12 +174,6 @@ func (fam *FindAndModify) command(dst []byte, desc description.SelectedServer) (\n \n \t\tdst = bsoncore.AppendDocumentElement(dst, \"fields\", fam.fields)\n \t}\n-\n-\t// Only append specified maxTimeMS if timeout is not also specified.\n-\tif fam.maxTimeMS != nil && fam.timeout == nil {\n-\n-\t\tdst = bsoncore.AppendInt64Element(dst, \"maxTimeMS\", *fam.maxTimeMS)\n-\t}\n \tif fam.newDocument != nil {\n \n \t\tdst = bsoncore.AppendBooleanElement(dst, \"new\", *fam.newDocument)\n@@ -269,13 +264,13 @@ func (fam *FindAndModify) Fields(fields bsoncore.Document) *FindAndModify {\n \treturn fam\n }\n \n-// MaxTimeMS specifies the maximum amount of time to allow the operation to run.\n-func (fam *FindAndModify) MaxTimeMS(maxTimeMS int64) *FindAndModify {\n+// MaxTime specifies the maximum amount of time to allow the operation to run on the server.\n+func (fam *FindAndModify) MaxTime(maxTime *time.Duration) *FindAndModify {\n \tif fam == nil {\n \t\tfam = new(FindAndModify)\n \t}\n \n-\tfam.maxTimeMS = &maxTimeMS\n+\tfam.maxTime = maxTime\n \treturn fam\n }\n \n@@ -310,7 +305,6 @@ func (fam *FindAndModify) Remove(remove bool) *FindAndModify {\n }\n \n // Sort determines which document the operation modifies if the query matches multiple documents.The first document matched by the sort order will be modified.\n-//\n func (fam *FindAndModify) Sort(sort bsoncore.Document) *FindAndModify {\n \tif fam == nil {\n \t\tfam = new(FindAndModify)"
    },
    {
      "sha": "e764c84b9bbffc7480836f1cd1abe28df4eceb42",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/hello.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fhello.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fhello.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fhello.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -194,12 +194,12 @@ func (h *Hello) Execute(ctx context.Context) error {\n \t\treturn errors.New(\"a Hello must have a Deployment set before Execute can be called\")\n \t}\n \n-\treturn h.createOperation().Execute(ctx, nil)\n+\treturn h.createOperation().Execute(ctx)\n }\n \n // StreamResponse gets the next streaming Hello response from the server.\n func (h *Hello) StreamResponse(ctx context.Context, conn driver.StreamerConnection) error {\n-\treturn h.createOperation().ExecuteExhaust(ctx, conn, nil)\n+\treturn h.createOperation().ExecuteExhaust(ctx, conn)\n }\n \n func (h *Hello) createOperation() driver.Operation {\n@@ -229,7 +229,7 @@ func (h *Hello) GetHandshakeInformation(ctx context.Context, _ address.Address,\n \t\t\treturn nil\n \t\t},\n \t\tServerAPI: h.serverAPI,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \tif err != nil {\n \t\treturn driver.HandshakeInformation{}, err\n \t}"
    },
    {
      "sha": "83ba5e6e13680778af7a3092d21755588811dce2",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/insert.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Finsert.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Finsert.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Finsert.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -110,7 +110,7 @@ func (i *Insert) Execute(ctx context.Context) error {\n \t\tWriteConcern:      i.writeConcern,\n \t\tServerAPI:         i.serverAPI,\n \t\tTimeout:           i.timeout,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \n }\n "
    },
    {
      "sha": "28f72dd12138346a74700ded28ece7491803decf",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/listDatabases.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2FlistDatabases.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2FlistDatabases.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2FlistDatabases.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -163,7 +163,7 @@ func (ld *ListDatabases) Execute(ctx context.Context) error {\n \t\tCrypt:          ld.crypt,\n \t\tServerAPI:      ld.serverAPI,\n \t\tTimeout:        ld.timeout,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \n }\n "
    },
    {
      "sha": "7118417f7e02a8b5fb8e548549389747aed39694",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/list_collections.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Flist_collections.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Flist_collections.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Flist_collections.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -88,7 +88,7 @@ func (lc *ListCollections) Execute(ctx context.Context) error {\n \t\tLegacy:            driver.LegacyListCollections,\n \t\tServerAPI:         lc.serverAPI,\n \t\tTimeout:           lc.timeout,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \n }\n "
    },
    {
      "sha": "9e5901b997afecc93c0b4ac8fcb7f9374ad4aae2",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/list_indexes.go",
      "status": "modified",
      "additions": 6,
      "deletions": 11,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Flist_indexes.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Flist_indexes.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Flist_indexes.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -21,7 +21,7 @@ import (\n // ListIndexes performs a listIndexes operation.\n type ListIndexes struct {\n \tbatchSize  *int32\n-\tmaxTimeMS  *int64\n+\tmaxTime    *time.Duration\n \tsession    *session.Client\n \tclock      *session.ClusterClock\n \tcollection string\n@@ -75,14 +75,15 @@ func (li *ListIndexes) Execute(ctx context.Context) error {\n \t\tCommandMonitor: li.monitor,\n \t\tDatabase:       li.database,\n \t\tDeployment:     li.deployment,\n+\t\tMaxTime:        li.maxTime,\n \t\tSelector:       li.selector,\n \t\tCrypt:          li.crypt,\n \t\tLegacy:         driver.LegacyListIndexes,\n \t\tRetryMode:      li.retry,\n \t\tType:           driver.Read,\n \t\tServerAPI:      li.serverAPI,\n \t\tTimeout:        li.timeout,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \n }\n \n@@ -94,12 +95,6 @@ func (li *ListIndexes) command(dst []byte, desc description.SelectedServer) ([]b\n \n \t\tcursorDoc = bsoncore.AppendInt32Element(cursorDoc, \"batchSize\", *li.batchSize)\n \t}\n-\n-\t// Only append specified maxTimeMS if timeout is not also specified.\n-\tif li.maxTimeMS != nil && li.timeout == nil {\n-\n-\t\tdst = bsoncore.AppendInt64Element(dst, \"maxTimeMS\", *li.maxTimeMS)\n-\t}\n \tcursorDoc, _ = bsoncore.AppendDocumentEnd(cursorDoc, cursorIdx)\n \tdst = bsoncore.AppendDocumentElement(dst, \"cursor\", cursorDoc)\n \n@@ -116,13 +111,13 @@ func (li *ListIndexes) BatchSize(batchSize int32) *ListIndexes {\n \treturn li\n }\n \n-// MaxTimeMS specifies the maximum amount of time to allow the query to run.\n-func (li *ListIndexes) MaxTimeMS(maxTimeMS int64) *ListIndexes {\n+// MaxTime specifies the maximum amount of time to allow the query to run on the server.\n+func (li *ListIndexes) MaxTime(maxTime *time.Duration) *ListIndexes {\n \tif li == nil {\n \t\tli = new(ListIndexes)\n \t}\n \n-\tli.maxTimeMS = &maxTimeMS\n+\tli.maxTime = maxTime\n \treturn li\n }\n "
    },
    {
      "sha": "816b3709b935ed2cd4021174915e1fd60c2472bc",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation/update.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fupdate.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fupdate.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation%2Fupdate.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -162,7 +162,7 @@ func (u *Update) Execute(ctx context.Context) error {\n \t\tCrypt:             u.crypt,\n \t\tServerAPI:         u.serverAPI,\n \t\tTimeout:           u.timeout,\n-\t}.Execute(ctx, nil)\n+\t}.Execute(ctx)\n \n }\n "
    },
    {
      "sha": "df7856b89c61f8cfea4eac329e79d356450119e6",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation_exhaust.go",
      "status": "modified",
      "additions": 8,
      "deletions": 3,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation_exhaust.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation_exhaust.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation_exhaust.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -13,13 +13,18 @@ import (\n \n // ExecuteExhaust reads a response from the provided StreamerConnection. This will error if the connection's\n // CurrentlyStreaming function returns false.\n-func (op Operation) ExecuteExhaust(ctx context.Context, conn StreamerConnection, scratch []byte) error {\n+func (op Operation) ExecuteExhaust(ctx context.Context, conn StreamerConnection) error {\n \tif !conn.CurrentlyStreaming() {\n \t\treturn errors.New(\"exhaust read must be done with a connection that is currently streaming\")\n \t}\n \n-\tscratch = scratch[:0]\n-\tres, err := op.readWireMessage(ctx, conn, scratch)\n+\twm := memoryPool.Get().(*[]byte)\n+\tdefer func() {\n+\t\tmemoryPool.Put(wm)\n+\t}()\n+\tvar res []byte\n+\tvar err error\n+\tres, *wm, err = op.readWireMessage(ctx, conn, (*wm)[:0])\n \tif err != nil {\n \t\treturn err\n \t}"
    },
    {
      "sha": "2584f484add1cc5f1970230b8295f82f48b9089c",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/operation_legacy.go",
      "status": "removed",
      "additions": 0,
      "deletions": 719,
      "changes": 719,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation_legacy.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation_legacy.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Foperation_legacy.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,719 +0,0 @@\n-// Copyright (C) MongoDB, Inc. 2017-present.\n-//\n-// Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n-// not use this file except in compliance with the License. You may obtain\n-// a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n-\n-package driver\n-\n-import (\n-\t\"context\"\n-\t\"errors\"\n-\t\"strconv\"\n-\t\"time\"\n-\n-\t\"go.mongodb.org/mongo-driver/bson/bsontype\"\n-\t\"go.mongodb.org/mongo-driver/mongo/description\"\n-\t\"go.mongodb.org/mongo-driver/x/bsonx/bsoncore\"\n-\t\"go.mongodb.org/mongo-driver/x/mongo/driver/wiremessage\"\n-)\n-\n-var (\n-\tfirstBatchIdentifier     = \"firstBatch\"\n-\tnextBatchIdentifier      = \"nextBatch\"\n-\tlistCollectionsNamespace = \"system.namespaces\"\n-\tlistIndexesNamespace     = \"system.indexes\"\n-\n-\t// ErrFilterType is returned when the filter for a legacy list collections operation is of the wrong type.\n-\tErrFilterType = errors.New(\"filter for list collections operation must be a string\")\n-)\n-\n-func (op Operation) getFullCollectionName(coll string) string {\n-\treturn op.Database + \".\" + coll\n-}\n-\n-func (op Operation) legacyFind(ctx context.Context, dst []byte, srvr Server, conn Connection, desc description.SelectedServer) error {\n-\twm, startedInfo, collName, err := op.createLegacyFindWireMessage(dst, desc)\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\tstartedInfo.connID = conn.ID()\n-\top.publishStartedEvent(ctx, startedInfo)\n-\n-\tfinishedInfo := finishedInformation{\n-\t\tcmdName:   startedInfo.cmdName,\n-\t\trequestID: startedInfo.requestID,\n-\t\tstartTime: time.Now(),\n-\t\tconnID:    startedInfo.connID,\n-\t}\n-\n-\tfinishedInfo.response, finishedInfo.cmdErr = op.roundTripLegacyCursor(ctx, wm, srvr, conn, collName, firstBatchIdentifier)\n-\top.publishFinishedEvent(ctx, finishedInfo)\n-\n-\tif finishedInfo.cmdErr != nil {\n-\t\treturn finishedInfo.cmdErr\n-\t}\n-\n-\tif op.ProcessResponseFn != nil {\n-\t\t// CurrentIndex is always 0 in this mode.\n-\t\tinfo := ResponseInfo{\n-\t\t\tServerResponse:        finishedInfo.response,\n-\t\t\tServer:                srvr,\n-\t\t\tConnection:            conn,\n-\t\t\tConnectionDescription: desc.Server,\n-\t\t}\n-\t\treturn op.ProcessResponseFn(info)\n-\t}\n-\treturn nil\n-}\n-\n-// returns wire message, collection name, error\n-func (op Operation) createLegacyFindWireMessage(dst []byte, desc description.SelectedServer) ([]byte, startedInformation, string, error) {\n-\tinfo := startedInformation{\n-\t\trequestID: wiremessage.NextRequestID(),\n-\t\tcmdName:   \"find\",\n-\t}\n-\n-\t// call CommandFn on an empty slice rather than dst because the options will need to be converted to legacy\n-\tvar cmdDoc bsoncore.Document\n-\tvar cmdIndex int32\n-\tvar err error\n-\n-\tcmdIndex, cmdDoc = bsoncore.AppendDocumentStart(cmdDoc)\n-\tcmdDoc, err = op.CommandFn(cmdDoc, desc)\n-\tif err != nil {\n-\t\treturn dst, info, \"\", err\n-\t}\n-\tcmdDoc, _ = bsoncore.AppendDocumentEnd(cmdDoc, cmdIndex)\n-\t// for monitoring legacy events, the upconverted document should be captured rather than the legacy one\n-\tinfo.cmd = cmdDoc\n-\n-\tcmdElems, err := cmdDoc.Elements()\n-\tif err != nil {\n-\t\treturn dst, info, \"\", err\n-\t}\n-\n-\t// take each option from the non-legacy command and convert it\n-\t// build options as a byte slice of elements rather than a bsoncore.Document because they will be appended\n-\t// to another document with $query\n-\tvar optsElems []byte\n-\tflags := op.secondaryOK(desc)\n-\tvar numToSkip, numToReturn, batchSize, limit int32 // numToReturn calculated from batchSize and limit\n-\tvar filter, returnFieldsSelector bsoncore.Document\n-\tvar collName string\n-\tvar singleBatch bool\n-\tfor _, elem := range cmdElems {\n-\t\tswitch elem.Key() {\n-\t\tcase \"find\":\n-\t\t\tcollName = elem.Value().StringValue()\n-\t\tcase \"filter\":\n-\t\t\tfilter = elem.Value().Data\n-\t\tcase \"sort\":\n-\t\t\toptsElems = bsoncore.AppendValueElement(optsElems, \"$orderby\", elem.Value())\n-\t\tcase \"hint\":\n-\t\t\toptsElems = bsoncore.AppendValueElement(optsElems, \"$hint\", elem.Value())\n-\t\tcase \"comment\":\n-\t\t\toptsElems = bsoncore.AppendValueElement(optsElems, \"$comment\", elem.Value())\n-\t\tcase \"max\":\n-\t\t\toptsElems = bsoncore.AppendValueElement(optsElems, \"$max\", elem.Value())\n-\t\tcase \"min\":\n-\t\t\toptsElems = bsoncore.AppendValueElement(optsElems, \"$min\", elem.Value())\n-\t\tcase \"returnKey\":\n-\t\t\toptsElems = bsoncore.AppendValueElement(optsElems, \"$returnKey\", elem.Value())\n-\t\tcase \"showRecordId\":\n-\t\t\toptsElems = bsoncore.AppendValueElement(optsElems, \"$showDiskLoc\", elem.Value())\n-\t\tcase \"maxTimeMS\":\n-\t\t\toptsElems = bsoncore.AppendValueElement(optsElems, \"$maxTimeMS\", elem.Value())\n-\t\tcase \"snapshot\":\n-\t\t\toptsElems = bsoncore.AppendValueElement(optsElems, \"$snapshot\", elem.Value())\n-\t\tcase \"projection\":\n-\t\t\treturnFieldsSelector = elem.Value().Data\n-\t\tcase \"skip\":\n-\t\t\t// CRUD spec declares skip as int64 but numToSkip is int32 in OP_QUERY\n-\t\t\tnumToSkip = int32(elem.Value().Int64())\n-\t\tcase \"batchSize\":\n-\t\t\tbatchSize = elem.Value().Int32()\n-\t\t\t// Not possible to use batchSize = 1 because cursor will be closed on first batch\n-\t\t\tif batchSize == 1 {\n-\t\t\t\tbatchSize = 2\n-\t\t\t}\n-\t\tcase \"limit\":\n-\t\t\t// CRUD spec declares limit as int64 but numToReturn is int32 in OP_QUERY\n-\t\t\tlimit = int32(elem.Value().Int64())\n-\t\tcase \"singleBatch\":\n-\t\t\tsingleBatch = elem.Value().Boolean()\n-\t\tcase \"tailable\":\n-\t\t\tflags |= wiremessage.TailableCursor\n-\t\tcase \"awaitData\":\n-\t\t\tflags |= wiremessage.AwaitData\n-\t\tcase \"oplogReplay\":\n-\t\t\tflags |= wiremessage.OplogReplay\n-\t\tcase \"noCursorTimeout\":\n-\t\t\tflags |= wiremessage.NoCursorTimeout\n-\t\tcase \"allowPartialResults\":\n-\t\t\tflags |= wiremessage.Partial\n-\t\t}\n-\t}\n-\n-\t// for non-legacy servers, a negative limit is implemented as a positive limit + singleBatch = true\n-\tif singleBatch {\n-\t\tlimit = limit * -1\n-\t}\n-\tnumToReturn = op.calculateNumberToReturn(limit, batchSize)\n-\n-\t// add read preference if needed\n-\trp, err := op.createReadPref(desc, true)\n-\tif err != nil {\n-\t\treturn dst, info, \"\", err\n-\t}\n-\tif len(rp) > 0 {\n-\t\toptsElems = bsoncore.AppendDocumentElement(optsElems, \"$readPreference\", rp)\n-\t}\n-\n-\tif len(filter) == 0 {\n-\t\tvar fidx int32\n-\t\tfidx, filter = bsoncore.AppendDocumentStart(filter)\n-\t\tfilter, _ = bsoncore.AppendDocumentEnd(filter, fidx)\n-\t}\n-\n-\tvar wmIdx int32\n-\twmIdx, dst = wiremessage.AppendHeaderStart(dst, info.requestID, 0, wiremessage.OpQuery)\n-\tdst = wiremessage.AppendQueryFlags(dst, flags)\n-\tdst = wiremessage.AppendQueryFullCollectionName(dst, op.getFullCollectionName(collName))\n-\tdst = wiremessage.AppendQueryNumberToSkip(dst, numToSkip)\n-\tdst = wiremessage.AppendQueryNumberToReturn(dst, numToReturn)\n-\tdst = op.appendLegacyQueryDocument(dst, filter, optsElems)\n-\tif len(returnFieldsSelector) != 0 {\n-\t\t// returnFieldsSelector is optional\n-\t\tdst = append(dst, returnFieldsSelector...)\n-\t}\n-\n-\treturn bsoncore.UpdateLength(dst, wmIdx, int32(len(dst[wmIdx:]))), info, collName, nil\n-}\n-\n-func (op Operation) calculateNumberToReturn(limit, batchSize int32) int32 {\n-\tvar numToReturn int32\n-\n-\tif limit < 0 {\n-\t\tnumToReturn = limit\n-\t} else if limit == 0 {\n-\t\tnumToReturn = batchSize\n-\t} else if batchSize == 0 {\n-\t\tnumToReturn = limit\n-\t} else if limit < batchSize {\n-\t\tnumToReturn = limit\n-\t} else {\n-\t\tnumToReturn = batchSize\n-\t}\n-\n-\treturn numToReturn\n-}\n-\n-func (op Operation) legacyGetMore(ctx context.Context, dst []byte, srvr Server, conn Connection, desc description.SelectedServer) error {\n-\twm, startedInfo, collName, err := op.createLegacyGetMoreWiremessage(dst, desc)\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\n-\tstartedInfo.connID = conn.ID()\n-\top.publishStartedEvent(ctx, startedInfo)\n-\n-\tfinishedInfo := finishedInformation{\n-\t\tcmdName:   startedInfo.cmdName,\n-\t\trequestID: startedInfo.requestID,\n-\t\tstartTime: time.Now(),\n-\t\tconnID:    startedInfo.connID,\n-\t}\n-\tfinishedInfo.response, finishedInfo.cmdErr = op.roundTripLegacyCursor(ctx, wm, srvr, conn, collName, nextBatchIdentifier)\n-\top.publishFinishedEvent(ctx, finishedInfo)\n-\n-\tif finishedInfo.cmdErr != nil {\n-\t\treturn finishedInfo.cmdErr\n-\t}\n-\n-\tif op.ProcessResponseFn != nil {\n-\t\t// CurrentIndex is always 0 in this mode.\n-\t\tinfo := ResponseInfo{\n-\t\t\tServerResponse:        finishedInfo.response,\n-\t\t\tServer:                srvr,\n-\t\t\tConnection:            conn,\n-\t\t\tConnectionDescription: desc.Server,\n-\t\t}\n-\t\treturn op.ProcessResponseFn(info)\n-\t}\n-\treturn nil\n-}\n-\n-func (op Operation) createLegacyGetMoreWiremessage(dst []byte, desc description.SelectedServer) ([]byte, startedInformation, string, error) {\n-\tinfo := startedInformation{\n-\t\trequestID: wiremessage.NextRequestID(),\n-\t\tcmdName:   \"getMore\",\n-\t}\n-\n-\tvar cmdDoc bsoncore.Document\n-\tvar cmdIdx int32\n-\tvar err error\n-\n-\tcmdIdx, cmdDoc = bsoncore.AppendDocumentStart(cmdDoc)\n-\tcmdDoc, err = op.CommandFn(cmdDoc, desc)\n-\tif err != nil {\n-\t\treturn dst, info, \"\", err\n-\t}\n-\tcmdDoc, _ = bsoncore.AppendDocumentEnd(cmdDoc, cmdIdx)\n-\tinfo.cmd = cmdDoc\n-\n-\tcmdElems, err := cmdDoc.Elements()\n-\tif err != nil {\n-\t\treturn dst, info, \"\", err\n-\t}\n-\n-\tvar cursorID int64\n-\tvar numToReturn int32\n-\tvar collName string\n-\tfor _, elem := range cmdElems {\n-\t\tswitch elem.Key() {\n-\t\tcase \"getMore\":\n-\t\t\tcursorID = elem.Value().Int64()\n-\t\tcase \"collection\":\n-\t\t\tcollName = elem.Value().StringValue()\n-\t\tcase \"batchSize\":\n-\t\t\tnumToReturn = elem.Value().Int32()\n-\t\t}\n-\t}\n-\n-\tvar wmIdx int32\n-\twmIdx, dst = wiremessage.AppendHeaderStart(dst, info.requestID, 0, wiremessage.OpGetMore)\n-\tdst = wiremessage.AppendGetMoreZero(dst)\n-\tdst = wiremessage.AppendGetMoreFullCollectionName(dst, op.getFullCollectionName(collName))\n-\tdst = wiremessage.AppendGetMoreNumberToReturn(dst, numToReturn)\n-\tdst = wiremessage.AppendGetMoreCursorID(dst, cursorID)\n-\n-\treturn bsoncore.UpdateLength(dst, wmIdx, int32(len(dst[wmIdx:]))), info, collName, nil\n-}\n-\n-func (op Operation) legacyKillCursors(ctx context.Context, dst []byte, srvr Server, conn Connection, desc description.SelectedServer) error {\n-\twm, startedInfo, _, err := op.createLegacyKillCursorsWiremessage(dst, desc)\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\n-\tstartedInfo.connID = conn.ID()\n-\top.publishStartedEvent(ctx, startedInfo)\n-\n-\t// skip startTime because OP_KILL_CURSORS does not return a response\n-\tfinishedInfo := finishedInformation{\n-\t\tcmdName:   \"killCursors\",\n-\t\trequestID: startedInfo.requestID,\n-\t\tconnID:    startedInfo.connID,\n-\t}\n-\n-\terr = conn.WriteWireMessage(ctx, wm)\n-\tif err != nil {\n-\t\terr = Error{Message: err.Error(), Labels: []string{TransientTransactionError, NetworkError}}\n-\t\tif ep, ok := srvr.(ErrorProcessor); ok {\n-\t\t\t_ = ep.ProcessError(err, conn)\n-\t\t}\n-\n-\t\tfinishedInfo.cmdErr = err\n-\t\top.publishFinishedEvent(ctx, finishedInfo)\n-\t\treturn err\n-\t}\n-\n-\tridx, response := bsoncore.AppendDocumentStart(nil)\n-\tresponse = bsoncore.AppendInt32Element(response, \"ok\", 1)\n-\tresponse = bsoncore.AppendArrayElement(response, \"cursorsUnknown\", startedInfo.cmd.Lookup(\"cursors\").Array())\n-\tresponse, _ = bsoncore.AppendDocumentEnd(response, ridx)\n-\n-\tfinishedInfo.response = response\n-\top.publishFinishedEvent(ctx, finishedInfo)\n-\treturn nil\n-}\n-\n-func (op Operation) createLegacyKillCursorsWiremessage(dst []byte, desc description.SelectedServer) ([]byte, startedInformation, string, error) {\n-\tinfo := startedInformation{\n-\t\tcmdName:   \"killCursors\",\n-\t\trequestID: wiremessage.NextRequestID(),\n-\t}\n-\n-\tvar cmdDoc bsoncore.Document\n-\tvar cmdIdx int32\n-\tvar err error\n-\n-\tcmdIdx, cmdDoc = bsoncore.AppendDocumentStart(cmdDoc)\n-\tcmdDoc, err = op.CommandFn(cmdDoc, desc)\n-\tif err != nil {\n-\t\treturn nil, info, \"\", err\n-\t}\n-\tcmdDoc, _ = bsoncore.AppendDocumentEnd(cmdDoc, cmdIdx)\n-\tinfo.cmd = cmdDoc\n-\n-\tcmdElems, err := cmdDoc.Elements()\n-\tif err != nil {\n-\t\treturn nil, info, \"\", err\n-\t}\n-\n-\tvar collName string\n-\tvar cursors bsoncore.Array\n-\tfor _, elem := range cmdElems {\n-\t\tswitch elem.Key() {\n-\t\tcase \"killCursors\":\n-\t\t\tcollName = elem.Value().StringValue()\n-\t\tcase \"cursors\":\n-\t\t\tcursors = elem.Value().Array()\n-\t\t}\n-\t}\n-\n-\tvar cursorIDs []int64\n-\tif cursors != nil {\n-\t\tcursorValues, err := cursors.Values()\n-\t\tif err != nil {\n-\t\t\treturn nil, info, \"\", err\n-\t\t}\n-\n-\t\tfor _, cursorVal := range cursorValues {\n-\t\t\tcursorIDs = append(cursorIDs, cursorVal.Int64())\n-\t\t}\n-\t}\n-\n-\tvar wmIdx int32\n-\twmIdx, dst = wiremessage.AppendHeaderStart(dst, info.requestID, 0, wiremessage.OpKillCursors)\n-\tdst = wiremessage.AppendKillCursorsZero(dst)\n-\tdst = wiremessage.AppendKillCursorsNumberIDs(dst, int32(len(cursorIDs)))\n-\tdst = wiremessage.AppendKillCursorsCursorIDs(dst, cursorIDs)\n-\n-\treturn bsoncore.UpdateLength(dst, wmIdx, int32(len(dst[wmIdx:]))), info, collName, nil\n-}\n-\n-func (op Operation) legacyListCollections(ctx context.Context, dst []byte, srvr Server, conn Connection, desc description.SelectedServer) error {\n-\twm, startedInfo, collName, err := op.createLegacyListCollectionsWiremessage(dst, desc)\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\tstartedInfo.connID = conn.ID()\n-\top.publishStartedEvent(ctx, startedInfo)\n-\n-\tfinishedInfo := finishedInformation{\n-\t\tcmdName:   startedInfo.cmdName,\n-\t\trequestID: startedInfo.requestID,\n-\t\tstartTime: time.Now(),\n-\t\tconnID:    startedInfo.connID,\n-\t}\n-\n-\tfinishedInfo.response, finishedInfo.cmdErr = op.roundTripLegacyCursor(ctx, wm, srvr, conn, collName, firstBatchIdentifier)\n-\top.publishFinishedEvent(ctx, finishedInfo)\n-\n-\tif finishedInfo.cmdErr != nil {\n-\t\treturn finishedInfo.cmdErr\n-\t}\n-\n-\tif op.ProcessResponseFn != nil {\n-\t\t// CurrentIndex is always 0 in this mode.\n-\t\tinfo := ResponseInfo{\n-\t\t\tServerResponse:        finishedInfo.response,\n-\t\t\tServer:                srvr,\n-\t\t\tConnection:            conn,\n-\t\t\tConnectionDescription: desc.Server,\n-\t\t}\n-\t\treturn op.ProcessResponseFn(info)\n-\t}\n-\treturn nil\n-}\n-\n-func (op Operation) createLegacyListCollectionsWiremessage(dst []byte, desc description.SelectedServer) ([]byte, startedInformation, string, error) {\n-\tinfo := startedInformation{\n-\t\tcmdName:   \"find\",\n-\t\trequestID: wiremessage.NextRequestID(),\n-\t}\n-\n-\tvar cmdDoc bsoncore.Document\n-\tvar cmdIdx int32\n-\tvar err error\n-\n-\tcmdIdx, cmdDoc = bsoncore.AppendDocumentStart(cmdDoc)\n-\tif cmdDoc, err = op.CommandFn(cmdDoc, desc); err != nil {\n-\t\treturn dst, info, \"\", err\n-\t}\n-\tcmdDoc, _ = bsoncore.AppendDocumentEnd(cmdDoc, cmdIdx)\n-\tinfo.cmd, err = op.convertCommandToFind(cmdDoc, listCollectionsNamespace)\n-\tif err != nil {\n-\t\treturn nil, info, \"\", err\n-\t}\n-\n-\t// lookup filter directly instead of calling cmdDoc.Elements() because the only listCollections option is nameOnly,\n-\t// which doesn't apply to legacy servers\n-\tvar originalFilter bsoncore.Document\n-\tif filterVal, err := cmdDoc.LookupErr(\"filter\"); err == nil {\n-\t\toriginalFilter = filterVal.Document()\n-\t}\n-\n-\tvar optsElems []byte\n-\tfilter, err := op.transformListCollectionsFilter(originalFilter)\n-\tif err != nil {\n-\t\treturn dst, info, \"\", err\n-\t}\n-\trp, err := op.createReadPref(desc, true)\n-\tif err != nil {\n-\t\treturn dst, info, \"\", err\n-\t}\n-\tif len(rp) > 0 {\n-\t\toptsElems = bsoncore.AppendDocumentElement(optsElems, \"$readPreference\", rp)\n-\t}\n-\n-\tvar batchSize int32\n-\tif val, ok := cmdDoc.Lookup(\"cursor\", \"batchSize\").AsInt32OK(); ok {\n-\t\tbatchSize = val\n-\t}\n-\n-\tvar wmIdx int32\n-\twmIdx, dst = wiremessage.AppendHeaderStart(dst, info.requestID, 0, wiremessage.OpQuery)\n-\tdst = wiremessage.AppendQueryFlags(dst, op.secondaryOK(desc))\n-\tdst = wiremessage.AppendQueryFullCollectionName(dst, op.getFullCollectionName(listCollectionsNamespace))\n-\tdst = wiremessage.AppendQueryNumberToSkip(dst, 0)\n-\tdst = wiremessage.AppendQueryNumberToReturn(dst, batchSize)\n-\tdst = op.appendLegacyQueryDocument(dst, filter, optsElems)\n-\t// leave out returnFieldsSelector because it is optional\n-\n-\treturn bsoncore.UpdateLength(dst, wmIdx, int32(len(dst[wmIdx:]))), info, listCollectionsNamespace, nil\n-}\n-\n-func (op Operation) transformListCollectionsFilter(filter bsoncore.Document) (bsoncore.Document, error) {\n-\t// filter out results containing $ because those represent indexes\n-\tvar regexFilter bsoncore.Document\n-\tvar ridx int32\n-\tridx, regexFilter = bsoncore.AppendDocumentStart(regexFilter)\n-\tregexFilter = bsoncore.AppendRegexElement(regexFilter, \"name\", \"^[^$]*$\", \"\")\n-\tregexFilter, _ = bsoncore.AppendDocumentEnd(regexFilter, ridx)\n-\n-\tif len(filter) == 0 {\n-\t\treturn regexFilter, nil\n-\t}\n-\n-\tconvertedIdx, convertedFilter := bsoncore.AppendDocumentStart(nil)\n-\telems, err := filter.Elements()\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\n-\tfor _, elem := range elems {\n-\t\tif elem.Key() != \"name\" {\n-\t\t\tconvertedFilter = append(convertedFilter, elem...)\n-\t\t\tcontinue\n-\t\t}\n-\n-\t\t// the name value in a filter for legacy list collections must be a string and has to be prepended\n-\t\t// with the database name\n-\t\tnameVal := elem.Value()\n-\t\tif nameVal.Type != bsontype.String {\n-\t\t\treturn nil, ErrFilterType\n-\t\t}\n-\t\tconvertedFilter = bsoncore.AppendStringElement(convertedFilter, \"name\", op.getFullCollectionName(nameVal.StringValue()))\n-\t}\n-\tconvertedFilter, _ = bsoncore.AppendDocumentEnd(convertedFilter, convertedIdx)\n-\n-\t// combine regexFilter and convertedFilter with $and\n-\tvar combinedFilter bsoncore.Document\n-\tvar cidx, aidx int32\n-\tcidx, combinedFilter = bsoncore.AppendDocumentStart(combinedFilter)\n-\taidx, combinedFilter = bsoncore.AppendArrayElementStart(combinedFilter, \"$and\")\n-\tcombinedFilter = bsoncore.AppendDocumentElement(combinedFilter, \"0\", regexFilter)\n-\tcombinedFilter = bsoncore.AppendDocumentElement(combinedFilter, \"1\", convertedFilter)\n-\tcombinedFilter, _ = bsoncore.AppendArrayEnd(combinedFilter, aidx)\n-\tcombinedFilter, _ = bsoncore.AppendDocumentEnd(combinedFilter, cidx)\n-\n-\treturn combinedFilter, nil\n-}\n-\n-func (op Operation) legacyListIndexes(ctx context.Context, dst []byte, srvr Server, conn Connection, desc description.SelectedServer) error {\n-\twm, startedInfo, collName, err := op.createLegacyListIndexesWiremessage(dst, desc)\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\tstartedInfo.connID = conn.ID()\n-\top.publishStartedEvent(ctx, startedInfo)\n-\n-\tfinishedInfo := finishedInformation{\n-\t\tcmdName:   startedInfo.cmdName,\n-\t\trequestID: startedInfo.requestID,\n-\t\tstartTime: time.Now(),\n-\t\tconnID:    startedInfo.connID,\n-\t}\n-\n-\tfinishedInfo.response, finishedInfo.cmdErr = op.roundTripLegacyCursor(ctx, wm, srvr, conn, collName, firstBatchIdentifier)\n-\top.publishFinishedEvent(ctx, finishedInfo)\n-\n-\tif finishedInfo.cmdErr != nil {\n-\t\treturn finishedInfo.cmdErr\n-\t}\n-\n-\tif op.ProcessResponseFn != nil {\n-\t\t// CurrentIndex is always 0 in this mode.\n-\t\tinfo := ResponseInfo{\n-\t\t\tServerResponse:        finishedInfo.response,\n-\t\t\tServer:                srvr,\n-\t\t\tConnection:            conn,\n-\t\t\tConnectionDescription: desc.Server,\n-\t\t}\n-\t\treturn op.ProcessResponseFn(info)\n-\t}\n-\treturn nil\n-}\n-\n-func (op Operation) createLegacyListIndexesWiremessage(dst []byte, desc description.SelectedServer) ([]byte, startedInformation, string, error) {\n-\tinfo := startedInformation{\n-\t\tcmdName:   \"find\",\n-\t\trequestID: wiremessage.NextRequestID(),\n-\t}\n-\n-\tvar cmdDoc bsoncore.Document\n-\tvar cmdIndex int32\n-\tvar err error\n-\n-\tcmdIndex, cmdDoc = bsoncore.AppendDocumentStart(cmdDoc)\n-\tcmdDoc, err = op.CommandFn(cmdDoc, desc)\n-\tif err != nil {\n-\t\treturn dst, info, \"\", err\n-\t}\n-\tcmdDoc, _ = bsoncore.AppendDocumentEnd(cmdDoc, cmdIndex)\n-\tinfo.cmd, err = op.convertCommandToFind(cmdDoc, listIndexesNamespace)\n-\tif err != nil {\n-\t\treturn nil, info, \"\", err\n-\t}\n-\n-\tcmdElems, err := cmdDoc.Elements()\n-\tif err != nil {\n-\t\treturn nil, info, \"\", err\n-\t}\n-\n-\tvar filterCollName string\n-\tvar batchSize int32\n-\tvar optsElems []byte // options elements\n-\tfor _, elem := range cmdElems {\n-\t\tswitch elem.Key() {\n-\t\tcase \"listIndexes\":\n-\t\t\tfilterCollName = elem.Value().StringValue()\n-\t\tcase \"cursor\":\n-\t\t\t// the batchSize option is embedded in a cursor subdocument\n-\t\t\tcursorDoc := elem.Value().Document()\n-\t\t\tif val, err := cursorDoc.LookupErr(\"batchSize\"); err == nil {\n-\t\t\t\tbatchSize = val.Int32()\n-\t\t\t}\n-\t\tcase \"maxTimeMS\":\n-\t\t\toptsElems = bsoncore.AppendValueElement(optsElems, \"$maxTimeMS\", elem.Value())\n-\t\t}\n-\t}\n-\n-\t// always filter with {ns: db.collection}\n-\tfidx, filter := bsoncore.AppendDocumentStart(nil)\n-\tfilter = bsoncore.AppendStringElement(filter, \"ns\", op.getFullCollectionName(filterCollName))\n-\tfilter, _ = bsoncore.AppendDocumentEnd(filter, fidx)\n-\n-\trp, err := op.createReadPref(desc, true)\n-\tif err != nil {\n-\t\treturn dst, info, \"\", err\n-\t}\n-\tif len(rp) > 0 {\n-\t\toptsElems = bsoncore.AppendDocumentElement(optsElems, \"$readPreference\", rp)\n-\t}\n-\n-\tvar wmIdx int32\n-\twmIdx, dst = wiremessage.AppendHeaderStart(dst, info.requestID, 0, wiremessage.OpQuery)\n-\tdst = wiremessage.AppendQueryFlags(dst, op.secondaryOK(desc))\n-\tdst = wiremessage.AppendQueryFullCollectionName(dst, op.getFullCollectionName(listIndexesNamespace))\n-\tdst = wiremessage.AppendQueryNumberToSkip(dst, 0)\n-\tdst = wiremessage.AppendQueryNumberToReturn(dst, batchSize)\n-\tdst = op.appendLegacyQueryDocument(dst, filter, optsElems)\n-\t// leave out returnFieldsSelector because it is optional\n-\n-\treturn bsoncore.UpdateLength(dst, wmIdx, int32(len(dst[wmIdx:]))), info, listIndexesNamespace, nil\n-}\n-\n-// convertCommandToFind takes a non-legacy command document for a command that needs to be run as a find on legacy\n-// servers and converts it to a find command document for APM.\n-func (op Operation) convertCommandToFind(cmdDoc bsoncore.Document, collName string) (bsoncore.Document, error) {\n-\tcidx, converted := bsoncore.AppendDocumentStart(nil)\n-\telems, err := cmdDoc.Elements()\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\n-\tconverted = bsoncore.AppendStringElement(converted, \"find\", collName)\n-\t// skip the first element because that will have the old command name\n-\tfor i := 1; i < len(elems); i++ {\n-\t\tconverted = bsoncore.AppendValueElement(converted, elems[i].Key(), elems[i].Value())\n-\t}\n-\n-\tconverted, _ = bsoncore.AppendDocumentEnd(converted, cidx)\n-\treturn converted, nil\n-}\n-\n-// appendLegacyQueryDocument takes a filter and a list of options elements for a legacy find operation, creates\n-// a query document, and appends it to dst.\n-func (op Operation) appendLegacyQueryDocument(dst []byte, filter bsoncore.Document, opts []byte) []byte {\n-\tif len(opts) == 0 {\n-\t\tdst = append(dst, filter...)\n-\t\treturn dst\n-\t}\n-\n-\t// filter must be wrapped in $query if other $-modifiers are used\n-\tvar qidx int32\n-\tqidx, dst = bsoncore.AppendDocumentStart(dst)\n-\tdst = bsoncore.AppendDocumentElement(dst, \"$query\", filter)\n-\tdst = append(dst, opts...)\n-\tdst, _ = bsoncore.AppendDocumentEnd(dst, qidx)\n-\treturn dst\n-}\n-\n-// roundTripLegacyCursor sends a wiremessage for an operation expecting a cursor result and converts the legacy\n-// document sequence into a cursor document.\n-func (op Operation) roundTripLegacyCursor(ctx context.Context, wm []byte, srvr Server, conn Connection, collName, identifier string) (bsoncore.Document, error) {\n-\twm, err := op.roundTripLegacy(ctx, conn, wm)\n-\tif ep, ok := srvr.(ErrorProcessor); ok {\n-\t\t_ = ep.ProcessError(err, conn)\n-\t}\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\n-\treturn op.upconvertCursorResponse(wm, identifier, collName)\n-}\n-\n-// roundTripLegacy handles writing a wire message and reading the response.\n-func (op Operation) roundTripLegacy(ctx context.Context, conn Connection, wm []byte) ([]byte, error) {\n-\terr := conn.WriteWireMessage(ctx, wm)\n-\tif err != nil {\n-\t\treturn nil, Error{Message: err.Error(), Labels: []string{TransientTransactionError, NetworkError}, Wrapped: err}\n-\t}\n-\n-\twm, err = conn.ReadWireMessage(ctx, wm[:0])\n-\tif err != nil {\n-\t\terr = Error{Message: err.Error(), Labels: []string{TransientTransactionError, NetworkError}, Wrapped: err}\n-\t}\n-\treturn wm, err\n-}\n-\n-func (op Operation) upconvertCursorResponse(wm []byte, batchIdentifier string, collName string) (bsoncore.Document, error) {\n-\treply := op.decodeOpReply(wm, true)\n-\tif reply.err != nil {\n-\t\treturn nil, reply.err\n-\t}\n-\n-\tcursorIdx, cursorDoc := bsoncore.AppendDocumentStart(nil)\n-\t// convert reply documents to BSON array\n-\tvar arrIdx int32\n-\tarrIdx, cursorDoc = bsoncore.AppendArrayElementStart(cursorDoc, batchIdentifier)\n-\tfor i, doc := range reply.documents {\n-\t\tcursorDoc = bsoncore.AppendDocumentElement(cursorDoc, strconv.Itoa(i), doc)\n-\t}\n-\tcursorDoc, _ = bsoncore.AppendArrayEnd(cursorDoc, arrIdx)\n-\n-\tcursorDoc = bsoncore.AppendInt64Element(cursorDoc, \"id\", reply.cursorID)\n-\tcursorDoc = bsoncore.AppendStringElement(cursorDoc, \"ns\", op.getFullCollectionName(collName))\n-\tcursorDoc, _ = bsoncore.AppendDocumentEnd(cursorDoc, cursorIdx)\n-\n-\tresIdx, resDoc := bsoncore.AppendDocumentStart(nil)\n-\tresDoc = bsoncore.AppendInt32Element(resDoc, \"ok\", 1)\n-\tresDoc = bsoncore.AppendDocumentElement(resDoc, \"cursor\", cursorDoc)\n-\tresDoc, _ = bsoncore.AppendDocumentEnd(resDoc, resIdx)\n-\n-\treturn resDoc, nil\n-}"
    },
    {
      "sha": "dfa09b84e76e4011e7fa44b98a50215df86b41a6",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/session/client_session.go",
      "status": "modified",
      "additions": 13,
      "deletions": 6,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fsession%2Fclient_session.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fsession%2Fclient_session.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fsession%2Fclient_session.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -215,16 +215,24 @@ func NewClientSession(pool *Pool, clientID uuid.UUID, sessionType Type, opts ...\n \t\treturn nil, errors.New(\"causal consistency and snapshot cannot both be set for a session\")\n \t}\n \n-\tservSess, err := pool.GetSession()\n-\tif err != nil {\n-\t\treturn nil, err\n+\t// Server checkout for implicit sessions are deferred until after checking out a connection. This will limit the\n+\t// number of implicit sessions to no greater than an applications maxPoolSize.\n+\tif sessionType == Explicit {\n+\t\tif err := c.SetServer(); err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n \t}\n \n-\tc.Server = servSess\n-\n \treturn c, nil\n }\n \n+// SetServer will check out a session from the client session pool.\n+func (c *Client) SetServer() error {\n+\tvar err error\n+\tc.Server, err = c.pool.GetSession()\n+\treturn err\n+}\n+\n // AdvanceClusterTime updates the session's cluster time.\n func (c *Client) AdvanceClusterTime(clusterTime bson.Raw) error {\n \tif c.Terminated {\n@@ -343,7 +351,6 @@ func (c *Client) EndSession() {\n \tif c.Terminated {\n \t\treturn\n \t}\n-\n \tc.Terminated = true\n \tc.pool.ReturnSession(c.Server)\n }"
    },
    {
      "sha": "34b863c11106ddce0debdd706eb68a15e56710d8",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/session/session_pool.go",
      "status": "modified",
      "additions": 9,
      "deletions": 7,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fsession%2Fsession_pool.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fsession%2Fsession_pool.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Fsession%2Fsession_pool.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -8,6 +8,7 @@ package session\n \n import (\n \t\"sync\"\n+\t\"sync/atomic\"\n \n \t\"go.mongodb.org/mongo-driver/mongo/description\"\n \t\"go.mongodb.org/mongo-driver/x/bsonx/bsoncore\"\n@@ -29,13 +30,14 @@ type topologyDescription struct {\n \n // Pool is a pool of server sessions that can be reused.\n type Pool struct {\n+\t// number of sessions checked out of pool (accessed atomically)\n+\tcheckedOut int64\n+\n \tdescChan       <-chan description.Topology\n \thead           *Node\n \ttail           *Node\n \tlatestTopology topologyDescription\n \tmutex          sync.Mutex // mutex to protect list and sessionTimeout\n-\n-\tcheckedOut int // number of sessions checked out of pool\n }\n \n func (p *Pool) createServerSession() (*Server, error) {\n@@ -44,7 +46,7 @@ func (p *Pool) createServerSession() (*Server, error) {\n \t\treturn nil, err\n \t}\n \n-\tp.checkedOut++\n+\tatomic.AddInt64(&p.checkedOut, 1)\n \treturn s, nil\n }\n \n@@ -100,7 +102,7 @@ func (p *Pool) GetSession() (*Server, error) {\n \t\t\tp.head = p.head.next\n \t\t}\n \n-\t\tp.checkedOut++\n+\t\tatomic.AddInt64(&p.checkedOut, 1)\n \t\treturn session, nil\n \t}\n \n@@ -118,7 +120,7 @@ func (p *Pool) ReturnSession(ss *Server) {\n \tp.mutex.Lock()\n \tdefer p.mutex.Unlock()\n \n-\tp.checkedOut--\n+\tatomic.AddInt64(&p.checkedOut, -1)\n \tp.updateTimeout()\n \t// check sessions at end of queue for expired\n \t// stop checking after hitting the first valid session\n@@ -185,6 +187,6 @@ func (p *Pool) String() string {\n }\n \n // CheckedOut returns number of sessions checked out from pool.\n-func (p *Pool) CheckedOut() int {\n-\treturn p.checkedOut\n+func (p *Pool) CheckedOut() int64 {\n+\treturn atomic.LoadInt64(&p.checkedOut)\n }"
    },
    {
      "sha": "e54a6d482bc6530cbc5189a39deb9e87412ec08e",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/connection.go",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fconnection.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fconnection.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fconnection.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -200,6 +200,7 @@ func (c *connection) connect(ctx context.Context) (err error) {\n \t\tocspOpts := &ocsp.VerifyOptions{\n \t\t\tCache:                   c.config.ocspCache,\n \t\t\tDisableEndpointChecking: c.config.disableOCSPEndpointCheck,\n+\t\t\tHTTPClient:              c.config.httpClient,\n \t\t}\n \t\ttlsNc, err := configureTLS(dialCtx, c.config.tlsConnectionSource, c.nc, c.addr, tlsConfig, ocspOpts)\n \t\tif err != nil {\n@@ -406,7 +407,7 @@ func (c *connection) readWireMessage(ctx context.Context, dst []byte) ([]byte, e\n \t\tif err == io.EOF {\n \t\t\tmessage = \"socket was unexpectedly closed\"\n \t\t}\n-\t\treturn nil, ConnectionError{\n+\t\treturn dst, ConnectionError{\n \t\t\tConnectionID: c.id,\n \t\t\tWrapped:      transformNetworkError(ctx, err, contextDeadlineUsed),\n \t\t\tmessage:      message,\n@@ -438,7 +439,7 @@ func (c *connection) read(ctx context.Context, dst []byte) (bytesRead []byte, er\n \t// reading messages from an exhaust cursor.\n \t_, err = io.ReadFull(c.nc, sizeBuf[:])\n \tif err != nil {\n-\t\treturn nil, \"incomplete read of message header\", err\n+\t\treturn dst, \"incomplete read of message header\", err\n \t}\n \n \t// read the length as an int32\n@@ -451,7 +452,7 @@ func (c *connection) read(ctx context.Context, dst []byte) (bytesRead []byte, er\n \t\tmaxMessageSize = defaultMaxMessageSize\n \t}\n \tif uint32(size) > maxMessageSize {\n-\t\treturn nil, errResponseTooLarge.Error(), errResponseTooLarge\n+\t\treturn dst, errResponseTooLarge.Error(), errResponseTooLarge\n \t}\n \n \tif int(size) > cap(dst) {\n@@ -465,7 +466,7 @@ func (c *connection) read(ctx context.Context, dst []byte) (bytesRead []byte, er\n \n \t_, err = io.ReadFull(c.nc, dst[4:])\n \tif err != nil {\n-\t\treturn nil, \"incomplete read of full message\", err\n+\t\treturn dst, \"incomplete read of full message\", err\n \t}\n \n \treturn dst, \"\", nil\n@@ -625,9 +626,6 @@ func (c *Connection) CompressWireMessage(src, dst []byte) ([]byte, error) {\n \t\treturn dst, ErrConnectionClosed\n \t}\n \tif c.connection.compressor == wiremessage.CompressorNoOp {\n-\t\tif len(dst) == 0 {\n-\t\t\treturn src, nil\n-\t\t}\n \t\treturn append(dst, src...), nil\n \t}\n \t_, reqid, respto, origcode, rem, ok := wiremessage.ReadHeader(src)"
    },
    {
      "sha": "6e6ea01d80a786a99d5bf22924c7f163887bf934",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/connection_options.go",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fconnection_options.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fconnection_options.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fconnection_options.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -10,10 +10,12 @@ import (\n \t\"context\"\n \t\"crypto/tls\"\n \t\"net\"\n+\t\"net/http\"\n \t\"time\"\n \n \t\"go.mongodb.org/mongo-driver/bson/primitive\"\n \t\"go.mongodb.org/mongo-driver/event\"\n+\t\"go.mongodb.org/mongo-driver/internal\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver/ocsp\"\n )\n@@ -54,6 +56,7 @@ type connectionConfig struct {\n \treadTimeout              time.Duration\n \twriteTimeout             time.Duration\n \ttlsConfig                *tls.Config\n+\thttpClient               *http.Client\n \tcompressors              []string\n \tzlibLevel                *int\n \tzstdLevel                *int\n@@ -69,6 +72,7 @@ func newConnectionConfig(opts ...ConnectionOption) *connectionConfig {\n \t\tconnectTimeout:      30 * time.Second,\n \t\tdialer:              nil,\n \t\ttlsConnectionSource: defaultTLSConnectionSource,\n+\t\thttpClient:          internal.DefaultHTTPClient,\n \t}\n \n \tfor _, opt := range opts {\n@@ -152,6 +156,13 @@ func WithTLSConfig(fn func(*tls.Config) *tls.Config) ConnectionOption {\n \t}\n }\n \n+// WithHTTPClient configures the HTTP client for a connection.\n+func WithHTTPClient(fn func(*http.Client) *http.Client) ConnectionOption {\n+\treturn func(c *connectionConfig) {\n+\t\tc.httpClient = fn(c.httpClient)\n+\t}\n+}\n+\n // WithMonitor configures a event for command monitoring.\n func WithMonitor(fn func(*event.CommandMonitor) *event.CommandMonitor) ConnectionOption {\n \treturn func(c *connectionConfig) {"
    },
    {
      "sha": "4f7b4854051bbcb4bffd657290ee3ef513b865b2",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/errors.go",
      "status": "modified",
      "additions": 15,
      "deletions": 2,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ferrors.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ferrors.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ferrors.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -7,6 +7,7 @@\n package topology\n \n import (\n+\t\"context\"\n \t\"fmt\"\n \n \t\"go.mongodb.org/mongo-driver/mongo/description\"\n@@ -78,8 +79,20 @@ type WaitQueueTimeoutError struct {\n // Error implements the error interface.\n func (w WaitQueueTimeoutError) Error() string {\n \terrorMsg := \"timed out while checking out a connection from connection pool\"\n-\tif w.Wrapped != nil {\n-\t\terrorMsg = fmt.Sprintf(\"%s: %s\", errorMsg, w.Wrapped.Error())\n+\tswitch w.Wrapped {\n+\tcase nil:\n+\tcase context.Canceled:\n+\t\terrorMsg = fmt.Sprintf(\n+\t\t\t\"%s: %s\",\n+\t\t\t\"canceled while checking out a connection from connection pool\",\n+\t\t\tw.Wrapped.Error(),\n+\t\t)\n+\tdefault:\n+\t\terrorMsg = fmt.Sprintf(\n+\t\t\t\"%s: %s\",\n+\t\t\terrorMsg,\n+\t\t\tw.Wrapped.Error(),\n+\t\t)\n \t}\n \n \treturn fmt.Sprintf("
    },
    {
      "sha": "1ee8dce4964ccd0d96cdd47fe3a9dbb63dbba56e",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/fsm.go",
      "status": "modified",
      "additions": 73,
      "deletions": 26,
      "changes": 99,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ffsm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ffsm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ffsm.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -17,13 +17,11 @@ import (\n )\n \n var (\n-\t// SupportedWireVersions is the range of wire versions supported by the driver.\n-\tSupportedWireVersions = description.NewVersionRange(2, 17)\n-)\n-\n-const (\n \t// MinSupportedMongoDBVersion is the version string for the lowest MongoDB version supported by the driver.\n-\tMinSupportedMongoDBVersion = \"2.6\"\n+\tMinSupportedMongoDBVersion = \"3.6\"\n+\n+\t// SupportedWireVersions is the range of wire versions supported by the driver.\n+\tSupportedWireVersions = description.NewVersionRange(6, 17)\n )\n \n type fsm struct {\n@@ -230,30 +228,78 @@ func (f *fsm) checkIfHasPrimary() {\n \t}\n }\n \n-func (f *fsm) updateRSFromPrimary(s description.Server) {\n-\tif f.SetName == \"\" {\n-\t\tf.SetName = s.SetName\n-\t} else if f.SetName != s.SetName {\n-\t\tf.removeServerByAddr(s.Addr)\n-\t\tf.checkIfHasPrimary()\n-\t\treturn\n+// hasStalePrimary returns true if the topology has a primary that is \"stale\".\n+func hasStalePrimary(fsm fsm, srv description.Server) bool {\n+\t// Compare the election ID values of the server and the topology lexicographically.\n+\tcompRes := bytes.Compare(srv.ElectionID[:], fsm.maxElectionID[:])\n+\n+\tif wireVersion := srv.WireVersion; wireVersion != nil && wireVersion.Max >= 17 {\n+\t\t// In the Post-6.0 case, a primary is considered \"stale\" if the server's election ID is greather than the\n+\t\t// topology's max election ID. In these versions, the primary is also considered \"stale\" if the server's\n+\t\t// election ID is LTE to the topologies election ID and the server's \"setVersion\" is less than the topology's\n+\t\t// max \"setVersion\".\n+\t\treturn compRes == -1 || (compRes != 1 && srv.SetVersion < fsm.maxSetVersion)\n \t}\n \n-\tif s.SetVersion != 0 && !s.ElectionID.IsZero() {\n-\t\tif f.maxSetVersion > s.SetVersion || bytes.Compare(f.maxElectionID[:], s.ElectionID[:]) == 1 {\n-\t\t\tf.replaceServer(description.Server{\n-\t\t\t\tAddr:      s.Addr,\n-\t\t\t\tLastError: fmt.Errorf(\"was a primary, but its set version or election id is stale\"),\n+\t// If the server's election ID is less than the topology's max election ID, the primary is considered\n+\t// \"stale\". Similarly, if the server's \"setVersion\" is less than the topology's max \"setVersion\", the\n+\t// primary is considered stale.\n+\treturn compRes == -1 || fsm.maxSetVersion > srv.SetVersion\n+}\n+\n+// transferEVTuple will transfer the (\"ElectionID\", \"SetVersion\") tuple from the description server to the topology.\n+// If the primary is stale, the tuple will not be transferred, the topology will update it's \"Kind\" value, and this\n+// routine will return \"false\".\n+func transferEVTuple(srv description.Server, fsm *fsm) bool {\n+\tstalePrimary := hasStalePrimary(*fsm, srv)\n+\n+\tif wireVersion := srv.WireVersion; wireVersion != nil && wireVersion.Max >= 17 {\n+\t\tif stalePrimary {\n+\t\t\tfsm.checkIfHasPrimary()\n+\t\t\treturn false\n+\t\t}\n+\n+\t\tfsm.maxElectionID = srv.ElectionID\n+\t\tfsm.maxSetVersion = srv.SetVersion\n+\n+\t\treturn true\n+\t}\n+\n+\tif srv.SetVersion != 0 && !srv.ElectionID.IsZero() {\n+\t\tif stalePrimary {\n+\t\t\tfsm.replaceServer(description.Server{\n+\t\t\t\tAddr: srv.Addr,\n+\t\t\t\tLastError: fmt.Errorf(\n+\t\t\t\t\t\"was a primary, but its set version or election id is stale\"),\n \t\t\t})\n-\t\t\tf.checkIfHasPrimary()\n-\t\t\treturn\n+\n+\t\t\tfsm.checkIfHasPrimary()\n+\n+\t\t\treturn false\n \t\t}\n \n-\t\tf.maxElectionID = s.ElectionID\n+\t\tfsm.maxElectionID = srv.ElectionID\n \t}\n \n-\tif s.SetVersion > f.maxSetVersion {\n-\t\tf.maxSetVersion = s.SetVersion\n+\tif srv.SetVersion > fsm.maxSetVersion {\n+\t\tfsm.maxSetVersion = srv.SetVersion\n+\t}\n+\n+\treturn true\n+}\n+\n+func (f *fsm) updateRSFromPrimary(srv description.Server) {\n+\tif f.SetName == \"\" {\n+\t\tf.SetName = srv.SetName\n+\t} else if f.SetName != srv.SetName {\n+\t\tf.removeServerByAddr(srv.Addr)\n+\t\tf.checkIfHasPrimary()\n+\n+\t\treturn\n+\t}\n+\n+\tif ok := transferEVTuple(srv, f); !ok {\n+\t\treturn\n \t}\n \n \tif j, ok := f.findPrimary(); ok {\n@@ -263,22 +309,23 @@ func (f *fsm) updateRSFromPrimary(s description.Server) {\n \t\t})\n \t}\n \n-\tf.replaceServer(s)\n+\tf.replaceServer(srv)\n \n \tfor j := len(f.Servers) - 1; j >= 0; j-- {\n \t\tfound := false\n-\t\tfor _, member := range s.Members {\n+\t\tfor _, member := range srv.Members {\n \t\t\tif member == f.Servers[j].Addr {\n \t\t\t\tfound = true\n \t\t\t\tbreak\n \t\t\t}\n \t\t}\n+\n \t\tif !found {\n \t\t\tf.removeServer(j)\n \t\t}\n \t}\n \n-\tfor _, member := range s.Members {\n+\tfor _, member := range srv.Members {\n \t\tif _, ok := f.findServer(member); !ok {\n \t\t\tf.addServer(member)\n \t\t}"
    },
    {
      "sha": "998d2a02531d6ea71a28a0b77ce07b75ea6c5a32",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/rtt_monitor.go",
      "status": "modified",
      "additions": 43,
      "deletions": 10,
      "changes": 53,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Frtt_monitor.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Frtt_monitor.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Frtt_monitor.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -43,7 +43,7 @@ type rttMonitor struct {\n \tsamples       []time.Duration\n \toffset        int\n \tminRTT        time.Duration\n-\tRTT90         time.Duration\n+\trtt90         time.Duration\n \taverageRTT    time.Duration\n \taverageRTTSet bool\n \n@@ -53,6 +53,8 @@ type rttMonitor struct {\n \tcancelFn context.CancelFunc\n }\n \n+var _ driver.RTTMonitor = &rttMonitor{}\n+\n func newRTTMonitor(cfg *rttConfig) *rttMonitor {\n \tif cfg.interval <= 0 {\n \t\tpanic(\"RTT monitor interval must be greater than 0\")\n@@ -179,7 +181,7 @@ func (r *rttMonitor) reset() {\n \t}\n \tr.offset = 0\n \tr.minRTT = 0\n-\tr.RTT90 = 0\n+\tr.rtt90 = 0\n \tr.averageRTT = 0\n \tr.averageRTTSet = false\n }\n@@ -196,7 +198,7 @@ func (r *rttMonitor) addSample(rtt time.Duration) {\n \t// setting these to prevent noisy samples on startup from artificially increasing RTT and to allow the\n \t// calculation of a 90th percentile.\n \tr.minRTT = min(r.samples, minSamples)\n-\tr.RTT90 = percentile(90.0, r.samples, minSamples)\n+\tr.rtt90 = percentile(90.0, r.samples, minSamples)\n \n \tif !r.averageRTTSet {\n \t\tr.averageRTT = rtt\n@@ -249,26 +251,57 @@ func percentile(perc float64, samples []time.Duration, minSamples int) time.Dura\n \treturn time.Duration(p)\n }\n \n-// getRTT returns the exponentially weighted moving average observed round-trip time.\n-func (r *rttMonitor) getRTT() time.Duration {\n+// EWMA returns the exponentially weighted moving average observed round-trip time.\n+func (r *rttMonitor) EWMA() time.Duration {\n \tr.mu.RLock()\n \tdefer r.mu.RUnlock()\n \n \treturn r.averageRTT\n }\n \n-// getMinRTT returns the minimum observed round-trip time over the window period.\n-func (r *rttMonitor) getMinRTT() time.Duration {\n+// Min returns the minimum observed round-trip time over the window period.\n+func (r *rttMonitor) Min() time.Duration {\n \tr.mu.RLock()\n \tdefer r.mu.RUnlock()\n \n \treturn r.minRTT\n }\n \n-// getRTT90 returns the 90th percentile observed round-trip time over the window period.\n-func (r *rttMonitor) getRTT90() time.Duration {\n+// P90 returns the 90th percentile observed round-trip time over the window period.\n+func (r *rttMonitor) P90() time.Duration {\n+\tr.mu.RLock()\n+\tdefer r.mu.RUnlock()\n+\n+\treturn r.rtt90\n+}\n+\n+// Stats returns stringified stats of the current state of the monitor.\n+func (r *rttMonitor) Stats() string {\n \tr.mu.RLock()\n \tdefer r.mu.RUnlock()\n \n-\treturn r.RTT90\n+\t// Calculate standard deviation and average (non-EWMA) of samples.\n+\tvar sum float64\n+\tfloatSamples := make([]float64, 0, len(r.samples))\n+\tfor _, sample := range r.samples {\n+\t\tif sample > 0 {\n+\t\t\tfloatSamples = append(floatSamples, float64(sample))\n+\t\t\tsum += float64(sample)\n+\t\t}\n+\t}\n+\n+\tvar avg, stdDev float64\n+\tif len(floatSamples) > 0 {\n+\t\tavg = sum / float64(len(floatSamples))\n+\n+\t\tvar err error\n+\t\tstdDev, err = stats.StandardDeviation(floatSamples)\n+\t\tif err != nil {\n+\t\t\tpanic(fmt.Errorf(\"x/mongo/driver/topology: error calculating standard deviation RTT: %v for samples:\\n%v\", err, floatSamples))\n+\t\t}\n+\t}\n+\n+\treturn fmt.Sprintf(`Round-trip-time monitor statistics:`+\"\\n\"+\n+\t\t`average RTT: %v, minimum RTT: %v, 90th percentile RTT: %v, standard dev: %v`+\"\\n\",\n+\t\ttime.Duration(avg), r.minRTT, r.rtt90, time.Duration(stdDev))\n }"
    },
    {
      "sha": "d416f6c1951e5d9a65d6574ebabb82e25a1dea81",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/server.go",
      "status": "modified",
      "additions": 58,
      "deletions": 27,
      "changes": 85,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fserver.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fserver.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fserver.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -520,6 +520,7 @@ func (s *Server) update() {\n \t\t}\n \t}\n \n+\ttimeoutCnt := 0\n \tfor {\n \t\t// Check if the server is disconnecting. Even if waitForNextCheck has already read from the done channel, we\n \t\t// can safely read from it again because Disconnect closes the channel.\n@@ -545,18 +546,42 @@ func (s *Server) update() {\n \t\t\tcontinue\n \t\t}\n \n-\t\t// Must hold the processErrorLock while updating the server description and clearing the\n-\t\t// pool. Not holding the lock leads to possible out-of-order processing of pool.clear() and\n-\t\t// pool.ready() calls from concurrent server description updates.\n-\t\ts.processErrorLock.Lock()\n-\t\ts.updateDescription(desc)\n-\t\tif err := desc.LastError; err != nil {\n-\t\t\t// Clear the pool once the description has been updated to Unknown. Pass in a nil service ID to clear\n-\t\t\t// because the monitoring routine only runs for non-load balanced deployments in which servers don't return\n-\t\t\t// IDs.\n-\t\t\ts.pool.clear(err, nil)\n+\t\tif isShortcut := func() bool {\n+\t\t\t// Must hold the processErrorLock while updating the server description and clearing the\n+\t\t\t// pool. Not holding the lock leads to possible out-of-order processing of pool.clear() and\n+\t\t\t// pool.ready() calls from concurrent server description updates.\n+\t\t\ts.processErrorLock.Lock()\n+\t\t\tdefer s.processErrorLock.Unlock()\n+\n+\t\t\ts.updateDescription(desc)\n+\t\t\t// Retry after the first timeout before clearing the pool in case of a FAAS pause as\n+\t\t\t// described in GODRIVER-2577.\n+\t\t\tif err := unwrapConnectionError(desc.LastError); err != nil && timeoutCnt < 1 {\n+\t\t\t\tif err == context.Canceled || err == context.DeadlineExceeded {\n+\t\t\t\t\ttimeoutCnt++\n+\t\t\t\t\t// We want to immediately retry on timeout error. Continue to next loop.\n+\t\t\t\t\treturn true\n+\t\t\t\t}\n+\t\t\t\tif err, ok := err.(net.Error); ok && err.Timeout() {\n+\t\t\t\t\ttimeoutCnt++\n+\t\t\t\t\t// We want to immediately retry on timeout error. Continue to next loop.\n+\t\t\t\t\treturn true\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif err := desc.LastError; err != nil {\n+\t\t\t\t// Clear the pool once the description has been updated to Unknown. Pass in a nil service ID to clear\n+\t\t\t\t// because the monitoring routine only runs for non-load balanced deployments in which servers don't return\n+\t\t\t\t// IDs.\n+\t\t\t\ts.pool.clear(err, nil)\n+\t\t\t}\n+\t\t\t// We're either not handling a timeout error, or we just handled the 2nd consecutive\n+\t\t\t// timeout error. In either case, reset the timeout count to 0 and return false to\n+\t\t\t// continue the normal check process.\n+\t\t\ttimeoutCnt = 0\n+\t\t\treturn false\n+\t\t}(); isShortcut {\n+\t\t\tcontinue\n \t\t}\n-\t\ts.processErrorLock.Unlock()\n \n \t\t// If the server supports streaming or we're already streaming, we want to move to streaming the next response\n \t\t// without waiting. If the server has transitioned to Unknown from a network error, we want to do another\n@@ -707,19 +732,31 @@ func (s *Server) check() (description.Server, error) {\n \tvar err error\n \tvar durationNanos int64\n \n-\t// Create a new connection if this is the first check, the connection was closed after an error during the previous\n-\t// check, or the previous check was cancelled.\n+\tstart := time.Now()\n \tif s.conn == nil || s.conn.closed() || s.checkWasCancelled() {\n+\t\t// Create a new connection if this is the first check, the connection was closed after an error during the previous\n+\t\t// check, or the previous check was cancelled.\n+\t\tisNilConn := s.conn == nil\n+\t\tif !isNilConn {\n+\t\t\ts.publishServerHeartbeatStartedEvent(s.conn.ID(), false)\n+\t\t}\n \t\t// Create a new connection and add it's handshake RTT as a sample.\n \t\terr = s.setupHeartbeatConnection()\n+\t\tdurationNanos = time.Since(start).Nanoseconds()\n \t\tif err == nil {\n \t\t\t// Use the description from the connection handshake as the value for this check.\n \t\t\ts.rttMonitor.addSample(s.conn.helloRTT)\n \t\t\tdescPtr = &s.conn.desc\n+\t\t\tif !isNilConn {\n+\t\t\t\ts.publishServerHeartbeatSucceededEvent(s.conn.ID(), durationNanos, s.conn.desc, false)\n+\t\t\t}\n+\t\t} else {\n+\t\t\terr = unwrapConnectionError(err)\n+\t\t\tif !isNilConn {\n+\t\t\t\ts.publishServerHeartbeatFailedEvent(s.conn.ID(), durationNanos, err, false)\n+\t\t\t}\n \t\t}\n-\t}\n-\n-\tif descPtr == nil && err == nil {\n+\t} else {\n \t\t// An existing connection is being used. Use the server description properties to execute the right heartbeat.\n \n \t\t// Wrap conn in a type that implements driver.StreamerConnection.\n@@ -729,7 +766,6 @@ func (s *Server) check() (description.Server, error) {\n \t\tstreamable := previousDescription.TopologyVersion != nil\n \n \t\ts.publishServerHeartbeatStartedEvent(s.conn.ID(), s.conn.getCurrentlyStreaming() || streamable)\n-\t\tstart := time.Now()\n \t\tswitch {\n \t\tcase s.conn.getCurrentlyStreaming():\n \t\t\t// The connection is already in a streaming state, so we stream the next response.\n@@ -779,7 +815,7 @@ func (s *Server) check() (description.Server, error) {\n \tif descPtr != nil {\n \t\t// The check was successful. Set the average RTT and the 90th percentile RTT and return.\n \t\tdesc := *descPtr\n-\t\tdesc = desc.SetAverageRTT(s.rttMonitor.getRTT())\n+\t\tdesc = desc.SetAverageRTT(s.rttMonitor.EWMA())\n \t\tdesc.HeartbeatInterval = s.cfg.heartbeatInterval\n \t\treturn desc, nil\n \t}\n@@ -814,14 +850,9 @@ func extractTopologyVersion(err error) *description.TopologyVersion {\n \treturn nil\n }\n \n-// MinRTT returns the minimum round-trip time to the server observed over the last 5 minutes.\n-func (s *Server) MinRTT() time.Duration {\n-\treturn s.rttMonitor.getMinRTT()\n-}\n-\n-// RTT90 returns the 90th percentile round-trip time to the server observed over the last 5 minutes.\n-func (s *Server) RTT90() time.Duration {\n-\treturn s.rttMonitor.getRTT90()\n+// RTTMonitor returns this server's round-trip-time monitor.\n+func (s *Server) RTTMonitor() driver.RTTMonitor {\n+\treturn s.rttMonitor\n }\n \n // OperationCount returns the current number of in-progress operations for this server.\n@@ -839,7 +870,7 @@ func (s *Server) String() string {\n \t\tstr += fmt.Sprintf(\", Tag sets: %s\", desc.Tags)\n \t}\n \tif state == serverConnected {\n-\t\tstr += fmt.Sprintf(\", Average RTT: %s, Min RTT: %s\", desc.AverageRTT, s.MinRTT())\n+\t\tstr += fmt.Sprintf(\", Average RTT: %s, Min RTT: %s\", desc.AverageRTT, s.RTTMonitor().Min())\n \t}\n \tif desc.LastError != nil {\n \t\tstr += fmt.Sprintf(\", Last error: %s\", desc.LastError)"
    },
    {
      "sha": "73819f9fc3fb8a7e5d43ca880861a8f70dc11060",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/server_options.go",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fserver_options.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fserver_options.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Fserver_options.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -60,6 +60,12 @@ func newServerConfig(opts ...ServerOption) *serverConfig {\n // ServerOption configures a server.\n type ServerOption func(*serverConfig)\n \n+// ServerAPIFromServerOptions will return the server API options if they have been functionally set on the ServerOption\n+// slice.\n+func ServerAPIFromServerOptions(opts []ServerOption) *driver.ServerAPIOptions {\n+\treturn newServerConfig(opts...).serverAPI\n+}\n+\n func withMonitoringDisabled(fn func(bool) bool) ServerOption {\n \treturn func(cfg *serverConfig) {\n \t\tcfg.monitoringDisabled = fn(cfg.monitoringDisabled)"
    },
    {
      "sha": "eb0ac425a174445f14393aa6c2522c4098944aae",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/topology.go",
      "status": "modified",
      "additions": 54,
      "deletions": 41,
      "changes": 95,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ftopology.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ftopology.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ftopology.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -14,6 +14,8 @@ import (\n \t\"context\"\n \t\"errors\"\n \t\"fmt\"\n+\t\"net\"\n+\t\"net/url\"\n \t\"strings\"\n \t\"sync\"\n \t\"sync/atomic\"\n@@ -24,6 +26,7 @@ import (\n \t\"go.mongodb.org/mongo-driver/internal/randutil\"\n \t\"go.mongodb.org/mongo-driver/mongo/address\"\n \t\"go.mongodb.org/mongo-driver/mongo/description\"\n+\t\"go.mongodb.org/mongo-driver/mongo/options\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver/dns\"\n )\n@@ -68,7 +71,7 @@ const (\n type Topology struct {\n \tstate int64\n \n-\tcfg *config\n+\tcfg *Config\n \n \tdesc atomic.Value // holds a description.Topology\n \n@@ -119,11 +122,14 @@ func newServerSelectionState(selector description.ServerSelector, timeoutChan <-\n \t}\n }\n \n-// New creates a new topology.\n-func New(opts ...Option) (*Topology, error) {\n-\tcfg, err := newConfig(opts...)\n-\tif err != nil {\n-\t\treturn nil, err\n+// New creates a new topology. A \"nil\" config is interpreted as the default configuration.\n+func New(cfg *Config) (*Topology, error) {\n+\tif cfg == nil {\n+\t\tvar err error\n+\t\tcfg, err = NewConfig(options.Client(), nil)\n+\t\tif err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n \t}\n \n \tt := &Topology{\n@@ -142,8 +148,8 @@ func New(opts ...Option) (*Topology, error) {\n \t\treturn t.apply(context.TODO(), desc)\n \t}\n \n-\tif t.cfg.uri != \"\" {\n-\t\tt.pollingRequired = strings.HasPrefix(t.cfg.uri, \"mongodb+srv://\") && !t.cfg.loadBalanced\n+\tif t.cfg.URI != \"\" {\n+\t\tt.pollingRequired = strings.HasPrefix(t.cfg.URI, \"mongodb+srv://\") && !t.cfg.LoadBalanced\n \t}\n \n \tt.publishTopologyOpeningEvent()\n@@ -164,23 +170,23 @@ func (t *Topology) Connect() error {\n \n \t// A replica set name sets the initial topology type to ReplicaSetNoPrimary unless a direct connection is also\n \t// specified, in which case the initial type is Single.\n-\tif t.cfg.replicaSetName != \"\" {\n-\t\tt.fsm.SetName = t.cfg.replicaSetName\n+\tif t.cfg.ReplicaSetName != \"\" {\n+\t\tt.fsm.SetName = t.cfg.ReplicaSetName\n \t\tt.fsm.Kind = description.ReplicaSetNoPrimary\n \t}\n \n \t// A direct connection unconditionally sets the topology type to Single.\n-\tif t.cfg.mode == SingleMode {\n+\tif t.cfg.Mode == SingleMode {\n \t\tt.fsm.Kind = description.Single\n \t}\n \n-\tfor _, a := range t.cfg.seedList {\n+\tfor _, a := range t.cfg.SeedList {\n \t\taddr := address.Address(a).Canonicalize()\n \t\tt.fsm.Servers = append(t.fsm.Servers, description.NewDefaultServer(addr))\n \t}\n \n \tswitch {\n-\tcase t.cfg.loadBalanced:\n+\tcase t.cfg.LoadBalanced:\n \t\t// In LoadBalanced mode, we mock a series of events: TopologyDescriptionChanged from Unknown to LoadBalanced,\n \t\t// ServerDescriptionChanged from Unknown to LoadBalancer, and then TopologyDescriptionChanged to reflect the\n \t\t// previous ServerDescriptionChanged event. We publish all of these events here because we don't start server\n@@ -190,7 +196,7 @@ func (t *Topology) Connect() error {\n \t\tt.fsm.Kind = description.LoadBalanced\n \t\tt.publishTopologyDescriptionChangedEvent(description.Topology{}, t.fsm.Topology)\n \n-\t\taddr := address.Address(t.cfg.seedList[0]).Canonicalize()\n+\t\taddr := address.Address(t.cfg.SeedList[0]).Canonicalize()\n \t\tif err := t.addServer(addr); err != nil {\n \t\t\tt.serversLock.Unlock()\n \t\t\treturn err\n@@ -218,7 +224,7 @@ func (t *Topology) Connect() error {\n \t\t}\n \t\tt.desc.Store(newDesc)\n \t\tt.publishTopologyDescriptionChangedEvent(description.Topology{}, t.fsm.Topology)\n-\t\tfor _, a := range t.cfg.seedList {\n+\t\tfor _, a := range t.cfg.SeedList {\n \t\t\taddr := address.Address(a).Canonicalize()\n \t\t\terr = t.addServer(addr)\n \t\t\tif err != nil {\n@@ -230,7 +236,21 @@ func (t *Topology) Connect() error {\n \n \tt.serversLock.Unlock()\n \tif t.pollingRequired {\n-\t\tgo t.pollSRVRecords()\n+\t\turi, err := url.Parse(t.cfg.URI)\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\t// sanity check before passing the hostname to resolver\n+\t\tif parsedHosts := strings.Split(uri.Host, \",\"); len(parsedHosts) != 1 {\n+\t\t\treturn fmt.Errorf(\"URI with SRV must include one and only one hostname\")\n+\t\t}\n+\t\t_, _, err = net.SplitHostPort(uri.Host)\n+\t\tif err == nil {\n+\t\t\t// we were able to successfully extract a port from the host,\n+\t\t\t// but should not be able to when using SRV\n+\t\t\treturn fmt.Errorf(\"URI with srv must not include a port number\")\n+\t\t}\n+\t\tgo t.pollSRVRecords(uri.Host)\n \t\tt.pollingwg.Add(1)\n \t}\n \n@@ -364,8 +384,8 @@ func (t *Topology) SelectServer(ctx context.Context, ss description.ServerSelect\n \t}\n \tvar ssTimeoutCh <-chan time.Time\n \n-\tif t.cfg.serverSelectionTimeout > 0 {\n-\t\tssTimeout := time.NewTimer(t.cfg.serverSelectionTimeout)\n+\tif t.cfg.ServerSelectionTimeout > 0 {\n+\t\tssTimeout := time.NewTimer(t.cfg.ServerSelectionTimeout)\n \t\tssTimeoutCh = ssTimeout.C\n \t\tdefer ssTimeout.Stop()\n \t}\n@@ -552,10 +572,10 @@ func (t *Topology) selectServerFromDescription(desc description.Topology,\n \treturn suitable, nil\n }\n \n-func (t *Topology) pollSRVRecords() {\n+func (t *Topology) pollSRVRecords(hosts string) {\n \tdefer t.pollingwg.Done()\n \n-\tserverConfig := newServerConfig(t.cfg.serverOpts...)\n+\tserverConfig := newServerConfig(t.cfg.ServerOpts...)\n \theartbeatInterval := serverConfig.heartbeatInterval\n \n \tpollTicker := time.NewTicker(t.rescanSRVInterval)\n@@ -569,13 +589,6 @@ func (t *Topology) pollSRVRecords() {\n \t\t}\n \t}()\n \n-\t// remove the scheme\n-\turi := t.cfg.uri[14:]\n-\thosts := uri\n-\tif idx := strings.IndexAny(uri, \"/?@\"); idx != -1 {\n-\t\thosts = uri[:idx]\n-\t}\n-\n \tfor {\n \t\tselect {\n \t\tcase <-pollTicker.C:\n@@ -588,7 +601,7 @@ func (t *Topology) pollSRVRecords() {\n \t\t\tbreak\n \t\t}\n \n-\t\tparsedHosts, err := t.dnsResolver.ParseHosts(hosts, t.cfg.srvServiceName, false)\n+\t\tparsedHosts, err := t.dnsResolver.ParseHosts(hosts, t.cfg.SRVServiceName, false)\n \t\t// DNS problem or no verified hosts returned\n \t\tif err != nil || len(parsedHosts) == 0 {\n \t\t\tif !t.pollHeartbeatTime.Load().(bool) {\n@@ -646,14 +659,14 @@ func (t *Topology) processSRVResults(parsedHosts []string) bool {\n \t// Now that we've removed all the hosts that disappeared from the SRV record, we need to add any\n \t// new hosts added to the SRV record. If adding all of the new hosts would increase the number\n \t// of servers past srvMaxHosts, shuffle the list of added hosts.\n-\tif t.cfg.srvMaxHosts > 0 && len(t.servers)+len(diff.Added) > t.cfg.srvMaxHosts {\n+\tif t.cfg.SRVMaxHosts > 0 && len(t.servers)+len(diff.Added) > t.cfg.SRVMaxHosts {\n \t\trandom.Shuffle(len(diff.Added), func(i, j int) {\n \t\t\tdiff.Added[i], diff.Added[j] = diff.Added[j], diff.Added[i]\n \t\t})\n \t}\n \t// Add all added hosts until the number of servers reaches srvMaxHosts.\n \tfor _, a := range diff.Added {\n-\t\tif t.cfg.srvMaxHosts > 0 && len(t.servers) >= t.cfg.srvMaxHosts {\n+\t\tif t.cfg.SRVMaxHosts > 0 && len(t.servers) >= t.cfg.SRVMaxHosts {\n \t\t\tbreak\n \t\t}\n \t\taddr := address.Address(a).Canonicalize()\n@@ -753,7 +766,7 @@ func (t *Topology) addServer(addr address.Address) error {\n \t\treturn nil\n \t}\n \n-\tsvr, err := ConnectServer(addr, t.updateCallback, t.id, t.cfg.serverOpts...)\n+\tsvr, err := ConnectServer(addr, t.updateCallback, t.id, t.cfg.ServerOpts...)\n \tif err != nil {\n \t\treturn err\n \t}\n@@ -785,8 +798,8 @@ func (t *Topology) publishServerDescriptionChangedEvent(prev description.Server,\n \t\tNewDescription:      current,\n \t}\n \n-\tif t.cfg.serverMonitor != nil && t.cfg.serverMonitor.ServerDescriptionChanged != nil {\n-\t\tt.cfg.serverMonitor.ServerDescriptionChanged(serverDescriptionChanged)\n+\tif t.cfg.ServerMonitor != nil && t.cfg.ServerMonitor.ServerDescriptionChanged != nil {\n+\t\tt.cfg.ServerMonitor.ServerDescriptionChanged(serverDescriptionChanged)\n \t}\n }\n \n@@ -797,8 +810,8 @@ func (t *Topology) publishServerClosedEvent(addr address.Address) {\n \t\tTopologyID: t.id,\n \t}\n \n-\tif t.cfg.serverMonitor != nil && t.cfg.serverMonitor.ServerClosed != nil {\n-\t\tt.cfg.serverMonitor.ServerClosed(serverClosed)\n+\tif t.cfg.ServerMonitor != nil && t.cfg.ServerMonitor.ServerClosed != nil {\n+\t\tt.cfg.ServerMonitor.ServerClosed(serverClosed)\n \t}\n }\n \n@@ -810,8 +823,8 @@ func (t *Topology) publishTopologyDescriptionChangedEvent(prev description.Topol\n \t\tNewDescription:      current,\n \t}\n \n-\tif t.cfg.serverMonitor != nil && t.cfg.serverMonitor.TopologyDescriptionChanged != nil {\n-\t\tt.cfg.serverMonitor.TopologyDescriptionChanged(topologyDescriptionChanged)\n+\tif t.cfg.ServerMonitor != nil && t.cfg.ServerMonitor.TopologyDescriptionChanged != nil {\n+\t\tt.cfg.ServerMonitor.TopologyDescriptionChanged(topologyDescriptionChanged)\n \t}\n }\n \n@@ -821,8 +834,8 @@ func (t *Topology) publishTopologyOpeningEvent() {\n \t\tTopologyID: t.id,\n \t}\n \n-\tif t.cfg.serverMonitor != nil && t.cfg.serverMonitor.TopologyOpening != nil {\n-\t\tt.cfg.serverMonitor.TopologyOpening(topologyOpening)\n+\tif t.cfg.ServerMonitor != nil && t.cfg.ServerMonitor.TopologyOpening != nil {\n+\t\tt.cfg.ServerMonitor.TopologyOpening(topologyOpening)\n \t}\n }\n \n@@ -832,7 +845,7 @@ func (t *Topology) publishTopologyClosedEvent() {\n \t\tTopologyID: t.id,\n \t}\n \n-\tif t.cfg.serverMonitor != nil && t.cfg.serverMonitor.TopologyClosed != nil {\n-\t\tt.cfg.serverMonitor.TopologyClosed(topologyClosed)\n+\tif t.cfg.ServerMonitor != nil && t.cfg.ServerMonitor.TopologyClosed != nil {\n+\t\tt.cfg.ServerMonitor.TopologyClosed(topologyClosed)\n \t}\n }"
    },
    {
      "sha": "98b71ea383703cbbd05986f131852b6fe8bd89a1",
      "filename": "backend/vendor/go.mongodb.org/mongo-driver/x/mongo/driver/topology/topology_options.go",
      "status": "modified",
      "additions": 265,
      "deletions": 378,
      "changes": 643,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ftopology_options.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ftopology_options.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgo.mongodb.org%2Fmongo-driver%2Fx%2Fmongo%2Fdriver%2Ftopology%2Ftopology_options.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -7,451 +7,338 @@\n package topology\n \n import (\n-\t\"bytes\"\n \t\"crypto/tls\"\n-\t\"crypto/x509\"\n-\t\"encoding/pem\"\n-\t\"errors\"\n-\t\"fmt\"\n-\t\"io/ioutil\"\n+\t\"net/http\"\n \t\"strings\"\n \t\"time\"\n \n \t\"go.mongodb.org/mongo-driver/event\"\n+\t\"go.mongodb.org/mongo-driver/mongo/description\"\n+\t\"go.mongodb.org/mongo-driver/mongo/options\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver/auth\"\n-\t\"go.mongodb.org/mongo-driver/x/mongo/driver/connstring\"\n+\t\"go.mongodb.org/mongo-driver/x/mongo/driver/ocsp\"\n \t\"go.mongodb.org/mongo-driver/x/mongo/driver/operation\"\n+\t\"go.mongodb.org/mongo-driver/x/mongo/driver/session\"\n )\n \n-// Option is a configuration option for a topology.\n-type Option func(*config) error\n-\n-type config struct {\n-\tmode                   MonitorMode\n-\treplicaSetName         string\n-\tseedList               []string\n-\tserverOpts             []ServerOption\n-\tcs                     connstring.ConnString // This must not be used for any logic in topology.Topology.\n-\turi                    string\n-\tserverSelectionTimeout time.Duration\n-\tserverMonitor          *event.ServerMonitor\n-\tsrvMaxHosts            int\n-\tsrvServiceName         string\n-\tloadBalanced           bool\n+const defaultServerSelectionTimeout = 30 * time.Second\n+\n+// Config is used to construct a topology.\n+type Config struct {\n+\tMode                   MonitorMode\n+\tReplicaSetName         string\n+\tSeedList               []string\n+\tServerOpts             []ServerOption\n+\tURI                    string\n+\tServerSelectionTimeout time.Duration\n+\tServerMonitor          *event.ServerMonitor\n+\tSRVMaxHosts            int\n+\tSRVServiceName         string\n+\tLoadBalanced           bool\n }\n \n-func newConfig(opts ...Option) (*config, error) {\n-\tcfg := &config{\n-\t\tseedList:               []string{\"localhost:27017\"},\n-\t\tserverSelectionTimeout: 30 * time.Second,\n+// ConvertToDriverAPIOptions converts a options.ServerAPIOptions instance to a driver.ServerAPIOptions.\n+func ConvertToDriverAPIOptions(s *options.ServerAPIOptions) *driver.ServerAPIOptions {\n+\tdriverOpts := driver.NewServerAPIOptions(string(s.ServerAPIVersion))\n+\tif s.Strict != nil {\n+\t\tdriverOpts.SetStrict(*s.Strict)\n \t}\n-\n-\tfor _, opt := range opts {\n-\t\tif opt == nil {\n-\t\t\tcontinue\n-\t\t}\n-\t\terr := opt(cfg)\n-\t\tif err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n+\tif s.DeprecationErrors != nil {\n+\t\tdriverOpts.SetDeprecationErrors(*s.DeprecationErrors)\n \t}\n-\n-\treturn cfg, nil\n+\treturn driverOpts\n }\n \n-// WithConnString configures the topology using the connection string.\n-func WithConnString(fn func(connstring.ConnString) connstring.ConnString) Option {\n-\treturn func(c *config) error {\n-\t\tcs := fn(c.cs)\n-\t\tc.cs = cs\n+// NewConfig will translate data from client options into a topology config for building non-default deployments.\n+// Server and topoplogy options are not honored if a custom deployment is used.\n+func NewConfig(co *options.ClientOptions, clock *session.ClusterClock) (*Config, error) {\n+\tvar serverAPI *driver.ServerAPIOptions\n \n-\t\tif cs.ServerSelectionTimeoutSet {\n-\t\t\tc.serverSelectionTimeout = cs.ServerSelectionTimeout\n-\t\t}\n-\n-\t\tvar connOpts []ConnectionOption\n-\n-\t\tif cs.AppName != \"\" {\n-\t\t\tc.serverOpts = append(c.serverOpts, WithServerAppName(func(string) string { return cs.AppName }))\n-\t\t}\n-\n-\t\tif cs.Connect == connstring.SingleConnect || (cs.DirectConnectionSet && cs.DirectConnection) {\n-\t\t\tc.mode = SingleMode\n-\t\t}\n+\tif err := co.Validate(); err != nil {\n+\t\treturn nil, err\n+\t}\n \n-\t\tc.seedList = cs.Hosts\n+\tvar connOpts []ConnectionOption\n+\tvar serverOpts []ServerOption\n \n-\t\tif cs.ConnectTimeout > 0 {\n-\t\t\tc.serverOpts = append(c.serverOpts, WithHeartbeatTimeout(func(time.Duration) time.Duration { return cs.ConnectTimeout }))\n-\t\t\tconnOpts = append(connOpts, WithConnectTimeout(func(time.Duration) time.Duration { return cs.ConnectTimeout }))\n-\t\t}\n+\tcfgp := new(Config)\n \n-\t\tif cs.SocketTimeoutSet {\n-\t\t\tconnOpts = append(\n-\t\t\t\tconnOpts,\n-\t\t\t\tWithReadTimeout(func(time.Duration) time.Duration { return cs.SocketTimeout }),\n-\t\t\t\tWithWriteTimeout(func(time.Duration) time.Duration { return cs.SocketTimeout }),\n-\t\t\t)\n-\t\t}\n+\t// Set the default \"ServerSelectionTimeout\" to 30 seconds.\n+\tcfgp.ServerSelectionTimeout = defaultServerSelectionTimeout\n \n-\t\tif cs.HeartbeatInterval > 0 {\n-\t\t\tc.serverOpts = append(c.serverOpts, WithHeartbeatInterval(func(time.Duration) time.Duration { return cs.HeartbeatInterval }))\n-\t\t}\n+\t// Set the default \"SeedList\" to localhost.\n+\tcfgp.SeedList = []string{\"localhost:27017\"}\n \n-\t\tif cs.MaxConnIdleTime > 0 {\n-\t\t\tconnOpts = append(connOpts, WithIdleTimeout(func(time.Duration) time.Duration { return cs.MaxConnIdleTime }))\n-\t\t}\n+\t// TODO(GODRIVER-814): Add tests for topology, server, and connection related options.\n \n-\t\tif cs.MaxPoolSizeSet {\n-\t\t\tc.serverOpts = append(c.serverOpts, WithMaxConnections(func(uint64) uint64 { return cs.MaxPoolSize }))\n-\t\t}\n+\t// ServerAPIOptions need to be handled early as other client and server options below reference\n+\t// c.serverAPI and serverOpts.serverAPI.\n+\tif co.ServerAPIOptions != nil {\n+\t\tserverAPI = ConvertToDriverAPIOptions(co.ServerAPIOptions)\n+\t\tserverOpts = append(serverOpts, WithServerAPI(func(*driver.ServerAPIOptions) *driver.ServerAPIOptions {\n+\t\t\treturn serverAPI\n+\t\t}))\n+\t}\n \n-\t\tif cs.MinPoolSizeSet {\n-\t\t\tc.serverOpts = append(c.serverOpts, WithMinConnections(func(u uint64) uint64 { return cs.MinPoolSize }))\n-\t\t}\n+\tcfgp.URI = co.GetURI()\n \n-\t\tif cs.ReplicaSet != \"\" {\n-\t\t\tc.replicaSetName = cs.ReplicaSet\n-\t\t}\n-\n-\t\tvar x509Username string\n-\t\tif cs.SSL {\n-\t\t\ttlsConfig := new(tls.Config)\n+\tif co.SRVServiceName != nil {\n+\t\tcfgp.SRVServiceName = *co.SRVServiceName\n+\t}\n \n-\t\t\tif cs.SSLCaFileSet {\n-\t\t\t\terr := addCACertFromFile(tlsConfig, cs.SSLCaFile)\n-\t\t\t\tif err != nil {\n-\t\t\t\t\treturn err\n-\t\t\t\t}\n-\t\t\t}\n+\tif co.SRVMaxHosts != nil {\n+\t\tcfgp.SRVMaxHosts = *co.SRVMaxHosts\n+\t}\n \n-\t\t\tif cs.SSLInsecure {\n-\t\t\t\ttlsConfig.InsecureSkipVerify = true\n-\t\t\t}\n+\t// AppName\n+\tvar appName string\n+\tif co.AppName != nil {\n+\t\tappName = *co.AppName\n \n-\t\t\tif cs.SSLClientCertificateKeyFileSet {\n-\t\t\t\tvar keyPasswd string\n-\t\t\t\tif cs.SSLClientCertificateKeyPasswordSet && cs.SSLClientCertificateKeyPassword != nil {\n-\t\t\t\t\tkeyPasswd = cs.SSLClientCertificateKeyPassword()\n-\t\t\t\t}\n-\t\t\t\ts, err := addClientCertFromFile(tlsConfig, cs.SSLClientCertificateKeyFile, keyPasswd)\n-\t\t\t\tif err != nil {\n-\t\t\t\t\treturn err\n-\t\t\t\t}\n-\n-\t\t\t\t// The Go x509 package gives the subject with the pairs in reverse order that we want.\n-\t\t\t\tpairs := strings.Split(s, \",\")\n-\t\t\t\tb := bytes.NewBufferString(\"\")\n-\n-\t\t\t\tfor i := len(pairs) - 1; i >= 0; i-- {\n-\t\t\t\t\tb.WriteString(pairs[i])\n-\n-\t\t\t\t\tif i > 0 {\n-\t\t\t\t\t\tb.WriteString(\",\")\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\n-\t\t\t\tx509Username = b.String()\n+\t\tserverOpts = append(serverOpts, WithServerAppName(func(string) string {\n+\t\t\treturn appName\n+\t\t}))\n+\t}\n+\t// Compressors & ZlibLevel\n+\tvar comps []string\n+\tif len(co.Compressors) > 0 {\n+\t\tcomps = co.Compressors\n+\n+\t\tconnOpts = append(connOpts, WithCompressors(\n+\t\t\tfunc(compressors []string) []string {\n+\t\t\t\treturn append(compressors, comps...)\n+\t\t\t},\n+\t\t))\n+\n+\t\tfor _, comp := range comps {\n+\t\t\tswitch comp {\n+\t\t\tcase \"zlib\":\n+\t\t\t\tconnOpts = append(connOpts, WithZlibLevel(func(level *int) *int {\n+\t\t\t\t\treturn co.ZlibLevel\n+\t\t\t\t}))\n+\t\t\tcase \"zstd\":\n+\t\t\t\tconnOpts = append(connOpts, WithZstdLevel(func(level *int) *int {\n+\t\t\t\t\treturn co.ZstdLevel\n+\t\t\t\t}))\n \t\t\t}\n-\n-\t\t\tconnOpts = append(connOpts, WithTLSConfig(func(*tls.Config) *tls.Config { return tlsConfig }))\n \t\t}\n \n-\t\tif cs.Username != \"\" || cs.AuthMechanism == auth.MongoDBX509 || cs.AuthMechanism == auth.GSSAPI {\n-\t\t\tcred := &auth.Cred{\n-\t\t\t\tSource:      \"admin\",\n-\t\t\t\tUsername:    cs.Username,\n-\t\t\t\tPassword:    cs.Password,\n-\t\t\t\tPasswordSet: cs.PasswordSet,\n-\t\t\t\tProps:       cs.AuthMechanismProperties,\n-\t\t\t}\n-\n-\t\t\tif cs.AuthSource != \"\" {\n-\t\t\t\tcred.Source = cs.AuthSource\n-\t\t\t} else {\n-\t\t\t\tswitch cs.AuthMechanism {\n-\t\t\t\tcase auth.MongoDBX509:\n-\t\t\t\t\tif cred.Username == \"\" {\n-\t\t\t\t\t\tcred.Username = x509Username\n-\t\t\t\t\t}\n-\t\t\t\t\tfallthrough\n-\t\t\t\tcase auth.GSSAPI, auth.PLAIN:\n-\t\t\t\t\tcred.Source = \"$external\"\n-\t\t\t\tdefault:\n-\t\t\t\t\tcred.Source = cs.Database\n-\t\t\t\t}\n-\t\t\t}\n+\t\tserverOpts = append(serverOpts, WithCompressionOptions(\n+\t\t\tfunc(opts ...string) []string { return append(opts, comps...) },\n+\t\t))\n+\t}\n \n-\t\t\tauthenticator, err := auth.CreateAuthenticator(cs.AuthMechanism, cred)\n-\t\t\tif err != nil {\n-\t\t\t\treturn err\n-\t\t\t}\n+\tvar loadBalanced bool\n+\tif co.LoadBalanced != nil {\n+\t\tloadBalanced = *co.LoadBalanced\n+\t}\n \n-\t\t\tconnOpts = append(connOpts, WithHandshaker(func(h Handshaker) Handshaker {\n-\t\t\t\toptions := &auth.HandshakeOptions{\n-\t\t\t\t\tAppName:       cs.AppName,\n-\t\t\t\t\tAuthenticator: authenticator,\n-\t\t\t\t\tCompressors:   cs.Compressors,\n-\t\t\t\t\tLoadBalanced:  cs.LoadBalancedSet && cs.LoadBalanced,\n-\t\t\t\t}\n-\t\t\t\tif cs.AuthMechanism == \"\" {\n-\t\t\t\t\t// Required for SASL mechanism negotiation during handshake\n-\t\t\t\t\toptions.DBUser = cred.Source + \".\" + cred.Username\n-\t\t\t\t}\n-\t\t\t\treturn auth.Handshaker(h, options)\n-\t\t\t}))\n-\t\t} else {\n-\t\t\t// We need to add a non-auth Handshaker to the connection options\n-\t\t\tconnOpts = append(connOpts, WithHandshaker(func(h driver.Handshaker) driver.Handshaker {\n-\t\t\t\treturn operation.NewHello().\n-\t\t\t\t\tAppName(cs.AppName).\n-\t\t\t\t\tCompressors(cs.Compressors).\n-\t\t\t\t\tLoadBalanced(cs.LoadBalancedSet && cs.LoadBalanced)\n-\t\t\t}))\n+\t// Handshaker\n+\tvar handshaker = func(driver.Handshaker) driver.Handshaker {\n+\t\treturn operation.NewHello().AppName(appName).Compressors(comps).ClusterClock(clock).\n+\t\t\tServerAPI(serverAPI).LoadBalanced(loadBalanced)\n+\t}\n+\t// Auth & Database & Password & Username\n+\tif co.Auth != nil {\n+\t\tcred := &auth.Cred{\n+\t\t\tUsername:    co.Auth.Username,\n+\t\t\tPassword:    co.Auth.Password,\n+\t\t\tPasswordSet: co.Auth.PasswordSet,\n+\t\t\tProps:       co.Auth.AuthMechanismProperties,\n+\t\t\tSource:      co.Auth.AuthSource,\n \t\t}\n-\n-\t\tif len(cs.Compressors) > 0 {\n-\t\t\tconnOpts = append(connOpts, WithCompressors(func(compressors []string) []string {\n-\t\t\t\treturn append(compressors, cs.Compressors...)\n-\t\t\t}))\n-\n-\t\t\tfor _, comp := range cs.Compressors {\n-\t\t\t\tswitch comp {\n-\t\t\t\tcase \"zlib\":\n-\t\t\t\t\tconnOpts = append(connOpts, WithZlibLevel(func(level *int) *int {\n-\t\t\t\t\t\treturn &cs.ZlibLevel\n-\t\t\t\t\t}))\n-\t\t\t\tcase \"zstd\":\n-\t\t\t\t\tconnOpts = append(connOpts, WithZstdLevel(func(level *int) *int {\n-\t\t\t\t\t\treturn &cs.ZstdLevel\n-\t\t\t\t\t}))\n-\t\t\t\t}\n+\t\tmechanism := co.Auth.AuthMechanism\n+\n+\t\tif len(cred.Source) == 0 {\n+\t\t\tswitch strings.ToUpper(mechanism) {\n+\t\t\tcase auth.MongoDBX509, auth.GSSAPI, auth.PLAIN:\n+\t\t\t\tcred.Source = \"$external\"\n+\t\t\tdefault:\n+\t\t\t\tcred.Source = \"admin\"\n \t\t\t}\n+\t\t}\n \n-\t\t\tc.serverOpts = append(c.serverOpts, WithCompressionOptions(func(opts ...string) []string {\n-\t\t\t\treturn append(opts, cs.Compressors...)\n-\t\t\t}))\n+\t\tauthenticator, err := auth.CreateAuthenticator(mechanism, cred)\n+\t\tif err != nil {\n+\t\t\treturn nil, err\n \t\t}\n \n-\t\t// LoadBalanced\n-\t\tif cs.LoadBalancedSet {\n-\t\t\tc.loadBalanced = cs.LoadBalanced\n-\t\t\tc.serverOpts = append(c.serverOpts, WithServerLoadBalanced(func(bool) bool {\n-\t\t\t\treturn cs.LoadBalanced\n-\t\t\t}))\n-\t\t\tconnOpts = append(connOpts, WithConnectionLoadBalanced(func(bool) bool {\n-\t\t\t\treturn cs.LoadBalanced\n-\t\t\t}))\n+\t\thandshakeOpts := &auth.HandshakeOptions{\n+\t\t\tAppName:       appName,\n+\t\t\tAuthenticator: authenticator,\n+\t\t\tCompressors:   comps,\n+\t\t\tServerAPI:     serverAPI,\n+\t\t\tLoadBalanced:  loadBalanced,\n+\t\t\tClusterClock:  clock,\n+\t\t\tHTTPClient:    co.HTTPClient,\n \t\t}\n \n-\t\tif len(connOpts) > 0 {\n-\t\t\tc.serverOpts = append(c.serverOpts, WithConnectionOptions(func(opts ...ConnectionOption) []ConnectionOption {\n-\t\t\t\treturn append(opts, connOpts...)\n-\t\t\t}))\n+\t\tif mechanism == \"\" {\n+\t\t\t// Required for SASL mechanism negotiation during handshake\n+\t\t\thandshakeOpts.DBUser = cred.Source + \".\" + cred.Username\n+\t\t}\n+\t\tif co.AuthenticateToAnything != nil && *co.AuthenticateToAnything {\n+\t\t\t// Authenticate arbiters\n+\t\t\thandshakeOpts.PerformAuthentication = func(serv description.Server) bool {\n+\t\t\t\treturn true\n+\t\t\t}\n \t\t}\n \n-\t\treturn nil\n+\t\thandshaker = func(driver.Handshaker) driver.Handshaker {\n+\t\t\treturn auth.Handshaker(nil, handshakeOpts)\n+\t\t}\n \t}\n-}\n-\n-// WithMode configures the topology's monitor mode.\n-func WithMode(fn func(MonitorMode) MonitorMode) Option {\n-\treturn func(cfg *config) error {\n-\t\tcfg.mode = fn(cfg.mode)\n-\t\treturn nil\n+\tconnOpts = append(connOpts, WithHandshaker(handshaker))\n+\t// ConnectTimeout\n+\tif co.ConnectTimeout != nil {\n+\t\tserverOpts = append(serverOpts, WithHeartbeatTimeout(\n+\t\t\tfunc(time.Duration) time.Duration { return *co.ConnectTimeout },\n+\t\t))\n+\t\tconnOpts = append(connOpts, WithConnectTimeout(\n+\t\t\tfunc(time.Duration) time.Duration { return *co.ConnectTimeout },\n+\t\t))\n \t}\n-}\n-\n-// WithReplicaSetName configures the topology's default replica set name.\n-func WithReplicaSetName(fn func(string) string) Option {\n-\treturn func(cfg *config) error {\n-\t\tcfg.replicaSetName = fn(cfg.replicaSetName)\n-\t\treturn nil\n+\t// Dialer\n+\tif co.Dialer != nil {\n+\t\tconnOpts = append(connOpts, WithDialer(\n+\t\t\tfunc(Dialer) Dialer { return co.Dialer },\n+\t\t))\n \t}\n-}\n-\n-// WithSeedList configures a topology's seed list.\n-func WithSeedList(fn func(...string) []string) Option {\n-\treturn func(cfg *config) error {\n-\t\tcfg.seedList = fn(cfg.seedList...)\n-\t\treturn nil\n+\t// Direct\n+\tif co.Direct != nil && *co.Direct {\n+\t\tcfgp.Mode = SingleMode\n \t}\n-}\n \n-// WithServerOptions configures a topology's server options for when a new server\n-// needs to be created.\n-func WithServerOptions(fn func(...ServerOption) []ServerOption) Option {\n-\treturn func(cfg *config) error {\n-\t\tcfg.serverOpts = fn(cfg.serverOpts...)\n-\t\treturn nil\n+\t// HeartbeatInterval\n+\tif co.HeartbeatInterval != nil {\n+\t\tserverOpts = append(serverOpts, WithHeartbeatInterval(\n+\t\t\tfunc(time.Duration) time.Duration { return *co.HeartbeatInterval },\n+\t\t))\n \t}\n-}\n-\n-// WithServerSelectionTimeout configures a topology's server selection timeout.\n-// A server selection timeout of 0 means there is no timeout for server selection.\n-func WithServerSelectionTimeout(fn func(time.Duration) time.Duration) Option {\n-\treturn func(cfg *config) error {\n-\t\tcfg.serverSelectionTimeout = fn(cfg.serverSelectionTimeout)\n-\t\treturn nil\n+\t// Hosts\n+\tcfgp.SeedList = []string{\"localhost:27017\"} // default host\n+\tif len(co.Hosts) > 0 {\n+\t\tcfgp.SeedList = co.Hosts\n \t}\n-}\n \n-// WithTopologyServerMonitor configures the monitor for all SDAM events\n-func WithTopologyServerMonitor(fn func(*event.ServerMonitor) *event.ServerMonitor) Option {\n-\treturn func(cfg *config) error {\n-\t\tcfg.serverMonitor = fn(cfg.serverMonitor)\n-\t\treturn nil\n+\t// MaxConIdleTime\n+\tif co.MaxConnIdleTime != nil {\n+\t\tconnOpts = append(connOpts, WithIdleTimeout(\n+\t\t\tfunc(time.Duration) time.Duration { return *co.MaxConnIdleTime },\n+\t\t))\n \t}\n-}\n-\n-// WithURI specifies the URI that was used to create the topology.\n-func WithURI(fn func(string) string) Option {\n-\treturn func(cfg *config) error {\n-\t\tcfg.uri = fn(cfg.uri)\n-\t\treturn nil\n+\t// MaxPoolSize\n+\tif co.MaxPoolSize != nil {\n+\t\tserverOpts = append(\n+\t\t\tserverOpts,\n+\t\t\tWithMaxConnections(func(uint64) uint64 { return *co.MaxPoolSize }),\n+\t\t)\n \t}\n-}\n-\n-// WithLoadBalanced specifies whether or not the cluster is behind a load balancer.\n-func WithLoadBalanced(fn func(bool) bool) Option {\n-\treturn func(cfg *config) error {\n-\t\tcfg.loadBalanced = fn(cfg.loadBalanced)\n-\t\treturn nil\n+\t// MinPoolSize\n+\tif co.MinPoolSize != nil {\n+\t\tserverOpts = append(\n+\t\t\tserverOpts,\n+\t\t\tWithMinConnections(func(uint64) uint64 { return *co.MinPoolSize }),\n+\t\t)\n \t}\n-}\n-\n-// WithSRVMaxHosts specifies the SRV host limit that was used to create the topology.\n-func WithSRVMaxHosts(fn func(int) int) Option {\n-\treturn func(cfg *config) error {\n-\t\tcfg.srvMaxHosts = fn(cfg.srvMaxHosts)\n-\t\treturn nil\n+\t// MaxConnecting\n+\tif co.MaxConnecting != nil {\n+\t\tserverOpts = append(\n+\t\t\tserverOpts,\n+\t\t\tWithMaxConnecting(func(uint64) uint64 { return *co.MaxConnecting }),\n+\t\t)\n \t}\n-}\n-\n-// WithSRVServiceName specifies the SRV service name that was used to create the topology.\n-func WithSRVServiceName(fn func(string) string) Option {\n-\treturn func(cfg *config) error {\n-\t\tcfg.srvServiceName = fn(cfg.srvServiceName)\n-\t\treturn nil\n+\t// PoolMonitor\n+\tif co.PoolMonitor != nil {\n+\t\tserverOpts = append(\n+\t\t\tserverOpts,\n+\t\t\tWithConnectionPoolMonitor(func(*event.PoolMonitor) *event.PoolMonitor { return co.PoolMonitor }),\n+\t\t)\n \t}\n-}\n-\n-// addCACertFromFile adds a root CA certificate to the configuration given a path\n-// to the containing file.\n-func addCACertFromFile(cfg *tls.Config, file string) error {\n-\tdata, err := ioutil.ReadFile(file)\n-\tif err != nil {\n-\t\treturn err\n+\t// Monitor\n+\tif co.Monitor != nil {\n+\t\tconnOpts = append(connOpts, WithMonitor(\n+\t\t\tfunc(*event.CommandMonitor) *event.CommandMonitor { return co.Monitor },\n+\t\t))\n \t}\n-\n-\tcertBytes, err := loadCert(data)\n-\tif err != nil {\n-\t\treturn err\n+\t// ServerMonitor\n+\tif co.ServerMonitor != nil {\n+\t\tserverOpts = append(\n+\t\t\tserverOpts,\n+\t\t\tWithServerMonitor(func(*event.ServerMonitor) *event.ServerMonitor { return co.ServerMonitor }),\n+\t\t)\n+\t\tcfgp.ServerMonitor = co.ServerMonitor\n \t}\n-\n-\tcert, err := x509.ParseCertificate(certBytes)\n-\tif err != nil {\n-\t\treturn err\n+\t// ReplicaSet\n+\tif co.ReplicaSet != nil {\n+\t\tcfgp.ReplicaSetName = *co.ReplicaSet\n \t}\n-\n-\tif cfg.RootCAs == nil {\n-\t\tcfg.RootCAs = x509.NewCertPool()\n+\t// ServerSelectionTimeout\n+\tif co.ServerSelectionTimeout != nil {\n+\t\tcfgp.ServerSelectionTimeout = *co.ServerSelectionTimeout\n \t}\n-\n-\tcfg.RootCAs.AddCert(cert)\n-\n-\treturn nil\n-}\n-\n-func loadCert(data []byte) ([]byte, error) {\n-\tvar certBlock *pem.Block\n-\n-\tfor certBlock == nil {\n-\t\tif len(data) == 0 {\n-\t\t\treturn nil, errors.New(\".pem file must have both a CERTIFICATE and an RSA PRIVATE KEY section\")\n-\t\t}\n-\n-\t\tblock, rest := pem.Decode(data)\n-\t\tif block == nil {\n-\t\t\treturn nil, errors.New(\"invalid .pem file\")\n-\t\t}\n-\n-\t\tswitch block.Type {\n-\t\tcase \"CERTIFICATE\":\n-\t\t\tif certBlock != nil {\n-\t\t\t\treturn nil, errors.New(\"multiple CERTIFICATE sections in .pem file\")\n-\t\t\t}\n-\n-\t\t\tcertBlock = block\n-\t\t}\n-\n-\t\tdata = rest\n+\t// SocketTimeout\n+\tif co.SocketTimeout != nil {\n+\t\tconnOpts = append(\n+\t\t\tconnOpts,\n+\t\t\tWithReadTimeout(func(time.Duration) time.Duration { return *co.SocketTimeout }),\n+\t\t\tWithWriteTimeout(func(time.Duration) time.Duration { return *co.SocketTimeout }),\n+\t\t)\n \t}\n-\n-\treturn certBlock.Bytes, nil\n-}\n-\n-// addClientCertFromFile adds a client certificate to the configuration given a path to the\n-// containing file and returns the certificate's subject name.\n-func addClientCertFromFile(cfg *tls.Config, clientFile, keyPasswd string) (string, error) {\n-\tdata, err := ioutil.ReadFile(clientFile)\n-\tif err != nil {\n-\t\treturn \"\", err\n+\t// TLSConfig\n+\tif co.TLSConfig != nil {\n+\t\tconnOpts = append(connOpts, WithTLSConfig(\n+\t\t\tfunc(*tls.Config) *tls.Config {\n+\t\t\t\treturn co.TLSConfig\n+\t\t\t},\n+\t\t))\n \t}\n \n-\tvar currentBlock *pem.Block\n-\tvar certBlock, certDecodedBlock, keyBlock []byte\n-\n-\tremaining := data\n-\tstart := 0\n-\tfor {\n-\t\tcurrentBlock, remaining = pem.Decode(remaining)\n-\t\tif currentBlock == nil {\n-\t\t\tbreak\n-\t\t}\n-\n-\t\tif currentBlock.Type == \"CERTIFICATE\" {\n-\t\t\tcertBlock = data[start : len(data)-len(remaining)]\n-\t\t\tcertDecodedBlock = currentBlock.Bytes\n-\t\t\tstart += len(certBlock)\n-\t\t} else if strings.HasSuffix(currentBlock.Type, \"PRIVATE KEY\") {\n-\t\t\tif keyPasswd != \"\" && x509.IsEncryptedPEMBlock(currentBlock) {\n-\t\t\t\tvar encoded bytes.Buffer\n-\t\t\t\tbuf, err := x509.DecryptPEMBlock(currentBlock, []byte(keyPasswd))\n-\t\t\t\tif err != nil {\n-\t\t\t\t\treturn \"\", err\n-\t\t\t\t}\n-\n-\t\t\t\tpem.Encode(&encoded, &pem.Block{Type: currentBlock.Type, Bytes: buf})\n-\t\t\t\tkeyBlock = encoded.Bytes()\n-\t\t\t\tstart = len(data) - len(remaining)\n-\t\t\t} else {\n-\t\t\t\tkeyBlock = data[start : len(data)-len(remaining)]\n-\t\t\t\tstart += len(keyBlock)\n-\t\t\t}\n-\t\t}\n-\t}\n-\tif len(certBlock) == 0 {\n-\t\treturn \"\", fmt.Errorf(\"failed to find CERTIFICATE\")\n+\t// HTTP Client\n+\tif co.HTTPClient != nil {\n+\t\tconnOpts = append(connOpts, WithHTTPClient(\n+\t\t\tfunc(*http.Client) *http.Client {\n+\t\t\t\treturn co.HTTPClient\n+\t\t\t},\n+\t\t))\n \t}\n-\tif len(keyBlock) == 0 {\n-\t\treturn \"\", fmt.Errorf(\"failed to find PRIVATE KEY\")\n+\n+\t// OCSP cache\n+\tocspCache := ocsp.NewCache()\n+\tconnOpts = append(\n+\t\tconnOpts,\n+\t\tWithOCSPCache(func(ocsp.Cache) ocsp.Cache { return ocspCache }),\n+\t)\n+\n+\t// Disable communication with external OCSP responders.\n+\tif co.DisableOCSPEndpointCheck != nil {\n+\t\tconnOpts = append(\n+\t\t\tconnOpts,\n+\t\t\tWithDisableOCSPEndpointCheck(func(bool) bool { return *co.DisableOCSPEndpointCheck }),\n+\t\t)\n \t}\n \n-\tcert, err := tls.X509KeyPair(certBlock, keyBlock)\n-\tif err != nil {\n-\t\treturn \"\", err\n+\t// LoadBalanced\n+\tif co.LoadBalanced != nil {\n+\t\tcfgp.LoadBalanced = *co.LoadBalanced\n+\n+\t\tserverOpts = append(\n+\t\t\tserverOpts,\n+\t\t\tWithServerLoadBalanced(func(bool) bool { return *co.LoadBalanced }),\n+\t\t)\n+\t\tconnOpts = append(\n+\t\t\tconnOpts,\n+\t\t\tWithConnectionLoadBalanced(func(bool) bool { return *co.LoadBalanced }),\n+\t\t)\n \t}\n \n-\tcfg.Certificates = append(cfg.Certificates, cert)\n+\tserverOpts = append(\n+\t\tserverOpts,\n+\t\tWithClock(func(*session.ClusterClock) *session.ClusterClock { return clock }),\n+\t\tWithConnectionOptions(func(...ConnectionOption) []ConnectionOption { return connOpts }))\n \n-\t// The documentation for the tls.X509KeyPair indicates that the Leaf certificate is not\n-\t// retained.\n-\tcrt, err := x509.ParseCertificate(certDecodedBlock)\n-\tif err != nil {\n-\t\treturn \"\", err\n-\t}\n+\tcfgp.ServerOpts = serverOpts\n \n-\treturn crt.Subject.String(), nil\n+\treturn cfgp, nil\n }"
    },
    {
      "sha": "2b00ddba0dfee1022198444c16670d443840ef86",
      "filename": "backend/vendor/golang.org/x/crypto/AUTHORS",
      "status": "removed",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2FAUTHORS",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2FAUTHORS",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2FAUTHORS?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,3 +0,0 @@\n-# This source code refers to The Go Authors for copyright purposes.\n-# The master list of authors is in the main Go distribution,\n-# visible at https://tip.golang.org/AUTHORS."
    },
    {
      "sha": "1fbd3e976faf5af5bbd1d8268a70399234969ae4",
      "filename": "backend/vendor/golang.org/x/crypto/CONTRIBUTORS",
      "status": "removed",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2FCONTRIBUTORS",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2FCONTRIBUTORS",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2FCONTRIBUTORS?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,3 +0,0 @@\n-# This source code was written by the Go contributors.\n-# The master list of contributors is in the main Go distribution,\n-# visible at https://tip.golang.org/CONTRIBUTORS."
    },
    {
      "sha": "aaafea2bc0829680cc6c24db1a6c22acf2ef44f7",
      "filename": "backend/vendor/golang.org/x/crypto/acme/acme.go",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Facme.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Facme.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Facme.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -88,7 +88,7 @@ type Client struct {\n \t//\n \t// The following algorithms are supported:\n \t// RS256, ES256, ES384 and ES512.\n-\t// See RFC7518 for more details about the algorithms.\n+\t// See RFC 7518 for more details about the algorithms.\n \tKey crypto.Signer\n \n \t// HTTPClient optionally specifies an HTTP client to use\n@@ -310,9 +310,9 @@ func (c *Client) UpdateReg(ctx context.Context, acct *Account) (*Account, error)\n // On success client's Key is updated which is not concurrency safe.\n // On failure an error will be returned.\n // The new key is already registered with the ACME provider if the following is true:\n-//  - error is of type acme.Error\n-//  - StatusCode should be 409 (Conflict)\n-//  - Location header will have the KID of the associated account\n+//   - error is of type acme.Error\n+//   - StatusCode should be 409 (Conflict)\n+//   - Location header will have the KID of the associated account\n //\n // More about account key rollover can be found at\n // https://tools.ietf.org/html/rfc8555#section-7.3.5."
    },
    {
      "sha": "6b4cdf406d3b6e053670406fc028c4f647c73f55",
      "filename": "backend/vendor/golang.org/x/crypto/acme/autocert/autocert.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Fautocert%2Fautocert.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Fautocert%2Fautocert.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Fautocert%2Fautocert.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -463,7 +463,7 @@ func (m *Manager) cert(ctx context.Context, ck certKey) (*tls.Certificate, error\n \t\tleaf: cert.Leaf,\n \t}\n \tm.state[ck] = s\n-\tgo m.startRenew(ck, s.key, s.leaf.NotAfter)\n+\tm.startRenew(ck, s.key, s.leaf.NotAfter)\n \treturn cert, nil\n }\n \n@@ -609,7 +609,7 @@ func (m *Manager) createCert(ctx context.Context, ck certKey) (*tls.Certificate,\n \t}\n \tstate.cert = der\n \tstate.leaf = leaf\n-\tgo m.startRenew(ck, state.key, state.leaf.NotAfter)\n+\tm.startRenew(ck, state.key, state.leaf.NotAfter)\n \treturn state.tlscert()\n }\n "
    },
    {
      "sha": "758ab12cb225fcf4308fce026791128603e19fe2",
      "filename": "backend/vendor/golang.org/x/crypto/acme/autocert/cache.go",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Fautocert%2Fcache.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Fautocert%2Fcache.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Fautocert%2Fcache.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -7,7 +7,6 @@ package autocert\n import (\n \t\"context\"\n \t\"errors\"\n-\t\"io/ioutil\"\n \t\"os\"\n \t\"path/filepath\"\n )\n@@ -48,7 +47,7 @@ func (d DirCache) Get(ctx context.Context, name string) ([]byte, error) {\n \t\tdone = make(chan struct{})\n \t)\n \tgo func() {\n-\t\tdata, err = ioutil.ReadFile(name)\n+\t\tdata, err = os.ReadFile(name)\n \t\tclose(done)\n \t}()\n \tselect {\n@@ -119,7 +118,7 @@ func (d DirCache) Delete(ctx context.Context, name string) error {\n // writeTempFile writes b to a temporary file, closes the file and returns its path.\n func (d DirCache) writeTempFile(prefix string, b []byte) (name string, reterr error) {\n \t// TempFile uses 0600 permissions\n-\tf, err := ioutil.TempFile(string(d), prefix)\n+\tf, err := os.CreateTemp(string(d), prefix)\n \tif err != nil {\n \t\treturn \"\", err\n \t}"
    },
    {
      "sha": "58836e5d303e01ba898af90e68c8a5c53d596af1",
      "filename": "backend/vendor/golang.org/x/crypto/acme/http.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Fhttp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Fhttp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Fhttp.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -12,7 +12,7 @@ import (\n \t\"encoding/json\"\n \t\"errors\"\n \t\"fmt\"\n-\t\"io/ioutil\"\n+\t\"io\"\n \t\"math/big\"\n \t\"net/http\"\n \t\"strconv\"\n@@ -156,7 +156,7 @@ func (c *Client) get(ctx context.Context, url string, ok resOkay) (*http.Respons\n \t}\n }\n \n-// postAsGet is POST-as-GET, a replacement for GET in RFC8555\n+// postAsGet is POST-as-GET, a replacement for GET in RFC 8555\n // as described in https://tools.ietf.org/html/rfc8555#section-6.3.\n // It makes a POST request in KID form with zero JWS payload.\n // See nopayload doc comments in jws.go.\n@@ -310,7 +310,7 @@ func isRetriable(code int) bool {\n func responseError(resp *http.Response) error {\n \t// don't care if ReadAll returns an error:\n \t// json.Unmarshal will fail in that case anyway\n-\tb, _ := ioutil.ReadAll(resp.Body)\n+\tb, _ := io.ReadAll(resp.Body)\n \te := &wireError{Status: resp.StatusCode}\n \tif err := json.Unmarshal(b, e); err != nil {\n \t\t// this is not a regular error response:"
    },
    {
      "sha": "ee24dfdec693b3b48b7e7562f0bf980b9c221502",
      "filename": "backend/vendor/golang.org/x/crypto/acme/rfc8555.go",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Frfc8555.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Frfc8555.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Frfc8555.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -13,7 +13,6 @@ import (\n \t\"errors\"\n \t\"fmt\"\n \t\"io\"\n-\t\"io/ioutil\"\n \t\"net/http\"\n \t\"time\"\n )\n@@ -390,7 +389,7 @@ func (c *Client) fetchCertRFC(ctx context.Context, url string, bundle bool) ([][\n \t// Get all the bytes up to a sane maximum.\n \t// Account very roughly for base64 overhead.\n \tconst max = maxCertChainSize + maxCertChainSize/33\n-\tb, err := ioutil.ReadAll(io.LimitReader(res.Body, max+1))\n+\tb, err := io.ReadAll(io.LimitReader(res.Body, max+1))\n \tif err != nil {\n \t\treturn nil, fmt.Errorf(\"acme: fetch cert response stream: %v\", err)\n \t}\n@@ -469,7 +468,7 @@ func (c *Client) ListCertAlternates(ctx context.Context, url string) ([]string,\n \n \t// We don't need the body but we need to discard it so we don't end up\n \t// preventing keep-alive\n-\tif _, err := io.Copy(ioutil.Discard, res.Body); err != nil {\n+\tif _, err := io.Copy(io.Discard, res.Body); err != nil {\n \t\treturn nil, fmt.Errorf(\"acme: cert alternates response stream: %v\", err)\n \t}\n \talts := linkHeader(res.Header, \"alternate\")"
    },
    {
      "sha": "4888726fecdea8f91ceb3642bf01ea933a0d11d2",
      "filename": "backend/vendor/golang.org/x/crypto/acme/types.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Ftypes.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Ftypes.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fcrypto%2Facme%2Ftypes.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -297,7 +297,7 @@ type Directory struct {\n \n \t// CAA consists of lowercase hostname elements, which the ACME server\n \t// recognises as referring to itself for the purposes of CAA record validation\n-\t// as defined in RFC6844.\n+\t// as defined in RFC 6844.\n \tCAA []string\n \n \t// ExternalAccountRequired indicates that the CA requires for all account-related\n@@ -440,7 +440,7 @@ func DomainIDs(names ...string) []AuthzID {\n \n // IPIDs creates a slice of AuthzID with \"ip\" identifier type.\n // Each element of addr is textual form of an address as defined\n-// in RFC1123 Section 2.1 for IPv4 and in RFC5952 Section 4 for IPv6.\n+// in RFC 1123 Section 2.1 for IPv4 and in RFC 5952 Section 4 for IPv6.\n func IPIDs(addr ...string) []AuthzID {\n \ta := make([]AuthzID, len(addr))\n \tfor i, v := range addr {"
    },
    {
      "sha": "15167cd746c560e5b3d3b233a169aa64d3e9101e",
      "filename": "backend/vendor/golang.org/x/image/AUTHORS",
      "status": "removed",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Fimage%2FAUTHORS",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Fimage%2FAUTHORS",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fimage%2FAUTHORS?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,3 +0,0 @@\n-# This source code refers to The Go Authors for copyright purposes.\n-# The master list of authors is in the main Go distribution,\n-# visible at http://tip.golang.org/AUTHORS."
    },
    {
      "sha": "1c4577e9680611383f46044d17fa343a96997c3c",
      "filename": "backend/vendor/golang.org/x/image/CONTRIBUTORS",
      "status": "removed",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Fimage%2FCONTRIBUTORS",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Fimage%2FCONTRIBUTORS",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fimage%2FCONTRIBUTORS?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,3 +0,0 @@\n-# This source code was written by the Go contributors.\n-# The master list of contributors is in the main Go distribution,\n-# visible at http://tip.golang.org/CONTRIBUTORS."
    },
    {
      "sha": "2cb9c408f2e7832d532fc8c9ed7a659878cac46f",
      "filename": "backend/vendor/golang.org/x/net/context/go17.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fcontext%2Fgo17.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fcontext%2Fgo17.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fcontext%2Fgo17.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -32,7 +32,7 @@ var DeadlineExceeded = context.DeadlineExceeded\n // call cancel as soon as the operations running in this Context complete.\n func WithCancel(parent Context) (ctx Context, cancel CancelFunc) {\n \tctx, f := context.WithCancel(parent)\n-\treturn ctx, CancelFunc(f)\n+\treturn ctx, f\n }\n \n // WithDeadline returns a copy of the parent context with the deadline adjusted\n@@ -46,7 +46,7 @@ func WithCancel(parent Context) (ctx Context, cancel CancelFunc) {\n // call cancel as soon as the operations running in this Context complete.\n func WithDeadline(parent Context, deadline time.Time) (Context, CancelFunc) {\n \tctx, f := context.WithDeadline(parent, deadline)\n-\treturn ctx, CancelFunc(f)\n+\treturn ctx, f\n }\n \n // WithTimeout returns WithDeadline(parent, time.Now().Add(timeout))."
    },
    {
      "sha": "291c91908d78fb4a1c4003672008e963f0ca3cb6",
      "filename": "backend/vendor/golang.org/x/net/html/parse.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fparse.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fparse.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Fparse.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -734,7 +734,7 @@ func inHeadIM(p *parser) bool {\n \treturn false\n }\n \n-// 12.2.6.4.5.\n+// Section 12.2.6.4.5.\n func inHeadNoscriptIM(p *parser) bool {\n \tswitch p.tok.Type {\n \tcase DoctypeToken:"
    },
    {
      "sha": "ae24a6fdf4a48830b509993c6e28ae1580e50a02",
      "filename": "backend/vendor/golang.org/x/net/html/token.go",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Ftoken.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Ftoken.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fnet%2Fhtml%2Ftoken.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -605,7 +605,10 @@ func (z *Tokenizer) readComment() {\n \t\t\tz.data.end = z.data.start\n \t\t}\n \t}()\n-\tfor dashCount := 2; ; {\n+\n+\tvar dashCount int\n+\tbeginning := true\n+\tfor {\n \t\tc := z.readByte()\n \t\tif z.err != nil {\n \t\t\t// Ignore up to two dashes at EOF.\n@@ -620,7 +623,7 @@ func (z *Tokenizer) readComment() {\n \t\t\tdashCount++\n \t\t\tcontinue\n \t\tcase '>':\n-\t\t\tif dashCount >= 2 {\n+\t\t\tif dashCount >= 2 || beginning {\n \t\t\t\tz.data.end = z.raw.end - len(\"-->\")\n \t\t\t\treturn\n \t\t\t}\n@@ -638,6 +641,7 @@ func (z *Tokenizer) readComment() {\n \t\t\t}\n \t\t}\n \t\tdashCount = 0\n+\t\tbeginning = false\n \t}\n }\n "
    },
    {
      "sha": "15167cd746c560e5b3d3b233a169aa64d3e9101e",
      "filename": "backend/vendor/golang.org/x/oauth2/AUTHORS",
      "status": "removed",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2FAUTHORS",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2FAUTHORS",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2FAUTHORS?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,3 +0,0 @@\n-# This source code refers to The Go Authors for copyright purposes.\n-# The master list of authors is in the main Go distribution,\n-# visible at http://tip.golang.org/AUTHORS."
    },
    {
      "sha": "1c4577e9680611383f46044d17fa343a96997c3c",
      "filename": "backend/vendor/golang.org/x/oauth2/CONTRIBUTORS",
      "status": "removed",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2FCONTRIBUTORS",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2FCONTRIBUTORS",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2FCONTRIBUTORS?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,3 +0,0 @@\n-# This source code was written by the Go contributors.\n-# The master list of contributors is in the main Go distribution,\n-# visible at http://tip.golang.org/CONTRIBUTORS."
    },
    {
      "sha": "9bc6cd7bc5e9a9accceefa0cd9da6f7ca5025323",
      "filename": "backend/vendor/golang.org/x/oauth2/authhandler/authhandler.go",
      "status": "modified",
      "additions": 41,
      "deletions": 3,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fauthhandler%2Fauthhandler.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fauthhandler%2Fauthhandler.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fauthhandler%2Fauthhandler.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -13,11 +13,36 @@ import (\n \t\"golang.org/x/oauth2\"\n )\n \n+const (\n+\t// Parameter keys for AuthCodeURL method to support PKCE.\n+\tcodeChallengeKey       = \"code_challenge\"\n+\tcodeChallengeMethodKey = \"code_challenge_method\"\n+\n+\t// Parameter key for Exchange method to support PKCE.\n+\tcodeVerifierKey = \"code_verifier\"\n+)\n+\n+// PKCEParams holds parameters to support PKCE.\n+type PKCEParams struct {\n+\tChallenge       string // The unpadded, base64-url-encoded string of the encrypted code verifier.\n+\tChallengeMethod string // The encryption method (ex. S256).\n+\tVerifier        string // The original, non-encrypted secret.\n+}\n+\n // AuthorizationHandler is a 3-legged-OAuth helper that prompts\n // the user for OAuth consent at the specified auth code URL\n // and returns an auth code and state upon approval.\n type AuthorizationHandler func(authCodeURL string) (code string, state string, err error)\n \n+// TokenSourceWithPKCE is an enhanced version of TokenSource with PKCE support.\n+//\n+// The pkce parameter supports PKCE flow, which uses code challenge and code verifier\n+// to prevent CSRF attacks. A unique code challenge and code verifier should be generated\n+// by the caller at runtime. See https://www.oauth.com/oauth2-servers/pkce/ for more info.\n+func TokenSourceWithPKCE(ctx context.Context, config *oauth2.Config, state string, authHandler AuthorizationHandler, pkce *PKCEParams) oauth2.TokenSource {\n+\treturn oauth2.ReuseTokenSource(nil, authHandlerSource{config: config, ctx: ctx, authHandler: authHandler, state: state, pkce: pkce})\n+}\n+\n // TokenSource returns an oauth2.TokenSource that fetches access tokens\n // using 3-legged-OAuth flow.\n //\n@@ -33,24 +58,37 @@ type AuthorizationHandler func(authCodeURL string) (code string, state string, e\n // and response before exchanging the auth code for OAuth token to prevent CSRF\n // attacks.\n func TokenSource(ctx context.Context, config *oauth2.Config, state string, authHandler AuthorizationHandler) oauth2.TokenSource {\n-\treturn oauth2.ReuseTokenSource(nil, authHandlerSource{config: config, ctx: ctx, authHandler: authHandler, state: state})\n+\treturn TokenSourceWithPKCE(ctx, config, state, authHandler, nil)\n }\n \n type authHandlerSource struct {\n \tctx         context.Context\n \tconfig      *oauth2.Config\n \tauthHandler AuthorizationHandler\n \tstate       string\n+\tpkce        *PKCEParams\n }\n \n func (source authHandlerSource) Token() (*oauth2.Token, error) {\n-\turl := source.config.AuthCodeURL(source.state)\n+\t// Step 1: Obtain auth code.\n+\tvar authCodeUrlOptions []oauth2.AuthCodeOption\n+\tif source.pkce != nil && source.pkce.Challenge != \"\" && source.pkce.ChallengeMethod != \"\" {\n+\t\tauthCodeUrlOptions = []oauth2.AuthCodeOption{oauth2.SetAuthURLParam(codeChallengeKey, source.pkce.Challenge),\n+\t\t\toauth2.SetAuthURLParam(codeChallengeMethodKey, source.pkce.ChallengeMethod)}\n+\t}\n+\turl := source.config.AuthCodeURL(source.state, authCodeUrlOptions...)\n \tcode, state, err := source.authHandler(url)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n \tif state != source.state {\n \t\treturn nil, errors.New(\"state mismatch in 3-legged-OAuth flow\")\n \t}\n-\treturn source.config.Exchange(source.ctx, code)\n+\n+\t// Step 2: Exchange auth code for access token.\n+\tvar exchangeOptions []oauth2.AuthCodeOption\n+\tif source.pkce != nil && source.pkce.Verifier != \"\" {\n+\t\texchangeOptions = []oauth2.AuthCodeOption{oauth2.SetAuthURLParam(codeVerifierKey, source.pkce.Verifier)}\n+\t}\n+\treturn source.config.Exchange(source.ctx, code, exchangeOptions...)\n }"
    },
    {
      "sha": "7ed02cd4144f9951186a518c6a8b2c253be716a1",
      "filename": "backend/vendor/golang.org/x/oauth2/google/default.go",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdefault.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdefault.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdefault.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -54,11 +54,14 @@ type CredentialsParams struct {\n \t// Optional.\n \tSubject string\n \n-\t// AuthHandler is the AuthorizationHandler used for 3-legged OAuth flow. Optional.\n+\t// AuthHandler is the AuthorizationHandler used for 3-legged OAuth flow. Required for 3LO flow.\n \tAuthHandler authhandler.AuthorizationHandler\n \n-\t// State is a unique string used with AuthHandler. Optional.\n+\t// State is a unique string used with AuthHandler. Required for 3LO flow.\n \tState string\n+\n+\t// PKCE is used to support PKCE flow. Optional for 3LO flow.\n+\tPKCE *authhandler.PKCEParams\n }\n \n func (params CredentialsParams) deepCopy() CredentialsParams {\n@@ -176,7 +179,7 @@ func CredentialsFromJSONWithParams(ctx context.Context, jsonData []byte, params\n \tif config != nil {\n \t\treturn &Credentials{\n \t\t\tProjectID:   \"\",\n-\t\t\tTokenSource: authhandler.TokenSource(ctx, config, params.State, params.AuthHandler),\n+\t\t\tTokenSource: authhandler.TokenSourceWithPKCE(ctx, config, params.State, params.AuthHandler, params.PKCE),\n \t\t\tJSON:        jsonData,\n \t\t}, nil\n \t}\n@@ -190,6 +193,7 @@ func CredentialsFromJSONWithParams(ctx context.Context, jsonData []byte, params\n \tif err != nil {\n \t\treturn nil, err\n \t}\n+\tts = newErrWrappingTokenSource(ts)\n \treturn &DefaultCredentials{\n \t\tProjectID:   f.ProjectID,\n \t\tTokenSource: ts,"
    },
    {
      "sha": "b3e7bc85ce50640e5e53231e14f38bead863f665",
      "filename": "backend/vendor/golang.org/x/oauth2/google/doc.go",
      "status": "modified",
      "additions": 9,
      "deletions": 3,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fdoc.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -40,16 +40,22 @@\n //\tMicrosoft Azure: https://cloud.google.com/iam/docs/access-resources-azure\n //\tOIDC identity provider: https://cloud.google.com/iam/docs/access-resources-oidc\n //\n-// For OIDC providers, the library can retrieve OIDC tokens either from a\n-// local file location (file-sourced credentials) or from a local server\n-// (URL-sourced credentials).\n+// For OIDC and SAML providers, the library can retrieve tokens in three ways:\n+// from a local file location (file-sourced credentials), from a server\n+// (URL-sourced credentials), or from a local executable (executable-sourced\n+// credentials).\n // For file-sourced credentials, a background process needs to be continuously\n // refreshing the file location with a new OIDC token prior to expiration.\n // For tokens with one hour lifetimes, the token needs to be updated in the file\n // every hour. The token can be stored directly as plain text or in JSON format.\n // For URL-sourced credentials, a local server needs to host a GET endpoint to\n // return the OIDC token. The response can be in plain text or JSON.\n // Additional required request headers can also be specified.\n+// For executable-sourced credentials, an application needs to be available to\n+// output the OIDC token and other information in a JSON format.\n+// For more information on how these work (and how to implement\n+// executable-sourced credentials), please check out:\n+// https://cloud.google.com/iam/docs/using-workload-identity-federation#oidc\n //\n // # Credentials\n //"
    },
    {
      "sha": "d84dd00473138dd53718a6e8084e2ca14b48c9f0",
      "filename": "backend/vendor/golang.org/x/oauth2/google/error.go",
      "status": "added",
      "additions": 64,
      "deletions": 0,
      "changes": 64,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Ferror.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Ferror.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Ferror.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,64 @@\n+// Copyright 2022 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package google\n+\n+import (\n+\t\"errors\"\n+\n+\t\"golang.org/x/oauth2\"\n+)\n+\n+// AuthenticationError indicates there was an error in the authentication flow.\n+//\n+// Use (*AuthenticationError).Temporary to check if the error can be retried.\n+type AuthenticationError struct {\n+\terr *oauth2.RetrieveError\n+}\n+\n+func newAuthenticationError(err error) error {\n+\tre := &oauth2.RetrieveError{}\n+\tif !errors.As(err, &re) {\n+\t\treturn err\n+\t}\n+\treturn &AuthenticationError{\n+\t\terr: re,\n+\t}\n+}\n+\n+// Temporary indicates that the network error has one of the following status codes and may be retried: 500, 503, 408, or 429.\n+func (e *AuthenticationError) Temporary() bool {\n+\tif e.err.Response == nil {\n+\t\treturn false\n+\t}\n+\tsc := e.err.Response.StatusCode\n+\treturn sc == 500 || sc == 503 || sc == 408 || sc == 429\n+}\n+\n+func (e *AuthenticationError) Error() string {\n+\treturn e.err.Error()\n+}\n+\n+func (e *AuthenticationError) Unwrap() error {\n+\treturn e.err\n+}\n+\n+type errWrappingTokenSource struct {\n+\tsrc oauth2.TokenSource\n+}\n+\n+func newErrWrappingTokenSource(ts oauth2.TokenSource) oauth2.TokenSource {\n+\treturn &errWrappingTokenSource{src: ts}\n+}\n+\n+// Token returns the current token if it's still valid, else will\n+// refresh the current token (using r.Context for HTTP client\n+// information) and return the new one.\n+func (s *errWrappingTokenSource) Token() (*oauth2.Token, error) {\n+\tt, err := s.src.Token()\n+\tif err != nil {\n+\t\treturn nil, newAuthenticationError(err)\n+\t}\n+\treturn t, nil\n+}"
    },
    {
      "sha": "8df0c493ee464d3677eb0be672c2b78105dacafb",
      "filename": "backend/vendor/golang.org/x/oauth2/google/google.go",
      "status": "modified",
      "additions": 13,
      "deletions": 6,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fgoogle.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fgoogle.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fgoogle.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -122,6 +122,7 @@ type credentialsFile struct {\n \tTokenURLExternal               string                           `json:\"token_url\"`\n \tTokenInfoURL                   string                           `json:\"token_info_url\"`\n \tServiceAccountImpersonationURL string                           `json:\"service_account_impersonation_url\"`\n+\tServiceAccountImpersonation    serviceAccountImpersonationInfo  `json:\"service_account_impersonation\"`\n \tDelegates                      []string                         `json:\"delegates\"`\n \tCredentialSource               externalaccount.CredentialSource `json:\"credential_source\"`\n \tQuotaProjectID                 string                           `json:\"quota_project_id\"`\n@@ -131,6 +132,10 @@ type credentialsFile struct {\n \tSourceCredentials *credentialsFile `json:\"source_credentials\"`\n }\n \n+type serviceAccountImpersonationInfo struct {\n+\tTokenLifetimeSeconds int `json:\"token_lifetime_seconds\"`\n+}\n+\n func (f *credentialsFile) jwtConfig(scopes []string, subject string) *jwt.Config {\n \tcfg := &jwt.Config{\n \t\tEmail:        f.ClientEmail,\n@@ -139,6 +144,7 @@ func (f *credentialsFile) jwtConfig(scopes []string, subject string) *jwt.Config\n \t\tScopes:       scopes,\n \t\tTokenURL:     f.TokenURL,\n \t\tSubject:      subject, // This is the user email to impersonate\n+\t\tAudience:     f.Audience,\n \t}\n \tif cfg.TokenURL == \"\" {\n \t\tcfg.TokenURL = JWTTokenURL\n@@ -177,12 +183,13 @@ func (f *credentialsFile) tokenSource(ctx context.Context, params CredentialsPar\n \t\t\tTokenURL:                       f.TokenURLExternal,\n \t\t\tTokenInfoURL:                   f.TokenInfoURL,\n \t\t\tServiceAccountImpersonationURL: f.ServiceAccountImpersonationURL,\n-\t\t\tClientSecret:                   f.ClientSecret,\n-\t\t\tClientID:                       f.ClientID,\n-\t\t\tCredentialSource:               f.CredentialSource,\n-\t\t\tQuotaProjectID:                 f.QuotaProjectID,\n-\t\t\tScopes:                         params.Scopes,\n-\t\t\tWorkforcePoolUserProject:       f.WorkforcePoolUserProject,\n+\t\t\tServiceAccountImpersonationLifetimeSeconds: f.ServiceAccountImpersonation.TokenLifetimeSeconds,\n+\t\t\tClientSecret:             f.ClientSecret,\n+\t\t\tClientID:                 f.ClientID,\n+\t\t\tCredentialSource:         f.CredentialSource,\n+\t\t\tQuotaProjectID:           f.QuotaProjectID,\n+\t\t\tScopes:                   params.Scopes,\n+\t\t\tWorkforcePoolUserProject: f.WorkforcePoolUserProject,\n \t\t}\n \t\treturn cfg.TokenSource(ctx)\n \tcase impersonatedServiceAccount:"
    },
    {
      "sha": "2bf3202b290f18a5342df266b373e2721609452e",
      "filename": "backend/vendor/golang.org/x/oauth2/google/internal/externalaccount/aws.go",
      "status": "modified",
      "additions": 85,
      "deletions": 20,
      "changes": 105,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Faws.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Faws.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Faws.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -62,6 +62,13 @@ const (\n \t// The AWS authorization header name for the auto-generated date.\n \tawsDateHeader = \"x-amz-date\"\n \n+\t// Supported AWS configuration environment variables.\n+\tawsAccessKeyId     = \"AWS_ACCESS_KEY_ID\"\n+\tawsDefaultRegion   = \"AWS_DEFAULT_REGION\"\n+\tawsRegion          = \"AWS_REGION\"\n+\tawsSecretAccessKey = \"AWS_SECRET_ACCESS_KEY\"\n+\tawsSessionToken    = \"AWS_SESSION_TOKEN\"\n+\n \tawsTimeFormatLong  = \"20060102T150405Z\"\n \tawsTimeFormatShort = \"20060102\"\n )\n@@ -267,23 +274,83 @@ type awsRequest struct {\n \tHeaders []awsRequestHeader `json:\"headers\"`\n }\n \n+func (cs awsCredentialSource) validateMetadataServers() error {\n+\tif err := cs.validateMetadataServer(cs.RegionURL, \"region_url\"); err != nil {\n+\t\treturn err\n+\t}\n+\tif err := cs.validateMetadataServer(cs.CredVerificationURL, \"url\"); err != nil {\n+\t\treturn err\n+\t}\n+\treturn cs.validateMetadataServer(cs.IMDSv2SessionTokenURL, \"imdsv2_session_token_url\")\n+}\n+\n+var validHostnames []string = []string{\"169.254.169.254\", \"fd00:ec2::254\"}\n+\n+func (cs awsCredentialSource) isValidMetadataServer(metadataUrl string) bool {\n+\tif metadataUrl == \"\" {\n+\t\t// Zero value means use default, which is valid.\n+\t\treturn true\n+\t}\n+\n+\tu, err := url.Parse(metadataUrl)\n+\tif err != nil {\n+\t\t// Unparseable URL means invalid\n+\t\treturn false\n+\t}\n+\n+\tfor _, validHostname := range validHostnames {\n+\t\tif u.Hostname() == validHostname {\n+\t\t\t// If it's one of the valid hostnames, everything is good\n+\t\t\treturn true\n+\t\t}\n+\t}\n+\n+\t// hostname not found in our allowlist, so not valid\n+\treturn false\n+}\n+\n+func (cs awsCredentialSource) validateMetadataServer(metadataUrl, urlName string) error {\n+\tif !cs.isValidMetadataServer(metadataUrl) {\n+\t\treturn fmt.Errorf(\"oauth2/google: invalid hostname %s for %s\", metadataUrl, urlName)\n+\t}\n+\n+\treturn nil\n+}\n+\n func (cs awsCredentialSource) doRequest(req *http.Request) (*http.Response, error) {\n \tif cs.client == nil {\n \t\tcs.client = oauth2.NewClient(cs.ctx, nil)\n \t}\n \treturn cs.client.Do(req.WithContext(cs.ctx))\n }\n \n+func canRetrieveRegionFromEnvironment() bool {\n+\t// The AWS region can be provided through AWS_REGION or AWS_DEFAULT_REGION. Only one is\n+\t// required.\n+\treturn getenv(awsRegion) != \"\" || getenv(awsDefaultRegion) != \"\"\n+}\n+\n+func canRetrieveSecurityCredentialFromEnvironment() bool {\n+\t// Check if both AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY are available.\n+\treturn getenv(awsAccessKeyId) != \"\" && getenv(awsSecretAccessKey) != \"\"\n+}\n+\n+func shouldUseMetadataServer() bool {\n+\treturn !canRetrieveRegionFromEnvironment() || !canRetrieveSecurityCredentialFromEnvironment()\n+}\n+\n func (cs awsCredentialSource) subjectToken() (string, error) {\n \tif cs.requestSigner == nil {\n-\t\tawsSessionToken, err := cs.getAWSSessionToken()\n-\t\tif err != nil {\n-\t\t\treturn \"\", err\n-\t\t}\n-\n \t\theaders := make(map[string]string)\n-\t\tif awsSessionToken != \"\" {\n-\t\t\theaders[awsIMDSv2SessionTokenHeader] = awsSessionToken\n+\t\tif shouldUseMetadataServer() {\n+\t\t\tawsSessionToken, err := cs.getAWSSessionToken()\n+\t\t\tif err != nil {\n+\t\t\t\treturn \"\", err\n+\t\t\t}\n+\n+\t\t\tif awsSessionToken != \"\" {\n+\t\t\t\theaders[awsIMDSv2SessionTokenHeader] = awsSessionToken\n+\t\t\t}\n \t\t}\n \n \t\tawsSecurityCredentials, err := cs.getSecurityCredentials(headers)\n@@ -389,11 +456,11 @@ func (cs *awsCredentialSource) getAWSSessionToken() (string, error) {\n }\n \n func (cs *awsCredentialSource) getRegion(headers map[string]string) (string, error) {\n-\tif envAwsRegion := getenv(\"AWS_REGION\"); envAwsRegion != \"\" {\n-\t\treturn envAwsRegion, nil\n-\t}\n-\tif envAwsRegion := getenv(\"AWS_DEFAULT_REGION\"); envAwsRegion != \"\" {\n-\t\treturn envAwsRegion, nil\n+\tif canRetrieveRegionFromEnvironment() {\n+\t\tif envAwsRegion := getenv(awsRegion); envAwsRegion != \"\" {\n+\t\t\treturn envAwsRegion, nil\n+\t\t}\n+\t\treturn getenv(\"AWS_DEFAULT_REGION\"), nil\n \t}\n \n \tif cs.RegionURL == \"\" {\n@@ -434,14 +501,12 @@ func (cs *awsCredentialSource) getRegion(headers map[string]string) (string, err\n }\n \n func (cs *awsCredentialSource) getSecurityCredentials(headers map[string]string) (result awsSecurityCredentials, err error) {\n-\tif accessKeyID := getenv(\"AWS_ACCESS_KEY_ID\"); accessKeyID != \"\" {\n-\t\tif secretAccessKey := getenv(\"AWS_SECRET_ACCESS_KEY\"); secretAccessKey != \"\" {\n-\t\t\treturn awsSecurityCredentials{\n-\t\t\t\tAccessKeyID:     accessKeyID,\n-\t\t\t\tSecretAccessKey: secretAccessKey,\n-\t\t\t\tSecurityToken:   getenv(\"AWS_SESSION_TOKEN\"),\n-\t\t\t}, nil\n-\t\t}\n+\tif canRetrieveSecurityCredentialFromEnvironment() {\n+\t\treturn awsSecurityCredentials{\n+\t\t\tAccessKeyID:     getenv(awsAccessKeyId),\n+\t\t\tSecretAccessKey: getenv(awsSecretAccessKey),\n+\t\t\tSecurityToken:   getenv(awsSessionToken),\n+\t\t}, nil\n \t}\n \n \troleName, err := cs.getMetadataRoleName(headers)"
    },
    {
      "sha": "3eab8df7ced776108981a824f1aea03f5102ea5d",
      "filename": "backend/vendor/golang.org/x/oauth2/google/internal/externalaccount/basecredentials.go",
      "status": "modified",
      "additions": 26,
      "deletions": 6,
      "changes": 32,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Fbasecredentials.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Fbasecredentials.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Fbasecredentials.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -39,6 +39,9 @@ type Config struct {\n \t// ServiceAccountImpersonationURL is the URL for the service account impersonation request. This is only\n \t// required for workload identity pools when APIs to be accessed have not integrated with UberMint.\n \tServiceAccountImpersonationURL string\n+\t// ServiceAccountImpersonationLifetimeSeconds is the number of seconds the service account impersonation\n+\t// token will be valid for.\n+\tServiceAccountImpersonationLifetimeSeconds int\n \t// ClientSecret is currently only required if token_info endpoint also\n \t// needs to be called with the generated GCP access token. When provided, STS will be\n \t// called with additional basic authentication using client_id as username and client_secret as password.\n@@ -71,12 +74,14 @@ var (\n \t\tregexp.MustCompile(`(?i)^sts\\.googleapis\\.com$`),\n \t\tregexp.MustCompile(`(?i)^sts\\.[^\\.\\s\\/\\\\]+\\.googleapis\\.com$`),\n \t\tregexp.MustCompile(`(?i)^[^\\.\\s\\/\\\\]+-sts\\.googleapis\\.com$`),\n+\t\tregexp.MustCompile(`(?i)^sts-[^\\.\\s\\/\\\\]+\\.p\\.googleapis\\.com$`),\n \t}\n \tvalidImpersonateURLPatterns = []*regexp.Regexp{\n \t\tregexp.MustCompile(`^[^\\.\\s\\/\\\\]+\\.iamcredentials\\.googleapis\\.com$`),\n \t\tregexp.MustCompile(`^iamcredentials\\.googleapis\\.com$`),\n \t\tregexp.MustCompile(`^iamcredentials\\.[^\\.\\s\\/\\\\]+\\.googleapis\\.com$`),\n \t\tregexp.MustCompile(`^[^\\.\\s\\/\\\\]+-iamcredentials\\.googleapis\\.com$`),\n+\t\tregexp.MustCompile(`^iamcredentials-[^\\.\\s\\/\\\\]+\\.p\\.googleapis\\.com$`),\n \t}\n \tvalidWorkforceAudiencePattern *regexp.Regexp = regexp.MustCompile(`//iam\\.googleapis\\.com/locations/[^/]+/workforcePools/`)\n )\n@@ -141,10 +146,11 @@ func (c *Config) tokenSource(ctx context.Context, tokenURLValidPats []*regexp.Re\n \tscopes := c.Scopes\n \tts.conf.Scopes = []string{\"https://www.googleapis.com/auth/cloud-platform\"}\n \timp := ImpersonateTokenSource{\n-\t\tCtx:    ctx,\n-\t\tURL:    c.ServiceAccountImpersonationURL,\n-\t\tScopes: scopes,\n-\t\tTs:     oauth2.ReuseTokenSource(nil, ts),\n+\t\tCtx:                  ctx,\n+\t\tURL:                  c.ServiceAccountImpersonationURL,\n+\t\tScopes:               scopes,\n+\t\tTs:                   oauth2.ReuseTokenSource(nil, ts),\n+\t\tTokenLifetimeSeconds: c.ServiceAccountImpersonationLifetimeSeconds,\n \t}\n \treturn oauth2.ReuseTokenSource(nil, imp), nil\n }\n@@ -163,14 +169,16 @@ type format struct {\n }\n \n // CredentialSource stores the information necessary to retrieve the credentials for the STS exchange.\n-// Either the File or the URL field should be filled, depending on the kind of credential in question.\n+// One field amongst File, URL, and Executable should be filled, depending on the kind of credential in question.\n // The EnvironmentID should start with AWS if being used for an AWS credential.\n type CredentialSource struct {\n \tFile string `json:\"file\"`\n \n \tURL     string            `json:\"url\"`\n \tHeaders map[string]string `json:\"headers\"`\n \n+\tExecutable *ExecutableConfig `json:\"executable\"`\n+\n \tEnvironmentID               string `json:\"environment_id\"`\n \tRegionURL                   string `json:\"region_url\"`\n \tRegionalCredVerificationURL string `json:\"regional_cred_verification_url\"`\n@@ -179,7 +187,13 @@ type CredentialSource struct {\n \tFormat                      format `json:\"format\"`\n }\n \n-// parse determines the type of CredentialSource needed\n+type ExecutableConfig struct {\n+\tCommand       string `json:\"command\"`\n+\tTimeoutMillis *int   `json:\"timeout_millis\"`\n+\tOutputFile    string `json:\"output_file\"`\n+}\n+\n+// parse determines the type of CredentialSource needed.\n func (c *Config) parse(ctx context.Context) (baseCredentialSource, error) {\n \tif len(c.CredentialSource.EnvironmentID) > 3 && c.CredentialSource.EnvironmentID[:3] == \"aws\" {\n \t\tif awsVersion, err := strconv.Atoi(c.CredentialSource.EnvironmentID[3:]); err == nil {\n@@ -199,12 +213,18 @@ func (c *Config) parse(ctx context.Context) (baseCredentialSource, error) {\n \t\t\t\tawsCredSource.IMDSv2SessionTokenURL = c.CredentialSource.IMDSv2SessionTokenURL\n \t\t\t}\n \n+\t\t\tif err := awsCredSource.validateMetadataServers(); err != nil {\n+\t\t\t\treturn nil, err\n+\t\t\t}\n+\n \t\t\treturn awsCredSource, nil\n \t\t}\n \t} else if c.CredentialSource.File != \"\" {\n \t\treturn fileCredentialSource{File: c.CredentialSource.File, Format: c.CredentialSource.Format}, nil\n \t} else if c.CredentialSource.URL != \"\" {\n \t\treturn urlCredentialSource{URL: c.CredentialSource.URL, Headers: c.CredentialSource.Headers, Format: c.CredentialSource.Format, ctx: ctx}, nil\n+\t} else if c.CredentialSource.Executable != nil {\n+\t\treturn CreateExecutableCredential(ctx, c.CredentialSource.Executable, c)\n \t}\n \treturn nil, fmt.Errorf(\"oauth2/google: unable to parse credential source\")\n }"
    },
    {
      "sha": "579bcce5f28be4197c6aace0e29da2eab2bea851",
      "filename": "backend/vendor/golang.org/x/oauth2/google/internal/externalaccount/executablecredsource.go",
      "status": "added",
      "additions": 309,
      "deletions": 0,
      "changes": 309,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Fexecutablecredsource.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Fexecutablecredsource.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Fexecutablecredsource.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,309 @@\n+// Copyright 2022 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package externalaccount\n+\n+import (\n+\t\"bytes\"\n+\t\"context\"\n+\t\"encoding/json\"\n+\t\"errors\"\n+\t\"fmt\"\n+\t\"io\"\n+\t\"io/ioutil\"\n+\t\"os\"\n+\t\"os/exec\"\n+\t\"regexp\"\n+\t\"strings\"\n+\t\"time\"\n+)\n+\n+var serviceAccountImpersonationRE = regexp.MustCompile(\"https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/(.*@.*):generateAccessToken\")\n+\n+const (\n+\texecutableSupportedMaxVersion = 1\n+\tdefaultTimeout                = 30 * time.Second\n+\ttimeoutMinimum                = 5 * time.Second\n+\ttimeoutMaximum                = 120 * time.Second\n+\texecutableSource              = \"response\"\n+\toutputFileSource              = \"output file\"\n+)\n+\n+type nonCacheableError struct {\n+\tmessage string\n+}\n+\n+func (nce nonCacheableError) Error() string {\n+\treturn nce.message\n+}\n+\n+func missingFieldError(source, field string) error {\n+\treturn fmt.Errorf(\"oauth2/google: %v missing `%q` field\", source, field)\n+}\n+\n+func jsonParsingError(source, data string) error {\n+\treturn fmt.Errorf(\"oauth2/google: unable to parse %v\\nResponse: %v\", source, data)\n+}\n+\n+func malformedFailureError() error {\n+\treturn nonCacheableError{\"oauth2/google: response must include `error` and `message` fields when unsuccessful\"}\n+}\n+\n+func userDefinedError(code, message string) error {\n+\treturn nonCacheableError{fmt.Sprintf(\"oauth2/google: response contains unsuccessful response: (%v) %v\", code, message)}\n+}\n+\n+func unsupportedVersionError(source string, version int) error {\n+\treturn fmt.Errorf(\"oauth2/google: %v contains unsupported version: %v\", source, version)\n+}\n+\n+func tokenExpiredError() error {\n+\treturn nonCacheableError{\"oauth2/google: the token returned by the executable is expired\"}\n+}\n+\n+func tokenTypeError(source string) error {\n+\treturn fmt.Errorf(\"oauth2/google: %v contains unsupported token type\", source)\n+}\n+\n+func exitCodeError(exitCode int) error {\n+\treturn fmt.Errorf(\"oauth2/google: executable command failed with exit code %v\", exitCode)\n+}\n+\n+func executableError(err error) error {\n+\treturn fmt.Errorf(\"oauth2/google: executable command failed: %v\", err)\n+}\n+\n+func executablesDisallowedError() error {\n+\treturn errors.New(\"oauth2/google: executables need to be explicitly allowed (set GOOGLE_EXTERNAL_ACCOUNT_ALLOW_EXECUTABLES to '1') to run\")\n+}\n+\n+func timeoutRangeError() error {\n+\treturn errors.New(\"oauth2/google: invalid `timeout_millis` field — executable timeout must be between 5 and 120 seconds\")\n+}\n+\n+func commandMissingError() error {\n+\treturn errors.New(\"oauth2/google: missing `command` field — executable command must be provided\")\n+}\n+\n+type environment interface {\n+\texistingEnv() []string\n+\tgetenv(string) string\n+\trun(ctx context.Context, command string, env []string) ([]byte, error)\n+\tnow() time.Time\n+}\n+\n+type runtimeEnvironment struct{}\n+\n+func (r runtimeEnvironment) existingEnv() []string {\n+\treturn os.Environ()\n+}\n+\n+func (r runtimeEnvironment) getenv(key string) string {\n+\treturn os.Getenv(key)\n+}\n+\n+func (r runtimeEnvironment) now() time.Time {\n+\treturn time.Now().UTC()\n+}\n+\n+func (r runtimeEnvironment) run(ctx context.Context, command string, env []string) ([]byte, error) {\n+\tsplitCommand := strings.Fields(command)\n+\tcmd := exec.CommandContext(ctx, splitCommand[0], splitCommand[1:]...)\n+\tcmd.Env = env\n+\n+\tvar stdout, stderr bytes.Buffer\n+\tcmd.Stdout = &stdout\n+\tcmd.Stderr = &stderr\n+\n+\tif err := cmd.Run(); err != nil {\n+\t\tif ctx.Err() == context.DeadlineExceeded {\n+\t\t\treturn nil, context.DeadlineExceeded\n+\t\t}\n+\n+\t\tif exitError, ok := err.(*exec.ExitError); ok {\n+\t\t\treturn nil, exitCodeError(exitError.ExitCode())\n+\t\t}\n+\n+\t\treturn nil, executableError(err)\n+\t}\n+\n+\tbytesStdout := bytes.TrimSpace(stdout.Bytes())\n+\tif len(bytesStdout) > 0 {\n+\t\treturn bytesStdout, nil\n+\t}\n+\treturn bytes.TrimSpace(stderr.Bytes()), nil\n+}\n+\n+type executableCredentialSource struct {\n+\tCommand    string\n+\tTimeout    time.Duration\n+\tOutputFile string\n+\tctx        context.Context\n+\tconfig     *Config\n+\tenv        environment\n+}\n+\n+// CreateExecutableCredential creates an executableCredentialSource given an ExecutableConfig.\n+// It also performs defaulting and type conversions.\n+func CreateExecutableCredential(ctx context.Context, ec *ExecutableConfig, config *Config) (executableCredentialSource, error) {\n+\tif ec.Command == \"\" {\n+\t\treturn executableCredentialSource{}, commandMissingError()\n+\t}\n+\n+\tresult := executableCredentialSource{}\n+\tresult.Command = ec.Command\n+\tif ec.TimeoutMillis == nil {\n+\t\tresult.Timeout = defaultTimeout\n+\t} else {\n+\t\tresult.Timeout = time.Duration(*ec.TimeoutMillis) * time.Millisecond\n+\t\tif result.Timeout < timeoutMinimum || result.Timeout > timeoutMaximum {\n+\t\t\treturn executableCredentialSource{}, timeoutRangeError()\n+\t\t}\n+\t}\n+\tresult.OutputFile = ec.OutputFile\n+\tresult.ctx = ctx\n+\tresult.config = config\n+\tresult.env = runtimeEnvironment{}\n+\treturn result, nil\n+}\n+\n+type executableResponse struct {\n+\tVersion        int    `json:\"version,omitempty\"`\n+\tSuccess        *bool  `json:\"success,omitempty\"`\n+\tTokenType      string `json:\"token_type,omitempty\"`\n+\tExpirationTime int64  `json:\"expiration_time,omitempty\"`\n+\tIdToken        string `json:\"id_token,omitempty\"`\n+\tSamlResponse   string `json:\"saml_response,omitempty\"`\n+\tCode           string `json:\"code,omitempty\"`\n+\tMessage        string `json:\"message,omitempty\"`\n+}\n+\n+func (cs executableCredentialSource) parseSubjectTokenFromSource(response []byte, source string, now int64) (string, error) {\n+\tvar result executableResponse\n+\tif err := json.Unmarshal(response, &result); err != nil {\n+\t\treturn \"\", jsonParsingError(source, string(response))\n+\t}\n+\n+\tif result.Version == 0 {\n+\t\treturn \"\", missingFieldError(source, \"version\")\n+\t}\n+\n+\tif result.Success == nil {\n+\t\treturn \"\", missingFieldError(source, \"success\")\n+\t}\n+\n+\tif !*result.Success {\n+\t\tif result.Code == \"\" || result.Message == \"\" {\n+\t\t\treturn \"\", malformedFailureError()\n+\t\t}\n+\t\treturn \"\", userDefinedError(result.Code, result.Message)\n+\t}\n+\n+\tif result.Version > executableSupportedMaxVersion || result.Version < 0 {\n+\t\treturn \"\", unsupportedVersionError(source, result.Version)\n+\t}\n+\n+\tif result.ExpirationTime == 0 && cs.OutputFile != \"\" {\n+\t\treturn \"\", missingFieldError(source, \"expiration_time\")\n+\t}\n+\n+\tif result.TokenType == \"\" {\n+\t\treturn \"\", missingFieldError(source, \"token_type\")\n+\t}\n+\n+\tif result.ExpirationTime != 0 && result.ExpirationTime < now {\n+\t\treturn \"\", tokenExpiredError()\n+\t}\n+\n+\tif result.TokenType == \"urn:ietf:params:oauth:token-type:jwt\" || result.TokenType == \"urn:ietf:params:oauth:token-type:id_token\" {\n+\t\tif result.IdToken == \"\" {\n+\t\t\treturn \"\", missingFieldError(source, \"id_token\")\n+\t\t}\n+\t\treturn result.IdToken, nil\n+\t}\n+\n+\tif result.TokenType == \"urn:ietf:params:oauth:token-type:saml2\" {\n+\t\tif result.SamlResponse == \"\" {\n+\t\t\treturn \"\", missingFieldError(source, \"saml_response\")\n+\t\t}\n+\t\treturn result.SamlResponse, nil\n+\t}\n+\n+\treturn \"\", tokenTypeError(source)\n+}\n+\n+func (cs executableCredentialSource) subjectToken() (string, error) {\n+\tif token, err := cs.getTokenFromOutputFile(); token != \"\" || err != nil {\n+\t\treturn token, err\n+\t}\n+\n+\treturn cs.getTokenFromExecutableCommand()\n+}\n+\n+func (cs executableCredentialSource) getTokenFromOutputFile() (token string, err error) {\n+\tif cs.OutputFile == \"\" {\n+\t\t// This ExecutableCredentialSource doesn't use an OutputFile.\n+\t\treturn \"\", nil\n+\t}\n+\n+\tfile, err := os.Open(cs.OutputFile)\n+\tif err != nil {\n+\t\t// No OutputFile found. Hasn't been created yet, so skip it.\n+\t\treturn \"\", nil\n+\t}\n+\tdefer file.Close()\n+\n+\tdata, err := ioutil.ReadAll(io.LimitReader(file, 1<<20))\n+\tif err != nil || len(data) == 0 {\n+\t\t// Cachefile exists, but no data found. Get new credential.\n+\t\treturn \"\", nil\n+\t}\n+\n+\ttoken, err = cs.parseSubjectTokenFromSource(data, outputFileSource, cs.env.now().Unix())\n+\tif err != nil {\n+\t\tif _, ok := err.(nonCacheableError); ok {\n+\t\t\t// If the cached token is expired we need a new token,\n+\t\t\t// and if the cache contains a failure, we need to try again.\n+\t\t\treturn \"\", nil\n+\t\t}\n+\n+\t\t// There was an error in the cached token, and the developer should be aware of it.\n+\t\treturn \"\", err\n+\t}\n+\t// Token parsing succeeded.  Use found token.\n+\treturn token, nil\n+}\n+\n+func (cs executableCredentialSource) executableEnvironment() []string {\n+\tresult := cs.env.existingEnv()\n+\tresult = append(result, fmt.Sprintf(\"GOOGLE_EXTERNAL_ACCOUNT_AUDIENCE=%v\", cs.config.Audience))\n+\tresult = append(result, fmt.Sprintf(\"GOOGLE_EXTERNAL_ACCOUNT_TOKEN_TYPE=%v\", cs.config.SubjectTokenType))\n+\tresult = append(result, \"GOOGLE_EXTERNAL_ACCOUNT_INTERACTIVE=0\")\n+\tif cs.config.ServiceAccountImpersonationURL != \"\" {\n+\t\tmatches := serviceAccountImpersonationRE.FindStringSubmatch(cs.config.ServiceAccountImpersonationURL)\n+\t\tif matches != nil {\n+\t\t\tresult = append(result, fmt.Sprintf(\"GOOGLE_EXTERNAL_ACCOUNT_IMPERSONATED_EMAIL=%v\", matches[1]))\n+\t\t}\n+\t}\n+\tif cs.OutputFile != \"\" {\n+\t\tresult = append(result, fmt.Sprintf(\"GOOGLE_EXTERNAL_ACCOUNT_OUTPUT_FILE=%v\", cs.OutputFile))\n+\t}\n+\treturn result\n+}\n+\n+func (cs executableCredentialSource) getTokenFromExecutableCommand() (string, error) {\n+\t// For security reasons, we need our consumers to set this environment variable to allow executables to be run.\n+\tif cs.env.getenv(\"GOOGLE_EXTERNAL_ACCOUNT_ALLOW_EXECUTABLES\") != \"1\" {\n+\t\treturn \"\", executablesDisallowedError()\n+\t}\n+\n+\tctx, cancel := context.WithDeadline(cs.ctx, cs.env.now().Add(cs.Timeout))\n+\tdefer cancel()\n+\n+\toutput, err := cs.env.run(ctx, cs.Command, cs.executableEnvironment())\n+\tif err != nil {\n+\t\treturn \"\", err\n+\t}\n+\treturn cs.parseSubjectTokenFromSource(output, executableSource, cs.env.now().Unix())\n+}"
    },
    {
      "sha": "54c8f209f3b7d0a18cde149d20cf45fd95f5f281",
      "filename": "backend/vendor/golang.org/x/oauth2/google/internal/externalaccount/impersonate.go",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Fimpersonate.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Fimpersonate.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Finternal%2Fexternalaccount%2Fimpersonate.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -48,12 +48,19 @@ type ImpersonateTokenSource struct {\n \t// Each service account must be granted roles/iam.serviceAccountTokenCreator\n \t// on the next service account in the chain. Optional.\n \tDelegates []string\n+\t// TokenLifetimeSeconds is the number of seconds the impersonation token will\n+\t// be valid for.\n+\tTokenLifetimeSeconds int\n }\n \n // Token performs the exchange to get a temporary service account token to allow access to GCP.\n func (its ImpersonateTokenSource) Token() (*oauth2.Token, error) {\n+\tlifetimeString := \"3600s\"\n+\tif its.TokenLifetimeSeconds != 0 {\n+\t\tlifetimeString = fmt.Sprintf(\"%ds\", its.TokenLifetimeSeconds)\n+\t}\n \treqBody := generateAccessTokenReq{\n-\t\tLifetime:  \"3600s\",\n+\t\tLifetime:  lifetimeString,\n \t\tScope:     its.Scopes,\n \t\tDelegates: its.Delegates,\n \t}"
    },
    {
      "sha": "e89e6ae17bca2320c7a0c3d2f42b7c4ac30d5864",
      "filename": "backend/vendor/golang.org/x/oauth2/google/jwt.go",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fjwt.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fjwt.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fgoogle%2Fjwt.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -66,7 +66,8 @@ func newJWTSource(jsonKey []byte, audience string, scopes []string) (oauth2.Toke\n \tif err != nil {\n \t\treturn nil, err\n \t}\n-\treturn oauth2.ReuseTokenSource(tok, ts), nil\n+\trts := newErrWrappingTokenSource(oauth2.ReuseTokenSource(tok, ts))\n+\treturn rts, nil\n }\n \n type jwtAccessTokenSource struct {"
    },
    {
      "sha": "95015648b43fe7ebade6a8cc0d01637210c38958",
      "filename": "backend/vendor/golang.org/x/oauth2/jws/jws.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fjws%2Fjws.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fjws%2Fjws.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Foauth2%2Fjws%2Fjws.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -178,5 +178,5 @@ func Verify(token string, key *rsa.PublicKey) error {\n \n \th := sha256.New()\n \th.Write([]byte(signedContent))\n-\treturn rsa.VerifyPKCS1v15(key, crypto.SHA256, h.Sum(nil), []byte(signatureString))\n+\treturn rsa.VerifyPKCS1v15(key, crypto.SHA256, h.Sum(nil), signatureString)\n }"
    },
    {
      "sha": "15167cd746c560e5b3d3b233a169aa64d3e9101e",
      "filename": "backend/vendor/golang.org/x/sync/AUTHORS",
      "status": "removed",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Fsync%2FAUTHORS",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Fsync%2FAUTHORS",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsync%2FAUTHORS?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,3 +0,0 @@\n-# This source code refers to The Go Authors for copyright purposes.\n-# The master list of authors is in the main Go distribution,\n-# visible at http://tip.golang.org/AUTHORS."
    },
    {
      "sha": "1c4577e9680611383f46044d17fa343a96997c3c",
      "filename": "backend/vendor/golang.org/x/sync/CONTRIBUTORS",
      "status": "removed",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Fsync%2FCONTRIBUTORS",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Fsync%2FCONTRIBUTORS",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsync%2FCONTRIBUTORS?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,3 +0,0 @@\n-# This source code was written by the Go contributors.\n-# The master list of contributors is in the main Go distribution,\n-# visible at http://tip.golang.org/CONTRIBUTORS."
    },
    {
      "sha": "4c0850a45aa1444fdbe87df5484b8a01c0bc3c54",
      "filename": "backend/vendor/golang.org/x/sync/errgroup/errgroup.go",
      "status": "modified",
      "additions": 68,
      "deletions": 2,
      "changes": 70,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsync%2Ferrgroup%2Ferrgroup.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsync%2Ferrgroup%2Ferrgroup.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsync%2Ferrgroup%2Ferrgroup.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -8,22 +8,35 @@ package errgroup\n \n import (\n \t\"context\"\n+\t\"fmt\"\n \t\"sync\"\n )\n \n+type token struct{}\n+\n // A Group is a collection of goroutines working on subtasks that are part of\n // the same overall task.\n //\n-// A zero Group is valid and does not cancel on error.\n+// A zero Group is valid, has no limit on the number of active goroutines,\n+// and does not cancel on error.\n type Group struct {\n \tcancel func()\n \n \twg sync.WaitGroup\n \n+\tsem chan token\n+\n \terrOnce sync.Once\n \terr     error\n }\n \n+func (g *Group) done() {\n+\tif g.sem != nil {\n+\t\t<-g.sem\n+\t}\n+\tg.wg.Done()\n+}\n+\n // WithContext returns a new Group and an associated Context derived from ctx.\n //\n // The derived Context is canceled the first time a function passed to Go\n@@ -45,14 +58,48 @@ func (g *Group) Wait() error {\n }\n \n // Go calls the given function in a new goroutine.\n+// It blocks until the new goroutine can be added without the number of\n+// active goroutines in the group exceeding the configured limit.\n //\n // The first call to return a non-nil error cancels the group; its error will be\n // returned by Wait.\n func (g *Group) Go(f func() error) {\n+\tif g.sem != nil {\n+\t\tg.sem <- token{}\n+\t}\n+\n \tg.wg.Add(1)\n+\tgo func() {\n+\t\tdefer g.done()\n+\n+\t\tif err := f(); err != nil {\n+\t\t\tg.errOnce.Do(func() {\n+\t\t\t\tg.err = err\n+\t\t\t\tif g.cancel != nil {\n+\t\t\t\t\tg.cancel()\n+\t\t\t\t}\n+\t\t\t})\n+\t\t}\n+\t}()\n+}\n+\n+// TryGo calls the given function in a new goroutine only if the number of\n+// active goroutines in the group is currently below the configured limit.\n+//\n+// The return value reports whether the goroutine was started.\n+func (g *Group) TryGo(f func() error) bool {\n+\tif g.sem != nil {\n+\t\tselect {\n+\t\tcase g.sem <- token{}:\n+\t\t\t// Note: this allows barging iff channels in general allow barging.\n+\t\tdefault:\n+\t\t\treturn false\n+\t\t}\n+\t}\n \n+\tg.wg.Add(1)\n \tgo func() {\n-\t\tdefer g.wg.Done()\n+\t\tdefer g.done()\n \n \t\tif err := f(); err != nil {\n \t\t\tg.errOnce.Do(func() {\n@@ -63,4 +110,23 @@ func (g *Group) Go(f func() error) {\n \t\t\t})\n \t\t}\n \t}()\n+\treturn true\n+}\n+\n+// SetLimit limits the number of active goroutines in this group to at most n.\n+// A negative value indicates no limit.\n+//\n+// Any subsequent call to the Go method will block until it can add an active\n+// goroutine without exceeding the configured limit.\n+//\n+// The limit must not be modified while any goroutines in the group are active.\n+func (g *Group) SetLimit(n int) {\n+\tif n < 0 {\n+\t\tg.sem = nil\n+\t\treturn\n+\t}\n+\tif len(g.sem) != 0 {\n+\t\tpanic(fmt.Errorf(\"errgroup: modify limit while %v goroutines in the group are still active\", len(g.sem)))\n+\t}\n+\tg.sem = make(chan token, n)\n }"
    },
    {
      "sha": "e07899b909bb0321d4378af4a9feda064ddd10d0",
      "filename": "backend/vendor/golang.org/x/sys/internal/unsafeheader/unsafeheader.go",
      "status": "removed",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Finternal%2Funsafeheader%2Funsafeheader.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Finternal%2Funsafeheader%2Funsafeheader.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Finternal%2Funsafeheader%2Funsafeheader.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,30 +0,0 @@\n-// Copyright 2020 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-// Package unsafeheader contains header declarations for the Go runtime's\n-// slice and string implementations.\n-//\n-// This package allows x/sys to use types equivalent to\n-// reflect.SliceHeader and reflect.StringHeader without introducing\n-// a dependency on the (relatively heavy) \"reflect\" package.\n-package unsafeheader\n-\n-import (\n-\t\"unsafe\"\n-)\n-\n-// Slice is the runtime representation of a slice.\n-// It cannot be used safely or portably and its representation may change in a later release.\n-type Slice struct {\n-\tData unsafe.Pointer\n-\tLen  int\n-\tCap  int\n-}\n-\n-// String is the runtime representation of a string.\n-// It cannot be used safely or portably and its representation may change in a later release.\n-type String struct {\n-\tData unsafe.Pointer\n-\tLen  int\n-}"
    },
    {
      "sha": "e5b9a84899ac85338b71fab9091bc22d2870bd93",
      "filename": "backend/vendor/golang.org/x/sys/unix/asm_bsd_ppc64.s",
      "status": "added",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fasm_bsd_ppc64.s",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fasm_bsd_ppc64.s",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fasm_bsd_ppc64.s?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2022 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+//go:build (darwin || freebsd || netbsd || openbsd) && gc\n+// +build darwin freebsd netbsd openbsd\n+// +build gc\n+\n+#include \"textflag.h\"\n+\n+//\n+// System call support for ppc64, BSD\n+//\n+\n+// Just jump to package syscall's implementation for all these functions.\n+// The runtime may know about them.\n+\n+TEXT\t·Syscall(SB),NOSPLIT,$0-56\n+\tJMP\tsyscall·Syscall(SB)\n+\n+TEXT\t·Syscall6(SB),NOSPLIT,$0-80\n+\tJMP\tsyscall·Syscall6(SB)\n+\n+TEXT\t·Syscall9(SB),NOSPLIT,$0-104\n+\tJMP\tsyscall·Syscall9(SB)\n+\n+TEXT\t·RawSyscall(SB),NOSPLIT,$0-56\n+\tJMP\tsyscall·RawSyscall(SB)\n+\n+TEXT\t·RawSyscall6(SB),NOSPLIT,$0-80\n+\tJMP\tsyscall·RawSyscall6(SB)"
    },
    {
      "sha": "2499f977b0702d7755487804d8f8e1054b27b17a",
      "filename": "backend/vendor/golang.org/x/sys/unix/dirent.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fdirent.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fdirent.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fdirent.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -2,8 +2,8 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-//go:build aix || darwin || dragonfly || freebsd || linux || netbsd || openbsd || solaris\n-// +build aix darwin dragonfly freebsd linux netbsd openbsd solaris\n+//go:build aix || darwin || dragonfly || freebsd || linux || netbsd || openbsd || solaris || zos\n+// +build aix darwin dragonfly freebsd linux netbsd openbsd solaris zos\n \n package unix\n "
    },
    {
      "sha": "b06f52d748f6a32edab691401f0ca634c58c9647",
      "filename": "backend/vendor/golang.org/x/sys/unix/gccgo.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fgccgo.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fgccgo.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fgccgo.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -2,8 +2,8 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-//go:build gccgo && !aix\n-// +build gccgo,!aix\n+//go:build gccgo && !aix && !hurd\n+// +build gccgo,!aix,!hurd\n \n package unix\n "
    },
    {
      "sha": "c4fce0e700364d7808909948f8e4721db7890599",
      "filename": "backend/vendor/golang.org/x/sys/unix/gccgo_c.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fgccgo_c.c",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fgccgo_c.c",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fgccgo_c.c?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -2,8 +2,8 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build gccgo\n-// +build !aix\n+// +build gccgo,!hurd\n+// +build !aix,!hurd\n \n #include <errno.h>\n #include <stdint.h>"
    },
    {
      "sha": "1c51b0ec2bcddc37a8270434dab51cd74e328dc7",
      "filename": "backend/vendor/golang.org/x/sys/unix/ioctl.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fioctl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fioctl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fioctl.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -2,8 +2,8 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-//go:build aix || darwin || dragonfly || freebsd || linux || netbsd || openbsd || solaris\n-// +build aix darwin dragonfly freebsd linux netbsd openbsd solaris\n+//go:build aix || darwin || dragonfly || freebsd || hurd || linux || netbsd || openbsd || solaris\n+// +build aix darwin dragonfly freebsd hurd linux netbsd openbsd solaris\n \n package unix\n "
    },
    {
      "sha": "0d12c0851adf20163670405cb287e59e6233da47",
      "filename": "backend/vendor/golang.org/x/sys/unix/ioctl_linux.go",
      "status": "modified",
      "additions": 17,
      "deletions": 3,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fioctl_linux.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fioctl_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fioctl_linux.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -4,9 +4,7 @@\n \n package unix\n \n-import (\n-\t\"unsafe\"\n-)\n+import \"unsafe\"\n \n // IoctlRetInt performs an ioctl operation specified by req on a device\n // associated with opened file descriptor fd, and returns a non-negative\n@@ -217,3 +215,19 @@ func IoctlKCMAttach(fd int, info KCMAttach) error {\n func IoctlKCMUnattach(fd int, info KCMUnattach) error {\n \treturn ioctlPtr(fd, SIOCKCMUNATTACH, unsafe.Pointer(&info))\n }\n+\n+// IoctlLoopGetStatus64 gets the status of the loop device associated with the\n+// file descriptor fd using the LOOP_GET_STATUS64 operation.\n+func IoctlLoopGetStatus64(fd int) (*LoopInfo64, error) {\n+\tvar value LoopInfo64\n+\tif err := ioctlPtr(fd, LOOP_GET_STATUS64, unsafe.Pointer(&value)); err != nil {\n+\t\treturn nil, err\n+\t}\n+\treturn &value, nil\n+}\n+\n+// IoctlLoopSetStatus64 sets the status of the loop device associated with the\n+// file descriptor fd using the LOOP_SET_STATUS64 operation.\n+func IoctlLoopSetStatus64(fd int, value *LoopInfo64) error {\n+\treturn ioctlPtr(fd, LOOP_SET_STATUS64, unsafe.Pointer(value))\n+}"
    },
    {
      "sha": "8e3947c3686c0be1b4060e17d054d7ae2b31406b",
      "filename": "backend/vendor/golang.org/x/sys/unix/mkall.sh",
      "status": "modified",
      "additions": 31,
      "deletions": 18,
      "changes": 49,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmkall.sh",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmkall.sh",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmkall.sh?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -73,12 +73,12 @@ aix_ppc64)\n darwin_amd64)\n \tmkerrors=\"$mkerrors -m64\"\n \tmktypes=\"GOARCH=$GOARCH go tool cgo -godefs\"\n-\tmkasm=\"go run mkasm_darwin.go\"\n+\tmkasm=\"go run mkasm.go\"\n \t;;\n darwin_arm64)\n \tmkerrors=\"$mkerrors -m64\"\n \tmktypes=\"GOARCH=$GOARCH go tool cgo -godefs\"\n-\tmkasm=\"go run mkasm_darwin.go\"\n+\tmkasm=\"go run mkasm.go\"\n \t;;\n dragonfly_amd64)\n \tmkerrors=\"$mkerrors -m64\"\n@@ -142,42 +142,60 @@ netbsd_arm64)\n \tmktypes=\"GOARCH=$GOARCH go tool cgo -godefs\"\n \t;;\n openbsd_386)\n+\tmkasm=\"go run mkasm.go\"\n \tmkerrors=\"$mkerrors -m32\"\n-\tmksyscall=\"go run mksyscall.go -l32 -openbsd\"\n+\tmksyscall=\"go run mksyscall.go -l32 -openbsd -libc\"\n \tmksysctl=\"go run mksysctl_openbsd.go\"\n-\tmksysnum=\"go run mksysnum.go 'https://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/sys/kern/syscalls.master'\"\n \tmktypes=\"GOARCH=$GOARCH go tool cgo -godefs\"\n \t;;\n openbsd_amd64)\n+\tmkasm=\"go run mkasm.go\"\n \tmkerrors=\"$mkerrors -m64\"\n-\tmksyscall=\"go run mksyscall.go -openbsd\"\n+\tmksyscall=\"go run mksyscall.go -openbsd -libc\"\n \tmksysctl=\"go run mksysctl_openbsd.go\"\n-\tmksysnum=\"go run mksysnum.go 'https://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/sys/kern/syscalls.master'\"\n \tmktypes=\"GOARCH=$GOARCH go tool cgo -godefs\"\n \t;;\n openbsd_arm)\n+\tmkasm=\"go run mkasm.go\"\n \tmkerrors=\"$mkerrors\"\n-\tmksyscall=\"go run mksyscall.go -l32 -openbsd -arm\"\n+\tmksyscall=\"go run mksyscall.go -l32 -openbsd -arm -libc\"\n \tmksysctl=\"go run mksysctl_openbsd.go\"\n-\tmksysnum=\"go run mksysnum.go 'https://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/sys/kern/syscalls.master'\"\n \t# Let the type of C char be signed for making the bare syscall\n \t# API consistent across platforms.\n \tmktypes=\"GOARCH=$GOARCH go tool cgo -godefs -- -fsigned-char\"\n \t;;\n openbsd_arm64)\n+\tmkasm=\"go run mkasm.go\"\n \tmkerrors=\"$mkerrors -m64\"\n-\tmksyscall=\"go run mksyscall.go -openbsd\"\n+\tmksyscall=\"go run mksyscall.go -openbsd -libc\"\n \tmksysctl=\"go run mksysctl_openbsd.go\"\n-\tmksysnum=\"go run mksysnum.go 'https://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/sys/kern/syscalls.master'\"\n \t# Let the type of C char be signed for making the bare syscall\n \t# API consistent across platforms.\n \tmktypes=\"GOARCH=$GOARCH go tool cgo -godefs -- -fsigned-char\"\n \t;;\n openbsd_mips64)\n+\tmkasm=\"go run mkasm.go\"\n \tmkerrors=\"$mkerrors -m64\"\n-\tmksyscall=\"go run mksyscall.go -openbsd\"\n+\tmksyscall=\"go run mksyscall.go -openbsd -libc\"\n+\tmksysctl=\"go run mksysctl_openbsd.go\"\n+\t# Let the type of C char be signed for making the bare syscall\n+\t# API consistent across platforms.\n+\tmktypes=\"GOARCH=$GOARCH go tool cgo -godefs -- -fsigned-char\"\n+\t;;\n+openbsd_ppc64)\n+\tmkasm=\"go run mkasm.go\"\n+\tmkerrors=\"$mkerrors -m64\"\n+\tmksyscall=\"go run mksyscall.go -openbsd -libc\"\n+\tmksysctl=\"go run mksysctl_openbsd.go\"\n+\t# Let the type of C char be signed for making the bare syscall\n+\t# API consistent across platforms.\n+\tmktypes=\"GOARCH=$GOARCH go tool cgo -godefs -- -fsigned-char\"\n+\t;;\n+openbsd_riscv64)\n+\tmkasm=\"go run mkasm.go\"\n+\tmkerrors=\"$mkerrors -m64\"\n+\tmksyscall=\"go run mksyscall.go -openbsd -libc\"\n \tmksysctl=\"go run mksysctl_openbsd.go\"\n-\tmksysnum=\"go run mksysnum.go 'https://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/sys/kern/syscalls.master'\"\n \t# Let the type of C char be signed for making the bare syscall\n \t# API consistent across platforms.\n \tmktypes=\"GOARCH=$GOARCH go tool cgo -godefs -- -fsigned-char\"\n@@ -214,11 +232,6 @@ esac\n \t\t\tif [ \"$GOOSARCH\" == \"aix_ppc64\" ]; then\n \t\t\t\t# aix/ppc64 script generates files instead of writing to stdin.\n \t\t\t\techo \"$mksyscall -tags $GOOS,$GOARCH $syscall_goos $GOOSARCH_in && gofmt -w zsyscall_$GOOSARCH.go && gofmt -w zsyscall_\"$GOOSARCH\"_gccgo.go && gofmt -w zsyscall_\"$GOOSARCH\"_gc.go \" ;\n-\t\t\telif [ \"$GOOS\" == \"darwin\" ]; then\n-\t\t\t        # 1.12 and later, syscalls via libSystem\n-\t\t\t\techo \"$mksyscall -tags $GOOS,$GOARCH,go1.12 $syscall_goos $GOOSARCH_in |gofmt >zsyscall_$GOOSARCH.go\";\n-\t\t\t\t# 1.13 and later, syscalls via libSystem (including syscallPtr)\n-\t\t\t\techo \"$mksyscall -tags $GOOS,$GOARCH,go1.13 syscall_darwin.1_13.go |gofmt >zsyscall_$GOOSARCH.1_13.go\";\n \t\t\telif [ \"$GOOS\" == \"illumos\" ]; then\n \t\t\t        # illumos code generation requires a --illumos switch\n \t\t\t        echo \"$mksyscall -illumos -tags illumos,$GOARCH syscall_illumos.go |gofmt > zsyscall_illumos_$GOARCH.go\";\n@@ -232,5 +245,5 @@ esac\n \tif [ -n \"$mksysctl\" ]; then echo \"$mksysctl |gofmt >$zsysctl\"; fi\n \tif [ -n \"$mksysnum\" ]; then echo \"$mksysnum |gofmt >zsysnum_$GOOSARCH.go\"; fi\n \tif [ -n \"$mktypes\" ]; then echo \"$mktypes types_$GOOS.go | go run mkpost.go > ztypes_$GOOSARCH.go\"; fi\n-\tif [ -n \"$mkasm\" ]; then echo \"$mkasm $GOARCH\"; fi\n+\tif [ -n \"$mkasm\" ]; then echo \"$mkasm $GOOS $GOARCH\"; fi\n ) | $run"
    },
    {
      "sha": "7456d9ddde16b56331a704279a85ead5d55984d1",
      "filename": "backend/vendor/golang.org/x/sys/unix/mkerrors.sh",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmkerrors.sh",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmkerrors.sh",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fmkerrors.sh?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -642,7 +642,7 @@ errors=$(\n signals=$(\n \techo '#include <signal.h>' | $CC -x c - -E -dM $ccflags |\n \tawk '$1==\"#define\" && $2 ~ /^SIG[A-Z0-9]+$/ { print $2 }' |\n-\tegrep -v '(SIGSTKSIZE|SIGSTKSZ|SIGRT|SIGMAX64)' |\n+\tgrep -v 'SIGSTKSIZE\\|SIGSTKSZ\\|SIGRT\\|SIGMAX64' |\n \tsort\n )\n \n@@ -652,7 +652,7 @@ echo '#include <errno.h>' | $CC -x c - -E -dM $ccflags |\n \tsort >_error.grep\n echo '#include <signal.h>' | $CC -x c - -E -dM $ccflags |\n \tawk '$1==\"#define\" && $2 ~ /^SIG[A-Z0-9]+$/ { print \"^\\t\" $2 \"[ \\t]*=\" }' |\n-\tegrep -v '(SIGSTKSIZE|SIGSTKSZ|SIGRT|SIGMAX64)' |\n+\tgrep -v 'SIGSTKSIZE\\|SIGSTKSZ\\|SIGRT\\|SIGMAX64' |\n \tsort >_signal.grep\n \n echo '// mkerrors.sh' \"$@\""
    },
    {
      "sha": "3865943f6e27dc266bcb06e5dfe6fa1f0af47de4",
      "filename": "backend/vendor/golang.org/x/sys/unix/sockcmsg_unix.go",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsockcmsg_unix.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsockcmsg_unix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsockcmsg_unix.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -52,6 +52,20 @@ func ParseSocketControlMessage(b []byte) ([]SocketControlMessage, error) {\n \treturn msgs, nil\n }\n \n+// ParseOneSocketControlMessage parses a single socket control message from b, returning the message header,\n+// message data (a slice of b), and the remainder of b after that single message.\n+// When there are no remaining messages, len(remainder) == 0.\n+func ParseOneSocketControlMessage(b []byte) (hdr Cmsghdr, data []byte, remainder []byte, err error) {\n+\th, dbuf, err := socketControlMessageHeaderAndData(b)\n+\tif err != nil {\n+\t\treturn Cmsghdr{}, nil, nil, err\n+\t}\n+\tif i := cmsgAlignOf(int(h.Len)); i < len(b) {\n+\t\tremainder = b[i:]\n+\t}\n+\treturn *h, dbuf, remainder, nil\n+}\n+\n func socketControlMessageHeaderAndData(b []byte) (*Cmsghdr, []byte, error) {\n \th := (*Cmsghdr)(unsafe.Pointer(&b[0]))\n \tif h.Len < SizeofCmsghdr || uint64(h.Len) > uint64(len(b)) {"
    },
    {
      "sha": "8ba89ed8694f46b545cc2f5612667353cdbd03c6",
      "filename": "backend/vendor/golang.org/x/sys/unix/str.go",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/umputun/remark42/blob/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fstr.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8357846818f0c58dcdd57ea9e09f4470d5a1e72a/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fstr.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fstr.go?ref=8357846818f0c58dcdd57ea9e09f4470d5a1e72a",
      "patch": "@@ -1,27 +0,0 @@\n-// Copyright 2009 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-//go:build aix || darwin || dragonfly || freebsd || linux || netbsd || openbsd || solaris\n-// +build aix darwin dragonfly freebsd linux netbsd openbsd solaris\n-\n-package unix\n-\n-func itoa(val int) string { // do it here rather than with fmt to avoid dependency\n-\tif val < 0 {\n-\t\treturn \"-\" + uitoa(uint(-val))\n-\t}\n-\treturn uitoa(uint(val))\n-}\n-\n-func uitoa(val uint) string {\n-\tvar buf [32]byte // big enough for int64\n-\ti := len(buf) - 1\n-\tfor val >= 10 {\n-\t\tbuf[i] = byte(val%10 + '0')\n-\t\ti--\n-\t\tval /= 10\n-\t}\n-\tbuf[i] = byte(val + '0')\n-\treturn string(buf[i:])\n-}"
    },
    {
      "sha": "63e8c838317f5887ea031cc3b2b6ac3d9ff7b8e1",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall.go",
      "status": "modified",
      "additions": 1,
      "deletions": 9,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -29,8 +29,6 @@ import (\n \t\"bytes\"\n \t\"strings\"\n \t\"unsafe\"\n-\n-\t\"golang.org/x/sys/internal/unsafeheader\"\n )\n \n // ByteSliceFromString returns a NUL-terminated slice of bytes\n@@ -82,13 +80,7 @@ func BytePtrToString(p *byte) string {\n \t\tptr = unsafe.Pointer(uintptr(ptr) + 1)\n \t}\n \n-\tvar s []byte\n-\th := (*unsafeheader.Slice)(unsafe.Pointer(&s))\n-\th.Data = unsafe.Pointer(p)\n-\th.Len = n\n-\th.Cap = n\n-\n-\treturn string(s)\n+\treturn string(unsafe.Slice(p, n))\n }\n \n // Single-word zero for use when we need a valid pointer to 0 bytes."
    },
    {
      "sha": "2db1b51e99f04098055f018b1ead48b497cef57e",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_aix.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_aix.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_aix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_aix.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -253,7 +253,7 @@ func sendmsgN(fd int, iov []Iovec, oob []byte, ptr unsafe.Pointer, salen _Sockle\n \tvar empty bool\n \tif len(oob) > 0 {\n \t\t// send at least one normal byte\n-\t\tempty := emptyIovecs(iov)\n+\t\tempty = emptyIovecs(iov)\n \t\tif empty {\n \t\t\tvar iova [1]Iovec\n \t\t\tiova[0].Base = &dummy"
    },
    {
      "sha": "eda42671f195432fc99bd91b5cc200fc621d4c65",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_bsd.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_bsd.go",
      "raw_url": "https://github.com/umputun/remark42/raw/c70a66a1c5bf0579253fe17e970d873a9d6bc753/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_bsd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgolang.org%2Fx%2Fsys%2Funix%2Fsyscall_bsd.go?ref=c70a66a1c5bf0579253fe17e970d873a9d6bc753",
      "patch": "@@ -363,7 +363,7 @@ func sendmsgN(fd int, iov []Iovec, oob []byte, ptr unsafe.Pointer, salen _Sockle\n \tvar empty bool\n \tif len(oob) > 0 {\n \t\t// send at least one normal byte\n-\t\tempty := emptyIovecs(iov)\n+\t\tempty = emptyIovecs(iov)\n \t\tif empty {\n \t\t\tvar iova [1]Iovec\n \t\t\tiova[0].Base = &dummy"
    }
  ]
}
