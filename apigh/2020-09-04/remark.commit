{
  "sha": "b974fd9cc4b37f4b80a9362f5fe1505bed814f15",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOmI5NzRmZDljYzRiMzdmNGI4MGE5MzYyZjVmZTE1MDViZWQ4MTRmMTU=",
  "commit": {
    "author": {
      "name": "Dmitry Verkhoturov",
      "email": "paskal.07@gmail.com",
      "date": "2020-09-02T19:06:35Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2020-09-02T20:09:46Z"
    },
    "message": "add ability to set multiple admin emails for notifications",
    "tree": {
      "sha": "ed0c333c3f15ede357212fbf7b904df8720746f3",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/ed0c333c3f15ede357212fbf7b904df8720746f3"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/b974fd9cc4b37f4b80a9362f5fe1505bed814f15",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/b974fd9cc4b37f4b80a9362f5fe1505bed814f15",
  "html_url": "https://github.com/umputun/remark42/commit/b974fd9cc4b37f4b80a9362f5fe1505bed814f15",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/b974fd9cc4b37f4b80a9362f5fe1505bed814f15/comments",
  "author": {
    "login": "paskal",
    "id": 712534,
    "node_id": "MDQ6VXNlcjcxMjUzNA==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/712534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paskal",
    "html_url": "https://github.com/paskal",
    "followers_url": "https://api.github.com/users/paskal/followers",
    "following_url": "https://api.github.com/users/paskal/following{/other_user}",
    "gists_url": "https://api.github.com/users/paskal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paskal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paskal/subscriptions",
    "organizations_url": "https://api.github.com/users/paskal/orgs",
    "repos_url": "https://api.github.com/users/paskal/repos",
    "events_url": "https://api.github.com/users/paskal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paskal/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4f135fe91b0ea4db283bf49d56ecdbbabe58c08b",
      "url": "https://api.github.com/repos/umputun/remark42/commits/4f135fe91b0ea4db283bf49d56ecdbbabe58c08b",
      "html_url": "https://github.com/umputun/remark42/commit/4f135fe91b0ea4db283bf49d56ecdbbabe58c08b"
    }
  ],
  "stats": {
    "total": 38,
    "additions": 20,
    "deletions": 18
  },
  "files": [
    {
      "sha": "4ee19883ce29dfece995bfe2f698d94f8b799e2a",
      "filename": "README.md",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/b974fd9cc4b37f4b80a9362f5fe1505bed814f15/README.md",
      "raw_url": "https://github.com/umputun/remark42/raw/b974fd9cc4b37f4b80a9362f5fe1505bed814f15/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/README.md?ref=b974fd9cc4b37f4b80a9362f5fe1505bed814f15",
      "patch": "@@ -110,10 +110,10 @@ _this is the recommended way to run remark42_\n | store.bolt.path         | STORE_BOLT_PATH         | `./var`                  | path to data directory                          |\n | store.bolt.timeout      | STORE_BOLT_TIMEOUT      | `30s`                    | boltdb access timeout                           |\n | admin.shared.id         | ADMIN_SHARED_ID         |                          | admin names (list of user ids), _multi_         |\n-| admin.shared.email      | ADMIN_SHARED_EMAIL      | `admin@${REMARK_URL}`    | admin email                                     |\n+| admin.shared.email      | ADMIN_SHARED_EMAIL      | `admin@${REMARK_URL}`    | admin emails, _multi_                           |\n | backup                  | BACKUP_PATH             | `./var/backup`           | backups location                                |\n | max-back                | MAX_BACKUP_FILES        | `10`                     | max backup files to keep                        |\n-| cache.type              | CACHE_TYPE              | `mem`                    | type of cache, `redis_pub_sub` or `mem` or `none`       |\n+| cache.type              | CACHE_TYPE              | `mem`                    | type of cache, `redis_pub_sub` or `mem` or `none` |\n | cache.redis_addr        | CACHE_REDIS_ADDR        | `127.0.0.1:6379`         | address of redis PubSub instance, turn `redis_pub_sub` cache on for distributed cache |\n | cache.max.items         | CACHE_MAX_ITEMS         | `1000`                   | max number of cached items, `0` - unlimited     |\n | cache.max.value         | CACHE_MAX_VALUE         | `65536`                  | max size of cached value, `0` - unlimited       |"
    },
    {
      "sha": "4aaf403ab3d2be42dcdaccdc54f44e043322fd4b",
      "filename": "backend/app/cmd/server.go",
      "status": "modified",
      "additions": 10,
      "deletions": 8,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/b974fd9cc4b37f4b80a9362f5fe1505bed814f15/backend/app/cmd/server.go",
      "raw_url": "https://github.com/umputun/remark42/raw/b974fd9cc4b37f4b80a9362f5fe1505bed814f15/backend/app/cmd/server.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/cmd/server.go?ref=b974fd9cc4b37f4b80a9362f5fe1505bed814f15",
      "patch": "@@ -176,7 +176,7 @@ type AdminGroup struct {\n \tType   string `long:\"type\" env:\"TYPE\" description:\"type of admin store\" choice:\"shared\" choice:\"rpc\" default:\"shared\"` //nolint\n \tShared struct {\n \t\tAdmins []string `long:\"id\" env:\"ID\" description:\"admin(s) ids\" env-delim:\",\"`\n-\t\tEmail  string   `long:\"email\" env:\"EMAIL\" default:\"\" description:\"admin email\"`\n+\t\tEmail  []string `long:\"email\" env:\"EMAIL\" description:\"admin emails\" env-delim:\",\"`\n \t} `group:\"shared\" namespace:\"shared\" env-namespace:\"SHARED\"`\n \tRPC RPCGroup `group:\"rpc\" namespace:\"rpc\" env-namespace:\"RPC\"`\n }\n@@ -457,8 +457,7 @@ func (s *ServerCommand) newServerApp() (*serverApp, error) {\n \t\tProxyCORS:          s.ProxyCORS,\n \t}\n \n-\t// enable admin notifications only if admin email is set\n-\tif s.Notify.Email.AdminNotifications && s.Admin.Shared.Email != \"\" {\n+\tif s.Notify.Email.AdminNotifications {\n \t\tsrv.AdminEmail = s.Admin.Shared.Email\n \t}\n \n@@ -652,12 +651,15 @@ func (s *ServerCommand) makeAdminStore() (admin.Store, error) {\n \n \tswitch s.Admin.Type {\n \tcase \"shared\":\n-\t\tif s.Admin.Shared.Email == \"\" { // no admin email, use admin@domain\n+\t\tsharedAdminEmail := \"\"\n+\t\tif len(s.Admin.Shared.Email) == 0 { // no admin email, use admin@domain\n \t\t\tif u, err := url.Parse(s.RemarkURL); err == nil {\n-\t\t\t\ts.Admin.Shared.Email = \"admin@\" + u.Host\n+\t\t\t\tsharedAdminEmail = \"admin@\" + u.Host\n \t\t\t}\n+\t\t} else {\n+\t\t\tsharedAdminEmail = s.Admin.Shared.Email[0]\n \t\t}\n-\t\treturn admin.NewStaticStore(s.SharedSecret, s.Sites, s.Admin.Shared.Admins, s.Admin.Shared.Email), nil\n+\t\treturn admin.NewStaticStore(s.SharedSecret, s.Sites, s.Admin.Shared.Admins, sharedAdminEmail), nil\n \tcase \"rpc\":\n \t\tr := &admin.RPC{Client: jrpc.Client{\n \t\t\tAPI:        s.Admin.RPC.API,\n@@ -893,8 +895,8 @@ func (s *ServerCommand) makeSSLConfig() (config api.SSLConfig, err error) {\n \t\tconfig.ACMELocation = s.SSL.ACMELocation\n \t\tif s.SSL.ACMEEmail != \"\" {\n \t\t\tconfig.ACMEEmail = s.SSL.ACMEEmail\n-\t\t} else if s.Admin.Type == \"shared\" && s.Admin.Shared.Email != \"\" {\n-\t\t\tconfig.ACMEEmail = s.Admin.Shared.Email\n+\t\t} else if s.Admin.Type == \"shared\" && len(s.Admin.Shared.Email) != 0 {\n+\t\t\tconfig.ACMEEmail = s.Admin.Shared.Email[0]\n \t\t} else if u, e := url.Parse(s.RemarkURL); e == nil {\n \t\t\tconfig.ACMEEmail = \"admin@\" + u.Hostname()\n \t\t}"
    },
    {
      "sha": "41720975f4b984eb4c02d7996e80344c9a77d6b8",
      "filename": "backend/app/rest/api/rest.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/b974fd9cc4b37f4b80a9362f5fe1505bed814f15/backend/app/rest/api/rest.go",
      "raw_url": "https://github.com/umputun/remark42/raw/b974fd9cc4b37f4b80a9362f5fe1505bed814f15/backend/app/rest/api/rest.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/rest/api/rest.go?ref=b974fd9cc4b37f4b80a9362f5fe1505bed814f15",
      "patch": "@@ -51,7 +51,7 @@ type Rest struct {\n \tAnonVote        bool\n \tWebRoot         string\n \tRemarkURL       string\n-\tAdminEmail      string\n+\tAdminEmail      []string\n \tReadOnlyAge     int\n \tSharedSecret    string\n \tScoreThresholds struct {"
    },
    {
      "sha": "b21199ecd538cf1101d402171c314622c972b518",
      "filename": "backend/app/rest/api/rest_private.go",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/b974fd9cc4b37f4b80a9362f5fe1505bed814f15/backend/app/rest/api/rest_private.go",
      "raw_url": "https://github.com/umputun/remark42/raw/b974fd9cc4b37f4b80a9362f5fe1505bed814f15/backend/app/rest/api/rest_private.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/rest/api/rest_private.go?ref=b974fd9cc4b37f4b80a9362f5fe1505bed814f15",
      "patch": "@@ -40,7 +40,7 @@ type private struct {\n \tnotifyService    *notify.Service\n \tauthenticator    *auth.Service\n \tremarkURL        string\n-\tadminEmail       string\n+\tadminEmail       []string\n \tanonVote         bool\n \ttemplates        templates.FileReader\n }\n@@ -119,13 +119,13 @@ func (s *private) createCommentCtrl(w http.ResponseWriter, r *http.Request) {\n \ts.cache.Flush(cache.Flusher(comment.Locator.SiteID).\n \t\tScopes(comment.Locator.URL, lastCommentsScope, comment.User.ID, comment.Locator.SiteID))\n \n-\t// user notification\n \tif s.notifyService != nil {\n+\t\t// user notification\n \t\ts.notifyService.Submit(notify.Request{Comment: finalComment})\n-\t}\n-\t// admin notification\n-\tif s.notifyService != nil && s.adminEmail != \"\" {\n-\t\ts.notifyService.Submit(notify.Request{Comment: finalComment, Email: s.adminEmail, ForAdmin: true})\n+\t\t// admin notification\n+\t\tfor _, adminEmail := range s.adminEmail {\n+\t\t\ts.notifyService.Submit(notify.Request{Comment: finalComment, Email: adminEmail, ForAdmin: true})\n+\t\t}\n \t}\n \n \tlog.Printf(\"[DEBUG] created commend %+v\", finalComment)"
    },
    {
      "sha": "8ffdd101f3c3c7d4bb0e608c22ae758da1953007",
      "filename": "backend/app/rest/api/rest_test.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/b974fd9cc4b37f4b80a9362f5fe1505bed814f15/backend/app/rest/api/rest_test.go",
      "raw_url": "https://github.com/umputun/remark42/raw/b974fd9cc4b37f4b80a9362f5fe1505bed814f15/backend/app/rest/api/rest_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/rest/api/rest_test.go?ref=b974fd9cc4b37f4b80a9362f5fe1505bed814f15",
      "patch": "@@ -381,7 +381,7 @@ func startupT(t *testing.T) (ts *httptest.Server, srv *Rest, teardown func()) {\n \t\tCache:      memCache,\n \t\tWebRoot:    tmp,\n \t\tRemarkURL:  \"https://demo.remark42.com\",\n-\t\tAdminEmail: \"admin@example.org\",\n+\t\tAdminEmail: []string{\"admin@example.org\"},\n \t\tImageService: image.NewService(&image.FileSystem{\n \t\t\tLocation:   tmp + \"/pics-remark42\",\n \t\t\tPartitions: 100,"
    }
  ]
}
