{
  "sha": "15a6c2abba944f4219d904ba02c0a79bd55d26d5",
  "node_id": "MDY6Q29tbWl0MTA1NjMzMjI6MTVhNmMyYWJiYTk0NGY0MjE5ZDkwNGJhMDJjMGE3OWJkNTVkMjZkNQ==",
  "commit": {
    "author": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2021-03-15T21:00:55Z"
    },
    "committer": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2021-03-15T21:00:55Z"
    },
    "message": "Merge v0.2021.09 into 'release'.",
    "tree": {
      "sha": "a9a6786b669fbae499db283d15aae81cd120cfb1",
      "url": "https://api.github.com/repos/debiki/talkyard/git/trees/a9a6786b669fbae499db283d15aae81cd120cfb1"
    },
    "url": "https://api.github.com/repos/debiki/talkyard/git/commits/15a6c2abba944f4219d904ba02c0a79bd55d26d5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/debiki/talkyard/commits/15a6c2abba944f4219d904ba02c0a79bd55d26d5",
  "html_url": "https://github.com/debiki/talkyard/commit/15a6c2abba944f4219d904ba02c0a79bd55d26d5",
  "comments_url": "https://api.github.com/repos/debiki/talkyard/commits/15a6c2abba944f4219d904ba02c0a79bd55d26d5/comments",
  "author": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "639ccf013c1daf9308d5a6cb4988f888f2699389",
      "url": "https://api.github.com/repos/debiki/talkyard/commits/639ccf013c1daf9308d5a6cb4988f888f2699389",
      "html_url": "https://github.com/debiki/talkyard/commit/639ccf013c1daf9308d5a6cb4988f888f2699389"
    },
    {
      "sha": "99a5b7e05b96198a9caaf7303c929d13d4522506",
      "url": "https://api.github.com/repos/debiki/talkyard/commits/99a5b7e05b96198a9caaf7303c929d13d4522506",
      "html_url": "https://github.com/debiki/talkyard/commit/99a5b7e05b96198a9caaf7303c929d13d4522506"
    }
  ],
  "stats": {
    "total": 1812,
    "additions": 1398,
    "deletions": 414
  },
  "files": [
    {
      "sha": "5a24a16440c12acaddec27471477cf0f754bd7d2",
      "filename": ".gitmodules",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/.gitmodules",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/.gitmodules",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/.gitmodules?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -77,6 +77,27 @@\n \turl = https://github.com/debiki/talkyard-prod-swarm.git\n \n \n+# ----- Release channels\n+\n+# Each release channel has its own branch in the talkyard-version repo.\n+# And, in ./relchans/, they're checked out in sub directories, one\n+# directory per release channel (Git branch).\n+\n+[submodule \"relchans/tyse-v0-dev\"]\n+\tpath = relchans/tyse-v0-dev\n+\turl = https://github.com/debiki/talkyard-versions.git\n+\tbranch = tyse-v0-dev\n+\n+# [submodule \"relchans/tyse-v0-rapid\"]  — later\n+\n+[submodule \"relchans/tyse-v0-regular\"]\n+\tpath = relchans/tyse-v0-regular\n+\turl = https://github.com/debiki/talkyard-versions.git\n+\tbranch = tyse-v0-regular\n+\n+# [submodule \"relchans/tyse-v0-stable\"]  — later\n+\n+\n # ----- Vendored dependencies\n \n # Vendored code is in the ty-vendors repo, but in different branches"
    },
    {
      "sha": "ee2ed1570c94a4a8a79562ab905b56a3e426db2d",
      "filename": "README.md",
      "status": "modified",
      "additions": 16,
      "deletions": 11,
      "changes": 27,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/README.md",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/README.md",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/README.md?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -265,7 +265,7 @@ On Linux, you can:\n sudo -i\n curl -fsSL https://get.docker.com -o install-docker.sh\n sh install-docker.sh\n-curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\n+curl -L \"https://github.com/docker/compose/releases/download/1.28.5/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n sudo chmod +x /usr/local/bin/docker-compose\n docker-compose --version  # should print \"docker-compose version ... build ...\"\n ```\n@@ -308,13 +308,13 @@ how to use docker-compose already.\n \n        git clone https://github.com/debiki/talkyard.git talkyard\n        cd talkyard\n-       apt install make jq\n+       apt install make jq inotify-tools\n \n- 1. Start Talkyard:\n+ 1. Start Talkyard: (`s/tyd` is a Talkyard development helper script)\n \n-        make up\n+        s/tyd up\n \n-    And have a coffee; `make up` takes a while: About 1.5 GB Git submodules\n+    And have a coffee — this takes a while: About 1.5 GB Git submodules\n     with Nodejs packages, JVM JARs and OpenResty source code will get downloaded,\n     Typescript, Stylus and Scala code gets compiled and packaged, Docker images get built.\n     You can tail the log messages, by typing `make tail`,\n@@ -381,11 +381,16 @@ Editing source code\n \n To edit Typescript code (in `client/app-*/`) you can use VSCode.\n \n-If you edit some code and reload the page in the browser, your changes will\n-appear automatically: there's a Docker container, named Gulp, with Node.js\n-installed, which recompile Typescript and Stylus CSS. —\n-If you edit Typescript, wait five seconds before you reload the page in\n-the browser, otherwise the Typescript code might not yet have been transpiled.\n+To automatically recompile code you've edited, so the changes appear in your\n+browser after reload, do this:\n+\n+```\n+s/tyd tw   # 'tw' means \"transpile\" and \"watch\"\n+```\n+\n+But wait five seconds, after you've edited any Typescript code, before you reload the page in\n+the browser — otherwise the Typescript code might not yet have been transpiled.\n+(Details: There's a Docker container with Node.js installed, which recompile Typescript and Stylus CSS.)\n \n ### Scala\n \n@@ -398,7 +403,7 @@ There's a container, named *app*, which runs the Play Framework application serv\n and looks for changes to Scala files, recompiles and reloads.\n \n Unfortunately, if you keep editing and reloading Scala files many many times, then eventually\n-Play Framework runs out of memory. Restart it like so: `make restart-app`.\n+Play Framework runs out of memory. Restart it like so: `s/tyd ra` ('ra' means \"restart app\").\n \n \n "
    },
    {
      "sha": "1a4dcd919d03c8374b4a5b2f94592b05490fbc08",
      "filename": "app/controllers/VoteController.scala",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/app/controllers/VoteController.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/app/controllers/VoteController.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/controllers/VoteController.scala?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -129,7 +129,7 @@ class VoteController @Inject()(cc: ControllerComponents, edContext: EdContext)\n       pageMeta, requester,\n       dao.getGroupIdsOwnFirst(requester),\n       dao.getAnyPrivateGroupTalkMembers(pageMeta),\n-      categoriesRootLast,\n+      catsRootLast = categoriesRootLast,\n       tooManyPermissions = dao.getPermsOnPages(categoriesRootLast)),\n       \"EdE2QVBF06\")\n "
    },
    {
      "sha": "7e47300a7edefbf82b5db8646acb36db54037fe7",
      "filename": "app/debiki/dao/CategoriesDao.scala",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/app/debiki/dao/CategoriesDao.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/app/debiki/dao/CategoriesDao.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/debiki/dao/CategoriesDao.scala?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -373,13 +373,13 @@ trait CategoriesDao {\n     val filteredPages = pagesInclForbidden filter { page =>\n       val categories = getAncestorCategoriesRootLast(page.categoryId)\n       val may = ed.server.auth.Authz.maySeePage(\n-        page.meta,\n-        user = authzCtx.requester,\n-        groupIds = authzCtx.groupIdsUserIdFirst,\n-        pageMembers = getAnyPrivateGroupTalkMembers(page.meta),\n-        categoriesRootLast = categories,\n-        tooManyPermissions = authzCtx.tooManyPermissions,\n-        maySeeUnlisted = false) // pageQuery.pageFilter.includesUnlisted\n+            page.meta,\n+            user = authzCtx.requester,\n+            groupIds = authzCtx.groupIdsUserIdFirst,\n+            pageMembers = getAnyPrivateGroupTalkMembers(page.meta),\n+            catsRootLast = categories,\n+            tooManyPermissions = authzCtx.tooManyPermissions,\n+            maySeeUnlisted = false) // pageQuery.pageFilter.includesUnlisted\n       may == MayMaybe.Yes\n     }\n \n@@ -512,10 +512,10 @@ trait CategoriesDao {\n   }\n \n \n-  private def appendMaySeeCategoriesInTree(rootCategoryId: CategoryId, includeRoot: Boolean,\n-      includeDeleted: Boolean,\n-      inclCatsWithTopicsUnlisted: Boolean,\n-      authzCtx: ForumAuthzContext, categoryList: ArrayBuffer[Category]): Unit = {\n+  private def appendMaySeeCategoriesInTree(rootCategoryId: CatId, includeRoot: Bo,\n+      includeDeleted: Bo,\n+      inclCatsWithTopicsUnlisted: Bo,\n+      authzCtx: ForumAuthzContext, categoryList: ArrayBuffer[Category]): U = {\n \n     if (categoryList.exists(_.id == rootCategoryId)) {\n       // COULD log cycle error\n@@ -527,21 +527,21 @@ trait CategoriesDao {\n       return\n     })\n \n-    val categories = getAncestorCategoriesRootLast(rootCategoryId)\n+    val catsRootLast = getAncestorCategoriesRootLast(rootCategoryId)\n \n     // May we see this category?\n     // (Could skip checking the ancestors again, when we've recursed into a child category.)\n     // (Skip the root category in this check; cannot set permissions on it. [0YWKG21])\n-    if (!categories.head.isRoot) {\n-      val may = Authz.maySeeCategory(authzCtx, categories)\n+    if (!catsRootLast.head.isRoot) {\n+      val may = Authz.maySeeCategory(authzCtx, catsRootLast = catsRootLast)\n       if (may.maySee isNot true)\n         return\n     }\n \n     if (!includeDeleted && startCategory.isDeleted)\n       return\n \n-    COULD // add a seeUnlisted permission? If in a cat, a certain group should see unlisted topics.\n+    COULD // add a [maySeeUnlisted] permission? If in a cat, a certain group should see unlisted topics.\n     val onlyForStaff = startCategory.unlistCategory || startCategory.isDeleted  // [5JKWT42]\n     if (onlyForStaff && !authzCtx.isStaff)\n       return"
    },
    {
      "sha": "f959d37c0ee20075cc2946bab5d4cde4e8f1ded2",
      "filename": "app/ed/server/auth/Authz.scala",
      "status": "modified",
      "additions": 198,
      "deletions": 91,
      "changes": 289,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/app/ed/server/auth/Authz.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/app/ed/server/auth/Authz.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/ed/server/auth/Authz.scala?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -77,18 +77,18 @@ case class ForumAuthzContext(\n case class CategoryAuthzContext(\n   requester: Option[User],\n   permissions: immutable.Seq[PermsOnPages],\n-  categoriesRootLast: immutable.Seq[Category]) extends AuthzContext\n+  catsRootLast: immutable.Seq[Category]) extends AuthzContext\n \n case class PageAuthzContext(\n   requester: Option[User],\n   permissions: immutable.Seq[PermsOnPages],\n-  categoriesRootLast: immutable.Seq[Category],\n+  catsRootLast: immutable.Seq[Category],\n   pageMeta: PageMeta,\n   pageMembers: Option[Set[UserId]]) extends AuthzContext {\n \n   require(!pageMeta.pageRole.isPrivateGroupTalk || pageMembers.isDefined, \"EdE6LPK2A0\")\n-  require(pageMeta.categoryId.isDefined == categoriesRootLast.nonEmpty, \"EdE0WYK15\")\n-  require(!pageMeta.categoryId.exists(_ != categoriesRootLast.head.id), \"EdE3GPJU0\")\n+  require(pageMeta.categoryId.isDefined == catsRootLast.nonEmpty, \"EdE0WYK15\")\n+  require(!pageMeta.categoryId.exists(_ != catsRootLast.head.id), \"EdE3GPJU0\")\n } */\n \n \n@@ -136,8 +136,9 @@ object Authz {\n \n     val user = userAndLevels.user\n \n-    val mayWhat = checkPermsOnPages(Some(user), groupIds, pageMeta = None, pageMembers = None,\n-      inCategoriesRootLast, tooManyPermissions)\n+    val mayWhat = checkPermsOnPages(\n+          Some(user), groupIds, pageMeta = None, pageMembers = None,\n+          catsRootLast = inCategoriesRootLast, tooManyPermissions)\n \n     def isPrivate = pageRole.isPrivateGroupTalk && groupIds.nonEmpty &&\n       inCategoriesRootLast.isEmpty\n@@ -146,7 +147,7 @@ object Authz {\n       // Ok, may see.\n     }\n     else if (mayWhat.maySee isNot true) {\n-      return NoNotFound(s\"EdEM0CR0SEE-${mayWhat.debugCode}\")\n+      return NoNotFound(s\"TyEM0CR0SEE_-${mayWhat.debugCode}\")\n     }\n \n     if (!mayWhat.mayCreatePage && !isPrivate)\n@@ -178,15 +179,17 @@ object Authz {\n \n   def maySeePage(\n     pageMeta: PageMeta,\n-    user: Option[Participant],\n+    user: Opt[Pat],\n     groupIds: immutable.Seq[GroupId],\n     pageMembers: Set[UserId],\n-    categoriesRootLast: immutable.Seq[Category],\n+    catsRootLast: immutable.Seq[Cat],\n     tooManyPermissions: immutable.Seq[PermsOnPages],\n-    maySeeUnlisted: Boolean = true): MayMaybe = {\n+    maySeeUnlisted: Bo = true): MayMaybe = {\n \n-    val mayWhat = checkPermsOnPages(user, groupIds, Some(pageMeta), Some(pageMembers),\n-      categoriesRootLast, tooManyPermissions, maySeeUnlisted = maySeeUnlisted)\n+    val mayWhat = checkPermsOnPages(\n+          user, groupIds, Some(pageMeta), Some(pageMembers),\n+          catsRootLast = catsRootLast, tooManyPermissions,\n+          maySeeUnlisted = maySeeUnlisted)\n \n     if (mayWhat.maySee isNot true)\n       return NoNotFound(s\"TyEM0SEE_-${mayWhat.debugCode}\")\n@@ -195,11 +198,11 @@ object Authz {\n   }\n \n \n-  def maySeeCategory(authzCtx: AuthzContext, categoriesRootLast: immutable.Seq[Category])\n+  def maySeeCategory(authzCtx: AuthzContext, catsRootLast: immutable.Seq[Category])\n         : MayWhat = {\n     checkPermsOnPages(authzCtx.requester, authzCtx.groupIdsUserIdFirst,\n-      pageMeta = None, pageMembers = None, categoriesRootLast, authzCtx.tooManyPermissions,\n-      maySeeUnlisted = false)\n+          pageMeta = None, pageMembers = None, catsRootLast = catsRootLast,\n+          authzCtx.tooManyPermissions, maySeeUnlisted = false)\n   }\n \n \n@@ -223,8 +226,10 @@ object Authz {\n     val user = userAndLevels.user\n \n     SHOULD // be check-perms-on pageid + postnr, not just page\n-    val mayWhat = checkPermsOnPages(Some(user), groupIds, Some(pageMeta),\n-      Some(privateGroupTalkMemberIds), inCategoriesRootLast, tooManyPermissions)\n+    val mayWhat = checkPermsOnPages(\n+          Some(user), groupIds, Some(pageMeta),\n+          Some(privateGroupTalkMemberIds), catsRootLast = inCategoriesRootLast,\n+          tooManyPermissions)\n \n     if (mayWhat.maySee isNot true)\n       return NoNotFound(s\"TyEM0RE0SEE_-${mayWhat.debugCode}\")\n@@ -273,8 +278,10 @@ object Authz {\n       return NoNotFound(\"TyEM0EDPOSTDELD\")\n \n     val user = userAndLevels.user\n-    val mayWhat = checkPermsOnPages(Some(user), groupIds, Some(pageMeta),\n-      Some(privateGroupTalkMemberIds), inCategoriesRootLast, tooManyPermissions)\n+    val mayWhat = checkPermsOnPages(\n+          Some(user), groupIds, Some(pageMeta),\n+          Some(privateGroupTalkMemberIds), catsRootLast = inCategoriesRootLast,\n+          tooManyPermissions)\n \n     if (mayWhat.maySee isNot true)\n       return NoNotFound(s\"TyEM0ED0SEE-${mayWhat.debugCode}\")\n@@ -332,8 +339,10 @@ object Authz {\n       return NoMayNot(s\"EdEM0FLGISTHRT\", \"You may not flag stuff, sorry\")\n \n     SHOULD // be maySeePost pageid, postnr, not just page\n-    val mayWhat = checkPermsOnPages(Some(member), groupIds, Some(pageMeta),\n-      Some(privateGroupTalkMemberIds), inCategoriesRootLast, tooManyPermissions)\n+    val mayWhat = checkPermsOnPages(\n+          Some(member), groupIds, Some(pageMeta),\n+          Some(privateGroupTalkMemberIds), catsRootLast = inCategoriesRootLast,\n+          tooManyPermissions)\n \n     if (mayWhat.maySee isNot true)\n       return NoNotFound(\"EdEM0FLG0SEE\")\n@@ -351,8 +360,9 @@ object Authz {\n \n     val user = userAndLevels.user\n \n-    val mayWhat = checkPermsOnPages(user, groupIds, Some(pageMeta), None, inCategoriesRootLast,\n-      tooManyPermissions)\n+    val mayWhat = checkPermsOnPages(\n+          user, groupIds, Some(pageMeta), None, catsRootLast = inCategoriesRootLast,\n+          tooManyPermissions)\n \n     if (mayWhat.maySee isNot true)\n       return NoNotFound(\"EdEM0FRM0SEE\")\n@@ -383,17 +393,17 @@ object Authz {\n     * as Some(false), so don't-know-if-may-see = may-Not-see.\n     */\n   private def checkPermsOnPages(\n-    user: Option[Participant],\n+    user: Opt[Pat],\n     groupIds: immutable.Seq[GroupId],\n-    pageMeta: Option[PageMeta],\n-    pageMembers: Option[Set[UserId]],\n-    categoriesRootLast: immutable.Seq[Category],\n+    pageMeta: Opt[PageMeta],\n+    pageMembers: Opt[Set[UserId]],\n+    catsRootLast: immutable.Seq[Category],\n     tooManyPermissions: immutable.Seq[PermsOnPages],\n-    maySeeUnlisted: Boolean = true): MayWhat = {\n+    maySeeUnlisted: Bo = true): MayWhat = {\n \n     // Admins, but not moderators, have access to everything.\n-    // Why? Might sometimes be good with a place for members to bring up problems\n-    // with weird behaving moderators, where those mods cannot read and edit & delete\n+    // Why not mods? Can be good with a place for members to bring up problems\n+    // with misbehaving mods, where those mods cannot read and edit & delete\n     // the discussions. [mods_not_all_perms]\n     if (user.exists(_.isAdmin))\n       return MayEverything\n@@ -404,14 +414,19 @@ object Authz {\n     // For now, don't let people see pages outside any category. Hmm...?\n     // (<= 1 not 0: don't count the root category, no pages should be placed directly in them.)\n     /* Enable this later, need to migrate test cases first.\n-    if (categoriesRootLast.length <= 1 && !pageRole.exists(_.isPrivateGroupTalk))\n+    if (catsRootLast.length <= 1 && !pageRole.exists(_.isPrivateGroupTalk))\n       return MayWhat.mayNotSee(\"EdMNOCATS\")\n     */\n \n-    var mayWhat = MayPerhapsSee\n+    var mayWhatForPage = MayPerhapsSee\n+    var isPageMember = false\n+\n+\n+    // ----- Check page\n \n     pageMeta foreach { meta =>\n-      categoriesRootLast.headOption foreach { parentCategory =>\n+      // The parent category must be the same in the page meta, as in catsRootLast.\n+      catsRootLast.headOption foreach { parentCategory =>\n         dieIf(!meta.categoryId.contains(parentCategory.id), \"EdE5PBSW2\")\n       }\n \n@@ -424,7 +439,9 @@ object Authz {\n \n       // In one's own mind map, one may edit all nodes, even if posted by others. [0JUK2WA5]\n       if (meta.pageType == PageType.MindMap && (isOwnPage || isStaff))\n-        mayWhat = mayWhat.copy(mayEditPage = true, debugCode = \"EdMEDOWNMINDM\")\n+        mayWhatForPage = mayWhatForPage.copy(\n+              mayEditPage = true,\n+              debugCode = \"EdMEDOWNMINDM\")\n \n       // Only page participants may see things like private chats. [PRIVCHATNOTFS]\n       if (meta.pageType.isPrivateGroupTalk) {\n@@ -439,29 +456,47 @@ object Authz {\n         if (!thePageMembers.contains(theUser.id))\n           return MayWhat.mayNotSee(\"EdE0SEE0PAGEMBR\")\n \n-        mayWhat = mayWhat.copyWithMaySeeAndReply(debugCode = \"EdMMMEMBR\")\n+        isPageMember = true\n+        mayWhatForPage = mayWhatForPage.copy(\n+            mayPostComment = true,\n+            maySee = Some(true),\n+            debugCode = \"EdMMMEMBR\")\n       }\n     }\n \n+\n+    // ----- Check whole site\n+\n+    var mayWhatForSite = MayPerhapsSee\n+\n     val relevantPermissions = tooManyPermissions filter { permission =>  // [7RBBRY2]\n       groupIds.contains(permission.forPeopleId)\n     }\n \n     // We'll start with no permissions, at the top category, and loop through all categories\n     // down to the category in which the page is placed, and add/remove permissions along the way.\n+    // Move these pageMeta checks to 'Check page' above?\n     val isForumPage = pageMeta.exists(_.pageType == PageType.Forum)\n-    var isDeleted = pageMeta.exists(_.isDeleted)\n+    var isPageOrCatDeleted = pageMeta.exists(_.isDeleted)\n \n     // Later: return may-not-see also if !published?\n-    if (isDeleted && !isStaff)\n+    if (isPageOrCatDeleted && !isStaff)\n       return MayWhat.mayNotSee(\"TyEPAGEDELD_\")\n \n     // For now, hardcode may-see the forum page, otherwise only admins would see it.\n-    if (isForumPage)\n-      mayWhat = mayWhat.copy(maySee = Some(true), debugCode = \"EdMMSEEFORUM\")\n+    if (isForumPage) {\n+      mayWhatForSite = mayWhatForSite.copy(\n+            maySee = Some(true),\n+            debugCode = \"EdMMSEEFORUM\")\n+    }\n+\n+    val relPermsWholeSite = relevantPermissions.filter(_.onWholeSite.is(true))\n+    for (p <- relPermsWholeSite) {\n+      // Random order? So better add permissions only (not remove).  [2LG5F04W]\n+      mayWhatForSite = mayWhatForSite.addPermissions(p, \"EdMMSITEPERM\")\n+    }\n \n-    for (p <- relevantPermissions; if p.onWholeSite.is(true))\n-      mayWhat = mayWhat.addRemovePermissions(p, \"EdMMSITEPERM\")\n+    var mayWhat = mayWhatForPage.mergeYes(mayWhatForSite, \"TyMMMSSEMGD\")\n \n     // Hmm. !maySee here? Could happen if maySee is set to false for Everyone, but true for\n     // trust-level >= 1. That'd mean only people who have signed up already, may see this website.\n@@ -471,16 +506,29 @@ object Authz {\n         return mayWhat\n     }\n \n+\n+    // ----- Check categories\n+\n     // Skip the root category, cannot set permissions on it. [0YWKG21]\n-    if (categoriesRootLast.nonEmpty) for (category <- categoriesRootLast.reverseIterator.drop(1)) {\n-      // What if one permission says Some(yes) and another says Some(no), then, may or may not?\n-      // Currently there's either Some(yes) or None, only, though. Some(no) = not impl [2LG5F04W]\n-      for (p <- relevantPermissions; if p.onCategoryId.is(category.id)) {\n-        mayWhat = mayWhat.addRemovePermissions(p, \"EdMCATLOOP\")\n+    val catsRootFirst = catsRootLast.reverseIterator\n+    val catsBaseFirst = catsRootFirst.drop(1)\n+    var anyCatMayWhat: Opt[MayWhat] = None\n+\n+    for (category <- catsBaseFirst) {\n+      // Start with a fresh MayWhat here — if pat doesn't somehow have\n+      // a permission to see this exact category, hen cannot see it, and none\n+      // of its sub categories (if any).  [see_sub_cat]\n+      var mayWhatThisCat = MayPerhapsSee\n+\n+      // What if one permission says Some(yes), another says Some(no), then, may, or not?\n+      // Currently only Some(yes) or None.  Some(no) not impl [2LG5F04W]\n+      val relPermsThisCat = relevantPermissions.filter(_.onCategoryId.is(category.id))\n+      for (p <- relPermsThisCat) {\n+        mayWhatThisCat = mayWhatThisCat.addPermissions(p, \"EdMMSEEADDCATPERM\")\n       }\n \n       if (category.isDeleted) {\n-        isDeleted = true\n+        isPageOrCatDeleted = true\n         if (!isStaff)\n           return MayWhat.mayNotSee(\"TyECATDELD_\")\n       }\n@@ -489,21 +537,34 @@ object Authz {\n       // sometimes not listed.)\n       // [BACKW_COMPAT_PERMS] should remove !isStaff but first need to update some e2e tests.\n       if (!isStaff && !maySeeUnlisted && category.unlistCategory)\n-        return MayWhat.mayNotSee(\"EdE6WKQ0-Unlisted\")\n+        return MayWhat.mayNotSee(\"TyE6WKC0-Unlisted\")\n \n-      // Abort if we may not see this category, or if we don't know.\n-      if (mayWhat.maySee isNot true) {\n+      // Abort if we may not see this category — also if maySee is None;\n+      // that'd mean no permissions have been granted to pat on this category,\n+      // then, pat may not see it, or any sub cat.  [see_sub_cat]\n+      if (mayWhatThisCat.maySee isNot true) {\n         // But maySeeOwn=true has precedence over maySee=false.\n-        if (isOwnPage && mayWhat.maySeeOwn) {\n+        if (isOwnPage && mayWhatThisCat.maySeeOwn) {\n           // Fine, continue.\n         }\n         else\n-          return mayWhat\n+          return mayWhatThisCat\n       }\n+      anyCatMayWhat = Some(mayWhatThisCat)\n+    }\n+\n+    // Only merge with the permissions set directly on the category the page is in.\n+    // This means it's possible to let people post topics in a sub cat,\n+    // although they may not post topics in the base cat.\n+    // (However if they cannot *see* the base cat, then they cannot access any\n+    // sub cat at all [see_sub_cat].\n+    anyCatMayWhat foreach { catMayWhat =>\n+      mayWhat = mayWhat.mergeYes(catMayWhat, \"TyMMSEEMRGCATPRM\")\n     }\n \n-    // Do this first here, so the is-deleted changes won't get overwritten in later loop laps above.\n-    if (isDeleted) {\n+    // Do first here, so is-deleted mayWhat fields won't get overwritten\n+    // in the cat loop above.\n+    if (isPageOrCatDeleted) {\n       mayWhat = mayWhat.copyAsDeleted\n     }\n \n@@ -515,46 +576,92 @@ object Authz {\n \n /**\n   * If maySeeOwn=true, then one may see one's own stuff, even if maySee=false.\n+  * If maySeePagesOneIsMembOf=true, then one may see pages one has been added to,\n+  *      even if maySee=false.\n+  * if mayListUnlistedCat, one get to see a list of topics in the category,\n+  *      also if the category is unlisted.\n+  * if mayListUnlistedPages, one get to list pages that are otherwise unlisted.\n+  *\n+  * if maySeeSubCatsThatAllow, then, even if pat may not see this cat,\n+  * hen can still se sub cats that are configured to let pat see them.\n+  * And maybe reply and create topics in such sub cats,  [see_sub_cat]\n+  * depending on their permission settings.\n+  * But by default, if pat cannot see the base cat, then pat cannot see any sub cat,\n+  * regardless of how the sub cats have been configured.\n+  * Because it'd be unexpected if an admin moved a Cat C into a Staff-Only cat,\n+  * and then topics in Cat C stayed publicly visible. Better by default \"inherit\"\n+  * the base cat's more restrictive cannot-be-seen behavior.\n+  * Don't implement  maySeeSubCatsThatAllow  unless really needed!\n   */\n case class MayWhat(\n-  mayEditPage: Boolean = false,\n-  mayEditComment: Boolean = false,\n-  mayEditWiki: Boolean = false,\n-  mayEditOwn: Boolean = false,\n-  mayDeletePage: Boolean = false,\n-  mayDeleteComment: Boolean = false,\n-  mayCreatePage: Boolean = false,\n-  mayPostComment: Boolean = false,\n-  maySee: Option[Boolean] = None,\n-  maySeeOwn: Boolean = false,\n-  debugCode: String = \"\") {\n+  mayEditPage: Bo = false,\n+  mayEditComment: Bo = false,\n+  mayEditWiki: Bo = false,\n+  mayEditOwn: Bo = false,\n+  mayDeletePage: Bo = false,\n+  mayDeleteComment: Bo = false,\n+  mayCreatePage: Bo = false,\n+  mayPostComment: Bo = false,\n+  maySee: Opt[Bo] = None,\n+  maySeeOwn: Bo = false,\n+  // maySeePagesOneIsMembOf: Bo = false\n+  // mayListUnlistedCat\n+  // mayListUnlistedPages   [maySeeUnlisted]\n+  // maySeeSubCatsThatAllow\n+  debugCode: St = \"\") {\n \n   require(maySee.isNot(false) || (!mayEditPage && !mayEditComment && !mayEditWiki &&\n-      !mayDeletePage && !mayDeleteComment && !mayCreatePage && !mayPostComment), \"EdE2WKB5FD\")\n-\n-  def addRemovePermissions(permissions: PermsOnPages, debugCode: String) = MayWhat(\n-    mayEditPage = permissions.mayEditPage.getOrElse(mayEditPage),\n-    mayEditComment = permissions.mayEditComment.getOrElse(mayEditComment),\n-    mayEditWiki = permissions.mayEditWiki.getOrElse(mayEditWiki),\n-    mayEditOwn = permissions.mayEditOwn.getOrElse(mayEditOwn),\n-    mayDeletePage = permissions.mayDeletePage.getOrElse(mayDeletePage),\n-    mayDeleteComment = permissions.mayDeleteComment.getOrElse(mayDeleteComment),\n-    mayCreatePage = permissions.mayCreatePage.getOrElse(mayCreatePage),\n-    mayPostComment = permissions.mayPostComment.getOrElse(mayPostComment),\n-    maySee = permissions.maySee.orElse(maySee),\n-    maySeeOwn = permissions.maySeeOwn.getOrElse(maySeeOwn),\n-    debugCode)\n-\n-  def copyWithMaySeeAndReply(debugCode: String): MayWhat = copy(\n-    mayPostComment = true,\n-    maySee = Some(true),\n-    debugCode = debugCode)\n-\n-  def copyWithMaySeeReplyEdit(debugCode: String): MayWhat = copy(\n-    mayEditPage = true,\n-    mayPostComment = true,\n-    maySee = Some(true),\n-    debugCode = debugCode)\n+        !mayDeletePage && !mayDeleteComment && !mayCreatePage && !mayPostComment),\n+        \"TyE2WKB5FD\")\n+\n+  def addPermissions(perms: PermsOnPages, debugCode: St): MayWhat = {\n+    // Currently there's only:  None  or  Some(true)  but no Some(false),  [2LG5F04W]\n+    // so we're *adding* permissions, only  — the getOrElse below cannot\n+    // change the maySomething to false.\n+    // Later: If any permission is Some(false), then, that has precedence\n+    // over everything else (except for being admin)  ?  [may_not_perms]\n+    dieIf(com.debiki.core.isDevOrTest && (\n+          perms.mayEditPage.is(false) ||\n+          perms.mayEditComment.is(false) ||\n+          perms.mayEditWiki.is(false) ||\n+          perms.mayEditOwn.is(false) ||\n+          perms.mayDeletePage.is(false) ||\n+          perms.mayDeleteComment.is(false) ||\n+          perms.mayCreatePage.is(false) ||\n+          perms.mayPostComment.is(false) ||\n+          perms.maySee.is(false) ||\n+          perms.maySeeOwn.is(false)), \"TyE502MSKP5\", s\"Weird perms: $perms\")\n+\n+    MayWhat(\n+          mayEditPage = perms.mayEditPage.getOrElse(mayEditPage),\n+          mayEditComment = perms.mayEditComment.getOrElse(mayEditComment),\n+          mayEditWiki = perms.mayEditWiki.getOrElse(mayEditWiki),\n+          mayEditOwn = perms.mayEditOwn.getOrElse(mayEditOwn),\n+          mayDeletePage = perms.mayDeletePage.getOrElse(mayDeletePage),\n+          mayDeleteComment = perms.mayDeleteComment.getOrElse(mayDeleteComment),\n+          mayCreatePage = perms.mayCreatePage.getOrElse(mayCreatePage),\n+          mayPostComment = perms.mayPostComment.getOrElse(mayPostComment),\n+          maySee = perms.maySee.orElse(maySee),\n+          maySeeOwn = perms.maySeeOwn.getOrElse(maySeeOwn),\n+          debugCode = s\"${this.debugCode}-$debugCode\")\n+    }\n+\n+  def mergeYes(other: MayWhat, debugCode: St): MayWhat = {\n+    // Currently all perms are additive: Yes or absent (implicit No).  [may_not_perms]\n+    MayWhat(\n+          mayEditPage = other.mayEditPage || mayEditPage,\n+          mayEditComment = other.mayEditComment || mayEditComment,\n+          mayEditWiki = other.mayEditWiki || mayEditWiki,\n+          mayEditOwn = other.mayEditOwn || mayEditOwn,\n+          mayDeletePage = other.mayDeletePage || mayDeletePage,\n+          mayDeleteComment = other.mayDeleteComment || mayDeleteComment,\n+          mayCreatePage = other.mayCreatePage || mayCreatePage,\n+          mayPostComment = other.mayPostComment || mayPostComment,\n+          maySee = PermsOnPages.merge(other.maySee, maySee),\n+          maySeeOwn = other.maySeeOwn || maySeeOwn,\n+          debugCode = s\"${this.debugCode}-${other.debugCode}-$debugCode\")\n+  }\n+\n \n   /** Copies this MayWhat to permissions = those for a deleted page (mostly may-do-nothing).\n     **/\n@@ -578,7 +685,7 @@ object MayWhat {\n     mayDeletePage = true, mayDeleteComment = true, mayCreatePage = true,\n     mayPostComment = true, maySee = Some(true), maySeeOwn = true, \"EdMMALL\")\n \n-  def mayNotSee(debugCode: String) = MayWhat(\n+  def mayNotSee(debugCode: St): MayWhat = MayWhat(\n     mayEditPage = false, mayEditComment = false, mayEditWiki = false, mayEditOwn = false,\n     mayDeletePage = false, mayDeleteComment = false, mayCreatePage = false,\n     mayPostComment = false, maySee = Some(false), maySeeOwn = false, debugCode)"
    },
    {
      "sha": "218004786af43a137c609940fc01aec678c7b500",
      "filename": "app/ed/server/security/package.scala",
      "status": "modified",
      "additions": 25,
      "deletions": 9,
      "changes": 34,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/app/ed/server/security/package.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/app/ed/server/security/package.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/ed/server/security/package.scala?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -328,15 +328,16 @@ class EdSecurity(globals: Globals) {\n     val expireIdleAfterMillis: Long = expireIdleAfterMins * MillisPerMinute\n \n     // If we cannot use cookies, then the sid is sent in a header. [NOCOOKIES]\n-    val anySessionIdCookieValue =\n-      urlDecodeCookie(SessionIdCookieName, request) orElse request.headers.get(SessionIdHeaderName)\n+    val anySessionIdCookieValue: Opt[St] = urlDecodeCookie(SessionIdCookieName, request)\n+    val anySessionId: Opt[St] =\n+          anySessionIdCookieValue orElse request.headers.get(SessionIdHeaderName)\n \n     val now = globals.now()\n \n     val sessionIdStatus: SidStatus =\n-      anySessionIdCookieValue.map(\n-        checkSessionId(\n-          siteId, _, now, expireIdleAfterMillis = expireIdleAfterMillis)) getOrElse SidAbsent\n+          anySessionId.map(\n+            checkSessionId(siteId, _, now, expireIdleAfterMillis = expireIdleAfterMillis)\n+            ) getOrElse SidAbsent\n \n     // On GET requests, simply accept the value of the xsrf cookie.\n     // (On POST requests, however, we check the xsrf form input value)\n@@ -409,7 +410,9 @@ class EdSecurity(globals: Globals) {\n         val xsrfOk = {\n           val xsrfStatus =\n             checkXsrfToken(\n-              xsrfToken, anyXsrfCookieValue, now, expireIdleAfterMillis = expireIdleAfterMillis)\n+              xsrfToken, anyXsrfCookieValue,\n+              thereIsASidCookie = anySessionIdCookieValue.isDefined,\n+              now, expireIdleAfterMillis = expireIdleAfterMillis)\n \n           def helpText(theProblem: String, nowHaveOrWillGet: String): String = i\"\"\"\n             |Security issue: $theProblem. Please try again:\n@@ -569,12 +572,12 @@ class EdSecurity(globals: Globals) {\n \n \n \n-  private def checkXsrfToken(xsrfToken: String, anyXsrfCookieValue: Option[String],\n-      now: When, expireIdleAfterMillis: Long): XsrfStatus = {\n+  private def checkXsrfToken(xsrfToken: St, anyXsrfCookieValue: Opt[St],\n+        thereIsASidCookie: Bo, now: When, expireIdleAfterMillis: i64): XsrfStatus = {\n     SECURITY; TESTS_MISSING // that tests if the wrong hashes are rejected\n \n     // Check matches cookie, or that there's an ok crypto hash.\n-    var xsrfOk: XsrfOk = anyXsrfCookieValue match {\n+    val xsrfOk: XsrfOk = anyXsrfCookieValue match {\n       case Some(xsrfCookieValue) =>\n         // The Double Submit Cookie pattern [4AW2J7], usually also the Custom Request Header pattern, see:\n         // https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)_Prevention_Cheat_Sheet\n@@ -586,7 +589,20 @@ class EdSecurity(globals: Globals) {\n         }\n         XsrfOk(xsrfToken)\n       case None =>\n+        // If the browser could send a session id cookie, it can also send a xsrf cookie?\n+        dieIf(Globals.isDevOrTest && thereIsASidCookie, \"TyESID0XTKN\",\n+            \"Got a sid cookie but no xsrf cookie, weird\")\n+\n         // The Encrypted Token Pattern, usually also the Custom Request Header pattern.\n+        //\n+        // This is actually not needed, if !thereIsASidCookie, because then xsrf\n+        // requests aren't possible (since no automatic credentials were included).\n+        // (If using HTTP Basic Auth or Digest Auth, the browser would include such\n+        // credentials, just like cookies, right. But Ty doesn't use those auth\n+        // methods.)\n+        // Do this check anyway, also if !thereIsASidCookie  (can be used for\n+        // rate limiting, if nothing else?).\n+        //\n         val hashIndex: Int = xsrfToken.length - HashLength\n         if (hashIndex < 1) {\n           return XsrfBad"
    },
    {
      "sha": "2de28f5e7b27a8b628fe885455b2620507e1a29b",
      "filename": "app/talkyard/server/api/GetController.scala",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/app/talkyard/server/api/GetController.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/app/talkyard/server/api/GetController.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/talkyard/server/api/GetController.scala?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -97,7 +97,7 @@ class GetController @Inject()(cc: ControllerComponents, edContext: EdContext)\n                   user = authzCtx.requester,\n                   groupIds = authzCtx.groupIdsUserIdFirst,\n                   pageMembers = Set.empty, // getAnyPrivateGroupTalkMembers(page.meta),\n-                  categoriesRootLast = categories,\n+                  catsRootLast = categories,\n                   tooManyPermissions = authzCtx.tooManyPermissions,\n                   // Embedded discussion topics are typically unlisted.\n                   maySeeUnlisted = true)"
    },
    {
      "sha": "8b5c6eba27538092ac5d594d29ada66f3e5f2fdc",
      "filename": "client/app-editor/editor/editor.editor.ts",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/client/app-editor/editor/editor.editor.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/client/app-editor/editor/editor.editor.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-editor/editor/editor.editor.ts?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -433,9 +433,15 @@ export const Editor = createFactory<any, EditorState>({\n     // Makes sense now with the in-page message preview.\n     //\n     dieIf(files.length != 1, 'EsE5GPY82');\n+\n+    const headers = { 'X-XSRF-TOKEN': getSetCookie('XSRF-TOKEN') };\n+    // For embedded comments, need to incl the session id in a header,\n+    // since browsers block cookies (tracking prevention features).\n+    Server.addAnyNoCookieHeaders(headers);\n+\n     FileAPI.upload({   // a bit dupl code [2UK503]\n       url: '/-/upload-public-file',\n-      headers: { 'X-XSRF-TOKEN': getSetCookie('XSRF-TOKEN') },\n+      headers,\n       files: { file: files },\n       // This is per file.\n       fileprogress: (event, file, xhr, options) => {"
    },
    {
      "sha": "24fe3542b624d4ebbb650d518a49e36ef1053553",
      "filename": "client/app-more/forum/create-category-dialog.more.ts",
      "status": "modified",
      "additions": 101,
      "deletions": 47,
      "changes": 148,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/client/app-more/forum/create-category-dialog.more.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/client/app-more/forum/create-category-dialog.more.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-more/forum/create-category-dialog.more.ts?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -53,14 +53,36 @@ export function getEditCategoryDialog(success: (dialog) => void) {\n }\n \n \n+interface EditCatDiagState {\n+  store?: Store;\n+  isOpen: Bo;\n+  isLoading?: Bo;\n+  isCreatingCat?: Bo,\n+  isSaving?: Bo;\n+  onSaved?;\n+  defaultTopicType: PageRole;\n+  categoryId?: CategoryId;\n+  originalSlug?: St;                // CLEAN_UP remove, ...\n+  category?: CategoryPatch;\n+  catBefEdits?: CategoryPatch;      // <— use this instead\n+  permissions?: PermsOnPage[];\n+  groups?;\n+  canChangeDefault?: Bo;\n+}\n+\n+\n const EditCategoryDialog = createClassAndFactory({\n   displayName: 'EditCategoryDialog',\n \n   getInitialState: function () {\n     return {\n       isOpen: false,\n       defaultTopicType: PageRole.Discussion,\n-    };\n+    } as EditCatDiagState;\n+  },\n+\n+  componentWillUnmount: function() {\n+    this.isGone = true;\n   },\n \n   open: function(categoryId: number, onSaved: (r: SaveCategoryResponse) => void) {\n@@ -71,9 +93,9 @@ const EditCategoryDialog = createClassAndFactory({\n       isOpen: true,\n       isLoading: !!categoryId,\n       isSaving: false,\n-      isCreating: !categoryId,\n+      isCreatingCat: !categoryId,\n       onSaved,\n-    });\n+    } as EditCatDiagState);\n \n     // @ifdef DEBUG\n     // The current page is the forum contents index page — and its parent\n@@ -85,6 +107,7 @@ const EditCategoryDialog = createClassAndFactory({\n \n     if (categoryId) {\n       Server.loadCategory(categoryId, (response: LoadCategoryResponse) => {\n+        if (this.isGone) return;\n         const category: CategoryPatch = response.category;\n         // @ifdef DEBUG\n         dieIf(category.id !== categoryId, 'TyE502KJDT02');\n@@ -98,18 +121,20 @@ const EditCategoryDialog = createClassAndFactory({\n \n         this.setState({\n           isLoading: false,\n-          isCreatingNewCategory: false,\n-          originalSlug: category.slug,\n+          isCreatingCat: false,\n+          originalSlug: category.slug,   // CLEAN_UP remove\n+          catBefEdits: { ...category },\n           category,\n           permissions: response.permissions,\n           groups: response.groups,\n           canChangeDefault: !category.isDefaultCategory || false,\n-        });\n+        } as EditCatDiagState);\n       });\n     }\n     else {\n       const categoryId = -1; // then the server will give it a >= 1 id  [4GKWSR1]\n       Server.loadGroups((groups: Group[]) => {\n+        if (this.isGone) return;\n         const newCategory: CategoryPatch = {\n           id: categoryId,\n           extId: '',\n@@ -126,34 +151,36 @@ const EditCategoryDialog = createClassAndFactory({\n           includeInSummaries: IncludeInSummaries.Default,\n         };\n         this.setState({\n-          isCreatingNewCategory: true,\n+          isCreatingCat: true,\n           canChangeDefault: true,\n           category: newCategory,\n           groups: groups,\n           permissions: [\n             defaultPermsOnPages(-11, Groups.EveryoneId, categoryId, false),\n             defaultPermsOnPages(-12, Groups.FullMembersId, categoryId, false),\n             defaultPermsOnPages(-13, Groups.StaffId, categoryId, true)],\n-        });\n+        } as EditCatDiagState);\n       });\n     }\n   },\n \n   close: function() {\n     this.setState({\n       category: undefined,\n+      catBefEdits: undefined,\n       isOpen: false,\n       isSaving: false,\n       isLoading: false,\n-      isCreating: undefined,\n+      isCreatingCat: false,\n       store: null,\n       onSaved: null,\n-    });\n+    } as EditCatDiagState);\n   },\n \n   save: function() {\n     this.setState({ isSaving: true });\n     const stateCat: Category = this.state.category;\n+\n     function falseToUndef(permissions: PermsOnPage[]) {\n       const ps = _.clone(permissions);\n       _.each(ps, (p: PermsOnPage) => {\n@@ -177,21 +204,26 @@ const EditCategoryDialog = createClassAndFactory({\n     //const isChangingSlug = this.state.originalSlug !== category.slug;\n     ReactActions.saveCategory(stateCat, falseToUndef(this.state.permissions),\n           (response: SaveCategoryResponse) => {\n-      if (this.state.onSaved) {\n-        this.state.onSaved(response);\n+      const state: EditCatDiagState = this.state;\n+      if (state.onSaved) {\n+        state.onSaved(response);\n       }\n+      if (this.isGone) return;\n       this.close();\n     }, () => {\n       // If error.\n-      this.setState({ isSaving: false });\n+      this.setState({ isSaving: false } as EditCatDiagState);\n     });\n   },\n \n   deleteCategory: function() {\n-    const category: Category = this.state.category;\n-    dieIf(category.isDefaultCategory, \"This is the default category, cannot delete it [TyEDELDFCAT]\");\n-    ReactActions.deleteCategory(this.state.categoryId, () => {\n-      const deletedCategory = { ...this.state.category, isDeleted: true  };\n+    const state: EditCatDiagState = this.state;\n+    const category: Category = state.category;\n+    dieIf(category.isDefaultCategory,\n+          \"This is the default category, cannot delete it [TyEDELDFCAT]\");\n+    ReactActions.deleteCategory(state.categoryId, () => {\n+      if (this.isGone) return;\n+      const deletedCategory = { ...state.category, isDeleted: true  };\n       this.setState({ category: deletedCategory });\n       util.openDefaultStupidDialog({\n         body: \"Category deleted. You can undo, by clicking Undelete.\",\n@@ -201,8 +233,11 @@ const EditCategoryDialog = createClassAndFactory({\n   },\n \n   undeleteCategory: function() {\n-    ReactActions.undeleteCategory(this.state.categoryId, () => {\n-      const restoredCategory = { ...this.state.category, isDeleted: false };\n+    const state: EditCatDiagState = this.state;\n+    ReactActions.undeleteCategory(state.categoryId, () => {\n+      if (this.isGone) return;\n+      const state: EditCatDiagState = this.state;\n+      const restoredCategory = { ...state.category, isDeleted: false };\n       this.setState({ category: restoredCategory });\n       util.openDefaultStupidDialog({\n         body: \"Done, category undeleted. It is back again.\",\n@@ -212,8 +247,9 @@ const EditCategoryDialog = createClassAndFactory({\n   },\n \n   updateCategory: function(updatedCategory) {\n+    const state: EditCatDiagState = this.state;\n     this.setState({\n-      category: { ...this.state.category, ...updatedCategory }\n+      category: { ...state.category, ...updatedCategory }\n     });\n   },\n \n@@ -222,34 +258,37 @@ const EditCategoryDialog = createClassAndFactory({\n   },\n \n   render: function() {\n-    const body = !this.state.isOpen ? null : (this.state.isLoading\n+    const state: EditCatDiagState = this.state;\n+    const body = !state.isOpen ? null : (state.isLoading\n       ? r.div({}, \"Loading...\")\n       : rb.Tabs({ defaultActiveKey: 1, id: 't_CD_Tabs' },\n           rb.Tab({ eventKey: 1, title: \"Settings\", className: 's_CD_Tabs_Stn' },\n-            CategorySettings({ ...this.state, updateCategory: this.updateCategory,\n+            CatSettings({ ...state, updateCategory: this.updateCategory,\n                 deleteCategory: this.deleteCategory, undeleteCategory: this.undeleteCategory })),\n           rb.Tab({ eventKey: 2, title: \"Security\", className: 's_CD_Tabs_Sec' },\n-            CategorySecurity({ ...this.state, updatePermissions: this.updatePermissions }))));\n+            CatSecurity({ ...state, updatePermissions: this.updatePermissions }))));\n \n-    const saveButtonTitle = this.state.isCreating ? \"Create Category\" : \"Save Edits\";\n-    const dialogTitle = this.state.isCreating ? saveButtonTitle : \"Edit Category\";\n+    const saveButtonTitle = state.isCreatingCat ? \"Create Category\" : \"Save Edits\";\n+    const dialogTitle = state.isCreatingCat ? saveButtonTitle :\n+            rFr({}, \"Edit Category: \", r.i({}, state.catBefEdits?.name));\n \n-    const perms: PermsOnPage[] = this.state.permissions || [];\n+    const perms: PermsOnPage[] = state.permissions || [];\n     const uninitedPerm = _.find(perms, (p: PermsOnPage) =>  {\n       return p.forPeopleId < Groups.EveryoneId;\n     });\n \n     const canSave = !uninitedPerm;\n \n-    const saveCancel = !this.state.isOpen ? null : (this.state.isSaving\n+    const saveCancel = !state.isOpen ? null : (state.isSaving\n       ? r.div({}, \"Saving...\")\n       : r.div({},\n         PrimaryButton({ onClick: this.save, id: 'e2eSaveCatB', disabled: !canSave },\n           saveButtonTitle),\n         Button({ onClick: this.close, className: 'e_CancelCatB' }, \"Cancel\")));\n \n     return (\n-      Modal({ show: this.state.isOpen, onHide: this.close, dialogClassName: 'esCatDlg s_CD' },\n+      Modal({ show: state.isOpen, onHide: this.close,\n+          dialogClassName: 'esCatDlg s_CD' },\n         ModalHeader({}, ModalTitle({}, dialogTitle)),\n         ModalBody({}, body),\n         ModalFooter({}, saveCancel)));\n@@ -258,15 +297,15 @@ const EditCategoryDialog = createClassAndFactory({\n \n \n \n-const CategorySettings = createClassAndFactory({\n-  displayName: 'CategorySettings',\n+const CatSettings = createClassAndFactory({\n+  displayName: 'CatSettings',\n \n   onNameChanged: function(event) {\n     const editedName = event.target.value;\n     const editedFields: any = { name: editedName };\n     // If this is a new category, it's okay to change the slug. Otherwise, avoid changing it,\n     // because it'd break external links to the category.\n-    if (this.props.isCreating) {\n+    if (this.props.isCreatingCat) {\n       editedFields.slug = window['debikiSlugify'](editedName);\n     }\n     this.props.updateCategory(editedFields);\n@@ -303,7 +342,7 @@ const CategorySettings = createClassAndFactory({\n   render: function () {\n     const store: Store = this.props.store;\n     const settings: SettingsVisibleClientSide = store.settings;\n-    const page: Page = store.currentPage;\n+    const sectPage: Page = store.currentPage;\n     const category: CategoryPatch = this.props.category;\n     if (!category)\n       return null;\n@@ -313,7 +352,7 @@ const CategorySettings = createClassAndFactory({\n             value: category.name, onChange: this.onNameChanged,\n             help: \"Keep it short, only one word, if possible.\" });\n \n-    const editDescriptionLink = this.props.isCreatingNewCategory ? null :\n+    const editDescriptionLink = this.props.isCreatingCat ? null :\n       r.div({ className: 'form-group' },\n         r.label({ className: 'control-label' }, \"Description\"),\n         r.div({},\n@@ -324,28 +363,37 @@ const CategorySettings = createClassAndFactory({\n \n     const defaultTopicTypeInput =\n       r.div({ className: 'form-group' },\n-        r.label({ className: 'control-label', style: { display: 'block' }}, \"Default topic type\"),\n-        PageRoleDropdown({ store: store, pageRole: category.defaultTopicType,\n+        r.label({ className: 'control-label', style: { display: 'block' }},\n+          \"Default topic type\"),\n+        PageRoleDropdown({ store, pageRole: category.defaultTopicType,\n           complicated: store.settings.showExperimental, hideStaffOnly: true,\n           onSelect: this.setDefaultTopicType,\n           title: 'Topic type', className: 'esEdtr_titleEtc_pageRole', pullLeft: true }),\n         r.span({ className: 'help-block' },\n           \"New topics in this category will be of this type, by default.\"));\n \n-    // Try out sub cats at Ty.io.\n-    const parentCatDropdown = !(eds.isTestSite || eds.siteId === 3) ? null :\n+    const rootCatId = sectPage.categoryId;\n+    const parentCatDropdown =\n         r.div({ className: 'form-group' },\n-          r.label({ className: 'control-label', style: { display: 'block' }}, \"Parent category\"),\n-          SelectCategoryDropdown({ className: 'esEdtr_titleEtc_category', store: store,\n+          r.label({ className: 'control-label', style: { display: 'block' }},\n+            \"Parent category\"),\n+          SelectCategoryDropdown({ className: 'esEdtr_titleEtc_category', store,\n               categories: store.currentCategories,\n               selectedCategoryId: category.parentId,\n+              // Root cats aren't incl in the json, so if this is a base cat, then,\n+              // its parent cat, i.e. a root cat, is absent.  [incl_root_cat]\n               catAbsentMeansNone: true,\n               onlyBaseCats: true,\n               onCategorySelected: (newParentCatId: CategoryId) =>\n                 this.props.updateCategory({ parentId: newParentCatId })\n               }),\n-        r.span({ className: 'help-block' },\n-          \"If you want this category to be a sub category.\"));\n+          // Is there a better text and symbol, than a \"Clear\" button?\n+          category.parentId === rootCatId ? null : Button({\n+              className: 's_CD_0SubCat', onClick: () => {\n+            this.props.updateCategory({ parentId: rootCatId });\n+          }}, \"Clear\"),  // [TyTE2ECLRSUBCAT]\n+          r.span({ className: 'help-block' },\n+            \"If you want this category to be a sub category.\"));\n \n     const isDefaultInput =\n       Input({ type: 'checkbox', label: \"Set as default category\", id: 'e2eSetDefCat',\n@@ -363,7 +411,7 @@ const CategorySettings = createClassAndFactory({\n               help: r.div({ className: 'esCatDlg_slug_help' },\n                 \"Included in the computer address (URL) to this category. The address \" +\n                 \"would be: \",\n-                r.samp({}, location.origin + page.pagePath.value + RoutePathLatest + '/',\n+                r.samp({}, location.origin + sectPage.pagePath.value + RoutePathLatest + '/',\n                   r.span({ className: 'esCatDlg_slug_help_addr_slug' }, category.slug))) }));\n \n     let sortPositionText = \"Click to set sort position\";\n@@ -433,7 +481,7 @@ const CategorySettings = createClassAndFactory({\n \n     let anyUndeleteInfoAndButton;\n     let anyDeleteButton;\n-    if (this.props.isCreatingNewCategory) {\n+    if (this.props.isCreatingCat) {\n       // Then cannot delete it yet.\n     }\n     else if (category.isDeleted) {\n@@ -443,10 +491,13 @@ const CategorySettings = createClassAndFactory({\n             Button({ onClick: this.props.undeleteCategory, className: 's_CD_UndelB' }, \"Undelete\"));\n     }\n     else {\n+      const isDef = category.isDefaultCategory;\n       anyDeleteButton =\n         r.div({ className: 's_CD_Btns'},\n-          Button({ onClick: this.props.deleteCategory, className: 'icon-trash s_CD_DelB' },\n-            \"Delete category\"));\n+          Button({ onClick: this.props.deleteCategory, className: 'icon-trash s_CD_DelB',\n+              disabled: isDef },\n+            \"Delete category\"),   // 0I18N\n+          isDef ? r.span({ className: 'e_0Del' }, \" — cannot, is default\") : null);\n     }\n \n     return r.div({},\n@@ -493,8 +544,8 @@ function defaultPermsOnPages(newPermId: PermissionId, forWhoId: PeopleId,\n \n \n \n-const CategorySecurity = createClassAndFactory({\n-  displayName: 'CategorySecurity',\n+const CatSecurity = createClassAndFactory({\n+  displayName: 'CatSecurity',\n \n   addPermission: function() {\n     const category: Category = this.props.category;\n@@ -510,6 +561,9 @@ const CategorySecurity = createClassAndFactory({\n   },\n \n   render: function() {\n+    // If this is a base category, it could be nice if there was a way to get an\n+    // overview of all sub cat permissions.  [propagate_cat_perms]\n+\n     // Sorted by permission id server side [SORTCATPERMS].\n     const permissions: PermsOnPage[] = this.props.permissions;\n     if (!permissions)"
    },
    {
      "sha": "64957c8fae70aa95f7afd9cf2ac408fdc0c0485f",
      "filename": "client/app-more/login/login-dialog.more.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/client/app-more/login/login-dialog.more.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/client/app-more/login/login-dialog.more.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-more/login/login-dialog.more.ts?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -558,7 +558,7 @@ export const LoginDialogContent = createClassAndFactory({\n             // OpenID 1.0 since long gone, so skip:  icon-yahoo Yahoo!\n             )),\n \n-        isSignUp && !allowLocalSignup ? null : (\n+        isForFirstOwner || isSignUp && !allowLocalSignup ? null : (\n           r.p({ id: 'dw-lgi-or-login-using' },\n             anyOpenAuth\n               ? (isSignUp"
    },
    {
      "sha": "49583829463c669cacb30d82842d6a41d5640ef3",
      "filename": "client/app-slim/Server.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/client/app-slim/Server.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/client/app-slim/Server.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-slim/Server.ts?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -702,7 +702,7 @@ function get(uri: string, successFn: GetSuccessFn, errorFn?: GetErrorFn, options\n  * the browsers refuse to use cookies, e.g. Privacy Badger blocks cookies or iOS\n  * incorrectly thinks we're doing some kind of cross site tracking.\n  */\n-function addAnyNoCookieHeaders(headers: { [headerName: string]: string }) {  // [NOCOOKIES]\n+export function addAnyNoCookieHeaders(headers: { [headerName: string]: St }) {  // [NOCOOKIES]\n   const mainWin = getMainWin();\n \n   // @ifdef DEBUG"
    },
    {
      "sha": "0d7f70a99ecfa8192de97b059615620f930bc262",
      "filename": "client/app-slim/forum/forum.styl",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/client/app-slim/forum/forum.styl",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/client/app-slim/forum/forum.styl",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-slim/forum/forum.styl?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -764,6 +764,7 @@ $minOwnIconColumnDisplWidth = 900px;\n \n .DW .s_F_Cs_C_ChildCs_C\n   font-weight: bold;\n+  font-size: 16px;  // 14 is a bit small\n   white-space: nowrap;\n   // Move closer to list item disc.\n   position: relative;"
    },
    {
      "sha": "4fd55f97b037519dba4d399a3b824e9e7da881c2",
      "filename": "client/app-slim/print.styl",
      "status": "modified",
      "additions": 9,
      "deletions": 4,
      "changes": 13,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/client/app-slim/print.styl",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/client/app-slim/print.styl",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-slim/print.styl?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -24,16 +24,17 @@\n   //.edAvtr img\n   //  display: none;\n \n-  // Buttons cannot be clicked, on paper. Or at least clicking has no effect.\n+  // Buttons cannot be clicked, on paper. Or at least clicking has no effect\n+  // (unless you also say the magic word).\n+  #e_ViewCatsB,\n   button,\n   .s_OpReB,\n-  .dw-hide\n-    visibility: hidden;\n+  .dw-hide,\n+  .esForumIntro_btns\n     visibility: hidden;\n \n   .dw-a\n     display: none;\n-    visibility: hidden;\n \n   .dw-a.dw-vote-count\n     display: block;\n@@ -42,3 +43,7 @@\n   .s_T-Prvw,\n   .dw-page-notf-level\n     display: none;\n+\n+  // The login / username menu button.\n+  .s_Tb_MyBs\n+    display: none;"
    },
    {
      "sha": "6419a2c0aeb74255147196269b1d71a9da98cb8a",
      "filename": "client/app-staff/admin/hostname-editor.staff.ts",
      "status": "modified",
      "additions": 18,
      "deletions": 2,
      "changes": 20,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/client/app-staff/admin/hostname-editor.staff.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/client/app-staff/admin/hostname-editor.staff.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-staff/admin/hostname-editor.staff.ts?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -80,14 +80,29 @@ const HostnameEditorDialog = createComponent({\n             \"You need to add a CNAME entry to your domain name server that points to \",\n             // Make the talkyard.net domain & the @talkyard.io email addr below configurable? [CONFADDRS]\n             r.b({}, r.samp({}, \"c1.talkyard.net\"))),\n+          /*r.li({}, r.small({},\n+            \"(Remember to append a dot \", r.samp({}, '.'), \" when you add the \" +\n+            \"CNAME entry. Otherwise your name server will append \", r.i({}, \"your\"),\n+            \" domain name, resulting in something like: \",\n+            r.samp({}, \"c1.talkyard.net.your-domain.com\"), \")\")),  */\n+          r.li({},\n+            \"Check if the CNAME works: On \", r.b({}, \"Mac and Linux: \"),\n+            r.code({}, ' dig forum.your-domain.com ANY +short '),\n+            \". You can install Dig like so: \", r.code({}, \" brew install bind \"), \" or \",\n+            r.code({}, \" sudo apt install dnsutils \"), \". On \", r.b({}, \"Windows:\"),\n+            \" You can do something like: \",\n+            r.code({}, ' nslookup forum.your-domain.com '), '.', r.br(),\n+            \"Note that if you do a mistake, it can take hours until a fix takes \" +\n+            \"effect, if some name servers have cached the mistake.\"),\n           r.li({},\n             \"Don't delete the old CNAME — leave it as is. Later, you can click a certain \",\n             r.b({}, \"Redirect old addresses\"),  // dupl button name [5KFU2R0]\n             \" button to redirect visitors from the old address to the new.\"),\n           r.li({},\n             \"But before you redirect to the new address, email \", r.b({}, \"support@talkyard.io\"),\n             \" and say that you need a Let'sEncrypt https cert for your new custom domain \" +\n-            \"(this hasn't been automated yet).\")),\n+            \"(this hasn't been automated yet).\"),\n+            ),\n         r.p({}, \"If you use \", r.b({}, \"CloudFlare\"),\n           \", either 1) configure CloudFlare to send the traffic directly to \" +\n           \"Talkyard, bypassing CloudFlare, or 2) use Full SSL or Full SSL (Strict). \" +\n@@ -113,7 +128,8 @@ const HostnameEditorDialog = createComponent({\n           // the problems with bare domains, + hen must type a 3 letter \"password\" included\n           // in that info, to show that hen has really read it?\n           // COULD BUG harmless: Need to tweak this regex, for just 'localhost' to work, in dev mode?\n-          regexFour: /^[^\\.]+\\.([^\\.]+\\.[^\\.]+.*|localhost(\\..*)?)?$/, messageFour: \"Bare domains not allowed\",\n+          regexFour: /^[^\\.]+\\.([^\\.]+\\.[^\\.]+.*|localhost(\\..*)?)?$/,\n+              messageFour: \"Bare domains not allowed — prefix with 'www.' ?\",\n           lastRegex: /^(.+\\.)*[^\\.]+\\.[^\\.]{2,}$/, lastMessage: \"Should look like: forum.example.com\",\n           error: this.state.error, onChangeValueOk: this.onHostnameChanged }));\n "
    },
    {
      "sha": "8139fea7de4bc8230a677b8101b957e45bfcef22",
      "filename": "conf/routes",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/conf/routes",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/conf/routes",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/conf/routes?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -240,12 +240,11 @@ GET   /-/load-post-revisions    controllers.EditController.loadPostRevisions(pos\n \n POST  /-/start-private-group-talk controllers.GroupTalkController.sendMessage\n \n-GET   /-/_int_req/may-upload-file controllers.UploadsController.intReq_mayUploadFile(sizeBytes: Int)\n+GET   /-/_int_req/may-upload-file                         controllers.UploadsController.intReq_mayUploadFile(sizeBytes: Int)\n+GET   /-/_int_req/may-download-file/:pubSiteId/*hashPath  controllers.UploadsController.authUpload(pubSiteId, hashPath)\n POST  /-/upload-public-file     controllers.UploadsController.uploadPublicFile\n POST  /-/upload-avatar          controllers.UploadsController.uploadAvatar(userId: Int)\n POST  /-/remove-avatar          controllers.UploadsController.removeAvatar\n-# CLEAN_UP RENAME to auth-download? or auth-upload-download?\n-GET   /-/auth-upload/:publSiteId/*hashPath controllers.UploadsController.authUpload(publSiteId, hashPath)\n \n # CLEAN_UP remove, hardcode path in Globals instead?  [2KGLCQ4]\n GET   /-/u/*relativePath        controllers.UploadsController.servePublicFile(relativePath)"
    },
    {
      "sha": "a407e99bcbd8300d4b7c09b70f8a961e08d6b442",
      "filename": "docs/bem-blocks.txt",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/docs/bem-blocks.txt",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/docs/bem-blocks.txt",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/docs/bem-blocks.txt?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -97,7 +97,9 @@ Rw, Row = row, Col = column\n Sav = save\n Sch = Search\n Sm  = small (screen), also: Md, Lg, Xl\n-Sub = submit\n+Sub = \"sub\" as in \"sub category\"\n+Sub = submit NO, CLEAN_UP, insetad:\n+Sbm = submit\n Sz  = size\n Snz = Snooze\n T   = table"
    },
    {
      "sha": "c89064b92fd9139c424d39212767bbf9c3b1ef72",
      "filename": "docs/e2e-tests-map.txt",
      "status": "modified",
      "additions": 19,
      "deletions": 7,
      "changes": 26,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/docs/e2e-tests-map.txt",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/docs/e2e-tests-map.txt",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/docs/e2e-tests-map.txt?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -30,15 +30,17 @@ full text search:\n     found by admins:\n             navigation-as-admin.test.ts  TyT7WAAR2J4 TyT85WABR0\n     not found by non-staff:\n-            - api-search-full-text.test.ts  TyT60KTSJ35J\n+          - api-search-full-text.test.ts  TyT60KTSJ35J\n   custom groups private pages not found:\n-            - group-permissions-similar-topics.2browsers.test.ts  TyT05BMRSH2J\n+          - group-permissions-similar-topics.2browsers.test.ts  TyT05BMRSH2J\n   direct message,\n   private chat,\n   restricted category:\n-            - api-search-full-text.test.ts  TyT60KTSJ35J\n-  sub cat in restricted category:\n-            - TESTS_MISSING\n+          - api-search-full-text.test.ts  TyT60KTSJ35J\n+  sub cat in access restricted base category:\n+          - category-permissions.2br   TyTE2ECATPREMS01\n+  deleted cat:\n+          - categories-delete.2br   TyTE2ECATDEL01\n \n create site & forum -\n   create:  create-site-all-logins\n@@ -395,7 +397,8 @@ categories -\n   edit slug —> old name redirects to new:\n           - api-upsert-categories.2browsers.test.ts  TyT503KRDH24  (not impl)\n   unlist:\n-  delete -\n+  delete:\n+          - categories-delete.2br   TyTE2ECATDEL01\n     gets marked as deleted for staff:\n     hidden for non-staff:\n     topics hidden unless staff:\n@@ -406,17 +409,26 @@ categories -\n           - links-internal.2browsers.test.ts  TyTINTLNS54824.TyTDELCATBLNS\n   permissions:   see (1QRY7)  no? tag gone?\n           - promote-demote-by-staff-join-leave-chats.2br.test.ts  TyTE2E5H3GFRVK\n+          - link-previews-internal-may-not-see-cat.2br  TyTE2ELNPVIN4837.TyT0ACSPG043\n+    sub cats:\n+          - category-permissions.2br   TyTE2ECATPREMS01\n+          - TESTS_MISSING  link to access-denied sub category,  TyTE2ELNSUBCAT\n   upsert categories:  (upscats)\n   move topic to new category:\n           - link-previews-internal-may-not-see-cat.2br  TyTE2ELNPVIN4837.TyTMVPG2OTRCAT\n           - embcom.comment-counts.2br.cors.test.ts   TyTE2ECOMCOUNTS.TyTMVPG2CAT\n \n   sub categories:\n     create,\n-    move base cat to other cat so becomes sub cat,\n+    move base cat to other cat so becomes sub cat:\n+          - CategoriesDaoAppSpec.scala\n+          - category-permissions.2br   TyTE2ECATPREMS01\n     move sub cat to other base cat:\n           - CategoriesDaoAppSpec.scala\n           - TESTS_MISSING: UX tests   [TyTE2E305TMP24Z]\n+    permissions:\n+          - category-permissions.2br   TyTE2ECATPREMS01\n+          - TESTS_MISSING  link to access-denied sub category,  TyTE2ELNSUBCAT\n \n permissions -\n   category -"
    },
    {
      "sha": "619b6eb4bb39bc2fe55fee4bf3258397f2c8ef3e",
      "filename": "docs/maybe-do-later.txt",
      "status": "modified",
      "additions": 20,
      "deletions": 2,
      "changes": 22,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/docs/maybe-do-later.txt",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/docs/maybe-do-later.txt",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/docs/maybe-do-later.txt?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -31,10 +31,25 @@ https://www.typescriptlang.org/docs/handbook/interfaces.html#readonly-properties\n (React wants immutable.)\n \n [subcats]\n-Implement sub categories.\n+DONE: Implement sub categories.\n+\n+[propagate_cat_perms]\n+It'd be nice if there was a way to get an overview of sub cat permissions,\n+when looking at a base cat. And if one could propagate the base category's\n+permissions to all/some sub cats.\n+Also make this work for the root cat? So one can get an overview of permission\n+settings for *all* base cats and sub cats in the whole forum — a cat permissions\n+table-tree, somehow. [incl_root_cat]\n+\n+[may_not_perms]\n+Currently permissions are additive. Maybe, though, in some cases it'd be good\n+with \"negative\" permissions — e.g. a group that may Not something.\n+Then, everyone in that group, would be forbidden from doing that something,\n+regardless of how they inherited permissions from other groups.\n+\n \n [sw] [sse]\n-Service worker. Server sent events.\n+DONE: Service worker.  No, skip, using Websocket instead of:  Server sent events.\n \n [offline-first]\n Things to think about, if making Ty work offline.\n@@ -337,6 +352,9 @@ When composing a message, see who will get notified — e.g. if mentioning a gro\n or editing a message, can be unclar if a newly edit-added @username gets notified or not\n (they do get notified).\n \n+[power_admin]\n+Various fancy admin features, disabled by default.\n+\n [tiny-dialog]\n Find (or create?) a tiny modal dialog React class that can be included in slim-bundle.js,\n so can open error dialog also if couldn't load more-bundle.js from the server."
    },
    {
      "sha": "f38764be2d2831479f9a2fcf846f141f9889bab4",
      "filename": "docs/tyworld.adoc",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/docs/tyworld.adoc",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/docs/tyworld.adoc",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/docs/tyworld.adoc?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -95,3 +95,29 @@ People both in and outside the organization discuss something. These types:\n == Topic statuses\n \n \n+\n+\n+== Categories and permissions\n+\n+\n+=== Sub category permissions\n+\n+If moving a publicly visible category S to another category B, so that S becomes\n+a sub category of B, then, in Talkyard, category S won't be any more visible than B.\n+Anything else would be unexpected: People (incl I) assume that if base category B\n+is access restricted, then sub cats in B, are, they too.  `[see_sub_cat]`\n+\n+(Later, maybe maybe there could be a \"power admin\" feature to optionally allow access\n+to sub categories, although the base category is access restricted. [power_admin]\n+Let's say an organizaiton creates a category for a project, and invites external\n+collaborators to post questions and ideas in a sub category — but the org people\n+don't want the external people to see the base category.  But the people in the org\n+still think it's nice to have everything-related-to-the-project in the same category.\n+Or maybe this'd be better implemented as sub sub cats?\n+Proj Base Cat: { Proj Private: ...Private sub-sub cats, Proj Ext: ...pub sub-sub cats })\n+\n+Only may-Not-see is inherited in the category tree — other cat perms, e.g.\n+may-post-topics, are not inherited; instead, are configured per category.\n+Maybe it'd be nice if may-edit-wiki permissions got inherited?  Or if, when adding\n+a sub category, or editing the base category perms, one could apply the base\n+category settings to the sub cats  `[propagate_cat_perms]`  (instead of inheriting)."
    },
    {
      "sha": "a4a79a55bc25b3a7438487ea1db38bd4ae6a8608",
      "filename": "images/web/ed-lua/lua-limit-uploads/limit-uploads.lua",
      "status": "modified",
      "additions": 10,
      "deletions": 4,
      "changes": 14,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/images/web/ed-lua/lua-limit-uploads/limit-uploads.lua",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/images/web/ed-lua/lua-limit-uploads/limit-uploads.lua",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/images/web/ed-lua/lua-limit-uploads/limit-uploads.lua?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -43,10 +43,16 @@ local res, err = httpc:request({\n     path = \"/-/_int_req/may-upload-file\",\n     query = \"sizeBytes=\" .. content_length,\n     headers = {\n-        [\"Host\"] = host,  -- [ngx_host_hdr]\n-        [\"Cookie\"] = ngx.var.http_cookie,\n-        [\"X-Request-Id\"] = ngx.var.request_id,\n-        [\"X-Forwarded-For\"] = ngx.var.proxy_add_x_forwarded_for,\n+        ['Host'] = host,  -- [ngx_host_hdr]\n+        -- Sometimes cookies won't work (e.g. from inside embedded comments iframes,\n+        -- because of browser anti-tracking features). Then we use X-Ty- headers instead.\n+        ['Cookie'] = ngx.var.http_cookie,\n+        ['X-Ty-Avoid-Cookies'] = ngx.var.http_x_ty_avoid_cookies,\n+        ['X-Ty-Sid'] = ngx.var.http_x_ty_sid,\n+        ['X-Ty-Xsrf'] = ngx.var.http_x_ty_xsrf,\n+        ['X-XSRF-TOKEN'] = ngx.var.http_x_xsrf_token,\n+        ['X-Request-Id'] = ngx.var.request_id,\n+        ['X-Forwarded-For'] = ngx.var.proxy_add_x_forwarded_for,\n     },\n })\n "
    },
    {
      "sha": "11888118a90084a8eaa8085c5b483be734d559ad",
      "filename": "images/web/server-locations.conf",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/images/web/server-locations.conf",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/images/web/server-locations.conf",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/images/web/server-locations.conf?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -482,7 +482,7 @@ location ~ ^/-/u/(?<pubSiteId>[^/][^/]+)/(?<hashPath>.*)$ {  # location one  [6F\n location /_auth_upload/ {\n   # Only for Nginx subrequests.\n   internal;\n-  proxy_pass              http://app:9000/-/auth-upload/$pubSiteId/$hashPath;\n+  proxy_pass              http://app:9000/-/_int_req/may-download-file/$pubSiteId/$hashPath;\n   proxy_pass_request_body off;\n   proxy_set_header        Content-Length \"\";\n   proxy_set_header        X-Original-URI $request_uri;"
    },
    {
      "sha": "f1011aca5959da7de5222a3782a57b27262ea89e",
      "filename": "modules/ed-core/src/main/scala/com/debiki/core/permissions.scala",
      "status": "modified",
      "additions": 35,
      "deletions": 18,
      "changes": 53,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/modules/ed-core/src/main/scala/com/debiki/core/permissions.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/modules/ed-core/src/main/scala/com/debiki/core/permissions.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/modules/ed-core/src/main/scala/com/debiki/core/permissions.scala?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -80,33 +80,50 @@ case class PermsOnSite(\n   maxUploadSizeBytes: i32)\n \n \n+object PermsOnPages {\n+\n+  /** If any permission says No, then, no, not allowed. Otherwise, if any\n+    * permission says Yes, then, yes, allowed.\n+    */\n+  def merge(a: Opt[Bo], b: Opt[Bo]): Opt[Bo] = {\n+    // This:\n+    if (b.is(false)) b\n+    else a orElse b\n+    // ... is the same as:\n+    // if (a.is(false) || b.is(false)) Some(false)\n+    // else if (a.is(true) || b.is(true)) Some(true)\n+    // else None\n+  }\n+}\n+\n+\n /** If maySeeOwn is true, then one may see one's own stuff, even if maySee is false.\n   */\n case class PermsOnPages(  // [exp] ok use. Missing, fine: may_see_private_flagged\n   id: PermissionId,\n-  forPeopleId: UserId,\n-  onWholeSite: Option[Boolean] = None,\n-  onCategoryId: Option[Int] = None,\n-  onPageId: Option[PageId] = None,\n-  onPostId: Option[PostId] = None,\n-  onTagId: Option[TagLabelId] = None,\n-  mayEditPage: Option[Boolean] = None,\n-  mayEditComment: Option[Boolean] = None,\n-  mayEditWiki: Option[Boolean] = None,\n-  mayEditOwn: Option[Boolean] = None,\n-  mayDeletePage: Option[Boolean] = None,\n-  mayDeleteComment: Option[Boolean] = None,\n-  mayCreatePage: Option[Boolean] = None,\n-  mayPostComment: Option[Boolean] = None,\n-  maySee: Option[Boolean] = None,\n-  maySeeOwn: Option[Boolean] = None) {\n+  forPeopleId: PatId,\n+  onWholeSite: Opt[Bo] = None,\n+  onCategoryId: Opt[CatId] = None,\n+  onPageId: Opt[PageId] = None,\n+  onPostId: Opt[PostId] = None,\n+  onTagId: Opt[TagLabelId] = None,\n+  mayEditPage: Opt[Bo] = None,\n+  mayEditComment: Opt[Bo] = None,\n+  mayEditWiki: Opt[Bo] = None,\n+  mayEditOwn: Opt[Bo] = None,\n+  mayDeletePage: Opt[Bo] = None,\n+  mayDeleteComment: Opt[Bo] = None,\n+  mayCreatePage: Opt[Bo] = None,\n+  mayPostComment: Opt[Bo] = None,\n+  maySee: Opt[Bo] = None,\n+  maySeeOwn: Opt[Bo] = None) {\n \n   // maySeeIfEmbeddedAlthoughLoginRequired  [emb_login_req]\n   //  — for embedded comments categories, when site Login Required to Read enabled.\n \n-  // Can be nice for staff — and which other people? — to see unlisted categories\n+  // Can be nice for staff — and which other people? — to see unlisted categories\n   // and topics:\n-  // maySeeUnlistedTopics  ?\n+  // maySeeUnlistedTopics  ?   [maySeeUnlisted]\n \n   // Later, perhaps:\n   // pin/unpin"
    },
    {
      "sha": "d384c13757838031a6401a9b8e6653a008ab87a7",
      "filename": "modules/ed-versions",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/modules/ed-versions?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -1 +1 @@\n-Subproject commit 38c6d6b2dc97c86a013c593d26b439216db601dd\n+Subproject commit d384c13757838031a6401a9b8e6653a008ab87a7"
    },
    {
      "sha": "d384c13757838031a6401a9b8e6653a008ab87a7",
      "filename": "relchans/tyse-v0-dev",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/relchans/tyse-v0-dev?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -0,0 +1 @@\n+Subproject commit d384c13757838031a6401a9b8e6653a008ab87a7"
    },
    {
      "sha": "aaa8e527d41c2ebba3ac0dd4a98d451453f2dba7",
      "filename": "relchans/tyse-v0-regular",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/relchans/tyse-v0-regular?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -0,0 +1 @@\n+Subproject commit aaa8e527d41c2ebba3ac0dd4a98d451453f2dba7"
    },
    {
      "sha": "0f860426239cd8b7522768b1eeaf3cbc6dc2b88e",
      "filename": "s/release-canary.sh",
      "status": "modified",
      "additions": 41,
      "deletions": 25,
      "changes": 66,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/s/release-canary.sh",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/s/release-canary.sh",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/s/release-canary.sh?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -1,8 +1,10 @@\n #!/bin/bash\n \n git_lock_file='.git/modules/modules/ed-versions/index.lock'\n-versions_file='modules/ed-versions/version-tags.log'\n+versions_file='version-tags.log'\n \n+promote_from_chan='tyse-v0-dev'\n+promote_to_chan='tyse-v0-regular'   #  [.must_be_dev_regular]\n \n if [ -f $git_lock_file ]; then\n   echo\n@@ -28,8 +30,13 @@ read -s -p ''\n set -e\n \n # (Don't use <root>/version.txt — that's the *next* version, not yet released.)\n-old_versions=$(cat $versions_file)\n-wip_version_tag=$(echo \"$old_versions\" | tail -n1)\n+pushd .\n+cd relchans/$promote_from_chan\n+  git fetch origin $promote_from_chan\n+  git merge --ff-only origin/$promote_from_chan\n+  old_versions=$(cat $versions_file)\n+  wip_version_tag=$(echo \"$old_versions\" | tail -n1)\n+popd\n next_version=$(cat version.txt)\n \n if [ -z \"$( echo \"$wip_version_tag\" | grep 'WIP-' )\" ]; then\n@@ -40,6 +47,7 @@ fi\n release_version_tag=$( echo \"$wip_version_tag\" | sed -r -e 's/WIP-//' )\n \n \n+\n # Sanity check version numbers\n \n # version.txt should be newer than $wip_version_tag and\n@@ -71,9 +79,13 @@ fi\n \n \n \n-echo \"WIP version, canary released: $wip_version_tag\"\n-echo \"WIP once production released: $release_version_tag\"\n-echo \"      (Upcoming next version: $next_version)\"\n+echo \"Promote latest version from: $promote_from_chan\"\n+echo \"                         to: $promote_to_chan ?  [y/n] — yes always, currently\"\n+echo\n+\n+echo \"Latest version, to promote: $wip_version_tag   (in $promote_from_chan)\"\n+echo \"             Once promoted: $release_version_tag   (in $promote_to_chan)\"\n+echo \"    (Upcoming next version: $next_version)\"\n echo\n \n # dupl code [bashutils]\n@@ -128,32 +140,36 @@ read -s -p ''\n echo \"Publishing version tag $release_version_tag to GitHub...\"\n \n pushd .\n-cd modules/ed-versions/\n-git fetch\n-git checkout master\n-git merge --ff-only origin/master\n-echo $release_version_tag >> version-tags.log\n-# The tag: edition (tyse), version and channel (regular).\n-release_version_tag_w_ed_chan=\"tyse-$release_version_tag-regular\"\n-git add version-tags.log\n-git commit -m \"Release $release_version_tag_w_ed_chan.\"\n-git branch -f tyse-v0-regular\n-# 'master' is for backw compat. Don't incl in v1. [ty_v1]\n-git push origin master tyse-v0-regular\n+cd relchans/$promote_to_chan\n+  git fetch origin $promote_to_chan\n+  git merge --ff-only origin/$promote_to_chan\n+  echo \"$release_version_tag\" >> $versions_file\n+  # The tag: edition (tyse), version and channel (regular).  [.must_be_dev_regular]\n+  release_version_tag_w_ed_chan=\"tyse-$release_version_tag-regular\"\n+  git add $versions_file\n+  git commit -m \"Release $release_version_tag_w_ed_chan.\"\n+  echo\n+  echo \"DO THIS in relchans/$promote_to_chan/:\"\n+  echo git push origin $promote_to_chan\n+  # 'master' is for backw compat. Don't incl in v1. [ty_v1]\n+  if [ \"$promote_to_chan\" = 'tyse-v0-regular' ]; then\n+    git branch -f master\n+    echo git push origin master\n+  fi\n popd\n \n+echo\n+echo \"AND THIS in ./:\"\n # Future tag name:\n # Need to include release channel in the Git tag, otherwise we'd try to push the\n # same tag to different branches, e.g. push  tyse-v0.2021.04-abc123def\n-# to both the tyse-v0-dev and tyse-v0-regular branches — but then the last push\n+# to both the $promote_from_chan and $promote_to_chan branches — but then the last push\n # would overwrite the first.  Instead, we push two different tags:\n # tyse-v0.2021.04-abc123def-dev  and  tyse-v0.2021.04-abc123def-regular.\n-git tag $release_version_tag_w_ed_chan $wip_version_tag\n-\n-# Legacy tag name: (don't incl in v1) [ty_v1]\n-git tag $release_version_tag $wip_version_tag\n+# [.must_be_dev_regular]\n+echo git tag $release_version_tag_w_ed_chan tyse-$wip_version_tag-dev\n \n-git push origin $release_version_tag $release_version_tag_w_ed_chan\n+echo git push origin $release_version_tag_w_ed_chan\n \n-echo \"Done, released $release_version_tag_w_ed_chan. Bye.\"\n+echo echo \"Done, released $release_version_tag_w_ed_chan. Bye.\"\n echo"
    },
    {
      "sha": "18a5e0e08576f78cdae8a1d5f0de3c160e66c4e8",
      "filename": "s/run-e2e-tests.sh",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/s/run-e2e-tests.sh",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/s/run-e2e-tests.sh",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/s/run-e2e-tests.sh?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -331,7 +331,7 @@ function runAllE2eTests {\n   $r s/wdio --only chat-create-from-profile-pages.2browsers $args\n \n   $r s/wdio --only categories-basic.3browsers $args\n-  #$r s/wdio --only categories-delete.2browsers $args\n+  # There're more category tests below. [.more_cat_tests]\n \n   $r s/wdio --only private-chat.3browsers $args\n \n@@ -479,6 +479,10 @@ function runAllE2eTests {\n   $r s/wdio --only group-permissions-similar-topics.2br.mtime $args\n   $r s/wdio --only permissions-edit-wiki-posts.2browsers $args\n \n+  # Do after the search and access permission tests above.  [.more_cat_tests]\n+  $r s/wdio --only categories-delete.2br $args\n+  $r s/wdio --only category-permissions.2br $args\n+\n   $r s/wdio --only slow-3g-navigate-edit-drafts.2browsers $args\n \n "
    },
    {
      "sha": "e0e075b6ad57f782048f075e16656723a70f708b",
      "filename": "tests/e2e/specs/api-upsert-categories.2browsers.test.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/tests/e2e/specs/api-upsert-categories.2browsers.test.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/tests/e2e/specs/api-upsert-categories.2browsers.test.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/specs/api-upsert-categories.2browsers.test.ts?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -201,7 +201,7 @@ describe(\"api-upsert-categories  TyT94DFKHQC24\", () => {\n     owensBrowser.go(siteIdAddress.origin + upsertedCategory.urlPaths.activeTopics);\n   });\n   it(\"... sees the category name\", () => {\n-    owensBrowser.forumTopicList.waitForCategoryName(UpsCatOneName, { isSubCategory: true });\n+    owensBrowser.forumTopicList.waitForCategoryName(UpsCatOneName, { isSubCat: true });\n   });\n   it(\"... sees an empty category topic list\", () => {\n     owensBrowser.forumTopicList.waitUntilKnowsIsEmpty();\n@@ -212,7 +212,7 @@ describe(\"api-upsert-categories  TyT94DFKHQC24\", () => {\n     owensBrowser.go(siteIdAddress.origin + upsertedCategory.urlPaths.newTopics);\n   });\n   it(\"... and, again, sees the category name\", () => {\n-    owensBrowser.forumTopicList.waitForCategoryName(UpsCatOneName, { isSubCategory: true });\n+    owensBrowser.forumTopicList.waitForCategoryName(UpsCatOneName, { isSubCat: true });\n   });\n   it(\"... and, again, sees an empty category topic list\", () => {\n     owensBrowser.forumTopicList.waitUntilKnowsIsEmpty();\n@@ -223,7 +223,7 @@ describe(\"api-upsert-categories  TyT94DFKHQC24\", () => {\n     owensBrowser.go(siteIdAddress.origin + upsertedCategory.urlPaths.topTopics);\n   });\n   it(\"... here too, sees the category name\", () => {\n-    owensBrowser.forumTopicList.waitForCategoryName(UpsCatOneName, { isSubCategory: true });\n+    owensBrowser.forumTopicList.waitForCategoryName(UpsCatOneName, { isSubCat: true });\n   });\n   it(\"... here too, sees an empty category topic list\", () => {\n     owensBrowser.forumTopicList.waitUntilKnowsIsEmpty();\n@@ -353,7 +353,7 @@ describe(\"api-upsert-categories  TyT94DFKHQC24\", () => {\n     owensBrowser.go(siteIdAddress.origin + upsertedCategory.urlPaths.activeTopics);\n   });\n   it(\"... and sees the category name, and empty topic list\", () => {\n-    owensBrowser.forumTopicList.waitForCategoryName(UpsCatTwoEditedName, { isSubCategory: true });\n+    owensBrowser.forumTopicList.waitForCategoryName(UpsCatTwoEditedName, { isSubCat: true });\n     owensBrowser.forumTopicList.waitUntilKnowsIsEmpty();\n   });\n "
    },
    {
      "sha": "61b40b2c28806b67eead586e9aca77bfb005ecb6",
      "filename": "tests/e2e/specs/categories-delete-UNIMPL.2browsers.test.ts",
      "status": "removed",
      "additions": 0,
      "deletions": 139,
      "changes": 139,
      "blob_url": "https://github.com/debiki/talkyard/blob/639ccf013c1daf9308d5a6cb4988f888f2699389/tests/e2e/specs/categories-delete-UNIMPL.2browsers.test.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/639ccf013c1daf9308d5a6cb4988f888f2699389/tests/e2e/specs/categories-delete-UNIMPL.2browsers.test.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/specs/categories-delete-UNIMPL.2browsers.test.ts?ref=639ccf013c1daf9308d5a6cb4988f888f2699389",
      "patch": "@@ -1,139 +0,0 @@\n-/// <reference path=\"../test-types.ts\"/>\n-\n-import * as _ from 'lodash';\n-import assert = require('assert');\n-import c = require('../test-constants');\n-import server = require('../utils/server');\n-import utils = require('../utils/utils');\n-import { TyE2eTestBrowser } from '../utils/pages-for';\n-import settings = require('../utils/settings');\n-import make = require('../utils/make');\n-import logAndDie = require('../utils/log-and-die');\n-\n-\n-\n-\n-\n-var everyone;\n-var owen;\n-var maria;\n-\n-var idAddress;\n-let categoryToDeleteId = 3;\n-let categoryToDeleteName = \"To-Delete\";\n-let categoryToDeleteSlug = \"to-delete\";\n-\n-describe(\"categories\", () => {\n-\n-  it(\"initialize people\", () => {\n-    everyone = browser;\n-    owen = _.assign(new TyE2eTestBrowser(browserA), make.memberOwenOwner());\n-    maria = _.assign(new TyE2eTestBrowser(browserB), make.memberMaria());\n-  });\n-\n-  it(\"import a site\", () => {\n-    let site: SiteData = make.forumOwnedByOwen('categories');\n-    let category = make.categoryWithIdFor(categoryToDeleteId, make.findForumPage(site.pages));\n-    category.name = categoryToDeleteName;\n-    category.slug = categoryToDeleteSlug;\n-    site.categories.push(category);\n-    site.pages.push(make.page({\n-      id: 'page_one',\n-      role: c.TestPageRole.Discussion,\n-      authorId: owen.id,\n-    }));\n-    site.pagePaths.push(make.pagePath('page_one', '/', true));\n-    site.members.push(make.memberModeratorMons());\n-    site.members.push(make.memberMaria());\n-    idAddress = server.importSiteData(site);\n-  });\n-\n-  it(\"A stranger sees page_one in the topic list\", () => {\n-    // TESTS_MISSING\n-  });\n-\n-  it(\"... and can access page_one\", () => {\n-\n-  });\n-\n-  it(\"Maria logs in, sees the page in the topic list\", () => {\n-\n-  });\n-\n-  it(\"... and she can access it too\", () => {\n-\n-  });\n-\n-  it(\"... and search and find that page\", () => {\n-  });\n-\n-  it(\"Owen logs in, views categories\", () => {\n-    owen.go(idAddress.origin);\n-    owen.topbar.clickLogin();\n-    owen.loginDialog.loginWithPassword(owen);\n-    owen.forumButtons.clickViewCategories();\n-    owen.waitForAtLeast(2, '.esForum_cats_cat .forum-title');\n-    owen.assertTextMatches('.esForum_cats_cat .forum-title', [/Uncategorized/, /default/]);\n-    owen.assertTextMatches('.esForum_cats_cat .forum-title', categoryToDeleteName);\n-  });\n-\n-  it(\"Owen deletes the To-Delete category\", () => {\n-  });\n-\n-  it(\"Maria can no longer access the page in the deleted category\", () => {\n-  });\n-\n-  it(\"... and she no longer sees the category in the category tree\", () => {\n-  });\n-\n-  it(\"... and cannot access the category topic list\", () => {\n-  });\n-\n-  it(\"... and cannot search-and-find the page in the deleted category\", () => {\n-  });\n-\n-  it(\"Maria leaves, a stranger arrives\", () => {\n-  });\n-\n-  it(\"The stranger also cannot longer access the page in the deleted category\", () => {\n-  });\n-\n-  it(\"... and doesn't see the category in the category tree\", () => {\n-  });\n-\n-  it(\"... and cannot access the category topic list\", () => {\n-  });\n-\n-  it(\"... and cannot search-and-find the page in the deleted category\", () => {\n-  });\n-\n-  it(\"Owen undeletes the category\", () => {\n-  });\n-\n-  it(\"Now the stranger sees the page in the topic list, again\", () => {\n-  });\n-\n-  it(\"... and can search-and-find it, again\", () => {\n-  });\n-\n-  it(\"... and can access it, again\", () => {\n-  });\n-\n-  it(\"Maria returns\", () => {\n-  });\n-\n-  it(\"... and sees the category in the category tree, and the page too, again\", () => {\n-  });\n-\n-  it(\"... and can access the category topic list\", () => {\n-  });\n-\n-  it(\"... and she can search-and-find it, too\", () => {\n-\n-  });\n-\n-  it(\"... and can access it, again, too\", () => {\n-  });\n-\n-});\n-"
    },
    {
      "sha": "0b55f29289215ef655b64e1c035d191bb774fe9a",
      "filename": "tests/e2e/specs/categories-delete.2br.test.ts",
      "status": "added",
      "additions": 297,
      "deletions": 0,
      "changes": 297,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/tests/e2e/specs/categories-delete.2br.test.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/tests/e2e/specs/categories-delete.2br.test.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/specs/categories-delete.2br.test.ts?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -0,0 +1,297 @@\n+/// <reference path=\"../test-types.ts\"/>\n+\n+import * as _ from 'lodash';\n+import assert = require('../utils/ty-assert');\n+// import fs = require('fs');  EMBCMTS\n+import server = require('../utils/server');\n+import utils = require('../utils/utils');\n+import { buildSite } from '../utils/site-builder';\n+import { TyE2eTestBrowser, TyAllE2eTestBrowsers } from '../utils/pages-for';\n+import settings = require('../utils/settings');\n+import lad = require('../utils/log-and-die');\n+import c = require('../test-constants');\n+\n+\n+let richBrowserA: TyE2eTestBrowser;\n+let richBrowserB: TyE2eTestBrowser;\n+let owen: Member;\n+let owen_brA: TyE2eTestBrowser;\n+let maria: Member;\n+let maria_brB: TyE2eTestBrowser;\n+let michael: Member;\n+let michael_brB: TyE2eTestBrowser;\n+\n+let site: IdAddress;\n+let forum: CatABTestForum;\n+\n+const searchWord = 'searchWord';\n+\n+let topicCatAUrl: St;\n+const topicCatATitle = 'topicCatATitle ' + searchWord;\n+const topicCatABody = 'topicCatABody';\n+\n+let topicCatBUrl: St;\n+const topicCatBTitle = 'topicCatBTitle ' + searchWord;\n+const topicCatBBody= 'topicCatBBody';\n+\n+\n+\n+describe(`categories-delete.2br   TyTE2ECATDEL01`, () => {\n+\n+  it(`construct site`, () => {\n+    const builder = buildSite();\n+    forum = builder.addCatABForum({\n+      title: \"Some E2E Test\",\n+      members: undefined,\n+    });\n+\n+    richBrowserA = new TyE2eTestBrowser(wdioBrowserA);\n+    richBrowserB = new TyE2eTestBrowser(wdioBrowserB);\n+\n+    owen = forum.members.owen;\n+    owen_brA = richBrowserA;\n+\n+    maria = forum.members.maria;\n+    maria_brB = richBrowserB;\n+    michael = forum.members.michael;\n+    michael_brB = richBrowserB;\n+\n+    assert.refEq(builder.getSite(), forum.siteData);\n+  });\n+\n+  it(`import site`, () => {\n+    site = server.importSiteData(forum.siteData);\n+    server.skipRateLimits(site.id);\n+  });\n+\n+\n+\n+  // ----- Create topics   (dupl code [03RGM234])\n+\n+\n+  it(`Maria goes to Cat A`, () => {\n+    maria_brB.forumTopicList.goHere({\n+          origin: site.origin, categorySlug: forum.categories.catA.slug });\n+    maria_brB.complex.loginWithPasswordViaTopbar(maria);\n+  });\n+\n+  it(`... posts a topic`, () => {\n+    maria_brB.complex.createAndSaveTopic({ title: topicCatATitle, body: topicCatABody });\n+    topicCatAUrl = maria_brB.getUrl();\n+  });\n+\n+  it(`Maria goes to Cat B`, () => {\n+    maria_brB.forumTopicList.goHere({ categorySlug: forum.categories.catB.slug });\n+  });\n+\n+  it(`... posts another topic`, () => {\n+    maria_brB.complex.createAndSaveTopic({\n+          title: topicCatBTitle, body: topicCatBBody });\n+    topicCatBUrl = maria_brB.getUrl();\n+  });\n+\n+  it(`Maria leaves, Michael arrives`, () => {\n+    maria_brB.topbar.clickLogout();\n+    michael_brB.complex.loginWithPasswordViaTopbar(michael);\n+  });\n+\n+\n+\n+  // ----- Can access everything before\n+\n+\n+  it(`Michael sees the page   ttt`, () => {\n+    michael_brB.refresh2();\n+    michael_brB.assertPageTitleMatches(topicCatBTitle);\n+  });\n+\n+  it(`... he sees the category too, in the category tree  ttt`, () => {\n+    michael_brB.forumCategoryList.goHere();\n+    // We won't delete cat A.\n+    assert.ok(michael_brB.forumCategoryList.isCategoryVisible(\n+          forum.categories.catA.name));\n+    // But we'll delete cat B (later).\n+    assert.ok(michael_brB.forumCategoryList.isCategoryVisible(  // [.111VIS]\n+          forum.categories.catB.name));\n+    assert.eq(michael_brB.forumCategoryList.numCategoriesVisible(), 2);\n+  });\n+\n+  it(`... he searches for the page ...`, () => {\n+    michael_brB.goToSearchPage(searchWord);\n+  });\n+\n+  it(`... finds it, and the other page too   ttt`, () => {\n+    michael_brB.searchResultsPage.waitForAssertNumPagesFound(searchWord, 2)\n+    michael_brB.searchResultsPage.assertResultPageTitlePresent(topicCatATitle);\n+    michael_brB.searchResultsPage.assertResultPageTitlePresent(topicCatBTitle);\n+  });\n+\n+  it(`... sees the topic in the Cat B topics list   ttt`, () => {\n+    michael_brB.forumTopicList.goHere({ categorySlug: forum.categories.catB.slug });\n+    michael_brB.forumTopicList.waitForTopicVisible(topicCatBTitle);\n+  });\n+\n+\n+\n+  // ----- Delete category\n+\n+\n+  it(`Owen goes to Cat A`, () => {\n+    owen_brA.forumTopicList.goHere({\n+          origin: site.origin, categorySlug: forum.categories.catA.slug });\n+    owen_brA.complex.loginWithPasswordViaTopbar(owen);\n+  });\n+\n+  it(`Owen wants to delete Cat A`, () => {\n+    owen_brA.forumButtons.clickEditCategory();\n+  });\n+\n+  it(`... won't work — it's the default category`, () => {\n+    owen_brA.waitForVisible('.e_0Del');\n+  });\n+\n+  it(`Oh well. Owen goes to Cat B instead`, () => {\n+    owen_brA.categoryDialog.cancel();\n+    owen_brA.forumTopicList.goHere({ categorySlug: forum.categories.catB.slug });\n+  });\n+\n+  it(`... deletes Cat B`, () => {\n+    owen_brA.forumButtons.clickEditCategory();\n+    owen_brA.categoryDialog.deleteCategory();\n+  });\n+\n+\n+\n+  // ----- Cannot access topics\n+\n+\n+  it(`Michael attempts to post a new topic in Cat B`, () => {\n+    michael_brB.complex.createAndSaveTopic({\n+          title: \"Won't Work\", body: \"Some text.\", resultInError: true });\n+  });\n+\n+  it(`... won't work — category deleted`, () => {\n+    michael_brB.assertNotFoundError({ whyNot: 'CategroyDeleted' });\n+  });\n+\n+  it(`He can no longer list topics in the category`, () => {\n+    michael_brB.refresh2();\n+  });\n+\n+  it(`... there's a \"Category not found\" error`, () => {\n+    michael_brB.forumCategoryList.assertCategoryNotFoundOrMayNotAccess();\n+  });\n+\n+  it(`... he doesn't see the category in the category tree`, () => {\n+    michael_brB.forumCategoryList.goHere();\n+    assert.ok(michael_brB.forumCategoryList.isCategoryVisible(\n+          forum.categories.catA.name));\n+    // Deleted:\n+    assert.not(michael_brB.forumCategoryList.isCategoryVisible(  // [.111VIS]\n+          forum.categories.catB.name));\n+    assert.eq(michael_brB.forumCategoryList.numCategoriesVisible(), 1);\n+  });\n+\n+  it(`He jumps directly to Maria's topic`, () => {\n+    michael_brB.go2(topicCatBUrl);\n+  });\n+\n+  it(`... but cannot access it`, () => {\n+    michael_brB.assertNotFoundError({ whyNot: 'CategroyDeleted' });\n+  });\n+\n+  it(`He cannot search-and-find the page in the deleted category`, () => {\n+    michael_brB.goToSearchPage(searchWord);\n+  });\n+\n+  it(`... he finds only Maria's page in Cat A`, () => {\n+    michael_brB.searchResultsPage.waitForAssertNumPagesFound(searchWord, 1)\n+    michael_brB.searchResultsPage.assertResultPageTitlePresent(topicCatATitle);\n+  });\n+\n+  it(`He can access Maria's topic in Cat A though`, () => {\n+    michael_brB.go2(topicCatAUrl);\n+    michael_brB.assertPageTitleMatches(topicCatATitle);\n+  });\n+\n+  it(`... and see topics in Cat A  (none from Cat B)`, () => {\n+    michael_brB.topbar.clickHome();\n+    michael_brB.forumTopicList.waitForTopicVisible(topicCatATitle);\n+    michael_brB.forumTopicList.assertNumVisible(1);  // not topicCatBTitle\n+  });\n+\n+  it(`... and he can post a topic in Cat A  (it's the default cat)`, () => {\n+    michael_brB.complex.createAndSaveTopic({ title: \"Will Work\", body: \"Some text.\" });\n+  });\n+\n+\n+\n+  // ----- Admin access deleted category?\n+\n+\n+  /* Hmm currently the deleted cat isn't listed here:\n+  it(`Owen can see the deleted category?`, () => {\n+    owen_brA.forumCategoryList.goHere();\n+    assert.ok(michael_brB.forumCategoryList.isCategoryVisible(\n+          forum.categories.catA.name));\n+    // Deleted, but Owen is admin:\n+    assert.ok(michael_brB.forumCategoryList.isCategoryVisible(  // [.111VIS]\n+          forum.categories.catB.name));\n+  });\n+\n+  it(`... he opens it`, () => {\n+    owen_brA.forumCategoryList.openCategory(forum.categories.catB.name);\n+  }); */\n+\n+\n+\n+  // ----- Undelete category\n+\n+\n+  it(`Owen undeletes the deleted category`, () => {\n+    owen_brA.forumButtons.clickEditCategory();\n+    owen_brA.categoryDialog.undeleteCategory();\n+  });\n+\n+\n+\n+  // ----- Can access topics again\n+\n+\n+  it(`Now Michael sees the category in the categories list, again`, () => {\n+    michael_brB.topbar.clickHome();\n+    michael_brB.forumButtons.clickViewCategories();\n+    michael_brB.forumCategoryList.waitForCategories();\n+    assert.eq(michael_brB.forumCategoryList.isCategoryVisible(\n+          forum.categories.catA.name), true);\n+    // It's back:\n+    assert.eq(michael_brB.forumCategoryList.isCategoryVisible(  // [.111VIS]\n+          forum.categories.catB.name), true);\n+    assert.eq(michael_brB.forumCategoryList.numCategoriesVisible(), 2);\n+  });\n+\n+  it(`... and can open the category`, () => {\n+    michael_brB.forumCategoryList.openCategory(forum.categories.catB.name);\n+  });\n+\n+  it(`... see the topics inside`, () => {\n+    michael_brB.forumTopicList.waitForTopicVisible(topicCatBTitle);\n+  });\n+\n+  it(`... access the topics`, () => {\n+    michael_brB.forumTopicList.navToTopic(topicCatBTitle);\n+    michael_brB.assertPageTitleMatches(topicCatBTitle);\n+  });\n+\n+  it(`... and can search-and-find it, again`, () => {\n+    michael_brB.goToSearchPage(searchWord);\n+  });\n+\n+  it(`... finds it, and the other page too`, () => {\n+    michael_brB.searchResultsPage.waitForAssertNumPagesFound(searchWord, 2)\n+    michael_brB.searchResultsPage.assertResultPageTitlePresent(topicCatATitle);\n+    michael_brB.searchResultsPage.assertResultPageTitlePresent(topicCatBTitle); // here\n+  });\n+\n+});\n+"
    },
    {
      "sha": "7abe9c7ea5e3fe1738caf293679ec47776498611",
      "filename": "tests/e2e/specs/category-permissions.2br.test.ts",
      "status": "added",
      "additions": 372,
      "deletions": 0,
      "changes": 372,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/tests/e2e/specs/category-permissions.2br.test.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/tests/e2e/specs/category-permissions.2br.test.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/specs/category-permissions.2br.test.ts?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -0,0 +1,372 @@\n+/// <reference path=\"../test-types.ts\"/>\n+\n+import * as _ from 'lodash';\n+import assert = require('../utils/ty-assert');\n+// import fs = require('fs');  EMBCMTS\n+import server = require('../utils/server');\n+import utils = require('../utils/utils');\n+import { buildSite } from '../utils/site-builder';\n+import { TyE2eTestBrowser, TyAllE2eTestBrowsers } from '../utils/pages-for';\n+import settings = require('../utils/settings');\n+import lad = require('../utils/log-and-die');\n+import c = require('../test-constants');\n+\n+\n+let richBrowserA: TyE2eTestBrowser;\n+let richBrowserB: TyE2eTestBrowser;\n+let owen: Member;\n+let owen_brA: TyE2eTestBrowser;\n+let maria: Member;\n+let maria_brB: TyE2eTestBrowser;\n+let memah: Member;\n+let memah_brB: TyE2eTestBrowser;\n+let stranger_brB: TyE2eTestBrowser;\n+\n+let site: IdAddress;\n+let forum: CatABTestForum;\n+let fcats: {\n+  catA: CategoryJustAdded;\n+  catB: CategoryJustAdded;\n+};\n+\n+const searchWord = 'searchWord';\n+\n+let topicCatAUrl: St;\n+const topicCatATitle = 'topicCatATitle ' + searchWord;\n+const topicCatABody = 'topicCatABody';\n+\n+let topicCatBUrl: St;\n+const topicCatBTitle = 'topicCatBTitle ' + searchWord;\n+const topicCatBBody= 'topicCatBBody';\n+\n+\n+\n+describe(`category-permissions.2br   TyTE2ECATPREMS01`, () => {\n+\n+  it(`construct site`, () => {\n+    const builder = buildSite();\n+    forum = builder.addCatABForum({\n+      title: \"Some E2E Test\",\n+      members: ['owen', 'maria', 'memah', 'michael'],\n+    });\n+    fcats = forum.categories;\n+\n+    richBrowserA = new TyE2eTestBrowser(wdioBrowserA);\n+    richBrowserB = new TyE2eTestBrowser(wdioBrowserB);\n+\n+    owen = forum.members.owen;\n+    owen_brA = richBrowserA;\n+\n+    maria = forum.members.maria;\n+    maria_brB = richBrowserB;\n+    memah = forum.members.memah;\n+    memah_brB = richBrowserB;\n+    stranger_brB = richBrowserB;\n+\n+    assert.refEq(builder.getSite(), forum.siteData);\n+  });\n+\n+  it(`import site`, () => {\n+    site = server.importSiteData(forum.siteData);\n+    server.skipRateLimits(site.id);\n+  });\n+\n+\n+\n+  // ----- Create topics   (dupl code [03RGM234])\n+\n+\n+  it(`Maria goes to Cat A`, () => {\n+    maria_brB.forumTopicList.goHere({\n+          origin: site.origin, categorySlug: fcats.catA.slug });\n+    maria_brB.complex.loginWithPasswordViaTopbar(maria);\n+  });\n+\n+  it(`... posts a topic`, () => {\n+    maria_brB.complex.createAndSaveTopic({ title: topicCatATitle, body: topicCatABody });\n+    topicCatAUrl = maria_brB.getUrl();\n+  });\n+\n+  it(`Maria goes to Cat B`, () => {\n+    maria_brB.forumTopicList.goHere({ categorySlug: fcats.catB.slug });\n+  });\n+\n+  it(`... posts another topic`, () => {\n+    maria_brB.complex.createAndSaveTopic({\n+          title: topicCatBTitle, body: topicCatBBody });\n+    topicCatBUrl = maria_brB.getUrl();\n+  });\n+\n+  it(`Maria leaves, Memah arrives`, () => {\n+    maria_brB.topbar.clickLogout();\n+    memah_brB.complex.loginWithPasswordViaTopbar(memah);\n+  });\n+\n+\n+\n+  // ----- Create sub cat\n+\n+\n+  it(`Owen goes to Cat B`, () => {\n+    owen_brA.forumTopicList.goHere({\n+          origin: site.origin, categorySlug: fcats.catB.slug });\n+    owen_brA.complex.loginWithPasswordViaTopbar(owen);\n+  });\n+\n+  it(`... makes it a sub category of cat A`, () => {\n+    owen_brA.forumButtons.clickEditCategory();\n+    owen_brA.categoryDialog.setParentCategory(fcats.catA.name);\n+    owen_brA.categoryDialog.submit();\n+  });\n+\n+  it(`Now Owen sees:  Cat A —> Cat B`, () => {\n+    owen_brA.forumTopicList.waitForCategoryName(fcats.catA.name);\n+    owen_brA.forumTopicList.waitForCategoryName(fcats.catB.name, { isSubCat: true });\n+  });\n+\n+\n+\n+  // ----- Can access topics\n+\n+\n+  addCanAccessTestSteps({\n+        canAccessCatA: true, canAccessCatB: true, catBIsSubCat: true  });\n+\n+\n+  function addCanAccessTestSteps(ps: { canAccessCatA: Bo, canAccessCatB: Bo,\n+        catBIsSubCat?: Bo }) {\n+    const numTopicsVisible: Nr =\n+            (ps.canAccessCatA ? 1 : 0) + (ps.canAccessCatB ? 1 : 0);\n+    const numBaseCatsVisible =\n+            (ps.canAccessCatA ? 1 : 0) +\n+            (ps.canAccessCatB && !ps.catBIsSubCat ? 1 : 0);\n+    const numSubCatsVisible =\n+            (ps.canAccessCatB && ps.catBIsSubCat ? 1 : 0);\n+    const numCatsVisible = numBaseCatsVisible + numSubCatsVisible;\n+\n+    if (numTopicsVisible >= 1) {\n+      it(`Memah can see ${numTopicsVisible} topic(s) in the topic list`, () => {\n+        memah_brB.go2('/')\n+        memah_brB.forumTopicList.waitForTopics();\n+        memah_brB.forumTopicList.assertNumVisible(numTopicsVisible);\n+        !ps.canAccessCatA || memah_brB.forumTopicList.waitForTopicVisible(topicCatATitle);\n+        !ps.canAccessCatB || memah_brB.forumTopicList.waitForTopicVisible(topicCatBTitle);\n+      });\n+    }\n+    else {\n+      it(`Memah sees no topics in the topic list`, () => {\n+        memah_brB.go2('/')\n+        memah_brB.forumTopicList.waitUntilKnowsIsEmpty();\n+      });\n+    }\n+\n+    if (numCatsVisible >= 1) {\n+      it(`Memah can see ${numCatsVisible} categories(s) on the categories page`, () => {\n+        memah_brB.forumCategoryList.goHere();\n+        const catl = memah_brB.forumCategoryList;\n+        catl.waitForNumCategoriesVisible(numBaseCatsVisible);\n+        assert.eq(catl.numSubCategoriesVisible(), numSubCatsVisible);\n+\n+        assert.eq(ps.canAccessCatA, catl.isCategoryVisible(fcats.catA.name));\n+\n+        assert.eq(ps.canAccessCatB && !ps.catBIsSubCat,\n+              catl.isCategoryVisible(fcats.catB.name));\n+\n+        assert.eq(ps.canAccessCatB && ps.catBIsSubCat,\n+              catl.isSubCategoryVisible(fcats.catB.name));\n+      });\n+    }\n+    else {\n+      it(`Memah sees no categories on the categories page`, () => {\n+        memah_brB.forumCategoryList.goHere('', { shouldSeeAnyCats: false });\n+      });\n+    }\n+\n+    if (ps.canAccessCatA) {\n+      it(`Memah can access topics in cat A`, () => {\n+        memah_brB.go2(topicCatAUrl);\n+        memah_brB.topic.waitUntilPostTextIs(c.TitleNr, topicCatATitle);\n+      });\n+    }\n+    else {\n+      it(`Memah can  not  access topics in cat A`, () => {\n+        memah_brB.go2(topicCatAUrl);\n+        memah_brB.assertNotFoundError({ whyNot: 'MayNotSeeCat' });\n+      });\n+    }\n+\n+    if (ps.canAccessCatB) {\n+      it(`Memah can access topics in cat B`, () => {\n+        memah_brB.go2(topicCatBUrl);\n+        memah_brB.topic.waitUntilPostTextIs(c.TitleNr, topicCatBTitle);\n+      });\n+    }\n+    else {\n+      it(`Memah can  not  access topics in cat B`, () => {\n+        memah_brB.go2(topicCatBUrl);\n+        memah_brB.assertNotFoundError({ whyNot: 'MayNotSeeCat' });\n+      });\n+    }\n+\n+\n+    it(`Memah searches for the search word`, () => {\n+      memah_brB.goToSearchPage(searchWord);\n+    });\n+\n+    if (numTopicsVisible >= 1) {\n+      it(`... finds ${numTopicsVisible} topics`, () => {\n+        memah_brB.searchResultsPage.waitForAssertNumPagesFound(searchWord, numTopicsVisible);\n+        !ps.canAccessCatA ||\n+              memah_brB.searchResultsPage.assertResultPageTitlePresent(topicCatATitle);\n+        !ps.canAccessCatB ||\n+              memah_brB.searchResultsPage.assertResultPageTitlePresent(topicCatBTitle);\n+      });\n+    }\n+    else {\n+      it(`... finds no topics`, () => {\n+        memah_brB.searchResultsPage.assertPhraseNotFound(searchWord);\n+        memah_brB.searchResultsPage.waitForAssertNumPagesFound(searchWord, 0);  // ttt [5FK02FP]\n+      });\n+    }\n+  }\n+\n+\n+  it(`Memah goes to Cat B — which will be access restricted, soon`, () => {\n+    memah_brB.forumTopicList.goHere({\n+          origin: site.origin, categorySlug: fcats.catB.slug });\n+  });\n+\n+\n+\n+  // ----- Access restrict base category\n+\n+\n+  it(`Owen goes to Cat A`, () => {\n+    owen_brA.forumTopicList.goHere({ categorySlug: fcats.catA.slug });\n+  });\n+\n+  it(`... opens the category security tab`, () => {\n+    owen_brA.forumButtons.clickEditCategory();\n+    owen_brA.categoryDialog.openSecurityTab();\n+  });\n+\n+  it(`... makes Cat A access restricted: Staff only`, () => {\n+    owen_brA.categoryDialog.securityTab.removeGroup(c.EveryoneId);\n+    //owen_brA.categoryDialog.securityTab.removeGroup(c.FullMembersId);\n+    owen_brA.categoryDialog.submit();\n+  });\n+\n+\n+\n+  // ----- Cannot post topics in sub cat, when base cat access restricted\n+\n+\n+  it(`Memah attempts to post a new topic in sub cat B`, () => {\n+    memah_brB.complex.createAndSaveTopic({\n+          title: \"Won't Work\", body: \"Some text.\", resultInError: true });\n+  });\n+\n+  it(`... won't work — base cat now access restricted`, () => {\n+    memah_brB.assertNotFoundError({ whyNot: 'MayNotCreateTopicsOrSeeCat' });\n+  });\n+\n+\n+\n+  // ----- Cannot access any topics    [.2220ACS]\n+\n+\n+  addCanAccessTestSteps({ canAccessCatA: false, canAccessCatB: false,\n+        catBIsSubCat: true });\n+\n+\n+\n+  // ----- Change cat B back to a base cat   [TyTE2ECLRSUBCAT]\n+\n+  // Then, can access B, since it's only the previous parent cat, A, that we\n+  // may not see. But now B got moved away from A.\n+\n+\n+  it(`Owen edits Cat B`, () => {\n+    owen_brA.forumTopicList.goHere({ categorySlug: fcats.catB.slug });\n+    owen_brA.forumButtons.clickEditCategory();\n+  });\n+\n+  it(`... makes Cat B a base cat again`, () => {\n+    owen_brA.categoryDialog.clearParentCategory();\n+    owen_brA.categoryDialog.submit();\n+  });\n+\n+\n+  addCanAccessTestSteps({ canAccessCatA: false, canAccessCatB: true,\n+        catBIsSubCat: false });\n+\n+\n+\n+  // ----- Makes B a sub cat again\n+\n+\n+  it(`Owen changes B back to a sub cat of A`, () => {\n+    owen_brA.forumButtons.clickEditCategory();\n+    owen_brA.categoryDialog.setParentCategory(fcats.catA.name);\n+    owen_brA.categoryDialog.submit();\n+  });\n+\n+  it(`Now Owen sees:  Cat A —> Cat B`, () => {\n+    owen_brA.forumTopicList.waitForCategoryName(fcats.catA.name);\n+    owen_brA.forumTopicList.waitForCategoryName(fcats.catB.name, { isSubCat: true });\n+  });\n+\n+\n+  // (This is doing [.2220ACS] again — maybe speed this test up by just doing\n+  // one quick access test instead.)\n+  //\n+  addCanAccessTestSteps({ canAccessCatA: false, canAccessCatB: false,\n+        catBIsSubCat: true });\n+\n+\n+\n+  // ----- Allow access again\n+\n+\n+  it(`Owen allows access again (to cat A, incl sub cat B)`, () => {\n+    owen_brA.forumTopicList.goHere({ categorySlug: fcats.catA.slug });\n+    owen_brA.forumButtons.clickEditCategory();\n+    owen_brA.categoryDialog.openSecurityTab();\n+    owen_brA.categoryDialog.securityTab.addGroup(c.EveryoneFullName);\n+    owen_brA.categoryDialog.submit();\n+  });\n+\n+  // Now, can access\n+  addCanAccessTestSteps({ canAccessCatA: true, canAccessCatB: true,\n+        catBIsSubCat: true });\n+\n+\n+\n+  // ----- Access restrict sub category\n+\n+\n+  it(`Owen goes to Cat B`, () => {\n+    owen_brA.forumTopicList.goHere({ categorySlug: fcats.catB.slug });\n+  });\n+\n+  it(`... edits security settings`, () => {\n+    owen_brA.forumButtons.clickEditCategory();\n+    owen_brA.categoryDialog.openSecurityTab();\n+  });\n+\n+  it(`... makes Cat B — a sub category — access restricted`, () => {\n+    owen_brA.categoryDialog.securityTab.removeGroup(c.EveryoneId);\n+    //owen_brA.categoryDialog.securityTab.removeGroup(c.FullMembersId);\n+    owen_brA.categoryDialog.submit();\n+  });\n+\n+  // Now, can access base cat,  but not sub cat\n+  addCanAccessTestSteps({\n+        canAccessCatA: true, canAccessCatB: false, catBIsSubCat: true });\n+\n+\n+\n+  // Move staff cat to sub cat of A?\n+\n+});\n+"
    },
    {
      "sha": "708dff4a151f0421fcbcbf96a051f2c688852fdf",
      "filename": "tests/e2e/specs/link-previews-internal-not-see-cat.2br.test.ts",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/tests/e2e/specs/link-previews-internal-not-see-cat.2br.test.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/tests/e2e/specs/link-previews-internal-not-see-cat.2br.test.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/specs/link-previews-internal-not-see-cat.2br.test.ts?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -216,18 +216,22 @@ describe(`link-previews-internal-not-see-cat.2br  TyTE2ELNPVIN4837`, () => {\n   });\n \n \n-  it(`Maria clicks the link to Owen's page`, () => {\n+  it(`Maria clicks the link to Owen's staff-only page`, () => {\n     const sel = utils.makePreviewOkSelector('InternalLink', { url: owensReplyUrl() });\n     maria_brB.repeatUntilAtNewUrl(() => {\n       maria_brB.waitAndClick(sel);\n     });\n   });\n \n \n-  it(`... she gets a page not found error, because accesss denied`, () => {\n+  it(`... she gets a page not found error, because accesss denied  TyT0ACSPG043`, () => {\n+    // Remove:\n     maria_brB.notFoundDialog.waitAndAssertErrorMatches(\n           'TyE404_', '-TyEM0SEE_-TyMMBYSEE_')\n+    // Instead, only this: (it's the same)\n+    maria_brB.assertNotFoundError({ whyNot: 'MayNotSeeCat' });\n   });\n \n+  // TESTS_MISSING  Link to access-denied *sub category*.  TyTE2ELNSUBCAT\n });\n "
    },
    {
      "sha": "a135ae3c85d12e69345899a48f33ee0659de7d0b",
      "filename": "tests/e2e/test-types2.ts",
      "status": "modified",
      "additions": 44,
      "deletions": 0,
      "changes": 44,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/tests/e2e/test-types2.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/tests/e2e/test-types2.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/test-types2.ts?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -591,8 +591,11 @@ interface EmptyTestForum {\n   };\n   guests: {\n   };\n+  topics: {};\n   categories: {\n+    rootCat: { id: Nr },\n     rootCategory: { id: number },\n+    catA: CategoryJustAdded;\n     categoryA: CategoryJustAdded;\n   };\n }\n@@ -601,27 +604,57 @@ interface EmptyTestForum {\n interface TwoCatsTestForum extends EmptyTestForum {\n   topics: {\n     aboutCategoryA: { title: string };\n+    aboutStaffCat: { title: St };\n     aboutStaffOnlyCategory: { title: string };\n   };\n   categories: {\n+    rootCat: { id: Nr },\n     rootCategory: { id: number },\n+    catA: CategoryJustAdded;\n     categoryA: CategoryJustAdded;\n+    staffCat: CategoryJustAdded;\n+    staffOnlyCategory: CategoryJustAdded;\n+  };\n+}\n+\n+\n+interface CatABTestForum extends TwoCatsTestForum {\n+  topics: {\n+    aboutCategoryA: { title: string };\n+    aboutStaffCat: { title: St };\n+    aboutStaffOnlyCategory: { title: string };\n+  };\n+  categories: {\n+    rootCat: { id: Nr },\n+    rootCategory: { id: number },\n+    catA: CategoryJustAdded;\n+    categoryA: CategoryJustAdded;\n+    catB: CategoryJustAdded;\n+    staffCat: CategoryJustAdded;\n     staffOnlyCategory: CategoryJustAdded;\n   };\n }\n \n \n interface TwoPagesTestForum extends TwoCatsTestForum {\n   topics: {\n+    byMariaCatA: PageJustAdded;\n     byMariaCategoryA: PageJustAdded;\n+    byMichaelCatA: PageJustAdded;\n     byMichaelCategoryA: PageJustAdded;\n+    aboutCatA: { title: string };\n     aboutCategoryA: { title: string };\n+    aboutStaffCat: { title: string };\n     aboutStaffOnlyCategory: { title: string };\n   };\n   categories: {\n+    rootCat: { id: Nr },\n     rootCategory: { id: number },\n+    catA: CategoryJustAdded;\n     categoryA: CategoryJustAdded;\n+    staffCat: CategoryJustAdded;\n     staffOnlyCategory: CategoryJustAdded;\n+    specificCat: CategoryJustAdded;\n     specificCategory: CategoryJustAdded;\n   };\n }\n@@ -637,18 +670,29 @@ interface LargeTestForum extends EmptyTestForum {\n     byMariaUnlistedCat: PageJustAdded;\n     byMariaDeletedCat: PageJustAdded;\n     byMichaelCategoryA: PageJustAdded;\n+    aboutCatA: { title: St };\n     aboutCategoryA: { title: string };\n+    aboutCatB: { title: St };\n     aboutCategoryB: { title: string };\n+    aboutUnlistedCat: { title: St };\n     aboutUnlistedCategory: { title: string };\n+    aboutStaffCat: { title: St };\n     aboutStaffOnlyCategory: { title: string };\n+    aboutDeletedCat: { title: St };\n     aboutDeletedCategory: { title: string };\n   };\n   categories: {\n+    rootCat: { id: Nr },\n     rootCategory: { id: number },\n+    catA: CategoryJustAdded;\n     categoryA: CategoryJustAdded;\n+    catB: CategoryJustAdded;\n     categoryB: CategoryJustAdded;\n+    staffCat: CategoryJustAdded;\n     staffOnlyCategory: CategoryJustAdded;\n+    unlistedCat: CategoryJustAdded;\n     unlistedCategory: CategoryJustAdded;\n+    deletedCat: CategoryJustAdded;\n     deletedCategory: CategoryJustAdded;\n   };\n }"
    },
    {
      "sha": "bd3e04bfcd2d01c47aa28dd7fba8e1200562479d",
      "filename": "tests/e2e/utils/pages-for.ts",
      "status": "modified",
      "additions": 40,
      "deletions": 7,
      "changes": 47,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/tests/e2e/utils/pages-for.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/tests/e2e/utils/pages-for.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/utils/pages-for.ts?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -2558,7 +2558,9 @@ export class TyE2eTestBrowser {\n     }\n \n \n-    assertNotFoundError(ps: { whyNot?: 'CategroyDeleted' | 'PageDeleted' } = {}) {\n+    assertNotFoundError(ps: {\n+            whyNot?: 'CategroyDeleted' | 'MayNotCreateTopicsOrSeeCat' |\n+                'MayNotSeeCat' | 'PageDeleted' } = {}) {\n       for (let i = 0; i < 20; ++i) {\n         let source = this.#br.getPageSource();\n         // The //s regex modifier makes '.' match newlines. But it's not available before ES2018.\n@@ -2576,6 +2578,12 @@ export class TyE2eTestBrowser {\n         else if (ps.whyNot === 'CategroyDeleted') {\n           okNotFoundReason = /TyECATDELD_/.test(source);\n         }\n+        else if (ps.whyNot === 'MayNotCreateTopicsOrSeeCat') {\n+          okNotFoundReason = /-TyEM0CR0SEE_-TyMMBYSEE_/.test(source);\n+        }\n+        else if (ps.whyNot === 'MayNotSeeCat') {\n+          okNotFoundReason = /-TyEM0SEE_-TyMMBYSEE_/.test(source);\n+        }\n         else if (ps.whyNot === 'PageDeleted') {\n           okNotFoundReason = /TyEPAGEDELD_/.test(source);\n         }\n@@ -4229,8 +4237,8 @@ export class TyE2eTestBrowser {\n       clickEditCategory: () => die('TyE59273',\n             \"Use forumButtons.clickEditCategory() instead\"),\n \n-      waitForCategoryName: (name: string, ps: { isSubCategory?: true } = {}) => {\n-        const selector = ps.isSubCategory ? '.s_F_Ts_Cat_Ttl-SubCat' : '.s_F_Ts_Cat_Ttl';\n+      waitForCategoryName: (name: string, ps: { isSubCat?: true } = {}) => {\n+        const selector = ps.isSubCat ? '.s_F_Ts_Cat_Ttl-SubCat' : '.s_F_Ts_Cat_Ttl';\n         this.waitAndGetElemWithText(selector, name);\n       },\n \n@@ -4333,13 +4341,19 @@ export class TyE2eTestBrowser {\n       categoryNameSelector: '.esForum_cats_cat .forum-title',\n       subCategoryNameSelector: '.s_F_Cs_C_ChildCs_C',\n \n-      goHere: (origin?: string) => {\n+      goHere: (origin?: string, opts: { shouldSeeAnyCats?: Bo } = {}) => {\n         this.go((origin || '') + '/categories');\n-        this.forumCategoryList.waitForCategories();\n+        this.forumCategoryList.waitForCategories(opts.shouldSeeAnyCats !== false);\n       },\n \n-      waitForCategories: () => {\n-        this.waitForVisible('.s_F_Cs');\n+      waitForCategories: (shouldSeeAnyCats: Bo = true) => {\n+        if (shouldSeeAnyCats) {\n+          this.waitForVisible('.s_F_Cs');\n+        }\n+        else {\n+          this.waitForExist('.s_F_Cs');\n+          this.waitForAtMost(0, this.forumCategoryList.categoryNameSelector);\n+        }\n       },\n \n       waitForNumCategoriesVisible: (num: number) => {\n@@ -4392,6 +4406,7 @@ export class TyE2eTestBrowser {\n         this.notfLevelDropdown.clickNotfLevel(notfLevel);\n       },\n \n+      // MOVE to forumTopicList?\n       assertCategoryNotFoundOrMayNotAccess: () => {\n         this.assertAnyTextMatches('.dw-forum', '_TyE0CAT');\n       }\n@@ -4417,6 +4432,17 @@ export class TyE2eTestBrowser {\n         }\n       },\n \n+      setParentCategory: (catName: St) => {\n+        this.waitAndClick('.s_CD .e_SelCatB');\n+        this.waitAndClickSelectorWithText('.e_CatLs .esExplDrp_entry_title', catName)\n+        this.waitUntilTextIs('.s_CD .e_SelCatB', catName);\n+      },\n+\n+      clearParentCategory: () => {\n+        this.waitAndClick('.s_CD_0SubCat');\n+        this.waitUntilTextIs('.s_CD .e_SelCatB', \"None\");\n+      },\n+\n       submit: () => {\n         // ---- Some scroll-to-Save-button problem. So do a bit double scrolling.\n         this.scrollIntoViewInPageColumn('#e2eSaveCatB')\n@@ -4456,6 +4482,13 @@ export class TyE2eTestBrowser {\n         this.categoryDialog.cancel();\n       },\n \n+      undeleteCategory: () => {\n+        this.waitAndClick('.s_CD_UndelB');\n+        // Dismiss \"Done, category undeleted\" message.\n+        this.stupidDialog.clickClose();\n+        this.categoryDialog.cancel();\n+      },\n+\n       openSecurityTab: () => {\n         this.waitAndClick('#t_CD_Tabs-tab-2');\n         this.waitForVisible('.s_CD_Sec_AddB');"
    },
    {
      "sha": "52077c1edf014043904de4b05524d2f3cd80fd3a",
      "filename": "tests/e2e/utils/site-builder.ts",
      "status": "modified",
      "additions": 54,
      "deletions": 14,
      "changes": 68,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/tests/e2e/utils/site-builder.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/tests/e2e/utils/site-builder.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/utils/site-builder.ts?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -200,7 +200,7 @@ function buildSite(site: SiteData | U = undefined, ps: { okInitEarly?: boolean }\n           : EmptyTestForum {\n       const members = opts.members ||\n               ['mons', 'modya', 'regina', 'corax', 'memah', 'maria', 'michael', 'mallory'];\n-      const forum = {\n+      const forum: Partial<EmptyTestForum> = {\n         siteData: site,\n         forumPage: <PageToMake> undefined,\n         members: {\n@@ -220,7 +220,7 @@ function buildSite(site: SiteData | U = undefined, ps: { okInitEarly?: boolean }\n         },\n         guests: {\n         },\n-        topics: <any> {},\n+        topics: {},\n         categories: <any> {},\n       };\n \n@@ -255,11 +255,12 @@ function buildSite(site: SiteData | U = undefined, ps: { okInitEarly?: boolean }\n         introText: opts.introText,\n       });\n \n-      forum.categories.rootCategory = { id: rootCategoryId };\n+      forum.categories.rootCat = forum.categories.rootCategory = { id: rootCategoryId };\n \n       // ---- Categories\n \n-      forum.categories.categoryA = api.addCategoryWithAboutPage(forumPage, {\n+      forum.categories.catA =\n+            forum.categories.categoryA = api.addCategoryWithAboutPage(forumPage, {\n         id: defaultCategoryId,\n         parentCategoryId: rootCategoryId,\n         name: \"CategoryA\",\n@@ -268,7 +269,7 @@ function buildSite(site: SiteData | U = undefined, ps: { okInitEarly?: boolean }\n       });\n       api.addDefaultCatPerms(site, forum.categories.categoryA.id, 1, opts.categoryPerms);\n \n-      return forum;\n+      return forum as EmptyTestForum;\n     },\n \n \n@@ -279,7 +280,8 @@ function buildSite(site: SiteData | U = undefined, ps: { okInitEarly?: boolean }\n       const forum: TwoCatsTestForum = <TwoCatsTestForum> api.addEmptyForum(opts);\n       const forumPage: PageJustAdded = forum.forumPage;\n \n-      forum.categories.staffOnlyCategory = api.addCategoryWithAboutPage(forumPage, {\n+      forum.categories.staffCat =\n+            forum.categories.staffOnlyCategory = api.addCategoryWithAboutPage(forumPage, {\n         id: 3,  // 1 = root, 2 = default category A, 3 = this, staff\n         parentCategoryId: forumPage.categoryId,\n         name: \"Staff Only\",\n@@ -315,6 +317,34 @@ function buildSite(site: SiteData | U = undefined, ps: { okInitEarly?: boolean }\n     },\n \n \n+    addCatABForum: function(opts: { title: St, introText?: St,\n+          members?: WellKnownMemberUsername[], categoryAExtId?: St,\n+          categoryPerms?: 'FullMembersMayEditWiki' }): CatABTestForum {\n+\n+      const forum: CatABTestForum = api.addTwoCatsForum(opts) as CatABTestForum;\n+      const forumPage: PageJustAdded = forum.forumPage;\n+\n+      // If 'FullMembersMayEditWiki', Category A has 3 perms:\n+      // 1) for Everyone, 2) for Full-members-to-edit-wiki, and 3) for Staff.\n+      // Then, the next availabe perm id is 3 + 1 = 4  (+ 1 is the root cat).\n+      // REFACTOR use fn findNextPermId() instead? [refctr_nxt_prmid]\n+      const morePerms = !!opts.categoryPerms;\n+      const startPermsId = (morePerms ? 4 : 3) + 1;   // +1  is for the staff cat\n+\n+      forum.categories.catB = api.addCategoryWithAboutPage(forumPage, {\n+        id: 4,  // 1 = root, 2 = category A, 3 = staff, 4 = this\n+        parentCategoryId: forumPage.categoryId,\n+        name: \"CatB\",\n+        slug: 'cat-b',\n+        aboutPageText: \"Category B description.\",\n+      });\n+      api.addDefaultCatPerms(site, forum.categories.catB.id,\n+            startPermsId, opts.categoryPerms);\n+\n+      return forum;\n+    },\n+\n+\n     addTwoPagesForum: function(opts: { title: string, introText?: string,\n           members?: WellKnownMemberUsername[], categoryExtId?: string,\n           categoryPerms?: 'FullMembersMayEditWiki' })\n@@ -327,7 +357,8 @@ function buildSite(site: SiteData | U = undefined, ps: { okInitEarly?: boolean }\n \n       // id: 4, because 1 = root, 2 = default category A, 3 = staff cat.\n       const specificCategoryId = 4;\n-      forum.categories.specificCategory = api.addCategoryWithAboutPage(forumPage, {\n+      forum.categories.specificCat =\n+            forum.categories.specificCategory = api.addCategoryWithAboutPage(forumPage, {\n         id: specificCategoryId,\n         extId: opts.categoryExtId,\n         parentCategoryId: forumPage.categoryId,\n@@ -348,7 +379,7 @@ function buildSite(site: SiteData | U = undefined, ps: { okInitEarly?: boolean }\n       dieIf(!forum.members.michael, \"Add member Michael, he's a page author [TyE503MQS]\");\n       dieIf(!forum.members.maria, \"Add member Maria, she's a page author [TyE503MQ7]\");\n \n-      forum.topics.byMariaCategoryA = api.addPage({\n+      forum.topics.byMariaCatA = forum.topics.byMariaCategoryA = api.addPage({\n         dbgSrc: 'LgFrmTstTpcs',\n         id: 'byMariaCategoryA',\n         folder: '/',\n@@ -361,7 +392,7 @@ function buildSite(site: SiteData | U = undefined, ps: { okInitEarly?: boolean }\n         authorId: forum.members.maria.id,\n       });\n \n-      forum.topics.byMichaelCategoryA = api.addPage({\n+      forum.topics.byMichaelCatA = forum.topics.byMichaelCategoryA = api.addPage({\n         dbgSrc: 'LgFrmTstTpcs',\n         id: 'byMichaelCategoryA',\n         folder: '/',\n@@ -388,23 +419,26 @@ function buildSite(site: SiteData | U = undefined, ps: { okInitEarly?: boolean }\n       const unlistedCategoryId = 5;\n       const deletedCategoryId = 6;\n \n-      forum.categories.categoryB = api.addCategoryWithAboutPage(forumPage, {\n+      forum.categories.catB =\n+            forum.categories.categoryB = api.addCategoryWithAboutPage(forumPage, {\n         id: categoryBId,\n         parentCategoryId: forumPage.categoryId,\n         name: \"CategoryB\",\n         slug: 'category-b',\n         aboutPageText: \"Category B description.\",\n       });\n \n-      forum.categories.staffOnlyCategory = api.addCategoryWithAboutPage(forumPage, {\n+      forum.categories.staffCat =\n+            forum.categories.staffOnlyCategory = api.addCategoryWithAboutPage(forumPage, {\n         id: staffOnlyCategoryId,\n         parentCategoryId: forumPage.categoryId,\n         name: \"Staff Only\",\n         slug: 'staff-only',\n         aboutPageText: \"Staff only category description.\",\n       });\n \n-      forum.categories.unlistedCategory = api.addCategoryWithAboutPage(forumPage, {\n+      forum.categories.unlistedCat =\n+            forum.categories.unlistedCategory = api.addCategoryWithAboutPage(forumPage, {\n         id: unlistedCategoryId,\n         parentCategoryId: forumPage.categoryId,\n         name: \"Unlisted Cat\",\n@@ -413,7 +447,8 @@ function buildSite(site: SiteData | U = undefined, ps: { okInitEarly?: boolean }\n         unlistCategory: true,\n       });\n \n-      forum.categories.deletedCategory = api.addCategoryWithAboutPage(forumPage, {\n+      forum.categories.deletedCat =\n+            forum.categories.deletedCategory = api.addCategoryWithAboutPage(forumPage, {\n         id: deletedCategoryId,\n         parentCategoryId: forumPage.categoryId,\n         name: \"Deleted Category\",\n@@ -447,10 +482,15 @@ function buildSite(site: SiteData | U = undefined, ps: { okInitEarly?: boolean }\n \n       // ---- Pages\n \n+      forum.topics.aboutCatA =\n       forum.topics.aboutCategoryA = { title: 'About category CategoryA' };\n+      forum.topics.aboutCatB =\n       forum.topics.aboutCategoryB = { title: 'About category CategoryB' };\n+      forum.topics.aboutUnlistedCat =\n       forum.topics.aboutUnlistedCategory = { title: 'About category Unlisted Cat' };\n-      forum.topics.aboutStaffOnlyCategory = { title: 'About category Staff Only' };\n+      forum.topics.aboutStaffCat = { title: 'About category Staff Only' };\n+      forum.topics.aboutStaffOnlyCategory = forum.topics.aboutStaffCat;\n+      forum.topics.aboutDeletedCat =\n       forum.topics.aboutDeletedCategory = { title: 'About category Deleted Category' };\n \n       forum.topics.byMariaCategoryA = api.addPage({"
    },
    {
      "sha": "a745f2049403d48528fff10794ca1f06a3e961d6",
      "filename": "version.txt",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/15a6c2abba944f4219d904ba02c0a79bd55d26d5/version.txt",
      "raw_url": "https://github.com/debiki/talkyard/raw/15a6c2abba944f4219d904ba02c0a79bd55d26d5/version.txt",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/version.txt?ref=15a6c2abba944f4219d904ba02c0a79bd55d26d5",
      "patch": "@@ -1 +1 @@\n-v0.2021.08\n+v0.2021.09"
    }
  ]
}
