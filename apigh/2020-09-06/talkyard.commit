{
  "sha": "63220cb02e4036b9ad13b5636c3eccab52a2d16a",
  "node_id": "MDY6Q29tbWl0MTA1NjMzMjI6NjMyMjBjYjAyZTQwMzZiOWFkMTNiNTYzNmMzZWNjYWI1MmEyZDE2YQ==",
  "commit": {
    "author": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2020-08-20T17:06:07Z"
    },
    "committer": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2020-08-23T09:01:34Z"
    },
    "message": "Admin area help texts.",
    "tree": {
      "sha": "cb0d4b38b0340a8334ef523bc355279b50429dbf",
      "url": "https://api.github.com/repos/debiki/talkyard/git/trees/cb0d4b38b0340a8334ef523bc355279b50429dbf"
    },
    "url": "https://api.github.com/repos/debiki/talkyard/git/commits/63220cb02e4036b9ad13b5636c3eccab52a2d16a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/debiki/talkyard/commits/63220cb02e4036b9ad13b5636c3eccab52a2d16a",
  "html_url": "https://github.com/debiki/talkyard/commit/63220cb02e4036b9ad13b5636c3eccab52a2d16a",
  "comments_url": "https://api.github.com/repos/debiki/talkyard/commits/63220cb02e4036b9ad13b5636c3eccab52a2d16a/comments",
  "author": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fdc700c26152fe0d8a16b9a4ac3cfa5810946d5a",
      "url": "https://api.github.com/repos/debiki/talkyard/commits/fdc700c26152fe0d8a16b9a4ac3cfa5810946d5a",
      "html_url": "https://github.com/debiki/talkyard/commit/fdc700c26152fe0d8a16b9a4ac3cfa5810946d5a"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 18,
    "deletions": 5
  },
  "files": [
    {
      "sha": "d4150b692e3158f43dfc8cd750471df968cd7c0f",
      "filename": "client/app-staff/admin/admin-app.staff.ts",
      "status": "modified",
      "additions": 18,
      "deletions": 5,
      "changes": 23,
      "blob_url": "https://github.com/debiki/talkyard/blob/63220cb02e4036b9ad13b5636c3eccab52a2d16a/client/app-staff/admin/admin-app.staff.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/63220cb02e4036b9ad13b5636c3eccab52a2d16a/client/app-staff/admin/admin-app.staff.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-staff/admin/admin-app.staff.ts?ref=63220cb02e4036b9ad13b5636c3eccab52a2d16a",
      "patch": "@@ -970,11 +970,17 @@ const ModerationSettings = createFactory({\n         r.h2({ className: 'col-sm-offset-3 s_A_Ss_S_Ttl'},\n           \"Require approval before\"),\n \n+        r.p({ className: 'col-sm-offset-3 s_A_Ss_Expl'},\n+          // \"Spammers are somewhat often real humans, who get paid a cent to solve CAPTCHAS \" +\n+          // \"and post spam manually. So, when a new member joins, \" +\n+          \"When a new member joins, it's good if you manually reivew and approve hens \" +\n+          \"first few posts, before the posts get published and others can see them.\"),\n+\n         r.p({ className: 'col-sm-offset-3 s_A_Ss_Expl'},\n           r.i({}, `\"You\"`), ` below refers to admins and moderators in this forum.`,\n           r.br(),\n-          r.strong({}, `\"Hen\"`), ` and `, r.strong({}, `\"hens\"`),\n-          ` means \"he or she\" and \"his or her\" (new English words).`),\n+          r.strong({}, `\"Hen\"`), ` means \"he or she\", `, r.strong({}, `\"hens\"`),\n+          ` means \"his or her\" (new English words).`),\n \n         Setting2(props, { type: 'number', min: 0, max: MaxNumFirstPosts,\n           label: \"Require approval of new members' first posts\",\n@@ -1024,13 +1030,13 @@ const ModerationSettings = createFactory({\n         Setting2(props, { type: 'number', min: 0, max: MaxNumFirstPosts,\n           label: \"Max posts pending approval\",\n           help: \"How many of a member's posts can be waiting for you to approve them. \" +\n-              \"Hen then cannot post more posts, until you've approved hens posts. \" +\n-              \"0 disables\",\n+              \"Hen then cannot post more posts, until you've approved hens earlier posts.\",\n           getter: (s: Settings) => s.maxPostsPendApprBefore,\n           update: (newSettings: Settings, target) => {\n             let num = parseInt(target.value);\n             if (_.isNaN(num)) num = currentSettings.maxPostsPendApprBefore;\n-            if (num < 0) num = 0;\n+            if (num < 0) num = 0;  // 0 disables — but usually cannot type 0,\n+                                   // because of the constraints below.\n             if (num > MaxNumFirstPosts) num = makeSmall(num);\n             if (valueOf(s => s.numFirstPostsToApprove) > num) {\n               num = newSettings.numFirstPostsToApprove;\n@@ -1046,6 +1052,13 @@ const ModerationSettings = createFactory({\n         r.h2({ className: 'col-sm-offset-3 s_A_Ss_S_Ttl'},\n           \"Review after published\"),\n \n+        r.p({ className: 'col-sm-offset-3 s_A_Ss_Expl'},\n+          \"After you've approved a new member's first few posts, \" +\n+          \"hens subsequent posts get published directly \" +\n+          \"— then, can be good if you review a few of those next posts, \" +\n+          \"just to be sure hen won't start typing weird things, \" +\n+          \"when hen notices that hens posts now are published directly.\"),\n+\n         Setting2(props, { type: 'number', min: 0, max: MaxNumFirstPosts,\n           label: \"Review new members' posts afterwards\",\n           help: \"How many of a new member's first posts you'll be notified about, \" +"
    }
  ]
}
