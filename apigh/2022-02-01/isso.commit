{
  "sha": "7d47825a2a13830c75bff77ed74f992d1030df71",
  "node_id": "C_kwDOAF-mA9oAKDdkNDc4MjVhMmExMzgzMGM3NWJmZjc3ZWQ3NGY5OTJkMTAzMGRmNzE",
  "commit": {
    "author": {
      "name": "ix5",
      "email": "ix5@users.noreply.github.com",
      "date": "2022-02-01T10:32:02Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2022-02-01T10:32:02Z"
    },
    "message": "Merge pull request #764 from ix5/configparser-interpolation\n\nconfig: Disable interpolation of values",
    "tree": {
      "sha": "b6ce85c80a26a43cf39f125d057684e1595b321b",
      "url": "https://api.github.com/repos/posativ/isso/git/trees/b6ce85c80a26a43cf39f125d057684e1595b321b"
    },
    "url": "https://api.github.com/repos/posativ/isso/git/commits/7d47825a2a13830c75bff77ed74f992d1030df71",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh+QwiCRBK7hj4Ov3rIwAAK3MIAHSbkFazrEAWkXa2UA8cuUQt\ntCtxy2bChYhECgihcFEvCVVu/vpe+ZifMaG/N4kZaOmq+NfWun3JUD2akj9ZJqMa\nPeTZxD7ocMKczgGJLib6Yie9KNqf7u1l+7ssrEahWrb84MjEj5JZFGtwp6qQbRFY\n/MQMAx6KCPw6hFLcWNPLUPEwLXDiOsF6wkfEVXct316tpCDZfB2SjbnF/yGKAjRo\n71QmY13ZqUgQj+eI0TSoWlHgq8HmWc4r1AULmQvOnWAjt2TMH4EVnBr6QRbxC+HU\nl/1OaaoApbx4zcQn5tIC7PnM7cRdETXJHp6yDI0/UEraQVpXdvlE7nxumjVwU9Q=\n=Nr6X\n-----END PGP SIGNATURE-----\n",
      "payload": "tree b6ce85c80a26a43cf39f125d057684e1595b321b\nparent abe0a9a511c05ca6d3fa3ef1c499fd98085f30e9\nparent 057ef1cfc3920dbf3cd2969260e2670f15789137\nauthor ix5 <ix5@users.noreply.github.com> 1643711522 +0100\ncommitter GitHub <noreply@github.com> 1643711522 +0100\n\nMerge pull request #764 from ix5/configparser-interpolation\n\nconfig: Disable interpolation of values"
    }
  },
  "url": "https://api.github.com/repos/posativ/isso/commits/7d47825a2a13830c75bff77ed74f992d1030df71",
  "html_url": "https://github.com/posativ/isso/commit/7d47825a2a13830c75bff77ed74f992d1030df71",
  "comments_url": "https://api.github.com/repos/posativ/isso/commits/7d47825a2a13830c75bff77ed74f992d1030df71/comments",
  "author": {
    "login": "ix5",
    "id": 10212877,
    "node_id": "MDQ6VXNlcjEwMjEyODc3",
    "avatar_url": "https://avatars.githubusercontent.com/u/10212877?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ix5",
    "html_url": "https://github.com/ix5",
    "followers_url": "https://api.github.com/users/ix5/followers",
    "following_url": "https://api.github.com/users/ix5/following{/other_user}",
    "gists_url": "https://api.github.com/users/ix5/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ix5/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ix5/subscriptions",
    "organizations_url": "https://api.github.com/users/ix5/orgs",
    "repos_url": "https://api.github.com/users/ix5/repos",
    "events_url": "https://api.github.com/users/ix5/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ix5/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "abe0a9a511c05ca6d3fa3ef1c499fd98085f30e9",
      "url": "https://api.github.com/repos/posativ/isso/commits/abe0a9a511c05ca6d3fa3ef1c499fd98085f30e9",
      "html_url": "https://github.com/posativ/isso/commit/abe0a9a511c05ca6d3fa3ef1c499fd98085f30e9"
    },
    {
      "sha": "057ef1cfc3920dbf3cd2969260e2670f15789137",
      "url": "https://api.github.com/repos/posativ/isso/commits/057ef1cfc3920dbf3cd2969260e2670f15789137",
      "html_url": "https://github.com/posativ/isso/commit/057ef1cfc3920dbf3cd2969260e2670f15789137"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 28,
    "deletions": 8
  },
  "files": [
    {
      "sha": "ef36580b560aa2a38011509f3b50dfcbfd236648",
      "filename": "isso/config.py",
      "status": "modified",
      "additions": 15,
      "deletions": 3,
      "changes": 18,
      "blob_url": "https://github.com/posativ/isso/blob/7d47825a2a13830c75bff77ed74f992d1030df71/isso/config.py",
      "raw_url": "https://github.com/posativ/isso/raw/7d47825a2a13830c75bff77ed74f992d1030df71/isso/config.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/config.py?ref=7d47825a2a13830c75bff77ed74f992d1030df71",
      "patch": "@@ -78,10 +78,22 @@ def getboolean(self, key):\n class IssoParser(ConfigParser):\n     \"\"\"Parse INI-style configuration with some modifications for Isso.\n \n-        * parse human-readable timedelta such as \"15m\" as \"15 minutes\"\n-        * handle indented lines as \"lists\"\n+        * Parse human-readable timedelta such as \"15m\" as \"15 minutes\"\n+        * Handle indented lines as \"lists\"\n+        * Disable string interpolation ('%s') for values\n     \"\"\"\n \n+    def __init__(self, *args, **kwargs):\n+        \"\"\"Supply modified defaults to configparser.ConfigParser\n+        https://docs.python.org/3.9/library/configparser.html#configparser.ConfigParser\n+        allow_no_value=True: Allow empty config keys\n+        interpolation=None:  Do not attempt to use python string interpolation on\n+                             values. This is especially important for parsing\n+                             passwords that might contain '%'\n+        \"\"\"\n+        return super(IssoParser, self).__init__(\n+            allow_no_value=True, interpolation=None, *args, **kwargs)\n+\n     def getint(self, section, key):\n         try:\n             delta = timedelta(self.get(section, key))\n@@ -107,7 +119,7 @@ def section(self, section):\n \n def new(options=None):\n \n-    cp = IssoParser(allow_no_value=True)\n+    cp = IssoParser()\n \n     if options:\n         cp.read_dict(options)"
    },
    {
      "sha": "8a15d14458158ce4f44b21a7ad57185311b6136f",
      "filename": "isso/tests/test_config.py",
      "status": "modified",
      "additions": 11,
      "deletions": 3,
      "changes": 14,
      "blob_url": "https://github.com/posativ/isso/blob/7d47825a2a13830c75bff77ed74f992d1030df71/isso/tests/test_config.py",
      "raw_url": "https://github.com/posativ/isso/raw/7d47825a2a13830c75bff77ed74f992d1030df71/isso/tests/test_config.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/tests/test_config.py?ref=7d47825a2a13830c75bff77ed74f992d1030df71",
      "patch": "@@ -10,19 +10,27 @@ class TestConfig(unittest.TestCase):\n \n     def test_parser(self):\n \n-        parser = config.IssoParser(allow_no_value=True)\n-        parser.read_file(io.StringIO(u\"\"\"\n+        parser = config.IssoParser()\n+        parser.read_file(io.StringIO(\"\"\"\n             [foo]\n             bar = 1h\n             baz = 12\n             spam = a, b, cdef\n             bla =\n                 spam\n                 ham\n-            asd = fgh\"\"\"))\n+            asd = fgh\n+            password = %s%%foo\"\"\"))\n \n         self.assertEqual(parser.getint(\"foo\", \"bar\"), 3600)\n         self.assertEqual(parser.getint(\"foo\", \"baz\"), 12)\n         self.assertEqual(parser.getlist(\"foo\", \"spam\"), ['a', 'b', 'cdef'])\n         self.assertEqual(list(parser.getiter(\"foo\", \"bla\")), ['spam', 'ham'])\n         self.assertEqual(list(parser.getiter(\"foo\", \"asd\")), ['fgh'])\n+\n+        # Strings containing '%' should not be python-interpolated\n+        self.assertEqual(parser.get(\"foo\", \"password\"), '%s%%foo')\n+\n+        # Section.get() should function the same way as plain IssoParser\n+        foosection = parser.section(\"foo\")\n+        self.assertEqual(foosection.get(\"password\"), '%s%%foo')"
    },
    {
      "sha": "feafe69b63ff4086535cd28c420b5056069bd15f",
      "filename": "isso/tests/test_utils_hash.py",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/posativ/isso/blob/7d47825a2a13830c75bff77ed74f992d1030df71/isso/tests/test_utils_hash.py",
      "raw_url": "https://github.com/posativ/isso/raw/7d47825a2a13830c75bff77ed74f992d1030df71/isso/tests/test_utils_hash.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/tests/test_utils_hash.py?ref=7d47825a2a13830c75bff77ed74f992d1030df71",
      "patch": "@@ -21,7 +21,7 @@ def test_hash(self):\n \n         self.assertRaises(TypeError, h.hash, \"...\")\n         self.assertEqual(h.hash(b\"...\"), b\"...\")\n-        self.assertIsInstance(h.uhash(u\"...\"), (str, ))\n+        self.assertIsInstance(h.uhash(\"...\"), (str, ))\n \n     def test_uhash(self):\n         h = Hash(b\"\", func=None)"
    },
    {
      "sha": "74759efbbbc842391834742134016b59d6dbed33",
      "filename": "isso/utils/parse.py",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/posativ/isso/blob/7d47825a2a13830c75bff77ed74f992d1030df71/isso/utils/parse.py",
      "raw_url": "https://github.com/posativ/isso/raw/7d47825a2a13830c75bff77ed74f992d1030df71/isso/utils/parse.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/utils/parse.py?ref=7d47825a2a13830c75bff77ed74f992d1030df71",
      "patch": "@@ -9,7 +9,7 @@\n import html5lib\n \n \n-def thread(data, default=u\"Untitled.\", id=None):\n+def thread(data, default=\"Untitled.\", id=None):\n     \"\"\"\n     Extract <h1> title from web page. The title is *probably* the text node,\n     which is the nearest H1 node in context to an element with the `isso-thread` id."
    }
  ]
}
