{
  "sha": "ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOmVkM2NkMTk3ZGQ0MTkxMWU3NmRmZWUyYmIxNGM1MjJhMGQ1Yzk1M2I=",
  "commit": {
    "author": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2021-01-03T09:55:00Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2021-01-03T09:55:00Z"
    },
    "message": "bump deps",
    "tree": {
      "sha": "4f50a97d8ca54e919717206ffd9a7201d63a0c5b",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/4f50a97d8ca54e919717206ffd9a7201d63a0c5b"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
  "html_url": "https://github.com/umputun/remark42/commit/ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/comments",
  "author": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a0b2bbf1edda01a89f50c0fb56d757ec26c464aa",
      "url": "https://api.github.com/repos/umputun/remark42/commits/a0b2bbf1edda01a89f50c0fb56d757ec26c464aa",
      "html_url": "https://github.com/umputun/remark42/commit/a0b2bbf1edda01a89f50c0fb56d757ec26c464aa"
    }
  ],
  "stats": {
    "total": 3326,
    "additions": 2945,
    "deletions": 381
  },
  "files": [
    {
      "sha": "e15bec3156cdf3c810199e063312d86b1b40ffad",
      "filename": "backend/app/cmd/server.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/app/cmd/server.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/app/cmd/server.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/cmd/server.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -977,5 +977,5 @@ func (c *authRefreshCache) Get(key interface{}) (interface{}, bool) {\n \n // Set implements cache setter with key converted to string\n func (c *authRefreshCache) Set(key, value interface{}) {\n-\t_, _ = c.LoadingCache.Get(key.(string), func() (cache.Value, error) { return value, nil })\n+\t_, _ = c.LoadingCache.Get(key.(string), func() (interface{}, error) { return value, nil })\n }"
    },
    {
      "sha": "a16c52013df81e0b1fd58d73c5803c5849c73f33",
      "filename": "backend/app/store/service/service.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/app/store/service/service.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/app/store/service/service.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/store/service/service.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -507,7 +507,7 @@ func (s *DataStore) HasReplies(comment store.Comment) bool {\n \t\t\t\t// When this code is reached, key \"comment.ID\" is not in cache.\n \t\t\t\t// Calling cache.Get on it will put it in cache with 5 minutes TTL.\n \t\t\t\t// We call it with empty struct as value as we care about keys and not values.\n-\t\t\t\t_, _ = s.repliesCache.Get(comment.ID, func() (lcw.Value, error) { return struct{}{}, nil })\n+\t\t\t\t_, _ = s.repliesCache.Get(comment.ID, func() (interface{}, error) { return struct{}{}, nil })\n \t\t\t\treturn true\n \t\t\t}\n \t\t}"
    },
    {
      "sha": "e30f12c90045476514ce7b1f076178cd5a53ba68",
      "filename": "backend/app/store/service/title.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/app/store/service/title.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/app/store/service/title.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/store/service/title.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -40,7 +40,7 @@ func NewTitleExtractor(client http.Client) *TitleExtractor {\n // Get page for url and return title\n func (t *TitleExtractor) Get(url string) (string, error) {\n \tclient := http.Client{Timeout: t.client.Timeout, Transport: t.client.Transport}\n-\tb, err := t.cache.Get(url, func() (lcw.Value, error) {\n+\tb, err := t.cache.Get(url, func() (interface{}, error) {\n \t\tresp, err := client.Get(url)\n \t\tif err != nil {\n \t\t\treturn nil, errors.Wrapf(err, \"failed to load page %s\", url)\n@@ -63,7 +63,7 @@ func (t *TitleExtractor) Get(url string) (string, error) {\n \n \t// on error save result (empty string) to cache too and return \"\" title\n \tif err != nil {\n-\t\t_, _ = t.cache.Get(url, func() (lcw.Value, error) { return \"\", nil })\n+\t\t_, _ = t.cache.Get(url, func() (interface{}, error) { return \"\", nil })\n \t\treturn \"\", err\n \t}\n "
    },
    {
      "sha": "fdbbf05a4486dd36a9d981265a6626c6a8543676",
      "filename": "backend/go.mod",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/go.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/go.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/go.mod?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -14,23 +14,23 @@ require (\n \tgithub.com/go-chi/render v1.0.1\n \tgithub.com/go-pkgz/auth v1.13.1\n \tgithub.com/go-pkgz/jrpc v0.2.0\n-\tgithub.com/go-pkgz/lcw v0.7.1\n-\tgithub.com/go-pkgz/lgr v0.7.0\n+\tgithub.com/go-pkgz/lcw v0.8.1\n+\tgithub.com/go-pkgz/lgr v0.10.4\n \tgithub.com/go-pkgz/repeater v1.1.3\n \tgithub.com/go-pkgz/rest v1.5.0\n \tgithub.com/go-pkgz/syncs v1.1.1\n-\tgithub.com/google/uuid v1.1.1\n+\tgithub.com/google/uuid v1.1.2\n \tgithub.com/gorilla/feeds v1.1.1\n \tgithub.com/hashicorp/go-multierror v1.1.0\n \tgithub.com/kyokomi/emoji v2.2.1+incompatible\n \tgithub.com/microcosm-cc/bluemonday v1.0.2\n \tgithub.com/pkg/errors v0.9.1\n \tgithub.com/rakyll/statik v0.1.7\n \tgithub.com/rs/xid v1.2.1\n-\tgithub.com/russross/blackfriday/v2 v2.0.1\n+\tgithub.com/russross/blackfriday/v2 v2.1.0\n \tgithub.com/stretchr/testify v1.6.1\n \tgithub.com/umputun/go-flags v1.5.1\n-\tgo.etcd.io/bbolt v1.3.4\n+\tgo.etcd.io/bbolt v1.3.5\n \tgo.uber.org/goleak v1.0.0\n \tgolang.org/x/crypto v0.0.0-20200406173513-056763e48d71\n \tgolang.org/x/image v0.0.0-20200119044424-58c23975cae1"
    },
    {
      "sha": "20942744509933244dfea574f982370af7934030",
      "filename": "backend/go.sum",
      "status": "modified",
      "additions": 12,
      "deletions": 8,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/go.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/go.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/go.sum?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -64,18 +64,18 @@ github.com/go-pkgz/expirable-cache v0.0.3 h1:rTh6qNPp78z0bQE6HDhXBHUwqnV9i09Vm6d\n github.com/go-pkgz/expirable-cache v0.0.3/go.mod h1:+IauqN00R2FqNRLCLA+X5YljQJrwB179PfiAoMPlTlQ=\n github.com/go-pkgz/jrpc v0.2.0 h1:CLy/eZyekjraVrxZV18N2R1mYLMJ/nWrgdfyIOGPY/E=\n github.com/go-pkgz/jrpc v0.2.0/go.mod h1:wd8vtQ4CgtCnuqua6x2b1SKIgv0VSOh5Dn0uUITbiUE=\n-github.com/go-pkgz/lcw v0.7.1 h1:2Q2k1am6xb2KgxZG84kL072q66rlWFUR+MvgPcDcJXA=\n-github.com/go-pkgz/lcw v0.7.1/go.mod h1:3P6g9QrJsDePXEMe42ywO+tW08L17tBJGwIDdI7lZ6g=\n-github.com/go-pkgz/lgr v0.7.0 h1:S/AAPwt/RE9a5mNJskA7dGVp+Dq6SMIW6LYjG3ITxY8=\n-github.com/go-pkgz/lgr v0.7.0/go.mod h1:yMgxU+GobMRJgIEbSzDKy/67W18S7qmGx/7BVL5AB8Q=\n+github.com/go-pkgz/lcw v0.8.1 h1:Bpt2yYTE1J8hIhz8tjdm1WPOgH13eo5iTNsXyop7cMQ=\n+github.com/go-pkgz/lcw v0.8.1/go.mod h1:Xw0/ZfApATgbjVPYRZO4XHdWyxAjErDWDWJ7TLlw1Vc=\n+github.com/go-pkgz/lgr v0.10.4 h1:l7qyFjqEZgwRgaQQSEp6tve4A3OU80VrfzpvtEX8ngw=\n+github.com/go-pkgz/lgr v0.10.4/go.mod h1:CD0s1z6EFpIUplV067gitF77tn25JItzwHNKAPqeCF0=\n github.com/go-pkgz/repeater v1.1.3 h1:q6+JQF14ESSy28Dd7F+wRelY4F+41HJ0LEy/szNnMiE=\n github.com/go-pkgz/repeater v1.1.3/go.mod h1:hVTavuO5x3Gxnu8zW7d6sQBfAneKV8X2FjU48kGfpKw=\n github.com/go-pkgz/rest v1.5.0 h1:C8SxXcXza4GiUUAn/95iCkvoIrGbS30qpwK19iqlrWQ=\n github.com/go-pkgz/rest v1.5.0/go.mod h1:nQaM3RhSTUAmbBZWY4hfe4buyeC9VckvhoCktiQXJxI=\n github.com/go-pkgz/syncs v1.1.1 h1:jWN+y6FS/Xe+8z4l3QMbSnODGyaxDHGojIS+wyKIjxg=\n github.com/go-pkgz/syncs v1.1.1/go.mod h1:bt9lxWRRJ9vOCMGc8Big8ttjYHLKP88ofj1y38UlaHE=\n-github.com/go-redis/redis/v7 v7.2.0 h1:CrCexy/jYWZjW0AyVoHlcJUeZN19VWlbepTh1Vq6dJs=\n-github.com/go-redis/redis/v7 v7.2.0/go.mod h1:JDNMw23GTyLNC4GZu9njt15ctBQVn7xjRfnwdHj/Dcg=\n+github.com/go-redis/redis/v7 v7.4.0 h1:7obg6wUoj05T0EpY0o8B59S9w5yeMWql7sw2kwNW1x4=\n+github.com/go-redis/redis/v7 v7.4.0/go.mod h1:JDNMw23GTyLNC4GZu9njt15ctBQVn7xjRfnwdHj/Dcg=\n github.com/go-session/session v3.1.2+incompatible/go.mod h1:8B3iivBQjrz/JtC68Np2T1yBBLxTan3mn/3OM0CyRt0=\n github.com/go-sql-driver/mysql v1.5.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=\n github.com/go-stack/stack v1.8.0 h1:5SgMzNM5HxrEjV0ww2lTmX6E2Izsfxas4+YHWRs3Lsk=\n@@ -115,8 +115,8 @@ github.com/google/go-cmp v0.5.2 h1:X2ev0eStA3AbceY54o37/0PQ/UWqKEiiO2dKL5OPaFM=\n github.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\n github.com/google/go-querystring v1.0.0 h1:Xkwi/a1rcvNg1PPYe5vI8GbeBY/jrVuDX5ASuANWTrk=\n github.com/google/go-querystring v1.0.0/go.mod h1:odCYkC5MyYFN7vkCjXpyrEuKhc/BUO6wN/zVPAxq5ck=\n-github.com/google/uuid v1.1.1 h1:Gkbcsh/GbpXz7lPftLA3P6TYMwjCLYm83jiFQZF/3gY=\n-github.com/google/uuid v1.1.1/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\n+github.com/google/uuid v1.1.2 h1:EVhdT+1Kseyi1/pUmXKaFxYsDNy9RQYkMWRH68J/W7Y=\n+github.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\n github.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1 h1:EGx4pi6eqNxGaHF6qqu48+N2wcFQ5qg5FXgOdqsJ5d8=\n github.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\n github.com/gorilla/feeds v1.1.1 h1:HwKXxqzcRNg9to+BbvJog4+f3s/xzvtZXICcQGutYfY=\n@@ -197,6 +197,8 @@ github.com/rs/xid v1.2.1 h1:mhH9Nq+C1fY2l1XIpgxIiUOfNpRBYH1kKcr+qfKgjRc=\n github.com/rs/xid v1.2.1/go.mod h1:+uKXf+4Djp6Md1KODXJxgGQPKngRmWyn10oCKFzNHOQ=\n github.com/russross/blackfriday/v2 v2.0.1 h1:lPqVAte+HuHNfhJ/0LC98ESWRz8afy9tM/0RK8m9o+Q=\n github.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\n+github.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\n+github.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\n github.com/sergi/go-diff v1.0.0 h1:Kpca3qRNrduNnOQeazBd0ysaKrUJiIuISHxogkT9RPQ=\n github.com/sergi/go-diff v1.0.0/go.mod h1:0CfEIISq7TuYL3j771MWULgwwjU+GofnZX9QAmXWZgo=\n github.com/shurcooL/sanitized_anchor_name v1.0.0 h1:PdmoCO6wvbs+7yrJyMORt4/BmY5IYyJwS/kOiWx8mHo=\n@@ -266,6 +268,8 @@ github.com/yuin/gopher-lua v0.0.0-20191220021717-ab39c6098bdb h1:ZkM6LRnq40pR1Ox\n github.com/yuin/gopher-lua v0.0.0-20191220021717-ab39c6098bdb/go.mod h1:gqRgreBUhTSL0GeU64rtZ3Uq3wtjOa/TB2YfrtkCbVQ=\n go.etcd.io/bbolt v1.3.4 h1:hi1bXHMVrlQh6WwxAy+qZCV/SYIlqo+Ushwdpa4tAKg=\n go.etcd.io/bbolt v1.3.4/go.mod h1:G5EMThwa9y8QZGBClrRx5EY+Yw9kAhnjy3bSjsnlVTQ=\n+go.etcd.io/bbolt v1.3.5 h1:XAzx9gjCb0Rxj7EoqcClPD1d5ZBxZJk0jbuoPHenBt0=\n+go.etcd.io/bbolt v1.3.5/go.mod h1:G5EMThwa9y8QZGBClrRx5EY+Yw9kAhnjy3bSjsnlVTQ=\n go.mongodb.org/mongo-driver v1.4.4 h1:bsPHfODES+/yx2PCWzUYMH8xj6PVniPI8DQrsJuSXSs=\n go.mongodb.org/mongo-driver v1.4.4/go.mod h1:WcMNYLx/IlOxLe6JRJiv2uXuCz6zBLndR4SoGjYphSc=\n go.uber.org/goleak v1.0.0 h1:qsup4IcBdlmsnGfqyLl4Ntn3C2XCCuKAE7DwHpScyUo="
    },
    {
      "sha": "56f9f0a1f1751ee61a0dce5a462896064de811f1",
      "filename": "backend/vendor/github.com/go-pkgz/lcw/cache.go",
      "status": "modified",
      "additions": 16,
      "deletions": 16,
      "changes": 32,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lcw/cache.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lcw/cache.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-pkgz/lcw/cache.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -12,9 +12,6 @@ import (\n \t\"fmt\"\n )\n \n-// Value type wraps interface{}\n-type Value interface{}\n-\n // Sizer allows to perform size-based restrictions, optional.\n // If not defined both maxValueSize and maxCacheSize checks will be ignored\n type Sizer interface {\n@@ -23,14 +20,14 @@ type Sizer interface {\n \n // LoadingCache defines guava-like cache with Get method returning cached value ao retrieving it if not in cache\n type LoadingCache interface {\n-\tGet(key string, fn func() (Value, error)) (val Value, err error) // load or get from cache\n-\tPeek(key string) (Value, bool)                                   // get from cache by key\n-\tInvalidate(fn func(key string) bool)                             // invalidate items for func(key) == true\n-\tDelete(key string)                                               // delete by key\n-\tPurge()                                                          // clear cache\n-\tStat() CacheStat                                                 // cache stats\n-\tKeys() []string                                                  // list of all keys\n-\tClose() error                                                    // close open connections\n+\tGet(key string, fn func() (interface{}, error)) (val interface{}, err error) // load or get from cache\n+\tPeek(key string) (interface{}, bool)                                         // get from cache by key\n+\tInvalidate(fn func(key string) bool)                                         // invalidate items for func(key) == true\n+\tDelete(key string)                                                           // delete by key\n+\tPurge()                                                                      // clear cache\n+\tStat() CacheStat                                                             // cache stats\n+\tKeys() []string                                                              // list of all keys\n+\tClose() error                                                                // close open connections\n }\n \n // CacheStat represent stats values\n@@ -44,8 +41,12 @@ type CacheStat struct {\n \n // String formats cache stats\n func (s CacheStat) String() string {\n-\treturn fmt.Sprintf(\"{hits:%d, misses:%d, ratio:%.1f%%, keys:%d, size:%d, errors:%d}\",\n-\t\ts.Hits, s.Misses, 100*(float64(s.Hits)/float64(s.Hits+s.Misses)), s.Keys, s.Size, s.Errors)\n+\tratio := 0.0\n+\tif s.Hits+s.Misses > 0 {\n+\t\tratio = float64(s.Hits) / float64(s.Hits+s.Misses)\n+\t}\n+\treturn fmt.Sprintf(\"{hits:%d, misses:%d, ratio:%.2f, keys:%d, size:%d, errors:%d}\",\n+\t\ts.Hits, s.Misses, ratio, s.Keys, s.Size, s.Errors)\n }\n \n // Nop is do-nothing implementation of LoadingCache\n@@ -57,10 +58,10 @@ func NewNopCache() *Nop {\n }\n \n // Get calls fn without any caching\n-func (n *Nop) Get(key string, fn func() (Value, error)) (Value, error) { return fn() }\n+func (n *Nop) Get(key string, fn func() (interface{}, error)) (interface{}, error) { return fn() }\n \n // Peek does nothing and always returns false\n-func (n *Nop) Peek(key string) (Value, bool) { return nil, false }\n+func (n *Nop) Peek(key string) (interface{}, bool) { return nil, false }\n \n // Invalidate does nothing for nop cache\n func (n *Nop) Invalidate(fn func(key string) bool) {}\n@@ -83,4 +84,3 @@ func (n *Nop) Stat() CacheStat {\n func (n *Nop) Close() error {\n \treturn nil\n }\n-"
    },
    {
      "sha": "5e114b3d431783240eb76bfb5d06318eadaf53b5",
      "filename": "backend/vendor/github.com/go-pkgz/lcw/expirable_cache.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lcw/expirable_cache.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lcw/expirable_cache.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-pkgz/lcw/expirable_cache.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -69,7 +69,7 @@ func NewExpirableCache(opts ...Option) (*ExpirableCache, error) {\n }\n \n // Get gets value by key or load with fn if not found in cache\n-func (c *ExpirableCache) Get(key string, fn func() (Value, error)) (data Value, err error) {\n+func (c *ExpirableCache) Get(key string, fn func() (interface{}, error)) (data interface{}, err error) {\n \tif v, ok := c.backend.Get(key); ok {\n \t\tatomic.AddInt64(&c.Hits, 1)\n \t\treturn v, nil\n@@ -104,7 +104,7 @@ func (c *ExpirableCache) Invalidate(fn func(key string) bool) {\n }\n \n // Peek returns the key value (or undefined if not found) without updating the \"recently used\"-ness of the key.\n-func (c *ExpirableCache) Peek(key string) (Value, bool) {\n+func (c *ExpirableCache) Peek(key string) (interface{}, bool) {\n \treturn c.backend.Peek(key)\n }\n \n@@ -156,7 +156,7 @@ func (c *ExpirableCache) keys() int {\n \treturn c.backend.ItemCount()\n }\n \n-func (c *ExpirableCache) allowed(key string, data Value) bool {\n+func (c *ExpirableCache) allowed(key string, data interface{}) bool {\n \tif c.backend.ItemCount() >= c.maxKeys {\n \t\treturn false\n \t}"
    },
    {
      "sha": "dc6623f74a966f9661679cb306a411aa282e767a",
      "filename": "backend/vendor/github.com/go-pkgz/lcw/go.mod",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lcw/go.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lcw/go.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-pkgz/lcw/go.mod?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -1,13 +1,13 @@\n module github.com/go-pkgz/lcw\n \n+go 1.15\n+\n require (\n \tgithub.com/alicebob/miniredis/v2 v2.11.4\n-\tgithub.com/go-redis/redis/v7 v7.2.0\n-\tgithub.com/google/uuid v1.1.1\n+\tgithub.com/go-redis/redis/v7 v7.4.0\n+\tgithub.com/google/uuid v1.1.2\n \tgithub.com/hashicorp/go-multierror v1.1.0\n \tgithub.com/hashicorp/golang-lru v0.5.4\n \tgithub.com/pkg/errors v0.9.1\n-\tgithub.com/stretchr/testify v1.5.1\n+\tgithub.com/stretchr/testify v1.6.1\n )\n-\n-go 1.13"
    },
    {
      "sha": "a1f4244f068641f5bc82b4647ce1ff338db412e3",
      "filename": "backend/vendor/github.com/go-pkgz/lcw/go.sum",
      "status": "modified",
      "additions": 9,
      "deletions": 7,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lcw/go.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lcw/go.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-pkgz/lcw/go.sum?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -9,15 +9,15 @@ github.com/davecgh/go-spew v1.1.0 h1:ZDRjVQ15GmhC3fiQ8ni8+OwkZQO4DARzQgrnXU1Liz8\n github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n github.com/fsnotify/fsnotify v1.4.7 h1:IXs+QLmnXW2CcXuY+8Mzv/fWEsPGWxqefPtCP5CnV9I=\n github.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\n-github.com/go-redis/redis/v7 v7.2.0 h1:CrCexy/jYWZjW0AyVoHlcJUeZN19VWlbepTh1Vq6dJs=\n-github.com/go-redis/redis/v7 v7.2.0/go.mod h1:JDNMw23GTyLNC4GZu9njt15ctBQVn7xjRfnwdHj/Dcg=\n+github.com/go-redis/redis/v7 v7.4.0 h1:7obg6wUoj05T0EpY0o8B59S9w5yeMWql7sw2kwNW1x4=\n+github.com/go-redis/redis/v7 v7.4.0/go.mod h1:JDNMw23GTyLNC4GZu9njt15ctBQVn7xjRfnwdHj/Dcg=\n github.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\n github.com/golang/protobuf v1.3.2 h1:6nsPYzhq5kReh6QImI3k5qWzO4PEbvbIW2cwSfR/6xs=\n github.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\n github.com/gomodule/redigo v1.7.1-0.20190322064113-39e2c31b7ca3 h1:6amM4HsNPOvMLVc2ZnyqrjeQ92YAVWn7T4WBKK87inY=\n github.com/gomodule/redigo v1.7.1-0.20190322064113-39e2c31b7ca3/go.mod h1:B4C85qUVwatsJoIUNIfCRsp7qO0iAmpGFZ4EELWSbC4=\n-github.com/google/uuid v1.1.1 h1:Gkbcsh/GbpXz7lPftLA3P6TYMwjCLYm83jiFQZF/3gY=\n-github.com/google/uuid v1.1.1/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\n+github.com/google/uuid v1.1.2 h1:EVhdT+1Kseyi1/pUmXKaFxYsDNy9RQYkMWRH68J/W7Y=\n+github.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\n github.com/hashicorp/errwrap v1.0.0 h1:hLrqtEDnRye3+sgx6z4qVLNuviH3MR5aQ0ykNJa/UYA=\n github.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\n github.com/hashicorp/go-multierror v1.1.0 h1:B9UzwGQJehnUY1yNrnwREHc3fGbC2xefo8g4TbElacI=\n@@ -40,9 +40,10 @@ github.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\n github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\n github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\n+github.com/stretchr/objx v0.1.0 h1:4G4v2dO3VZwixGIRoQ5Lfboy6nUhCyYzaqnIAPPhYs4=\n github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\n-github.com/stretchr/testify v1.5.1 h1:nOGnQDM7FYENwehXlg/kFVnos3rEvtKTjRvOWSzb6H4=\n-github.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\n+github.com/stretchr/testify v1.6.1 h1:hDPOHmpOpP40lSULcqw7IrRb/u7w6RpDC9399XyoNd0=\n+github.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\n github.com/yuin/gopher-lua v0.0.0-20191220021717-ab39c6098bdb h1:ZkM6LRnq40pR1Ox0hTHlnpkcOTuFIDQpZ1IN8rKKhX0=\n github.com/yuin/gopher-lua v0.0.0-20191220021717-ab39c6098bdb/go.mod h1:gqRgreBUhTSL0GeU64rtZ3Uq3wtjOa/TB2YfrtkCbVQ=\n golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\n@@ -67,6 +68,7 @@ gopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMy\n gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=\n gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\n gopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\n-gopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\n gopkg.in/yaml.v2 v2.2.4 h1:/eiJrUcujPVeJ3xlSWaiNi3uSVmDGBK1pDHUHAnao1I=\n gopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\n+gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c h1:dUUwHk2QECo/6vqA44rthZ8ie2QXMNeKRTHCNY2nXvo=\n+gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM="
    },
    {
      "sha": "ba3c3b3dddd8c8a58e4603f8b272855d9cbc4922",
      "filename": "backend/vendor/github.com/go-pkgz/lcw/lru_cache.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lcw/lru_cache.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lcw/lru_cache.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-pkgz/lcw/lru_cache.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -65,7 +65,7 @@ func (c *LruCache) init() error {\n }\n \n // Get gets value by key or load with fn if not found in cache\n-func (c *LruCache) Get(key string, fn func() (Value, error)) (data Value, err error) {\n+func (c *LruCache) Get(key string, fn func() (interface{}, error)) (data interface{}, err error) {\n \tif v, ok := c.backend.Get(key); ok {\n \t\tatomic.AddInt64(&c.Hits, 1)\n \t\treturn v, nil\n@@ -97,7 +97,7 @@ func (c *LruCache) Get(key string, fn func() (Value, error)) (data Value, err er\n }\n \n // Peek returns the key value (or undefined if not found) without updating the \"recently used\"-ness of the key.\n-func (c *LruCache) Peek(key string) (Value, bool) {\n+func (c *LruCache) Peek(key string) (interface{}, bool) {\n \treturn c.backend.Peek(key)\n }\n \n@@ -162,7 +162,7 @@ func (c *LruCache) keys() int {\n \treturn c.backend.Len()\n }\n \n-func (c *LruCache) allowed(key string, data Value) bool {\n+func (c *LruCache) allowed(key string, data interface{}) bool {\n \tif c.maxKeySize > 0 && len(key) > c.maxKeySize {\n \t\treturn false\n \t}"
    },
    {
      "sha": "b46dad20841c0f2e019a7237b8dddc82676e21ec",
      "filename": "backend/vendor/github.com/go-pkgz/lcw/options.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lcw/options.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lcw/options.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-pkgz/lcw/options.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -13,7 +13,7 @@ type options struct {\n \tmaxKeySize   int\n \tmaxCacheSize int64\n \tttl          time.Duration\n-\tonEvicted    func(key string, value Value)\n+\tonEvicted    func(key string, value interface{})\n \teventBus     eventbus.PubSub\n }\n \n@@ -81,7 +81,7 @@ func TTL(ttl time.Duration) Option {\n }\n \n // OnEvicted sets callback on invalidation event\n-func OnEvicted(fn func(key string, value Value)) Option {\n+func OnEvicted(fn func(key string, value interface{})) Option {\n \treturn func(o *options) error {\n \t\to.onEvicted = fn\n \t\treturn nil"
    },
    {
      "sha": "b7353a3306498c67157b1237fe7e754d0e610c7d",
      "filename": "backend/vendor/github.com/go-pkgz/lcw/redis_cache.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lcw/redis_cache.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lcw/redis_cache.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-pkgz/lcw/redis_cache.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -41,7 +41,7 @@ func NewRedisCache(backend *redis.Client, opts ...Option) (*RedisCache, error) {\n }\n \n // Get gets value by key or load with fn if not found in cache\n-func (c *RedisCache) Get(key string, fn func() (Value, error)) (data Value, err error) {\n+func (c *RedisCache) Get(key string, fn func() (interface{}, error)) (data interface{}, err error) {\n \tv, getErr := c.backend.Get(key).Result()\n \tswitch getErr {\n \t// RedisClient returns nil when find a key in DB\n@@ -84,7 +84,7 @@ func (c *RedisCache) Invalidate(fn func(key string) bool) {\n }\n \n // Peek returns the key value (or undefined if not found) without updating the \"recently used\"-ness of the key.\n-func (c *RedisCache) Peek(key string) (Value, bool) {\n+func (c *RedisCache) Peek(key string) (interface{}, bool) {\n \tret, err := c.backend.Get(key).Result()\n \tif err != nil {\n \t\treturn nil, false\n@@ -132,7 +132,7 @@ func (c *RedisCache) keys() int {\n \treturn int(c.backend.DBSize().Val())\n }\n \n-func (c *RedisCache) allowed(key string, data Value) bool {\n+func (c *RedisCache) allowed(key string, data interface{}) bool {\n \tif c.maxKeys > 0 && c.backend.DBSize().Val() >= int64(c.maxKeys) {\n \t\treturn false\n \t}"
    },
    {
      "sha": "fe9023d41128e710ca090925899d4c67e89eef90",
      "filename": "backend/vendor/github.com/go-pkgz/lcw/scache.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lcw/scache.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lcw/scache.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-pkgz/lcw/scache.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -20,7 +20,7 @@ func NewScache(lc LoadingCache) *Scache {\n // Get retrieves a key from underlying backend\n func (m *Scache) Get(key Key, fn func() ([]byte, error)) (data []byte, err error) {\n \tkeyStr := key.String()\n-\tval, err := m.lc.Get(keyStr, func() (value Value, e error) {\n+\tval, err := m.lc.Get(keyStr, func() (value interface{}, e error) {\n \t\treturn fn()\n \t})\n \treturn val.([]byte), err"
    },
    {
      "sha": "23fd915e30aacf3c32ea47c7af6ebe3ef22e8240",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/.golangci.yml",
      "status": "modified",
      "additions": 18,
      "deletions": 8,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lgr/.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lgr/.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-pkgz/lgr/.golangci.yml?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -23,11 +23,12 @@ linters-settings:\n       - experimental\n     disabled-checks:\n       - wrapperFunc\n+      - hugeParam\n \n linters:\n-  disable-all: true\n   enable:\n     - megacheck\n+    - golint\n     - govet\n     - unconvert\n     - megacheck\n@@ -42,19 +43,28 @@ linters:\n     - typecheck\n     - ineffassign\n     - varcheck\n+    - stylecheck\n+    - gochecknoinits\n+    - scopelint\n+    - gocritic\n+    - nakedret\n+    - gosimple\n+    - prealloc\n   fast: false\n-\n+  disable-all: true\n \n run:\n-#  modules-download-mode: vendor\n+  output:\n+    format: tab\n   skip-dirs:\n     - vendor\n \n issues:\n   exclude-rules:\n-    - text: \"weak cryptographic primitive\"\n+    - text: \"should have a package comment, unless it's in another file for this package\"\n       linters:\n-        - gosec\n-\n-service:\n-  golangci-lint-version: 1.16.x\n\\ No newline at end of file\n+        - golint\n+    - text: \"at least one file in a package should have a package comment\"\n+      linters:\n+        - stylecheck\n+  exclude-use-default: false"
    },
    {
      "sha": "c1b684bfdd131c354389d84f2b103eba2eaf9536",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/LICENSE",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lgr/LICENSE",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lgr/LICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-pkgz/lgr/LICENSE?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -1,6 +1,6 @@\n MIT License\n \n-Copyright (c) 2019 Umputun\n+Copyright (c) 2020 Umputun\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
    },
    {
      "sha": "f01f999a55f3643ea5179889362333adb2a1b518",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/README.md",
      "status": "modified",
      "additions": 38,
      "deletions": 9,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lgr/README.md",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lgr/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-pkgz/lgr/README.md?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -1,4 +1,5 @@\n-# lgr - simple logger with some extras [![Build Status](https://github.com/go-pkgz/lgr/workflows/build/badge.svg)](https://github.com/go-pkgz/lgr/actions) [![Coverage Status](https://coveralls.io/repos/github/go-pkgz/lgr/badge.svg?branch=master)](https://coveralls.io/github/go-pkgz/lgr?branch=master) [![godoc](https://godoc.org/github.com/go-pkgz/lgr?status.svg)](https://godoc.org/github.com/go-pkgz/lgr)\n+# lgr - simple logger with some extras \n+[![Build Status](https://github.com/go-pkgz/lgr/workflows/build/badge.svg)](https://github.com/go-pkgz/lgr/actions) [![Coverage Status](https://coveralls.io/repos/github/go-pkgz/lgr/badge.svg?branch=master)](https://coveralls.io/github/go-pkgz/lgr?branch=master) [![godoc](https://godoc.org/github.com/go-pkgz/lgr?status.svg)](https://godoc.org/github.com/go-pkgz/lgr)\n \n ## install\n \n@@ -24,7 +25,7 @@ _Without `lgr.Caller*` it will drop `{caller}` part_\n \n ### interfaces and default loggers\n \n-- `lgr` package provides a single interface `lgr.L` with a single method `Logf(format string, args ...interface{})`. Function wrapper `lgr.Func` allows to make `lgr.L` from a function directly.\n+- `lgr` package provides a single interface `lgr.L` with a single method `Logf(format string, args ...interface{})`. Function wrapper `lgr.Func` allows making `lgr.L` from a function directly.\n - Default logger functionality can be used without `lgr.New` (see \"global logger\")\n - Two predefined loggers available: `lgr.NoOp` (do-nothing logger) and `lgr.Std` (passing directly to stdlib log)\n \n@@ -41,8 +42,10 @@ _Without `lgr.Caller*` it will drop `{caller}` part_\n - `lgr.CallerPkg` - adds the caller package\n - `lgr.LevelBraces` - wraps levels with \"[\" and \"]\"\n - `lgr.Msec` - adds milliseconds to timestamp\n-- `lgr.Format` - sets custom template, overwrite all other formatting modifiers.\n+- `lgr.Format` - sets a custom template, overwrite all other formatting modifiers.\n - `lgr.Secret(secret ...)` - sets list of the secrets to hide from the logging outputs.\n+- `lgr.Map(mapper)` - sets mapper functions to change elements of the logging output based on levels.\n+- `lgr.StackTraceOnError` - turns on stack trace for ERROR level.\n \n example: `l := lgr.New(lgr.Debug, lgr.Msec)`\n \n@@ -61,35 +64,61 @@ Several predefined templates provided and can be passed directly to `lgr.Format`\n \n User can make a custom template and pass it directly to `lgr.Format`. For example:\n \n-```go    \n+```go\n     lgr.Format(`{{.Level}} - {{.DT.Format \"2006-01-02T15:04:05Z07:00\"}} - {{.CallerPkg}} - {{.Message}}`)\n ```\n \n _Note: formatter (predefined or custom) adds measurable overhead - the cost will depend on the version of Go, but is between 30\n  and 50% in recent tests with 1.12. You can validate this in your environment via benchmarks: `go test -bench=. -run=Bench`_\n-    \n+\n ### levels\n \n-`lgr.Logf` recognizes prefixes like \"INFO\" or \"[INFO]\" as levels. The full list of supported levels - \"TRACE\", \"DEBUG\", \"INFO\", \"WARN\", \"ERROR\", \"PANIC\" and \"FATAL\"\n+`lgr.Logf` recognize prefixes like `INFO` or `[INFO]` as levels. The full list of supported levels - `TRACE`, `DEBUG`, `INFO`, `WARN`, `ERROR`, `PANIC` and `FATAL`.\n \n - `TRACE` will be filtered unless `lgr.Trace` option defined\n - `DEBUG` will be filtered unless `lgr.Debug` or `lgr.Trace` options defined\n - `INFO` and `WARN` don't have any special behavior attached\n - `ERROR` sends messages to both out and err writers\n - `FATAL` and send messages to both out and err writers and exit(1)\n - `PANIC` does the same as `FATAL` but in addition sends dump of callers and runtime info to err.\n- \n+\n+### mapper\n+\n+Elements of the output can be altered with a set of user defined function passed as `lgr.Map` options. Such a mapper changes\n+the value of an element (i.e. timestamp, level, message, caller) and has separate functions for each level. Note: both level \n+and messages elements handled by the same function for a given level. \n+\n+_A typical use-case is to produce colorful output with a user-define colorization library._\n+\n+example with [fatih/color](https://github.com/fatih/color):\n+\n+```go\n+\tcolorizer := lgr.Mapper{\n+\t\tErrorFunc:  func(s string) string { return color.New(color.FgHiRed).Sprint(s) },\n+\t\tWarnFunc:   func(s string) string { return color.New(color.FgHiYellow).Sprint(s) },\n+\t\tInfoFunc:   func(s string) string { return color.New(color.FgHiWhite).Sprint(s) },\n+\t\tDebugFunc:  func(s string) string { return color.New(color.FgWhite).Sprint(s) },\n+\t\tCallerFunc: func(s string) string { return color.New(color.FgBlue).Sprint(s) },\n+\t\tTimeFunc:   func(s string) string { return color.New(color.FgCyan).Sprint(s) },\n+\t}\n+\n+\tlogOpts := []lgr.Option{lgr.Msec, lgr.LevelBraces, lgr.Map(colorizer)}\n+```\n ### adaptors\n \n `lgr` logger can be converted to `io.Writer` or `*log.Logger`\n \n - `lgr.ToWriter(l lgr.L, level string) io.Writer` - makes io.Writer forwarding write ops to underlying `lgr.L`\n - `lgr.ToStdLogger(l lgr.L, level string) *log.Logger` - makes standard logger on top of `lgr.L`\n \n-_`level` parameter is optional, if defined (non-empty) will enforce the level._    \n-  \n+_`level` parameter is optional, if defined (non-empty) will enforce the level._\n+\n+- `lgr.SetupStdLogger(opts ...Option)` initializes std global logger (`log.std`) with lgr logger and given options. \n+All standard methods like `log.Print`, `log.Println`, `log.Fatal` and so on will be forwarder to lgr.\n+\n ### global logger\n \n Users **should avoid** global logger and pass the concrete logger as a dependency. However, in some cases a global logger may be needed, for example migration from stdlib `log` to `lgr`. For such cases `log \"github.com/go-pkgz/lgr\"` can be imported instead of `log` package.\n \n Global logger provides `lgr.Printf`, `lgr.Print` and `lgr.Fatalf` functions. User can customize the logger by calling `lgr.Setup(options ...)`. The instance of this logger can be retrieved with `lgr.Default()`\n+"
    },
    {
      "sha": "03e80eb95b57739173fd14e86b3617e62e67cee6",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/adaptor.go",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lgr/adaptor.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lgr/adaptor.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-pkgz/lgr/adaptor.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -25,6 +25,17 @@ func ToWriter(l L, level string) *Writer {\n \treturn &Writer{l, level}\n }\n \n+// ToStdLogger makes standard logger\n func ToStdLogger(l L, level string) *log.Logger {\n \treturn log.New(ToWriter(l, level), \"\", 0)\n }\n+\n+// SetupStdLogger makes the default std logger with lgr.L\n+func SetupStdLogger(opts ...Option) {\n+\tlogOpts := append([]Option{CallerDepth(3)}, opts...) // skip 3 more frames to compensate stdlog calls\n+\tl := New(logOpts...)\n+\tl.reTrace = reTraceStd // std logger split on log/ path\n+\tlog.SetOutput(ToWriter(l, \"\"))\n+\tlog.SetPrefix(\"\")\n+\tlog.SetFlags(0)\n+}"
    },
    {
      "sha": "4ea4d22fb84a1a1fa293a1bd3dc87ace389cc5d3",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/go.mod",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lgr/go.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lgr/go.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-pkgz/lgr/go.mod?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -1,5 +1,5 @@\n module github.com/go-pkgz/lgr\n \n-require github.com/stretchr/testify v1.3.0\n+require github.com/stretchr/testify v1.6.1\n \n-go 1.13\n+go 1.15"
    },
    {
      "sha": "1f1e7af975c8c9fd7e4545da78e7f154590f0eeb",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/go.sum",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lgr/go.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lgr/go.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-pkgz/lgr/go.sum?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -2,6 +2,11 @@ github.com/davecgh/go-spew v1.1.0 h1:ZDRjVQ15GmhC3fiQ8ni8+OwkZQO4DARzQgrnXU1Liz8\n github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\n github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\n+github.com/stretchr/objx v0.1.0 h1:4G4v2dO3VZwixGIRoQ5Lfboy6nUhCyYzaqnIAPPhYs4=\n github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\n-github.com/stretchr/testify v1.3.0 h1:TivCn/peBQ7UY8ooIcPgZFpTNSz0Q2U6UrFlUfqbe0Q=\n-github.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\n+github.com/stretchr/testify v1.6.1 h1:hDPOHmpOpP40lSULcqw7IrRb/u7w6RpDC9399XyoNd0=\n+github.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\n+gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405 h1:yhCVgyC4o1eVCa2tZl7eS0r+SDo693bJlVdllGtEeKM=\n+gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\n+gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c h1:dUUwHk2QECo/6vqA44rthZ8ie2QXMNeKRTHCNY2nXvo=\n+gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM="
    },
    {
      "sha": "9ba12d33c4894a9575bb57c5f6a579c3d77194c3",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/logger.go",
      "status": "modified",
      "additions": 95,
      "deletions": 20,
      "changes": 115,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lgr/logger.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lgr/logger.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-pkgz/lgr/logger.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -6,7 +6,6 @@\n // Debug and trace levels can be filtered based on lgr.Trace and lgr.Debug options.\n // ERROR, FATAL and PANIC levels send to err as well. FATAL terminate caller application with os.Exit(1)\n // and PANIC also prints stack trace.\n-\n package lgr\n \n import (\n@@ -15,6 +14,7 @@ import (\n \t\"io\"\n \t\"os\"\n \t\"path\"\n+\t\"regexp\"\n \t\"runtime\"\n \t\"strconv\"\n \t\"strings\"\n@@ -26,16 +26,27 @@ import (\n var levels = []string{\"TRACE\", \"DEBUG\", \"INFO\", \"WARN\", \"ERROR\", \"PANIC\", \"FATAL\"}\n \n const (\n-\tShort      = `{{.DT.Format \"2006/01/02 15:04:05\"}} {{.Level}} {{.Message}}`\n-\tWithMsec   = `{{.DT.Format \"2006/01/02 15:04:05.000\"}} {{.Level}} {{.Message}}`\n-\tWithPkg    = `{{.DT.Format \"2006/01/02 15:04:05.000\"}} {{.Level}} ({{.CallerPkg}}) {{.Message}}`\n+\t// Short logging format\n+\tShort = `{{.DT.Format \"2006/01/02 15:04:05\"}} {{.Level}} {{.Message}}`\n+\t// WithMsec is a logging format with milliseconds\n+\tWithMsec = `{{.DT.Format \"2006/01/02 15:04:05.000\"}} {{.Level}} {{.Message}}`\n+\t// WithPkg is WithMsec logging format with caller package\n+\tWithPkg = `{{.DT.Format \"2006/01/02 15:04:05.000\"}} {{.Level}} ({{.CallerPkg}}) {{.Message}}`\n+\t// ShortDebug is WithMsec logging format with caller file and line\n \tShortDebug = `{{.DT.Format \"2006/01/02 15:04:05.000\"}} {{.Level}} ({{.CallerFile}}:{{.CallerLine}}) {{.Message}}`\n-\tFuncDebug  = `{{.DT.Format \"2006/01/02 15:04:05.000\"}} {{.Level}} ({{.CallerFunc}}) {{.Message}}`\n-\tFullDebug  = `{{.DT.Format \"2006/01/02 15:04:05.000\"}} {{.Level}} ({{.CallerFile}}:{{.CallerLine}} {{.CallerFunc}}) {{.Message}}`\n+\t// FuncDebug is WithMsec logging format with caller function\n+\tFuncDebug = `{{.DT.Format \"2006/01/02 15:04:05.000\"}} {{.Level}} ({{.CallerFunc}}) {{.Message}}`\n+\t// FullDebug is WithMsec logging format with caller file, line and function\n+\tFullDebug = `{{.DT.Format \"2006/01/02 15:04:05.000\"}} {{.Level}} ({{.CallerFile}}:{{.CallerLine}} {{.CallerFunc}}) {{.Message}}`\n )\n \n var secretReplacement = []byte(\"******\")\n \n+var (\n+\treTraceDefault = regexp.MustCompile(`.*/lgr/logger\\.go.*\\n`)\n+\treTraceStd     = regexp.MustCompile(`.*/log/log\\.go.*\\n`)\n+)\n+\n // Logger provided simple logger with basic support of levels. Thread safe\n type Logger struct {\n \t// set with Option calls\n@@ -48,7 +59,8 @@ type Logger struct {\n \tlevelBraces    bool      // encloses level with [], i.e. [INFO]\n \tcallerDepth    int       // how many stack frames to skip, relative to the real (reported) frame\n \tformat         string    // layout template\n-\tsecrets        []string  // sub-strings to secrets by matching\n+\tsecrets        [][]byte  // sub-strings to secrets by matching\n+\tmapper         Mapper    // map (alter) output based on levels\n \n \t// internal use\n \tnow           nowFn\n@@ -57,7 +69,9 @@ type Logger struct {\n \tlock          sync.Mutex\n \tcallerOn      bool\n \tlevelBracesOn bool\n+\terrorDump     bool\n \ttempl         *template.Template\n+\treTrace       *regexp.Regexp\n }\n \n // can be redefined internally for testing\n@@ -85,6 +99,8 @@ func New(options ...Option) *Logger {\n \t\tstdout:      os.Stdout,\n \t\tstderr:      os.Stderr,\n \t\tcallerDepth: 0,\n+\t\tmapper:      nopMapper,\n+\t\treTrace:     reTraceDefault,\n \t}\n \tfor _, opt := range options {\n \t\topt(&res)\n@@ -124,9 +140,16 @@ func (l *Logger) Logf(format string, args ...interface{}) {\n \tl.logf(format, args...)\n }\n \n+//nolint gocyclo\n func (l *Logger) logf(format string, args ...interface{}) {\n \n-\tlv, msg := l.extractLevel(fmt.Sprintf(format, args...))\n+\tvar lv, msg string\n+\tif len(args) == 0 {\n+\t\tlv, msg = l.extractLevel(format)\n+\t} else {\n+\t\tlv, msg = l.extractLevel(fmt.Sprintf(format, args...))\n+\t}\n+\n \tif lv == \"DEBUG\" && !l.dbg {\n \t\treturn\n \t}\n@@ -177,6 +200,15 @@ func (l *Logger) logf(format string, args ...interface{}) {\n \t\tif l.stderr != l.stdout {\n \t\t\t_, _ = l.stderr.Write(data)\n \t\t}\n+\t\tif l.errorDump {\n+\t\t\tstackInfo := make([]byte, 1024*1024)\n+\t\t\tif stackSize := runtime.Stack(stackInfo, false); stackSize > 0 {\n+\t\t\t\ttraceLines := l.reTrace.Split(string(stackInfo[:stackSize]), -1)\n+\t\t\t\tif len(traceLines) > 0 {\n+\t\t\t\t\t_, _ = l.stdout.Write([]byte(\">>> stack trace:\\n\" + traceLines[len(traceLines)-1]))\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n \tcase \"FATAL\":\n \t\tif l.stderr != l.stdout {\n \t\t\t_, _ = l.stderr.Write(data)\n@@ -195,7 +227,7 @@ func (l *Logger) logf(format string, args ...interface{}) {\n \n func (l *Logger) hideSecrets(data []byte) []byte {\n \tfor _, h := range l.secrets {\n-\t\tdata = bytes.Replace(data, []byte(h), secretReplacement, -1)\n+\t\tdata = bytes.Replace(data, h, secretReplacement, -1)\n \t}\n \treturn data\n }\n@@ -268,15 +300,17 @@ func (l *Logger) formatWithOptions(elems layout) (res string) {\n \n \tparts := make([]string, 0, 4)\n \n-\tparts = append(parts, orElse(l.msec,\n-\t\tfunc() string { return elems.DT.Format(\"2006/01/02 15:04:05.000\") },\n-\t\tfunc() string { return elems.DT.Format(\"2006/01/02 15:04:05\") },\n-\t))\n-\n-\tparts = append(parts, orElse(l.levelBraces,\n-\t\tfunc() string { return `[` + elems.Level + `]` },\n-\t\tfunc() string { return elems.Level },\n-\t))\n+\tparts = append(\n+\t\tparts,\n+\t\tl.mapper.TimeFunc(orElse(l.msec,\n+\t\t\tfunc() string { return elems.DT.Format(\"2006/01/02 15:04:05.000\") },\n+\t\t\tfunc() string { return elems.DT.Format(\"2006/01/02 15:04:05\") },\n+\t\t)),\n+\t\tl.levelMapper(elems.Level)(orElse(l.levelBraces,\n+\t\t\tfunc() string { return `[` + elems.Level + `]` },\n+\t\t\tfunc() string { return elems.Level },\n+\t\t)),\n+\t)\n \n \tif l.callerFile || l.callerFunc || l.callerPkg {\n \t\tvar callerParts []string\n@@ -290,10 +324,20 @@ func (l *Logger) formatWithOptions(elems layout) (res string) {\n \t\tif v := orElse(l.callerPkg, func() string { return elems.CallerPkg }, nothing); v != \"\" {\n \t\t\tcallerParts = append(callerParts, v)\n \t\t}\n-\t\tparts = append(parts, \"{\"+strings.Join(callerParts, \" \")+\"}\")\n+\n+\t\tcaller := \"{\" + strings.Join(callerParts, \" \") + \"}\"\n+\t\tif l.mapper.CallerFunc != nil {\n+\t\t\tcaller = l.mapper.CallerFunc(caller)\n+\t\t}\n+\t\tparts = append(parts, caller)\n+\t}\n+\n+\tmsg := elems.Message\n+\tif l.mapper.MessageFunc != nil {\n+\t\tmsg = l.mapper.MessageFunc(elems.Message)\n \t}\n \n-\tparts = append(parts, elems.Message)\n+\tparts = append(parts, l.levelMapper(elems.Level)(msg))\n \treturn strings.Join(parts, \" \")\n }\n \n@@ -320,6 +364,37 @@ func (l *Logger) extractLevel(line string) (level, msg string) {\n \treturn \"INFO\", line\n }\n \n+func (l *Logger) levelMapper(level string) mapFunc {\n+\n+\tnop := func(s string) string {\n+\t\treturn s\n+\t}\n+\n+\tswitch level {\n+\tcase \"TRACE\", \"DEBUG\":\n+\t\tif l.mapper.DebugFunc == nil {\n+\t\t\treturn nop\n+\t\t}\n+\t\treturn l.mapper.DebugFunc\n+\tcase \"INFO \":\n+\t\tif l.mapper.InfoFunc == nil {\n+\t\t\treturn nop\n+\t\t}\n+\t\treturn l.mapper.InfoFunc\n+\tcase \"WARN \":\n+\t\tif l.mapper.WarnFunc == nil {\n+\t\t\treturn nop\n+\t\t}\n+\t\treturn l.mapper.WarnFunc\n+\tcase \"ERROR\", \"PANIC\", \"FATAL\":\n+\t\tif l.mapper.ErrorFunc == nil {\n+\t\t\treturn nop\n+\t\t}\n+\t\treturn l.mapper.ErrorFunc\n+\t}\n+\treturn func(s string) string { return s }\n+}\n+\n // getDump reads runtime stack and returns as a string\n func getDump() []byte {\n \tmaxSize := 5 * 1024 * 1024"
    },
    {
      "sha": "c7bcc6e01291dddb928c3bb26fa0448a03b174ca",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/mapper.go",
      "status": "added",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lgr/mapper.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lgr/mapper.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-pkgz/lgr/mapper.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -0,0 +1,28 @@\n+package lgr\n+\n+// Mapper defines optional functions to change elements of the logged message for each part, based on levels.\n+// Only some mapFunc can be defined, by default does nothing. Can be used to alter the output, for example making some\n+// part of the output colorful.\n+type Mapper struct {\n+\tMessageFunc mapFunc // message mapper on all levels\n+\tErrorFunc   mapFunc // message mapper on ERROR level\n+\tWarnFunc    mapFunc // message mapper on WARN level\n+\tInfoFunc    mapFunc // message mapper on INFO level\n+\tDebugFunc   mapFunc // message mapper on DEBUG level\n+\n+\tCallerFunc mapFunc // caller mapper, all levels\n+\tTimeFunc   mapFunc // time mapper, all levels\n+}\n+\n+type mapFunc func(string) string\n+\n+// nopMapper is a default, doing nothing\n+var nopMapper = Mapper{\n+\tMessageFunc: func(s string) string { return s },\n+\tErrorFunc:   func(s string) string { return s },\n+\tWarnFunc:    func(s string) string { return s },\n+\tInfoFunc:    func(s string) string { return s },\n+\tDebugFunc:   func(s string) string { return s },\n+\tCallerFunc:  func(s string) string { return s },\n+\tTimeFunc:    func(s string) string { return s },\n+}"
    },
    {
      "sha": "646d4863c0a723d72eeae7bd096ec3ae4f7dcd63",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/options.go",
      "status": "modified",
      "additions": 15,
      "deletions": 1,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lgr/options.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-pkgz/lgr/options.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-pkgz/lgr/options.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -73,6 +73,20 @@ func Msec(l *Logger) {\n // Useful to prevent passwords or other sensitive tokens to be logged.\n func Secret(vals ...string) Option {\n \treturn func(l *Logger) {\n-\t\tl.secrets = vals\n+\t\tfor _, v := range vals {\n+\t\t\tl.secrets = append(l.secrets, []byte(v))\n+\t\t}\n \t}\n }\n+\n+// Map sets mapper functions to change elements of the logged message based on levels.\n+func Map(m Mapper) Option {\n+\treturn func(l *Logger) {\n+\t\tl.mapper = m\n+\t}\n+}\n+\n+// StackTraceOnError turns on stack trace for ERROR level.\n+func StackTraceOnError(l *Logger) {\n+\tl.errorDump = true\n+}"
    },
    {
      "sha": "3f93932bc8404e0fb165ca8e4c265762145def11",
      "filename": "backend/vendor/github.com/go-redis/redis/v7/.travis.yml",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/.travis.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/.travis.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-redis/redis/v7/.travis.yml?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -1,12 +1,10 @@\n dist: xenial\n-sudo: false\n language: go\n \n services:\n   - redis-server\n \n go:\n-  - 1.11.x\n   - 1.12.x\n   - 1.13.x\n   - tip"
    },
    {
      "sha": "bd4eccff24877280094dadd5342cf21e1442f4db",
      "filename": "backend/vendor/github.com/go-redis/redis/v7/CHANGELOG.md",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/CHANGELOG.md",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/CHANGELOG.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-redis/redis/v7/CHANGELOG.md?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -4,6 +4,10 @@\n \n - Existing `HMSet` is renamed to `HSet` and old deprecated `HMSet` is restored for Redis 3 users.\n \n+## v7.1\n+\n+- Existing `Cmd.String` is renamed to `Cmd.Text`. New `Cmd.String` implements `fmt.Stringer` interface.\n+\n ## v7\n \n - *Important*. Tx.Pipeline now returns a non-transactional pipeline. Use Tx.TxPipeline for a transactional pipeline."
    },
    {
      "sha": "86609c6e07c9435ad0352dba40aa86098284af51",
      "filename": "backend/vendor/github.com/go-redis/redis/v7/Makefile",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/Makefile",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/Makefile",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-redis/redis/v7/Makefile?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -14,7 +14,7 @@ bench: testdeps\n \n testdata/redis:\n \tmkdir -p $@\n-\twget -qO- http://download.redis.io/releases/redis-5.0.7.tar.gz | tar xvz --strip-components=1 -C $@\n+\twget -qO- http://download.redis.io/redis-stable.tar.gz | tar xvz --strip-components=1 -C $@\n \n testdata/redis/src/redis-server: testdata/redis\n \tcd $< && make all"
    },
    {
      "sha": "0fbb506ead192183d131ada8ff3f9dcd1a5033dc",
      "filename": "backend/vendor/github.com/go-redis/redis/v7/README.md",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/README.md",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-redis/redis/v7/README.md?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -101,15 +101,18 @@ set, err := client.SetNX(\"key\", \"value\", 10*time.Second).Result()\n vals, err := client.Sort(\"list\", &redis.Sort{Offset: 0, Count: 2, Order: \"ASC\"}).Result()\n \n // ZRANGEBYSCORE zset -inf +inf WITHSCORES LIMIT 0 2\n-vals, err := client.ZRangeByScoreWithScores(\"zset\", redis.ZRangeBy{\n+vals, err := client.ZRangeByScoreWithScores(\"zset\", &redis.ZRangeBy{\n \tMin: \"-inf\",\n \tMax: \"+inf\",\n \tOffset: 0,\n \tCount: 2,\n }).Result()\n \n // ZINTERSTORE out 2 zset1 zset2 WEIGHTS 2 3 AGGREGATE SUM\n-vals, err := client.ZInterStore(\"out\", redis.ZStore{Weights: []int64{2, 3}}, \"zset1\", \"zset2\").Result()\n+vals, err := client.ZInterStore(\"out\", &redis.ZStore{\n+\tKeys: []string{\"zset1\", \"zset2\"},\n+\tWeights: []int64{2, 3}\n+}).Result()\n \n // EVAL \"return {KEYS[1],ARGV[1]}\" 1 \"key\" \"hello\"\n vals, err := client.Eval(\"return {KEYS[1],ARGV[1]}\", []string{\"key\"}, \"hello\").Result()"
    },
    {
      "sha": "1907de6c412c6089c51e00e99c48c5cdccf36a8e",
      "filename": "backend/vendor/github.com/go-redis/redis/v7/cluster.go",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/cluster.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/cluster.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-redis/redis/v7/cluster.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -57,6 +57,7 @@ type ClusterOptions struct {\n \n \tOnConnect func(*Conn) error\n \n+\tUsername string\n \tPassword string\n \n \tMaxRetries      int\n@@ -67,6 +68,9 @@ type ClusterOptions struct {\n \tReadTimeout  time.Duration\n \tWriteTimeout time.Duration\n \n+\t// NewClient creates a cluster node client with provided name and options.\n+\tNewClient func(opt *Options) *Client\n+\n \t// PoolSize applies per cluster node and not for the whole cluster.\n \tPoolSize           int\n \tMinIdleConns       int\n@@ -118,6 +122,10 @@ func (opt *ClusterOptions) init() {\n \tcase 0:\n \t\topt.MaxRetryBackoff = 512 * time.Millisecond\n \t}\n+\n+\tif opt.NewClient == nil {\n+\t\topt.NewClient = NewClient\n+\t}\n }\n \n func (opt *ClusterOptions) clientOptions() *Options {\n@@ -130,6 +138,7 @@ func (opt *ClusterOptions) clientOptions() *Options {\n \t\tMaxRetries:      opt.MaxRetries,\n \t\tMinRetryBackoff: opt.MinRetryBackoff,\n \t\tMaxRetryBackoff: opt.MaxRetryBackoff,\n+\t\tUsername:        opt.Username,\n \t\tPassword:        opt.Password,\n \t\treadOnly:        opt.ReadOnly,\n \n@@ -162,7 +171,7 @@ func newClusterNode(clOpt *ClusterOptions, addr string) *clusterNode {\n \topt := clOpt.clientOptions()\n \topt.Addr = addr\n \tnode := clusterNode{\n-\t\tClient: NewClient(opt),\n+\t\tClient: clOpt.NewClient(opt),\n \t}\n \n \tnode.latency = math.MaxUint32"
    },
    {
      "sha": "dd7fe4a91e05b797365840d3b03c47ebdc284ebe",
      "filename": "backend/vendor/github.com/go-redis/redis/v7/command.go",
      "status": "modified",
      "additions": 32,
      "deletions": 3,
      "changes": 35,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/command.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/command.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-redis/redis/v7/command.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -671,7 +671,7 @@ func (cmd *StringCmd) Time() (time.Time, error) {\n \tif cmd.err != nil {\n \t\treturn time.Time{}, cmd.err\n \t}\n-\treturn time.Parse(time.RFC3339, cmd.Val())\n+\treturn time.Parse(time.RFC3339Nano, cmd.Val())\n }\n \n func (cmd *StringCmd) Scan(val interface{}) error {\n@@ -1885,6 +1885,7 @@ type CommandInfo struct {\n \tName        string\n \tArity       int8\n \tFlags       []string\n+\tACLFlags    []string\n \tFirstKeyPos int8\n \tLastKeyPos  int8\n \tStepCount   int8\n@@ -1934,8 +1935,14 @@ func (cmd *CommandsInfoCmd) readReply(rd *proto.Reader) error {\n }\n \n func commandInfoParser(rd *proto.Reader, n int64) (interface{}, error) {\n-\tif n != 6 {\n-\t\treturn nil, fmt.Errorf(\"redis: got %d elements in COMMAND reply, wanted 6\", n)\n+\tconst numArgRedis5 = 6\n+\tconst numArgRedis6 = 7\n+\n+\tswitch n {\n+\tcase numArgRedis5, numArgRedis6:\n+\t\t// continue\n+\tdefault:\n+\t\treturn nil, fmt.Errorf(\"redis: got %d elements in COMMAND reply, wanted 7\", n)\n \t}\n \n \tvar cmd CommandInfo\n@@ -1995,6 +2002,28 @@ func commandInfoParser(rd *proto.Reader, n int64) (interface{}, error) {\n \t\t}\n \t}\n \n+\tif n == numArgRedis5 {\n+\t\treturn &cmd, nil\n+\t}\n+\n+\t_, err = rd.ReadReply(func(rd *proto.Reader, n int64) (interface{}, error) {\n+\t\tcmd.ACLFlags = make([]string, n)\n+\t\tfor i := 0; i < len(cmd.ACLFlags); i++ {\n+\t\t\tswitch s, err := rd.ReadString(); {\n+\t\t\tcase err == Nil:\n+\t\t\t\tcmd.ACLFlags[i] = \"\"\n+\t\t\tcase err != nil:\n+\t\t\t\treturn nil, err\n+\t\t\tdefault:\n+\t\t\t\tcmd.ACLFlags[i] = s\n+\t\t\t}\n+\t\t}\n+\t\treturn nil, nil\n+\t})\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n \treturn &cmd, nil\n }\n "
    },
    {
      "sha": "da5ceda13ea206368deee292cbe8861fa2bf55e0",
      "filename": "backend/vendor/github.com/go-redis/redis/v7/commands.go",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/commands.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/commands.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-redis/redis/v7/commands.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -302,6 +302,7 @@ type Cmdable interface {\n type StatefulCmdable interface {\n \tCmdable\n \tAuth(password string) *StatusCmd\n+\tAuthACL(username, password string) *StatusCmd\n \tSelect(index int) *StatusCmd\n \tSwapDB(index1, index2 int) *StatusCmd\n \tClientSetName(name string) *BoolCmd\n@@ -324,6 +325,15 @@ func (c statefulCmdable) Auth(password string) *StatusCmd {\n \treturn cmd\n }\n \n+// Perform an AUTH command, using the given user and pass.\n+// Should be used to authenticate the current connection with one of the connections defined in the ACL list\n+// when connecting to a Redis 6.0 instance, or greater, that is using the Redis ACL system.\n+func (c statefulCmdable) AuthACL(username, password string) *StatusCmd {\n+\tcmd := NewStatusCmd(\"auth\", username, password)\n+\t_ = c(cmd)\n+\treturn cmd\n+}\n+\n func (c cmdable) Echo(message interface{}) *StringCmd {\n \tcmd := NewStringCmd(\"echo\", message)\n \t_ = c(cmd)"
    },
    {
      "sha": "0ffaca9f8fe4fed1cd2a3957ba7a667d57d5ae7c",
      "filename": "backend/vendor/github.com/go-redis/redis/v7/error.go",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/error.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/error.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-redis/redis/v7/error.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -6,9 +6,24 @@ import (\n \t\"net\"\n \t\"strings\"\n \n+\t\"github.com/go-redis/redis/v7/internal/pool\"\n \t\"github.com/go-redis/redis/v7/internal/proto\"\n )\n \n+var ErrClosed = pool.ErrClosed\n+\n+type Error interface {\n+\terror\n+\n+\t// RedisError is a no-op function but\n+\t// serves to distinguish types that are Redis\n+\t// errors from ordinary errors: a type is a\n+\t// Redis error if it has a RedisError method.\n+\tRedisError()\n+}\n+\n+var _ Error = proto.RedisError(\"\")\n+\n func isRetryableError(err error, retryTimeout bool) bool {\n \tswitch err {\n \tcase nil, context.Canceled, context.DeadlineExceeded:"
    },
    {
      "sha": "a8d8276a9f54240b2cb41ebb9b06c06be81ff9cb",
      "filename": "backend/vendor/github.com/go-redis/redis/v7/internal/pool/pool.go",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/internal/pool/pool.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/internal/pool/pool.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-redis/redis/v7/internal/pool/pool.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -94,7 +94,9 @@ func NewConnPool(opt *Options) *ConnPool {\n \t\tclosedCh:  make(chan struct{}),\n \t}\n \n+\tp.connsMu.Lock()\n \tp.checkMinIdleConns()\n+\tp.connsMu.Unlock()\n \n \tif opt.IdleTimeout > 0 && opt.IdleCheckFrequency > 0 {\n \t\tgo p.reaper(opt.IdleCheckFrequency)"
    },
    {
      "sha": "d3f646e98faca728b3c911d38656809f23f62d80",
      "filename": "backend/vendor/github.com/go-redis/redis/v7/internal/proto/reader.go",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/internal/proto/reader.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/internal/proto/reader.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-redis/redis/v7/internal/proto/reader.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -24,6 +24,8 @@ type RedisError string\n \n func (e RedisError) Error() string { return string(e) }\n \n+func (RedisError) RedisError() {}\n+\n //------------------------------------------------------------------------------\n \n type MultiBulkParse func(*Reader, int64) (interface{}, error)"
    },
    {
      "sha": "d552f1e84d166a3b87ca001aa74b0e21ce025cd4",
      "filename": "backend/vendor/github.com/go-redis/redis/v7/internal/proto/writer.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/internal/proto/writer.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/internal/proto/writer.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-redis/redis/v7/internal/proto/writer.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -93,7 +93,7 @@ func (w *Writer) writeArg(v interface{}) error {\n \t\t}\n \t\treturn w.int(0)\n \tcase time.Time:\n-\t\treturn w.string(v.Format(time.RFC3339))\n+\t\treturn w.string(v.Format(time.RFC3339Nano))\n \tcase encoding.BinaryMarshaler:\n \t\tb, err := v.MarshalBinary()\n \t\tif err != nil {"
    },
    {
      "sha": "47dcc29bf3b68c0a24742139f1f03554a2314084",
      "filename": "backend/vendor/github.com/go-redis/redis/v7/options.go",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/options.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/options.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-redis/redis/v7/options.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -40,8 +40,13 @@ type Options struct {\n \t// Hook that is called when new connection is established.\n \tOnConnect func(*Conn) error\n \n+\t// Use the specified Username to authenticate the current connection with one of the connections defined in the ACL\n+\t// list when connecting to a Redis 6.0 instance, or greater, that is using the Redis ACL system.\n+\tUsername string\n+\n \t// Optional password. Must match the password specified in the\n-\t// requirepass server configuration option.\n+\t// requirepass server configuration option (if connecting to a Redis 5.0 instance, or lower),\n+\t// or the User Password when connecting to a Redis 6.0 instance, or greater, that is using the Redis ACL system.\n \tPassword string\n \t// Database to be selected after connecting to the server.\n \tDB int\n@@ -187,6 +192,7 @@ func ParseURL(redisURL string) (*Options, error) {\n \t}\n \n \tif u.User != nil {\n+\t\to.Username = u.User.Username()\n \t\tif p, ok := u.User.Password(); ok {\n \t\t\to.Password = p\n \t\t}"
    },
    {
      "sha": "26cde242be89e9992442ef2640b7c3c82cf88eae",
      "filename": "backend/vendor/github.com/go-redis/redis/v7/pubsub.go",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/pubsub.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/pubsub.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-redis/redis/v7/pubsub.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -309,9 +309,11 @@ func (c *PubSub) newMessage(reply interface{}) (interface{}, error) {\n \tcase []interface{}:\n \t\tswitch kind := reply[0].(string); kind {\n \t\tcase \"subscribe\", \"unsubscribe\", \"psubscribe\", \"punsubscribe\":\n+\t\t\t// Can be nil in case of \"unsubscribe\".\n+\t\t\tchannel, _ := reply[1].(string)\n \t\t\treturn &Subscription{\n \t\t\t\tKind:    kind,\n-\t\t\t\tChannel: reply[1].(string),\n+\t\t\t\tChannel: channel,\n \t\t\t\tCount:   int(reply[2].(int64)),\n \t\t\t}, nil\n \t\tcase \"message\":"
    },
    {
      "sha": "3d9dfed7dbe2af746fb688b036baf43f23c5bcc8",
      "filename": "backend/vendor/github.com/go-redis/redis/v7/redis.go",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/redis.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/redis.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-redis/redis/v7/redis.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -241,7 +241,11 @@ func (c *baseClient) initConn(ctx context.Context, cn *pool.Conn) error {\n \n \t_, err := conn.Pipelined(func(pipe Pipeliner) error {\n \t\tif c.opt.Password != \"\" {\n-\t\t\tpipe.Auth(c.opt.Password)\n+\t\t\tif c.opt.Username != \"\" {\n+\t\t\t\tpipe.AuthACL(c.opt.Username, c.opt.Password)\n+\t\t\t} else {\n+\t\t\t\tpipe.Auth(c.opt.Password)\n+\t\t\t}\n \t\t}\n \n \t\tif c.opt.DB > 0 {"
    },
    {
      "sha": "5bec26ca95ee17e95ba233f53035bf6cb30d033c",
      "filename": "backend/vendor/github.com/go-redis/redis/v7/result.go",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/result.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/result.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-redis/redis/v7/result.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -98,6 +98,14 @@ func NewStringIntMapCmdResult(val map[string]int64, err error) *StringIntMapCmd\n \treturn &cmd\n }\n \n+// NewTimeCmdResult returns a TimeCmd initialised with val and err for testing\n+func NewTimeCmdResult(val time.Time, err error) *TimeCmd {\n+\tvar cmd TimeCmd\n+\tcmd.val = val\n+\tcmd.SetErr(err)\n+\treturn &cmd\n+}\n+\n // NewZSliceCmdResult returns a ZSliceCmd initialised with val and err for testing\n func NewZSliceCmdResult(val []Z, err error) *ZSliceCmd {\n \tvar cmd ZSliceCmd"
    },
    {
      "sha": "44fc623f8a7b89d2221f38c986bb8a84e900df47",
      "filename": "backend/vendor/github.com/go-redis/redis/v7/ring.go",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/ring.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/ring.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-redis/redis/v7/ring.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -56,6 +56,9 @@ type RingOptions struct {\n \t//  See https://arxiv.org/abs/1406.2294 for reference\n \tHashReplicas int\n \n+\t// NewClient creates a shard client with provided name and options.\n+\tNewClient func(name string, opt *Options) *Client\n+\n \t// Optional hook that is called when a new shard is created.\n \tOnNewShard func(*Client)\n \n@@ -390,7 +393,12 @@ func NewRing(opt *RingOptions) *Ring {\n func newRingShard(opt *RingOptions, name, addr string) *Client {\n \tclopt := opt.clientOptions(name)\n \tclopt.Addr = addr\n-\tshard := NewClient(clopt)\n+\tvar shard *Client\n+\tif opt.NewClient != nil {\n+\t\tshard = opt.NewClient(name, clopt)\n+\t} else {\n+\t\tshard = NewClient(clopt)\n+\t}\n \tif opt.OnNewShard != nil {\n \t\topt.OnNewShard(shard)\n \t}"
    },
    {
      "sha": "8aa40ef79948421caa85b22aef31ba063f7617ec",
      "filename": "backend/vendor/github.com/go-redis/redis/v7/sentinel.go",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/sentinel.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/sentinel.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-redis/redis/v7/sentinel.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -22,13 +22,15 @@ type FailoverOptions struct {\n \tMasterName string\n \t// A seed list of host:port addresses of sentinel nodes.\n \tSentinelAddrs    []string\n+\tSentinelUsername string\n \tSentinelPassword string\n \n \t// Following options are copied from Options struct.\n \n \tDialer    func(ctx context.Context, network, addr string) (net.Conn, error)\n \tOnConnect func(*Conn) error\n \n+\tUsername string\n \tPassword string\n \tDB       int\n \n@@ -57,6 +59,7 @@ func (opt *FailoverOptions) options() *Options {\n \t\tOnConnect: opt.OnConnect,\n \n \t\tDB:       opt.DB,\n+\t\tUsername: opt.Username,\n \t\tPassword: opt.Password,\n \n \t\tMaxRetries:      opt.MaxRetries,\n@@ -88,6 +91,7 @@ func NewFailoverClient(failoverOpt *FailoverOptions) *Client {\n \tfailover := &sentinelFailover{\n \t\tmasterName:    failoverOpt.MasterName,\n \t\tsentinelAddrs: failoverOpt.SentinelAddrs,\n+\t\tusername:      failoverOpt.SentinelUsername,\n \t\tpassword:      failoverOpt.SentinelPassword,\n \n \t\topt: opt,\n@@ -281,6 +285,7 @@ type sentinelFailover struct {\n \tsentinelAddrs []string\n \n \topt      *Options\n+\tusername string\n \tpassword string\n \n \tpool     *pool.ConnPool\n@@ -372,6 +377,7 @@ func (c *sentinelFailover) masterAddr() (string, error) {\n \t\t\tAddr:   sentinelAddr,\n \t\t\tDialer: c.opt.Dialer,\n \n+\t\t\tUsername: c.username,\n \t\t\tPassword: c.password,\n \n \t\t\tMaxRetries: c.opt.MaxRetries,"
    },
    {
      "sha": "005ca682c5a9f7825e5caac165fa2e41c4be7ce9",
      "filename": "backend/vendor/github.com/go-redis/redis/v7/universal.go",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/universal.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/go-redis/redis/v7/universal.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-redis/redis/v7/universal.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -22,6 +22,7 @@ type UniversalOptions struct {\n \n \tDialer             func(ctx context.Context, network, addr string) (net.Conn, error)\n \tOnConnect          func(*Conn) error\n+\tUsername           string\n \tPassword           string\n \tMaxRetries         int\n \tMinRetryBackoff    time.Duration\n@@ -60,6 +61,7 @@ func (o *UniversalOptions) Cluster() *ClusterOptions {\n \t\tDialer:    o.Dialer,\n \t\tOnConnect: o.OnConnect,\n \n+\t\tUsername: o.Username,\n \t\tPassword: o.Password,\n \n \t\tMaxRedirects:   o.MaxRedirects,\n@@ -99,6 +101,7 @@ func (o *UniversalOptions) Failover() *FailoverOptions {\n \t\tOnConnect: o.OnConnect,\n \n \t\tDB:       o.DB,\n+\t\tUsername: o.Username,\n \t\tPassword: o.Password,\n \n \t\tMaxRetries:      o.MaxRetries,\n@@ -133,6 +136,7 @@ func (o *UniversalOptions) Simple() *Options {\n \t\tOnConnect: o.OnConnect,\n \n \t\tDB:       o.DB,\n+\t\tUsername: o.Username,\n \t\tPassword: o.Password,\n \n \t\tMaxRetries:      o.MaxRetries,"
    },
    {
      "sha": "f765a46f9150130c9ced6c414b13b0b5b6f735f6",
      "filename": "backend/vendor/github.com/google/uuid/README.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/google/uuid/README.md",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/google/uuid/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/google/uuid/README.md?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -16,4 +16,4 @@ change is the ability to represent an invalid UUID (vs a NIL UUID).\n \n Full `go doc` style documentation for the package can be viewed online without\n installing this package by using the GoDoc site here: \n-http://godoc.org/github.com/google/uuid\n+http://pkg.go.dev/github.com/google/uuid"
    },
    {
      "sha": "14bd34072b64d2c9cd0491d00454e593af99e1e2",
      "filename": "backend/vendor/github.com/google/uuid/marshal.go",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/google/uuid/marshal.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/google/uuid/marshal.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/google/uuid/marshal.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -16,10 +16,11 @@ func (uuid UUID) MarshalText() ([]byte, error) {\n // UnmarshalText implements encoding.TextUnmarshaler.\n func (uuid *UUID) UnmarshalText(data []byte) error {\n \tid, err := ParseBytes(data)\n-\tif err == nil {\n-\t\t*uuid = id\n+\tif err != nil {\n+\t\treturn err\n \t}\n-\treturn err\n+\t*uuid = id\n+\treturn nil\n }\n \n // MarshalBinary implements encoding.BinaryMarshaler."
    },
    {
      "sha": "463109629eee180e87507373a3e957e72c34f179",
      "filename": "backend/vendor/github.com/google/uuid/version1.go",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/google/uuid/version1.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/google/uuid/version1.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/google/uuid/version1.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -17,12 +17,6 @@ import (\n //\n // In most cases, New should be used.\n func NewUUID() (UUID, error) {\n-\tnodeMu.Lock()\n-\tif nodeID == zeroID {\n-\t\tsetNodeInterface(\"\")\n-\t}\n-\tnodeMu.Unlock()\n-\n \tvar uuid UUID\n \tnow, seq, err := GetTime()\n \tif err != nil {\n@@ -38,7 +32,13 @@ func NewUUID() (UUID, error) {\n \tbinary.BigEndian.PutUint16(uuid[4:], timeMid)\n \tbinary.BigEndian.PutUint16(uuid[6:], timeHi)\n \tbinary.BigEndian.PutUint16(uuid[8:], seq)\n+\n+\tnodeMu.Lock()\n+\tif nodeID == zeroID {\n+\t\tsetNodeInterface(\"\")\n+\t}\n \tcopy(uuid[10:], nodeID[:])\n+\tnodeMu.Unlock()\n \n \treturn uuid, nil\n }"
    },
    {
      "sha": "c110465db5900d8715cd2d65c06cad506aeeb7aa",
      "filename": "backend/vendor/github.com/google/uuid/version4.go",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/google/uuid/version4.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/google/uuid/version4.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/google/uuid/version4.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -27,8 +27,13 @@ func New() UUID {\n //  equivalent to the odds of creating a few tens of trillions of UUIDs in a\n //  year and having one duplicate.\n func NewRandom() (UUID, error) {\n+\treturn NewRandomFromReader(rander)\n+}\n+\n+// NewRandomFromReader returns a UUID based on bytes read from a given io.Reader.\n+func NewRandomFromReader(r io.Reader) (UUID, error) {\n \tvar uuid UUID\n-\t_, err := io.ReadFull(rander, uuid[:])\n+\t_, err := io.ReadFull(r, uuid[:])\n \tif err != nil {\n \t\treturn Nil, err\n \t}"
    },
    {
      "sha": "d9c08a22fc5401467b3dfd9ae9c4ef8f93638109",
      "filename": "backend/vendor/github.com/russross/blackfriday/v2/README.md",
      "status": "modified",
      "additions": 67,
      "deletions": 23,
      "changes": 90,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/russross/blackfriday/v2/README.md",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/russross/blackfriday/v2/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/russross/blackfriday/v2/README.md?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -1,4 +1,6 @@\n-Blackfriday [![Build Status](https://travis-ci.org/russross/blackfriday.svg?branch=master)](https://travis-ci.org/russross/blackfriday)\n+Blackfriday\n+[![Build Status][BuildV2SVG]][BuildV2URL]\n+[![PkgGoDev][PkgGoDevV2SVG]][PkgGoDevV2URL]\n ===========\n \n Blackfriday is a [Markdown][1] processor implemented in [Go][2]. It\n@@ -16,33 +18,31 @@ It started as a translation from C of [Sundown][3].\n Installation\n ------------\n \n-Blackfriday is compatible with any modern Go release. With Go 1.7 and git\n-installed:\n+Blackfriday is compatible with modern Go releases in module mode.\n+With Go installed:\n \n-    go get gopkg.in/russross/blackfriday.v2\n+    go get github.com/russross/blackfriday/v2\n \n-will download, compile, and install the package into your `$GOPATH`\n-directory hierarchy. Alternatively, you can achieve the same if you\n-import it into a project:\n+will resolve and add the package to the current development module,\n+then build and install it. Alternatively, you can achieve the same\n+if you import it in a package:\n \n-    import \"gopkg.in/russross/blackfriday.v2\"\n+    import \"github.com/russross/blackfriday/v2\"\n \n and `go get` without parameters.\n \n+Legacy GOPATH mode is unsupported.\n+\n \n Versions\n --------\n \n Currently maintained and recommended version of Blackfriday is `v2`. It's being\n developed on its own branch: https://github.com/russross/blackfriday/tree/v2 and the\n documentation is available at\n-https://godoc.org/gopkg.in/russross/blackfriday.v2.\n+https://pkg.go.dev/github.com/russross/blackfriday/v2.\n \n-It is `go get`-able via via [gopkg.in][6] at `gopkg.in/russross/blackfriday.v2`,\n-but we highly recommend using package management tool like [dep][7] or\n-[Glide][8] and make use of semantic versioning. With package management you\n-should import `github.com/russross/blackfriday` and specify that you're using\n-version 2.0.0.\n+It is `go get`-able in module mode at `github.com/russross/blackfriday/v2`.\n \n Version 2 offers a number of improvements over v1:\n \n@@ -62,6 +62,11 @@ Potential drawbacks:\n   v2. See issue [#348](https://github.com/russross/blackfriday/issues/348) for\n   tracking.\n \n+If you are still interested in the legacy `v1`, you can import it from\n+`github.com/russross/blackfriday`. Documentation for the legacy v1 can be found\n+here: https://pkg.go.dev/github.com/russross/blackfriday.\n+\n+\n Usage\n -----\n \n@@ -91,7 +96,7 @@ Here's an example of simple usage of Blackfriday together with Bluemonday:\n ```go\n import (\n     \"github.com/microcosm-cc/bluemonday\"\n-    \"github.com/russross/blackfriday\"\n+    \"github.com/russross/blackfriday/v2\"\n )\n \n // ...\n@@ -104,6 +109,8 @@ html := bluemonday.UGCPolicy().SanitizeBytes(unsafe)\n If you want to customize the set of options, use `blackfriday.WithExtensions`,\n `blackfriday.WithRenderer` and `blackfriday.WithRefOverride`.\n \n+### `blackfriday-tool`\n+\n You can also check out `blackfriday-tool` for a more complete example\n of how to use it. Download and install it using:\n \n@@ -114,7 +121,7 @@ markdown file using a standalone program.  You can also browse the\n source directly on github if you are just looking for some example\n code:\n \n-* <http://github.com/russross/blackfriday-tool>\n+* <https://github.com/russross/blackfriday-tool>\n \n Note that if you have not already done so, installing\n `blackfriday-tool` will be sufficient to download and install\n@@ -123,6 +130,22 @@ installed in `$GOPATH/bin`.  This is a statically-linked binary that\n can be copied to wherever you need it without worrying about\n dependencies and library versions.\n \n+### Sanitized anchor names\n+\n+Blackfriday includes an algorithm for creating sanitized anchor names\n+corresponding to a given input text. This algorithm is used to create\n+anchors for headings when `AutoHeadingIDs` extension is enabled. The\n+algorithm has a specification, so that other packages can create\n+compatible anchor names and links to those anchors.\n+\n+The specification is located at https://pkg.go.dev/github.com/russross/blackfriday/v2#hdr-Sanitized_Anchor_Names.\n+\n+[`SanitizedAnchorName`](https://pkg.go.dev/github.com/russross/blackfriday/v2#SanitizedAnchorName) exposes this functionality, and can be used to\n+create compatible links to the anchor names generated by blackfriday.\n+This algorithm is also implemented in a small standalone package at\n+[`github.com/shurcooL/sanitized_anchor_name`](https://pkg.go.dev/github.com/shurcooL/sanitized_anchor_name). It can be useful for clients\n+that want a small package and don't need full functionality of blackfriday.\n+\n \n Features\n --------\n@@ -199,6 +222,15 @@ implements the following extensions:\n     You can use 3 or more backticks to mark the beginning of the\n     block, and the same number to mark the end of the block.\n \n+    To preserve classes of fenced code blocks while using the bluemonday\n+    HTML sanitizer, use the following policy:\n+\n+    ```go\n+    p := bluemonday.UGCPolicy()\n+    p.AllowAttrs(\"class\").Matching(regexp.MustCompile(\"^language-[a-zA-Z0-9]+$\")).OnElements(\"code\")\n+    html := p.SanitizeBytes(unsafe)\n+    ```\n+\n *   **Definition lists**. A simple definition list is made of a single-line\n     term followed by a colon and the definition for that term.\n \n@@ -250,7 +282,7 @@ Other renderers\n Blackfriday is structured to allow alternative rendering engines. Here\n are a few of note:\n \n-*   [github_flavored_markdown](https://godoc.org/github.com/shurcooL/github_flavored_markdown):\n+*   [github_flavored_markdown](https://pkg.go.dev/github.com/shurcooL/github_flavored_markdown):\n     provides a GitHub Flavored Markdown renderer with fenced code block\n     highlighting, clickable heading anchor links.\n \n@@ -261,20 +293,28 @@ are a few of note:\n *   [markdownfmt](https://github.com/shurcooL/markdownfmt): like gofmt,\n     but for markdown.\n \n-*   [LaTeX output](https://github.com/Ambrevar/Blackfriday-LaTeX):\n+*   [LaTeX output](https://gitlab.com/ambrevar/blackfriday-latex):\n     renders output as LaTeX.\n \n+*   [bfchroma](https://github.com/Depado/bfchroma/): provides convenience\n+    integration with the [Chroma](https://github.com/alecthomas/chroma) code\n+    highlighting library. bfchroma is only compatible with v2 of Blackfriday and\n+    provides a drop-in renderer ready to use with Blackfriday, as well as\n+    options and means for further customization.\n+\n *   [Blackfriday-Confluence](https://github.com/kentaro-m/blackfriday-confluence): provides a [Confluence Wiki Markup](https://confluence.atlassian.com/doc/confluence-wiki-markup-251003035.html) renderer.\n \n+*   [Blackfriday-Slack](https://github.com/karriereat/blackfriday-slack): converts markdown to slack message style\n+\n \n-Todo\n+TODO\n ----\n \n *   More unit testing\n-*   Improve unicode support. It does not understand all unicode\n+*   Improve Unicode support. It does not understand all Unicode\n     rules (about what constitutes a letter, a punctuation symbol,\n     etc.), so it may fail to detect word boundaries correctly in\n-    some instances. It is safe on all utf-8 input.\n+    some instances. It is safe on all UTF-8 input.\n \n \n License\n@@ -286,6 +326,10 @@ License\n    [1]: https://daringfireball.net/projects/markdown/ \"Markdown\"\n    [2]: https://golang.org/ \"Go Language\"\n    [3]: https://github.com/vmg/sundown \"Sundown\"\n-   [4]: https://godoc.org/gopkg.in/russross/blackfriday.v2#Parse \"Parse func\"\n+   [4]: https://pkg.go.dev/github.com/russross/blackfriday/v2#Parse \"Parse func\"\n    [5]: https://github.com/microcosm-cc/bluemonday \"Bluemonday\"\n-   [6]: https://labix.org/gopkg.in \"gopkg.in\"\n+\n+   [BuildV2SVG]: https://travis-ci.org/russross/blackfriday.svg?branch=v2\n+   [BuildV2URL]: https://travis-ci.org/russross/blackfriday\n+   [PkgGoDevV2SVG]: https://pkg.go.dev/badge/github.com/russross/blackfriday/v2\n+   [PkgGoDevV2URL]: https://pkg.go.dev/github.com/russross/blackfriday/v2"
    },
    {
      "sha": "dcd61e6e35bc6fdb34a79c0a0c8ef2dcca95d063",
      "filename": "backend/vendor/github.com/russross/blackfriday/v2/block.go",
      "status": "modified",
      "additions": 26,
      "deletions": 4,
      "changes": 30,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/russross/blackfriday/v2/block.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/russross/blackfriday/v2/block.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/russross/blackfriday/v2/block.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -18,8 +18,7 @@ import (\n \t\"html\"\n \t\"regexp\"\n \t\"strings\"\n-\n-\t\"github.com/shurcooL/sanitized_anchor_name\"\n+\t\"unicode\"\n )\n \n const (\n@@ -259,7 +258,7 @@ func (p *Markdown) prefixHeading(data []byte) int {\n \t}\n \tif end > i {\n \t\tif id == \"\" && p.extensions&AutoHeadingIDs != 0 {\n-\t\t\tid = sanitized_anchor_name.Create(string(data[i:end]))\n+\t\t\tid = SanitizedAnchorName(string(data[i:end]))\n \t\t}\n \t\tblock := p.addBlock(Heading, data[i:end])\n \t\tblock.HeadingID = id\n@@ -673,6 +672,7 @@ func (p *Markdown) fencedCodeBlock(data []byte, doRender bool) int {\n \tif beg == 0 || beg >= len(data) {\n \t\treturn 0\n \t}\n+\tfenceLength := beg - 1\n \n \tvar work bytes.Buffer\n \twork.Write([]byte(info))\n@@ -706,6 +706,7 @@ func (p *Markdown) fencedCodeBlock(data []byte, doRender bool) int {\n \tif doRender {\n \t\tblock := p.addBlock(CodeBlock, work.Bytes()) // TODO: get rid of temp buffer\n \t\tblock.IsFenced = true\n+\t\tblock.FenceLength = fenceLength\n \t\tfinalizeCodeBlock(block)\n \t}\n \n@@ -1503,7 +1504,7 @@ func (p *Markdown) paragraph(data []byte) int {\n \n \t\t\t\tid := \"\"\n \t\t\t\tif p.extensions&AutoHeadingIDs != 0 {\n-\t\t\t\t\tid = sanitized_anchor_name.Create(string(data[prev:eol]))\n+\t\t\t\t\tid = SanitizedAnchorName(string(data[prev:eol]))\n \t\t\t\t}\n \n \t\t\t\tblock := p.addBlock(Heading, data[prev:eol])\n@@ -1588,3 +1589,24 @@ func skipUntilChar(text []byte, start int, char byte) int {\n \t}\n \treturn i\n }\n+\n+// SanitizedAnchorName returns a sanitized anchor name for the given text.\n+//\n+// It implements the algorithm specified in the package comment.\n+func SanitizedAnchorName(text string) string {\n+\tvar anchorName []rune\n+\tfutureDash := false\n+\tfor _, r := range text {\n+\t\tswitch {\n+\t\tcase unicode.IsLetter(r) || unicode.IsNumber(r):\n+\t\t\tif futureDash && len(anchorName) > 0 {\n+\t\t\t\tanchorName = append(anchorName, '-')\n+\t\t\t}\n+\t\t\tfutureDash = false\n+\t\t\tanchorName = append(anchorName, unicode.ToLower(r))\n+\t\tdefault:\n+\t\t\tfutureDash = true\n+\t\t}\n+\t}\n+\treturn string(anchorName)\n+}"
    },
    {
      "sha": "57ff152a0568a3b1e357fc8059fc7d93395554bb",
      "filename": "backend/vendor/github.com/russross/blackfriday/v2/doc.go",
      "status": "modified",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/russross/blackfriday/v2/doc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/russross/blackfriday/v2/doc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/russross/blackfriday/v2/doc.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -15,4 +15,32 @@\n //\n // If you're interested in calling Blackfriday from command line, see\n // https://github.com/russross/blackfriday-tool.\n+//\n+// Sanitized Anchor Names\n+//\n+// Blackfriday includes an algorithm for creating sanitized anchor names\n+// corresponding to a given input text. This algorithm is used to create\n+// anchors for headings when AutoHeadingIDs extension is enabled. The\n+// algorithm is specified below, so that other packages can create\n+// compatible anchor names and links to those anchors.\n+//\n+// The algorithm iterates over the input text, interpreted as UTF-8,\n+// one Unicode code point (rune) at a time. All runes that are letters (category L)\n+// or numbers (category N) are considered valid characters. They are mapped to\n+// lower case, and included in the output. All other runes are considered\n+// invalid characters. Invalid characters that precede the first valid character,\n+// as well as invalid character that follow the last valid character\n+// are dropped completely. All other sequences of invalid characters\n+// between two valid characters are replaced with a single dash character '-'.\n+//\n+// SanitizedAnchorName exposes this functionality, and can be used to\n+// create compatible links to the anchor names generated by blackfriday.\n+// This algorithm is also implemented in a small standalone package at\n+// github.com/shurcooL/sanitized_anchor_name. It can be useful for clients\n+// that want a small package and don't need full functionality of blackfriday.\n package blackfriday\n+\n+// NOTE: Keep Sanitized Anchor Name algorithm in sync with package\n+//       github.com/shurcooL/sanitized_anchor_name.\n+//       Otherwise, users of sanitized_anchor_name will get anchor names\n+//       that are incompatible with those generated by blackfriday."
    },
    {
      "sha": "a2c3edb691c830b7625af8f72582bf4e2a6d2836",
      "filename": "backend/vendor/github.com/russross/blackfriday/v2/entities.go",
      "status": "added",
      "additions": 2236,
      "deletions": 0,
      "changes": 2236,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/russross/blackfriday/v2/entities.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/russross/blackfriday/v2/entities.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/russross/blackfriday/v2/entities.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -0,0 +1,2236 @@\n+package blackfriday\n+\n+// Extracted from https://html.spec.whatwg.org/multipage/entities.json\n+var entities = map[string]bool{\n+\t\"&AElig\":                            true,\n+\t\"&AElig;\":                           true,\n+\t\"&AMP\":                              true,\n+\t\"&AMP;\":                             true,\n+\t\"&Aacute\":                           true,\n+\t\"&Aacute;\":                          true,\n+\t\"&Abreve;\":                          true,\n+\t\"&Acirc\":                            true,\n+\t\"&Acirc;\":                           true,\n+\t\"&Acy;\":                             true,\n+\t\"&Afr;\":                             true,\n+\t\"&Agrave\":                           true,\n+\t\"&Agrave;\":                          true,\n+\t\"&Alpha;\":                           true,\n+\t\"&Amacr;\":                           true,\n+\t\"&And;\":                             true,\n+\t\"&Aogon;\":                           true,\n+\t\"&Aopf;\":                            true,\n+\t\"&ApplyFunction;\":                   true,\n+\t\"&Aring\":                            true,\n+\t\"&Aring;\":                           true,\n+\t\"&Ascr;\":                            true,\n+\t\"&Assign;\":                          true,\n+\t\"&Atilde\":                           true,\n+\t\"&Atilde;\":                          true,\n+\t\"&Auml\":                             true,\n+\t\"&Auml;\":                            true,\n+\t\"&Backslash;\":                       true,\n+\t\"&Barv;\":                            true,\n+\t\"&Barwed;\":                          true,\n+\t\"&Bcy;\":                             true,\n+\t\"&Because;\":                         true,\n+\t\"&Bernoullis;\":                      true,\n+\t\"&Beta;\":                            true,\n+\t\"&Bfr;\":                             true,\n+\t\"&Bopf;\":                            true,\n+\t\"&Breve;\":                           true,\n+\t\"&Bscr;\":                            true,\n+\t\"&Bumpeq;\":                          true,\n+\t\"&CHcy;\":                            true,\n+\t\"&COPY\":                             true,\n+\t\"&COPY;\":                            true,\n+\t\"&Cacute;\":                          true,\n+\t\"&Cap;\":                             true,\n+\t\"&CapitalDifferentialD;\":            true,\n+\t\"&Cayleys;\":                         true,\n+\t\"&Ccaron;\":                          true,\n+\t\"&Ccedil\":                           true,\n+\t\"&Ccedil;\":                          true,\n+\t\"&Ccirc;\":                           true,\n+\t\"&Cconint;\":                         true,\n+\t\"&Cdot;\":                            true,\n+\t\"&Cedilla;\":                         true,\n+\t\"&CenterDot;\":                       true,\n+\t\"&Cfr;\":                             true,\n+\t\"&Chi;\":                             true,\n+\t\"&CircleDot;\":                       true,\n+\t\"&CircleMinus;\":                     true,\n+\t\"&CirclePlus;\":                      true,\n+\t\"&CircleTimes;\":                     true,\n+\t\"&ClockwiseContourIntegral;\":        true,\n+\t\"&CloseCurlyDoubleQuote;\":           true,\n+\t\"&CloseCurlyQuote;\":                 true,\n+\t\"&Colon;\":                           true,\n+\t\"&Colone;\":                          true,\n+\t\"&Congruent;\":                       true,\n+\t\"&Conint;\":                          true,\n+\t\"&ContourIntegral;\":                 true,\n+\t\"&Copf;\":                            true,\n+\t\"&Coproduct;\":                       true,\n+\t\"&CounterClockwiseContourIntegral;\": true,\n+\t\"&Cross;\":                           true,\n+\t\"&Cscr;\":                            true,\n+\t\"&Cup;\":                             true,\n+\t\"&CupCap;\":                          true,\n+\t\"&DD;\":                              true,\n+\t\"&DDotrahd;\":                        true,\n+\t\"&DJcy;\":                            true,\n+\t\"&DScy;\":                            true,\n+\t\"&DZcy;\":                            true,\n+\t\"&Dagger;\":                          true,\n+\t\"&Darr;\":                            true,\n+\t\"&Dashv;\":                           true,\n+\t\"&Dcaron;\":                          true,\n+\t\"&Dcy;\":                             true,\n+\t\"&Del;\":                             true,\n+\t\"&Delta;\":                           true,\n+\t\"&Dfr;\":                             true,\n+\t\"&DiacriticalAcute;\":                true,\n+\t\"&DiacriticalDot;\":                  true,\n+\t\"&DiacriticalDoubleAcute;\":          true,\n+\t\"&DiacriticalGrave;\":                true,\n+\t\"&DiacriticalTilde;\":                true,\n+\t\"&Diamond;\":                         true,\n+\t\"&DifferentialD;\":                   true,\n+\t\"&Dopf;\":                            true,\n+\t\"&Dot;\":                             true,\n+\t\"&DotDot;\":                          true,\n+\t\"&DotEqual;\":                        true,\n+\t\"&DoubleContourIntegral;\":           true,\n+\t\"&DoubleDot;\":                       true,\n+\t\"&DoubleDownArrow;\":                 true,\n+\t\"&DoubleLeftArrow;\":                 true,\n+\t\"&DoubleLeftRightArrow;\":            true,\n+\t\"&DoubleLeftTee;\":                   true,\n+\t\"&DoubleLongLeftArrow;\":             true,\n+\t\"&DoubleLongLeftRightArrow;\":        true,\n+\t\"&DoubleLongRightArrow;\":            true,\n+\t\"&DoubleRightArrow;\":                true,\n+\t\"&DoubleRightTee;\":                  true,\n+\t\"&DoubleUpArrow;\":                   true,\n+\t\"&DoubleUpDownArrow;\":               true,\n+\t\"&DoubleVerticalBar;\":               true,\n+\t\"&DownArrow;\":                       true,\n+\t\"&DownArrowBar;\":                    true,\n+\t\"&DownArrowUpArrow;\":                true,\n+\t\"&DownBreve;\":                       true,\n+\t\"&DownLeftRightVector;\":             true,\n+\t\"&DownLeftTeeVector;\":               true,\n+\t\"&DownLeftVector;\":                  true,\n+\t\"&DownLeftVectorBar;\":               true,\n+\t\"&DownRightTeeVector;\":              true,\n+\t\"&DownRightVector;\":                 true,\n+\t\"&DownRightVectorBar;\":              true,\n+\t\"&DownTee;\":                         true,\n+\t\"&DownTeeArrow;\":                    true,\n+\t\"&Downarrow;\":                       true,\n+\t\"&Dscr;\":                            true,\n+\t\"&Dstrok;\":                          true,\n+\t\"&ENG;\":                             true,\n+\t\"&ETH\":                              true,\n+\t\"&ETH;\":                             true,\n+\t\"&Eacute\":                           true,\n+\t\"&Eacute;\":                          true,\n+\t\"&Ecaron;\":                          true,\n+\t\"&Ecirc\":                            true,\n+\t\"&Ecirc;\":                           true,\n+\t\"&Ecy;\":                             true,\n+\t\"&Edot;\":                            true,\n+\t\"&Efr;\":                             true,\n+\t\"&Egrave\":                           true,\n+\t\"&Egrave;\":                          true,\n+\t\"&Element;\":                         true,\n+\t\"&Emacr;\":                           true,\n+\t\"&EmptySmallSquare;\":                true,\n+\t\"&EmptyVerySmallSquare;\":            true,\n+\t\"&Eogon;\":                           true,\n+\t\"&Eopf;\":                            true,\n+\t\"&Epsilon;\":                         true,\n+\t\"&Equal;\":                           true,\n+\t\"&EqualTilde;\":                      true,\n+\t\"&Equilibrium;\":                     true,\n+\t\"&Escr;\":                            true,\n+\t\"&Esim;\":                            true,\n+\t\"&Eta;\":                             true,\n+\t\"&Euml\":                             true,\n+\t\"&Euml;\":                            true,\n+\t\"&Exists;\":                          true,\n+\t\"&ExponentialE;\":                    true,\n+\t\"&Fcy;\":                             true,\n+\t\"&Ffr;\":                             true,\n+\t\"&FilledSmallSquare;\":               true,\n+\t\"&FilledVerySmallSquare;\":           true,\n+\t\"&Fopf;\":                            true,\n+\t\"&ForAll;\":                          true,\n+\t\"&Fouriertrf;\":                      true,\n+\t\"&Fscr;\":                            true,\n+\t\"&GJcy;\":                            true,\n+\t\"&GT\":                               true,\n+\t\"&GT;\":                              true,\n+\t\"&Gamma;\":                           true,\n+\t\"&Gammad;\":                          true,\n+\t\"&Gbreve;\":                          true,\n+\t\"&Gcedil;\":                          true,\n+\t\"&Gcirc;\":                           true,\n+\t\"&Gcy;\":                             true,\n+\t\"&Gdot;\":                            true,\n+\t\"&Gfr;\":                             true,\n+\t\"&Gg;\":                              true,\n+\t\"&Gopf;\":                            true,\n+\t\"&GreaterEqual;\":                    true,\n+\t\"&GreaterEqualLess;\":                true,\n+\t\"&GreaterFullEqual;\":                true,\n+\t\"&GreaterGreater;\":                  true,\n+\t\"&GreaterLess;\":                     true,\n+\t\"&GreaterSlantEqual;\":               true,\n+\t\"&GreaterTilde;\":                    true,\n+\t\"&Gscr;\":                            true,\n+\t\"&Gt;\":                              true,\n+\t\"&HARDcy;\":                          true,\n+\t\"&Hacek;\":                           true,\n+\t\"&Hat;\":                             true,\n+\t\"&Hcirc;\":                           true,\n+\t\"&Hfr;\":                             true,\n+\t\"&HilbertSpace;\":                    true,\n+\t\"&Hopf;\":                            true,\n+\t\"&HorizontalLine;\":                  true,\n+\t\"&Hscr;\":                            true,\n+\t\"&Hstrok;\":                          true,\n+\t\"&HumpDownHump;\":                    true,\n+\t\"&HumpEqual;\":                       true,\n+\t\"&IEcy;\":                            true,\n+\t\"&IJlig;\":                           true,\n+\t\"&IOcy;\":                            true,\n+\t\"&Iacute\":                           true,\n+\t\"&Iacute;\":                          true,\n+\t\"&Icirc\":                            true,\n+\t\"&Icirc;\":                           true,\n+\t\"&Icy;\":                             true,\n+\t\"&Idot;\":                            true,\n+\t\"&Ifr;\":                             true,\n+\t\"&Igrave\":                           true,\n+\t\"&Igrave;\":                          true,\n+\t\"&Im;\":                              true,\n+\t\"&Imacr;\":                           true,\n+\t\"&ImaginaryI;\":                      true,\n+\t\"&Implies;\":                         true,\n+\t\"&Int;\":                             true,\n+\t\"&Integral;\":                        true,\n+\t\"&Intersection;\":                    true,\n+\t\"&InvisibleComma;\":                  true,\n+\t\"&InvisibleTimes;\":                  true,\n+\t\"&Iogon;\":                           true,\n+\t\"&Iopf;\":                            true,\n+\t\"&Iota;\":                            true,\n+\t\"&Iscr;\":                            true,\n+\t\"&Itilde;\":                          true,\n+\t\"&Iukcy;\":                           true,\n+\t\"&Iuml\":                             true,\n+\t\"&Iuml;\":                            true,\n+\t\"&Jcirc;\":                           true,\n+\t\"&Jcy;\":                             true,\n+\t\"&Jfr;\":                             true,\n+\t\"&Jopf;\":                            true,\n+\t\"&Jscr;\":                            true,\n+\t\"&Jsercy;\":                          true,\n+\t\"&Jukcy;\":                           true,\n+\t\"&KHcy;\":                            true,\n+\t\"&KJcy;\":                            true,\n+\t\"&Kappa;\":                           true,\n+\t\"&Kcedil;\":                          true,\n+\t\"&Kcy;\":                             true,\n+\t\"&Kfr;\":                             true,\n+\t\"&Kopf;\":                            true,\n+\t\"&Kscr;\":                            true,\n+\t\"&LJcy;\":                            true,\n+\t\"&LT\":                               true,\n+\t\"&LT;\":                              true,\n+\t\"&Lacute;\":                          true,\n+\t\"&Lambda;\":                          true,\n+\t\"&Lang;\":                            true,\n+\t\"&Laplacetrf;\":                      true,\n+\t\"&Larr;\":                            true,\n+\t\"&Lcaron;\":                          true,\n+\t\"&Lcedil;\":                          true,\n+\t\"&Lcy;\":                             true,\n+\t\"&LeftAngleBracket;\":                true,\n+\t\"&LeftArrow;\":                       true,\n+\t\"&LeftArrowBar;\":                    true,\n+\t\"&LeftArrowRightArrow;\":             true,\n+\t\"&LeftCeiling;\":                     true,\n+\t\"&LeftDoubleBracket;\":               true,\n+\t\"&LeftDownTeeVector;\":               true,\n+\t\"&LeftDownVector;\":                  true,\n+\t\"&LeftDownVectorBar;\":               true,\n+\t\"&LeftFloor;\":                       true,\n+\t\"&LeftRightArrow;\":                  true,\n+\t\"&LeftRightVector;\":                 true,\n+\t\"&LeftTee;\":                         true,\n+\t\"&LeftTeeArrow;\":                    true,\n+\t\"&LeftTeeVector;\":                   true,\n+\t\"&LeftTriangle;\":                    true,\n+\t\"&LeftTriangleBar;\":                 true,\n+\t\"&LeftTriangleEqual;\":               true,\n+\t\"&LeftUpDownVector;\":                true,\n+\t\"&LeftUpTeeVector;\":                 true,\n+\t\"&LeftUpVector;\":                    true,\n+\t\"&LeftUpVectorBar;\":                 true,\n+\t\"&LeftVector;\":                      true,\n+\t\"&LeftVectorBar;\":                   true,\n+\t\"&Leftarrow;\":                       true,\n+\t\"&Leftrightarrow;\":                  true,\n+\t\"&LessEqualGreater;\":                true,\n+\t\"&LessFullEqual;\":                   true,\n+\t\"&LessGreater;\":                     true,\n+\t\"&LessLess;\":                        true,\n+\t\"&LessSlantEqual;\":                  true,\n+\t\"&LessTilde;\":                       true,\n+\t\"&Lfr;\":                             true,\n+\t\"&Ll;\":                              true,\n+\t\"&Lleftarrow;\":                      true,\n+\t\"&Lmidot;\":                          true,\n+\t\"&LongLeftArrow;\":                   true,\n+\t\"&LongLeftRightArrow;\":              true,\n+\t\"&LongRightArrow;\":                  true,\n+\t\"&Longleftarrow;\":                   true,\n+\t\"&Longleftrightarrow;\":              true,\n+\t\"&Longrightarrow;\":                  true,\n+\t\"&Lopf;\":                            true,\n+\t\"&LowerLeftArrow;\":                  true,\n+\t\"&LowerRightArrow;\":                 true,\n+\t\"&Lscr;\":                            true,\n+\t\"&Lsh;\":                             true,\n+\t\"&Lstrok;\":                          true,\n+\t\"&Lt;\":                              true,\n+\t\"&Map;\":                             true,\n+\t\"&Mcy;\":                             true,\n+\t\"&MediumSpace;\":                     true,\n+\t\"&Mellintrf;\":                       true,\n+\t\"&Mfr;\":                             true,\n+\t\"&MinusPlus;\":                       true,\n+\t\"&Mopf;\":                            true,\n+\t\"&Mscr;\":                            true,\n+\t\"&Mu;\":                              true,\n+\t\"&NJcy;\":                            true,\n+\t\"&Nacute;\":                          true,\n+\t\"&Ncaron;\":                          true,\n+\t\"&Ncedil;\":                          true,\n+\t\"&Ncy;\":                             true,\n+\t\"&NegativeMediumSpace;\":             true,\n+\t\"&NegativeThickSpace;\":              true,\n+\t\"&NegativeThinSpace;\":               true,\n+\t\"&NegativeVeryThinSpace;\":           true,\n+\t\"&NestedGreaterGreater;\":            true,\n+\t\"&NestedLessLess;\":                  true,\n+\t\"&NewLine;\":                         true,\n+\t\"&Nfr;\":                             true,\n+\t\"&NoBreak;\":                         true,\n+\t\"&NonBreakingSpace;\":                true,\n+\t\"&Nopf;\":                            true,\n+\t\"&Not;\":                             true,\n+\t\"&NotCongruent;\":                    true,\n+\t\"&NotCupCap;\":                       true,\n+\t\"&NotDoubleVerticalBar;\":            true,\n+\t\"&NotElement;\":                      true,\n+\t\"&NotEqual;\":                        true,\n+\t\"&NotEqualTilde;\":                   true,\n+\t\"&NotExists;\":                       true,\n+\t\"&NotGreater;\":                      true,\n+\t\"&NotGreaterEqual;\":                 true,\n+\t\"&NotGreaterFullEqual;\":             true,\n+\t\"&NotGreaterGreater;\":               true,\n+\t\"&NotGreaterLess;\":                  true,\n+\t\"&NotGreaterSlantEqual;\":            true,\n+\t\"&NotGreaterTilde;\":                 true,\n+\t\"&NotHumpDownHump;\":                 true,\n+\t\"&NotHumpEqual;\":                    true,\n+\t\"&NotLeftTriangle;\":                 true,\n+\t\"&NotLeftTriangleBar;\":              true,\n+\t\"&NotLeftTriangleEqual;\":            true,\n+\t\"&NotLess;\":                         true,\n+\t\"&NotLessEqual;\":                    true,\n+\t\"&NotLessGreater;\":                  true,\n+\t\"&NotLessLess;\":                     true,\n+\t\"&NotLessSlantEqual;\":               true,\n+\t\"&NotLessTilde;\":                    true,\n+\t\"&NotNestedGreaterGreater;\":         true,\n+\t\"&NotNestedLessLess;\":               true,\n+\t\"&NotPrecedes;\":                     true,\n+\t\"&NotPrecedesEqual;\":                true,\n+\t\"&NotPrecedesSlantEqual;\":           true,\n+\t\"&NotReverseElement;\":               true,\n+\t\"&NotRightTriangle;\":                true,\n+\t\"&NotRightTriangleBar;\":             true,\n+\t\"&NotRightTriangleEqual;\":           true,\n+\t\"&NotSquareSubset;\":                 true,\n+\t\"&NotSquareSubsetEqual;\":            true,\n+\t\"&NotSquareSuperset;\":               true,\n+\t\"&NotSquareSupersetEqual;\":          true,\n+\t\"&NotSubset;\":                       true,\n+\t\"&NotSubsetEqual;\":                  true,\n+\t\"&NotSucceeds;\":                     true,\n+\t\"&NotSucceedsEqual;\":                true,\n+\t\"&NotSucceedsSlantEqual;\":           true,\n+\t\"&NotSucceedsTilde;\":                true,\n+\t\"&NotSuperset;\":                     true,\n+\t\"&NotSupersetEqual;\":                true,\n+\t\"&NotTilde;\":                        true,\n+\t\"&NotTildeEqual;\":                   true,\n+\t\"&NotTildeFullEqual;\":               true,\n+\t\"&NotTildeTilde;\":                   true,\n+\t\"&NotVerticalBar;\":                  true,\n+\t\"&Nscr;\":                            true,\n+\t\"&Ntilde\":                           true,\n+\t\"&Ntilde;\":                          true,\n+\t\"&Nu;\":                              true,\n+\t\"&OElig;\":                           true,\n+\t\"&Oacute\":                           true,\n+\t\"&Oacute;\":                          true,\n+\t\"&Ocirc\":                            true,\n+\t\"&Ocirc;\":                           true,\n+\t\"&Ocy;\":                             true,\n+\t\"&Odblac;\":                          true,\n+\t\"&Ofr;\":                             true,\n+\t\"&Ograve\":                           true,\n+\t\"&Ograve;\":                          true,\n+\t\"&Omacr;\":                           true,\n+\t\"&Omega;\":                           true,\n+\t\"&Omicron;\":                         true,\n+\t\"&Oopf;\":                            true,\n+\t\"&OpenCurlyDoubleQuote;\":            true,\n+\t\"&OpenCurlyQuote;\":                  true,\n+\t\"&Or;\":                              true,\n+\t\"&Oscr;\":                            true,\n+\t\"&Oslash\":                           true,\n+\t\"&Oslash;\":                          true,\n+\t\"&Otilde\":                           true,\n+\t\"&Otilde;\":                          true,\n+\t\"&Otimes;\":                          true,\n+\t\"&Ouml\":                             true,\n+\t\"&Ouml;\":                            true,\n+\t\"&OverBar;\":                         true,\n+\t\"&OverBrace;\":                       true,\n+\t\"&OverBracket;\":                     true,\n+\t\"&OverParenthesis;\":                 true,\n+\t\"&PartialD;\":                        true,\n+\t\"&Pcy;\":                             true,\n+\t\"&Pfr;\":                             true,\n+\t\"&Phi;\":                             true,\n+\t\"&Pi;\":                              true,\n+\t\"&PlusMinus;\":                       true,\n+\t\"&Poincareplane;\":                   true,\n+\t\"&Popf;\":                            true,\n+\t\"&Pr;\":                              true,\n+\t\"&Precedes;\":                        true,\n+\t\"&PrecedesEqual;\":                   true,\n+\t\"&PrecedesSlantEqual;\":              true,\n+\t\"&PrecedesTilde;\":                   true,\n+\t\"&Prime;\":                           true,\n+\t\"&Product;\":                         true,\n+\t\"&Proportion;\":                      true,\n+\t\"&Proportional;\":                    true,\n+\t\"&Pscr;\":                            true,\n+\t\"&Psi;\":                             true,\n+\t\"&QUOT\":                             true,\n+\t\"&QUOT;\":                            true,\n+\t\"&Qfr;\":                             true,\n+\t\"&Qopf;\":                            true,\n+\t\"&Qscr;\":                            true,\n+\t\"&RBarr;\":                           true,\n+\t\"&REG\":                              true,\n+\t\"&REG;\":                             true,\n+\t\"&Racute;\":                          true,\n+\t\"&Rang;\":                            true,\n+\t\"&Rarr;\":                            true,\n+\t\"&Rarrtl;\":                          true,\n+\t\"&Rcaron;\":                          true,\n+\t\"&Rcedil;\":                          true,\n+\t\"&Rcy;\":                             true,\n+\t\"&Re;\":                              true,\n+\t\"&ReverseElement;\":                  true,\n+\t\"&ReverseEquilibrium;\":              true,\n+\t\"&ReverseUpEquilibrium;\":            true,\n+\t\"&Rfr;\":                             true,\n+\t\"&Rho;\":                             true,\n+\t\"&RightAngleBracket;\":               true,\n+\t\"&RightArrow;\":                      true,\n+\t\"&RightArrowBar;\":                   true,\n+\t\"&RightArrowLeftArrow;\":             true,\n+\t\"&RightCeiling;\":                    true,\n+\t\"&RightDoubleBracket;\":              true,\n+\t\"&RightDownTeeVector;\":              true,\n+\t\"&RightDownVector;\":                 true,\n+\t\"&RightDownVectorBar;\":              true,\n+\t\"&RightFloor;\":                      true,\n+\t\"&RightTee;\":                        true,\n+\t\"&RightTeeArrow;\":                   true,\n+\t\"&RightTeeVector;\":                  true,\n+\t\"&RightTriangle;\":                   true,\n+\t\"&RightTriangleBar;\":                true,\n+\t\"&RightTriangleEqual;\":              true,\n+\t\"&RightUpDownVector;\":               true,\n+\t\"&RightUpTeeVector;\":                true,\n+\t\"&RightUpVector;\":                   true,\n+\t\"&RightUpVectorBar;\":                true,\n+\t\"&RightVector;\":                     true,\n+\t\"&RightVectorBar;\":                  true,\n+\t\"&Rightarrow;\":                      true,\n+\t\"&Ropf;\":                            true,\n+\t\"&RoundImplies;\":                    true,\n+\t\"&Rrightarrow;\":                     true,\n+\t\"&Rscr;\":                            true,\n+\t\"&Rsh;\":                             true,\n+\t\"&RuleDelayed;\":                     true,\n+\t\"&SHCHcy;\":                          true,\n+\t\"&SHcy;\":                            true,\n+\t\"&SOFTcy;\":                          true,\n+\t\"&Sacute;\":                          true,\n+\t\"&Sc;\":                              true,\n+\t\"&Scaron;\":                          true,\n+\t\"&Scedil;\":                          true,\n+\t\"&Scirc;\":                           true,\n+\t\"&Scy;\":                             true,\n+\t\"&Sfr;\":                             true,\n+\t\"&ShortDownArrow;\":                  true,\n+\t\"&ShortLeftArrow;\":                  true,\n+\t\"&ShortRightArrow;\":                 true,\n+\t\"&ShortUpArrow;\":                    true,\n+\t\"&Sigma;\":                           true,\n+\t\"&SmallCircle;\":                     true,\n+\t\"&Sopf;\":                            true,\n+\t\"&Sqrt;\":                            true,\n+\t\"&Square;\":                          true,\n+\t\"&SquareIntersection;\":              true,\n+\t\"&SquareSubset;\":                    true,\n+\t\"&SquareSubsetEqual;\":               true,\n+\t\"&SquareSuperset;\":                  true,\n+\t\"&SquareSupersetEqual;\":             true,\n+\t\"&SquareUnion;\":                     true,\n+\t\"&Sscr;\":                            true,\n+\t\"&Star;\":                            true,\n+\t\"&Sub;\":                             true,\n+\t\"&Subset;\":                          true,\n+\t\"&SubsetEqual;\":                     true,\n+\t\"&Succeeds;\":                        true,\n+\t\"&SucceedsEqual;\":                   true,\n+\t\"&SucceedsSlantEqual;\":              true,\n+\t\"&SucceedsTilde;\":                   true,\n+\t\"&SuchThat;\":                        true,\n+\t\"&Sum;\":                             true,\n+\t\"&Sup;\":                             true,\n+\t\"&Superset;\":                        true,\n+\t\"&SupersetEqual;\":                   true,\n+\t\"&Supset;\":                          true,\n+\t\"&THORN\":                            true,\n+\t\"&THORN;\":                           true,\n+\t\"&TRADE;\":                           true,\n+\t\"&TSHcy;\":                           true,\n+\t\"&TScy;\":                            true,\n+\t\"&Tab;\":                             true,\n+\t\"&Tau;\":                             true,\n+\t\"&Tcaron;\":                          true,\n+\t\"&Tcedil;\":                          true,\n+\t\"&Tcy;\":                             true,\n+\t\"&Tfr;\":                             true,\n+\t\"&Therefore;\":                       true,\n+\t\"&Theta;\":                           true,\n+\t\"&ThickSpace;\":                      true,\n+\t\"&ThinSpace;\":                       true,\n+\t\"&Tilde;\":                           true,\n+\t\"&TildeEqual;\":                      true,\n+\t\"&TildeFullEqual;\":                  true,\n+\t\"&TildeTilde;\":                      true,\n+\t\"&Topf;\":                            true,\n+\t\"&TripleDot;\":                       true,\n+\t\"&Tscr;\":                            true,\n+\t\"&Tstrok;\":                          true,\n+\t\"&Uacute\":                           true,\n+\t\"&Uacute;\":                          true,\n+\t\"&Uarr;\":                            true,\n+\t\"&Uarrocir;\":                        true,\n+\t\"&Ubrcy;\":                           true,\n+\t\"&Ubreve;\":                          true,\n+\t\"&Ucirc\":                            true,\n+\t\"&Ucirc;\":                           true,\n+\t\"&Ucy;\":                             true,\n+\t\"&Udblac;\":                          true,\n+\t\"&Ufr;\":                             true,\n+\t\"&Ugrave\":                           true,\n+\t\"&Ugrave;\":                          true,\n+\t\"&Umacr;\":                           true,\n+\t\"&UnderBar;\":                        true,\n+\t\"&UnderBrace;\":                      true,\n+\t\"&UnderBracket;\":                    true,\n+\t\"&UnderParenthesis;\":                true,\n+\t\"&Union;\":                           true,\n+\t\"&UnionPlus;\":                       true,\n+\t\"&Uogon;\":                           true,\n+\t\"&Uopf;\":                            true,\n+\t\"&UpArrow;\":                         true,\n+\t\"&UpArrowBar;\":                      true,\n+\t\"&UpArrowDownArrow;\":                true,\n+\t\"&UpDownArrow;\":                     true,\n+\t\"&UpEquilibrium;\":                   true,\n+\t\"&UpTee;\":                           true,\n+\t\"&UpTeeArrow;\":                      true,\n+\t\"&Uparrow;\":                         true,\n+\t\"&Updownarrow;\":                     true,\n+\t\"&UpperLeftArrow;\":                  true,\n+\t\"&UpperRightArrow;\":                 true,\n+\t\"&Upsi;\":                            true,\n+\t\"&Upsilon;\":                         true,\n+\t\"&Uring;\":                           true,\n+\t\"&Uscr;\":                            true,\n+\t\"&Utilde;\":                          true,\n+\t\"&Uuml\":                             true,\n+\t\"&Uuml;\":                            true,\n+\t\"&VDash;\":                           true,\n+\t\"&Vbar;\":                            true,\n+\t\"&Vcy;\":                             true,\n+\t\"&Vdash;\":                           true,\n+\t\"&Vdashl;\":                          true,\n+\t\"&Vee;\":                             true,\n+\t\"&Verbar;\":                          true,\n+\t\"&Vert;\":                            true,\n+\t\"&VerticalBar;\":                     true,\n+\t\"&VerticalLine;\":                    true,\n+\t\"&VerticalSeparator;\":               true,\n+\t\"&VerticalTilde;\":                   true,\n+\t\"&VeryThinSpace;\":                   true,\n+\t\"&Vfr;\":                             true,\n+\t\"&Vopf;\":                            true,\n+\t\"&Vscr;\":                            true,\n+\t\"&Vvdash;\":                          true,\n+\t\"&Wcirc;\":                           true,\n+\t\"&Wedge;\":                           true,\n+\t\"&Wfr;\":                             true,\n+\t\"&Wopf;\":                            true,\n+\t\"&Wscr;\":                            true,\n+\t\"&Xfr;\":                             true,\n+\t\"&Xi;\":                              true,\n+\t\"&Xopf;\":                            true,\n+\t\"&Xscr;\":                            true,\n+\t\"&YAcy;\":                            true,\n+\t\"&YIcy;\":                            true,\n+\t\"&YUcy;\":                            true,\n+\t\"&Yacute\":                           true,\n+\t\"&Yacute;\":                          true,\n+\t\"&Ycirc;\":                           true,\n+\t\"&Ycy;\":                             true,\n+\t\"&Yfr;\":                             true,\n+\t\"&Yopf;\":                            true,\n+\t\"&Yscr;\":                            true,\n+\t\"&Yuml;\":                            true,\n+\t\"&ZHcy;\":                            true,\n+\t\"&Zacute;\":                          true,\n+\t\"&Zcaron;\":                          true,\n+\t\"&Zcy;\":                             true,\n+\t\"&Zdot;\":                            true,\n+\t\"&ZeroWidthSpace;\":                  true,\n+\t\"&Zeta;\":                            true,\n+\t\"&Zfr;\":                             true,\n+\t\"&Zopf;\":                            true,\n+\t\"&Zscr;\":                            true,\n+\t\"&aacute\":                           true,\n+\t\"&aacute;\":                          true,\n+\t\"&abreve;\":                          true,\n+\t\"&ac;\":                              true,\n+\t\"&acE;\":                             true,\n+\t\"&acd;\":                             true,\n+\t\"&acirc\":                            true,\n+\t\"&acirc;\":                           true,\n+\t\"&acute\":                            true,\n+\t\"&acute;\":                           true,\n+\t\"&acy;\":                             true,\n+\t\"&aelig\":                            true,\n+\t\"&aelig;\":                           true,\n+\t\"&af;\":                              true,\n+\t\"&afr;\":                             true,\n+\t\"&agrave\":                           true,\n+\t\"&agrave;\":                          true,\n+\t\"&alefsym;\":                         true,\n+\t\"&aleph;\":                           true,\n+\t\"&alpha;\":                           true,\n+\t\"&amacr;\":                           true,\n+\t\"&amalg;\":                           true,\n+\t\"&amp\":                              true,\n+\t\"&amp;\":                             true,\n+\t\"&and;\":                             true,\n+\t\"&andand;\":                          true,\n+\t\"&andd;\":                            true,\n+\t\"&andslope;\":                        true,\n+\t\"&andv;\":                            true,\n+\t\"&ang;\":                             true,\n+\t\"&ange;\":                            true,\n+\t\"&angle;\":                           true,\n+\t\"&angmsd;\":                          true,\n+\t\"&angmsdaa;\":                        true,\n+\t\"&angmsdab;\":                        true,\n+\t\"&angmsdac;\":                        true,\n+\t\"&angmsdad;\":                        true,\n+\t\"&angmsdae;\":                        true,\n+\t\"&angmsdaf;\":                        true,\n+\t\"&angmsdag;\":                        true,\n+\t\"&angmsdah;\":                        true,\n+\t\"&angrt;\":                           true,\n+\t\"&angrtvb;\":                         true,\n+\t\"&angrtvbd;\":                        true,\n+\t\"&angsph;\":                          true,\n+\t\"&angst;\":                           true,\n+\t\"&angzarr;\":                         true,\n+\t\"&aogon;\":                           true,\n+\t\"&aopf;\":                            true,\n+\t\"&ap;\":                              true,\n+\t\"&apE;\":                             true,\n+\t\"&apacir;\":                          true,\n+\t\"&ape;\":                             true,\n+\t\"&apid;\":                            true,\n+\t\"&apos;\":                            true,\n+\t\"&approx;\":                          true,\n+\t\"&approxeq;\":                        true,\n+\t\"&aring\":                            true,\n+\t\"&aring;\":                           true,\n+\t\"&ascr;\":                            true,\n+\t\"&ast;\":                             true,\n+\t\"&asymp;\":                           true,\n+\t\"&asympeq;\":                         true,\n+\t\"&atilde\":                           true,\n+\t\"&atilde;\":                          true,\n+\t\"&auml\":                             true,\n+\t\"&auml;\":                            true,\n+\t\"&awconint;\":                        true,\n+\t\"&awint;\":                           true,\n+\t\"&bNot;\":                            true,\n+\t\"&backcong;\":                        true,\n+\t\"&backepsilon;\":                     true,\n+\t\"&backprime;\":                       true,\n+\t\"&backsim;\":                         true,\n+\t\"&backsimeq;\":                       true,\n+\t\"&barvee;\":                          true,\n+\t\"&barwed;\":                          true,\n+\t\"&barwedge;\":                        true,\n+\t\"&bbrk;\":                            true,\n+\t\"&bbrktbrk;\":                        true,\n+\t\"&bcong;\":                           true,\n+\t\"&bcy;\":                             true,\n+\t\"&bdquo;\":                           true,\n+\t\"&becaus;\":                          true,\n+\t\"&because;\":                         true,\n+\t\"&bemptyv;\":                         true,\n+\t\"&bepsi;\":                           true,\n+\t\"&bernou;\":                          true,\n+\t\"&beta;\":                            true,\n+\t\"&beth;\":                            true,\n+\t\"&between;\":                         true,\n+\t\"&bfr;\":                             true,\n+\t\"&bigcap;\":                          true,\n+\t\"&bigcirc;\":                         true,\n+\t\"&bigcup;\":                          true,\n+\t\"&bigodot;\":                         true,\n+\t\"&bigoplus;\":                        true,\n+\t\"&bigotimes;\":                       true,\n+\t\"&bigsqcup;\":                        true,\n+\t\"&bigstar;\":                         true,\n+\t\"&bigtriangledown;\":                 true,\n+\t\"&bigtriangleup;\":                   true,\n+\t\"&biguplus;\":                        true,\n+\t\"&bigvee;\":                          true,\n+\t\"&bigwedge;\":                        true,\n+\t\"&bkarow;\":                          true,\n+\t\"&blacklozenge;\":                    true,\n+\t\"&blacksquare;\":                     true,\n+\t\"&blacktriangle;\":                   true,\n+\t\"&blacktriangledown;\":               true,\n+\t\"&blacktriangleleft;\":               true,\n+\t\"&blacktriangleright;\":              true,\n+\t\"&blank;\":                           true,\n+\t\"&blk12;\":                           true,\n+\t\"&blk14;\":                           true,\n+\t\"&blk34;\":                           true,\n+\t\"&block;\":                           true,\n+\t\"&bne;\":                             true,\n+\t\"&bnequiv;\":                         true,\n+\t\"&bnot;\":                            true,\n+\t\"&bopf;\":                            true,\n+\t\"&bot;\":                             true,\n+\t\"&bottom;\":                          true,\n+\t\"&bowtie;\":                          true,\n+\t\"&boxDL;\":                           true,\n+\t\"&boxDR;\":                           true,\n+\t\"&boxDl;\":                           true,\n+\t\"&boxDr;\":                           true,\n+\t\"&boxH;\":                            true,\n+\t\"&boxHD;\":                           true,\n+\t\"&boxHU;\":                           true,\n+\t\"&boxHd;\":                           true,\n+\t\"&boxHu;\":                           true,\n+\t\"&boxUL;\":                           true,\n+\t\"&boxUR;\":                           true,\n+\t\"&boxUl;\":                           true,\n+\t\"&boxUr;\":                           true,\n+\t\"&boxV;\":                            true,\n+\t\"&boxVH;\":                           true,\n+\t\"&boxVL;\":                           true,\n+\t\"&boxVR;\":                           true,\n+\t\"&boxVh;\":                           true,\n+\t\"&boxVl;\":                           true,\n+\t\"&boxVr;\":                           true,\n+\t\"&boxbox;\":                          true,\n+\t\"&boxdL;\":                           true,\n+\t\"&boxdR;\":                           true,\n+\t\"&boxdl;\":                           true,\n+\t\"&boxdr;\":                           true,\n+\t\"&boxh;\":                            true,\n+\t\"&boxhD;\":                           true,\n+\t\"&boxhU;\":                           true,\n+\t\"&boxhd;\":                           true,\n+\t\"&boxhu;\":                           true,\n+\t\"&boxminus;\":                        true,\n+\t\"&boxplus;\":                         true,\n+\t\"&boxtimes;\":                        true,\n+\t\"&boxuL;\":                           true,\n+\t\"&boxuR;\":                           true,\n+\t\"&boxul;\":                           true,\n+\t\"&boxur;\":                           true,\n+\t\"&boxv;\":                            true,\n+\t\"&boxvH;\":                           true,\n+\t\"&boxvL;\":                           true,\n+\t\"&boxvR;\":                           true,\n+\t\"&boxvh;\":                           true,\n+\t\"&boxvl;\":                           true,\n+\t\"&boxvr;\":                           true,\n+\t\"&bprime;\":                          true,\n+\t\"&breve;\":                           true,\n+\t\"&brvbar\":                           true,\n+\t\"&brvbar;\":                          true,\n+\t\"&bscr;\":                            true,\n+\t\"&bsemi;\":                           true,\n+\t\"&bsim;\":                            true,\n+\t\"&bsime;\":                           true,\n+\t\"&bsol;\":                            true,\n+\t\"&bsolb;\":                           true,\n+\t\"&bsolhsub;\":                        true,\n+\t\"&bull;\":                            true,\n+\t\"&bullet;\":                          true,\n+\t\"&bump;\":                            true,\n+\t\"&bumpE;\":                           true,\n+\t\"&bumpe;\":                           true,\n+\t\"&bumpeq;\":                          true,\n+\t\"&cacute;\":                          true,\n+\t\"&cap;\":                             true,\n+\t\"&capand;\":                          true,\n+\t\"&capbrcup;\":                        true,\n+\t\"&capcap;\":                          true,\n+\t\"&capcup;\":                          true,\n+\t\"&capdot;\":                          true,\n+\t\"&caps;\":                            true,\n+\t\"&caret;\":                           true,\n+\t\"&caron;\":                           true,\n+\t\"&ccaps;\":                           true,\n+\t\"&ccaron;\":                          true,\n+\t\"&ccedil\":                           true,\n+\t\"&ccedil;\":                          true,\n+\t\"&ccirc;\":                           true,\n+\t\"&ccups;\":                           true,\n+\t\"&ccupssm;\":                         true,\n+\t\"&cdot;\":                            true,\n+\t\"&cedil\":                            true,\n+\t\"&cedil;\":                           true,\n+\t\"&cemptyv;\":                         true,\n+\t\"&cent\":                             true,\n+\t\"&cent;\":                            true,\n+\t\"&centerdot;\":                       true,\n+\t\"&cfr;\":                             true,\n+\t\"&chcy;\":                            true,\n+\t\"&check;\":                           true,\n+\t\"&checkmark;\":                       true,\n+\t\"&chi;\":                             true,\n+\t\"&cir;\":                             true,\n+\t\"&cirE;\":                            true,\n+\t\"&circ;\":                            true,\n+\t\"&circeq;\":                          true,\n+\t\"&circlearrowleft;\":                 true,\n+\t\"&circlearrowright;\":                true,\n+\t\"&circledR;\":                        true,\n+\t\"&circledS;\":                        true,\n+\t\"&circledast;\":                      true,\n+\t\"&circledcirc;\":                     true,\n+\t\"&circleddash;\":                     true,\n+\t\"&cire;\":                            true,\n+\t\"&cirfnint;\":                        true,\n+\t\"&cirmid;\":                          true,\n+\t\"&cirscir;\":                         true,\n+\t\"&clubs;\":                           true,\n+\t\"&clubsuit;\":                        true,\n+\t\"&colon;\":                           true,\n+\t\"&colone;\":                          true,\n+\t\"&coloneq;\":                         true,\n+\t\"&comma;\":                           true,\n+\t\"&commat;\":                          true,\n+\t\"&comp;\":                            true,\n+\t\"&compfn;\":                          true,\n+\t\"&complement;\":                      true,\n+\t\"&complexes;\":                       true,\n+\t\"&cong;\":                            true,\n+\t\"&congdot;\":                         true,\n+\t\"&conint;\":                          true,\n+\t\"&copf;\":                            true,\n+\t\"&coprod;\":                          true,\n+\t\"&copy\":                             true,\n+\t\"&copy;\":                            true,\n+\t\"&copysr;\":                          true,\n+\t\"&crarr;\":                           true,\n+\t\"&cross;\":                           true,\n+\t\"&cscr;\":                            true,\n+\t\"&csub;\":                            true,\n+\t\"&csube;\":                           true,\n+\t\"&csup;\":                            true,\n+\t\"&csupe;\":                           true,\n+\t\"&ctdot;\":                           true,\n+\t\"&cudarrl;\":                         true,\n+\t\"&cudarrr;\":                         true,\n+\t\"&cuepr;\":                           true,\n+\t\"&cuesc;\":                           true,\n+\t\"&cularr;\":                          true,\n+\t\"&cularrp;\":                         true,\n+\t\"&cup;\":                             true,\n+\t\"&cupbrcap;\":                        true,\n+\t\"&cupcap;\":                          true,\n+\t\"&cupcup;\":                          true,\n+\t\"&cupdot;\":                          true,\n+\t\"&cupor;\":                           true,\n+\t\"&cups;\":                            true,\n+\t\"&curarr;\":                          true,\n+\t\"&curarrm;\":                         true,\n+\t\"&curlyeqprec;\":                     true,\n+\t\"&curlyeqsucc;\":                     true,\n+\t\"&curlyvee;\":                        true,\n+\t\"&curlywedge;\":                      true,\n+\t\"&curren\":                           true,\n+\t\"&curren;\":                          true,\n+\t\"&curvearrowleft;\":                  true,\n+\t\"&curvearrowright;\":                 true,\n+\t\"&cuvee;\":                           true,\n+\t\"&cuwed;\":                           true,\n+\t\"&cwconint;\":                        true,\n+\t\"&cwint;\":                           true,\n+\t\"&cylcty;\":                          true,\n+\t\"&dArr;\":                            true,\n+\t\"&dHar;\":                            true,\n+\t\"&dagger;\":                          true,\n+\t\"&daleth;\":                          true,\n+\t\"&darr;\":                            true,\n+\t\"&dash;\":                            true,\n+\t\"&dashv;\":                           true,\n+\t\"&dbkarow;\":                         true,\n+\t\"&dblac;\":                           true,\n+\t\"&dcaron;\":                          true,\n+\t\"&dcy;\":                             true,\n+\t\"&dd;\":                              true,\n+\t\"&ddagger;\":                         true,\n+\t\"&ddarr;\":                           true,\n+\t\"&ddotseq;\":                         true,\n+\t\"&deg\":                              true,\n+\t\"&deg;\":                             true,\n+\t\"&delta;\":                           true,\n+\t\"&demptyv;\":                         true,\n+\t\"&dfisht;\":                          true,\n+\t\"&dfr;\":                             true,\n+\t\"&dharl;\":                           true,\n+\t\"&dharr;\":                           true,\n+\t\"&diam;\":                            true,\n+\t\"&diamond;\":                         true,\n+\t\"&diamondsuit;\":                     true,\n+\t\"&diams;\":                           true,\n+\t\"&die;\":                             true,\n+\t\"&digamma;\":                         true,\n+\t\"&disin;\":                           true,\n+\t\"&div;\":                             true,\n+\t\"&divide\":                           true,\n+\t\"&divide;\":                          true,\n+\t\"&divideontimes;\":                   true,\n+\t\"&divonx;\":                          true,\n+\t\"&djcy;\":                            true,\n+\t\"&dlcorn;\":                          true,\n+\t\"&dlcrop;\":                          true,\n+\t\"&dollar;\":                          true,\n+\t\"&dopf;\":                            true,\n+\t\"&dot;\":                             true,\n+\t\"&doteq;\":                           true,\n+\t\"&doteqdot;\":                        true,\n+\t\"&dotminus;\":                        true,\n+\t\"&dotplus;\":                         true,\n+\t\"&dotsquare;\":                       true,\n+\t\"&doublebarwedge;\":                  true,\n+\t\"&downarrow;\":                       true,\n+\t\"&downdownarrows;\":                  true,\n+\t\"&downharpoonleft;\":                 true,\n+\t\"&downharpoonright;\":                true,\n+\t\"&drbkarow;\":                        true,\n+\t\"&drcorn;\":                          true,\n+\t\"&drcrop;\":                          true,\n+\t\"&dscr;\":                            true,\n+\t\"&dscy;\":                            true,\n+\t\"&dsol;\":                            true,\n+\t\"&dstrok;\":                          true,\n+\t\"&dtdot;\":                           true,\n+\t\"&dtri;\":                            true,\n+\t\"&dtrif;\":                           true,\n+\t\"&duarr;\":                           true,\n+\t\"&duhar;\":                           true,\n+\t\"&dwangle;\":                         true,\n+\t\"&dzcy;\":                            true,\n+\t\"&dzigrarr;\":                        true,\n+\t\"&eDDot;\":                           true,\n+\t\"&eDot;\":                            true,\n+\t\"&eacute\":                           true,\n+\t\"&eacute;\":                          true,\n+\t\"&easter;\":                          true,\n+\t\"&ecaron;\":                          true,\n+\t\"&ecir;\":                            true,\n+\t\"&ecirc\":                            true,\n+\t\"&ecirc;\":                           true,\n+\t\"&ecolon;\":                          true,\n+\t\"&ecy;\":                             true,\n+\t\"&edot;\":                            true,\n+\t\"&ee;\":                              true,\n+\t\"&efDot;\":                           true,\n+\t\"&efr;\":                             true,\n+\t\"&eg;\":                              true,\n+\t\"&egrave\":                           true,\n+\t\"&egrave;\":                          true,\n+\t\"&egs;\":                             true,\n+\t\"&egsdot;\":                          true,\n+\t\"&el;\":                              true,\n+\t\"&elinters;\":                        true,\n+\t\"&ell;\":                             true,\n+\t\"&els;\":                             true,\n+\t\"&elsdot;\":                          true,\n+\t\"&emacr;\":                           true,\n+\t\"&empty;\":                           true,\n+\t\"&emptyset;\":                        true,\n+\t\"&emptyv;\":                          true,\n+\t\"&emsp13;\":                          true,\n+\t\"&emsp14;\":                          true,\n+\t\"&emsp;\":                            true,\n+\t\"&eng;\":                             true,\n+\t\"&ensp;\":                            true,\n+\t\"&eogon;\":                           true,\n+\t\"&eopf;\":                            true,\n+\t\"&epar;\":                            true,\n+\t\"&eparsl;\":                          true,\n+\t\"&eplus;\":                           true,\n+\t\"&epsi;\":                            true,\n+\t\"&epsilon;\":                         true,\n+\t\"&epsiv;\":                           true,\n+\t\"&eqcirc;\":                          true,\n+\t\"&eqcolon;\":                         true,\n+\t\"&eqsim;\":                           true,\n+\t\"&eqslantgtr;\":                      true,\n+\t\"&eqslantless;\":                     true,\n+\t\"&equals;\":                          true,\n+\t\"&equest;\":                          true,\n+\t\"&equiv;\":                           true,\n+\t\"&equivDD;\":                         true,\n+\t\"&eqvparsl;\":                        true,\n+\t\"&erDot;\":                           true,\n+\t\"&erarr;\":                           true,\n+\t\"&escr;\":                            true,\n+\t\"&esdot;\":                           true,\n+\t\"&esim;\":                            true,\n+\t\"&eta;\":                             true,\n+\t\"&eth\":                              true,\n+\t\"&eth;\":                             true,\n+\t\"&euml\":                             true,\n+\t\"&euml;\":                            true,\n+\t\"&euro;\":                            true,\n+\t\"&excl;\":                            true,\n+\t\"&exist;\":                           true,\n+\t\"&expectation;\":                     true,\n+\t\"&exponentiale;\":                    true,\n+\t\"&fallingdotseq;\":                   true,\n+\t\"&fcy;\":                             true,\n+\t\"&female;\":                          true,\n+\t\"&ffilig;\":                          true,\n+\t\"&fflig;\":                           true,\n+\t\"&ffllig;\":                          true,\n+\t\"&ffr;\":                             true,\n+\t\"&filig;\":                           true,\n+\t\"&fjlig;\":                           true,\n+\t\"&flat;\":                            true,\n+\t\"&fllig;\":                           true,\n+\t\"&fltns;\":                           true,\n+\t\"&fnof;\":                            true,\n+\t\"&fopf;\":                            true,\n+\t\"&forall;\":                          true,\n+\t\"&fork;\":                            true,\n+\t\"&forkv;\":                           true,\n+\t\"&fpartint;\":                        true,\n+\t\"&frac12\":                           true,\n+\t\"&frac12;\":                          true,\n+\t\"&frac13;\":                          true,\n+\t\"&frac14\":                           true,\n+\t\"&frac14;\":                          true,\n+\t\"&frac15;\":                          true,\n+\t\"&frac16;\":                          true,\n+\t\"&frac18;\":                          true,\n+\t\"&frac23;\":                          true,\n+\t\"&frac25;\":                          true,\n+\t\"&frac34\":                           true,\n+\t\"&frac34;\":                          true,\n+\t\"&frac35;\":                          true,\n+\t\"&frac38;\":                          true,\n+\t\"&frac45;\":                          true,\n+\t\"&frac56;\":                          true,\n+\t\"&frac58;\":                          true,\n+\t\"&frac78;\":                          true,\n+\t\"&frasl;\":                           true,\n+\t\"&frown;\":                           true,\n+\t\"&fscr;\":                            true,\n+\t\"&gE;\":                              true,\n+\t\"&gEl;\":                             true,\n+\t\"&gacute;\":                          true,\n+\t\"&gamma;\":                           true,\n+\t\"&gammad;\":                          true,\n+\t\"&gap;\":                             true,\n+\t\"&gbreve;\":                          true,\n+\t\"&gcirc;\":                           true,\n+\t\"&gcy;\":                             true,\n+\t\"&gdot;\":                            true,\n+\t\"&ge;\":                              true,\n+\t\"&gel;\":                             true,\n+\t\"&geq;\":                             true,\n+\t\"&geqq;\":                            true,\n+\t\"&geqslant;\":                        true,\n+\t\"&ges;\":                             true,\n+\t\"&gescc;\":                           true,\n+\t\"&gesdot;\":                          true,\n+\t\"&gesdoto;\":                         true,\n+\t\"&gesdotol;\":                        true,\n+\t\"&gesl;\":                            true,\n+\t\"&gesles;\":                          true,\n+\t\"&gfr;\":                             true,\n+\t\"&gg;\":                              true,\n+\t\"&ggg;\":                             true,\n+\t\"&gimel;\":                           true,\n+\t\"&gjcy;\":                            true,\n+\t\"&gl;\":                              true,\n+\t\"&glE;\":                             true,\n+\t\"&gla;\":                             true,\n+\t\"&glj;\":                             true,\n+\t\"&gnE;\":                             true,\n+\t\"&gnap;\":                            true,\n+\t\"&gnapprox;\":                        true,\n+\t\"&gne;\":                             true,\n+\t\"&gneq;\":                            true,\n+\t\"&gneqq;\":                           true,\n+\t\"&gnsim;\":                           true,\n+\t\"&gopf;\":                            true,\n+\t\"&grave;\":                           true,\n+\t\"&gscr;\":                            true,\n+\t\"&gsim;\":                            true,\n+\t\"&gsime;\":                           true,\n+\t\"&gsiml;\":                           true,\n+\t\"&gt\":                               true,\n+\t\"&gt;\":                              true,\n+\t\"&gtcc;\":                            true,\n+\t\"&gtcir;\":                           true,\n+\t\"&gtdot;\":                           true,\n+\t\"&gtlPar;\":                          true,\n+\t\"&gtquest;\":                         true,\n+\t\"&gtrapprox;\":                       true,\n+\t\"&gtrarr;\":                          true,\n+\t\"&gtrdot;\":                          true,\n+\t\"&gtreqless;\":                       true,\n+\t\"&gtreqqless;\":                      true,\n+\t\"&gtrless;\":                         true,\n+\t\"&gtrsim;\":                          true,\n+\t\"&gvertneqq;\":                       true,\n+\t\"&gvnE;\":                            true,\n+\t\"&hArr;\":                            true,\n+\t\"&hairsp;\":                          true,\n+\t\"&half;\":                            true,\n+\t\"&hamilt;\":                          true,\n+\t\"&hardcy;\":                          true,\n+\t\"&harr;\":                            true,\n+\t\"&harrcir;\":                         true,\n+\t\"&harrw;\":                           true,\n+\t\"&hbar;\":                            true,\n+\t\"&hcirc;\":                           true,\n+\t\"&hearts;\":                          true,\n+\t\"&heartsuit;\":                       true,\n+\t\"&hellip;\":                          true,\n+\t\"&hercon;\":                          true,\n+\t\"&hfr;\":                             true,\n+\t\"&hksearow;\":                        true,\n+\t\"&hkswarow;\":                        true,\n+\t\"&hoarr;\":                           true,\n+\t\"&homtht;\":                          true,\n+\t\"&hookleftarrow;\":                   true,\n+\t\"&hookrightarrow;\":                  true,\n+\t\"&hopf;\":                            true,\n+\t\"&horbar;\":                          true,\n+\t\"&hscr;\":                            true,\n+\t\"&hslash;\":                          true,\n+\t\"&hstrok;\":                          true,\n+\t\"&hybull;\":                          true,\n+\t\"&hyphen;\":                          true,\n+\t\"&iacute\":                           true,\n+\t\"&iacute;\":                          true,\n+\t\"&ic;\":                              true,\n+\t\"&icirc\":                            true,\n+\t\"&icirc;\":                           true,\n+\t\"&icy;\":                             true,\n+\t\"&iecy;\":                            true,\n+\t\"&iexcl\":                            true,\n+\t\"&iexcl;\":                           true,\n+\t\"&iff;\":                             true,\n+\t\"&ifr;\":                             true,\n+\t\"&igrave\":                           true,\n+\t\"&igrave;\":                          true,\n+\t\"&ii;\":                              true,\n+\t\"&iiiint;\":                          true,\n+\t\"&iiint;\":                           true,\n+\t\"&iinfin;\":                          true,\n+\t\"&iiota;\":                           true,\n+\t\"&ijlig;\":                           true,\n+\t\"&imacr;\":                           true,\n+\t\"&image;\":                           true,\n+\t\"&imagline;\":                        true,\n+\t\"&imagpart;\":                        true,\n+\t\"&imath;\":                           true,\n+\t\"&imof;\":                            true,\n+\t\"&imped;\":                           true,\n+\t\"&in;\":                              true,\n+\t\"&incare;\":                          true,\n+\t\"&infin;\":                           true,\n+\t\"&infintie;\":                        true,\n+\t\"&inodot;\":                          true,\n+\t\"&int;\":                             true,\n+\t\"&intcal;\":                          true,\n+\t\"&integers;\":                        true,\n+\t\"&intercal;\":                        true,\n+\t\"&intlarhk;\":                        true,\n+\t\"&intprod;\":                         true,\n+\t\"&iocy;\":                            true,\n+\t\"&iogon;\":                           true,\n+\t\"&iopf;\":                            true,\n+\t\"&iota;\":                            true,\n+\t\"&iprod;\":                           true,\n+\t\"&iquest\":                           true,\n+\t\"&iquest;\":                          true,\n+\t\"&iscr;\":                            true,\n+\t\"&isin;\":                            true,\n+\t\"&isinE;\":                           true,\n+\t\"&isindot;\":                         true,\n+\t\"&isins;\":                           true,\n+\t\"&isinsv;\":                          true,\n+\t\"&isinv;\":                           true,\n+\t\"&it;\":                              true,\n+\t\"&itilde;\":                          true,\n+\t\"&iukcy;\":                           true,\n+\t\"&iuml\":                             true,\n+\t\"&iuml;\":                            true,\n+\t\"&jcirc;\":                           true,\n+\t\"&jcy;\":                             true,\n+\t\"&jfr;\":                             true,\n+\t\"&jmath;\":                           true,\n+\t\"&jopf;\":                            true,\n+\t\"&jscr;\":                            true,\n+\t\"&jsercy;\":                          true,\n+\t\"&jukcy;\":                           true,\n+\t\"&kappa;\":                           true,\n+\t\"&kappav;\":                          true,\n+\t\"&kcedil;\":                          true,\n+\t\"&kcy;\":                             true,\n+\t\"&kfr;\":                             true,\n+\t\"&kgreen;\":                          true,\n+\t\"&khcy;\":                            true,\n+\t\"&kjcy;\":                            true,\n+\t\"&kopf;\":                            true,\n+\t\"&kscr;\":                            true,\n+\t\"&lAarr;\":                           true,\n+\t\"&lArr;\":                            true,\n+\t\"&lAtail;\":                          true,\n+\t\"&lBarr;\":                           true,\n+\t\"&lE;\":                              true,\n+\t\"&lEg;\":                             true,\n+\t\"&lHar;\":                            true,\n+\t\"&lacute;\":                          true,\n+\t\"&laemptyv;\":                        true,\n+\t\"&lagran;\":                          true,\n+\t\"&lambda;\":                          true,\n+\t\"&lang;\":                            true,\n+\t\"&langd;\":                           true,\n+\t\"&langle;\":                          true,\n+\t\"&lap;\":                             true,\n+\t\"&laquo\":                            true,\n+\t\"&laquo;\":                           true,\n+\t\"&larr;\":                            true,\n+\t\"&larrb;\":                           true,\n+\t\"&larrbfs;\":                         true,\n+\t\"&larrfs;\":                          true,\n+\t\"&larrhk;\":                          true,\n+\t\"&larrlp;\":                          true,\n+\t\"&larrpl;\":                          true,\n+\t\"&larrsim;\":                         true,\n+\t\"&larrtl;\":                          true,\n+\t\"&lat;\":                             true,\n+\t\"&latail;\":                          true,\n+\t\"&late;\":                            true,\n+\t\"&lates;\":                           true,\n+\t\"&lbarr;\":                           true,\n+\t\"&lbbrk;\":                           true,\n+\t\"&lbrace;\":                          true,\n+\t\"&lbrack;\":                          true,\n+\t\"&lbrke;\":                           true,\n+\t\"&lbrksld;\":                         true,\n+\t\"&lbrkslu;\":                         true,\n+\t\"&lcaron;\":                          true,\n+\t\"&lcedil;\":                          true,\n+\t\"&lceil;\":                           true,\n+\t\"&lcub;\":                            true,\n+\t\"&lcy;\":                             true,\n+\t\"&ldca;\":                            true,\n+\t\"&ldquo;\":                           true,\n+\t\"&ldquor;\":                          true,\n+\t\"&ldrdhar;\":                         true,\n+\t\"&ldrushar;\":                        true,\n+\t\"&ldsh;\":                            true,\n+\t\"&le;\":                              true,\n+\t\"&leftarrow;\":                       true,\n+\t\"&leftarrowtail;\":                   true,\n+\t\"&leftharpoondown;\":                 true,\n+\t\"&leftharpoonup;\":                   true,\n+\t\"&leftleftarrows;\":                  true,\n+\t\"&leftrightarrow;\":                  true,\n+\t\"&leftrightarrows;\":                 true,\n+\t\"&leftrightharpoons;\":               true,\n+\t\"&leftrightsquigarrow;\":             true,\n+\t\"&leftthreetimes;\":                  true,\n+\t\"&leg;\":                             true,\n+\t\"&leq;\":                             true,\n+\t\"&leqq;\":                            true,\n+\t\"&leqslant;\":                        true,\n+\t\"&les;\":                             true,\n+\t\"&lescc;\":                           true,\n+\t\"&lesdot;\":                          true,\n+\t\"&lesdoto;\":                         true,\n+\t\"&lesdotor;\":                        true,\n+\t\"&lesg;\":                            true,\n+\t\"&lesges;\":                          true,\n+\t\"&lessapprox;\":                      true,\n+\t\"&lessdot;\":                         true,\n+\t\"&lesseqgtr;\":                       true,\n+\t\"&lesseqqgtr;\":                      true,\n+\t\"&lessgtr;\":                         true,\n+\t\"&lesssim;\":                         true,\n+\t\"&lfisht;\":                          true,\n+\t\"&lfloor;\":                          true,\n+\t\"&lfr;\":                             true,\n+\t\"&lg;\":                              true,\n+\t\"&lgE;\":                             true,\n+\t\"&lhard;\":                           true,\n+\t\"&lharu;\":                           true,\n+\t\"&lharul;\":                          true,\n+\t\"&lhblk;\":                           true,\n+\t\"&ljcy;\":                            true,\n+\t\"&ll;\":                              true,\n+\t\"&llarr;\":                           true,\n+\t\"&llcorner;\":                        true,\n+\t\"&llhard;\":                          true,\n+\t\"&lltri;\":                           true,\n+\t\"&lmidot;\":                          true,\n+\t\"&lmoust;\":                          true,\n+\t\"&lmoustache;\":                      true,\n+\t\"&lnE;\":                             true,\n+\t\"&lnap;\":                            true,\n+\t\"&lnapprox;\":                        true,\n+\t\"&lne;\":                             true,\n+\t\"&lneq;\":                            true,\n+\t\"&lneqq;\":                           true,\n+\t\"&lnsim;\":                           true,\n+\t\"&loang;\":                           true,\n+\t\"&loarr;\":                           true,\n+\t\"&lobrk;\":                           true,\n+\t\"&longleftarrow;\":                   true,\n+\t\"&longleftrightarrow;\":              true,\n+\t\"&longmapsto;\":                      true,\n+\t\"&longrightarrow;\":                  true,\n+\t\"&looparrowleft;\":                   true,\n+\t\"&looparrowright;\":                  true,\n+\t\"&lopar;\":                           true,\n+\t\"&lopf;\":                            true,\n+\t\"&loplus;\":                          true,\n+\t\"&lotimes;\":                         true,\n+\t\"&lowast;\":                          true,\n+\t\"&lowbar;\":                          true,\n+\t\"&loz;\":                             true,\n+\t\"&lozenge;\":                         true,\n+\t\"&lozf;\":                            true,\n+\t\"&lpar;\":                            true,\n+\t\"&lparlt;\":                          true,\n+\t\"&lrarr;\":                           true,\n+\t\"&lrcorner;\":                        true,\n+\t\"&lrhar;\":                           true,\n+\t\"&lrhard;\":                          true,\n+\t\"&lrm;\":                             true,\n+\t\"&lrtri;\":                           true,\n+\t\"&lsaquo;\":                          true,\n+\t\"&lscr;\":                            true,\n+\t\"&lsh;\":                             true,\n+\t\"&lsim;\":                            true,\n+\t\"&lsime;\":                           true,\n+\t\"&lsimg;\":                           true,\n+\t\"&lsqb;\":                            true,\n+\t\"&lsquo;\":                           true,\n+\t\"&lsquor;\":                          true,\n+\t\"&lstrok;\":                          true,\n+\t\"&lt\":                               true,\n+\t\"&lt;\":                              true,\n+\t\"&ltcc;\":                            true,\n+\t\"&ltcir;\":                           true,\n+\t\"&ltdot;\":                           true,\n+\t\"&lthree;\":                          true,\n+\t\"&ltimes;\":                          true,\n+\t\"&ltlarr;\":                          true,\n+\t\"&ltquest;\":                         true,\n+\t\"&ltrPar;\":                          true,\n+\t\"&ltri;\":                            true,\n+\t\"&ltrie;\":                           true,\n+\t\"&ltrif;\":                           true,\n+\t\"&lurdshar;\":                        true,\n+\t\"&luruhar;\":                         true,\n+\t\"&lvertneqq;\":                       true,\n+\t\"&lvnE;\":                            true,\n+\t\"&mDDot;\":                           true,\n+\t\"&macr\":                             true,\n+\t\"&macr;\":                            true,\n+\t\"&male;\":                            true,\n+\t\"&malt;\":                            true,\n+\t\"&maltese;\":                         true,\n+\t\"&map;\":                             true,\n+\t\"&mapsto;\":                          true,\n+\t\"&mapstodown;\":                      true,\n+\t\"&mapstoleft;\":                      true,\n+\t\"&mapstoup;\":                        true,\n+\t\"&marker;\":                          true,\n+\t\"&mcomma;\":                          true,\n+\t\"&mcy;\":                             true,\n+\t\"&mdash;\":                           true,\n+\t\"&measuredangle;\":                   true,\n+\t\"&mfr;\":                             true,\n+\t\"&mho;\":                             true,\n+\t\"&micro\":                            true,\n+\t\"&micro;\":                           true,\n+\t\"&mid;\":                             true,\n+\t\"&midast;\":                          true,\n+\t\"&midcir;\":                          true,\n+\t\"&middot\":                           true,\n+\t\"&middot;\":                          true,\n+\t\"&minus;\":                           true,\n+\t\"&minusb;\":                          true,\n+\t\"&minusd;\":                          true,\n+\t\"&minusdu;\":                         true,\n+\t\"&mlcp;\":                            true,\n+\t\"&mldr;\":                            true,\n+\t\"&mnplus;\":                          true,\n+\t\"&models;\":                          true,\n+\t\"&mopf;\":                            true,\n+\t\"&mp;\":                              true,\n+\t\"&mscr;\":                            true,\n+\t\"&mstpos;\":                          true,\n+\t\"&mu;\":                              true,\n+\t\"&multimap;\":                        true,\n+\t\"&mumap;\":                           true,\n+\t\"&nGg;\":                             true,\n+\t\"&nGt;\":                             true,\n+\t\"&nGtv;\":                            true,\n+\t\"&nLeftarrow;\":                      true,\n+\t\"&nLeftrightarrow;\":                 true,\n+\t\"&nLl;\":                             true,\n+\t\"&nLt;\":                             true,\n+\t\"&nLtv;\":                            true,\n+\t\"&nRightarrow;\":                     true,\n+\t\"&nVDash;\":                          true,\n+\t\"&nVdash;\":                          true,\n+\t\"&nabla;\":                           true,\n+\t\"&nacute;\":                          true,\n+\t\"&nang;\":                            true,\n+\t\"&nap;\":                             true,\n+\t\"&napE;\":                            true,\n+\t\"&napid;\":                           true,\n+\t\"&napos;\":                           true,\n+\t\"&napprox;\":                         true,\n+\t\"&natur;\":                           true,\n+\t\"&natural;\":                         true,\n+\t\"&naturals;\":                        true,\n+\t\"&nbsp\":                             true,\n+\t\"&nbsp;\":                            true,\n+\t\"&nbump;\":                           true,\n+\t\"&nbumpe;\":                          true,\n+\t\"&ncap;\":                            true,\n+\t\"&ncaron;\":                          true,\n+\t\"&ncedil;\":                          true,\n+\t\"&ncong;\":                           true,\n+\t\"&ncongdot;\":                        true,\n+\t\"&ncup;\":                            true,\n+\t\"&ncy;\":                             true,\n+\t\"&ndash;\":                           true,\n+\t\"&ne;\":                              true,\n+\t\"&neArr;\":                           true,\n+\t\"&nearhk;\":                          true,\n+\t\"&nearr;\":                           true,\n+\t\"&nearrow;\":                         true,\n+\t\"&nedot;\":                           true,\n+\t\"&nequiv;\":                          true,\n+\t\"&nesear;\":                          true,\n+\t\"&nesim;\":                           true,\n+\t\"&nexist;\":                          true,\n+\t\"&nexists;\":                         true,\n+\t\"&nfr;\":                             true,\n+\t\"&ngE;\":                             true,\n+\t\"&nge;\":                             true,\n+\t\"&ngeq;\":                            true,\n+\t\"&ngeqq;\":                           true,\n+\t\"&ngeqslant;\":                       true,\n+\t\"&nges;\":                            true,\n+\t\"&ngsim;\":                           true,\n+\t\"&ngt;\":                             true,\n+\t\"&ngtr;\":                            true,\n+\t\"&nhArr;\":                           true,\n+\t\"&nharr;\":                           true,\n+\t\"&nhpar;\":                           true,\n+\t\"&ni;\":                              true,\n+\t\"&nis;\":                             true,\n+\t\"&nisd;\":                            true,\n+\t\"&niv;\":                             true,\n+\t\"&njcy;\":                            true,\n+\t\"&nlArr;\":                           true,\n+\t\"&nlE;\":                             true,\n+\t\"&nlarr;\":                           true,\n+\t\"&nldr;\":                            true,\n+\t\"&nle;\":                             true,\n+\t\"&nleftarrow;\":                      true,\n+\t\"&nleftrightarrow;\":                 true,\n+\t\"&nleq;\":                            true,\n+\t\"&nleqq;\":                           true,\n+\t\"&nleqslant;\":                       true,\n+\t\"&nles;\":                            true,\n+\t\"&nless;\":                           true,\n+\t\"&nlsim;\":                           true,\n+\t\"&nlt;\":                             true,\n+\t\"&nltri;\":                           true,\n+\t\"&nltrie;\":                          true,\n+\t\"&nmid;\":                            true,\n+\t\"&nopf;\":                            true,\n+\t\"&not\":                              true,\n+\t\"&not;\":                             true,\n+\t\"&notin;\":                           true,\n+\t\"&notinE;\":                          true,\n+\t\"&notindot;\":                        true,\n+\t\"&notinva;\":                         true,\n+\t\"&notinvb;\":                         true,\n+\t\"&notinvc;\":                         true,\n+\t\"&notni;\":                           true,\n+\t\"&notniva;\":                         true,\n+\t\"&notnivb;\":                         true,\n+\t\"&notnivc;\":                         true,\n+\t\"&npar;\":                            true,\n+\t\"&nparallel;\":                       true,\n+\t\"&nparsl;\":                          true,\n+\t\"&npart;\":                           true,\n+\t\"&npolint;\":                         true,\n+\t\"&npr;\":                             true,\n+\t\"&nprcue;\":                          true,\n+\t\"&npre;\":                            true,\n+\t\"&nprec;\":                           true,\n+\t\"&npreceq;\":                         true,\n+\t\"&nrArr;\":                           true,\n+\t\"&nrarr;\":                           true,\n+\t\"&nrarrc;\":                          true,\n+\t\"&nrarrw;\":                          true,\n+\t\"&nrightarrow;\":                     true,\n+\t\"&nrtri;\":                           true,\n+\t\"&nrtrie;\":                          true,\n+\t\"&nsc;\":                             true,\n+\t\"&nsccue;\":                          true,\n+\t\"&nsce;\":                            true,\n+\t\"&nscr;\":                            true,\n+\t\"&nshortmid;\":                       true,\n+\t\"&nshortparallel;\":                  true,\n+\t\"&nsim;\":                            true,\n+\t\"&nsime;\":                           true,\n+\t\"&nsimeq;\":                          true,\n+\t\"&nsmid;\":                           true,\n+\t\"&nspar;\":                           true,\n+\t\"&nsqsube;\":                         true,\n+\t\"&nsqsupe;\":                         true,\n+\t\"&nsub;\":                            true,\n+\t\"&nsubE;\":                           true,\n+\t\"&nsube;\":                           true,\n+\t\"&nsubset;\":                         true,\n+\t\"&nsubseteq;\":                       true,\n+\t\"&nsubseteqq;\":                      true,\n+\t\"&nsucc;\":                           true,\n+\t\"&nsucceq;\":                         true,\n+\t\"&nsup;\":                            true,\n+\t\"&nsupE;\":                           true,\n+\t\"&nsupe;\":                           true,\n+\t\"&nsupset;\":                         true,\n+\t\"&nsupseteq;\":                       true,\n+\t\"&nsupseteqq;\":                      true,\n+\t\"&ntgl;\":                            true,\n+\t\"&ntilde\":                           true,\n+\t\"&ntilde;\":                          true,\n+\t\"&ntlg;\":                            true,\n+\t\"&ntriangleleft;\":                   true,\n+\t\"&ntrianglelefteq;\":                 true,\n+\t\"&ntriangleright;\":                  true,\n+\t\"&ntrianglerighteq;\":                true,\n+\t\"&nu;\":                              true,\n+\t\"&num;\":                             true,\n+\t\"&numero;\":                          true,\n+\t\"&numsp;\":                           true,\n+\t\"&nvDash;\":                          true,\n+\t\"&nvHarr;\":                          true,\n+\t\"&nvap;\":                            true,\n+\t\"&nvdash;\":                          true,\n+\t\"&nvge;\":                            true,\n+\t\"&nvgt;\":                            true,\n+\t\"&nvinfin;\":                         true,\n+\t\"&nvlArr;\":                          true,\n+\t\"&nvle;\":                            true,\n+\t\"&nvlt;\":                            true,\n+\t\"&nvltrie;\":                         true,\n+\t\"&nvrArr;\":                          true,\n+\t\"&nvrtrie;\":                         true,\n+\t\"&nvsim;\":                           true,\n+\t\"&nwArr;\":                           true,\n+\t\"&nwarhk;\":                          true,\n+\t\"&nwarr;\":                           true,\n+\t\"&nwarrow;\":                         true,\n+\t\"&nwnear;\":                          true,\n+\t\"&oS;\":                              true,\n+\t\"&oacute\":                           true,\n+\t\"&oacute;\":                          true,\n+\t\"&oast;\":                            true,\n+\t\"&ocir;\":                            true,\n+\t\"&ocirc\":                            true,\n+\t\"&ocirc;\":                           true,\n+\t\"&ocy;\":                             true,\n+\t\"&odash;\":                           true,\n+\t\"&odblac;\":                          true,\n+\t\"&odiv;\":                            true,\n+\t\"&odot;\":                            true,\n+\t\"&odsold;\":                          true,\n+\t\"&oelig;\":                           true,\n+\t\"&ofcir;\":                           true,\n+\t\"&ofr;\":                             true,\n+\t\"&ogon;\":                            true,\n+\t\"&ograve\":                           true,\n+\t\"&ograve;\":                          true,\n+\t\"&ogt;\":                             true,\n+\t\"&ohbar;\":                           true,\n+\t\"&ohm;\":                             true,\n+\t\"&oint;\":                            true,\n+\t\"&olarr;\":                           true,\n+\t\"&olcir;\":                           true,\n+\t\"&olcross;\":                         true,\n+\t\"&oline;\":                           true,\n+\t\"&olt;\":                             true,\n+\t\"&omacr;\":                           true,\n+\t\"&omega;\":                           true,\n+\t\"&omicron;\":                         true,\n+\t\"&omid;\":                            true,\n+\t\"&ominus;\":                          true,\n+\t\"&oopf;\":                            true,\n+\t\"&opar;\":                            true,\n+\t\"&operp;\":                           true,\n+\t\"&oplus;\":                           true,\n+\t\"&or;\":                              true,\n+\t\"&orarr;\":                           true,\n+\t\"&ord;\":                             true,\n+\t\"&order;\":                           true,\n+\t\"&orderof;\":                         true,\n+\t\"&ordf\":                             true,\n+\t\"&ordf;\":                            true,\n+\t\"&ordm\":                             true,\n+\t\"&ordm;\":                            true,\n+\t\"&origof;\":                          true,\n+\t\"&oror;\":                            true,\n+\t\"&orslope;\":                         true,\n+\t\"&orv;\":                             true,\n+\t\"&oscr;\":                            true,\n+\t\"&oslash\":                           true,\n+\t\"&oslash;\":                          true,\n+\t\"&osol;\":                            true,\n+\t\"&otilde\":                           true,\n+\t\"&otilde;\":                          true,\n+\t\"&otimes;\":                          true,\n+\t\"&otimesas;\":                        true,\n+\t\"&ouml\":                             true,\n+\t\"&ouml;\":                            true,\n+\t\"&ovbar;\":                           true,\n+\t\"&par;\":                             true,\n+\t\"&para\":                             true,\n+\t\"&para;\":                            true,\n+\t\"&parallel;\":                        true,\n+\t\"&parsim;\":                          true,\n+\t\"&parsl;\":                           true,\n+\t\"&part;\":                            true,\n+\t\"&pcy;\":                             true,\n+\t\"&percnt;\":                          true,\n+\t\"&period;\":                          true,\n+\t\"&permil;\":                          true,\n+\t\"&perp;\":                            true,\n+\t\"&pertenk;\":                         true,\n+\t\"&pfr;\":                             true,\n+\t\"&phi;\":                             true,\n+\t\"&phiv;\":                            true,\n+\t\"&phmmat;\":                          true,\n+\t\"&phone;\":                           true,\n+\t\"&pi;\":                              true,\n+\t\"&pitchfork;\":                       true,\n+\t\"&piv;\":                             true,\n+\t\"&planck;\":                          true,\n+\t\"&planckh;\":                         true,\n+\t\"&plankv;\":                          true,\n+\t\"&plus;\":                            true,\n+\t\"&plusacir;\":                        true,\n+\t\"&plusb;\":                           true,\n+\t\"&pluscir;\":                         true,\n+\t\"&plusdo;\":                          true,\n+\t\"&plusdu;\":                          true,\n+\t\"&pluse;\":                           true,\n+\t\"&plusmn\":                           true,\n+\t\"&plusmn;\":                          true,\n+\t\"&plussim;\":                         true,\n+\t\"&plustwo;\":                         true,\n+\t\"&pm;\":                              true,\n+\t\"&pointint;\":                        true,\n+\t\"&popf;\":                            true,\n+\t\"&pound\":                            true,\n+\t\"&pound;\":                           true,\n+\t\"&pr;\":                              true,\n+\t\"&prE;\":                             true,\n+\t\"&prap;\":                            true,\n+\t\"&prcue;\":                           true,\n+\t\"&pre;\":                             true,\n+\t\"&prec;\":                            true,\n+\t\"&precapprox;\":                      true,\n+\t\"&preccurlyeq;\":                     true,\n+\t\"&preceq;\":                          true,\n+\t\"&precnapprox;\":                     true,\n+\t\"&precneqq;\":                        true,\n+\t\"&precnsim;\":                        true,\n+\t\"&precsim;\":                         true,\n+\t\"&prime;\":                           true,\n+\t\"&primes;\":                          true,\n+\t\"&prnE;\":                            true,\n+\t\"&prnap;\":                           true,\n+\t\"&prnsim;\":                          true,\n+\t\"&prod;\":                            true,\n+\t\"&profalar;\":                        true,\n+\t\"&profline;\":                        true,\n+\t\"&profsurf;\":                        true,\n+\t\"&prop;\":                            true,\n+\t\"&propto;\":                          true,\n+\t\"&prsim;\":                           true,\n+\t\"&prurel;\":                          true,\n+\t\"&pscr;\":                            true,\n+\t\"&psi;\":                             true,\n+\t\"&puncsp;\":                          true,\n+\t\"&qfr;\":                             true,\n+\t\"&qint;\":                            true,\n+\t\"&qopf;\":                            true,\n+\t\"&qprime;\":                          true,\n+\t\"&qscr;\":                            true,\n+\t\"&quaternions;\":                     true,\n+\t\"&quatint;\":                         true,\n+\t\"&quest;\":                           true,\n+\t\"&questeq;\":                         true,\n+\t\"&quot\":                             true,\n+\t\"&quot;\":                            true,\n+\t\"&rAarr;\":                           true,\n+\t\"&rArr;\":                            true,\n+\t\"&rAtail;\":                          true,\n+\t\"&rBarr;\":                           true,\n+\t\"&rHar;\":                            true,\n+\t\"&race;\":                            true,\n+\t\"&racute;\":                          true,\n+\t\"&radic;\":                           true,\n+\t\"&raemptyv;\":                        true,\n+\t\"&rang;\":                            true,\n+\t\"&rangd;\":                           true,\n+\t\"&range;\":                           true,\n+\t\"&rangle;\":                          true,\n+\t\"&raquo\":                            true,\n+\t\"&raquo;\":                           true,\n+\t\"&rarr;\":                            true,\n+\t\"&rarrap;\":                          true,\n+\t\"&rarrb;\":                           true,\n+\t\"&rarrbfs;\":                         true,\n+\t\"&rarrc;\":                           true,\n+\t\"&rarrfs;\":                          true,\n+\t\"&rarrhk;\":                          true,\n+\t\"&rarrlp;\":                          true,\n+\t\"&rarrpl;\":                          true,\n+\t\"&rarrsim;\":                         true,\n+\t\"&rarrtl;\":                          true,\n+\t\"&rarrw;\":                           true,\n+\t\"&ratail;\":                          true,\n+\t\"&ratio;\":                           true,\n+\t\"&rationals;\":                       true,\n+\t\"&rbarr;\":                           true,\n+\t\"&rbbrk;\":                           true,\n+\t\"&rbrace;\":                          true,\n+\t\"&rbrack;\":                          true,\n+\t\"&rbrke;\":                           true,\n+\t\"&rbrksld;\":                         true,\n+\t\"&rbrkslu;\":                         true,\n+\t\"&rcaron;\":                          true,\n+\t\"&rcedil;\":                          true,\n+\t\"&rceil;\":                           true,\n+\t\"&rcub;\":                            true,\n+\t\"&rcy;\":                             true,\n+\t\"&rdca;\":                            true,\n+\t\"&rdldhar;\":                         true,\n+\t\"&rdquo;\":                           true,\n+\t\"&rdquor;\":                          true,\n+\t\"&rdsh;\":                            true,\n+\t\"&real;\":                            true,\n+\t\"&realine;\":                         true,\n+\t\"&realpart;\":                        true,\n+\t\"&reals;\":                           true,\n+\t\"&rect;\":                            true,\n+\t\"&reg\":                              true,\n+\t\"&reg;\":                             true,\n+\t\"&rfisht;\":                          true,\n+\t\"&rfloor;\":                          true,\n+\t\"&rfr;\":                             true,\n+\t\"&rhard;\":                           true,\n+\t\"&rharu;\":                           true,\n+\t\"&rharul;\":                          true,\n+\t\"&rho;\":                             true,\n+\t\"&rhov;\":                            true,\n+\t\"&rightarrow;\":                      true,\n+\t\"&rightarrowtail;\":                  true,\n+\t\"&rightharpoondown;\":                true,\n+\t\"&rightharpoonup;\":                  true,\n+\t\"&rightleftarrows;\":                 true,\n+\t\"&rightleftharpoons;\":               true,\n+\t\"&rightrightarrows;\":                true,\n+\t\"&rightsquigarrow;\":                 true,\n+\t\"&rightthreetimes;\":                 true,\n+\t\"&ring;\":                            true,\n+\t\"&risingdotseq;\":                    true,\n+\t\"&rlarr;\":                           true,\n+\t\"&rlhar;\":                           true,\n+\t\"&rlm;\":                             true,\n+\t\"&rmoust;\":                          true,\n+\t\"&rmoustache;\":                      true,\n+\t\"&rnmid;\":                           true,\n+\t\"&roang;\":                           true,\n+\t\"&roarr;\":                           true,\n+\t\"&robrk;\":                           true,\n+\t\"&ropar;\":                           true,\n+\t\"&ropf;\":                            true,\n+\t\"&roplus;\":                          true,\n+\t\"&rotimes;\":                         true,\n+\t\"&rpar;\":                            true,\n+\t\"&rpargt;\":                          true,\n+\t\"&rppolint;\":                        true,\n+\t\"&rrarr;\":                           true,\n+\t\"&rsaquo;\":                          true,\n+\t\"&rscr;\":                            true,\n+\t\"&rsh;\":                             true,\n+\t\"&rsqb;\":                            true,\n+\t\"&rsquo;\":                           true,\n+\t\"&rsquor;\":                          true,\n+\t\"&rthree;\":                          true,\n+\t\"&rtimes;\":                          true,\n+\t\"&rtri;\":                            true,\n+\t\"&rtrie;\":                           true,\n+\t\"&rtrif;\":                           true,\n+\t\"&rtriltri;\":                        true,\n+\t\"&ruluhar;\":                         true,\n+\t\"&rx;\":                              true,\n+\t\"&sacute;\":                          true,\n+\t\"&sbquo;\":                           true,\n+\t\"&sc;\":                              true,\n+\t\"&scE;\":                             true,\n+\t\"&scap;\":                            true,\n+\t\"&scaron;\":                          true,\n+\t\"&sccue;\":                           true,\n+\t\"&sce;\":                             true,\n+\t\"&scedil;\":                          true,\n+\t\"&scirc;\":                           true,\n+\t\"&scnE;\":                            true,\n+\t\"&scnap;\":                           true,\n+\t\"&scnsim;\":                          true,\n+\t\"&scpolint;\":                        true,\n+\t\"&scsim;\":                           true,\n+\t\"&scy;\":                             true,\n+\t\"&sdot;\":                            true,\n+\t\"&sdotb;\":                           true,\n+\t\"&sdote;\":                           true,\n+\t\"&seArr;\":                           true,\n+\t\"&searhk;\":                          true,\n+\t\"&searr;\":                           true,\n+\t\"&searrow;\":                         true,\n+\t\"&sect\":                             true,\n+\t\"&sect;\":                            true,\n+\t\"&semi;\":                            true,\n+\t\"&seswar;\":                          true,\n+\t\"&setminus;\":                        true,\n+\t\"&setmn;\":                           true,\n+\t\"&sext;\":                            true,\n+\t\"&sfr;\":                             true,\n+\t\"&sfrown;\":                          true,\n+\t\"&sharp;\":                           true,\n+\t\"&shchcy;\":                          true,\n+\t\"&shcy;\":                            true,\n+\t\"&shortmid;\":                        true,\n+\t\"&shortparallel;\":                   true,\n+\t\"&shy\":                              true,\n+\t\"&shy;\":                             true,\n+\t\"&sigma;\":                           true,\n+\t\"&sigmaf;\":                          true,\n+\t\"&sigmav;\":                          true,\n+\t\"&sim;\":                             true,\n+\t\"&simdot;\":                          true,\n+\t\"&sime;\":                            true,\n+\t\"&simeq;\":                           true,\n+\t\"&simg;\":                            true,\n+\t\"&simgE;\":                           true,\n+\t\"&siml;\":                            true,\n+\t\"&simlE;\":                           true,\n+\t\"&simne;\":                           true,\n+\t\"&simplus;\":                         true,\n+\t\"&simrarr;\":                         true,\n+\t\"&slarr;\":                           true,\n+\t\"&smallsetminus;\":                   true,\n+\t\"&smashp;\":                          true,\n+\t\"&smeparsl;\":                        true,\n+\t\"&smid;\":                            true,\n+\t\"&smile;\":                           true,\n+\t\"&smt;\":                             true,\n+\t\"&smte;\":                            true,\n+\t\"&smtes;\":                           true,\n+\t\"&softcy;\":                          true,\n+\t\"&sol;\":                             true,\n+\t\"&solb;\":                            true,\n+\t\"&solbar;\":                          true,\n+\t\"&sopf;\":                            true,\n+\t\"&spades;\":                          true,\n+\t\"&spadesuit;\":                       true,\n+\t\"&spar;\":                            true,\n+\t\"&sqcap;\":                           true,\n+\t\"&sqcaps;\":                          true,\n+\t\"&sqcup;\":                           true,\n+\t\"&sqcups;\":                          true,\n+\t\"&sqsub;\":                           true,\n+\t\"&sqsube;\":                          true,\n+\t\"&sqsubset;\":                        true,\n+\t\"&sqsubseteq;\":                      true,\n+\t\"&sqsup;\":                           true,\n+\t\"&sqsupe;\":                          true,\n+\t\"&sqsupset;\":                        true,\n+\t\"&sqsupseteq;\":                      true,\n+\t\"&squ;\":                             true,\n+\t\"&square;\":                          true,\n+\t\"&squarf;\":                          true,\n+\t\"&squf;\":                            true,\n+\t\"&srarr;\":                           true,\n+\t\"&sscr;\":                            true,\n+\t\"&ssetmn;\":                          true,\n+\t\"&ssmile;\":                          true,\n+\t\"&sstarf;\":                          true,\n+\t\"&star;\":                            true,\n+\t\"&starf;\":                           true,\n+\t\"&straightepsilon;\":                 true,\n+\t\"&straightphi;\":                     true,\n+\t\"&strns;\":                           true,\n+\t\"&sub;\":                             true,\n+\t\"&subE;\":                            true,\n+\t\"&subdot;\":                          true,\n+\t\"&sube;\":                            true,\n+\t\"&subedot;\":                         true,\n+\t\"&submult;\":                         true,\n+\t\"&subnE;\":                           true,\n+\t\"&subne;\":                           true,\n+\t\"&subplus;\":                         true,\n+\t\"&subrarr;\":                         true,\n+\t\"&subset;\":                          true,\n+\t\"&subseteq;\":                        true,\n+\t\"&subseteqq;\":                       true,\n+\t\"&subsetneq;\":                       true,\n+\t\"&subsetneqq;\":                      true,\n+\t\"&subsim;\":                          true,\n+\t\"&subsub;\":                          true,\n+\t\"&subsup;\":                          true,\n+\t\"&succ;\":                            true,\n+\t\"&succapprox;\":                      true,\n+\t\"&succcurlyeq;\":                     true,\n+\t\"&succeq;\":                          true,\n+\t\"&succnapprox;\":                     true,\n+\t\"&succneqq;\":                        true,\n+\t\"&succnsim;\":                        true,\n+\t\"&succsim;\":                         true,\n+\t\"&sum;\":                             true,\n+\t\"&sung;\":                            true,\n+\t\"&sup1\":                             true,\n+\t\"&sup1;\":                            true,\n+\t\"&sup2\":                             true,\n+\t\"&sup2;\":                            true,\n+\t\"&sup3\":                             true,\n+\t\"&sup3;\":                            true,\n+\t\"&sup;\":                             true,\n+\t\"&supE;\":                            true,\n+\t\"&supdot;\":                          true,\n+\t\"&supdsub;\":                         true,\n+\t\"&supe;\":                            true,\n+\t\"&supedot;\":                         true,\n+\t\"&suphsol;\":                         true,\n+\t\"&suphsub;\":                         true,\n+\t\"&suplarr;\":                         true,\n+\t\"&supmult;\":                         true,\n+\t\"&supnE;\":                           true,\n+\t\"&supne;\":                           true,\n+\t\"&supplus;\":                         true,\n+\t\"&supset;\":                          true,\n+\t\"&supseteq;\":                        true,\n+\t\"&supseteqq;\":                       true,\n+\t\"&supsetneq;\":                       true,\n+\t\"&supsetneqq;\":                      true,\n+\t\"&supsim;\":                          true,\n+\t\"&supsub;\":                          true,\n+\t\"&supsup;\":                          true,\n+\t\"&swArr;\":                           true,\n+\t\"&swarhk;\":                          true,\n+\t\"&swarr;\":                           true,\n+\t\"&swarrow;\":                         true,\n+\t\"&swnwar;\":                          true,\n+\t\"&szlig\":                            true,\n+\t\"&szlig;\":                           true,\n+\t\"&target;\":                          true,\n+\t\"&tau;\":                             true,\n+\t\"&tbrk;\":                            true,\n+\t\"&tcaron;\":                          true,\n+\t\"&tcedil;\":                          true,\n+\t\"&tcy;\":                             true,\n+\t\"&tdot;\":                            true,\n+\t\"&telrec;\":                          true,\n+\t\"&tfr;\":                             true,\n+\t\"&there4;\":                          true,\n+\t\"&therefore;\":                       true,\n+\t\"&theta;\":                           true,\n+\t\"&thetasym;\":                        true,\n+\t\"&thetav;\":                          true,\n+\t\"&thickapprox;\":                     true,\n+\t\"&thicksim;\":                        true,\n+\t\"&thinsp;\":                          true,\n+\t\"&thkap;\":                           true,\n+\t\"&thksim;\":                          true,\n+\t\"&thorn\":                            true,\n+\t\"&thorn;\":                           true,\n+\t\"&tilde;\":                           true,\n+\t\"&times\":                            true,\n+\t\"&times;\":                           true,\n+\t\"&timesb;\":                          true,\n+\t\"&timesbar;\":                        true,\n+\t\"&timesd;\":                          true,\n+\t\"&tint;\":                            true,\n+\t\"&toea;\":                            true,\n+\t\"&top;\":                             true,\n+\t\"&topbot;\":                          true,\n+\t\"&topcir;\":                          true,\n+\t\"&topf;\":                            true,\n+\t\"&topfork;\":                         true,\n+\t\"&tosa;\":                            true,\n+\t\"&tprime;\":                          true,\n+\t\"&trade;\":                           true,\n+\t\"&triangle;\":                        true,\n+\t\"&triangledown;\":                    true,\n+\t\"&triangleleft;\":                    true,\n+\t\"&trianglelefteq;\":                  true,\n+\t\"&triangleq;\":                       true,\n+\t\"&triangleright;\":                   true,\n+\t\"&trianglerighteq;\":                 true,\n+\t\"&tridot;\":                          true,\n+\t\"&trie;\":                            true,\n+\t\"&triminus;\":                        true,\n+\t\"&triplus;\":                         true,\n+\t\"&trisb;\":                           true,\n+\t\"&tritime;\":                         true,\n+\t\"&trpezium;\":                        true,\n+\t\"&tscr;\":                            true,\n+\t\"&tscy;\":                            true,\n+\t\"&tshcy;\":                           true,\n+\t\"&tstrok;\":                          true,\n+\t\"&twixt;\":                           true,\n+\t\"&twoheadleftarrow;\":                true,\n+\t\"&twoheadrightarrow;\":               true,\n+\t\"&uArr;\":                            true,\n+\t\"&uHar;\":                            true,\n+\t\"&uacute\":                           true,\n+\t\"&uacute;\":                          true,\n+\t\"&uarr;\":                            true,\n+\t\"&ubrcy;\":                           true,\n+\t\"&ubreve;\":                          true,\n+\t\"&ucirc\":                            true,\n+\t\"&ucirc;\":                           true,\n+\t\"&ucy;\":                             true,\n+\t\"&udarr;\":                           true,\n+\t\"&udblac;\":                          true,\n+\t\"&udhar;\":                           true,\n+\t\"&ufisht;\":                          true,\n+\t\"&ufr;\":                             true,\n+\t\"&ugrave\":                           true,\n+\t\"&ugrave;\":                          true,\n+\t\"&uharl;\":                           true,\n+\t\"&uharr;\":                           true,\n+\t\"&uhblk;\":                           true,\n+\t\"&ulcorn;\":                          true,\n+\t\"&ulcorner;\":                        true,\n+\t\"&ulcrop;\":                          true,\n+\t\"&ultri;\":                           true,\n+\t\"&umacr;\":                           true,\n+\t\"&uml\":                              true,\n+\t\"&uml;\":                             true,\n+\t\"&uogon;\":                           true,\n+\t\"&uopf;\":                            true,\n+\t\"&uparrow;\":                         true,\n+\t\"&updownarrow;\":                     true,\n+\t\"&upharpoonleft;\":                   true,\n+\t\"&upharpoonright;\":                  true,\n+\t\"&uplus;\":                           true,\n+\t\"&upsi;\":                            true,\n+\t\"&upsih;\":                           true,\n+\t\"&upsilon;\":                         true,\n+\t\"&upuparrows;\":                      true,\n+\t\"&urcorn;\":                          true,\n+\t\"&urcorner;\":                        true,\n+\t\"&urcrop;\":                          true,\n+\t\"&uring;\":                           true,\n+\t\"&urtri;\":                           true,\n+\t\"&uscr;\":                            true,\n+\t\"&utdot;\":                           true,\n+\t\"&utilde;\":                          true,\n+\t\"&utri;\":                            true,\n+\t\"&utrif;\":                           true,\n+\t\"&uuarr;\":                           true,\n+\t\"&uuml\":                             true,\n+\t\"&uuml;\":                            true,\n+\t\"&uwangle;\":                         true,\n+\t\"&vArr;\":                            true,\n+\t\"&vBar;\":                            true,\n+\t\"&vBarv;\":                           true,\n+\t\"&vDash;\":                           true,\n+\t\"&vangrt;\":                          true,\n+\t\"&varepsilon;\":                      true,\n+\t\"&varkappa;\":                        true,\n+\t\"&varnothing;\":                      true,\n+\t\"&varphi;\":                          true,\n+\t\"&varpi;\":                           true,\n+\t\"&varpropto;\":                       true,\n+\t\"&varr;\":                            true,\n+\t\"&varrho;\":                          true,\n+\t\"&varsigma;\":                        true,\n+\t\"&varsubsetneq;\":                    true,\n+\t\"&varsubsetneqq;\":                   true,\n+\t\"&varsupsetneq;\":                    true,\n+\t\"&varsupsetneqq;\":                   true,\n+\t\"&vartheta;\":                        true,\n+\t\"&vartriangleleft;\":                 true,\n+\t\"&vartriangleright;\":                true,\n+\t\"&vcy;\":                             true,\n+\t\"&vdash;\":                           true,\n+\t\"&vee;\":                             true,\n+\t\"&veebar;\":                          true,\n+\t\"&veeeq;\":                           true,\n+\t\"&vellip;\":                          true,\n+\t\"&verbar;\":                          true,\n+\t\"&vert;\":                            true,\n+\t\"&vfr;\":                             true,\n+\t\"&vltri;\":                           true,\n+\t\"&vnsub;\":                           true,\n+\t\"&vnsup;\":                           true,\n+\t\"&vopf;\":                            true,\n+\t\"&vprop;\":                           true,\n+\t\"&vrtri;\":                           true,\n+\t\"&vscr;\":                            true,\n+\t\"&vsubnE;\":                          true,\n+\t\"&vsubne;\":                          true,\n+\t\"&vsupnE;\":                          true,\n+\t\"&vsupne;\":                          true,\n+\t\"&vzigzag;\":                         true,\n+\t\"&wcirc;\":                           true,\n+\t\"&wedbar;\":                          true,\n+\t\"&wedge;\":                           true,\n+\t\"&wedgeq;\":                          true,\n+\t\"&weierp;\":                          true,\n+\t\"&wfr;\":                             true,\n+\t\"&wopf;\":                            true,\n+\t\"&wp;\":                              true,\n+\t\"&wr;\":                              true,\n+\t\"&wreath;\":                          true,\n+\t\"&wscr;\":                            true,\n+\t\"&xcap;\":                            true,\n+\t\"&xcirc;\":                           true,\n+\t\"&xcup;\":                            true,\n+\t\"&xdtri;\":                           true,\n+\t\"&xfr;\":                             true,\n+\t\"&xhArr;\":                           true,\n+\t\"&xharr;\":                           true,\n+\t\"&xi;\":                              true,\n+\t\"&xlArr;\":                           true,\n+\t\"&xlarr;\":                           true,\n+\t\"&xmap;\":                            true,\n+\t\"&xnis;\":                            true,\n+\t\"&xodot;\":                           true,\n+\t\"&xopf;\":                            true,\n+\t\"&xoplus;\":                          true,\n+\t\"&xotime;\":                          true,\n+\t\"&xrArr;\":                           true,\n+\t\"&xrarr;\":                           true,\n+\t\"&xscr;\":                            true,\n+\t\"&xsqcup;\":                          true,\n+\t\"&xuplus;\":                          true,\n+\t\"&xutri;\":                           true,\n+\t\"&xvee;\":                            true,\n+\t\"&xwedge;\":                          true,\n+\t\"&yacute\":                           true,\n+\t\"&yacute;\":                          true,\n+\t\"&yacy;\":                            true,\n+\t\"&ycirc;\":                           true,\n+\t\"&ycy;\":                             true,\n+\t\"&yen\":                              true,\n+\t\"&yen;\":                             true,\n+\t\"&yfr;\":                             true,\n+\t\"&yicy;\":                            true,\n+\t\"&yopf;\":                            true,\n+\t\"&yscr;\":                            true,\n+\t\"&yucy;\":                            true,\n+\t\"&yuml\":                             true,\n+\t\"&yuml;\":                            true,\n+\t\"&zacute;\":                          true,\n+\t\"&zcaron;\":                          true,\n+\t\"&zcy;\":                             true,\n+\t\"&zdot;\":                            true,\n+\t\"&zeetrf;\":                          true,\n+\t\"&zeta;\":                            true,\n+\t\"&zfr;\":                             true,\n+\t\"&zhcy;\":                            true,\n+\t\"&zigrarr;\":                         true,\n+\t\"&zopf;\":                            true,\n+\t\"&zscr;\":                            true,\n+\t\"&zwj;\":                             true,\n+\t\"&zwnj;\":                            true,\n+}"
    },
    {
      "sha": "6ab60102c9bfd65bf365f14b70beb683e92d04cd",
      "filename": "backend/vendor/github.com/russross/blackfriday/v2/esc.go",
      "status": "modified",
      "additions": 39,
      "deletions": 3,
      "changes": 42,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/russross/blackfriday/v2/esc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/russross/blackfriday/v2/esc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/russross/blackfriday/v2/esc.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -13,13 +13,27 @@ var htmlEscaper = [256][]byte{\n }\n \n func escapeHTML(w io.Writer, s []byte) {\n+\tescapeEntities(w, s, false)\n+}\n+\n+func escapeAllHTML(w io.Writer, s []byte) {\n+\tescapeEntities(w, s, true)\n+}\n+\n+func escapeEntities(w io.Writer, s []byte, escapeValidEntities bool) {\n \tvar start, end int\n \tfor end < len(s) {\n \t\tescSeq := htmlEscaper[s[end]]\n \t\tif escSeq != nil {\n-\t\t\tw.Write(s[start:end])\n-\t\t\tw.Write(escSeq)\n-\t\t\tstart = end + 1\n+\t\t\tisEntity, entityEnd := nodeIsEntity(s, end)\n+\t\t\tif isEntity && !escapeValidEntities {\n+\t\t\t\tw.Write(s[start : entityEnd+1])\n+\t\t\t\tstart = entityEnd + 1\n+\t\t\t} else {\n+\t\t\t\tw.Write(s[start:end])\n+\t\t\t\tw.Write(escSeq)\n+\t\t\t\tstart = end + 1\n+\t\t\t}\n \t\t}\n \t\tend++\n \t}\n@@ -28,6 +42,28 @@ func escapeHTML(w io.Writer, s []byte) {\n \t}\n }\n \n+func nodeIsEntity(s []byte, end int) (isEntity bool, endEntityPos int) {\n+\tisEntity = false\n+\tendEntityPos = end + 1\n+\n+\tif s[end] == '&' {\n+\t\tfor endEntityPos < len(s) {\n+\t\t\tif s[endEntityPos] == ';' {\n+\t\t\t\tif entities[string(s[end:endEntityPos+1])] {\n+\t\t\t\t\tisEntity = true\n+\t\t\t\t\tbreak\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif !isalnum(s[endEntityPos]) && s[endEntityPos] != '&' && s[endEntityPos] != '#' {\n+\t\t\t\tbreak\n+\t\t\t}\n+\t\t\tendEntityPos++\n+\t\t}\n+\t}\n+\n+\treturn isEntity, endEntityPos\n+}\n+\n func escLink(w io.Writer, text []byte) {\n \tunesc := html.UnescapeString(string(text))\n \tescapeHTML(w, []byte(unesc))"
    },
    {
      "sha": "cb4f26e30fd531a9447359d7f22d3dd2b68979b3",
      "filename": "backend/vendor/github.com/russross/blackfriday/v2/html.go",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/russross/blackfriday/v2/html.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/russross/blackfriday/v2/html.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/russross/blackfriday/v2/html.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -132,7 +132,10 @@ func NewHTMLRenderer(params HTMLRendererParameters) *HTMLRenderer {\n \t}\n \n \tif params.FootnoteReturnLinkContents == \"\" {\n-\t\tparams.FootnoteReturnLinkContents = `<sup>[return]</sup>`\n+\t\t// U+FE0E is VARIATION SELECTOR-15.\n+\t\t// It suppresses automatic emoji presentation of the preceding\n+\t\t// U+21A9 LEFTWARDS ARROW WITH HOOK on iOS and iPadOS.\n+\t\tparams.FootnoteReturnLinkContents = \"<span aria-label='Return'>↩\\ufe0e</span>\"\n \t}\n \n \treturn &HTMLRenderer{\n@@ -616,7 +619,7 @@ func (r *HTMLRenderer) RenderNode(w io.Writer, node *Node, entering bool) WalkSt\n \t\t}\n \tcase Code:\n \t\tr.out(w, codeTag)\n-\t\tescapeHTML(w, node.Literal)\n+\t\tescapeAllHTML(w, node.Literal)\n \t\tr.out(w, codeCloseTag)\n \tcase Document:\n \t\tbreak\n@@ -762,7 +765,7 @@ func (r *HTMLRenderer) RenderNode(w io.Writer, node *Node, entering bool) WalkSt\n \t\tr.cr(w)\n \t\tr.out(w, preTag)\n \t\tr.tag(w, codeTag[:len(codeTag)-1], attrs)\n-\t\tescapeHTML(w, node.Literal)\n+\t\tescapeAllHTML(w, node.Literal)\n \t\tr.out(w, codeCloseTag)\n \t\tr.out(w, preCloseTag)\n \t\tif node.Parent.Type != Item {"
    },
    {
      "sha": "d45bd941726e5c904350eb742eca6bc636341d1c",
      "filename": "backend/vendor/github.com/russross/blackfriday/v2/inline.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/russross/blackfriday/v2/inline.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/russross/blackfriday/v2/inline.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/russross/blackfriday/v2/inline.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -278,7 +278,7 @@ func link(p *Markdown, data []byte, offset int) (int, *Node) {\n \t\tcase data[i] == '\\n':\n \t\t\ttextHasNl = true\n \n-\t\tcase data[i-1] == '\\\\':\n+\t\tcase isBackslashEscaped(data, i):\n \t\t\tcontinue\n \n \t\tcase data[i] == '[':"
    },
    {
      "sha": "04e6050ceeaee1a193056d74e1ff4191495c55b7",
      "filename": "backend/vendor/github.com/russross/blackfriday/v2/node.go",
      "status": "modified",
      "additions": 9,
      "deletions": 3,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/russross/blackfriday/v2/node.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/github.com/russross/blackfriday/v2/node.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/russross/blackfriday/v2/node.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -199,7 +199,8 @@ func (n *Node) InsertBefore(sibling *Node) {\n \t}\n }\n \n-func (n *Node) isContainer() bool {\n+// IsContainer returns true if 'n' can contain children.\n+func (n *Node) IsContainer() bool {\n \tswitch n.Type {\n \tcase Document:\n \t\tfallthrough\n@@ -238,6 +239,11 @@ func (n *Node) isContainer() bool {\n \t}\n }\n \n+// IsLeaf returns true if 'n' is a leaf node.\n+func (n *Node) IsLeaf() bool {\n+\treturn !n.IsContainer()\n+}\n+\n func (n *Node) canContain(t NodeType) bool {\n \tif n.Type == List {\n \t\treturn t == Item\n@@ -309,11 +315,11 @@ func newNodeWalker(root *Node) *nodeWalker {\n }\n \n func (nw *nodeWalker) next() {\n-\tif (!nw.current.isContainer() || !nw.entering) && nw.current == nw.root {\n+\tif (!nw.current.IsContainer() || !nw.entering) && nw.current == nw.root {\n \t\tnw.current = nil\n \t\treturn\n \t}\n-\tif nw.entering && nw.current.isContainer() {\n+\tif nw.entering && nw.current.IsContainer() {\n \t\tif nw.current.FirstChild != nil {\n \t\t\tnw.current = nw.current.FirstChild\n \t\t\tnw.entering = true"
    },
    {
      "sha": "93b1fcdb31a27fd7c428a071d66d92289e598b62",
      "filename": "backend/vendor/github.com/shurcooL/sanitized_anchor_name/.travis.yml",
      "status": "removed",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/a0b2bbf1edda01a89f50c0fb56d757ec26c464aa/backend/vendor/github.com/shurcooL/sanitized_anchor_name/.travis.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/a0b2bbf1edda01a89f50c0fb56d757ec26c464aa/backend/vendor/github.com/shurcooL/sanitized_anchor_name/.travis.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/shurcooL/sanitized_anchor_name/.travis.yml?ref=a0b2bbf1edda01a89f50c0fb56d757ec26c464aa",
      "patch": "@@ -1,16 +0,0 @@\n-sudo: false\n-language: go\n-go:\n-  - 1.x\n-  - master\n-matrix:\n-  allow_failures:\n-    - go: master\n-  fast_finish: true\n-install:\n-  - # Do nothing. This is needed to prevent default install action \"go get -t -v ./...\" from happening here (we want it to happen inside script step).\n-script:\n-  - go get -t -v ./...\n-  - diff -u <(echo -n) <(gofmt -d -s .)\n-  - go tool vet .\n-  - go test -v -race ./..."
    },
    {
      "sha": "c35c17af98083c39f664a0c9a2da4a09a114fb6f",
      "filename": "backend/vendor/github.com/shurcooL/sanitized_anchor_name/LICENSE",
      "status": "removed",
      "additions": 0,
      "deletions": 21,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/a0b2bbf1edda01a89f50c0fb56d757ec26c464aa/backend/vendor/github.com/shurcooL/sanitized_anchor_name/LICENSE",
      "raw_url": "https://github.com/umputun/remark42/raw/a0b2bbf1edda01a89f50c0fb56d757ec26c464aa/backend/vendor/github.com/shurcooL/sanitized_anchor_name/LICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/shurcooL/sanitized_anchor_name/LICENSE?ref=a0b2bbf1edda01a89f50c0fb56d757ec26c464aa",
      "patch": "@@ -1,21 +0,0 @@\n-MIT License\n-\n-Copyright (c) 2015 Dmitri Shuralyov\n-\n-Permission is hereby granted, free of charge, to any person obtaining a copy\n-of this software and associated documentation files (the \"Software\"), to deal\n-in the Software without restriction, including without limitation the rights\n-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n-copies of the Software, and to permit persons to whom the Software is\n-furnished to do so, subject to the following conditions:\n-\n-The above copyright notice and this permission notice shall be included in all\n-copies or substantial portions of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n-SOFTWARE."
    },
    {
      "sha": "670bf0fe6c79daf9c39c7eda3c34897951671c7b",
      "filename": "backend/vendor/github.com/shurcooL/sanitized_anchor_name/README.md",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/umputun/remark42/blob/a0b2bbf1edda01a89f50c0fb56d757ec26c464aa/backend/vendor/github.com/shurcooL/sanitized_anchor_name/README.md",
      "raw_url": "https://github.com/umputun/remark42/raw/a0b2bbf1edda01a89f50c0fb56d757ec26c464aa/backend/vendor/github.com/shurcooL/sanitized_anchor_name/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/shurcooL/sanitized_anchor_name/README.md?ref=a0b2bbf1edda01a89f50c0fb56d757ec26c464aa",
      "patch": "@@ -1,36 +0,0 @@\n-sanitized_anchor_name\n-=====================\n-\n-[![Build Status](https://travis-ci.org/shurcooL/sanitized_anchor_name.svg?branch=master)](https://travis-ci.org/shurcooL/sanitized_anchor_name) [![GoDoc](https://godoc.org/github.com/shurcooL/sanitized_anchor_name?status.svg)](https://godoc.org/github.com/shurcooL/sanitized_anchor_name)\n-\n-Package sanitized_anchor_name provides a func to create sanitized anchor names.\n-\n-Its logic can be reused by multiple packages to create interoperable anchor names\n-and links to those anchors.\n-\n-At this time, it does not try to ensure that generated anchor names\n-are unique, that responsibility falls on the caller.\n-\n-Installation\n-------------\n-\n-```bash\n-go get -u github.com/shurcooL/sanitized_anchor_name\n-```\n-\n-Example\n--------\n-\n-```Go\n-anchorName := sanitized_anchor_name.Create(\"This is a header\")\n-\n-fmt.Println(anchorName)\n-\n-// Output:\n-// this-is-a-header\n-```\n-\n-License\n--------\n-\n--\t[MIT License](LICENSE)"
    },
    {
      "sha": "1e2553475931e74d64ea5bc03b804b8ad681fd74",
      "filename": "backend/vendor/github.com/shurcooL/sanitized_anchor_name/go.mod",
      "status": "removed",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/a0b2bbf1edda01a89f50c0fb56d757ec26c464aa/backend/vendor/github.com/shurcooL/sanitized_anchor_name/go.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/a0b2bbf1edda01a89f50c0fb56d757ec26c464aa/backend/vendor/github.com/shurcooL/sanitized_anchor_name/go.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/shurcooL/sanitized_anchor_name/go.mod?ref=a0b2bbf1edda01a89f50c0fb56d757ec26c464aa",
      "patch": "@@ -1 +0,0 @@\n-module github.com/shurcooL/sanitized_anchor_name"
    },
    {
      "sha": "6a77d1243173ffc329821276c4e7571f8ffece0e",
      "filename": "backend/vendor/github.com/shurcooL/sanitized_anchor_name/main.go",
      "status": "removed",
      "additions": 0,
      "deletions": 29,
      "changes": 29,
      "blob_url": "https://github.com/umputun/remark42/blob/a0b2bbf1edda01a89f50c0fb56d757ec26c464aa/backend/vendor/github.com/shurcooL/sanitized_anchor_name/main.go",
      "raw_url": "https://github.com/umputun/remark42/raw/a0b2bbf1edda01a89f50c0fb56d757ec26c464aa/backend/vendor/github.com/shurcooL/sanitized_anchor_name/main.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/shurcooL/sanitized_anchor_name/main.go?ref=a0b2bbf1edda01a89f50c0fb56d757ec26c464aa",
      "patch": "@@ -1,29 +0,0 @@\n-// Package sanitized_anchor_name provides a func to create sanitized anchor names.\n-//\n-// Its logic can be reused by multiple packages to create interoperable anchor names\n-// and links to those anchors.\n-//\n-// At this time, it does not try to ensure that generated anchor names\n-// are unique, that responsibility falls on the caller.\n-package sanitized_anchor_name // import \"github.com/shurcooL/sanitized_anchor_name\"\n-\n-import \"unicode\"\n-\n-// Create returns a sanitized anchor name for the given text.\n-func Create(text string) string {\n-\tvar anchorName []rune\n-\tvar futureDash = false\n-\tfor _, r := range text {\n-\t\tswitch {\n-\t\tcase unicode.IsLetter(r) || unicode.IsNumber(r):\n-\t\t\tif futureDash && len(anchorName) > 0 {\n-\t\t\t\tanchorName = append(anchorName, '-')\n-\t\t\t}\n-\t\t\tfutureDash = false\n-\t\t\tanchorName = append(anchorName, unicode.ToLower(r))\n-\t\tdefault:\n-\t\t\tfutureDash = true\n-\t\t}\n-\t}\n-\treturn string(anchorName)\n-}"
    },
    {
      "sha": "c9e64b1a6150b65780ca06bad8c98ba11f20d93c",
      "filename": "backend/vendor/go.etcd.io/bbolt/README.md",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/go.etcd.io/bbolt/README.md",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/go.etcd.io/bbolt/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/go.etcd.io/bbolt/README.md?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -152,11 +152,12 @@ are not thread safe. To work with data in multiple goroutines you must start\n a transaction for each one or use locking to ensure only one goroutine accesses\n a transaction at a time. Creating transaction from the `DB` is thread safe.\n \n-Read-only transactions and read-write transactions should not depend on one\n-another and generally shouldn't be opened simultaneously in the same goroutine.\n-This can cause a deadlock as the read-write transaction needs to periodically\n-re-map the data file but it cannot do so while a read-only transaction is open.\n-\n+Transactions should not depend on one another and generally shouldn't be opened\n+simultaneously in the same goroutine. This can cause a deadlock as the read-write\n+transaction needs to periodically re-map the data file but it cannot do so while\n+any read-only transaction is open. Even a nested read-only transaction can cause\n+a deadlock, as the child transaction can block the parent transaction from releasing\n+its resources.\n \n #### Read-write transactions\n "
    },
    {
      "sha": "697a46968bacf14d41037eef25af47d25d461237",
      "filename": "backend/vendor/go.etcd.io/bbolt/freelist.go",
      "status": "modified",
      "additions": 24,
      "deletions": 33,
      "changes": 57,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/go.etcd.io/bbolt/freelist.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/go.etcd.io/bbolt/freelist.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/go.etcd.io/bbolt/freelist.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -2,7 +2,6 @@ package bbolt\n \n import (\n \t\"fmt\"\n-\t\"reflect\"\n \t\"sort\"\n \t\"unsafe\"\n )\n@@ -94,24 +93,8 @@ func (f *freelist) pending_count() int {\n \treturn count\n }\n \n-// copyallunsafe copies a list of all free ids and all pending ids in one sorted list.\n+// copyall copies a list of all free ids and all pending ids in one sorted list.\n // f.count returns the minimum length required for dst.\n-func (f *freelist) copyallunsafe(dstptr unsafe.Pointer) { // dstptr is []pgid data pointer\n-\tm := make(pgids, 0, f.pending_count())\n-\tfor _, txp := range f.pending {\n-\t\tm = append(m, txp.ids...)\n-\t}\n-\tsort.Sort(m)\n-\tfpgids := f.getFreePageIDs()\n-\tsz := len(fpgids) + len(m)\n-\tdst := *(*[]pgid)(unsafe.Pointer(&reflect.SliceHeader{\n-\t\tData: uintptr(dstptr),\n-\t\tLen:  sz,\n-\t\tCap:  sz,\n-\t}))\n-\tmergepgids(dst, fpgids, m)\n-}\n-\n func (f *freelist) copyall(dst []pgid) {\n \tm := make(pgids, 0, f.pending_count())\n \tfor _, txp := range f.pending {\n@@ -284,21 +267,23 @@ func (f *freelist) read(p *page) {\n \t}\n \t// If the page.count is at the max uint16 value (64k) then it's considered\n \t// an overflow and the size of the freelist is stored as the first element.\n-\tvar idx, count uintptr = 0, uintptr(p.count)\n+\tvar idx, count = 0, int(p.count)\n \tif count == 0xFFFF {\n \t\tidx = 1\n-\t\tcount = uintptr(*(*pgid)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + unsafe.Sizeof(*p))))\n+\t\tc := *(*pgid)(unsafeAdd(unsafe.Pointer(p), unsafe.Sizeof(*p)))\n+\t\tcount = int(c)\n+\t\tif count < 0 {\n+\t\t\tpanic(fmt.Sprintf(\"leading element count %d overflows int\", c))\n+\t\t}\n \t}\n \n \t// Copy the list of page ids from the freelist.\n \tif count == 0 {\n \t\tf.ids = nil\n \t} else {\n-\t\tids := *(*[]pgid)(unsafe.Pointer(&reflect.SliceHeader{\n-\t\t\tData: uintptr(unsafe.Pointer(p)) + unsafe.Sizeof(*p) + idx*unsafe.Sizeof(pgid(0)),\n-\t\t\tLen:  int(count),\n-\t\t\tCap:  int(count),\n-\t\t}))\n+\t\tvar ids []pgid\n+\t\tdata := unsafeIndex(unsafe.Pointer(p), unsafe.Sizeof(*p), unsafe.Sizeof(ids[0]), idx)\n+\t\tunsafeSlice(unsafe.Pointer(&ids), data, count)\n \n \t\t// copy the ids, so we don't modify on the freelist page directly\n \t\tidsCopy := make([]pgid, count)\n@@ -331,16 +316,22 @@ func (f *freelist) write(p *page) error {\n \n \t// The page.count can only hold up to 64k elements so if we overflow that\n \t// number then we handle it by putting the size in the first element.\n-\tlenids := f.count()\n-\tif lenids == 0 {\n-\t\tp.count = uint16(lenids)\n-\t} else if lenids < 0xFFFF {\n-\t\tp.count = uint16(lenids)\n-\t\tf.copyallunsafe(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + unsafe.Sizeof(*p)))\n+\tl := f.count()\n+\tif l == 0 {\n+\t\tp.count = uint16(l)\n+\t} else if l < 0xFFFF {\n+\t\tp.count = uint16(l)\n+\t\tvar ids []pgid\n+\t\tdata := unsafeAdd(unsafe.Pointer(p), unsafe.Sizeof(*p))\n+\t\tunsafeSlice(unsafe.Pointer(&ids), data, l)\n+\t\tf.copyall(ids)\n \t} else {\n \t\tp.count = 0xFFFF\n-\t\t*(*pgid)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + unsafe.Sizeof(*p))) = pgid(lenids)\n-\t\tf.copyallunsafe(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + unsafe.Sizeof(*p) + unsafe.Sizeof(pgid(0))))\n+\t\tvar ids []pgid\n+\t\tdata := unsafeAdd(unsafe.Pointer(p), unsafe.Sizeof(*p))\n+\t\tunsafeSlice(unsafe.Pointer(&ids), data, l+1)\n+\t\tids[0] = pgid(l)\n+\t\tf.copyall(ids[1:])\n \t}\n \n \treturn nil"
    },
    {
      "sha": "73988b5c4c0acbc339b0390f102b7ecdd798415e",
      "filename": "backend/vendor/go.etcd.io/bbolt/node.go",
      "status": "modified",
      "additions": 10,
      "deletions": 15,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/go.etcd.io/bbolt/node.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/go.etcd.io/bbolt/node.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/go.etcd.io/bbolt/node.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -3,7 +3,6 @@ package bbolt\n import (\n \t\"bytes\"\n \t\"fmt\"\n-\t\"reflect\"\n \t\"sort\"\n \t\"unsafe\"\n )\n@@ -208,36 +207,32 @@ func (n *node) write(p *page) {\n \t}\n \n \t// Loop over each item and write it to the page.\n-\tbp := uintptr(unsafe.Pointer(p)) + unsafe.Sizeof(*p) + n.pageElementSize()*uintptr(len(n.inodes))\n+\t// off tracks the offset into p of the start of the next data.\n+\toff := unsafe.Sizeof(*p) + n.pageElementSize()*uintptr(len(n.inodes))\n \tfor i, item := range n.inodes {\n \t\t_assert(len(item.key) > 0, \"write: zero-length inode key\")\n \n+\t\t// Create a slice to write into of needed size and advance\n+\t\t// byte pointer for next iteration.\n+\t\tsz := len(item.key) + len(item.value)\n+\t\tb := unsafeByteSlice(unsafe.Pointer(p), off, 0, sz)\n+\t\toff += uintptr(sz)\n+\n \t\t// Write the page element.\n \t\tif n.isLeaf {\n \t\t\telem := p.leafPageElement(uint16(i))\n-\t\t\telem.pos = uint32(bp - uintptr(unsafe.Pointer(elem)))\n+\t\t\telem.pos = uint32(uintptr(unsafe.Pointer(&b[0])) - uintptr(unsafe.Pointer(elem)))\n \t\t\telem.flags = item.flags\n \t\t\telem.ksize = uint32(len(item.key))\n \t\t\telem.vsize = uint32(len(item.value))\n \t\t} else {\n \t\t\telem := p.branchPageElement(uint16(i))\n-\t\t\telem.pos = uint32(bp - uintptr(unsafe.Pointer(elem)))\n+\t\t\telem.pos = uint32(uintptr(unsafe.Pointer(&b[0])) - uintptr(unsafe.Pointer(elem)))\n \t\t\telem.ksize = uint32(len(item.key))\n \t\t\telem.pgid = item.pgid\n \t\t\t_assert(elem.pgid != p.id, \"write: circular dependency occurred\")\n \t\t}\n \n-\t\t// Create a slice to write into of needed size and advance\n-\t\t// byte pointer for next iteration.\n-\t\tklen, vlen := len(item.key), len(item.value)\n-\t\tsz := klen + vlen\n-\t\tb := *(*[]byte)(unsafe.Pointer(&reflect.SliceHeader{\n-\t\t\tData: bp,\n-\t\t\tLen:  sz,\n-\t\t\tCap:  sz,\n-\t\t}))\n-\t\tbp += uintptr(sz)\n-\n \t\t// Write data for the element to the end of the page.\n \t\tl := copy(b, item.key)\n \t\tcopy(b[l:], item.value)"
    },
    {
      "sha": "c9a158fb066c0e657d88a3c0f30867e815d39301",
      "filename": "backend/vendor/go.etcd.io/bbolt/page.go",
      "status": "modified",
      "additions": 21,
      "deletions": 36,
      "changes": 57,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/go.etcd.io/bbolt/page.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/go.etcd.io/bbolt/page.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/go.etcd.io/bbolt/page.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -3,7 +3,6 @@ package bbolt\n import (\n \t\"fmt\"\n \t\"os\"\n-\t\"reflect\"\n \t\"sort\"\n \t\"unsafe\"\n )\n@@ -51,52 +50,46 @@ func (p *page) typ() string {\n \n // meta returns a pointer to the metadata section of the page.\n func (p *page) meta() *meta {\n-\treturn (*meta)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + unsafe.Sizeof(*p)))\n+\treturn (*meta)(unsafeAdd(unsafe.Pointer(p), unsafe.Sizeof(*p)))\n }\n \n // leafPageElement retrieves the leaf node by index\n func (p *page) leafPageElement(index uint16) *leafPageElement {\n-\toff := uintptr(index) * unsafe.Sizeof(leafPageElement{})\n-\treturn (*leafPageElement)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + unsafe.Sizeof(*p) + off))\n+\treturn (*leafPageElement)(unsafeIndex(unsafe.Pointer(p), unsafe.Sizeof(*p),\n+\t\tleafPageElementSize, int(index)))\n }\n \n // leafPageElements retrieves a list of leaf nodes.\n func (p *page) leafPageElements() []leafPageElement {\n \tif p.count == 0 {\n \t\treturn nil\n \t}\n-\treturn *(*[]leafPageElement)(unsafe.Pointer(&reflect.SliceHeader{\n-\t\tData: uintptr(unsafe.Pointer(p)) + unsafe.Sizeof(*p),\n-\t\tLen:  int(p.count),\n-\t\tCap:  int(p.count),\n-\t}))\n+\tvar elems []leafPageElement\n+\tdata := unsafeAdd(unsafe.Pointer(p), unsafe.Sizeof(*p))\n+\tunsafeSlice(unsafe.Pointer(&elems), data, int(p.count))\n+\treturn elems\n }\n \n // branchPageElement retrieves the branch node by index\n func (p *page) branchPageElement(index uint16) *branchPageElement {\n-\toff := uintptr(index) * unsafe.Sizeof(branchPageElement{})\n-\treturn (*branchPageElement)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + unsafe.Sizeof(*p) + off))\n+\treturn (*branchPageElement)(unsafeIndex(unsafe.Pointer(p), unsafe.Sizeof(*p),\n+\t\tunsafe.Sizeof(branchPageElement{}), int(index)))\n }\n \n // branchPageElements retrieves a list of branch nodes.\n func (p *page) branchPageElements() []branchPageElement {\n \tif p.count == 0 {\n \t\treturn nil\n \t}\n-\treturn *(*[]branchPageElement)(unsafe.Pointer(&reflect.SliceHeader{\n-\t\tData: uintptr(unsafe.Pointer(p)) + unsafe.Sizeof(*p),\n-\t\tLen:  int(p.count),\n-\t\tCap:  int(p.count),\n-\t}))\n+\tvar elems []branchPageElement\n+\tdata := unsafeAdd(unsafe.Pointer(p), unsafe.Sizeof(*p))\n+\tunsafeSlice(unsafe.Pointer(&elems), data, int(p.count))\n+\treturn elems\n }\n \n // dump writes n bytes of the page to STDERR as hex output.\n func (p *page) hexdump(n int) {\n-\tbuf := *(*[]byte)(unsafe.Pointer(&reflect.SliceHeader{\n-\t\tData: uintptr(unsafe.Pointer(p)),\n-\t\tLen:  n,\n-\t\tCap:  n,\n-\t}))\n+\tbuf := unsafeByteSlice(unsafe.Pointer(p), 0, 0, n)\n \tfmt.Fprintf(os.Stderr, \"%x\\n\", buf)\n }\n \n@@ -115,11 +108,7 @@ type branchPageElement struct {\n \n // key returns a byte slice of the node key.\n func (n *branchPageElement) key() []byte {\n-\treturn *(*[]byte)(unsafe.Pointer(&reflect.SliceHeader{\n-\t\tData: uintptr(unsafe.Pointer(n)) + uintptr(n.pos),\n-\t\tLen:  int(n.ksize),\n-\t\tCap:  int(n.ksize),\n-\t}))\n+\treturn unsafeByteSlice(unsafe.Pointer(n), 0, int(n.pos), int(n.pos)+int(n.ksize))\n }\n \n // leafPageElement represents a node on a leaf page.\n@@ -132,20 +121,16 @@ type leafPageElement struct {\n \n // key returns a byte slice of the node key.\n func (n *leafPageElement) key() []byte {\n-\treturn *(*[]byte)(unsafe.Pointer(&reflect.SliceHeader{\n-\t\tData: uintptr(unsafe.Pointer(n)) + uintptr(n.pos),\n-\t\tLen:  int(n.ksize),\n-\t\tCap:  int(n.ksize),\n-\t}))\n+\ti := int(n.pos)\n+\tj := i + int(n.ksize)\n+\treturn unsafeByteSlice(unsafe.Pointer(n), 0, i, j)\n }\n \n // value returns a byte slice of the node value.\n func (n *leafPageElement) value() []byte {\n-\treturn *(*[]byte)(unsafe.Pointer(&reflect.SliceHeader{\n-\t\tData: uintptr(unsafe.Pointer(n)) + uintptr(n.pos) + uintptr(n.ksize),\n-\t\tLen:  int(n.vsize),\n-\t\tCap:  int(n.vsize),\n-\t}))\n+\ti := int(n.pos) + int(n.ksize)\n+\tj := i + int(n.vsize)\n+\treturn unsafeByteSlice(unsafe.Pointer(n), 0, i, j)\n }\n \n // PageInfo represents human readable information about a page."
    },
    {
      "sha": "4b1a64a8b8aa68c7c9d2676da065859b5f5e6a7d",
      "filename": "backend/vendor/go.etcd.io/bbolt/tx.go",
      "status": "modified",
      "additions": 8,
      "deletions": 19,
      "changes": 27,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/go.etcd.io/bbolt/tx.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/go.etcd.io/bbolt/tx.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/go.etcd.io/bbolt/tx.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -4,7 +4,6 @@ import (\n \t\"fmt\"\n \t\"io\"\n \t\"os\"\n-\t\"reflect\"\n \t\"sort\"\n \t\"strings\"\n \t\"time\"\n@@ -524,24 +523,18 @@ func (tx *Tx) write() error {\n \n \t// Write pages to disk in order.\n \tfor _, p := range pages {\n-\t\tsize := (int(p.overflow) + 1) * tx.db.pageSize\n+\t\trem := (uint64(p.overflow) + 1) * uint64(tx.db.pageSize)\n \t\toffset := int64(p.id) * int64(tx.db.pageSize)\n+\t\tvar written uintptr\n \n \t\t// Write out page in \"max allocation\" sized chunks.\n-\t\tptr := uintptr(unsafe.Pointer(p))\n \t\tfor {\n-\t\t\t// Limit our write to our max allocation size.\n-\t\t\tsz := size\n+\t\t\tsz := rem\n \t\t\tif sz > maxAllocSize-1 {\n \t\t\t\tsz = maxAllocSize - 1\n \t\t\t}\n+\t\t\tbuf := unsafeByteSlice(unsafe.Pointer(p), written, 0, int(sz))\n \n-\t\t\t// Write chunk to disk.\n-\t\t\tbuf := *(*[]byte)(unsafe.Pointer(&reflect.SliceHeader{\n-\t\t\t\tData: ptr,\n-\t\t\t\tLen:  sz,\n-\t\t\t\tCap:  sz,\n-\t\t\t}))\n \t\t\tif _, err := tx.db.ops.writeAt(buf, offset); err != nil {\n \t\t\t\treturn err\n \t\t\t}\n@@ -550,14 +543,14 @@ func (tx *Tx) write() error {\n \t\t\ttx.stats.Write++\n \n \t\t\t// Exit inner for loop if we've written all the chunks.\n-\t\t\tsize -= sz\n-\t\t\tif size == 0 {\n+\t\t\trem -= sz\n+\t\t\tif rem == 0 {\n \t\t\t\tbreak\n \t\t\t}\n \n \t\t\t// Otherwise move offset forward and move pointer to next chunk.\n \t\t\toffset += int64(sz)\n-\t\t\tptr += uintptr(sz)\n+\t\t\twritten += uintptr(sz)\n \t\t}\n \t}\n \n@@ -576,11 +569,7 @@ func (tx *Tx) write() error {\n \t\t\tcontinue\n \t\t}\n \n-\t\tbuf := *(*[]byte)(unsafe.Pointer(&reflect.SliceHeader{\n-\t\t\tData: uintptr(unsafe.Pointer(p)),\n-\t\t\tLen:  tx.db.pageSize,\n-\t\t\tCap:  tx.db.pageSize,\n-\t\t}))\n+\t\tbuf := unsafeByteSlice(unsafe.Pointer(p), 0, 0, tx.db.pageSize)\n \n \t\t// See https://go.googlesource.com/go/+/f03c9202c43e0abb130669852082117ca50aa9b1\n \t\tfor i := range buf {"
    },
    {
      "sha": "c0e50375007faab29c9de2896e235dbcb0efb777",
      "filename": "backend/vendor/go.etcd.io/bbolt/unsafe.go",
      "status": "added",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/go.etcd.io/bbolt/unsafe.go",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/go.etcd.io/bbolt/unsafe.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/go.etcd.io/bbolt/unsafe.go?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -0,0 +1,39 @@\n+package bbolt\n+\n+import (\n+\t\"reflect\"\n+\t\"unsafe\"\n+)\n+\n+func unsafeAdd(base unsafe.Pointer, offset uintptr) unsafe.Pointer {\n+\treturn unsafe.Pointer(uintptr(base) + offset)\n+}\n+\n+func unsafeIndex(base unsafe.Pointer, offset uintptr, elemsz uintptr, n int) unsafe.Pointer {\n+\treturn unsafe.Pointer(uintptr(base) + offset + uintptr(n)*elemsz)\n+}\n+\n+func unsafeByteSlice(base unsafe.Pointer, offset uintptr, i, j int) []byte {\n+\t// See: https://github.com/golang/go/wiki/cgo#turning-c-arrays-into-go-slices\n+\t//\n+\t// This memory is not allocated from C, but it is unmanaged by Go's\n+\t// garbage collector and should behave similarly, and the compiler\n+\t// should produce similar code.  Note that this conversion allows a\n+\t// subslice to begin after the base address, with an optional offset,\n+\t// while the URL above does not cover this case and only slices from\n+\t// index 0.  However, the wiki never says that the address must be to\n+\t// the beginning of a C allocation (or even that malloc was used at\n+\t// all), so this is believed to be correct.\n+\treturn (*[maxAllocSize]byte)(unsafeAdd(base, offset))[i:j:j]\n+}\n+\n+// unsafeSlice modifies the data, len, and cap of a slice variable pointed to by\n+// the slice parameter.  This helper should be used over other direct\n+// manipulation of reflect.SliceHeader to prevent misuse, namely, converting\n+// from reflect.SliceHeader to a Go slice type.\n+func unsafeSlice(slice, data unsafe.Pointer, len int) {\n+\ts := (*reflect.SliceHeader)(slice)\n+\ts.Data = uintptr(data)\n+\ts.Cap = len\n+\ts.Len = len\n+}"
    },
    {
      "sha": "49a974171b279d290d89497170f0472ea0a31da8",
      "filename": "backend/vendor/modules.txt",
      "status": "modified",
      "additions": 6,
      "deletions": 8,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/modules.txt",
      "raw_url": "https://github.com/umputun/remark42/raw/ed3cd197dd41911e76dfee2bb14c522a0d5c953b/backend/vendor/modules.txt",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/modules.txt?ref=ed3cd197dd41911e76dfee2bb14c522a0d5c953b",
      "patch": "@@ -104,12 +104,12 @@ github.com/go-pkgz/expirable-cache\n # github.com/go-pkgz/jrpc v0.2.0\n ## explicit\n github.com/go-pkgz/jrpc\n-# github.com/go-pkgz/lcw v0.7.1\n+# github.com/go-pkgz/lcw v0.8.1\n ## explicit\n github.com/go-pkgz/lcw\n github.com/go-pkgz/lcw/eventbus\n github.com/go-pkgz/lcw/internal/cache\n-# github.com/go-pkgz/lgr v0.7.0\n+# github.com/go-pkgz/lgr v0.10.4\n ## explicit\n github.com/go-pkgz/lgr\n # github.com/go-pkgz/repeater v1.1.3\n@@ -123,7 +123,7 @@ github.com/go-pkgz/rest/logger\n # github.com/go-pkgz/syncs v1.1.1\n ## explicit\n github.com/go-pkgz/syncs\n-# github.com/go-redis/redis/v7 v7.2.0\n+# github.com/go-redis/redis/v7 v7.4.0\n github.com/go-redis/redis/v7\n github.com/go-redis/redis/v7/internal\n github.com/go-redis/redis/v7/internal/consistenthash\n@@ -137,7 +137,7 @@ github.com/go-stack/stack\n github.com/golang/protobuf/proto\n # github.com/golang/snappy v0.0.1\n github.com/golang/snappy\n-# github.com/google/uuid v1.1.1\n+# github.com/google/uuid v1.1.2\n ## explicit\n github.com/google/uuid\n # github.com/gorilla/feeds v1.1.1\n@@ -178,11 +178,9 @@ github.com/rakyll/statik/fs\n # github.com/rs/xid v1.2.1\n ## explicit\n github.com/rs/xid\n-# github.com/russross/blackfriday/v2 v2.0.1\n+# github.com/russross/blackfriday/v2 v2.1.0\n ## explicit\n github.com/russross/blackfriday/v2\n-# github.com/shurcooL/sanitized_anchor_name v1.0.0\n-github.com/shurcooL/sanitized_anchor_name\n # github.com/stretchr/objx v0.1.1\n github.com/stretchr/objx\n # github.com/stretchr/testify v1.6.1\n@@ -197,7 +195,7 @@ github.com/umputun/go-flags\n github.com/xdg/scram\n # github.com/xdg/stringprep v0.0.0-20180714160509-73f8eece6fdc\n github.com/xdg/stringprep\n-# go.etcd.io/bbolt v1.3.4\n+# go.etcd.io/bbolt v1.3.5\n ## explicit\n go.etcd.io/bbolt\n # go.mongodb.org/mongo-driver v1.4.4"
    }
  ]
}
