{
  "sha": "ba08447d5e5b5eb08d1fd222976179a4149ad338",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6YmEwODQ0N2Q1ZTViNWViMDhkMWZkMjIyOTc2MTc5YTQxNDlhZDMzOA==",
  "commit": {
    "author": {
      "name": "Wyatt Johnson",
      "email": "wyattjoh@gmail.com",
      "date": "2020-06-04T11:32:04Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-06-04T11:32:04Z"
    },
    "message": "[CORL-1090] Sections Alpha (#2973)\n\n* feat: added section filtering support\r\n\r\n* fix: addressed issues around filtering sections\r\n\r\n* fix: fixed issue with section filter",
    "tree": {
      "sha": "5541a4da628499e0c6b80ebd1a644fb507f7501f",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/5541a4da628499e0c6b80ebd1a644fb507f7501f"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/ba08447d5e5b5eb08d1fd222976179a4149ad338",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe2Nu1CRBK7hj4Ov3rIwAAdHIIAIrEqxgDzgVSzi2ew5/D3k6Q\nHLRGR2LJubTuPoR7wGY3/xi0SDr8KY7A5E1FaVP+4VjcZtMT+bMMvi9RJsB85mT4\n+KsnpvC6hDMUZu/18kcHLo/sGOS33iAcrg113PYbhsMZZ7r3np3n98Ff1HQMSQzu\nZBE55ZpFK1/CRyOwM6MJt5n83z0weJ3dE3dHUnK4thtGKvBojOxpJrgNqJ10f/RO\nvZAOvxBdqhrm2NRAQm+Qlzm8jePtcX448qoyYTBdELVKi41S+VXm2G6/N3A6fqJy\n11ziFX6Eztmid1dzGSUes2+40W/xyMGhYdqD6qTKIa+T6IQhJ3N3kUkMFmlePKE=\n=+iLk\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 5541a4da628499e0c6b80ebd1a644fb507f7501f\nparent 92c72f7041961e2ca055cf358a275f684a07c4a1\nauthor Wyatt Johnson <wyattjoh@gmail.com> 1591270324 +0000\ncommitter GitHub <noreply@github.com> 1591270324 +0200\n\n[CORL-1090] Sections Alpha (#2973)\n\n* feat: added section filtering support\r\n\r\n* fix: addressed issues around filtering sections\r\n\r\n* fix: fixed issue with section filter"
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/ba08447d5e5b5eb08d1fd222976179a4149ad338",
  "html_url": "https://github.com/coralproject/talk/commit/ba08447d5e5b5eb08d1fd222976179a4149ad338",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/ba08447d5e5b5eb08d1fd222976179a4149ad338/comments",
  "author": {
    "login": "wyattjoh",
    "id": 633002,
    "node_id": "MDQ6VXNlcjYzMzAwMg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/633002?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wyattjoh",
    "html_url": "https://github.com/wyattjoh",
    "followers_url": "https://api.github.com/users/wyattjoh/followers",
    "following_url": "https://api.github.com/users/wyattjoh/following{/other_user}",
    "gists_url": "https://api.github.com/users/wyattjoh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wyattjoh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wyattjoh/subscriptions",
    "organizations_url": "https://api.github.com/users/wyattjoh/orgs",
    "repos_url": "https://api.github.com/users/wyattjoh/repos",
    "events_url": "https://api.github.com/users/wyattjoh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wyattjoh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "92c72f7041961e2ca055cf358a275f684a07c4a1",
      "url": "https://api.github.com/repos/coralproject/talk/commits/92c72f7041961e2ca055cf358a275f684a07c4a1",
      "html_url": "https://github.com/coralproject/talk/commit/92c72f7041961e2ca055cf358a275f684a07c4a1"
    }
  ],
  "stats": {
    "total": 1079,
    "additions": 944,
    "deletions": 135
  },
  "files": [
    {
      "sha": "35eb9354985561ef61b97a765777a326ad9a7114",
      "filename": "src/core/client/admin/components/ModerateCard/FeatureCommentMutation.ts",
      "status": "modified",
      "additions": 34,
      "deletions": 5,
      "changes": 39,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/components/ModerateCard/FeatureCommentMutation.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/components/ModerateCard/FeatureCommentMutation.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/components/ModerateCard/FeatureCommentMutation.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -2,6 +2,7 @@ import { graphql } from \"react-relay\";\n import { ConnectionHandler, Environment } from \"relay-runtime\";\n \n import { getQueueConnection } from \"coral-admin/helpers\";\n+import { SectionFilter } from \"coral-common/section\";\n import { CoralContext } from \"coral-framework/lib/bootstrap\";\n import {\n   commitMutationPromiseNormalized,\n@@ -18,7 +19,11 @@ const FeatureCommentMutation = createMutation(\n   \"featureComment\",\n   (\n     environment: Environment,\n-    input: MutationInput<FeatureCommentMutation> & { storyID: string },\n+    input: MutationInput<FeatureCommentMutation> & {\n+      storyID?: string | null;\n+      siteID?: string | null;\n+      section?: SectionFilter | null;\n+    },\n     { uuidGenerator }: CoralContext\n   ) =>\n     commitMutationPromiseNormalized<FeatureCommentMutation>(environment, {\n@@ -69,10 +74,34 @@ const FeatureCommentMutation = createMutation(\n       },\n       updater: (store) => {\n         const connections = [\n-          getQueueConnection(store, \"PENDING\", input.storyID),\n-          getQueueConnection(store, \"REPORTED\", input.storyID),\n-          getQueueConnection(store, \"UNMODERATED\", input.storyID),\n-          getQueueConnection(store, \"REJECTED\", input.storyID),\n+          getQueueConnection(\n+            store,\n+            \"PENDING\",\n+            input.storyID,\n+            input.siteID,\n+            input.section\n+          ),\n+          getQueueConnection(\n+            store,\n+            \"REPORTED\",\n+            input.storyID,\n+            input.siteID,\n+            input.section\n+          ),\n+          getQueueConnection(\n+            store,\n+            \"UNMODERATED\",\n+            input.storyID,\n+            input.siteID,\n+            input.section\n+          ),\n+          getQueueConnection(\n+            store,\n+            \"REJECTED\",\n+            input.storyID,\n+            input.siteID,\n+            input.section\n+          ),\n         ].filter((c) => c);\n         connections.forEach((con) =>\n           ConnectionHandler.deleteNode(con!, input.commentID)"
    },
    {
      "sha": "7f9015ff83e97ea60b6d3a2db44e47b982d7d304",
      "filename": "src/core/client/admin/components/ModerateCard/ModerateCardContainer.tsx",
      "status": "modified",
      "additions": 16,
      "deletions": 3,
      "changes": 19,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/components/ModerateCard/ModerateCardContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/components/ModerateCard/ModerateCardContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/components/ModerateCard/ModerateCardContainer.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -10,6 +10,7 @@ import {\n } from \"coral-admin/mutations\";\n import FadeInTransition from \"coral-framework/components/FadeInTransition\";\n import { getModerationLink } from \"coral-framework/helpers\";\n+import parseModerationOptions from \"coral-framework/helpers/parseModerationOptions\";\n import {\n   MutationProp,\n   withFragmentContainer,\n@@ -95,10 +96,14 @@ const ModerateCardContainer: FunctionComponent<Props> = ({\n       return;\n     }\n \n+    const { storyID, siteID, section } = parseModerationOptions(match);\n+\n     await approveComment({\n       commentID: comment.id,\n       commentRevisionID: comment.revision.id,\n-      storyID: match.params.storyID,\n+      storyID,\n+      siteID,\n+      section,\n     });\n     if (loadNext) {\n       loadNext();\n@@ -110,10 +115,14 @@ const ModerateCardContainer: FunctionComponent<Props> = ({\n       return;\n     }\n \n+    const { storyID, siteID, section } = parseModerationOptions(match);\n+\n     await rejectComment({\n       commentID: comment.id,\n       commentRevisionID: comment.revision.id,\n-      storyID: match.params.storyID,\n+      storyID,\n+      siteID,\n+      section,\n     });\n     if (loadNext) {\n       loadNext();\n@@ -125,10 +134,14 @@ const ModerateCardContainer: FunctionComponent<Props> = ({\n       return;\n     }\n \n+    const { storyID, siteID, section } = parseModerationOptions(match);\n+\n     featureComment({\n       commentID: comment.id,\n       commentRevisionID: comment.revision.id,\n-      storyID: match.params.storyID,\n+      storyID,\n+      siteID,\n+      section,\n     });\n   }, [featureComment, comment, match]);\n "
    },
    {
      "sha": "76ae5967a7c58ffbd41fd92232f8d6c09568aaca",
      "filename": "src/core/client/admin/components/PaginatedSelect/PaginatedSelect.tsx",
      "status": "modified",
      "additions": 9,
      "deletions": 8,
      "changes": 17,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/components/PaginatedSelect/PaginatedSelect.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/components/PaginatedSelect/PaginatedSelect.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/components/PaginatedSelect/PaginatedSelect.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -1,4 +1,5 @@\n import cn from \"classnames\";\n+import { noop } from \"lodash\";\n import React, { FunctionComponent } from \"react\";\n \n import AutoLoadMore from \"coral-admin/components/AutoLoadMore\";\n@@ -16,20 +17,20 @@ import {\n import styles from \"./PaginatedSelect.css\";\n \n interface Props {\n-  onLoadMore: () => void;\n+  onLoadMore?: () => void;\n   icon?: string;\n-  hasMore: boolean;\n-  disableLoadMore: boolean;\n-  loading: boolean;\n+  hasMore?: boolean;\n+  disableLoadMore?: boolean;\n+  loading?: boolean;\n   selected: React.ReactNode;\n   className?: string;\n }\n \n const PaginatedSelect: FunctionComponent<Props> = ({\n-  loading,\n-  onLoadMore,\n-  disableLoadMore,\n-  hasMore,\n+  onLoadMore = noop,\n+  disableLoadMore = false,\n+  hasMore = false,\n+  loading = false,\n   children,\n   icon,\n   selected,"
    },
    {
      "sha": "4a0f73bbe9a07bd320192d312214805975017652",
      "filename": "src/core/client/admin/helpers/getQueueConnection.ts",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/helpers/getQueueConnection.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/helpers/getQueueConnection.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/helpers/getQueueConnection.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -5,6 +5,7 @@ import {\n   RecordSourceSelectorProxy,\n } from \"relay-runtime\";\n \n+import { SectionFilter } from \"coral-common/section\";\n import {\n   GQLCOMMENT_STATUS,\n   GQLMODERATION_QUEUE_RL,\n@@ -14,26 +15,30 @@ export default function getQueueConnection(\n   store: RecordSourceSelectorProxy | RecordSourceProxy,\n   queue: GQLMODERATION_QUEUE_RL | \"REJECTED\" | \"APPROVED\",\n   storyID?: string | null,\n-  siteID?: string | null\n+  siteID?: string | null,\n+  section?: SectionFilter | null\n ): RecordProxy | null | undefined {\n   const root = store.getRoot();\n   if (queue === \"REJECTED\") {\n     return ConnectionHandler.getConnection(root, \"RejectedQueue_comments\", {\n       status: GQLCOMMENT_STATUS.REJECTED,\n       storyID,\n       siteID,\n+      section,\n     });\n   }\n   if (queue === \"APPROVED\") {\n     return ConnectionHandler.getConnection(root, \"ApprovedQueue_comments\", {\n       status: GQLCOMMENT_STATUS.APPROVED,\n       storyID,\n       siteID,\n+      section,\n     });\n   }\n   const queuesRecord = root.getLinkedRecord(\"moderationQueues\", {\n     storyID,\n     siteID,\n+    section,\n   })!;\n   if (!queuesRecord) {\n     return undefined;"
    },
    {
      "sha": "a4f7b6be3f026e8a2a9718aa1b186e39594b6c92",
      "filename": "src/core/client/admin/mutations/ApproveCommentMutation.ts",
      "status": "modified",
      "additions": 43,
      "deletions": 6,
      "changes": 49,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/mutations/ApproveCommentMutation.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/mutations/ApproveCommentMutation.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/mutations/ApproveCommentMutation.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -2,6 +2,7 @@ import { graphql } from \"react-relay\";\n import { ConnectionHandler, Environment } from \"relay-runtime\";\n \n import { getQueueConnection } from \"coral-admin/helpers\";\n+import { SectionFilter } from \"coral-common/section\";\n import {\n   commitMutationPromiseNormalized,\n   createMutation,\n@@ -16,13 +17,19 @@ const ApproveCommentMutation = createMutation(\n   \"approveComment\",\n   (\n     environment: Environment,\n-    input: MutationInput<MutationTypes> & { storyID?: string }\n+    input: MutationInput<MutationTypes> & {\n+      storyID?: string | null;\n+      siteID?: string | null;\n+      section?: SectionFilter | null;\n+    }\n   ) =>\n     commitMutationPromiseNormalized<MutationTypes>(environment, {\n       mutation: graphql`\n         mutation ApproveCommentMutation(\n           $input: ApproveCommentInput!\n           $storyID: ID\n+          $siteID: ID\n+          $section: SectionFilter\n         ) {\n           approveComment(input: $input) {\n             comment {\n@@ -42,7 +49,11 @@ const ApproveCommentMutation = createMutation(\n               }\n               ...ModeratedByContainer_comment\n             }\n-            moderationQueues(storyID: $storyID) {\n+            moderationQueues(\n+              storyID: $storyID\n+              siteID: $siteID\n+              section: $section\n+            ) {\n               unmoderated {\n                 count\n               }\n@@ -64,6 +75,8 @@ const ApproveCommentMutation = createMutation(\n           clientMutationId: (clientMutationId++).toString(),\n         },\n         storyID: input.storyID,\n+        siteID: input.siteID,\n+        section: input.section,\n       },\n       optimisticUpdater: (store) => {\n         const proxy = store.get(input.commentID)!;\n@@ -72,10 +85,34 @@ const ApproveCommentMutation = createMutation(\n       },\n       updater: (store) => {\n         const connections = [\n-          getQueueConnection(store, \"REPORTED\", input.storyID),\n-          getQueueConnection(store, \"PENDING\", input.storyID),\n-          getQueueConnection(store, \"UNMODERATED\", input.storyID),\n-          getQueueConnection(store, \"REJECTED\", input.storyID),\n+          getQueueConnection(\n+            store,\n+            \"REPORTED\",\n+            input.storyID,\n+            input.siteID,\n+            input.section\n+          ),\n+          getQueueConnection(\n+            store,\n+            \"PENDING\",\n+            input.storyID,\n+            input.siteID,\n+            input.section\n+          ),\n+          getQueueConnection(\n+            store,\n+            \"UNMODERATED\",\n+            input.storyID,\n+            input.siteID,\n+            input.section\n+          ),\n+          getQueueConnection(\n+            store,\n+            \"REJECTED\",\n+            input.storyID,\n+            input.siteID,\n+            input.section\n+          ),\n         ].filter((c) => c);\n         connections.forEach((con) =>\n           ConnectionHandler.deleteNode(con!, input.commentID)"
    },
    {
      "sha": "04e3858a06c0cc7b1415ff3c1ad483bef8c10e10",
      "filename": "src/core/client/admin/mutations/RejectCommentMutation.ts",
      "status": "modified",
      "additions": 15,
      "deletions": 2,
      "changes": 17,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/mutations/RejectCommentMutation.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/mutations/RejectCommentMutation.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/mutations/RejectCommentMutation.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -2,6 +2,7 @@ import { graphql } from \"react-relay\";\n import { ConnectionHandler, Environment } from \"relay-runtime\";\n \n import { getQueueConnection } from \"coral-admin/helpers\";\n+import { SectionFilter } from \"coral-common/section\";\n import {\n   commitMutationPromiseNormalized,\n   createMutation,\n@@ -16,13 +17,19 @@ const RejectCommentMutation = createMutation(\n   \"rejectComment\",\n   (\n     environment: Environment,\n-    input: MutationInput<MutationTypes> & { storyID?: string }\n+    input: MutationInput<MutationTypes> & {\n+      storyID?: string | null;\n+      siteID?: string | null;\n+      section?: SectionFilter | null;\n+    }\n   ) =>\n     commitMutationPromiseNormalized<MutationTypes>(environment, {\n       mutation: graphql`\n         mutation RejectCommentMutation(\n           $input: RejectCommentInput!\n           $storyID: ID\n+          $siteID: ID\n+          $section: SectionFilter\n         ) {\n           rejectComment(input: $input) {\n             comment {\n@@ -42,7 +49,11 @@ const RejectCommentMutation = createMutation(\n               }\n               ...ModeratedByContainer_comment\n             }\n-            moderationQueues(storyID: $storyID) {\n+            moderationQueues(\n+              storyID: $storyID\n+              siteID: $siteID\n+              section: $section\n+            ) {\n               unmoderated {\n                 count\n               }\n@@ -64,6 +75,8 @@ const RejectCommentMutation = createMutation(\n           clientMutationId: (clientMutationId++).toString(),\n         },\n         storyID: input.storyID,\n+        siteID: input.siteID,\n+        section: input.section,\n       },\n       optimisticUpdater: (store) => {\n         const proxy = store.get(input.commentID)!;"
    },
    {
      "sha": "7c1c140df4cf4f85af6d68fbbb6803be6ef3aa1b",
      "filename": "src/core/client/admin/routes/Configure/sections/Auth/OIDCConfigContainer.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Configure/sections/Auth/OIDCConfigContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Configure/sections/Auth/OIDCConfigContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Configure/sections/Auth/OIDCConfigContainer.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -39,7 +39,9 @@ class OIDCConfigContainer extends React.Component<Props, State> {\n     }\n     this.setState({ awaitingResponse: true });\n     try {\n-      const config = await this.props.discoverOIDCConfiguration({\n+      const {\n+        discoverOIDCConfiguration: config,\n+      } = await this.props.discoverOIDCConfiguration({\n         issuer,\n       });\n       if (config) {"
    },
    {
      "sha": "1bf671044d2199a61072756fffb5ebc05e46a947",
      "filename": "src/core/client/admin/routes/Moderate/Moderate.tsx",
      "status": "modified",
      "additions": 14,
      "deletions": 1,
      "changes": 15,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/Moderate.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/Moderate.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/Moderate.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -8,12 +8,14 @@ import React, {\n \n import MainLayout from \"coral-admin/components/MainLayout\";\n import { HOTKEYS } from \"coral-admin/constants\";\n+import { SectionFilter } from \"coral-common/section\";\n import { PropTypesOf } from \"coral-framework/types\";\n import { SubBar } from \"coral-ui/components/v2/SubBar\";\n \n import HotkeysModal from \"./HotkeysModal\";\n import ModerateNavigationContainer from \"./ModerateNavigation\";\n import ModerateSearchBarContainer from \"./ModerateSearchBar\";\n+import { SectionSelectorContainer } from \"./SectionSelector\";\n import { SiteSelectorContainer } from \"./SiteSelector\";\n \n import styles from \"./Moderate.css\";\n@@ -26,12 +28,14 @@ interface RouteParams {\n interface Props {\n   story: PropTypesOf<typeof ModerateNavigationContainer>[\"story\"] &\n     PropTypesOf<typeof ModerateSearchBarContainer>[\"story\"];\n-  query: PropTypesOf<typeof SiteSelectorContainer>[\"query\"];\n+  query: PropTypesOf<typeof SiteSelectorContainer>[\"query\"] &\n+    PropTypesOf<typeof SectionSelectorContainer>[\"query\"];\n   moderationQueues: PropTypesOf<\n     typeof ModerateNavigationContainer\n   >[\"moderationQueues\"];\n   allStories: boolean;\n   siteID: string | null;\n+  section?: SectionFilter | null;\n   settings: PropTypesOf<typeof ModerateSearchBarContainer>[\"settings\"] | null;\n   children?: React.ReactNode;\n   queueName: string;\n@@ -48,6 +52,7 @@ const Moderate: FunctionComponent<Props> = ({\n   routeParams,\n   settings,\n   siteID,\n+  section,\n }) => {\n   const [showHotkeysModal, setShowHotkeysModal] = useState(false);\n   const closeModal = useCallback(() => {\n@@ -80,12 +85,20 @@ const Moderate: FunctionComponent<Props> = ({\n             siteID={routeParams.siteID || siteID || null}\n           />\n         }\n+        sectionSelector={\n+          <SectionSelectorContainer\n+            queueName={queueName}\n+            query={query}\n+            section={section}\n+          />\n+        }\n       />\n       <SubBar data-testid=\"moderate-tabBar-container\">\n         <ModerateNavigationContainer\n           moderationQueues={moderationQueues}\n           story={story}\n           siteID={routeParams.siteID || siteID || null}\n+          section={section}\n         />\n       </SubBar>\n       <div className={styles.background} />"
    },
    {
      "sha": "c228f79bf86e6b124ec8c87a584791d0bdfe9d34",
      "filename": "src/core/client/admin/routes/Moderate/ModerateContainer.tsx",
      "status": "modified",
      "additions": 15,
      "deletions": 5,
      "changes": 20,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/ModerateContainer.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -2,6 +2,7 @@ import { Match, RouteProps, Router, withRouter } from \"found\";\n import React from \"react\";\n import { graphql } from \"react-relay\";\n \n+import parseModerationOptions from \"coral-framework/helpers/parseModerationOptions\";\n import { withRouteConfig } from \"coral-framework/lib/router\";\n import { Spinner } from \"coral-ui/components/v2\";\n \n@@ -36,13 +37,16 @@ class ModerateContainer extends React.Component<Props> {\n     ].find((name) => {\n       return this.props.match.location.pathname.includes(name);\n     });\n+    const { section } = parseModerationOptions(this.props.match);\n+\n     if (!this.props.data) {\n       return (\n         <Moderate\n           moderationQueues={null}\n           story={null}\n           settings={null}\n           siteID={null}\n+          section={section}\n           query={this.props.data}\n           routeParams={this.props.match.params}\n           queueName={queueName || \"default\"}\n@@ -58,6 +62,7 @@ class ModerateContainer extends React.Component<Props> {\n         moderationQueues={this.props.data.moderationQueues}\n         story={this.props.data.story || null}\n         siteID={this.props.data.story ? this.props.data.story.site.id : null}\n+        section={section}\n         routeParams={this.props.match.params}\n         query={this.props.data}\n         allStories={allStories}\n@@ -76,6 +81,7 @@ const enhanced = withRouteConfig<Props>({\n       $storyID: ID\n       $includeStory: Boolean!\n       $siteID: ID\n+      $section: SectionFilter\n     ) {\n       settings {\n         ...ModerateSearchBarContainer_settings\n@@ -87,19 +93,23 @@ const enhanced = withRouteConfig<Props>({\n           id\n         }\n       }\n-      moderationQueues(storyID: $storyID, siteID: $siteID) {\n+      moderationQueues(storyID: $storyID, siteID: $siteID, section: $section) {\n         ...ModerateNavigationContainer_moderationQueues\n       }\n       ...SiteSelectorContainer_query\n+      ...SectionSelectorContainer_query\n     }\n   `,\n   cacheConfig: { force: true },\n   prepareVariables: (params, match) => {\n+    const { storyID, siteID, section } = parseModerationOptions(match);\n+\n     return {\n-      storyID: match.params.storyID,\n-      siteID: match.params.siteID,\n-      includeStory: Boolean(match.params.storyID),\n-      includeSite: Boolean(match.params.siteID),\n+      storyID,\n+      siteID,\n+      section,\n+      includeStory: Boolean(storyID),\n+      includeSite: Boolean(siteID),\n     };\n   },\n })(withRouter(ModerateContainer));"
    },
    {
      "sha": "5fdee88b9677b997069a37e111059ca2a2621d8e",
      "filename": "src/core/client/admin/routes/Moderate/ModerateNavigation/ModerateCountsCommentEnteredSubscription.tsx",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateNavigation/ModerateCountsCommentEnteredSubscription.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateNavigation/ModerateCountsCommentEnteredSubscription.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/ModerateNavigation/ModerateCountsCommentEnteredSubscription.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -20,8 +20,11 @@ const ModerateCountsCommentEnteredSubscription = createSubscription(\n   ) =>\n     requestSubscription(environment, {\n       subscription: graphql`\n-        subscription ModerateCountsCommentEnteredSubscription($storyID: ID) {\n-          commentEnteredModerationQueue(storyID: $storyID) {\n+        subscription ModerateCountsCommentEnteredSubscription(\n+          $storyID: ID\n+          $siteID: ID\n+        ) {\n+          commentEnteredModerationQueue(storyID: $storyID, siteID: $siteID) {\n             queue\n           }\n         }"
    },
    {
      "sha": "cf79f3d79fe3c0f54fe81da724ec1afbc28277b5",
      "filename": "src/core/client/admin/routes/Moderate/ModerateNavigation/ModerateCountsCommentLeftSubscription.tsx",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateNavigation/ModerateCountsCommentLeftSubscription.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateNavigation/ModerateCountsCommentLeftSubscription.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/ModerateNavigation/ModerateCountsCommentLeftSubscription.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -20,11 +20,11 @@ const ModerateCountsCommentLeftSubscription = createSubscription(\n   ) =>\n     requestSubscription(environment, {\n       subscription: graphql`\n-        subscription ModerateCountsCommentLeftSubscription($storyID: ID) {\n-          commentLeftModerationQueue(storyID: $storyID) {\n-            queue\n-          }\n-          commentLeftModerationQueue(storyID: $storyID) {\n+        subscription ModerateCountsCommentLeftSubscription(\n+          $storyID: ID\n+          $siteID: ID\n+        ) {\n+          commentLeftModerationQueue(storyID: $storyID, siteID: $siteID) {\n             queue\n           }\n         }"
    },
    {
      "sha": "3340535a3c085622025b45a657716f6db4ec3642",
      "filename": "src/core/client/admin/routes/Moderate/ModerateNavigation/ModerateNavigationContainer.tsx",
      "status": "modified",
      "additions": 10,
      "deletions": 2,
      "changes": 12,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateNavigation/ModerateNavigationContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateNavigation/ModerateNavigationContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/ModerateNavigation/ModerateNavigationContainer.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -1,6 +1,7 @@\n import React, { useEffect } from \"react\";\n import { graphql } from \"react-relay\";\n \n+import { SectionFilter } from \"coral-common/section\";\n import {\n   combineDisposables,\n   useSubscription,\n@@ -18,6 +19,7 @@ interface Props {\n   moderationQueues: ModerationQueuesData | null;\n   story: StoryData | null;\n   siteID: string | null;\n+  section?: SectionFilter | null;\n }\n \n const ModerateNavigationContainer: React.FunctionComponent<Props> = (props) => {\n@@ -29,7 +31,7 @@ const ModerateNavigationContainer: React.FunctionComponent<Props> = (props) => {\n   );\n \n   useEffect(() => {\n-    if (!props.moderationQueues) {\n+    if (!props.moderationQueues || props.section) {\n       return;\n     }\n     const vars = {\n@@ -43,7 +45,12 @@ const ModerateNavigationContainer: React.FunctionComponent<Props> = (props) => {\n     return () => {\n       disposable.dispose();\n     };\n-  }, [Boolean(props.moderationQueues), props.story, props.siteID]);\n+  }, [\n+    Boolean(props.moderationQueues),\n+    props.story,\n+    props.siteID,\n+    props.section,\n+  ]);\n \n   if (!props.moderationQueues) {\n     return <Navigation />;\n@@ -55,6 +62,7 @@ const ModerateNavigationContainer: React.FunctionComponent<Props> = (props) => {\n       pendingCount={props.moderationQueues.pending.count}\n       storyID={props.story && props.story.id}\n       siteID={props.siteID}\n+      section={props.section}\n     />\n   );\n };"
    },
    {
      "sha": "8ad116a301f2f1b99b6cce62e343bf8fa4593977",
      "filename": "src/core/client/admin/routes/Moderate/ModerateNavigation/Navigation.tsx",
      "status": "modified",
      "additions": 8,
      "deletions": 5,
      "changes": 13,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateNavigation/Navigation.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateNavigation/Navigation.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/ModerateNavigation/Navigation.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -5,6 +5,7 @@ import { isNumber } from \"lodash\";\n import React, { FunctionComponent, useEffect, useMemo } from \"react\";\n \n import { HOTKEYS } from \"coral-admin/constants\";\n+import { SectionFilter } from \"coral-common/section\";\n import { getModerationLink } from \"coral-framework/helpers\";\n import { Counter, Icon, SubBarNavigation } from \"coral-ui/components/v2\";\n \n@@ -16,6 +17,7 @@ interface Props {\n   pendingCount?: number | null;\n   storyID?: string | null;\n   siteID?: string | null;\n+  section?: SectionFilter | null;\n   router: Router;\n   match: Match;\n }\n@@ -26,16 +28,17 @@ const Navigation: FunctionComponent<Props> = ({\n   pendingCount,\n   storyID,\n   siteID,\n+  section,\n   router,\n   match,\n }) => {\n   const moderationLinks = useMemo(() => {\n     return [\n-      getModerationLink({ queue: \"reported\", storyID, siteID }),\n-      getModerationLink({ queue: \"pending\", storyID, siteID }),\n-      getModerationLink({ queue: \"unmoderated\", storyID, siteID }),\n-      getModerationLink({ queue: \"approved\", storyID, siteID }),\n-      getModerationLink({ queue: \"rejected\", storyID, siteID }),\n+      getModerationLink({ queue: \"reported\", storyID, siteID, section }),\n+      getModerationLink({ queue: \"pending\", storyID, siteID, section }),\n+      getModerationLink({ queue: \"unmoderated\", storyID, siteID, section }),\n+      getModerationLink({ queue: \"approved\", storyID, siteID, section }),\n+      getModerationLink({ queue: \"rejected\", storyID, siteID, section }),\n     ];\n   }, [storyID, siteID]);\n "
    },
    {
      "sha": "1d1028420590629ee8a24106dd8eb153f023e958",
      "filename": "src/core/client/admin/routes/Moderate/ModerateSearchBar/Bar.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateSearchBar/Bar.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateSearchBar/Bar.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/ModerateSearchBar/Bar.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -36,6 +36,7 @@ interface Props {\n   onSearch?: (value: string) => void;\n \n   siteSelector: React.ReactNode;\n+  sectionSelector?: React.ReactNode;\n \n   multisite: boolean;\n }\n@@ -48,6 +49,7 @@ const Bar: FunctionComponent<Props> = ({\n   options,\n   onSearch,\n   siteSelector,\n+  sectionSelector,\n   multisite,\n }) => {\n   const [focused, focusHandlers] = useFocus();\n@@ -90,7 +92,7 @@ const Bar: FunctionComponent<Props> = ({\n         aria-expanded={focused}\n       >\n         <Backdrop className={styles.bumpZIndex} active={focused} />\n-        {multisite ? siteSelector : null}\n+        {multisite ? siteSelector : sectionSelector}\n         <Form onSubmit={submitHandler}>\n           {({ handleSubmit }) => (\n             <Localized"
    },
    {
      "sha": "b4339ced9391bf350e4a1372defb1b10d524df4e",
      "filename": "src/core/client/admin/routes/Moderate/ModerateSearchBar/ModerateSearchBarContainer.tsx",
      "status": "modified",
      "additions": 58,
      "deletions": 13,
      "changes": 71,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateSearchBar/ModerateSearchBarContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateSearchBar/ModerateSearchBarContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/ModerateSearchBar/ModerateSearchBarContainer.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -12,6 +12,7 @@ import { graphql } from \"react-relay\";\n import { getModerationLink } from \"coral-framework/helpers\";\n import { useEffectWhenChanged } from \"coral-framework/hooks\";\n import { useFetch, withFragmentContainer } from \"coral-framework/lib/relay\";\n+import { GQLFEATURE_FLAG } from \"coral-framework/schema\";\n import { PropTypesOf } from \"coral-framework/types\";\n import { Flex, Spinner } from \"coral-ui/components/v2\";\n import { blur } from \"coral-ui/helpers\";\n@@ -22,11 +23,13 @@ import {\n \n import { ModerateSearchBarContainer_settings as SettingsData } from \"coral-admin/__generated__/ModerateSearchBarContainer_settings.graphql\";\n import { ModerateSearchBarContainer_story as ModerationQueuesData } from \"coral-admin/__generated__/ModerateSearchBarContainer_story.graphql\";\n+import { SearchStoryFetchQueryResponse } from \"coral-admin/__generated__/SearchStoryFetchQuery.graphql\";\n \n import Bar from \"./Bar\";\n import GoToAriaInfo from \"./GoToAriaInfo\";\n import ModerateAllOption from \"./ModerateAllOption\";\n import Option from \"./Option\";\n+import OptionDetail from \"./OptionDetail\";\n import SearchStoryFetch from \"./SearchStoryFetch\";\n import SeeAllOption from \"./SeeAllOption\";\n \n@@ -37,6 +40,7 @@ interface Props {\n   settings: SettingsData | null;\n   allStories: boolean;\n   siteSelector: React.ReactNode;\n+  sectionSelector?: React.ReactNode;\n   siteID: string | null;\n }\n \n@@ -67,6 +71,38 @@ function useLinkNavHandler(router: Router): ListBoxOptionClickOrEnterHandler {\n   );\n }\n \n+function getStoryDetails(\n+  {\n+    multisite,\n+    featureFlags,\n+  }: SettingsData | SearchStoryFetchQueryResponse[\"settings\"],\n+  {\n+    site,\n+    metadata,\n+  }:\n+    | ModerationQueuesData\n+    | SearchStoryFetchQueryResponse[\"stories\"][\"edges\"][0][\"node\"]\n+) {\n+  return (\n+    <Flex itemGutter>\n+      {/* If we're multisite, show the site name. */}\n+      {multisite && <OptionDetail variant=\"bold\">{site.name}</OptionDetail>}\n+      {/* If the section is available, show it on the story result */}\n+      {!multisite &&\n+        featureFlags.includes(GQLFEATURE_FLAG.SECTIONS) &&\n+        (metadata?.section ? (\n+          <OptionDetail variant=\"bold\">{metadata.section}</OptionDetail>\n+        ) : (\n+          <Localized id=\"moderate-section-uncategorized\">\n+            <OptionDetail variant=\"muted\">Uncategorized</OptionDetail>\n+          </Localized>\n+        ))}\n+      {/* If the author is available, show it on the story result */}\n+      {metadata?.author && <OptionDetail>{metadata.author}</OptionDetail>}\n+    </Flex>\n+  );\n+}\n+\n function getContextOptionsWhenModeratingAll(\n   onClickOrEnter: ListBoxOptionClickOrEnterHandler\n ): SearchBarOptions {\n@@ -88,17 +124,18 @@ function getContextOptionsWhenModeratingAll(\n \n function getContextOptionsWhenModeratingStory(\n   onClickOrEnter: ListBoxOptionClickOrEnterHandler,\n+  settings: SettingsData | null,\n   story: ModerationQueuesData | null\n ): SearchBarOptions {\n-  if (story === null) {\n+  if (story === null || settings === null) {\n     return [];\n   }\n   return [\n     {\n       element: (\n         <Option\n           href={getModerationLink({ storyID: story.id })}\n-          details={story.metadata && story.metadata.author}\n+          details={getStoryDetails(settings, story)}\n         >\n           <GoToAriaInfo /> {story.metadata && story.metadata.title}\n         </Option>\n@@ -115,6 +152,7 @@ function getContextOptionsWhenModeratingStory(\n }\n \n type OnSearchCallback = (search: string) => void;\n+\n interface SearchParams {\n   query: string;\n   limit: number;\n@@ -165,7 +203,7 @@ function useSearchOptions(\n       if (siteID) {\n         searchParams.siteID = siteID;\n       }\n-      const stories = await searchStory(searchParams);\n+      const { settings, stories } = await searchStory(searchParams);\n       if (searchCount !== searchCountRef.current) {\n         // This result is old, so we can discard it.\n         return;\n@@ -184,12 +222,7 @@ function useSearchOptions(\n                   storyID: e.node.id,\n                   siteID: e.node.site.id,\n                 })}\n-                details={\n-                  <Flex itemGutter>\n-                    <strong>{e.node.site.name}</strong>\n-                    {e.node.metadata && e.node.metadata.author}\n-                  </Flex>\n-                }\n+                details={getStoryDetails(settings, e.node)}\n               >\n                 <GoToAriaInfo /> {e.node.metadata && e.node.metadata.title}\n               </Option>\n@@ -237,7 +270,11 @@ const ModerateSearchBarContainer: React.FunctionComponent<Props> = (props) => {\n   const linkNavHandler = useLinkNavHandler(props.router);\n   const contextOptions: PropTypesOf<typeof Bar>[\"options\"] = props.allStories\n     ? getContextOptionsWhenModeratingAll(linkNavHandler)\n-    : getContextOptionsWhenModeratingStory(linkNavHandler, props.story);\n+    : getContextOptionsWhenModeratingStory(\n+        linkNavHandler,\n+        props.settings,\n+        props.story\n+      );\n \n   const [searchOptions, onSearch] = useSearchOptions(\n     linkNavHandler,\n@@ -258,6 +295,7 @@ const ModerateSearchBarContainer: React.FunctionComponent<Props> = (props) => {\n       <Localized id=\"moderate-searchBar-allStories\" attrs={{ title: true }}>\n         <Bar\n           siteSelector={props.siteSelector}\n+          sectionSelector={props.sectionSelector}\n           multisite={props.settings ? props.settings.multisite : false}\n           title=\"All stories\"\n           {...childProps}\n@@ -270,29 +308,34 @@ const ModerateSearchBarContainer: React.FunctionComponent<Props> = (props) => {\n       <Bar\n         multisite={props.settings ? props.settings.multisite : false}\n         siteSelector={props.siteSelector}\n+        sectionSelector={props.sectionSelector}\n         title={\"\"}\n         {...childProps}\n       />\n     );\n   }\n-  const t = props.story.metadata && props.story.metadata.title;\n-  if (t) {\n+\n+  const title = props.story.metadata && props.story.metadata.title;\n+  if (title) {\n     return (\n       <Bar\n         multisite={props.settings ? props.settings.multisite : false}\n         siteSelector={props.siteSelector}\n-        title={t}\n+        sectionSelector={props.sectionSelector}\n+        title={title}\n         {...childProps}\n       />\n     );\n   }\n+\n   return (\n     <Localized\n       id=\"moderate-searchBar-titleNotAvailable\"\n       attrs={{ title: true }}\n     >\n       <Bar\n         siteSelector={props.siteSelector}\n+        sectionSelector={props.sectionSelector}\n         multisite={props.settings ? props.settings.multisite : false}\n         title={\"Title not available\"}\n         options={options}\n@@ -307,6 +350,7 @@ const enhanced = withRouter(\n     settings: graphql`\n       fragment ModerateSearchBarContainer_settings on Settings {\n         multisite\n+        featureFlags\n       }\n     `,\n     story: graphql`\n@@ -319,6 +363,7 @@ const enhanced = withRouter(\n         metadata {\n           title\n           author\n+          section\n         }\n       }\n     `,"
    },
    {
      "sha": "6c8a36a12bea21649e3c0523b4828c6960e549f7",
      "filename": "src/core/client/admin/routes/Moderate/ModerateSearchBar/Option.css",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateSearchBar/Option.css",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateSearchBar/Option.css",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/ModerateSearchBar/Option.css?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -8,6 +8,7 @@\n     @mixin outline;\n   }\n }\n+\n .container {\n   min-height: calc(4 * var(--mini-unit));\n   padding: var(--mini-unit) calc(2.5 * var(--mini-unit));\n@@ -30,7 +31,7 @@\n }\n \n .details {\n-  padding-top: 3px;\n+  padding-top: 8px;\n   font-family: var(--v2-font-family-primary);\n   font-weight: var(--v2-font-weight-primary-regular);\n   font-size: var(--v2-font-size-2);"
    },
    {
      "sha": "18ebc48e53514685e14083f219fb730ba3e71578",
      "filename": "src/core/client/admin/routes/Moderate/ModerateSearchBar/OptionDetail.css",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateSearchBar/OptionDetail.css",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateSearchBar/OptionDetail.css",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/ModerateSearchBar/OptionDetail.css?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -0,0 +1,8 @@\n+.bold {\n+  font-weight: var(--v2-font-weight-primary-bold);\n+}\n+\n+.muted {\n+  font-weight: var(--v2-font-weight-primary-bold);\n+  color: var(--v2-colors-grey-400);\n+}"
    },
    {
      "sha": "63730cad9ab22134541b7211467d1d39d4d5e08d",
      "filename": "src/core/client/admin/routes/Moderate/ModerateSearchBar/OptionDetail.tsx",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateSearchBar/OptionDetail.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateSearchBar/OptionDetail.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/ModerateSearchBar/OptionDetail.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -0,0 +1,21 @@\n+import cn from \"classnames\";\n+import React, { FunctionComponent } from \"react\";\n+\n+import styles from \"./OptionDetail.css\";\n+\n+interface Props {\n+  variant?: \"bold\" | \"muted\";\n+}\n+\n+const OptionDetail: FunctionComponent<Props> = ({ children, variant }) => (\n+  <span\n+    className={cn({\n+      [styles.muted]: variant === \"muted\",\n+      [styles.bold]: variant === \"bold\",\n+    })}\n+  >\n+    {children}\n+  </span>\n+);\n+\n+export default OptionDetail;"
    },
    {
      "sha": "de8695e0b68bf9263e7732b6129a5cc9b2933909",
      "filename": "src/core/client/admin/routes/Moderate/ModerateSearchBar/SearchStoryFetch.ts",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateSearchBar/SearchStoryFetch.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/ModerateSearchBar/SearchStoryFetch.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/ModerateSearchBar/SearchStoryFetch.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -20,6 +20,10 @@ const SearchStoryFetch = createFetch(\n           $limit: Int!\n           $siteID: ID\n         ) {\n+          settings {\n+            multisite\n+            featureFlags\n+          }\n           stories(query: $query, first: $limit, siteID: $siteID) {\n             edges {\n               node {\n@@ -30,6 +34,7 @@ const SearchStoryFetch = createFetch(\n                 }\n                 metadata {\n                   title\n+                  section\n                   author\n                 }\n               }"
    },
    {
      "sha": "4d51c3ecb7d99dc85ce7bea86cad71cc5bd70b45",
      "filename": "src/core/client/admin/routes/Moderate/Queue/ApprovedQueueRoute.tsx",
      "status": "modified",
      "additions": 18,
      "deletions": 4,
      "changes": 22,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/Queue/ApprovedQueueRoute.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/Queue/ApprovedQueueRoute.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/Queue/ApprovedQueueRoute.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -3,6 +3,7 @@ import { RouteProps } from \"found\";\n import React from \"react\";\n import { graphql, RelayPaginationProp } from \"react-relay\";\n \n+import parseModerationOptions from \"coral-framework/helpers/parseModerationOptions\";\n import { IntersectionProvider } from \"coral-framework/lib/intersection\";\n import { withPaginationContainer } from \"coral-framework/lib/relay\";\n import { resolveModule } from \"coral-framework/lib/relay/helpers\";\n@@ -19,6 +20,7 @@ interface ApprovedQueueRouteProps {\n   relay: RelayPaginationProp;\n   storyID?: string;\n   siteID?: string;\n+  section?: string | null;\n }\n \n // TODO: use generated types\n@@ -89,11 +91,13 @@ const enhanced = (withPaginationContainer<\n           cursor: { type: \"Cursor\" }\n           storyID: { type: \"ID\" }\n           siteID: { type: \"ID\" }\n+          section: { type: \"SectionFilter\" }\n         ) {\n         comments(\n           status: APPROVED\n           storyID: $storyID\n           siteID: $siteID\n+          section: $section\n           first: $count\n           after: $cursor\n         ) @connection(key: \"ApprovedQueue_comments\") {\n@@ -135,13 +139,15 @@ const enhanced = (withPaginationContainer<\n       query ApprovedQueueRoutePaginationQuery(\n         $storyID: ID\n         $siteID: ID\n+        $section: SectionFilter\n         $count: Int!\n         $cursor: Cursor\n       ) {\n         ...ApprovedQueueRoute_query\n           @arguments(\n             storyID: $storyID\n             siteID: $siteID\n+            section: $section\n             count: $count\n             cursor: $cursor\n           )\n@@ -153,18 +159,26 @@ const enhanced = (withPaginationContainer<\n enhanced.routeConfig = {\n   Component: enhanced,\n   query: resolveModule(graphql`\n-    query ApprovedQueueRouteQuery($storyID: ID, $siteID: ID) {\n-      ...ApprovedQueueRoute_query @arguments(storyID: $storyID, siteID: $siteID)\n+    query ApprovedQueueRouteQuery(\n+      $storyID: ID\n+      $siteID: ID\n+      $section: SectionFilter\n+    ) {\n+      ...ApprovedQueueRoute_query\n+        @arguments(storyID: $storyID, siteID: $siteID, section: $section)\n     }\n   `),\n   cacheConfig: { force: true },\n   render: function RejectedRouteRender({ Component, props, match }) {\n     if (Component && props) {\n+      const { storyID, siteID, section } = parseModerationOptions(match);\n+\n       return (\n         <Component\n           query={props}\n-          storyID={match.params.storyID}\n-          siteID={match.params.siteID}\n+          storyID={storyID}\n+          siteID={siteID}\n+          section={section}\n         />\n       );\n     }"
    },
    {
      "sha": "0d2a2290518759d4cae508f893532606e929484c",
      "filename": "src/core/client/admin/routes/Moderate/Queue/QueueCommentEnteredSubscription.tsx",
      "status": "modified",
      "additions": 16,
      "deletions": 4,
      "changes": 20,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/Queue/QueueCommentEnteredSubscription.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/Queue/QueueCommentEnteredSubscription.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/Queue/QueueCommentEnteredSubscription.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -2,6 +2,7 @@ import { graphql } from \"react-relay\";\n import { Environment, RecordSourceSelectorProxy } from \"relay-runtime\";\n \n import { getQueueConnection } from \"coral-admin/helpers\";\n+import { SectionFilter } from \"coral-common/section\";\n import {\n   createSubscription,\n   requestSubscription,\n@@ -14,7 +15,9 @@ import { QueueCommentEnteredSubscription } from \"coral-admin/__generated__/Queue\n function handleCommentEnteredModerationQueue(\n   store: RecordSourceSelectorProxy<unknown>,\n   queue: GQLMODERATION_QUEUE_RL,\n-  storyID: string | null\n+  storyID: string | null,\n+  siteID: string | null,\n+  section?: SectionFilter | null\n ) {\n   const rootField = store.getRootField(\"commentEnteredModerationQueue\");\n   if (!rootField) {\n@@ -28,7 +31,7 @@ function handleCommentEnteredModerationQueue(\n   );\n   commentsEdge.setValue(comment.getValue(\"createdAt\"), \"cursor\");\n   commentsEdge.setLinkedRecord(comment, \"node\");\n-  const connection = getQueueConnection(store, queue, storyID);\n+  const connection = getQueueConnection(store, queue, storyID, siteID, section);\n   if (connection) {\n     const linked = connection.getLinkedRecords(\"viewNewEdges\") || [];\n     connection.setLinkedRecords(linked.concat(commentsEdge), \"viewNewEdges\");\n@@ -45,9 +48,16 @@ const QueueSubscription = createSubscription(\n       subscription: graphql`\n         subscription QueueCommentEnteredSubscription(\n           $storyID: ID\n+          $siteID: ID\n+          $section: SectionFilter\n           $queue: MODERATION_QUEUE!\n         ) {\n-          commentEnteredModerationQueue(storyID: $storyID, queue: $queue) {\n+          commentEnteredModerationQueue(\n+            storyID: $storyID\n+            siteID: $siteID\n+            section: $section\n+            queue: $queue\n+          ) {\n             comment {\n               id\n               createdAt\n@@ -61,7 +71,9 @@ const QueueSubscription = createSubscription(\n         handleCommentEnteredModerationQueue(\n           store,\n           variables.queue,\n-          variables.storyID || null\n+          variables.storyID || null,\n+          variables.siteID || null,\n+          variables.section\n         );\n       },\n     })"
    },
    {
      "sha": "8b9f83958fac5aac4df13461700e9691161d1cc2",
      "filename": "src/core/client/admin/routes/Moderate/Queue/QueueCommentLeftSubscription.tsx",
      "status": "modified",
      "additions": 16,
      "deletions": 4,
      "changes": 20,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/Queue/QueueCommentLeftSubscription.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/Queue/QueueCommentLeftSubscription.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/Queue/QueueCommentLeftSubscription.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -2,6 +2,7 @@ import { graphql } from \"react-relay\";\n import { Environment, RecordSourceSelectorProxy } from \"relay-runtime\";\n \n import { getQueueConnection } from \"coral-admin/helpers\";\n+import { SectionFilter } from \"coral-common/section\";\n import {\n   createSubscription,\n   requestSubscription,\n@@ -14,7 +15,9 @@ import { QueueCommentLeftSubscription } from \"coral-admin/__generated__/QueueCom\n function handleCommentLeftModerationQueue(\n   store: RecordSourceSelectorProxy<unknown>,\n   queue: GQLMODERATION_QUEUE_RL,\n-  storyID: string | null\n+  storyID: string | null,\n+  siteID: string | null,\n+  section?: SectionFilter | null\n ) {\n   const rootField = store.getRootField(\"commentLeftModerationQueue\");\n   if (!rootField) {\n@@ -28,7 +31,7 @@ function handleCommentLeftModerationQueue(\n     // Mark that the status of the comment was live updated.\n     commentInStore.setValue(true, \"statusLiveUpdated\");\n   }\n-  const connection = getQueueConnection(store, queue, storyID);\n+  const connection = getQueueConnection(store, queue, storyID, siteID, section);\n   if (connection) {\n     const linked = connection.getLinkedRecords(\"viewNewEdges\") || [];\n     connection.setLinkedRecords(\n@@ -50,9 +53,16 @@ const QueueSubscription = createSubscription(\n       subscription: graphql`\n         subscription QueueCommentLeftSubscription(\n           $storyID: ID\n+          $siteID: ID\n+          $section: SectionFilter\n           $queue: MODERATION_QUEUE!\n         ) {\n-          commentLeftModerationQueue(storyID: $storyID, queue: $queue) {\n+          commentLeftModerationQueue(\n+            storyID: $storyID\n+            siteID: $siteID\n+            section: $section\n+            queue: $queue\n+          ) {\n             comment {\n               id\n               status\n@@ -67,7 +77,9 @@ const QueueSubscription = createSubscription(\n         handleCommentLeftModerationQueue(\n           store,\n           variables.queue,\n-          variables.storyID || null\n+          variables.storyID || null,\n+          variables.siteID || null,\n+          variables.section\n         );\n       },\n     })"
    },
    {
      "sha": "a5ad2397e8c190c8f3ad936dbf0966e861e4e019",
      "filename": "src/core/client/admin/routes/Moderate/Queue/QueueRoute.tsx",
      "status": "modified",
      "additions": 43,
      "deletions": 15,
      "changes": 58,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/Queue/QueueRoute.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/Queue/QueueRoute.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/Queue/QueueRoute.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -7,6 +7,8 @@ import React, {\n } from \"react\";\n import { graphql, GraphQLTaggedNode, RelayPaginationProp } from \"react-relay\";\n \n+import { SectionFilter } from \"coral-common/section\";\n+import parseModerationOptions from \"coral-framework/helpers/parseModerationOptions\";\n import { IntersectionProvider } from \"coral-framework/lib/intersection\";\n import {\n   combineDisposables,\n@@ -36,8 +38,9 @@ interface Props {\n   settings: QueueRoute_settings | null;\n   relay: RelayPaginationProp;\n   emptyElement: React.ReactElement;\n-  storyID?: string;\n-  siteID?: string;\n+  storyID?: string | null;\n+  siteID?: string | null;\n+  section?: SectionFilter | null;\n   count?: string;\n }\n \n@@ -59,13 +62,15 @@ export const QueueRoute: FunctionComponent<Props> = (props) => {\n       queue: props.queueName,\n       storyID: props.storyID || null,\n       siteID: props.siteID || null,\n+      section: props.section,\n     });\n   }, [props.queueName, props.storyID, props.siteID, viewNew]);\n   useEffect(() => {\n     const vars = {\n       queue: props.queueName,\n       storyID: props.storyID || null,\n       siteID: props.siteID || null,\n+      section: props.section,\n     };\n     const disposable = combineDisposables(\n       subscribeToQueueCommentEntered(vars),\n@@ -77,6 +82,7 @@ export const QueueRoute: FunctionComponent<Props> = (props) => {\n   }, [\n     props.storyID,\n     props.siteID,\n+    props.section,\n     props.queueName,\n     subscribeToQueueCommentEntered,\n     subscribeToQueueCommentLeft,\n@@ -126,6 +132,9 @@ const createQueueRoute = (\n       if (!Component) {\n         throw new Error(\"Missing component\");\n       }\n+\n+      const { storyID, siteID, section } = parseModerationOptions(match);\n+\n       if (!data || !data.moderationQueues) {\n         return (\n           <Component\n@@ -134,22 +143,25 @@ const createQueueRoute = (\n             queue={null}\n             settings={null}\n             emptyElement={emptyElement}\n-            storyID={match.params.storyID}\n-            siteID={match.params.siteID}\n+            storyID={storyID}\n+            siteID={siteID}\n+            section={section}\n           />\n         );\n       }\n       const queue =\n         data.moderationQueues[Object.keys(data.moderationQueues)[0]];\n+\n       return (\n         <Component\n           isLoading={false}\n           queueName={queueName}\n           queue={queue}\n           settings={data.settings}\n           emptyElement={emptyElement}\n-          storyID={match.params.storyID}\n-          siteID={match.params.siteID}\n+          storyID={storyID}\n+          siteID={siteID}\n+          section={section}\n         />\n       );\n     },\n@@ -217,8 +229,13 @@ const createQueueRoute = (\n export const PendingQueueRoute = createQueueRoute(\n   GQLMODERATION_QUEUE.PENDING,\n   graphql`\n-    query QueueRoutePendingQuery($storyID: ID, $siteID: ID, $count: Int) {\n-      moderationQueues(storyID: $storyID, siteID: $siteID) {\n+    query QueueRoutePendingQuery(\n+      $storyID: ID\n+      $siteID: ID\n+      $count: Int\n+      $section: SectionFilter\n+    ) {\n+      moderationQueues(storyID: $storyID, siteID: $siteID, section: $section) {\n         pending {\n           ...QueueRoute_queue @arguments(count: $count)\n         }\n@@ -234,10 +251,11 @@ export const PendingQueueRoute = createQueueRoute(\n     query QueueRoutePaginationPendingQuery(\n       $storyID: ID\n       $siteID: ID\n+      $section: SectionFilter\n       $count: Int!\n       $cursor: Cursor\n     ) {\n-      moderationQueues(storyID: $storyID, siteID: $siteID) {\n+      moderationQueues(storyID: $storyID, siteID: $siteID, section: $section) {\n         pending {\n           ...QueueRoute_queue @arguments(count: $count, cursor: $cursor)\n         }\n@@ -255,8 +273,12 @@ export const PendingQueueRoute = createQueueRoute(\n export const ReportedQueueRoute = createQueueRoute(\n   GQLMODERATION_QUEUE.REPORTED,\n   graphql`\n-    query QueueRouteReportedQuery($storyID: ID, $siteID: ID) {\n-      moderationQueues(storyID: $storyID, siteID: $siteID) {\n+    query QueueRouteReportedQuery(\n+      $storyID: ID\n+      $siteID: ID\n+      $section: SectionFilter\n+    ) {\n+      moderationQueues(storyID: $storyID, siteID: $siteID, section: $section) {\n         reported {\n           ...QueueRoute_queue\n         }\n@@ -272,10 +294,11 @@ export const ReportedQueueRoute = createQueueRoute(\n     query QueueRoutePaginationReportedQuery(\n       $storyID: ID\n       $siteID: ID\n+      $section: SectionFilter\n       $count: Int!\n       $cursor: Cursor\n     ) {\n-      moderationQueues(storyID: $storyID, siteID: $siteID) {\n+      moderationQueues(storyID: $storyID, siteID: $siteID, section: $section) {\n         reported {\n           ...QueueRoute_queue @arguments(count: $count, cursor: $cursor)\n         }\n@@ -293,8 +316,12 @@ export const ReportedQueueRoute = createQueueRoute(\n export const UnmoderatedQueueRoute = createQueueRoute(\n   GQLMODERATION_QUEUE.UNMODERATED,\n   graphql`\n-    query QueueRouteUnmoderatedQuery($storyID: ID, $siteID: ID) {\n-      moderationQueues(storyID: $storyID, siteID: $siteID) {\n+    query QueueRouteUnmoderatedQuery(\n+      $storyID: ID\n+      $siteID: ID\n+      $section: SectionFilter\n+    ) {\n+      moderationQueues(storyID: $storyID, siteID: $siteID, section: $section) {\n         unmoderated {\n           ...QueueRoute_queue\n         }\n@@ -310,10 +337,11 @@ export const UnmoderatedQueueRoute = createQueueRoute(\n     query QueueRoutePaginationUnmoderatedQuery(\n       $storyID: ID\n       $siteID: ID\n+      $section: SectionFilter\n       $count: Int!\n       $cursor: Cursor\n     ) {\n-      moderationQueues(storyID: $storyID, siteID: $siteID) {\n+      moderationQueues(storyID: $storyID, siteID: $siteID, section: $section) {\n         unmoderated {\n           ...QueueRoute_queue @arguments(count: $count, cursor: $cursor)\n         }"
    },
    {
      "sha": "09da23b5d10132020df4c0b7fc2618d6548a69c8",
      "filename": "src/core/client/admin/routes/Moderate/Queue/QueueViewNewMutation.tsx",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/Queue/QueueViewNewMutation.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/Queue/QueueViewNewMutation.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/Queue/QueueViewNewMutation.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -1,6 +1,7 @@\n import { ConnectionHandler, Environment } from \"relay-runtime\";\n \n import { getQueueConnection } from \"coral-admin/helpers\";\n+import { SectionFilter } from \"coral-common/section\";\n import {\n   commitLocalUpdatePromisified,\n   createMutation,\n@@ -10,6 +11,7 @@ import { GQLMODERATION_QUEUE } from \"coral-framework/schema\";\n interface QueueViewNewInput {\n   storyID: string | null;\n   siteID: string | null;\n+  section?: SectionFilter | null;\n   queue: GQLMODERATION_QUEUE;\n }\n \n@@ -21,7 +23,8 @@ const QueueViewNewMutation = createMutation(\n         store,\n         input.queue,\n         input.storyID,\n-        input.siteID\n+        input.siteID,\n+        input.section\n       );\n       if (!connection) {\n         return;"
    },
    {
      "sha": "a7328b654578a58aef11e2e63db69c3533a2dc5c",
      "filename": "src/core/client/admin/routes/Moderate/Queue/RejectedQueueRoute.tsx",
      "status": "modified",
      "additions": 18,
      "deletions": 4,
      "changes": 22,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/Queue/RejectedQueueRoute.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/Queue/RejectedQueueRoute.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/Queue/RejectedQueueRoute.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -3,6 +3,7 @@ import { RouteProps } from \"found\";\n import React from \"react\";\n import { graphql, RelayPaginationProp } from \"react-relay\";\n \n+import parseModerationOptions from \"coral-framework/helpers/parseModerationOptions\";\n import { IntersectionProvider } from \"coral-framework/lib/intersection\";\n import { withPaginationContainer } from \"coral-framework/lib/relay\";\n import { resolveModule } from \"coral-framework/lib/relay/helpers\";\n@@ -19,6 +20,7 @@ interface RejectedQueueRouteProps {\n   relay: RelayPaginationProp;\n   storyID?: string;\n   siteID?: string;\n+  section?: string | null;\n }\n \n // TODO: use generated types\n@@ -89,11 +91,13 @@ const enhanced = (withPaginationContainer<\n           cursor: { type: \"Cursor\" }\n           storyID: { type: \"ID\" }\n           siteID: { type: \"ID\" }\n+          section: { type: \"SectionFilter\" }\n         ) {\n         comments(\n           status: REJECTED\n           storyID: $storyID\n           siteID: $siteID\n+          section: $section\n           first: $count\n           after: $cursor\n         ) @connection(key: \"RejectedQueue_comments\") {\n@@ -135,13 +139,15 @@ const enhanced = (withPaginationContainer<\n       query RejectedQueueRoutePaginationQuery(\n         $storyID: ID\n         $siteID: ID\n+        $section: SectionFilter\n         $count: Int!\n         $cursor: Cursor\n       ) {\n         ...RejectedQueueRoute_query\n           @arguments(\n             storyID: $storyID\n             siteID: $siteID\n+            section: $section\n             count: $count\n             cursor: $cursor\n           )\n@@ -153,18 +159,26 @@ const enhanced = (withPaginationContainer<\n enhanced.routeConfig = {\n   Component: enhanced,\n   query: resolveModule(graphql`\n-    query RejectedQueueRouteQuery($storyID: ID, $siteID: ID) {\n-      ...RejectedQueueRoute_query @arguments(storyID: $storyID, siteID: $siteID)\n+    query RejectedQueueRouteQuery(\n+      $storyID: ID\n+      $siteID: ID\n+      $section: SectionFilter\n+    ) {\n+      ...RejectedQueueRoute_query\n+        @arguments(storyID: $storyID, siteID: $siteID, section: $section)\n     }\n   `),\n   cacheConfig: { force: true },\n   render: function RejectedRouteRender({ Component, props, match }) {\n     if (Component && props) {\n+      const { storyID, siteID, section } = parseModerationOptions(match);\n+\n       return (\n         <Component\n           query={props}\n-          storyID={match.params.storyID}\n-          siteID={match.params.siteID}\n+          storyID={storyID}\n+          siteID={siteID}\n+          section={section}\n         />\n       );\n     }"
    },
    {
      "sha": "9756af271e97297f80b1c257708e1ea0e8b50090",
      "filename": "src/core/client/admin/routes/Moderate/SectionSelector/SectionSelector.css",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/SectionSelector/SectionSelector.css",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/SectionSelector/SectionSelector.css",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/SectionSelector/SectionSelector.css?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -0,0 +1,8 @@\n+.button {\n+  height: calc(4 * var(--mini-unit));\n+}\n+\n+.buttonText {\n+  overflow-x: hidden;\n+  text-overflow: ellipsis;\n+}"
    },
    {
      "sha": "403b73b43cbcaada86a7a3ee2782f16f328c40c1",
      "filename": "src/core/client/admin/routes/Moderate/SectionSelector/SectionSelector.tsx",
      "status": "added",
      "additions": 74,
      "deletions": 0,
      "changes": 74,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/SectionSelector/SectionSelector.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/SectionSelector/SectionSelector.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/SectionSelector/SectionSelector.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -0,0 +1,74 @@\n+import { Localized } from \"@fluent/react/compat\";\n+import React, { FunctionComponent } from \"react\";\n+\n+import PaginatedSelect from \"coral-admin/components/PaginatedSelect\";\n+import { SectionFilter } from \"coral-common/section\";\n+import { getModerationLink, QUEUE_NAME } from \"coral-framework/helpers\";\n+import { Divider } from \"coral-ui/components/v2/Dropdown\";\n+\n+import SectionSelectorSection from \"./SectionSelectorSection\";\n+\n+import styles from \"./SectionSelector.css\";\n+\n+interface Props {\n+  sections: ReadonlyArray<string>;\n+  section?: SectionFilter | null;\n+  queueName: QUEUE_NAME;\n+}\n+\n+const SelectedSection: FunctionComponent<{\n+  section?: SectionFilter | null;\n+}> = ({ section }) => {\n+  if (!section) {\n+    return (\n+      <Localized id=\"moderate-section-selector-allSections\">\n+        <span className={styles.buttonText}>All Sections</span>\n+      </Localized>\n+    );\n+  }\n+\n+  if (!section.name) {\n+    return (\n+      <Localized id=\"moderate-section-selector-uncategorized\">\n+        <span className={styles.buttonText}>Uncategorized</span>\n+      </Localized>\n+    );\n+  }\n+\n+  return <span className={styles.buttonText}>{section.name}</span>;\n+};\n+\n+const SectionSelector: FunctionComponent<Props> = ({\n+  sections,\n+  section,\n+  queueName: queue,\n+}) => {\n+  return (\n+    <PaginatedSelect\n+      disableLoadMore\n+      className={styles.button}\n+      selected={<SelectedSection section={section} />}\n+    >\n+      <SectionSelectorSection\n+        active={!section}\n+        link={getModerationLink({ queue })}\n+      />\n+      <SectionSelectorSection\n+        section={{ name: null }}\n+        active={!!section && !section.name}\n+        link={getModerationLink({ queue, section: { name: null } })}\n+      />\n+      {sections.length > 0 && <Divider />}\n+      {sections.map((name) => (\n+        <SectionSelectorSection\n+          key={name}\n+          section={{ name }}\n+          active={!!section && section.name === name}\n+          link={getModerationLink({ queue, section: { name } })}\n+        />\n+      ))}\n+    </PaginatedSelect>\n+  );\n+};\n+\n+export default SectionSelector;"
    },
    {
      "sha": "865c8b192ed6e24a505d3c32df559a4ada9ec698",
      "filename": "src/core/client/admin/routes/Moderate/SectionSelector/SectionSelectorContainer.tsx",
      "status": "added",
      "additions": 54,
      "deletions": 0,
      "changes": 54,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/SectionSelector/SectionSelectorContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/SectionSelector/SectionSelectorContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/SectionSelector/SectionSelectorContainer.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -0,0 +1,54 @@\n+import React, { FunctionComponent } from \"react\";\n+import { graphql } from \"react-relay\";\n+\n+import { SectionFilter } from \"coral-common/section\";\n+import { QUEUE_NAME } from \"coral-framework/helpers\";\n+import { withFragmentContainer } from \"coral-framework/lib/relay\";\n+import { GQLFEATURE_FLAG } from \"coral-framework/schema\";\n+\n+import { SectionSelectorContainer_query } from \"coral-admin/__generated__/SectionSelectorContainer_query.graphql\";\n+\n+import SectionSelector from \"./SectionSelector\";\n+\n+interface Props {\n+  query: SectionSelectorContainer_query | null;\n+  section?: SectionFilter | null;\n+  queueName: string;\n+}\n+\n+const SectionSelectorContainer: FunctionComponent<Props> = ({\n+  query,\n+  section,\n+  queueName,\n+}) => {\n+  // FEATURE_FLAG:SECTIONS\n+  if (\n+    !query ||\n+    !query.settings.featureFlags.includes(GQLFEATURE_FLAG.SECTIONS) ||\n+    !query.sections\n+  ) {\n+    return null;\n+  }\n+\n+  return (\n+    <SectionSelector\n+      sections={query.sections}\n+      section={section}\n+      queueName={queueName as QUEUE_NAME}\n+    />\n+  );\n+};\n+\n+const enhanced = withFragmentContainer<Props>({\n+  query: graphql`\n+    fragment SectionSelectorContainer_query on Query {\n+      sections\n+      settings {\n+        # FEATURE_FLAG:SECTIONS\n+        featureFlags\n+      }\n+    }\n+  `,\n+})(SectionSelectorContainer);\n+\n+export default enhanced;"
    },
    {
      "sha": "301ca8e6007f62b0e8bf14a8c29773279ad3d0cc",
      "filename": "src/core/client/admin/routes/Moderate/SectionSelector/SectionSelectorSection.css",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/SectionSelector/SectionSelectorSection.css",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/SectionSelector/SectionSelectorSection.css",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/SectionSelector/SectionSelectorSection.css?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -0,0 +1,18 @@\n+.root {\n+  font-family: var(--v2-font-family-primary);\n+  font-weight: var(--v2-font-weight-primary-regular);\n+  font-size: var(--v2-font-size-1);\n+  color: var(--v2-colors-mono-500);\n+  line-height: var(--v2-line-height-reset);\n+  display: block;\n+  text-decoration: none;\n+  padding: var(--v2-spacing-2) var(--v2-spacing-4);\n+}\n+\n+.root:hover {\n+  background: var(--v2-colors-teal-100);\n+}\n+\n+.active {\n+  font-weight: var(--v2-font-weight-primary-bold);\n+}"
    },
    {
      "sha": "fafbece2554b9bfcf86dfa90dc7d6c0a476a57cb",
      "filename": "src/core/client/admin/routes/Moderate/SectionSelector/SectionSelectorSection.tsx",
      "status": "added",
      "additions": 43,
      "deletions": 0,
      "changes": 43,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/SectionSelector/SectionSelectorSection.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/SectionSelector/SectionSelectorSection.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/SectionSelector/SectionSelectorSection.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -0,0 +1,43 @@\n+import { Localized } from \"@fluent/react/compat\";\n+import cn from \"classnames\";\n+import { Link } from \"found\";\n+import React, { FunctionComponent } from \"react\";\n+\n+import { SectionFilter } from \"coral-common/section\";\n+\n+import styles from \"./SectionSelectorSection.css\";\n+\n+interface Props {\n+  section?: SectionFilter;\n+  active?: boolean;\n+  link?: string;\n+}\n+\n+const SectionSelectorSection: FunctionComponent<Props> = ({\n+  section,\n+  link,\n+  active,\n+}) => {\n+  return (\n+    <Link\n+      className={cn(styles.root, {\n+        [styles.active]: active,\n+      })}\n+      to={link || \"\"}\n+    >\n+      {!section && (\n+        <Localized id=\"moderate-section-selector-allSections\">\n+          <span>All Sections</span>\n+        </Localized>\n+      )}\n+      {section && !section.name && (\n+        <Localized id=\"moderate-section-selector-uncategorized\">\n+          <span>Uncategorized</span>\n+        </Localized>\n+      )}\n+      {section && section.name && <span>{section.name}</span>}\n+    </Link>\n+  );\n+};\n+\n+export default SectionSelectorSection;"
    },
    {
      "sha": "7de5f8156917caaf3e0c047d1b72c189c6a7397b",
      "filename": "src/core/client/admin/routes/Moderate/SectionSelector/index.ts",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/SectionSelector/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/SectionSelector/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/SectionSelector/index.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -0,0 +1 @@\n+export { default as SectionSelectorContainer } from \"./SectionSelectorContainer\";"
    },
    {
      "sha": "301ca8e6007f62b0e8bf14a8c29773279ad3d0cc",
      "filename": "src/core/client/admin/routes/Moderate/SiteSelector/SiteSelectorSite.css",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/SiteSelector/SiteSelectorSite.css",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/SiteSelector/SiteSelectorSite.css",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/SiteSelector/SiteSelectorSite.css?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -9,6 +9,10 @@\n   padding: var(--v2-spacing-2) var(--v2-spacing-4);\n }\n \n+.root:hover {\n+  background: var(--v2-colors-teal-100);\n+}\n+\n .active {\n   font-weight: var(--v2-font-weight-primary-bold);\n }"
    },
    {
      "sha": "6783bdad0e16c7ffecac5277d0d5fa76f94165d4",
      "filename": "src/core/client/admin/routes/Moderate/__snapshots__/Moderate.spec.tsx.snap",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/__snapshots__/Moderate.spec.tsx.snap",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/routes/Moderate/__snapshots__/Moderate.spec.tsx.snap",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/__snapshots__/Moderate.spec.tsx.snap?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -6,6 +6,12 @@ exports[`renders correctly 1`] = `\n >\n   <withRouter(Relay(ModerateSearchBarContainer))\n     allStories={true}\n+    sectionSelector={\n+      <Relay(SectionSelectorContainer)\n+        query=\"\"\n+        queueName=\"\"\n+      />\n+    }\n     settings={\n       Object {\n         \"multisite\": false,"
    },
    {
      "sha": "a845aa9c03c2ec9d688111a7b71760126dbd7154",
      "filename": "src/core/client/admin/test/moderate/rejectedQueue.spec.tsx",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/test/moderate/rejectedQueue.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/admin/test/moderate/rejectedQueue.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/test/moderate/rejectedQueue.spec.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -75,6 +75,7 @@ it(\"renders rejected queue with comments\", async () => {\n             status: \"REJECTED\",\n             storyID: null,\n             siteID: null,\n+            section: null,\n           });\n           return {\n             edges: [\n@@ -114,6 +115,7 @@ it(\"shows a moderate story\", async () => {\n             status: \"REJECTED\",\n             storyID: null,\n             siteID: null,\n+            section: null,\n           });\n           return {\n             edges: [\n@@ -158,6 +160,7 @@ it(\"renders rejected queue with comments and load more\", async () => {\n                 status: GQLCOMMENT_STATUS.REJECTED,\n                 storyID: null,\n                 siteID: null,\n+                section: null,\n               });\n               return {\n                 edges: [\n@@ -182,6 +185,7 @@ it(\"renders rejected queue with comments and load more\", async () => {\n                 status: GQLCOMMENT_STATUS.REJECTED,\n                 storyID: null,\n                 siteID: null,\n+                section: null,\n               });\n               return {\n                 edges: [\n@@ -275,6 +279,7 @@ it(\"approves comment in rejected queue\", async () => {\n             status: \"REJECTED\",\n             storyID: null,\n             siteID: null,\n+            section: null,\n           });\n           return {\n             edges: ["
    },
    {
      "sha": "ec53944ee0722364404877f392ca0fa53c32be29",
      "filename": "src/core/client/framework/helpers/getModerationLink.ts",
      "status": "modified",
      "additions": 17,
      "deletions": 2,
      "changes": 19,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/framework/helpers/getModerationLink.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/framework/helpers/getModerationLink.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/framework/helpers/getModerationLink.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -1,22 +1,26 @@\n import urls from \"./urls\";\n \n+import { SectionFilter } from \"coral-common/section\";\n+\n export type QUEUE_NAME =\n   | \"reported\"\n   | \"pending\"\n   | \"unmoderated\"\n   | \"rejected\"\n   | \"approved\";\n \n-interface Options {\n+export interface Options {\n   queue?: QUEUE_NAME;\n   storyID?: string | null;\n   siteID?: string | null;\n+  section?: SectionFilter | null;\n }\n \n export default function getModerationLink({\n   queue,\n   storyID,\n   siteID,\n+  section,\n }: Options = {}) {\n   const parts = [urls.admin.moderate];\n \n@@ -32,5 +36,16 @@ export default function getModerationLink({\n     parts.push(\"sites\", encodeURIComponent(siteID));\n   }\n \n-  return parts.join(\"/\");\n+  const path = parts.join(\"/\");\n+\n+  if (section) {\n+    const { name } = section;\n+    if (name) {\n+      return path + \"?section=\" + encodeURIComponent(name);\n+    }\n+\n+    return path + \"?section=\";\n+  }\n+\n+  return path;\n }"
    },
    {
      "sha": "b5b67e0ce3e5f280a3d27a5dd211bd330d9cd1dd",
      "filename": "src/core/client/framework/helpers/parseModerationOptions.ts",
      "status": "added",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/framework/helpers/parseModerationOptions.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/framework/helpers/parseModerationOptions.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/framework/helpers/parseModerationOptions.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -0,0 +1,30 @@\n+import { Match } from \"found\";\n+\n+import { Options } from \"./getModerationLink\";\n+\n+export default function parseModerationOptions(\n+  match: Match\n+): Omit<Options, \"queue\"> {\n+  const options: Options = {};\n+\n+  if (match.params.storyID) {\n+    options.storyID = match.params.storyID;\n+  }\n+\n+  if (match.params.siteID) {\n+    options.siteID = match.params.siteID;\n+  }\n+\n+  if (typeof match.location.query.section === \"string\") {\n+    const section = match.location.query.section;\n+    options.section = section\n+      ? {\n+          name: section,\n+        }\n+      : {\n+          name: null,\n+        };\n+  }\n+\n+  return options;\n+}"
    },
    {
      "sha": "93a89c9ee114cacfb5925527c25e7f89ae8e0add",
      "filename": "src/core/client/framework/lib/network/createManagedSubscriptionClient.ts",
      "status": "modified",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/framework/lib/network/createManagedSubscriptionClient.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/framework/lib/network/createManagedSubscriptionClient.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/framework/lib/network/createManagedSubscriptionClient.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -42,10 +42,13 @@ export interface ManagedSubscriptionClient {\n     cacheConfig: CacheConfig,\n     observer: any\n   ): Disposable;\n+\n   /** Pauses all active subscriptions causing websocket connection to close. */\n   pause(): void;\n+\n   /** Resume all subscriptions eventually causing websocket to start with new connection parameters */\n   resume(): void;\n+\n   /** Sets access token and restarts the websocket connection */\n   setAccessToken(accessToken?: string): void;\n }\n@@ -140,13 +143,28 @@ export default function createManagedSubscriptionClient(\n         subscription.unsubscribe();\n       };\n     };\n+\n     // Register the request.\n     requests.push(request as SubscriptionRequest);\n \n     // Start subscription if we are not paused.\n     if (!paused) {\n       request.subscribe();\n+\n+      // Debug subscriptions being logged. These should be kept here to help\n+      // with debugging subscriptions.\n+      if (process.env.NODE_ENV !== \"production\") {\n+        window.console.debug(\n+          `+1 [${requests.length - 1} + 1 = ${\n+            requests.length\n+          }] subscribe called for subscription:`,\n+          request.operation?.name,\n+          \"with variables:\",\n+          JSON.stringify(request.variables)\n+        );\n+      }\n     }\n+\n     return {\n       dispose: () => {\n         const i = requests.findIndex((r) => r === request);\n@@ -166,6 +184,19 @@ export default function createManagedSubscriptionClient(\n             closeClient();\n           }\n         }\n+\n+        // Debug subscriptions being logged. These should be kept here to help\n+        // with debugging subscriptions.\n+        if (process.env.NODE_ENV !== \"production\") {\n+          window.console.debug(\n+            `-1 [${requests.length + 1} - 1 = ${\n+              requests.length\n+            }] dispose called for subscription:`,\n+            request.operation?.name,\n+            \"with variables:\",\n+            JSON.stringify(request.variables)\n+          );\n+        }\n       },\n     };\n   };"
    },
    {
      "sha": "9f1c60f7ccfcdee66b0cca73620bb80a8e449bf0",
      "filename": "src/core/client/framework/lib/network/createNetwork.ts",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/framework/lib/network/createNetwork.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/framework/lib/network/createNetwork.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/framework/lib/network/createNetwork.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -23,7 +23,7 @@ function createSubscriptionFunction(\n ): SubscribeFunction {\n   const fn: SubscribeFunction = (operation, variables, cacheConfig) => {\n     return Observable.create<GraphQLResponse>((sink) => {\n-      subscriptionClient.subscribe(\n+      const subscription = subscriptionClient.subscribe(\n         operation as any,\n         variables,\n         {\n@@ -36,6 +36,10 @@ function createSubscriptionFunction(\n           onCompleted: sink.complete,\n         }\n       );\n+\n+      return () => {\n+        subscription.dispose();\n+      };\n     });\n   };\n   return fn;"
    },
    {
      "sha": "de2356e47c30e83c64b4dca56fc0eea7892ec32b",
      "filename": "src/core/client/framework/lib/relay/fetch.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 9,
      "changes": 11,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/framework/lib/relay/fetch.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/framework/lib/relay/fetch.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/framework/lib/relay/fetch.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -14,7 +14,6 @@ import {\n } from \"relay-runtime\";\n \n import { CoralContext, useCoralContext, withContext } from \"../bootstrap\";\n-import extractPayload from \"./extractPayload\";\n \n export interface Fetch<N, V, R> {\n   name: N;\n@@ -49,14 +48,8 @@ export async function fetchQuery<T extends { response: any }>(\n   taggedNode: GraphQLTaggedNode,\n   variables: Variables,\n   cacheConfig?: CacheConfig\n-): Promise<T[\"response\"][keyof T[\"response\"]]> {\n-  const result = await relayFetchQuery(\n-    environment,\n-    taggedNode,\n-    variables,\n-    cacheConfig\n-  );\n-  return extractPayload(result);\n+): Promise<T[\"response\"]> {\n+  return relayFetchQuery(environment, taggedNode, variables, cacheConfig);\n }\n \n /**"
    },
    {
      "sha": "42d42b3959abe2e8d961ee71cd17008520fcdf45",
      "filename": "src/core/client/stream/tabs/Comments/Stream/AllCommentsTab/AllCommentsTabContainer.tsx",
      "status": "modified",
      "additions": 14,
      "deletions": 10,
      "changes": 24,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/stream/tabs/Comments/Stream/AllCommentsTab/AllCommentsTabContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/client/stream/tabs/Comments/Stream/AllCommentsTab/AllCommentsTabContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/AllCommentsTab/AllCommentsTabContainer.tsx?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -5,6 +5,7 @@ import { graphql, RelayPaginationProp } from \"react-relay\";\n import FadeInTransition from \"coral-framework/components/FadeInTransition\";\n import { useViewerNetworkEvent } from \"coral-framework/lib/events\";\n import {\n+  combineDisposables,\n   useLoadMore,\n   useLocal,\n   useMutation,\n@@ -86,17 +87,20 @@ export const AllCommentsTabContainer: FunctionComponent<Props> = (props) => {\n       // Only chronological sort supports top level live updates of incoming comments.\n       return;\n     }\n-    const newCommentDisposable = subscribeToCommentCreated({\n-      storyID: props.story.id,\n-      orderBy: commentsOrderBy,\n-    });\n-    const releasedCommentDisposable = subscribeToCommentReleased({\n-      storyID: props.story.id,\n-      orderBy: commentsOrderBy,\n-    });\n+\n+    const disposable = combineDisposables(\n+      subscribeToCommentCreated({\n+        storyID: props.story.id,\n+        orderBy: commentsOrderBy,\n+      }),\n+      subscribeToCommentReleased({\n+        storyID: props.story.id,\n+        orderBy: commentsOrderBy,\n+      })\n+    );\n+\n     return () => {\n-      newCommentDisposable.dispose();\n-      releasedCommentDisposable.dispose();\n+      disposable.dispose();\n     };\n   }, [\n     commentsOrderBy,"
    },
    {
      "sha": "d17f82aa18a52331ca677e2f6da3748cb44c36c0",
      "filename": "src/core/common/section.ts",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/common/section.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/common/section.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/common/section.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -0,0 +1,8 @@\n+export interface SectionFilter {\n+  /**\n+   * name when null or not provided indicates a filter for comments/stories\n+   * without a section. When name is provided as a string, it indicates a filter\n+   * for comments/stories with the specified section.\n+   */\n+  name?: string | null;\n+}"
    },
    {
      "sha": "03d579d1b6f607e94e0b828aea54d5530326b51f",
      "filename": "src/core/server/graph/loaders/Comments.ts",
      "status": "modified",
      "additions": 41,
      "deletions": 10,
      "changes": 51,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/graph/loaders/Comments.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/graph/loaders/Comments.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/loaders/Comments.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -2,6 +2,7 @@ import DataLoader from \"dataloader\";\n import { defaultTo, isNil, omitBy } from \"lodash\";\n import { DateTime } from \"luxon\";\n \n+import { SectionFilter } from \"coral-common/section\";\n import Context from \"coral-server/graph/context\";\n import { retrieveManyUserActionPresence } from \"coral-server/models/action/comment\";\n import {\n@@ -21,13 +22,15 @@ import {\n import { retrieveSharedModerationQueueQueuesCounts } from \"coral-server/models/comment/counts/shared\";\n import { hasPublishedStatus } from \"coral-server/models/comment/helpers\";\n import { Connection } from \"coral-server/models/helpers\";\n+import { hasFeatureFlag, Tenant } from \"coral-server/models/tenant\";\n import { User } from \"coral-server/models/user\";\n \n import {\n   CommentToParentsArgs,\n   CommentToRepliesArgs,\n   GQLActionPresence,\n   GQLCOMMENT_SORT,\n+  GQLFEATURE_FLAG,\n   GQLTAG,\n   GQLUSER_ROLE,\n   QueryToCommentsArgs,\n@@ -39,6 +42,18 @@ import {\n \n import { SingletonResolver } from \"./util\";\n \n+/**\n+ * requiredPropertyFilter will remove those properties that are nil from the\n+ * object as they are not nilable on the database model. If we didn't do this,\n+ * then any time that the property is nil, we'd be querying for comments that\n+ * can't possibly exist!\n+ *\n+ * @param props properties that if nil should be removed from the return object\n+ */\n+const requiredPropertyFilter = (\n+  props: CommentConnectionInput[\"filter\"]\n+): CommentConnectionInput[\"filter\"] => omitBy(props, isNil);\n+\n const tagFilter = (tag?: GQLTAG): CommentConnectionInput[\"filter\"] => {\n   if (tag) {\n     return {\n@@ -57,6 +72,22 @@ const queryFilter = (query?: string): CommentConnectionInput[\"filter\"] => {\n   return {};\n };\n \n+const sectionFilter = (\n+  tenant: Pick<Tenant, \"featureFlags\">,\n+  section?: SectionFilter\n+): CommentConnectionInput[\"filter\"] => {\n+  // Don't filter by section if the feature flag is disabled.\n+  if (!hasFeatureFlag(tenant, GQLFEATURE_FLAG.SECTIONS)) {\n+    return {};\n+  }\n+\n+  if (section) {\n+    return { section: section.name || null };\n+  }\n+\n+  return {};\n+};\n+\n /**\n  * primeCommentsFromConnection will prime a given context with the comments\n  * retrieved via a connection.\n@@ -139,6 +170,7 @@ export default (ctx: Context) => ({\n     after,\n     storyID,\n     siteID,\n+    section,\n     status,\n     tag,\n     query,\n@@ -147,16 +179,15 @@ export default (ctx: Context) => ({\n       first: defaultTo(first, 10),\n       after,\n       orderBy: GQLCOMMENT_SORT.CREATED_AT_DESC,\n-      filter: omitBy(\n-        {\n-          ...queryFilter(query),\n-          ...tagFilter(tag),\n-          storyID,\n-          siteID,\n-          status,\n-        },\n-        isNil\n-      ),\n+      filter: {\n+        ...queryFilter(query),\n+        ...tagFilter(tag),\n+        ...sectionFilter(ctx.tenant, section),\n+        // If these properties are not provided or are null, remove them from\n+        // the filter because they do not exist in a nullable state on the\n+        // database model.\n+        ...requiredPropertyFilter({ storyID, siteID, status }),\n+      },\n     }).then(primeCommentsFromConnection(ctx)),\n   retrieveMyActionPresence: new DataLoader<string, GQLActionPresence>(\n     (commentIDs: string[]) => {"
    },
    {
      "sha": "24e5cc7fb13d7288d020a0422d4248525e6367b3",
      "filename": "src/core/server/graph/loaders/Stories.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/graph/loaders/Stories.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/graph/loaders/Stories.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/loaders/Stories.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -17,6 +17,7 @@ import {\n   findOrCreate,\n   FindOrCreateStory,\n   FindStory,\n+  retrieveSections,\n } from \"coral-server/services/stories\";\n import { scraper } from \"coral-server/services/stories/scraper\";\n \n@@ -185,6 +186,7 @@ export default (ctx: GraphContext) => ({\n       cache: !ctx.disableCaching,\n     }\n   ),\n+  sections: () => retrieveSections(ctx.mongo, ctx.tenant),\n   story: new DataLoader<string, Story | null>(\n     (ids) => retrieveManyStories(ctx.mongo, ctx.tenant.id, ids),\n     {"
    },
    {
      "sha": "9771fe0c5da33821d61b9329fe5085e970f1c0fe",
      "filename": "src/core/server/graph/resolvers/ModerationQueues.ts",
      "status": "modified",
      "additions": 27,
      "deletions": 1,
      "changes": 28,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/graph/resolvers/ModerationQueues.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/graph/resolvers/ModerationQueues.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/resolvers/ModerationQueues.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -5,14 +5,17 @@ import {\n import { FilterQuery } from \"coral-server/models/helpers\";\n import { Site } from \"coral-server/models/site\";\n import { Story } from \"coral-server/models/story\";\n+import { hasFeatureFlag } from \"coral-server/models/tenant\";\n import {\n   PENDING_STATUS,\n   REPORTED_STATUS,\n   UNMODERATED_STATUSES,\n } from \"coral-server/services/comments/moderation/counts\";\n \n import {\n+  GQLFEATURE_FLAG,\n   GQLModerationQueuesTypeResolver,\n+  GQLSectionFilter,\n   QueryToModerationQueuesResolver,\n } from \"coral-server/graph/schema/__generated__/types\";\n \n@@ -21,7 +24,7 @@ import { ModerationQueueInput } from \"./ModerationQueue\";\n \n interface ModerationQueuesInput {\n   connection: Partial<CommentConnectionInput>;\n-  counts: CommentModerationCountsPerQueue;\n+  counts?: CommentModerationCountsPerQueue;\n }\n \n const mergeModerationInputFilters = (\n@@ -80,6 +83,25 @@ export const storyModerationInputResolver = (\n   counts: story.commentCounts.moderationQueue.queues,\n });\n \n+/**\n+ * sectionModerationInputResolver can be used to retrieve the moderationQueue for\n+ * a specific Story.\n+ *\n+ * @param section the section that will be used to base the comment moderation\n+ *              queues on\n+ */\n+export const sectionModerationInputResolver = async (\n+  section: GQLSectionFilter\n+): Promise<ModerationQueuesInput> => ({\n+  connection: {\n+    filter: {\n+      // This moderationQueues is being sourced from the section, so require\n+      // that all the comments for theses queues are also for this section.\n+      section: section.name || null,\n+    },\n+  },\n+});\n+\n /**\n  * sharedModerationInputResolver implements the resolver function style which\n  * allows it to be used in a type resolver.\n@@ -122,6 +144,10 @@ export const moderationQueuesResolver: QueryToModerationQueuesResolver = async (\n     return storyModerationInputResolver(story);\n   }\n \n+  if (args.section && hasFeatureFlag(ctx.tenant, GQLFEATURE_FLAG.SECTIONS)) {\n+    return sectionModerationInputResolver(args.section);\n+  }\n+\n   if (args.siteID) {\n     const site = await ctx.loaders.Sites.site.load(args.siteID);\n     if (!site) {"
    },
    {
      "sha": "96cd160b80a969f83a1d8778c4fc726afb5bb253",
      "filename": "src/core/server/graph/resolvers/Query.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/graph/resolvers/Query.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/graph/resolvers/Query.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/resolvers/Query.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -24,6 +24,7 @@ export const Query: Required<GQLQueryTypeResolver<void>> = {\n   debugScrapeStoryMetadata: (source, { url }, ctx) =>\n     ctx.loaders.Stories.debugScrapeMetadata.load(url),\n   moderationQueues: moderationQueuesResolver,\n+  sections: (source, args, ctx) => ctx.loaders.Stories.sections(),\n   activeStories: (source, { limit = 10 }, ctx) =>\n     ctx.loaders.Stories.activeStories(limit),\n   sites: (source, args, ctx) => ctx.loaders.Sites.connection(args),"
    },
    {
      "sha": "37f58d5cb87ca84a4bfe63a931df90da760c5910",
      "filename": "src/core/server/graph/resolvers/Subscription/commentEnteredModerationQueue.ts",
      "status": "modified",
      "additions": 25,
      "deletions": 1,
      "changes": 26,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/graph/resolvers/Subscription/commentEnteredModerationQueue.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/graph/resolvers/Subscription/commentEnteredModerationQueue.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/resolvers/Subscription/commentEnteredModerationQueue.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -1,4 +1,7 @@\n+import { hasFeatureFlag } from \"coral-server/models/tenant\";\n+\n import {\n+  GQLFEATURE_FLAG,\n   GQLMODERATION_QUEUE,\n   SubscriptionToCommentEnteredModerationQueueResolver,\n } from \"coral-server/graph/schema/__generated__/types\";\n@@ -15,6 +18,8 @@ export interface CommentEnteredModerationQueueInput\n   queue: GQLMODERATION_QUEUE;\n   commentID: string;\n   storyID: string;\n+  siteID: string;\n+  section?: string;\n }\n \n export type CommentEnteredModerationQueueSubscription = SubscriptionType<\n@@ -25,7 +30,7 @@ export type CommentEnteredModerationQueueSubscription = SubscriptionType<\n export const commentEnteredModerationQueue: SubscriptionToCommentEnteredModerationQueueResolver<CommentEnteredModerationQueueInput> = createIterator(\n   SUBSCRIPTION_CHANNELS.COMMENT_ENTERED_MODERATION_QUEUE,\n   {\n-    filter: (source, { storyID, queue }) => {\n+    filter: (source, { storyID, siteID, section, queue }, ctx) => {\n       // If we're filtering by storyID, then only send back comments with the\n       // specific storyID.\n       if (storyID && source.storyID !== storyID) {\n@@ -38,6 +43,25 @@ export const commentEnteredModerationQueue: SubscriptionToCommentEnteredModerati\n         return false;\n       }\n \n+      // If we're filtering by siteID, then only send back comments from the\n+      // specific site.\n+      if (siteID && source.siteID !== siteID) {\n+        return false;\n+      }\n+\n+      // If we're filtering by section, then only send back comments from the\n+      // specific section. If the source has a section, if it's not equal to the\n+      // filter then return false. If the source does not have a section, then\n+      // the filter must also be null/undefined, otherwise return false.\n+      if (\n+        section &&\n+        ((source.section && section.name !== source.section) ||\n+          (!source.section && section.name)) &&\n+        hasFeatureFlag(ctx.tenant, GQLFEATURE_FLAG.SECTIONS)\n+      ) {\n+        return false;\n+      }\n+\n       return true;\n     },\n   }"
    },
    {
      "sha": "323b774468327180f03c57572d1e48da601134fe",
      "filename": "src/core/server/graph/resolvers/Subscription/commentLeftModerationQueue.ts",
      "status": "modified",
      "additions": 25,
      "deletions": 1,
      "changes": 26,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/graph/resolvers/Subscription/commentLeftModerationQueue.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/graph/resolvers/Subscription/commentLeftModerationQueue.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/resolvers/Subscription/commentLeftModerationQueue.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -1,4 +1,7 @@\n+import { hasFeatureFlag } from \"coral-server/models/tenant\";\n+\n import {\n+  GQLFEATURE_FLAG,\n   GQLMODERATION_QUEUE,\n   SubscriptionToCommentLeftModerationQueueResolver,\n } from \"coral-server/graph/schema/__generated__/types\";\n@@ -14,6 +17,8 @@ export interface CommentLeftModerationQueueInput extends SubscriptionPayload {\n   queue: GQLMODERATION_QUEUE;\n   commentID: string;\n   storyID: string;\n+  siteID: string;\n+  section?: string;\n }\n \n export type CommentLeftModerationQueueSubscription = SubscriptionType<\n@@ -24,7 +29,7 @@ export type CommentLeftModerationQueueSubscription = SubscriptionType<\n export const commentLeftModerationQueue: SubscriptionToCommentLeftModerationQueueResolver<CommentLeftModerationQueueInput> = createIterator(\n   SUBSCRIPTION_CHANNELS.COMMENT_LEFT_MODERATION_QUEUE,\n   {\n-    filter: (source, { storyID, queue }) => {\n+    filter: (source, { storyID, siteID, section, queue }, ctx) => {\n       // If we're filtering by storyID, then only send back comments with the\n       // specific storyID.\n       if (storyID && source.storyID !== storyID) {\n@@ -37,6 +42,25 @@ export const commentLeftModerationQueue: SubscriptionToCommentLeftModerationQueu\n         return false;\n       }\n \n+      // If we're filtering by siteID, then only send back comments from the\n+      // specific site.\n+      if (siteID && source.siteID !== siteID) {\n+        return false;\n+      }\n+\n+      // If we're filtering by section, then only send back comments from the\n+      // specific section. If the source has a section, if it's not equal to the\n+      // filter then return false. If the source does not have a section, then\n+      // the filter must also be null/undefined, otherwise return false.\n+      if (\n+        section &&\n+        ((source.section && section.name !== source.section) ||\n+          (!source.section && section.name)) &&\n+        hasFeatureFlag(ctx.tenant, GQLFEATURE_FLAG.SECTIONS)\n+      ) {\n+        return false;\n+      }\n+\n       return true;\n     },\n   }"
    },
    {
      "sha": "062f22dc8fcccd8604456a45683c3a8940c4d8f3",
      "filename": "src/core/server/graph/schema/schema.graphql",
      "status": "modified",
      "additions": 46,
      "deletions": 4,
      "changes": 50,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/graph/schema/schema.graphql",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/graph/schema/schema.graphql",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/schema/schema.graphql?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -91,6 +91,21 @@ Locale represents a language code in the BCP 47 format.\n \"\"\"\n scalar Locale\n \n+################################################################################\n+## Custom Input Types\n+################################################################################\n+\n+input SectionFilter {\n+  \"\"\"\n+  name when provided will filter only those comments/stories that have this\n+  section. When name is not provided or is null, only comments/stories without\n+  a section (uncategorized) will be returned. In order to return all\n+  comments/stories regardless of section, specify null or undefined for this\n+  filter option.\n+  \"\"\"\n+  name: String\n+}\n+\n ################################################################################\n ## Actions\n ################################################################################\n@@ -343,6 +358,12 @@ type ActionPresence {\n ################################################################################\n \n enum FEATURE_FLAG {\n+  \"\"\"\n+  SECTIONS when enabled will allow filtering comments in the moderation queue\n+  by section.\n+  \"\"\"\n+  SECTIONS\n+\n   \"\"\"\n   DISABLE_WARN_USER_OF_TOXIC_COMMENT when enabled will turn off warnings for\n   toxic comments.\n@@ -3150,6 +3171,7 @@ type Query {\n     storyID: ID\n     siteID: ID\n     status: COMMENT_STATUS\n+    section: SectionFilter\n     tag: TAG\n     query: String\n   ): CommentsConnection! @auth(roles: [ADMIN, MODERATOR])\n@@ -3236,8 +3258,16 @@ type Query {\n   moderationQueues returns the set of ModerationQueues that are available for\n   all stories or if given the story identified by the `storyID`.\n   \"\"\"\n-  moderationQueues(storyID: ID, siteID: ID): ModerationQueues!\n-    @auth(roles: [ADMIN, MODERATOR])\n+  moderationQueues(\n+    storyID: ID\n+    siteID: ID\n+    section: SectionFilter\n+  ): ModerationQueues! @auth(roles: [ADMIN, MODERATOR])\n+\n+  \"\"\"\n+  sections will return the unique sections used by this Tenant.\n+  \"\"\"\n+  sections: [String!] @auth(roles: [ADMIN, MODERATOR])\n \n   \"\"\"\n   activeStories is the list of most recently commented on stories identified\n@@ -4888,7 +4918,11 @@ type ApproveCommentPayload {\n   is provided, it will filter the moderation queues for only comments in that\n   Story.\n   \"\"\"\n-  moderationQueues(storyID: ID): ModerationQueues\n+  moderationQueues(\n+    storyID: ID\n+    siteID: ID\n+    section: SectionFilter\n+  ): ModerationQueues\n \n   \"\"\"\n   clientMutationId is required for Relay support.\n@@ -4928,7 +4962,11 @@ type RejectCommentPayload {\n   is provided, it will filter the moderation queues for only comments in that\n   Story.\n   \"\"\"\n-  moderationQueues(storyID: ID): ModerationQueues\n+  moderationQueues(\n+    storyID: ID\n+    siteID: ID\n+    section: SectionFilter\n+  ): ModerationQueues\n \n   \"\"\"\n   clientMutationId is required for Relay support.\n@@ -7281,6 +7319,8 @@ type Subscription {\n   \"\"\"\n   commentEnteredModerationQueue(\n     storyID: ID\n+    siteID: ID\n+    section: SectionFilter\n     queue: MODERATION_QUEUE\n   ): CommentEnteredModerationQueuePayload! @auth(roles: [MODERATOR, ADMIN])\n \n@@ -7290,6 +7330,8 @@ type Subscription {\n   \"\"\"\n   commentLeftModerationQueue(\n     storyID: ID\n+    siteID: ID\n+    section: SectionFilter\n     queue: MODERATION_QUEUE\n   ): CommentLeftModerationQueuePayload! @auth(roles: [MODERATOR, ADMIN])\n "
    },
    {
      "sha": "81c28d80bcff113869b8112ba8be8f5f07ca7e97",
      "filename": "src/core/server/models/comment/comment.ts",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/models/comment/comment.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/models/comment/comment.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/models/comment/comment.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -80,6 +80,13 @@ export interface Comment extends TenantResource {\n    */\n   siteID: string;\n \n+  /**\n+   * section is the section of the story that this comment was left on. If the\n+   * section was not available when the comment was authored, the section will\n+   * be null here.\n+   */\n+  section?: string;\n+\n   /**\n    * revisions stores all the revisions of the Comment body including the most\n    * recent revision, the last revision is the most recent."
    },
    {
      "sha": "d7b73e557af35d7482462f522f116820bd461c31",
      "filename": "src/core/server/models/story/index.ts",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/models/story/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/models/story/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/models/story/index.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -661,3 +661,23 @@ export async function setStoryMode(\n \n   return result.value || null;\n }\n+\n+/**\n+ * retrieveStorySections will return the sections used by stories in the\n+ * database for a given Tenant sorted alphabetically.\n+ *\n+ * @param mongo the database connection to use to retrieve the data\n+ * @param tenantID the ID of the Tenant that we're retrieving data\n+ */\n+export async function retrieveStorySections(\n+  mongo: Db,\n+  tenantID: string\n+): Promise<string[]> {\n+  const results: Array<string | null> = await collection(\n+    mongo\n+  ).distinct(\"metadata.section\", { tenantID });\n+\n+  // We perform the type assertion here because we know that after filtering out\n+  // the null entries, the resulting array can not contain null.\n+  return results.filter((section) => section !== null).sort() as string[];\n+}"
    },
    {
      "sha": "192e9ed7bca7011fd635a2ce9904e890c9a7a4ff",
      "filename": "src/core/server/services/events/comments.ts",
      "status": "modified",
      "additions": 13,
      "deletions": 1,
      "changes": 14,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/services/events/comments.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/services/events/comments.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/events/comments.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -90,45 +90,57 @@ export async function publishCommentFeatured(\n export async function publishModerationQueueChanges(\n   broker: CoralEventPublisherBroker,\n   moderationQueue: Pick<CommentModerationQueueCounts, \"queues\">,\n-  comment: Pick<Comment, \"id\" | \"storyID\">\n+  comment: Pick<Comment, \"id\" | \"storyID\" | \"siteID\" | \"section\">\n ) {\n   if (moderationQueue.queues.pending === 1) {\n     await CommentEnteredModerationQueueCoralEvent.publish(broker, {\n       queue: GQLMODERATION_QUEUE.PENDING,\n       commentID: comment.id,\n       storyID: comment.storyID,\n+      siteID: comment.siteID,\n+      section: comment.section,\n     });\n   } else if (moderationQueue.queues.pending === -1) {\n     await CommentLeftModerationQueueCoralEvent.publish(broker, {\n       queue: GQLMODERATION_QUEUE.PENDING,\n       commentID: comment.id,\n       storyID: comment.storyID,\n+      siteID: comment.siteID,\n+      section: comment.section,\n     });\n   }\n   if (moderationQueue.queues.reported === 1) {\n     await CommentEnteredModerationQueueCoralEvent.publish(broker, {\n       queue: GQLMODERATION_QUEUE.REPORTED,\n       commentID: comment.id,\n       storyID: comment.storyID,\n+      siteID: comment.siteID,\n+      section: comment.section,\n     });\n   } else if (moderationQueue.queues.reported === -1) {\n     await CommentLeftModerationQueueCoralEvent.publish(broker, {\n       queue: GQLMODERATION_QUEUE.REPORTED,\n       commentID: comment.id,\n       storyID: comment.storyID,\n+      siteID: comment.siteID,\n+      section: comment.section,\n     });\n   }\n   if (moderationQueue.queues.unmoderated === 1) {\n     await CommentEnteredModerationQueueCoralEvent.publish(broker, {\n       queue: GQLMODERATION_QUEUE.UNMODERATED,\n       commentID: comment.id,\n       storyID: comment.storyID,\n+      siteID: comment.siteID,\n+      section: comment.section,\n     });\n   } else if (moderationQueue.queues.unmoderated === -1) {\n     await CommentLeftModerationQueueCoralEvent.publish(broker, {\n       queue: GQLMODERATION_QUEUE.UNMODERATED,\n       commentID: comment.id,\n       storyID: comment.storyID,\n+      siteID: comment.siteID,\n+      section: comment.section,\n     });\n   }\n }"
    },
    {
      "sha": "3ed6ca62f0fd0ff2f4a4e4f546ca95bed7eea399",
      "filename": "src/core/server/services/stories/index.ts",
      "status": "modified",
      "additions": 14,
      "deletions": 2,
      "changes": 16,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/services/stories/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/services/stories/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/stories/index.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -34,6 +34,7 @@ import {\n   removeStory,\n   retrieveManyStories,\n   retrieveStory,\n+  retrieveStorySections,\n   setStoryMode,\n   Story,\n   updateStory,\n@@ -42,13 +43,16 @@ import {\n   updateStorySettings,\n   UpdateStorySettingsInput,\n } from \"coral-server/models/story\";\n-import { Tenant } from \"coral-server/models/tenant\";\n+import { hasFeatureFlag, Tenant } from \"coral-server/models/tenant\";\n import { retrieveUser } from \"coral-server/models/user\";\n import { ScraperQueue } from \"coral-server/queue/tasks/scraper\";\n import { findSiteByURL } from \"coral-server/services/sites\";\n import { scrape } from \"coral-server/services/stories/scraper\";\n \n-import { GQLSTORY_MODE } from \"coral-server/graph/schema/__generated__/types\";\n+import {\n+  GQLFEATURE_FLAG,\n+  GQLSTORY_MODE,\n+} from \"coral-server/graph/schema/__generated__/types\";\n \n export type FindStory = FindStoryInput;\n \n@@ -412,3 +416,11 @@ export async function updateStoryMode(\n ) {\n   return setStoryMode(mongo, tenant.id, storyID, mode);\n }\n+\n+export async function retrieveSections(mongo: Db, tenant: Tenant) {\n+  if (!hasFeatureFlag(tenant, GQLFEATURE_FLAG.SECTIONS)) {\n+    return null;\n+  }\n+\n+  return retrieveStorySections(mongo, tenant.id);\n+}"
    },
    {
      "sha": "048cb3e6e9f31c995c3e0b58d1159aa08d5354a4",
      "filename": "src/core/server/stacks/createComment.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/stacks/createComment.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/core/server/stacks/createComment.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/stacks/createComment.ts?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -222,6 +222,8 @@ export default async function create(\n     {\n       ...input,\n       siteID: story.siteID,\n+      // Copy the current story section into the comment if it exists.\n+      section: story.metadata?.section,\n       // Remap the tags to include the createdAt.\n       tags: tags.map((tag) => ({ type: tag, createdAt: now })),\n       body,"
    },
    {
      "sha": "17796209d4e23dcef63467dce4099f73ea5342a5",
      "filename": "src/locales/en-US/admin.ftl",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/locales/en-US/admin.ftl",
      "raw_url": "https://github.com/coralproject/talk/raw/ba08447d5e5b5eb08d1fd222976179a4149ad338/src/locales/en-US/admin.ftl",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/locales/en-US/admin.ftl?ref=ba08447d5e5b5eb08d1fd222976179a4149ad338",
      "patch": "@@ -475,6 +475,12 @@ stories-column-site = Site\n site-table-siteName = Site name\n stories-filter-sites = Site\n \n+### Sections\n+\n+moderate-section-selector-allSections = All Sections\n+moderate-section-selector-uncategorized = Uncategorized\n+moderate-section-uncategorized = Uncategorized\n+\n ### Email\n \n configure-email = Email settings"
    }
  ]
}
