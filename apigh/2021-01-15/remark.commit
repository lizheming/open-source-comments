{
  "sha": "aff79a6fa903cc5df817af67050948a604d5988d",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOmFmZjc5YTZmYTkwM2NjNWRmODE3YWY2NzA1MDk0OGE2MDRkNTk4OGQ=",
  "commit": {
    "author": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2021-01-14T19:06:29Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2021-01-14T19:06:29Z"
    },
    "message": "Same site (#850)\n\n* switch to auth master for same-site\r\n\r\n* add same-site policy support #784\r\n\r\n* add parse same site param",
    "tree": {
      "sha": "a0dbf1e4bd5fa0ed285108016ea229aa7af3d596",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/a0dbf1e4bd5fa0ed285108016ea229aa7af3d596"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/aff79a6fa903cc5df817af67050948a604d5988d",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgAJY1CRBK7hj4Ov3rIwAAdHIIAFQRA1Wm8eU3A36zfMjaocEs\nHxGOuNRtHqHfZCfaUJ7XAg4VrZykJRjhIjd8QNQB5NuUakHRC9dwswKETp2fvFYT\nrxPlDQFNaxlWLJFMN8Z8m2/7UwMizqmK9Mm9UkKcNeaOV+T/mygPefGdNTVchm4T\nglZyWW/kVLi+tBxjHxATVtuBaY/JNBQ4JGv3Plqnplrjs/F9bGz3JEwKQlI2YqBy\nVnfKoZc+KZzwTRyORFJCIhGYF1lU3dDd26RxiVbuhEaQycNY2VqiKNCnmDJbzTNg\nkJ8Bs8WGEedy0m82MQKCdwYW25LeAIOk8ReL8IpsCYerQmyerOybQ9bkkDDLzwE=\n=K1Q5\n-----END PGP SIGNATURE-----\n",
      "payload": "tree a0dbf1e4bd5fa0ed285108016ea229aa7af3d596\nparent 7f7973a78fac708cafb2733e3a019e4454bd2c28\nauthor Umputun <umputun@gmail.com> 1610651189 -0600\ncommitter GitHub <noreply@github.com> 1610651189 -0600\n\nSame site (#850)\n\n* switch to auth master for same-site\r\n\r\n* add same-site policy support #784\r\n\r\n* add parse same site param"
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/aff79a6fa903cc5df817af67050948a604d5988d",
  "html_url": "https://github.com/umputun/remark42/commit/aff79a6fa903cc5df817af67050948a604d5988d",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/aff79a6fa903cc5df817af67050948a604d5988d/comments",
  "author": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7f7973a78fac708cafb2733e3a019e4454bd2c28",
      "url": "https://api.github.com/repos/umputun/remark42/commits/7f7973a78fac708cafb2733e3a019e4454bd2c28",
      "html_url": "https://github.com/umputun/remark42/commit/7f7973a78fac708cafb2733e3a019e4454bd2c28"
    }
  ],
  "stats": {
    "total": 80,
    "additions": 64,
    "deletions": 16
  },
  "files": [
    {
      "sha": "1ae588c61057879451e9fdcfbf27aec976943d87",
      "filename": "README.md",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/aff79a6fa903cc5df817af67050948a604d5988d/README.md",
      "raw_url": "https://github.com/umputun/remark42/raw/aff79a6fa903cc5df817af67050948a604d5988d/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/README.md?ref=aff79a6fa903cc5df817af67050948a604d5988d",
      "patch": "@@ -134,6 +134,8 @@ _this is the recommended way to run remark42_\n | image.resize-height     | IMAGE_RESIZE_HEIGHT     | `900`                    | height of resized image                         |\n | auth.ttl.jwt            | AUTH_TTL_JWT            | `5m`                     | jwt TTL                                         |\n | auth.ttl.cookie         | AUTH_TTL_COOKIE         | `200h`                   | cookie TTL                                      |\n+| auth.send-jwt-header    | AUTH_SEND_JWT_HEADER    | `false`                  | send JWT as a header instead of cookie          |\n+| auth.same-site          | AUTH_SAME_SITE          | `default`                | set same site policy for cookies (`default`, `none`, `lax` or `strict`)|\n | auth.google.cid         | AUTH_GOOGLE_CID         |                          | Google OAuth client ID                          |\n | auth.google.csec        | AUTH_GOOGLE_CSEC        |                          | Google OAuth client secret                      |\n | auth.facebook.cid       | AUTH_FACEBOOK_CID       |                          | Facebook OAuth client ID                        |"
    },
    {
      "sha": "aad76e28a0e0c6b09b7b84b0d9a35057c1900c0f",
      "filename": "backend/app/cmd/server.go",
      "status": "modified",
      "additions": 24,
      "deletions": 5,
      "changes": 29,
      "blob_url": "https://github.com/umputun/remark42/blob/aff79a6fa903cc5df817af67050948a604d5988d/backend/app/cmd/server.go",
      "raw_url": "https://github.com/umputun/remark42/raw/aff79a6fa903cc5df817af67050948a604d5988d/backend/app/cmd/server.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/cmd/server.go?ref=aff79a6fa903cc5df817af67050948a604d5988d",
      "patch": "@@ -79,10 +79,13 @@ type ServerCommand struct {\n \n \tAuth struct {\n \t\tTTL struct {\n-\t\t\tJWT           time.Duration `long:\"jwt\" env:\"JWT\" default:\"5m\" description:\"jwt TTL\"`\n-\t\t\tSendJWTHeader bool          `long:\"send-jwt-header\" env:\"SEND_JWT_HEADER\" description:\"send JWT as a header instead of cookie\"`\n-\t\t\tCookie        time.Duration `long:\"cookie\" env:\"COOKIE\" default:\"200h\" description:\"auth cookie TTL\"`\n+\t\t\tJWT    time.Duration `long:\"jwt\" env:\"JWT\" default:\"5m\" description:\"jwt TTL\"`\n+\t\t\tCookie time.Duration `long:\"cookie\" env:\"COOKIE\" default:\"200h\" description:\"auth cookie TTL\"`\n \t\t} `group:\"ttl\" namespace:\"ttl\" env-namespace:\"TTL\"`\n+\n+\t\tSendJWTHeader bool   `long:\"send-jwt-header\" env:\"SEND_JWT_HEADER\" description:\"send JWT as a header instead of cookie\"`\n+\t\tSameSite      string `long:\"same-site\" env:\"SAME_SITE\" description:\"set same site policy for cookies\" choice:\"default\" choice:\"none\" choice:\"lax\" choice:\"strict\" default:\"default\"` // nolint\n+\n \t\tGoogle    AuthGroup `group:\"google\" namespace:\"google\" env-namespace:\"GOOGLE\" description:\"Google OAuth\"`\n \t\tGithub    AuthGroup `group:\"github\" namespace:\"github\" env-namespace:\"GITHUB\" description:\"Github OAuth\"`\n \t\tFacebook  AuthGroup `group:\"facebook\" namespace:\"facebook\" env-namespace:\"FACEBOOK\" description:\"Facebook OAuth\"`\n@@ -445,7 +448,7 @@ func (s *ServerCommand) newServerApp() (*serverApp, error) {\n \t\tSimpleView:         s.SimpleView,\n \t\tProxyCORS:          s.ProxyCORS,\n \t\tAllowedAncestors:   s.AllowedHosts,\n-\t\tSendJWTHeader:      s.Auth.TTL.SendJWTHeader,\n+\t\tSendJWTHeader:      s.Auth.SendJWTHeader,\n \t}\n \n \tsrv.ScoreThresholds.Low, srv.ScoreThresholds.Critical = s.LowScore, s.CriticalScore\n@@ -899,8 +902,9 @@ func (s *ServerCommand) makeAuthenticator(ds *service.DataStore, avas avatar.Sto\n \t\tURL:            strings.TrimSuffix(s.RemarkURL, \"/\"),\n \t\tIssuer:         \"remark42\",\n \t\tTokenDuration:  s.Auth.TTL.JWT,\n-\t\tSendJWTHeader:  s.Auth.TTL.SendJWTHeader,\n \t\tCookieDuration: s.Auth.TTL.Cookie,\n+\t\tSendJWTHeader:  s.Auth.SendJWTHeader,\n+\t\tSameSiteCookie: s.parseSameSite(s.Auth.SameSite),\n \t\tSecureCookies:  strings.HasPrefix(s.RemarkURL, \"https://\"),\n \t\tSecretReader: token.SecretFunc(func(aud string) (string, error) { // get secret per site\n \t\t\treturn admns.Key()\n@@ -960,6 +964,21 @@ func (s *ServerCommand) makeAuthenticator(ds *service.DataStore, avas avatar.Sto\n \treturn authenticator, nil\n }\n \n+func (s *ServerCommand) parseSameSite(ss string) http.SameSite {\n+\tswitch strings.ToLower(ss) {\n+\tcase \"default\":\n+\t\treturn http.SameSiteDefaultMode\n+\tcase \"none\":\n+\t\treturn http.SameSiteNoneMode\n+\tcase \"lax\":\n+\t\treturn http.SameSiteLaxMode\n+\tcase \"strict\":\n+\t\treturn http.SameSiteStrictMode\n+\tdefault:\n+\t\treturn http.SameSiteDefaultMode\n+\t}\n+}\n+\n // authRefreshCache used by authenticator to minimize repeatable token refreshes\n type authRefreshCache struct {\n \tcache.LoadingCache"
    },
    {
      "sha": "d425a2519566fa7acb3cdcc24237db9941f1424b",
      "filename": "backend/app/cmd/server_test.go",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark42/blob/aff79a6fa903cc5df817af67050948a604d5988d/backend/app/cmd/server_test.go",
      "raw_url": "https://github.com/umputun/remark42/raw/aff79a6fa903cc5df817af67050948a604d5988d/backend/app/cmd/server_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/cmd/server_test.go?ref=aff79a6fa903cc5df817af67050948a604d5988d",
      "patch": "@@ -586,6 +586,29 @@ func TestServer_loadEmailTemplate(t *testing.T) {\n \tassert.Equal(t, r, \"\")\n }\n \n+func TestServerCommand_parseSameSite(t *testing.T) {\n+\n+\ttbl := []struct {\n+\t\tinp string\n+\t\tres http.SameSite\n+\t}{\n+\t\t{\"\", http.SameSiteDefaultMode},\n+\t\t{\"default\", http.SameSiteDefaultMode},\n+\t\t{\"blah\", http.SameSiteDefaultMode},\n+\t\t{\"none\", http.SameSiteNoneMode},\n+\t\t{\"lax\", http.SameSiteLaxMode},\n+\t\t{\"strict\", http.SameSiteStrictMode},\n+\t}\n+\n+\tcmd := ServerCommand{}\n+\tfor i, tt := range tbl {\n+\t\ttt := tt\n+\t\tt.Run(strconv.Itoa(i), func(t *testing.T) {\n+\t\t\tassert.Equal(t, tt.res, cmd.parseSameSite(tt.inp))\n+\t\t})\n+\t}\n+}\n+\n func chooseRandomUnusedPort() (port int) {\n \tfor i := 0; i < 10; i++ {\n \t\tport = 40000 + int(rand.Int31n(10000))"
    },
    {
      "sha": "ab4ca8400367a9b103971681730217c32dbaa852",
      "filename": "backend/go.mod",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/aff79a6fa903cc5df817af67050948a604d5988d/backend/go.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/aff79a6fa903cc5df817af67050948a604d5988d/backend/go.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/go.mod?ref=aff79a6fa903cc5df817af67050948a604d5988d",
      "patch": "@@ -12,7 +12,7 @@ require (\n \tgithub.com/go-chi/chi v4.1.1+incompatible\n \tgithub.com/go-chi/cors v1.1.1\n \tgithub.com/go-chi/render v1.0.1\n-\tgithub.com/go-pkgz/auth v1.13.1\n+\tgithub.com/go-pkgz/auth v1.13.2-0.20210114092942-d2b22c3f3881\n \tgithub.com/go-pkgz/jrpc v0.2.0\n \tgithub.com/go-pkgz/lcw v0.8.1\n \tgithub.com/go-pkgz/lgr v0.10.4"
    },
    {
      "sha": "fd8fdedcabe907646bb09caab555c65e8d31796c",
      "filename": "backend/go.sum",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/aff79a6fa903cc5df817af67050948a604d5988d/backend/go.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/aff79a6fa903cc5df817af67050948a604d5988d/backend/go.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/go.sum?ref=aff79a6fa903cc5df817af67050948a604d5988d",
      "patch": "@@ -60,6 +60,8 @@ github.com/go-chi/render v1.0.1 h1:4/5tis2cKaNdnv9zFLfXzcquC9HbeZgCnxGnKrltBS8=\n github.com/go-chi/render v1.0.1/go.mod h1:pq4Rr7HbnsdaeHagklXub+p6Wd16Af5l9koip1OvJns=\n github.com/go-pkgz/auth v1.13.1 h1:+N9f2fSbvczMzOEaiGSxz1018JtvIaVM017GbmF7dF4=\n github.com/go-pkgz/auth v1.13.1/go.mod h1:1GVd61pXZcuJ0ZnOUdCTY08V8SreO7MJtsvEd5/WEWA=\n+github.com/go-pkgz/auth v1.13.2-0.20210114092942-d2b22c3f3881 h1:BlRK66nY8N7xkV51kQ0XEQD3No4Txk6QGedza5uaaGI=\n+github.com/go-pkgz/auth v1.13.2-0.20210114092942-d2b22c3f3881/go.mod h1:1GVd61pXZcuJ0ZnOUdCTY08V8SreO7MJtsvEd5/WEWA=\n github.com/go-pkgz/expirable-cache v0.0.3 h1:rTh6qNPp78z0bQE6HDhXBHUwqnV9i09Vm6dksJLXQDc=\n github.com/go-pkgz/expirable-cache v0.0.3/go.mod h1:+IauqN00R2FqNRLCLA+X5YljQJrwB179PfiAoMPlTlQ=\n github.com/go-pkgz/jrpc v0.2.0 h1:CLy/eZyekjraVrxZV18N2R1mYLMJ/nWrgdfyIOGPY/E="
    },
    {
      "sha": "6e0b16d182df1e6ed67e64227f3b6650da478ae4",
      "filename": "backend/vendor/github.com/go-pkgz/auth/auth.go",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/aff79a6fa903cc5df817af67050948a604d5988d/backend/vendor/github.com/go-pkgz/auth/auth.go",
      "raw_url": "https://github.com/umputun/remark42/raw/aff79a6fa903cc5df817af67050948a604d5988d/backend/vendor/github.com/go-pkgz/auth/auth.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-pkgz/auth/auth.go?ref=aff79a6fa903cc5df817af67050948a604d5988d",
      "patch": "@@ -53,7 +53,8 @@ type Opts struct {\n \tXSRFHeaderKey  string // default \"X-XSRF-TOKEN\"\n \tJWTQuery       string // default \"token\"\n \n-\tSendJWTHeader bool // if enabled send JWT as a header instead of cookie\n+\tSendJWTHeader  bool          // if enabled send JWT as a header instead of cookie\n+\tSameSiteCookie http.SameSite // limit cross-origin requests with SameSite cookie attribute\n \n \tIssuer string // optional value for iss claim, usually the application name, default \"go-pkgz/auth\"\n "
    },
    {
      "sha": "8e0cd3e4ec53d915fd9f17c922914eb54f6bbe65",
      "filename": "backend/vendor/github.com/go-pkgz/auth/token/jwt.go",
      "status": "modified",
      "additions": 9,
      "deletions": 8,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/aff79a6fa903cc5df817af67050948a604d5988d/backend/vendor/github.com/go-pkgz/auth/token/jwt.go",
      "raw_url": "https://github.com/umputun/remark42/raw/aff79a6fa903cc5df817af67050948a604d5988d/backend/vendor/github.com/go-pkgz/auth/token/jwt.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/github.com/go-pkgz/auth/token/jwt.go?ref=aff79a6fa903cc5df817af67050948a604d5988d",
      "patch": "@@ -63,10 +63,11 @@ type Opts struct {\n \tXSRFCookieName string\n \tXSRFHeaderKey  string\n \tJWTQuery       string\n-\tAudienceReader Audience // allowed aud values\n-\tIssuer         string   // optional value for iss claim, usually application name\n-\tAudSecrets     bool     // uses different secret for differed auds. important: adds pre-parsing of unverified token\n-\tSendJWTHeader  bool     // if enabled send JWT as a header instead of cookie\n+\tAudienceReader Audience      // allowed aud values\n+\tIssuer         string        // optional value for iss claim, usually application name\n+\tAudSecrets     bool          // uses different secret for differed auds. important: adds pre-parsing of unverified token\n+\tSendJWTHeader  bool          // if enabled send JWT as a header instead of cookie\n+\tSameSite       http.SameSite // define a cookie attribute making it impossible for the browser to send this cookie cross-site\n }\n \n // NewService makes JWT service\n@@ -238,11 +239,11 @@ func (j *Service) Set(w http.ResponseWriter, claims Claims) (Claims, error) {\n \t}\n \n \tjwtCookie := http.Cookie{Name: j.JWTCookieName, Value: tokenString, HttpOnly: true, Path: \"/\",\n-\t\tMaxAge: cookieExpiration, Secure: j.SecureCookies}\n+\t\tMaxAge: cookieExpiration, Secure: j.SecureCookies, SameSite: j.SameSite}\n \thttp.SetCookie(w, &jwtCookie)\n \n \txsrfCookie := http.Cookie{Name: j.XSRFCookieName, Value: claims.Id, HttpOnly: false, Path: \"/\",\n-\t\tMaxAge: cookieExpiration, Secure: j.SecureCookies}\n+\t\tMaxAge: cookieExpiration, Secure: j.SecureCookies, SameSite: j.SameSite}\n \thttp.SetCookie(w, &xsrfCookie)\n \n \treturn claims, nil\n@@ -311,11 +312,11 @@ func (j *Service) IsExpired(claims Claims) bool {\n // Reset token's cookies\n func (j *Service) Reset(w http.ResponseWriter) {\n \tjwtCookie := http.Cookie{Name: j.JWTCookieName, Value: \"\", HttpOnly: false, Path: \"/\",\n-\t\tMaxAge: -1, Expires: time.Unix(0, 0), Secure: j.SecureCookies}\n+\t\tMaxAge: -1, Expires: time.Unix(0, 0), Secure: j.SecureCookies, SameSite: j.SameSite}\n \thttp.SetCookie(w, &jwtCookie)\n \n \txsrfCookie := http.Cookie{Name: j.XSRFCookieName, Value: \"\", HttpOnly: false, Path: \"/\",\n-\t\tMaxAge: -1, Expires: time.Unix(0, 0), Secure: j.SecureCookies}\n+\t\tMaxAge: -1, Expires: time.Unix(0, 0), Secure: j.SecureCookies, SameSite: j.SameSite}\n \thttp.SetCookie(w, &xsrfCookie)\n }\n "
    },
    {
      "sha": "632c4371b14ffd140ec2019bade01573db9cf89f",
      "filename": "backend/vendor/modules.txt",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/aff79a6fa903cc5df817af67050948a604d5988d/backend/vendor/modules.txt",
      "raw_url": "https://github.com/umputun/remark42/raw/aff79a6fa903cc5df817af67050948a604d5988d/backend/vendor/modules.txt",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/vendor/modules.txt?ref=aff79a6fa903cc5df817af67050948a604d5988d",
      "patch": "@@ -90,7 +90,7 @@ github.com/go-chi/cors\n # github.com/go-chi/render v1.0.1\n ## explicit\n github.com/go-chi/render\n-# github.com/go-pkgz/auth v1.13.1\n+# github.com/go-pkgz/auth v1.13.2-0.20210114092942-d2b22c3f3881\n ## explicit\n github.com/go-pkgz/auth\n github.com/go-pkgz/auth/avatar"
    }
  ]
}
