{
  "sha": "9e4ed03b8fad4ef38f8b4dd55e604151cb9558d4",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODo5ZTRlZDAzYjhmYWQ0ZWYzOGY4YjRkZDU1ZTYwNDE1MWNiOTU1OGQ0",
  "commit": {
    "author": {
      "name": "Vinoth Kannan",
      "email": "svkn.87@gmail.com",
      "date": "2020-09-11T02:50:13Z"
    },
    "committer": {
      "name": "Vinoth Kannan",
      "email": "svkn.87@gmail.com",
      "date": "2020-09-11T02:50:13Z"
    },
    "message": "FEATURE: moderators allowed to view groups which members can see.\n\nCurrently, if a group's visibility is set to \"Group owners, members\" then the mods can't view those group pages. The same rule is applied for members visibility setting too.\n\nThis reverts commit 7fc7090. And fixed the spec test fails.",
    "tree": {
      "sha": "97b038a1af9b385c6dd467c6f9a714a69228b515",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/97b038a1af9b385c6dd467c6f9a714a69228b515"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/9e4ed03b8fad4ef38f8b4dd55e604151cb9558d4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/9e4ed03b8fad4ef38f8b4dd55e604151cb9558d4",
  "html_url": "https://github.com/discourse/discourse/commit/9e4ed03b8fad4ef38f8b4dd55e604151cb9558d4",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/9e4ed03b8fad4ef38f8b4dd55e604151cb9558d4/comments",
  "author": {
    "login": "vinothkannans",
    "id": 9372109,
    "node_id": "MDQ6VXNlcjkzNzIxMDk=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/9372109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vinothkannans",
    "html_url": "https://github.com/vinothkannans",
    "followers_url": "https://api.github.com/users/vinothkannans/followers",
    "following_url": "https://api.github.com/users/vinothkannans/following{/other_user}",
    "gists_url": "https://api.github.com/users/vinothkannans/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vinothkannans/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vinothkannans/subscriptions",
    "organizations_url": "https://api.github.com/users/vinothkannans/orgs",
    "repos_url": "https://api.github.com/users/vinothkannans/repos",
    "events_url": "https://api.github.com/users/vinothkannans/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vinothkannans/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vinothkannans",
    "id": 9372109,
    "node_id": "MDQ6VXNlcjkzNzIxMDk=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/9372109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vinothkannans",
    "html_url": "https://github.com/vinothkannans",
    "followers_url": "https://api.github.com/users/vinothkannans/followers",
    "following_url": "https://api.github.com/users/vinothkannans/following{/other_user}",
    "gists_url": "https://api.github.com/users/vinothkannans/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vinothkannans/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vinothkannans/subscriptions",
    "organizations_url": "https://api.github.com/users/vinothkannans/orgs",
    "repos_url": "https://api.github.com/users/vinothkannans/repos",
    "events_url": "https://api.github.com/users/vinothkannans/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vinothkannans/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "245d29e5a3d3f7f1d1e88cc1ab93967ba302dad2",
      "url": "https://api.github.com/repos/discourse/discourse/commits/245d29e5a3d3f7f1d1e88cc1ab93967ba302dad2",
      "html_url": "https://github.com/discourse/discourse/commit/245d29e5a3d3f7f1d1e88cc1ab93967ba302dad2"
    }
  ],
  "stats": {
    "total": 140,
    "additions": 63,
    "deletions": 77
  },
  "files": [
    {
      "sha": "610e570194c572495309b46296772af2d6b1f5ed",
      "filename": "app/models/group.rb",
      "status": "modified",
      "additions": 58,
      "deletions": 72,
      "changes": 130,
      "blob_url": "https://github.com/discourse/discourse/blob/9e4ed03b8fad4ef38f8b4dd55e604151cb9558d4/app/models/group.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/9e4ed03b8fad4ef38f8b4dd55e604151cb9558d4/app/models/group.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/group.rb?ref=9e4ed03b8fad4ef38f8b4dd55e604151cb9558d4",
      "patch": "@@ -121,44 +121,37 @@ def self.visibility_levels\n     end\n \n     if !user&.admin\n-      sql = <<~SQL\n-        groups.id IN (\n-          SELECT id\n-            FROM groups\n-           WHERE visibility_level = :public\n-\n-          UNION ALL\n-\n-          SELECT id\n-            FROM groups\n-           WHERE visibility_level = :logged_on_users\n-             AND :user_id IS NOT NULL\n-\n-          UNION ALL\n-\n-          SELECT g.id\n-            FROM groups g\n-            JOIN group_users gu ON gu.group_id = g.id AND gu.user_id = :user_id\n-           WHERE g.visibility_level = :members\n-\n-          UNION ALL\n+      is_staff = !!user&.staff?\n \n-          SELECT g.id\n-            FROM groups g\n-       LEFT JOIN group_users gu ON gu.group_id = g.id AND gu.user_id = :user_id AND gu.owner\n-           WHERE g.visibility_level = :staff\n-             AND (gu.id IS NOT NULL OR :is_staff)\n-\n-          UNION ALL\n-\n-          SELECT g.id\n-            FROM groups g\n-            JOIN group_users gu ON gu.group_id = g.id AND gu.user_id = :user_id AND gu.owner\n-           WHERE g.visibility_level = :owners\n-        )\n-      SQL\n+      if user.blank?\n+        sql = \"groups.visibility_level = :public\"\n+      elsif is_staff\n+        sql = \"groups.visibility_level IN (:public, :logged_on_users, :members, :staff)\"\n+      else\n+        sql = <<~SQL\n+          groups.id IN (\n+            SELECT id\n+              FROM groups\n+            WHERE visibility_level IN (:public, :logged_on_users)\n+\n+            UNION ALL\n+\n+            SELECT g.id\n+              FROM groups g\n+              JOIN group_users gu ON gu.group_id = g.id AND gu.user_id = :user_id\n+            WHERE g.visibility_level = :members\n+\n+            UNION ALL\n+\n+            SELECT g.id\n+              FROM groups g\n+              JOIN group_users gu ON gu.group_id = g.id AND gu.user_id = :user_id AND gu.owner\n+            WHERE g.visibility_level IN (:staff, :owners)\n+          )\n+        SQL\n+      end\n \n-      params = Group.visibility_levels.to_h.merge(user_id: user&.id, is_staff: !!user&.staff?)\n+      params = Group.visibility_levels.to_h.merge(user_id: user&.id, is_staff: is_staff)\n       groups = groups.where(sql, params)\n     end\n \n@@ -173,44 +166,37 @@ def self.visibility_levels\n     end\n \n     if !user&.admin\n-      sql = <<~SQL\n-        groups.id IN (\n-          SELECT id\n-            FROM groups\n-           WHERE members_visibility_level = :public\n-\n-          UNION ALL\n-\n-          SELECT id\n-            FROM groups\n-           WHERE members_visibility_level = :logged_on_users\n-             AND :user_id IS NOT NULL\n-\n-          UNION ALL\n-\n-          SELECT g.id\n-            FROM groups g\n-            JOIN group_users gu ON gu.group_id = g.id AND gu.user_id = :user_id\n-           WHERE g.members_visibility_level = :members\n-\n-          UNION ALL\n+      is_staff = !!user&.staff?\n \n-          SELECT g.id\n-            FROM groups g\n-       LEFT JOIN group_users gu ON gu.group_id = g.id AND gu.user_id = :user_id AND gu.owner\n-           WHERE g.members_visibility_level = :staff\n-             AND (gu.id IS NOT NULL OR :is_staff)\n-\n-          UNION ALL\n-\n-          SELECT g.id\n-            FROM groups g\n-            JOIN group_users gu ON gu.group_id = g.id AND gu.user_id = :user_id AND gu.owner\n-           WHERE g.members_visibility_level = :owners\n-        )\n-      SQL\n+      if user.blank?\n+        sql = \"groups.members_visibility_level = :public\"\n+      elsif is_staff\n+        sql = \"groups.members_visibility_level IN (:public, :logged_on_users, :members, :staff)\"\n+      else\n+        sql = <<~SQL\n+          groups.id IN (\n+            SELECT id\n+              FROM groups\n+            WHERE members_visibility_level IN (:public, :logged_on_users)\n+\n+            UNION ALL\n+\n+            SELECT g.id\n+              FROM groups g\n+              JOIN group_users gu ON gu.group_id = g.id AND gu.user_id = :user_id\n+            WHERE g.members_visibility_level = :members\n+\n+            UNION ALL\n+\n+            SELECT g.id\n+              FROM groups g\n+              JOIN group_users gu ON gu.group_id = g.id AND gu.user_id = :user_id AND gu.owner\n+            WHERE g.members_visibility_level IN (:staff, :owners)\n+          )\n+        SQL\n+      end\n \n-      params = Group.visibility_levels.to_h.merge(user_id: user&.id, is_staff: !!user&.staff?)\n+      params = Group.visibility_levels.to_h.merge(user_id: user&.id, is_staff: is_staff)\n       groups = groups.where(sql, params)\n     end\n "
    },
    {
      "sha": "e0c002e456bebb4c630d768eb78c7e77abf03fb6",
      "filename": "config/locales/client.en.yml",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/9e4ed03b8fad4ef38f8b4dd55e604151cb9558d4/config/locales/client.en.yml",
      "raw_url": "https://github.com/discourse/discourse/raw/9e4ed03b8fad4ef38f8b4dd55e604151cb9558d4/config/locales/client.en.yml",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/config/locales/client.en.yml?ref=9e4ed03b8fad4ef38f8b4dd55e604151cb9558d4",
      "patch": "@@ -3588,8 +3588,8 @@ en:\n               title: \"Who can see this group?\"\n               public: \"Everyone\"\n               logged_on_users: \"Logged on users\"\n-              members: \"Group owners, members\"\n-              staff: \"Group owners and staff\"\n+              members: \"Group owners, members and moderators\"\n+              staff: \"Group owners and moderators\"\n               owners: \"Group owners\"\n               description: \"Admins can see all groups.\"\n             members_visibility_levels:"
    },
    {
      "sha": "0e501d5360ada19647cc538c19bbef4993747651",
      "filename": "spec/models/group_spec.rb",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/9e4ed03b8fad4ef38f8b4dd55e604151cb9558d4/spec/models/group_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/9e4ed03b8fad4ef38f8b4dd55e604151cb9558d4/spec/models/group_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/models/group_spec.rb?ref=9e4ed03b8fad4ef38f8b4dd55e604151cb9558d4",
      "patch": "@@ -698,7 +698,7 @@ def can_view?(user, group)\n \n       expect(can_view?(admin, group)).to eq(true)\n       expect(can_view?(owner, group)).to eq(true)\n-      expect(can_view?(moderator, group)).to eq(false)\n+      expect(can_view?(moderator, group)).to eq(true)\n       expect(can_view?(member, group)).to eq(true)\n       expect(can_view?(logged_on_user, group)).to eq(false)\n       expect(can_view?(nil, group)).to eq(false)\n@@ -763,7 +763,7 @@ def can_view?(user, group)\n \n       expect(can_view?(admin, group)).to eq(true)\n       expect(can_view?(owner, group)).to eq(true)\n-      expect(can_view?(moderator, group)).to eq(false)\n+      expect(can_view?(moderator, group)).to eq(true)\n       expect(can_view?(member, group)).to eq(true)\n       expect(can_view?(logged_on_user, group)).to eq(false)\n       expect(can_view?(nil, group)).to eq(false)"
    },
    {
      "sha": "a2d7a09421cbf0299cb66603fbe247d57596ab78",
      "filename": "spec/requests/groups_controller_spec.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/9e4ed03b8fad4ef38f8b4dd55e604151cb9558d4/spec/requests/groups_controller_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/9e4ed03b8fad4ef38f8b4dd55e604151cb9558d4/spec/requests/groups_controller_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/requests/groups_controller_spec.rb?ref=9e4ed03b8fad4ef38f8b4dd55e604151cb9558d4",
      "patch": "@@ -248,7 +248,7 @@\n \n         expect(response.status).to eq(200)\n         group_names = response.parsed_body[\"groups\"].map { |g| g[\"name\"] }\n-        expect(group_names).to contain_exactly(\"0_0\", \"0_1\", \"0_3\", \"1_0\", \"1_1\", \"1_3\", \"3_0\", \"3_1\", \"3_3\")\n+        expect(group_names).to contain_exactly(\"0_0\", \"0_1\", \"0_2\", \"0_3\", \"1_0\", \"1_1\", \"1_2\", \"1_3\", \"2_0\", \"2_1\", \"2_2\", \"2_3\", \"3_0\", \"3_1\", \"3_2\", \"3_3\")\n \n         # admin\n         sign_in(admin)"
    }
  ]
}
