{
  "sha": "ba2442de3917b417b1c2efd5a4f2b2332a295430",
  "node_id": "MDY6Q29tbWl0MTA1NjMzMjI6YmEyNDQyZGUzOTE3YjQxN2IxYzJlZmQ1YTRmMmIyMzMyYTI5NTQzMA==",
  "commit": {
    "author": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2020-09-26T22:09:22Z"
    },
    "committer": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2020-09-26T22:09:22Z"
    },
    "message": "Merge v0.2020.24 into 'release'.",
    "tree": {
      "sha": "a8291c07825b331c84ca73f46ce329d304b65e4c",
      "url": "https://api.github.com/repos/debiki/talkyard/git/trees/a8291c07825b331c84ca73f46ce329d304b65e4c"
    },
    "url": "https://api.github.com/repos/debiki/talkyard/git/commits/ba2442de3917b417b1c2efd5a4f2b2332a295430",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/debiki/talkyard/commits/ba2442de3917b417b1c2efd5a4f2b2332a295430",
  "html_url": "https://github.com/debiki/talkyard/commit/ba2442de3917b417b1c2efd5a4f2b2332a295430",
  "comments_url": "https://api.github.com/repos/debiki/talkyard/commits/ba2442de3917b417b1c2efd5a4f2b2332a295430/comments",
  "author": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c51ac795d047288a4ca520008a7db3f61c6de0c7",
      "url": "https://api.github.com/repos/debiki/talkyard/commits/c51ac795d047288a4ca520008a7db3f61c6de0c7",
      "html_url": "https://github.com/debiki/talkyard/commit/c51ac795d047288a4ca520008a7db3f61c6de0c7"
    },
    {
      "sha": "b4ba8995b58e13c74222caf6459d1d44ba11c51f",
      "url": "https://api.github.com/repos/debiki/talkyard/commits/b4ba8995b58e13c74222caf6459d1d44ba11c51f",
      "html_url": "https://github.com/debiki/talkyard/commit/b4ba8995b58e13c74222caf6459d1d44ba11c51f"
    }
  ],
  "stats": {
    "total": 273,
    "additions": 202,
    "deletions": 71
  },
  "files": [
    {
      "sha": "238501b1e47f3655b92ce6033c47b24a5b8ae7cf",
      "filename": "app/ed/server/notf/NotfHtmlRenderer.scala",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/debiki/talkyard/blob/ba2442de3917b417b1c2efd5a4f2b2332a295430/app/ed/server/notf/NotfHtmlRenderer.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/ba2442de3917b417b1c2efd5a4f2b2332a295430/app/ed/server/notf/NotfHtmlRenderer.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/ed/server/notf/NotfHtmlRenderer.scala?ref=ba2442de3917b417b1c2efd5a4f2b2332a295430",
      "patch": "@@ -152,9 +152,9 @@ case class NotfHtmlRenderer(siteDao: SiteDao, anyOrigin: Option[String]) {\n   }\n \n \n-  private def renderNewPostNotf(notf: Notification.NewPost, post: Post, pageTitle: String,\n-        maxNotificationLength: Int, transaction: SiteTransaction): NodeSeq = {\n-    val pageMeta = transaction.loadPageMeta(post.pageId) getOrElse {\n+  private def renderNewPostNotf(notf: Notification.NewPost, post: Post, pageTitle: St,\n+        maxNotificationLength: i32, tx: SiteTx): NodeSeq = {\n+    val pageMeta = tx.loadPageMeta(post.pageId) getOrElse {\n       return Nil\n     }\n \n@@ -172,7 +172,7 @@ case class NotfHtmlRenderer(siteDao: SiteDao, anyOrigin: Option[String]) {\n     }\n \n     SECURITY ; SHOULD // indicate if is guest's name, so cannot pretend to be any @username.\n-    val byUserName = transaction.loadParticipant(notf.byUserId).map(_.usernameOrGuestName) getOrElse\n+    val byUserName = tx.loadParticipant(notf.byUserId).map(_.usernameOrGuestName) getOrElse\n       \"(unknown user name)\"\n \n     val date = toIso8601Day(post.createdAt)\n@@ -207,6 +207,8 @@ case class NotfHtmlRenderer(siteDao: SiteDao, anyOrigin: Option[String]) {\n     val ellipsis = (postText.length > maxLenBeforeEscapes) ? \"...\" | \"\"\n     val html = Text(postText.take(maxLenBeforeEscapes) + ellipsis)\n \n+    // I18N: Email notifications — lots of stuff here to translate.\n+\n     val (\n       whatHappened,\n       dotOrComma,"
    },
    {
      "sha": "04c1fa9bf3b1a0c06c18a3793981566a9d4e1fdf",
      "filename": "app/ed/server/notf/NotifierActor.scala",
      "status": "modified",
      "additions": 10,
      "deletions": 2,
      "changes": 12,
      "blob_url": "https://github.com/debiki/talkyard/blob/ba2442de3917b417b1c2efd5a4f2b2332a295430/app/ed/server/notf/NotifierActor.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/ba2442de3917b417b1c2efd5a4f2b2332a295430/app/ed/server/notf/NotifierActor.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/ed/server/notf/NotifierActor.scala?ref=ba2442de3917b417b1c2efd5a4f2b2332a295430",
      "patch": "@@ -350,8 +350,16 @@ class NotifierActor (val systemDao: SystemDao, val siteDaoFactory: SiteDaoFactor\n     if (notfRenderResult.html.isEmpty)\n       return None\n \n-    // Always use the same subject line, even if only 1 comment, so will end up in the same\n+    // Always use the same subject line, even if only 1 comment, so ends up in the same\n     // email thread. Include site name, so simpler for people to find the email.\n+    val subject = s\"[$siteName] New notifications\"   // I18N\n+\n+    // The following creates different and more specific email titles — but results\n+    // in email clients creating many different email threads, making people annoyed\n+    // about a noisy email inbox.\n+    // Keep this, commented out, anyway — maybe for low traffic sites (like,\n+    // a blog with 1 new topic per month), more specific titles can be nice?\n+    /*\n     val subject: String = {\n         val newWhat = ArrayBuffer[String]()\n         if (notfRenderResult.newModTasks) {\n@@ -384,7 +392,7 @@ class NotifierActor (val systemDao: SystemDao, val siteDaoFactory: SiteDaoFactor\n         subjText ++= commaSep.mkString(\"\", \", \", \"\")\n         andLast foreach { subjText ++= \", and \" + _ }\n         subjText.toString\n-      }\n+      } */\n \n     val email = Email(EmailType.Notification, createdAt = globals.now(),\n       sendTo = user.email, toUserId = Some(user.id),"
    },
    {
      "sha": "3178ff608c0c4f54057e95d42b6aca30c40ab98a",
      "filename": "images/web/ed-lua/lua-limit-uploads/limit-uploads.lua",
      "status": "modified",
      "additions": 15,
      "deletions": 26,
      "changes": 41,
      "blob_url": "https://github.com/debiki/talkyard/blob/ba2442de3917b417b1c2efd5a4f2b2332a295430/images/web/ed-lua/lua-limit-uploads/limit-uploads.lua",
      "raw_url": "https://github.com/debiki/talkyard/raw/ba2442de3917b417b1c2efd5a4f2b2332a295430/images/web/ed-lua/lua-limit-uploads/limit-uploads.lua",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/images/web/ed-lua/lua-limit-uploads/limit-uploads.lua?ref=ba2442de3917b417b1c2efd5a4f2b2332a295430",
      "patch": "@@ -6,30 +6,21 @@ local http = require \"resty.http\"\n \n local content_length = ngx.var.content_length\n local host = ngx.var.host\n-local ip = ngx.var.remote_addr\n+local remote_addr = ngx.var.remote_addr\n \n local httpc = http.new()\n \n -- Timeouts: connect, send and read (in millis) — a second or more,\n -- in case the JVM collects garbage or sth like that.\n -- COULD: Many minutes read timeout, in dev mode, so time for a human\n -- to step through the Scala app in a debugger.\n-httpc:set_timeouts(500, 3000, 3000)\n+httpc:set_timeouts(1000, 5000, 5000)\n \n -- There's a connection pool; matching idle connections will get reused.\n--- This: httpc:connect(\"app\", 9000)  Lua? Nginx? cannot resolve 'app'.\n--- But oddly enough, works fine in  server-locations.conf!\n--- But this works:  (31 is 'app', see  INTERNAL_NET_APP_IP in .env)\n---\n--- However! Are there very early self hosted installs?\n--- Without a .env with fixed ip addrs? Then this won't work, and,\n--- for now, then let's reply Ok to the request.\n--- DO_AFTER 2020-11-01 figure out how to verify if any old self hosted\n--- installations lack the fixed ip config? [rej_upl_if_err]\n-httpc:connect(\"172.27.0.31\", 9000)\n-\n--- Someone else had problems with hostname resolution too:\n--- https://github.com/openresty/lua-nginx-module/issues/441#issuecomment-65954680\n+-- (For this to work, Nginx needs to have been configured with\n+-- `resolver dns-server-addr` — see nginx.conf — otherwise there'll be\n+-- this error:  'error: no resolver defined to resolve \"app\"')\n+httpc:connect(\"app\", 9000)\n \n -- COULD parse the request body and split at the form-data boundaries,\n -- to find out how large each file is, in case there're many uploads in\n@@ -55,28 +46,26 @@ local res, err = httpc:request({\n \n local toFromSize =\n         \"to: \" .. host ..\n-        \" from: \" .. ip ..\n+        \" from: \" .. remote_addr ..\n         \" size: \" .. content_length\n \n if not res then\n-    -- ngx.status = 500\n-    -- ngx.header.content_type = 'text/plain'\n-    -- ngx.say(\"500 Internal Error\\n\\n\" ..\n-    --         \"Error finding out if may upload file [TyEUPLCHK]\\n\\n\", err)\n+    ngx.status = 500\n+    ngx.header.content_type = 'text/plain'\n+    ngx.say(\"500 Internal Error\\n\\n\" ..\n+            \"Error finding out if may upload file [TyELUAUPLCK]\\n\\n\", err)\n     ngx.log(ngx.ERR, \"Request failed: /-/may-upload-file, \" ..\n-            \"NOT ejecting upload \" .. toFromSize    -- [rej_upl_if_err]\n-            \" [TyEUPLCHK], error: \" .. err)\n-            -- \": 500 Internal Error [TyEUPLCHK]: \" .. err)\n-    -- return ngx.exit(ngx.HTTP_OK)\n-    return ngx.exit(ngx.OK)\n+            \"rejecting upload \" .. toFromSize .. \" [TyELUAUPLCK]\" ..\n+            \": 500 Internal Error [TyELUAUPLCK]: \" .. err)\n+    return ngx.exit(ngx.HTTP_OK)\n end\n \n if res.status ~= 200 then\n     ngx.status = res.status\n     ngx.header.content_type = 'text/plain'\n     ngx.say(res:read_body())\n     ngx.log(ngx.DEBUG, \"Rejecting upload \" .. toFromSize ..\n-            \" [TyMREJUPL], status: \" .. res.status)\n+            \" [TyMLUAREJUPL], status: \" .. res.status)\n     return ngx.exit(ngx.HTTP_OK)\n end\n "
    },
    {
      "sha": "0937fb5f37ab3d8611ac6798e098f338f1cf6edc",
      "filename": "images/web/nginx.conf",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/debiki/talkyard/blob/ba2442de3917b417b1c2efd5a4f2b2332a295430/images/web/nginx.conf",
      "raw_url": "https://github.com/debiki/talkyard/raw/ba2442de3917b417b1c2efd5a4f2b2332a295430/images/web/nginx.conf",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/images/web/nginx.conf?ref=ba2442de3917b417b1c2efd5a4f2b2332a295430",
      "patch": "@@ -53,6 +53,15 @@ http {\n \n   server_tokens off;\n \n+  # Lua needs a resolver, otherwise e.g. lua-resty-http won't find 'app'.\n+  # `local=on` makes us use /etc/resolv.conf — there, Docker has\n+  # added a nameserver. For now, let's use 127.0.0.11 — Docker\n+  # has a nameserver there, see:\n+  #  https://stackoverflow.com/a/37656784  and\n+  #  https://github.com/moby/moby/issues/22652#issuecomment-218413598 )\n+  resolver 127.0.0.11 ipv6=off; # local=on — needs OpenResty\n+  resolver_timeout 8s;\n+\n   # Prevent clickjacking. Now moved to Scala instead [7ACKRQ20]\n   # allow_embedding_from, and use 'Content-Security-Policy: frame-ancestors ...' instead, for Chrome.\n   #add_header X-Frame-Options DENY;"
    },
    {
      "sha": "6e452c9d3809ea4ad9e7737bea86fa126aaeca36",
      "filename": "modules/ed-versions",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/modules/ed-versions?ref=ba2442de3917b417b1c2efd5a4f2b2332a295430",
      "patch": "@@ -1 +1 @@\n-Subproject commit bb7b89f679ec2f85f1b01a66b20581336e09dd73\n+Subproject commit 6e452c9d3809ea4ad9e7737bea86fa126aaeca36"
    },
    {
      "sha": "3273ab93fd6b0ec83345106e7d0c20153a5618a0",
      "filename": "s/build-prod-images.sh",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/ba2442de3917b417b1c2efd5a4f2b2332a295430/s/build-prod-images.sh",
      "raw_url": "https://github.com/debiki/talkyard/raw/ba2442de3917b417b1c2efd5a4f2b2332a295430/s/build-prod-images.sh",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/s/build-prod-images.sh?ref=ba2442de3917b417b1c2efd5a4f2b2332a295430",
      "patch": "@@ -182,6 +182,8 @@ echo \"\"\n echo \"    make  tag-and-push-latest-images  tag=$version_tag\"\n echo \"    make  push-tag-to-git  tag=$version_tag\"\n echo \"    s/bump-versions.sh\"\n+echo \"    git add version.txt modules/ed-versions\"\n+echo \"    git commit -m 'Bump version.'\"\n echo \"\"\n \n "
    },
    {
      "sha": "44f8e9e46cec2d24dd9a85ea19e70dc7045cc977",
      "filename": "s/bump-versions.sh",
      "status": "modified",
      "additions": 9,
      "deletions": 21,
      "changes": 30,
      "blob_url": "https://github.com/debiki/talkyard/blob/ba2442de3917b417b1c2efd5a4f2b2332a295430/s/bump-versions.sh",
      "raw_url": "https://github.com/debiki/talkyard/raw/ba2442de3917b417b1c2efd5a4f2b2332a295430/s/bump-versions.sh",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/s/bump-versions.sh?ref=ba2442de3917b417b1c2efd5a4f2b2332a295430",
      "patch": "@@ -1,34 +1,22 @@\n #!/bin/bash\n \n-# If the current version in version.txt is a WIP (work in progress\n-# version), this script bumps the WIP version from say WIP-123 to WIP-124.\n-\n-# Now, 2020, 'WIP' isn't work in progress, it can be the real prod\n-# version too.\n+# Bump from v0.2020.X to v0.2020.X+1:\n \n set -u  # exit on unset variable\n set -e  # exit on non-zero command exit code\n set -o pipefail  # exit on false | true\n \n+old_v=$(cat version.txt)\n \n-# Bump version.txt\n-# ---------------------\n-\n-current_version_nr=`sed -nr 's/^.*-WIP-([0-9]+)/\\1/p' < version.txt`\n+old_patch_nr=$(  \\\n+    echo $old_v | sed -nr 's/^v[0-9]+\\.[0-9]+\\.([0-9]+).*$/\\1/p')\n \n-# Skip this, bump the minor version always instead.\n-#if [ -n \"$current_version_nr\" ]; then\n-#  # Bump v00.00.00-WIP-100 to v00.00.00-WIP-101\n-#  next_version_nr=`printf '%d' $(($current_version_nr + 1))`\n-#  new_version=`sed -r \"s/^(.*)-WIP-([0-9]+).*\\$/\\1-WIP-$next_version_nr/\" < version.txt`\n-#else\n+next_patch_nr=`printf '%d' $(($old_patch_nr + 1))`\n \n-  # Bump v00.00.00 to v00.00.01-WIP-1\n-  current_version_nr=`sed -nr 's/^v[0-9]+\\.[0-9]+\\.([0-9]+)(.*)$/\\1/p' < version.txt`\n-  next_version_nr=`printf '%d' $(($current_version_nr + 1))`\n-  new_version=`sed -nr \"s/^(v[0-9]+\\.[0-9]+)\\.([0-9]+)(.*)\\$/\\1\\.$next_version_nr-WIP-1\\3/p\" < version.txt`\n+next_v=$(echo $old_v  \\\n+    | sed -nr \"s/^(v[0-9]+\\.[0-9]+\\.)([0-9]+)(.*)\\$/\\1${next_patch_nr}\\3/p\" )\n \n-#fi\n+echo \"$next_v\" > version.txt\n \n-echo \"$new_version\" > version.txt\n+echo \"Bumped version from $old_v to $next_v.\"\n "
    },
    {
      "sha": "f72e8bbcaa25e33d9fc8f80a6e191b2948db3c48",
      "filename": "s/git-merge-into-release-branch.sh",
      "status": "added",
      "additions": 87,
      "deletions": 0,
      "changes": 87,
      "blob_url": "https://github.com/debiki/talkyard/blob/ba2442de3917b417b1c2efd5a4f2b2332a295430/s/git-merge-into-release-branch.sh",
      "raw_url": "https://github.com/debiki/talkyard/raw/ba2442de3917b417b1c2efd5a4f2b2332a295430/s/git-merge-into-release-branch.sh",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/s/git-merge-into-release-branch.sh?ref=ba2442de3917b417b1c2efd5a4f2b2332a295430",
      "patch": "@@ -0,0 +1,87 @@\n+#!/bin/bash\n+\n+# Finds out if the next version number, in file ./version.txt,\n+# makes sense — or if it's too old (too low), something is amiss.\n+\n+\n+set -e  # exit on error\n+\n+dbg=\"f\"\n+\n+cur_branch=$(git rev-parse --abbrev-ref HEAD)\n+\n+if [ \"$cur_branch\" != 'master' ]; then\n+  echo \"Current branch should be 'master'\"\n+  exit 1\n+fi\n+\n+versions_file='modules/ed-versions/version-tags.log'\n+old_versions=$(cat $versions_file)\n+next_version=$(cat version.txt)\n+old_and_next_vs=$(echo \"$old_versions\n+$next_version\")\n+\n+# 'sed' removes space padding before the count number.\n+dupls_old_next_vs=$(echo \"$old_and_next_vs\" | sort -V | uniq -c | sed 's/^ *//')\n+dupls_most_recent=$(echo \"$dupls_old_next_vs\" | tail -n1)\n+\n+if [ \"$dbg\" = \"t\" ]; then\n+  echo \"next: $next_version\"\n+  echo \"old_and_next_vs: $old_and_next_vs\"\n+  echo \"dupls_old_next_vs: $dupls_old_next_vs\"\n+  echo \"dupls_most_recent: $dupls_most_recent\"\n+fi\n+\n+year=\"$(date +%Y)\"\n+if [[ ! $next_version =~ ^v0\\.$year\\. ]]; then\n+  echo \"Wrong year in version number, should be $year:  $next_version\"\n+  exit 1\n+fi\n+\n+if [ \"$dupls_most_recent\" == \"2 $next_version\" ]; then\n+  echo\n+  echo \"Bad version in version.txt:  $next_version\"\n+  echo\n+  echo \"That's the same as the most recent version number in $versions_file,\"\n+  echo \"indicating that this version has been released already?\"\n+  echo\n+  exit 1\n+fi\n+\n+if [ \"$dupls_most_recent\" != \"1 $next_version\" ]; then\n+  echo\n+  echo \"Bad version in version.txt:  $next_version\"\n+  echo\n+  echo \"That's not the most recent version number — seems there's\"\n+  echo \"a higher version number in $versions_file:\"\n+  echo \"  $dupls_most_recent\"\n+  echo\n+  exit 1\n+fi\n+\n+if [ -n \"$(git status -s)\" ]; then\n+  echo\n+  echo\n+  echo \"Error: There're changes or untracked files, look, git status:\"\n+  echo\n+  git status\n+  echo\n+  exit 1\n+fi\n+\n+# dupl code [bashutils]\n+echo \n+read -p \"Merge $next_version into the release branch? [y/n]?  \" choice\n+case \"$choice\" in \n+  y|Y|yes|Yes|YES ) echo \"Ok, will do:\"; echo ;;\n+  n|N|no|No|NO ) echo \"Ok, doing nothing, bye.\"; exit 1;;\n+  * ) echo \"What? Bye.\"; exit 1;;\n+esac\n+\n+\n+echo\n+echo \"Run these commands, that's all:  (do manually, for now)\"\n+echo\n+\n+echo git checkout release\n+echo git merge --no-ff master -m \"\\\"Merge $next_version into 'release'.\\\"\""
    },
    {
      "sha": "a578b2a0e5323bc18c3659c32e96fb0084a6af1c",
      "filename": "s/release-current-wip.sh",
      "status": "modified",
      "additions": 52,
      "deletions": 6,
      "changes": 58,
      "blob_url": "https://github.com/debiki/talkyard/blob/ba2442de3917b417b1c2efd5a4f2b2332a295430/s/release-current-wip.sh",
      "raw_url": "https://github.com/debiki/talkyard/raw/ba2442de3917b417b1c2efd5a4f2b2332a295430/s/release-current-wip.sh",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/s/release-current-wip.sh?ref=ba2442de3917b417b1c2efd5a4f2b2332a295430",
      "patch": "@@ -1,6 +1,7 @@\n #!/bin/bash\n \n git_lock_file='.git/modules/modules/ed-versions/index.lock'\n+versions_file='modules/ed-versions/version-tags.log'\n \n \n if [ -f $git_lock_file ]; then\n@@ -27,17 +28,62 @@ read -s -p ''\n set -e\n \n # (Don't use <root>/version.txt — that's the *next* version, not yet released.)\n-wip_version_tag=`tail -n1 modules/ed-versions/version-tags.log`\n+old_versions=$(cat $versions_file)\n+wip_version_tag=$(echo \"$old_versions\" | tail -n1)\n+next_version=$(cat version.txt)\n \n if [ -z \"$( echo \"$wip_version_tag\" | grep 'WIP-' )\" ]; then\n   echo \"Not a WIP version tag: $wip_version_tag, no '-WIP-'.\"\n   exit 1\n fi\n \n+release_version_tag=$( echo \"$wip_version_tag\" | sed -r -e 's/WIP-//' )\n+\n+\n+# Sanity check version numbers\n+\n+# version.txt should be newer than $wip_version_tag and\n+# $release_version_tag.\n+\n+next_release_wip_sorted=$(echo \\\n+\"$next_version\n+$release_version_tag\n+$wip_version_tag\" | sort -V)\n+\n+# 'WIP' starts with uppercase, gets sorted before Git revision hashes.\n+wip_release_next_expected=\\\n+\"$wip_version_tag\n+$release_version_tag\n+$next_version\"\n+\n+if [ \"$next_release_wip_sorted\" != \"$wip_release_next_expected\" ]; then\n+  echo \"Error, something is amiss! When sorting versions, I get this:\"\n+  echo\n+  echo \"$next_release_wip_sorted\"\n+  echo\n+  echo \"But I expected:\"\n+  echo\n+  echo \"$wip_release_next_expected\"\n+  echo\n+  exit 1\n+fi\n+\n \n-echo \"Release WIP version debiki/talkyard-*:$wip_version_tag?  Press Enter (or CTRL+C to exit)\"\n-read -s -p ''\n \n+echo \"WIP version, canary released: $wip_version_tag\"\n+echo \"WIP once production released: $release_version_tag\"\n+echo \"      (Upcoming next version: $next_version)\"\n+echo\n+# dupl code [bashutils]\n+read -p \"Release WIP as debiki/talkyard-*:$release_version_tag? [y/n]  \" choice\n+case \"$choice\" in\n+  y|Y|yes|Yes|YES ) echo \"Ok, will do:\"; echo ;;\n+  n|N|no|No|NO ) echo \"Ok, doing nothing, bye.\"; exit 1;;\n+  * ) echo \"What? Bye.\"; exit 1;;\n+esac\n+\n+echo \"Step through the below manually once now ...\"\n+exit 1\n \n echo \"Pulling debiki/talkyard-*:$wip_version_tag ...\"\n sudo docker pull debiki/talkyard-app:$wip_version_tag\n@@ -49,8 +95,7 @@ sudo docker pull debiki/talkyard-certgen:$wip_version_tag\n \n echo \"Done pulling.\"\n \n-release_version_tag=$( echo \"$wip_version_tag\" | sed -r -e 's/WIP-//' )\n-\n+# Here and below, Enter is enough, no need to confirm y/n again.\n echo \"Tag with debiki/talkyard-*:$release_version_tag?  Press Enter (or CTRL+C to exit)\"\n read -s -p ''\n \n@@ -88,11 +133,12 @@ git checkout master\n git merge --ff-only origin/master\n echo $release_version_tag >> version-tags.log\n git add version-tags.log\n-git commit -m \"Add $release_version_tag = the prev WIP, release tagged.\"\n+git commit -m \"Release $release_version_tag.\"\n git push origin master\n popd\n \n git tag $release_version_tag $wip_version_tag\n git push origin $release_version_tag\n \n echo \"Done. Bye.\"\n+echo"
    },
    {
      "sha": "1289a2123a8cad07bbbde34af56d2ec9ba5ae7e5",
      "filename": "tests/e2e/utils/pages-for.ts",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/debiki/talkyard/blob/ba2442de3917b417b1c2efd5a4f2b2332a295430/tests/e2e/utils/pages-for.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/ba2442de3917b417b1c2efd5a4f2b2332a295430/tests/e2e/utils/pages-for.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/utils/pages-for.ts?ref=ba2442de3917b417b1c2efd5a4f2b2332a295430",
      "patch": "@@ -264,8 +264,8 @@ export class TyE2eTestBrowser {\n       return url;\n     }\n \n-    waitUntilUrlIs(expectedUrl: S) {\n-      let urlNow: S;\n+    waitUntilUrlIs(expectedUrl: St) {\n+      let urlNow: St;\n       this.waitUntil(() => {\n         urlNow = this.getUrl();\n         return urlNow === expectedUrl;\n@@ -6612,32 +6612,32 @@ export class TyE2eTestBrowser {\n         },\n \n         moderation: {\n-          goHere: (origin?: string, opts: { loginAs? } = {}) => {\n+          goHere: (origin?: St, opts: { loginAs? } = {}) => {\n             this.adminArea._goToMaybeLogin(origin, '/-/admin/settings/moderation', opts);\n             this.waitForVisible('.e_NumFstAprBef');\n           },\n \n-          setNumFirstToApproveBefore: (n: N) => {\n+          setNumFirstToApproveBefore: (n: Nr) => {\n             this.scrollAndSetValue('.e_NumFstAprBef input', n);\n           },\n \n-          setApproveBeforeTrustLevel: (level: N) => {\n+          setApproveBeforeTrustLevel: (level: Nr) => {\n             this.scrollAndSetValue('.e_AprBefTrLvl input', level);\n           },\n \n-          setMaxNumPendingApproval: (n: N) => {\n+          setMaxNumPendingApproval: (n: Nr) => {\n             this.scrollAndSetValue('.e_MxPndApr input', n);\n           },\n \n-          setNumFirstToReviewAfter: (n: N) => {\n+          setNumFirstToReviewAfter: (n: Nr) => {\n             this.scrollAndSetValue('.e_NumFstRvwAft input', n);\n           },\n \n-          setReviewAfterTrustLevel: (level: N) => {\n+          setReviewAfterTrustLevel: (level: Nr) => {\n             this.scrollAndSetValue('.e_RvwAftTrLvl input', level);\n           },\n \n-          setMaxNumPendingReview: (n: N) => {\n+          setMaxNumPendingReview: (n: Nr) => {\n             this.scrollAndSetValue('.e_MxPndRvw input', n);\n           },\n         },"
    },
    {
      "sha": "7093227ee53ecad50347f4d9e7d8e99eac4e62ff",
      "filename": "tests/e2e/utils/ty-assert.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/ba2442de3917b417b1c2efd5a4f2b2332a295430/tests/e2e/utils/ty-assert.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/ba2442de3917b417b1c2efd5a4f2b2332a295430/tests/e2e/utils/ty-assert.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/utils/ty-assert.ts?ref=ba2442de3917b417b1c2efd5a4f2b2332a295430",
      "patch": "@@ -108,7 +108,7 @@ const tyAssert: any = {   // : any = works around:\n       message || `This: \"${unexpectedSubstring}\" is incorrectly included in: \"${text}\"`);\n   },\n \n-  numSubstringsEq: (text: string, substringNoSpecialChars: string, numExpected: N) => {\n+  numSubstringsEq: (text: St, substringNoSpecialChars: St, numExpected: Nr) => {\n     const regex = new RegExp(substringNoSpecialChars, 'gs');\n     const numActual = (text.match(regex) || []).length;\n     tyAssert.eq(numActual, numExpected,"
    },
    {
      "sha": "1f7705c77b129b82e7b3e39e240cc77a6baaaf01",
      "filename": "version.txt",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/ba2442de3917b417b1c2efd5a4f2b2332a295430/version.txt",
      "raw_url": "https://github.com/debiki/talkyard/raw/ba2442de3917b417b1c2efd5a4f2b2332a295430/version.txt",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/version.txt?ref=ba2442de3917b417b1c2efd5a4f2b2332a295430",
      "patch": "@@ -1 +1 @@\n-v0.2020.23\n+v0.2020.24"
    }
  ]
}
