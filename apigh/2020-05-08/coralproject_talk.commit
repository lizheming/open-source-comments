{
  "sha": "d0ab2ef8c5728e7e9e7b807d6501a404daf037b6",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6ZDBhYjJlZjhjNTcyOGU3ZTllN2I4MDdkNjUwMWE0MDRkYWYwMzdiNg==",
  "commit": {
    "author": {
      "name": "Wyatt Johnson",
      "email": "wyattjoh@gmail.com",
      "date": "2020-05-07T16:21:37Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-05-07T16:21:37Z"
    },
    "message": "feat: support auto-pause live updates (#2947)\n\nCo-authored-by: Vinh <vinh@vinh.tech>",
    "tree": {
      "sha": "fea6848c21f8c0d4291dd199c3ad450d766aeff0",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/fea6848c21f8c0d4291dd199c3ad450d766aeff0"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJetDWRCRBK7hj4Ov3rIwAAdHIIAFEi+zaZIHzZzAK4FS4YA60x\nxVIiS1eKA6o/6kRe3e3KtcdKzg/iiP604hvXHn7LOgJLMHFey/DXpiC+UzW7SZT6\nGgVQJ//1Cyu/HM+hxDq9o1dNNkMPtC0gr2kE6koaEi+J36MMoOm/Q7Psyw9n8M83\nZGTYNwVO/rYgsV9HYGGLy2HwWzLg1q7VBrXoGTszeS890JlTLTzgHgbbbL/eJRp/\nZZfm0koTZQgOIS8KiCmBlW6WikdJ7OnfRwYSsonS3pJbF7Rz07bQdWFiLc6GNjsj\nIn2+EBQJjLxQJaLRxMgsl+nOuaaWoTcAtKk9q2+97URItAaD5ljPA09LiSKofGk=\n=Ga80\n-----END PGP SIGNATURE-----\n",
      "payload": "tree fea6848c21f8c0d4291dd199c3ad450d766aeff0\nparent 1624787004f9e8c01a2577b551d83d1277961f12\nauthor Wyatt Johnson <wyattjoh@gmail.com> 1588868497 +0000\ncommitter GitHub <noreply@github.com> 1588868497 +0000\n\nfeat: support auto-pause live updates (#2947)\n\nCo-authored-by: Vinh <vinh@vinh.tech>"
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6",
  "html_url": "https://github.com/coralproject/talk/commit/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6/comments",
  "author": {
    "login": "wyattjoh",
    "id": 633002,
    "node_id": "MDQ6VXNlcjYzMzAwMg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/633002?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wyattjoh",
    "html_url": "https://github.com/wyattjoh",
    "followers_url": "https://api.github.com/users/wyattjoh/followers",
    "following_url": "https://api.github.com/users/wyattjoh/following{/other_user}",
    "gists_url": "https://api.github.com/users/wyattjoh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wyattjoh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wyattjoh/subscriptions",
    "organizations_url": "https://api.github.com/users/wyattjoh/orgs",
    "repos_url": "https://api.github.com/users/wyattjoh/repos",
    "events_url": "https://api.github.com/users/wyattjoh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wyattjoh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1624787004f9e8c01a2577b551d83d1277961f12",
      "url": "https://api.github.com/repos/coralproject/talk/commits/1624787004f9e8c01a2577b551d83d1277961f12",
      "html_url": "https://github.com/coralproject/talk/commit/1624787004f9e8c01a2577b551d83d1277961f12"
    }
  ],
  "stats": {
    "total": 187,
    "additions": 141,
    "deletions": 46
  },
  "files": [
    {
      "sha": "5202d3932e201acb64bc062d90355bda432def53",
      "filename": "src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/CreateCommentReplyMutation.ts",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/coralproject/talk/blob/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6/src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/CreateCommentReplyMutation.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6/src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/CreateCommentReplyMutation.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/CreateCommentReplyMutation.ts?ref=d0ab2ef8c5728e7e9e7b807d6501a404daf037b6",
      "patch": "@@ -136,6 +136,15 @@ const mutation = graphql`\n           ...AllCommentsTabContainer_comment @relay(mask: false)\n           id\n           status\n+          story {\n+            settings {\n+              # Load the story live settings so new comments can verify if live\n+              # updates are still enabled (and enable then if they are).\n+              live {\n+                enabled\n+              }\n+            }\n+          }\n           parent {\n             id\n             tags {\n@@ -234,6 +243,14 @@ async function commit(\n                   dontAgree: false,\n                   flag: false,\n                 },\n+                story: {\n+                  id: input.storyID,\n+                  settings: {\n+                    live: {\n+                      enabled: storySettings.live.enabled,\n+                    },\n+                  },\n+                },\n                 replies: {\n                   edges: [],\n                   pageInfo: { endCursor: null, hasNextPage: false },"
    },
    {
      "sha": "b434433ebdd33e1b294dbce334d0619a2e1e21c9",
      "filename": "src/core/client/stream/tabs/Comments/Stream/PostCommentForm/CreateCommentMutation.ts",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/coralproject/talk/blob/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6/src/core/client/stream/tabs/Comments/Stream/PostCommentForm/CreateCommentMutation.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6/src/core/client/stream/tabs/Comments/Stream/PostCommentForm/CreateCommentMutation.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/PostCommentForm/CreateCommentMutation.ts?ref=d0ab2ef8c5728e7e9e7b807d6501a404daf037b6",
      "patch": "@@ -131,6 +131,15 @@ const mutation = graphql`\n         node {\n           ...AllCommentsTabContainer_comment @relay(mask: false)\n           status\n+          story {\n+            settings {\n+              # Load the story live settings so new comments can verify if live\n+              # updates are still enabled (and enable then if they are).\n+              live {\n+                enabled\n+              }\n+            }\n+          }\n         }\n       }\n       clientMutationId\n@@ -219,6 +228,14 @@ async function commit(\n                   edges: [],\n                   pageInfo: { endCursor: null, hasNextPage: false },\n                 },\n+                story: {\n+                  id: input.storyID,\n+                  settings: {\n+                    live: {\n+                      enabled: storySettings.live.enabled,\n+                    },\n+                  },\n+                },\n                 deleted: false,\n               },\n             },"
    },
    {
      "sha": "64b872b41428a211f5698479df22412c4a2a60d4",
      "filename": "src/core/client/stream/test/fixtures.ts",
      "status": "modified",
      "additions": 36,
      "deletions": 34,
      "changes": 70,
      "blob_url": "https://github.com/coralproject/talk/blob/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6/src/core/client/stream/test/fixtures.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6/src/core/client/stream/test/fixtures.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/fixtures.ts?ref=d0ab2ef8c5728e7e9e7b807d6501a404daf037b6",
      "patch": "@@ -260,6 +260,41 @@ export const commenters = createFixtures<GQLUser>(\n   baseUser\n );\n \n+export const baseStory = createFixture<GQLStory>({\n+  id: \"story-0\",\n+  metadata: {\n+    title: \"title\",\n+  },\n+  isClosed: false,\n+  comments: {\n+    edges: [],\n+    pageInfo: {\n+      hasNextPage: false,\n+    },\n+  },\n+  commentCounts: {\n+    totalPublished: 0,\n+    tags: {\n+      FEATURED: 0,\n+      UNANSWERED: 0,\n+    },\n+  },\n+  settings: {\n+    moderation: GQLMODERATION_MODE.POST,\n+    premodLinksEnable: false,\n+    messageBox: {\n+      enabled: false,\n+    },\n+    live: {\n+      enabled: true,\n+      configurable: true,\n+    },\n+    mode: GQLSTORY_MODE.COMMENTS,\n+    experts: [],\n+  },\n+  site,\n+});\n+\n export const baseComment = createFixture<GQLComment>({\n   author: commenters[0],\n   body: \"Comment Body\",\n@@ -279,6 +314,7 @@ export const baseComment = createFixture<GQLComment>({\n       total: 0,\n     },\n   },\n+  story: baseStory,\n   parent: undefined,\n   viewerActionPresence: { reaction: false, dontAgree: false, flag: false },\n   tags: [],\n@@ -514,40 +550,6 @@ export const commentWithDeepestReplies = denormalizeComment(\n   })\n );\n \n-export const baseStory = createFixture<GQLStory>({\n-  metadata: {\n-    title: \"title\",\n-  },\n-  isClosed: false,\n-  comments: {\n-    edges: [],\n-    pageInfo: {\n-      hasNextPage: false,\n-    },\n-  },\n-  commentCounts: {\n-    totalPublished: 0,\n-    tags: {\n-      FEATURED: 0,\n-      UNANSWERED: 0,\n-    },\n-  },\n-  settings: {\n-    moderation: GQLMODERATION_MODE.POST,\n-    premodLinksEnable: false,\n-    messageBox: {\n-      enabled: false,\n-    },\n-    live: {\n-      enabled: true,\n-      configurable: true,\n-    },\n-    mode: GQLSTORY_MODE.COMMENTS,\n-    experts: [],\n-  },\n-  site,\n-});\n-\n export const moderators = createFixtures<GQLUser>(\n   [\n     {"
    },
    {
      "sha": "a0703bdef64db6e0d0eac5efbff64d959c2cbfb5",
      "filename": "src/core/server/config.ts",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/coralproject/talk/blob/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6/src/core/server/config.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6/src/core/server/config.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/config.ts?ref=d0ab2ef8c5728e7e9e7b807d6501a404daf037b6",
      "patch": "@@ -217,6 +217,13 @@ const config = convict({\n     default: false,\n     env: \"DISABLE_LIVE_UPDATES\",\n   },\n+  disable_live_updates_timeout: {\n+    doc:\n+      \"Disables subscriptions for the comment stream for all stories across all tenants where a comment has not been left within the timeout\",\n+    format: \"ms\",\n+    default: \"2 weeks\",\n+    env: \"DISABLE_LIVE_UPDATES_TIMEOUT\",\n+  },\n   disable_client_routes: {\n     doc:\n       \"Disables mounting of client routes for developing with Webpack Dev Server\","
    },
    {
      "sha": "23e3ea3550ad6be64b4a2ba11bed5fbae996e996",
      "filename": "src/core/server/graph/resolvers/LiveConfiguration.ts",
      "status": "modified",
      "additions": 33,
      "deletions": 2,
      "changes": 35,
      "blob_url": "https://github.com/coralproject/talk/blob/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6/src/core/server/graph/resolvers/LiveConfiguration.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6/src/core/server/graph/resolvers/LiveConfiguration.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/resolvers/LiveConfiguration.ts?ref=d0ab2ef8c5728e7e9e7b807d6501a404daf037b6",
      "patch": "@@ -1,9 +1,14 @@\n import { isUndefined } from \"lodash\";\n+import { DateTime } from \"luxon\";\n \n-import { GQLLiveConfigurationTypeResolver } from \"coral-server/graph/schema/__generated__/types\";\n import * as settings from \"coral-server/models/settings\";\n \n-export type LiveConfigurationInput = settings.LiveConfiguration;\n+import { GQLLiveConfigurationTypeResolver } from \"coral-server/graph/schema/__generated__/types\";\n+\n+export interface LiveConfigurationInput extends settings.LiveConfiguration {\n+  lastCommentedAt?: Date;\n+  createdAt?: Date;\n+}\n \n export const LiveConfiguration: GQLLiveConfigurationTypeResolver<LiveConfigurationInput> = {\n   configurable: (source, args, ctx) =>\n@@ -13,6 +18,32 @@ export const LiveConfiguration: GQLLiveConfigurationTypeResolver<LiveConfigurati\n       return false;\n     }\n \n+    // This typecast is needed because the custom `ms` format does not return the\n+    // desired `number` type even though that's the only type it can output.\n+    const disableLiveUpdatesTimeout = (ctx.config.get(\n+      \"disable_live_updates_timeout\"\n+    ) as unknown) as number;\n+    if (disableLiveUpdatesTimeout > 0) {\n+      // If one of these is available, use it to determine the time since the\n+      // last comment.\n+      const lastCommentedAt = source.lastCommentedAt || source.createdAt;\n+      if (\n+        // If a date is found...\n+        lastCommentedAt &&\n+        // And the date (when we add the timeout duration) is before the current\n+        // date...\n+        DateTime.fromJSDate(lastCommentedAt)\n+          .plus({\n+            milliseconds: disableLiveUpdatesTimeout,\n+          })\n+          .toJSDate() <= ctx.now\n+      ) {\n+        // Then we know that the last comment (or lack there of) was left more\n+        // than the timeout specified in configuration.\n+        return false;\n+      }\n+    }\n+\n     if (isUndefined(source.enabled)) {\n       return ctx.tenant.live.enabled;\n     }"
    },
    {
      "sha": "8e830919479a1535c9af6d6ad2bdef90d11721c0",
      "filename": "src/core/server/graph/resolvers/Story.ts",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/coralproject/talk/blob/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6/src/core/server/graph/resolvers/Story.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6/src/core/server/graph/resolvers/Story.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/resolvers/Story.ts?ref=d0ab2ef8c5728e7e9e7b807d6501a404daf037b6",
      "patch": "@@ -11,6 +11,7 @@ import {\n \n import { CommentCountsInput } from \"./CommentCounts\";\n import { storyModerationInputResolver } from \"./ModerationQueues\";\n+import { StorySettingsInput } from \"./StorySettings\";\n \n export const Story: GQLStoryTypeResolver<story.Story> = {\n   comments: (s, input, ctx) => ctx.loaders.Comments.forStory(s.id, input),\n@@ -26,7 +27,16 @@ export const Story: GQLStoryTypeResolver<story.Story> = {\n   commentCounts: (s): CommentCountsInput => s,\n   // Merge tenant settings into the story settings so we can easily inherit the\n   // options if they exist.\n-  settings: (s, input, ctx) => defaultsDeep({}, s.settings, ctx.tenant),\n+  settings: (s, input, ctx): StorySettingsInput =>\n+    defaultsDeep(\n+      {\n+        // Pass these options as required by StorySettingsInput.\n+        lastCommentedAt: s.lastCommentedAt,\n+        createdAt: s.createdAt,\n+      },\n+      s.settings,\n+      ctx.tenant\n+    ),\n   moderationQueues: storyModerationInputResolver,\n   site: (s, input, ctx) => ctx.loaders.Sites.site.load(s.siteID),\n };"
    },
    {
      "sha": "d0100efb4c6356287abb3faf84a672d208cc7749",
      "filename": "src/core/server/graph/resolvers/StorySettings.ts",
      "status": "modified",
      "additions": 15,
      "deletions": 2,
      "changes": 17,
      "blob_url": "https://github.com/coralproject/talk/blob/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6/src/core/server/graph/resolvers/StorySettings.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6/src/core/server/graph/resolvers/StorySettings.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/resolvers/StorySettings.ts?ref=d0ab2ef8c5728e7e9e7b807d6501a404daf037b6",
      "patch": "@@ -7,8 +7,21 @@ import {\n   GQLStorySettingsTypeResolver,\n } from \"../schema/__generated__/types\";\n \n-export const StorySettings: GQLStorySettingsTypeResolver<story.StorySettings> = {\n-  live: (s) => s.live || {},\n+import { LiveConfigurationInput } from \"./LiveConfiguration\";\n+\n+export interface StorySettingsInput extends story.StorySettings {\n+  lastCommentedAt?: Date;\n+  createdAt?: Date;\n+}\n+\n+export const StorySettings: GQLStorySettingsTypeResolver<StorySettingsInput> = {\n+  live: (s): LiveConfigurationInput => ({\n+    // Live may not be available sometimes, fix it here with the inline ||.\n+    ...(s.live || { enabled: false }),\n+    // Pass these options as required by LiveConfigurationInput.\n+    lastCommentedAt: s.lastCommentedAt,\n+    createdAt: s.createdAt,\n+  }),\n   moderation: (s, input, ctx) => s.moderation || ctx.tenant.moderation,\n   premodLinksEnable: (s, input, ctx) =>\n     s.premodLinksEnable || ctx.tenant.premodLinksEnable,"
    },
    {
      "sha": "24779814d6bf8313c8399a783bf1374dc654cce0",
      "filename": "src/core/server/models/story/index.ts",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/coralproject/talk/blob/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6/src/core/server/models/story/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/d0ab2ef8c5728e7e9e7b807d6501a404daf037b6/src/core/server/models/story/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/models/story/index.ts?ref=d0ab2ef8c5728e7e9e7b807d6501a404daf037b6",
      "patch": "@@ -48,11 +48,9 @@ export interface StreamModeSettings {\n   expertIDs?: string[];\n }\n \n-export type StorySettings = DeepPartial<\n-  StreamModeSettings &\n-    GlobalModerationSettings &\n-    Pick<GQLStorySettings, \"messageBox\" | \"mode\" | \"experts\">\n->;\n+export type StorySettings = StreamModeSettings &\n+  GlobalModerationSettings &\n+  Pick<GQLStorySettings, \"messageBox\" | \"mode\" | \"experts\">;\n \n export type StoryMetadata = GQLStoryMetadata;\n \n@@ -83,7 +81,7 @@ export interface Story extends TenantResource {\n    * settings provides a point where the settings can be overridden for a\n    * specific Story.\n    */\n-  settings: StorySettings;\n+  settings: DeepPartial<StorySettings>;\n \n   /**\n    * closedAt is the date that the Story was forced closed at, or false to\n@@ -378,7 +376,7 @@ export async function updateStory(\n     throw err;\n   }\n }\n-export type UpdateStorySettingsInput = StorySettings;\n+export type UpdateStorySettingsInput = DeepPartial<StorySettings>;\n \n export async function updateStorySettings(\n   mongo: Db,"
    }
  ]
}
