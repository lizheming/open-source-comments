{
  "sha": "0398271f87e1bb60a5069b0c56037f13a18e27f4",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODowMzk4MjcxZjg3ZTFiYjYwYTUwNjliMGM1NjAzN2YxM2ExOGUyN2Y0",
  "commit": {
    "author": {
      "name": "Guo Xiang Tan",
      "email": "gxtan1990@gmail.com",
      "date": "2020-09-09T00:58:21Z"
    },
    "committer": {
      "name": "Guo Xiang Tan",
      "email": "gxtan1990@gmail.com",
      "date": "2020-09-09T00:58:21Z"
    },
    "message": "FIX: Admin should always be able to view group messages.\n\nFollow-up to b0f22f25231d73500a5b17d31349bc419a1058b0.\n\nBefore this fix, `SiteSetting.enable_personal_messages = false` will\nprevent admin from viewing group messages.",
    "tree": {
      "sha": "9b84e5476735c4ca75f992fc2ad8931139374c3e",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/9b84e5476735c4ca75f992fc2ad8931139374c3e"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/0398271f87e1bb60a5069b0c56037f13a18e27f4",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMOJGkc46I9vMVlDg+9EQF5qsHyAFAl9YKQAACgkQ+9EQF5qs\nHyD8Og//UcZDsU90VNgbX4sQiDFE6QT9i9hxbqYN/P3lFsDuw9c6wg2cQDo/f69E\nJG13WoIQl5w8AT8OAnxiOA1fLq9cNo0bzeKgnaxIAvKja8w3bE5x0S9YK//XwSCe\n63qQjWIfjBelnthDLdipUpK59zdxlHJqBMDYJ2dsDo5TLFRUPXFnVt4o2dj7hjy2\naeBANc1sCTfsz/ySwH/esh2BIHIU10J06266hLX1hhC3XbPia0yvBRpe8K/R0VQ2\noy7YkYONJhELMXVNlnID8MwzaJOw/8QZACrttNbjqfZsojKe9d9w5c3PoJFF/TpO\npyNpt3jNvpxtvORwT5UejjIb1/gkLHNT6J2bipNFk2JVvs36Pm1babywiSEEiFTh\n8s+I+zDGBBGKeOuseU5t5sKwGhzSeOK+bHLnzZZM05A2X0NDGrQGq+N4tND5NBCv\nCuQBF92UgexNVRcUsBBBaIknhaew6uI3ORY1Aj04GGUyA8gbjaL/3aiTGffg1/MZ\n9OhXLcoXo4bkB3QdtYnyutC/fYWfotmqOYeE/EOoFDWPmVkFw5ku9hNPjRzlvO8M\n2Y4yyzAl2WXGuM7VB59cRXdEXrNazua1LRNHpL3rUQ06EGgXqnBSvbUeQ+T48IC1\nYuIEU3Dr3tPK2WkcJUFdpciMPdnBozNJtYIczmwx7igfNWphe0A=\n=UPAD\n-----END PGP SIGNATURE-----",
      "payload": "tree 9b84e5476735c4ca75f992fc2ad8931139374c3e\nparent cce41f32b83720f9ac923f60583aa195e22b571d\nauthor Guo Xiang Tan <gxtan1990@gmail.com> 1599613101 +0800\ncommitter Guo Xiang Tan <gxtan1990@gmail.com> 1599613101 +0800\n\nFIX: Admin should always be able to view group messages.\n\nFollow-up to b0f22f25231d73500a5b17d31349bc419a1058b0.\n\nBefore this fix, `SiteSetting.enable_personal_messages = false` will\nprevent admin from viewing group messages.\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/0398271f87e1bb60a5069b0c56037f13a18e27f4",
  "html_url": "https://github.com/discourse/discourse/commit/0398271f87e1bb60a5069b0c56037f13a18e27f4",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/0398271f87e1bb60a5069b0c56037f13a18e27f4/comments",
  "author": {
    "login": "tgxworld",
    "id": 4335742,
    "node_id": "MDQ6VXNlcjQzMzU3NDI=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/4335742?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tgxworld",
    "html_url": "https://github.com/tgxworld",
    "followers_url": "https://api.github.com/users/tgxworld/followers",
    "following_url": "https://api.github.com/users/tgxworld/following{/other_user}",
    "gists_url": "https://api.github.com/users/tgxworld/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tgxworld/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tgxworld/subscriptions",
    "organizations_url": "https://api.github.com/users/tgxworld/orgs",
    "repos_url": "https://api.github.com/users/tgxworld/repos",
    "events_url": "https://api.github.com/users/tgxworld/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tgxworld/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tgxworld",
    "id": 4335742,
    "node_id": "MDQ6VXNlcjQzMzU3NDI=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/4335742?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tgxworld",
    "html_url": "https://github.com/tgxworld",
    "followers_url": "https://api.github.com/users/tgxworld/followers",
    "following_url": "https://api.github.com/users/tgxworld/following{/other_user}",
    "gists_url": "https://api.github.com/users/tgxworld/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tgxworld/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tgxworld/subscriptions",
    "organizations_url": "https://api.github.com/users/tgxworld/orgs",
    "repos_url": "https://api.github.com/users/tgxworld/repos",
    "events_url": "https://api.github.com/users/tgxworld/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tgxworld/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cce41f32b83720f9ac923f60583aa195e22b571d",
      "url": "https://api.github.com/repos/discourse/discourse/commits/cce41f32b83720f9ac923f60583aa195e22b571d",
      "html_url": "https://github.com/discourse/discourse/commit/cce41f32b83720f9ac923f60583aa195e22b571d"
    }
  ],
  "stats": {
    "total": 52,
    "additions": 42,
    "deletions": 10
  },
  "files": [
    {
      "sha": "7246f6c5e17ca670fae65449a51324aae91fe003",
      "filename": "lib/guardian/group_guardian.rb",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/0398271f87e1bb60a5069b0c56037f13a18e27f4/lib/guardian/group_guardian.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/0398271f87e1bb60a5069b0c56037f13a18e27f4/lib/guardian/group_guardian.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/guardian/group_guardian.rb?ref=0398271f87e1bb60a5069b0c56037f13a18e27f4",
      "patch": "@@ -34,8 +34,8 @@ def can_admin_group?(group)\n   end\n \n   def can_see_group_messages?(group)\n-    SiteSetting.enable_personal_messages? && (\n-      is_admin? || group.users.include?(user)\n-    )\n+    return true if is_admin?\n+\n+    SiteSetting.enable_personal_messages? && group.users.include?(user)\n   end\n end"
    },
    {
      "sha": "0de5c8863b9d5df2cbe0a52be5f57affd2e33c1d",
      "filename": "spec/requests/list_controller_spec.rb",
      "status": "modified",
      "additions": 39,
      "deletions": 7,
      "changes": 46,
      "blob_url": "https://github.com/discourse/discourse/blob/0398271f87e1bb60a5069b0c56037f13a18e27f4/spec/requests/list_controller_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/0398271f87e1bb60a5069b0c56037f13a18e27f4/spec/requests/list_controller_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/requests/list_controller_spec.rb?ref=0398271f87e1bb60a5069b0c56037f13a18e27f4",
      "patch": "@@ -173,15 +173,44 @@\n   end\n \n   describe '#private_messages_group' do\n-    let(:user) do\n-      user = Fabricate(:user)\n-      group.add(user)\n-      sign_in(user)\n-      user\n+    let(:user) { Fabricate(:user) }\n+\n+    describe 'with personal_messages disabled' do\n+      let!(:topic) { Fabricate(:private_message_topic, allowed_groups: [group]) }\n+\n+      before do\n+        group.add(user)\n+        SiteSetting.enable_personal_messages = false\n+      end\n+\n+      it 'should display group private messages for an admin' do\n+        sign_in(Fabricate(:admin))\n+\n+        get \"/topics/private-messages-group/#{user.username}/#{group.name}.json\"\n+\n+        expect(response.status).to eq(200)\n+\n+        expect(response.parsed_body[\"topic_list\"][\"topics\"].first[\"id\"])\n+          .to eq(topic.id)\n+      end\n+\n+      it \"should not display group private messages for a moderator's group\" do\n+        moderator = Fabricate(:moderator)\n+        sign_in(moderator)\n+        group.add(moderator)\n+\n+        get \"/topics/private-messages-group/#{user.username}/#{group.name}.json\"\n+\n+        expect(response.status).to eq(404)\n+      end\n     end\n \n     describe 'with unicode_usernames' do\n-      before { SiteSetting.unicode_usernames = false }\n+      before do\n+        group.add(user)\n+        sign_in(user)\n+        SiteSetting.unicode_usernames = false\n+      end\n \n       it 'should return the right response when user does not belong to group' do\n         Fabricate(:private_message_topic, allowed_groups: [group])\n@@ -205,7 +234,10 @@\n     end\n \n     describe 'with unicode_usernames' do\n-      before { SiteSetting.unicode_usernames = true }\n+      before do\n+        sign_in(user)\n+        SiteSetting.unicode_usernames = true\n+      end\n \n       it 'Returns a 200 with unicode group name' do\n         unicode_group = Fabricate(:group, name: '群群组')"
    }
  ]
}
