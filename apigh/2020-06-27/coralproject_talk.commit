{
  "sha": "2acc761a5dc900dbd958f58186b1f3c58bf2a319",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6MmFjYzc2MWE1ZGM5MDBkYmQ5NThmNTgxODZiMWYzYzU4YmYyYTMxOQ==",
  "commit": {
    "author": {
      "name": "Vinh",
      "email": "vinh@vinh.tech",
      "date": "2020-06-26T22:38:52Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-06-26T22:38:52Z"
    },
    "message": "[CORL-1074] Upgrade dependencies (#2999)\n\n* chore: upgrade eslint, typescript\n\n* chore: upgrade deps\n\n* chore: revert upgrade ts-node-dev\n\n* chore: revert unneeded comments\n\nCo-authored-by: kodiakhq[bot] <49736102+kodiakhq[bot]@users.noreply.github.com>",
    "tree": {
      "sha": "e7eb4815c2b24e092b84aa173421085456b002bf",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/e7eb4815c2b24e092b84aa173421085456b002bf"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/2acc761a5dc900dbd958f58186b1f3c58bf2a319",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe9nj8CRBK7hj4Ov3rIwAAdHIIABmJLB1CwUkcbp4uF0sA24z3\nTu2aDJjsk909ym7VlNvYnIz3sWfgzdkkDe+AlS91EskHJuxD4effXbsDnzxKvwOv\npkw9w/IkLSQsMER6SJGSGvr9kDWHCenpqnGZfbqmPnnCviHkRw60gJfFjaEk/LMd\n0+53RpiwQqntJUgvQX+0S2qOKh5/haQBMqiUlNkJWU0z34JE5FM0leDOovmTC8Dd\niAy/+7WPlraoKGNEreQAbyjwbpzBeayts/dMKX8uLc760aQw05BSLXZdlHFmdmwW\nwjAGna/gvaCFPtqoa2rz5ZP6koj1NxYuSuGgEXFOFBaVGUpFmaOjzIY5cRgVNRo=\n=3kR3\n-----END PGP SIGNATURE-----\n",
      "payload": "tree e7eb4815c2b24e092b84aa173421085456b002bf\nparent 0db5bc846da29f766bbcfcbff6a6fc32e586ba73\nauthor Vinh <vinh@vinh.tech> 1593211132 +0200\ncommitter GitHub <noreply@github.com> 1593211132 +0000\n\n[CORL-1074] Upgrade dependencies (#2999)\n\n* chore: upgrade eslint, typescript\n\n* chore: upgrade deps\n\n* chore: revert upgrade ts-node-dev\n\n* chore: revert unneeded comments\n\nCo-authored-by: kodiakhq[bot] <49736102+kodiakhq[bot]@users.noreply.github.com>"
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/2acc761a5dc900dbd958f58186b1f3c58bf2a319",
  "html_url": "https://github.com/coralproject/talk/commit/2acc761a5dc900dbd958f58186b1f3c58bf2a319",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/2acc761a5dc900dbd958f58186b1f3c58bf2a319/comments",
  "author": {
    "login": "cvle",
    "id": 14221600,
    "node_id": "MDQ6VXNlcjE0MjIxNjAw",
    "avatar_url": "https://avatars2.githubusercontent.com/u/14221600?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cvle",
    "html_url": "https://github.com/cvle",
    "followers_url": "https://api.github.com/users/cvle/followers",
    "following_url": "https://api.github.com/users/cvle/following{/other_user}",
    "gists_url": "https://api.github.com/users/cvle/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cvle/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cvle/subscriptions",
    "organizations_url": "https://api.github.com/users/cvle/orgs",
    "repos_url": "https://api.github.com/users/cvle/repos",
    "events_url": "https://api.github.com/users/cvle/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cvle/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0db5bc846da29f766bbcfcbff6a6fc32e586ba73",
      "url": "https://api.github.com/repos/coralproject/talk/commits/0db5bc846da29f766bbcfcbff6a6fc32e586ba73",
      "html_url": "https://github.com/coralproject/talk/commit/0db5bc846da29f766bbcfcbff6a6fc32e586ba73"
    }
  ],
  "stats": {
    "total": 12284,
    "additions": 6571,
    "deletions": 5713
  },
  "files": [
    {
      "sha": "0b2059c416e5c33eebd88ffb7d687a68fae4750b",
      "filename": ".eslintrc.js",
      "status": "modified",
      "additions": 30,
      "deletions": 9,
      "changes": 39,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/.eslintrc.js",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/.eslintrc.js",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/.eslintrc.js?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -1,7 +1,7 @@\n const typescriptEslintRecommended = require(\"@typescript-eslint/eslint-plugin/dist/configs/eslint-recommended\")\n-  .default.overrides[0];\n-const typescriptRecommended = require(\"@typescript-eslint/eslint-plugin/dist/configs/recommended.json\");\n-const typescriptRecommendedTypeChecking = require(\"@typescript-eslint/eslint-plugin/dist/configs/recommended-requiring-type-checking.json\");\n+  .overrides[0];\n+const typescriptRecommended = require(\"@typescript-eslint/eslint-plugin/dist/configs/recommended.js\");\n+const typescriptRecommendedTypeChecking = require(\"@typescript-eslint/eslint-plugin/dist/configs/recommended-requiring-type-checking.js\");\n const typescriptEslintPrettier = require(\"eslint-config-prettier/@typescript-eslint\");\n const react = require(\"eslint-plugin-react\").configs.recommended;\n const jsxA11y = require(\"eslint-plugin-jsx-a11y\").configs.recommended;\n@@ -41,12 +41,21 @@ const typescriptOverrides = {\n         \"error\",\n         { default: \"array-simple\", readonly: \"generic\" },\n       ],\n-      \"@typescript-eslint/ban-types\": \"error\",\n+      \"@typescript-eslint/ban-types\": [\n+        \"error\",\n+        {\n+          types: {\n+            \"{}\": false,\n+            object: false,\n+            extendDefaults: true,\n+          },\n+        },\n+      ],\n       \"@typescript-eslint/camelcase\": \"off\",\n       \"@typescript-eslint/consistent-type-assertions\": \"error\",\n       \"@typescript-eslint/consistent-type-definitions\": \"error\",\n-      \"@typescript-eslint/class-name-casing\": \"error\",\n       \"@typescript-eslint/explicit-function-return-type\": \"off\",\n+      \"@typescript-eslint/explicit-module-boundary-types\": \"off\",\n       \"@typescript-eslint/explicit-member-accessibility\": [\n         \"error\",\n         {\n@@ -56,15 +65,13 @@ const typescriptOverrides = {\n         },\n       ],\n       \"@typescript-eslint/indent\": \"off\",\n-      \"@typescript-eslint/interface-name-prefix\": \"error\",\n       \"@typescript-eslint/member-delimiter-style\": \"off\",\n       \"@typescript-eslint/no-empty-function\": \"off\",\n       \"@typescript-eslint/no-empty-interface\": \"error\",\n       \"@typescript-eslint/no-explicit-any\": \"off\",\n       \"@typescript-eslint/no-misused-new\": \"error\",\n       \"@typescript-eslint/no-namespace\": \"error\",\n       \"@typescript-eslint/no-non-null-assertion\": \"off\",\n-      \"@typescript-eslint/no-parameter-properties\": \"off\",\n       \"@typescript-eslint/no-unused-vars\": [\n         \"error\",\n         { args: \"none\", ignoreRestSiblings: true },\n@@ -89,7 +96,14 @@ const typescriptOverrides = {\n   ),\n };\n \n-let typescriptTypeCheckingOverrides = {\n+const jestTypeCheckingOverrides = {\n+  files: [\"test/**/*.ts\", \"test/**/*.tsx\"],\n+  rules: {\n+    \"@typescript-eslint/no-floating-promises\": \"off\",\n+  },\n+};\n+\n+const typescriptTypeCheckingOverrides = {\n   files: [\"*.ts\", \"*.tsx\"],\n   parserOptions: {\n     project: [\n@@ -116,12 +130,18 @@ let typescriptTypeCheckingOverrides = {\n         },\n       },\n     ],\n+    \"@typescript-eslint/no-misused-promises\": \"off\",\n+    \"@typescript-eslint/no-unsafe-assignment\": \"off\",\n+    \"@typescript-eslint/no-unsafe-member-access\": \"off\",\n+    \"@typescript-eslint/no-unsafe-call\": \"off\",\n+    \"@typescript-eslint/no-unsafe-return\": \"off\",\n     // 28.11.19: (cvle) Disabled because behavior of regexp.exec seems different than str.match?\n     \"@typescript-eslint/prefer-regexp-exec\": \"off\",\n     \"@typescript-eslint/require-await\": \"off\",\n-    \"@typescript-eslint/no-misused-promises\": \"off\",\n+    \"@typescript-eslint/restrict-template-expressions\": \"off\",\n     \"@typescript-eslint/unbound-method\": \"off\", // 10.10.19: (cvle) seems to give false positive.\n   }),\n+  overrides: [jestTypeCheckingOverrides],\n };\n \n const jestOverrides = {\n@@ -169,6 +189,7 @@ module.exports = {\n     \"eol-last\": \"off\",\n     eqeqeq: \"error\",\n     \"guard-for-in\": \"error\",\n+    \"jsdoc/check-param-names\": \"off\",\n     \"jsdoc/require-jsdoc\": \"off\",\n     \"jsdoc/require-returns\": \"off\",\n     \"jsdoc/require-param\": \"off\","
    },
    {
      "sha": "77d07534d4cd31143cd3e20a684c284bff6bf02b",
      "filename": "package-lock.json",
      "status": "modified",
      "additions": 6195,
      "deletions": 5424,
      "changes": 11619,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/package-lock.json",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/package-lock.json",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/package-lock.json?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319"
    },
    {
      "sha": "5c766e504facd649012f4e0768cdfc1f7f57fae8",
      "filename": "package.json",
      "status": "modified",
      "additions": 43,
      "deletions": 40,
      "changes": 83,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/package.json",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/package.json",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/package.json?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -148,11 +148,11 @@\n     \"xregexp\": \"^4.3.0\"\n   },\n   \"devDependencies\": {\n-    \"@babel/core\": \"^7.9.0\",\n-    \"@babel/preset-env\": \"^7.9.0\",\n-    \"@babel/preset-react\": \"^7.9.4\",\n-    \"@babel/preset-typescript\": \"^7.9.0\",\n-    \"@babel/runtime-corejs3\": \"^7.9.2\",\n+    \"@babel/core\": \"^7.10.3\",\n+    \"@babel/preset-env\": \"^7.10.3\",\n+    \"@babel/preset-react\": \"^7.10.1\",\n+    \"@babel/preset-typescript\": \"^7.10.1\",\n+    \"@babel/runtime-corejs3\": \"^7.10.3\",\n     \"@coralproject/npm-run-all\": \"^4.1.5\",\n     \"@coralproject/rte\": \"^1.0.0\",\n     \"@fluent/react\": \"^0.11.1\",\n@@ -188,9 +188,9 @@\n     \"@types/html-minifier\": \"^3.5.3\",\n     \"@types/html-minifier-terser\": \"^5.0.0\",\n     \"@types/html-to-text\": \"^1.4.31\",\n-    \"@types/html-webpack-plugin\": \"^3.2.2\",\n+    \"@types/html-webpack-plugin\": \"^3.2.3\",\n     \"@types/ioredis\": \"^4.14.9\",\n-    \"@types/jest\": \"^25.2.1\",\n+    \"@types/jest\": \"^26.0.3\",\n     \"@types/jest-axe\": \"^3.2.2\",\n     \"@types/jsdom\": \"^16.2.0\",\n     \"@types/jsonwebtoken\": \"^8.3.8\",\n@@ -234,22 +234,22 @@\n     \"@types/uuid\": \"^7.0.2\",\n     \"@types/verror\": \"^1.10.3\",\n     \"@types/vinyl\": \"^2.0.4\",\n-    \"@types/webpack\": \"^4.41.10\",\n-    \"@types/webpack-assets-manifest\": \"^3.0.0\",\n-    \"@types/webpack-bundle-analyzer\": \"^2.13.3\",\n-    \"@types/webpack-dev-server\": \"^3.10.1\",\n+    \"@types/webpack\": \"^4.41.17\",\n+    \"@types/webpack-assets-manifest\": \"^3.0.1\",\n+    \"@types/webpack-bundle-analyzer\": \"^3.8.0\",\n+    \"@types/webpack-dev-server\": \"^3.11.0\",\n     \"@types/ws\": \"^7.2.3\",\n     \"@types/xregexp\": \"^4.3.0\",\n-    \"@typescript-eslint/eslint-plugin\": \"^2.26.0\",\n-    \"@typescript-eslint/eslint-plugin-tslint\": \"^2.26.0\",\n-    \"@typescript-eslint/parser\": \"^2.26.0\",\n+    \"@typescript-eslint/eslint-plugin\": \"^3.4.0\",\n+    \"@typescript-eslint/eslint-plugin-tslint\": \"^3.4.0\",\n+    \"@typescript-eslint/parser\": \"^3.4.0\",\n     \"autoprefixer\": \"^9.7.5\",\n     \"babel-core\": \"^7.0.0-bridge.0\",\n-    \"babel-jest\": \"^25.2.4\",\n+    \"babel-jest\": \"^26.1.0\",\n     \"babel-loader\": \"^8.1.0\",\n     \"babel-plugin-lodash\": \"^3.3.4\",\n     \"babel-plugin-module-resolver\": \"^4.0.0\",\n-    \"babel-plugin-relay\": \"^9.0.0\",\n+    \"babel-plugin-relay\": \"^9.1.0\",\n     \"babel-plugin-use-lodash-es\": \"^0.2.0\",\n     \"bowser\": \"^2.9.0\",\n     \"case-sensitive-paths-webpack-plugin\": \"^2.3.0\",\n@@ -269,13 +269,13 @@\n     \"docz\": \"^v2.3.0-alpha.14\",\n     \"enzyme\": \"^3.11.0\",\n     \"enzyme-adapter-react-16\": \"^1.15.2\",\n-    \"enzyme-to-json\": \"^3.4.4\",\n-    \"eslint\": \"^6.8.0\",\n-    \"eslint-config-prettier\": \"^6.10.1\",\n-    \"eslint-plugin-jsdoc\": \"^22.1.0\",\n-    \"eslint-plugin-jsx-a11y\": \"^6.2.3\",\n-    \"eslint-plugin-prettier\": \"^3.1.2\",\n-    \"eslint-plugin-react\": \"^7.19.0\",\n+    \"enzyme-to-json\": \"^3.5.0\",\n+    \"eslint\": \"^7.3.1\",\n+    \"eslint-config-prettier\": \"^6.11.0\",\n+    \"eslint-plugin-jsdoc\": \"^28.5.1\",\n+    \"eslint-plugin-jsx-a11y\": \"^6.3.1\",\n+    \"eslint-plugin-prettier\": \"^3.1.4\",\n+    \"eslint-plugin-react\": \"^7.20.0\",\n     \"eventemitter2\": \"^6.3.1\",\n     \"farce\": \"^0.2.8\",\n     \"final-form\": \"4.18.6\",\n@@ -285,23 +285,23 @@\n     \"fork-ts-checker-webpack-plugin\": \"^4.1.2\",\n     \"found\": \"^0.4.10\",\n     \"found-relay\": \"^0.7.0\",\n-    \"graphql-schema-linter\": \"^0.2.4\",\n+    \"graphql-schema-linter\": \"^0.4.0\",\n     \"graphql-schema-typescript\": \"^1.3.2\",\n     \"gulp\": \"^4.0.2\",\n     \"gulp-babel\": \"^8.0.0\",\n-    \"gulp-cli\": \"^2.2.0\",\n+    \"gulp-cli\": \"^2.3.0\",\n     \"gulp-sourcemaps\": \"^2.6.5\",\n     \"gulp-typescript\": \"^6.0.0-alpha.1\",\n     \"html-webpack-plugin\": \"^4.0.4\",\n     \"husky\": \"^4.2.3\",\n     \"intersection-observer\": \"^0.7.0\",\n-    \"jest\": \"^26.0.1\",\n+    \"jest\": \"^26.1.0\",\n     \"jest-axe\": \"^3.4.0\",\n-    \"jest-junit\": \"^10.0.0\",\n+    \"jest-junit\": \"^11.0.1\",\n     \"jest-localstorage-mock\": \"^2.4.2\",\n-    \"jest-mock-console\": \"^1.0.0\",\n+    \"jest-mock-console\": \"^1.0.1\",\n     \"keymaster\": \"^1.6.2\",\n-    \"lint-staged\": \"^10.1.1\",\n+    \"lint-staged\": \"^10.2.11\",\n     \"loader-utils\": \"^2.0.0\",\n     \"lodash-es\": \"^4.17.15\",\n     \"marked\": \"^0.8.2\",\n@@ -341,7 +341,7 @@\n     \"recompose\": \"^0.30.0\",\n     \"regenerator-runtime\": \"^0.13.5\",\n     \"relay-compiler\": \"^9.0.0\",\n-    \"relay-compiler-language-typescript\": \"^12.0.0\",\n+    \"relay-compiler-language-typescript\": \"^12.0.3\",\n     \"relay-local-schema\": \"^0.8.0\",\n     \"relay-runtime\": \"^9.0.0\",\n     \"resize-observer-polyfill\": \"^1.5.1\",\n@@ -358,29 +358,32 @@\n     \"terser-webpack-plugin\": \"^2.3.5\",\n     \"thread-loader\": \"^2.1.3\",\n     \"timekeeper\": \"^2.2.0\",\n-    \"ts-jest\": \"25.4.0\",\n-    \"ts-loader\": \"^6.2.2\",\n-    \"ts-node\": \"^8.8.1\",\n-    \"ts-node-dev\": \"^1.0.0-pre.44\",\n+    \"ts-jest\": \"26.1.1\",\n+    \"ts-loader\": \"^7.0.5\",\n+    \"ts-node\": \"^8.10.2\",\n+    \"ts-node-dev\": \"1.0.0-pre.44\",\n     \"tsconfig-paths\": \"^3.9.0\",\n     \"tsconfig-paths-webpack-plugin\": \"^3.2.0\",\n-    \"tslint\": \"^6.1.0\",\n+    \"tslint\": \"^6.1.2\",\n     \"typed-css-modules\": \"^0.6.3\",\n     \"typeface-manuale\": \"^1.1.4\",\n     \"typeface-nunito\": \"^1.1.3\",\n     \"typeface-open-sans\": \"^0.0.75\",\n     \"typeface-source-sans-pro\": \"^1.1.5\",\n-    \"typescript\": \"^3.8.3\",\n+    \"typescript\": \"^3.9.5\",\n     \"typescript-snapshots-plugin\": \"^1.7.0\",\n     \"wait-for-expect\": \"^1.3.0\",\n-    \"webpack\": \"^4.42.1\",\n+    \"webpack\": \"^4.43.0\",\n     \"webpack-assets-manifest\": \"^3.1.1\",\n-    \"webpack-bundle-analyzer\": \"^3.6.1\",\n-    \"webpack-cli\": \"^3.3.11\",\n-    \"webpack-dev-server\": \"^3.10.3\",\n+    \"webpack-bundle-analyzer\": \"^3.8.0\",\n+    \"webpack-cli\": \"^3.3.12\",\n+    \"webpack-dev-server\": \"^3.11.0\",\n     \"whatwg-fetch\": \"^3.0.0\"\n   },\n   \"dependencies-pins-documentation\": {\n+    \"ts-node-dev@1.0.0-pre.44\": [\n+      \"Newer versions unbearibly slow\"\n+    ],\n     \"ts-jest@25.4.0\": [\n       \"Newer versions require every definition file to be included\",\n       \"in tsconfig.json in the `files` field. This is cumbersome and\","
    },
    {
      "sha": "39b2a9594c2b4318eb785b04421a8846079319a4",
      "filename": "scripts/start.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/scripts/start.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/scripts/start.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/scripts/start.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -1,4 +1,5 @@\n #!/usr/bin/env ts-node\n+\n import dotenv from \"dotenv\";\n \n // Apply all the configuration provided in the .env file if it isn't already in"
    },
    {
      "sha": "b4e7f69684d95a345a17bf736ac8bcf1bf749907",
      "filename": "scripts/watcher/CommandExecutor.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/scripts/watcher/CommandExecutor.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/scripts/watcher/CommandExecutor.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/scripts/watcher/CommandExecutor.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -76,7 +76,7 @@ export default class CommandExecutor implements Executor {\n     });\n   }\n \n-  public execute(filePath: string) {\n+  public execute(filePath: string): void {\n     this.spawnProcessPotentiallyDebounced();\n   }\n }"
    },
    {
      "sha": "d31041bc047107aa60d3831c5337c25a7b67146d",
      "filename": "scripts/watcher/LongRunningExecutor.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/scripts/watcher/LongRunningExecutor.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/scripts/watcher/LongRunningExecutor.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/scripts/watcher/LongRunningExecutor.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -99,14 +99,14 @@ export default class LongRunningExecutor implements Executor {\n   }\n \n   // This is called before exiting.\n-  public async onCleanup() {\n+  public async onCleanup(): Promise<void> {\n     this.restartDebounced.cancel();\n     if (this.isRunning) {\n       await this.kill();\n     }\n   }\n \n-  public execute(filePath: string) {\n+  public execute(filePath: string): void {\n     if (this.isRunning) {\n       this.restartDebounced();\n       return;"
    },
    {
      "sha": "88bb4a8ab9a696d433f39ec2923fd64849ad9db1",
      "filename": "scripts/watcher/watch.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/scripts/watcher/watch.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/scripts/watcher/watch.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/scripts/watcher/watch.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -80,7 +80,10 @@ function filterOnly(\n   }) as Config[\"watchers\"];\n }\n \n-export default async function watch(config: Config, options: Options = {}) {\n+export default async function watch(\n+  config: Config,\n+  options: Options = {}\n+): Promise<void> {\n   Joi.assert(config, configSchema);\n   const watcher: Watcher = config.backend || new SaneWatcher();\n   const rootDir = config.rootDir || process.cwd();"
    },
    {
      "sha": "2f67040f8241252cea4b92c58e930af9abd85f71",
      "filename": "src/core/build/config.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/build/config.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/build/config.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/build/config.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -1,4 +1,5 @@\n import convict from \"convict\";\n+import os from \"os\";\n \n import { LOCALES } from \"../common/helpers/i18n/locales\";\n \n@@ -67,7 +68,7 @@ const config = convict({\n   maxCores: {\n     doc: \"Set maximum of available cores\",\n     format: \"nat\",\n-    default: require(\"os\").cpus().length,\n+    default: os.cpus().length,\n     env: \"WEBPACK_MAX_CORES\",\n     arg: \"maxCores\",\n   },"
    },
    {
      "sha": "0d76d7884b474cf0e95e1e78ede2c869902ca35c",
      "filename": "src/core/client/account/index.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/account/index.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/account/index.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/account/index.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -30,4 +30,4 @@ async function main() {\n   ReactDOM.render(<Index />, document.getElementById(\"app\"));\n }\n \n-main();\n+void main();"
    },
    {
      "sha": "1d306e17722ad42a26c572cdb2ebf55cedd9c2de",
      "filename": "src/core/client/admin/components/ModerateCard/ModerateCardContainer.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/components/ModerateCard/ModerateCardContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/components/ModerateCard/ModerateCardContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/components/ModerateCard/ModerateCardContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -136,7 +136,7 @@ const ModerateCardContainer: FunctionComponent<Props> = ({\n \n     const { storyID, siteID, section } = parseModerationOptions(match);\n \n-    featureComment({\n+    void featureComment({\n       commentID: comment.id,\n       commentRevisionID: comment.revision.id,\n       storyID,\n@@ -146,7 +146,7 @@ const ModerateCardContainer: FunctionComponent<Props> = ({\n   }, [featureComment, comment, match]);\n \n   const handleUnfeature = useCallback(() => {\n-    unfeatureComment({\n+    void unfeatureComment({\n       commentID: comment.id,\n       storyID: match.params.storyID,\n     });"
    },
    {
      "sha": "a2dd6ce655a75f2f159d923237673e87e775a8c5",
      "filename": "src/core/client/admin/components/UserHistoryDrawer/ModeratorNote.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/components/UserHistoryDrawer/ModeratorNote.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/components/UserHistoryDrawer/ModeratorNote.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/components/UserHistoryDrawer/ModeratorNote.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -22,7 +22,7 @@ const ModeratorNote: FunctionComponent<Props> = ({\n }) => {\n   const deleteNote = useCallback(() => {\n     if (onDelete) {\n-      onDelete(id);\n+      void onDelete(id);\n     }\n   }, [id]);\n   return ("
    },
    {
      "sha": "0e9985bfb7d5d16a5437864b51708d0bfcf1a007",
      "filename": "src/core/client/admin/components/UserHistoryDrawer/UserHistoryDrawerAllComments.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/components/UserHistoryDrawer/UserHistoryDrawerAllComments.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/components/UserHistoryDrawer/UserHistoryDrawerAllComments.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/components/UserHistoryDrawer/UserHistoryDrawerAllComments.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -33,7 +33,7 @@ const UserHistoryDrawerAllComments: FunctionComponent<Props> = ({\n       return;\n     }\n \n-    loadMore();\n+    void loadMore();\n   }, [loadMore]);\n \n   const hasMore = relay.hasMore();"
    },
    {
      "sha": "c47c2eda939756e4466260fa6697a1b39c5b1f21",
      "filename": "src/core/client/admin/components/UserHistoryDrawer/UserHistoryDrawerRejectedComments.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/components/UserHistoryDrawer/UserHistoryDrawerRejectedComments.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/components/UserHistoryDrawer/UserHistoryDrawerRejectedComments.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/components/UserHistoryDrawer/UserHistoryDrawerRejectedComments.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -35,7 +35,7 @@ const UserHistoryDrawerRejectedComments: FunctionComponent<Props> = ({\n       return;\n     }\n \n-    loadMore();\n+    void loadMore();\n   }, [loadMore]);\n \n   const hasMore = relay.hasMore();"
    },
    {
      "sha": "a50267b4cabc38926e5c38371024499d83f8efdf",
      "filename": "src/core/client/admin/components/UserRole/UserRoleChangeContainer.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/components/UserRole/UserRoleChangeContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/components/UserRole/UserRoleChangeContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/components/UserRole/UserRoleChangeContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -25,7 +25,7 @@ const UserRoleChangeContainer: FunctionComponent<Props> = (props) => {\n       if (role === props.user.role) {\n         return;\n       }\n-      updateUserRole({ userID: props.user.id, role });\n+      void updateUserRole({ userID: props.user.id, role });\n     },\n     [props.user.id, props.user.role, updateUserRole]\n   );"
    },
    {
      "sha": "1997b5ce0b9af4ad94869c1f3385ebf233b34b6b",
      "filename": "src/core/client/admin/components/UserStatus/UserStatusChangeContainer.tsx",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/components/UserStatus/UserStatusChangeContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/components/UserStatus/UserStatusChangeContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/components/UserStatus/UserStatusChangeContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -48,7 +48,7 @@ const UserStatusChangeContainer: FunctionComponent<Props> = (props) => {\n     if (!user.status.ban.active) {\n       return;\n     }\n-    removeUserBan({ userID: user.id });\n+    void removeUserBan({ userID: user.id });\n   }, [user, removeUserBan]);\n   const handleSuspend = useCallback(() => {\n     if (user.status.suspension.active) {\n@@ -60,7 +60,7 @@ const UserStatusChangeContainer: FunctionComponent<Props> = (props) => {\n     if (!user.status.suspension.active) {\n       return;\n     }\n-    removeUserSuspension({ userID: user.id });\n+    void removeUserSuspension({ userID: user.id });\n   }, [user, removeUserSuspension]);\n \n   const handlePremod = useCallback(() => {\n@@ -71,7 +71,7 @@ const UserStatusChangeContainer: FunctionComponent<Props> = (props) => {\n   }, [user, setShowPremod]);\n \n   const handlePremodConfirm = useCallback(() => {\n-    premodUser({ userID: user.id });\n+    void premodUser({ userID: user.id });\n     setShowPremod(false);\n   }, [premodUser, user, setShowPremod]);\n \n@@ -83,7 +83,7 @@ const UserStatusChangeContainer: FunctionComponent<Props> = (props) => {\n     if (!user.status.premod.active) {\n       return;\n     }\n-    removeUserPremod({ userID: user.id });\n+    void removeUserPremod({ userID: user.id });\n   }, [user, premodUser]);\n \n   const handleSuspendModalClose = useCallback(() => {\n@@ -97,7 +97,7 @@ const UserStatusChangeContainer: FunctionComponent<Props> = (props) => {\n \n   const handleSuspendConfirm = useCallback(\n     (timeout, message) => {\n-      suspendUser({\n+      void suspendUser({\n         userID: user.id,\n         timeout,\n         message,\n@@ -109,7 +109,7 @@ const UserStatusChangeContainer: FunctionComponent<Props> = (props) => {\n \n   const handleBanConfirm = useCallback(\n     (rejectExistingComments, message) => {\n-      banUser({ userID: user.id, message, rejectExistingComments });\n+      void banUser({ userID: user.id, message, rejectExistingComments });\n       setShowBanned(false);\n     },\n     [user, setShowBanned]"
    },
    {
      "sha": "c0ad3549d0c5f0d43fee6300bcc6a2257b81d5b2",
      "filename": "src/core/client/admin/index.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/index.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/index.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/index.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -32,4 +32,4 @@ async function main() {\n   ReactDOM.render(<Index />, document.getElementById(\"app\"));\n }\n \n-main();\n+void main();"
    },
    {
      "sha": "b98e6c80e4418ad8a4bf28525243a308f8973c3c",
      "filename": "src/core/client/admin/routes/AuthCheck/AuthCheckRoute.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/AuthCheck/AuthCheckRoute.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/AuthCheck/AuthCheckRoute.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/AuthCheck/AuthCheckRoute.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -37,14 +37,14 @@ function createAuthCheckRoute(check: CheckParams) {\n     private wasLoggedIn = false;\n     constructor(props: Props) {\n       super(props);\n-      this.redirectIfNotLoggedIn();\n+      void this.redirectIfNotLoggedIn();\n     }\n \n     public UNSAFE_componentWillReceiveProps(nextProps: Props) {\n       if (nextProps.data && nextProps.data.viewer) {\n         this.wasLoggedIn = true;\n       }\n-      this.redirectIfNotLoggedIn(nextProps, this.props);\n+      void this.redirectIfNotLoggedIn(nextProps, this.props);\n       if (nextProps.data && !nextProps.data.viewer) {\n         this.wasLoggedIn = false;\n       }"
    },
    {
      "sha": "37038d9bd43086006084e5f74ebcfb070089bf55",
      "filename": "src/core/client/admin/routes/AuthCheck/RestrictedContainer.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/AuthCheck/RestrictedContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/AuthCheck/RestrictedContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/AuthCheck/RestrictedContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -32,7 +32,7 @@ class RestrictedContainer extends Component<Props> {\n     await this.props.signOut();\n     // Wait for new context to propagate.\n     await timeout();\n-    this.props.setRedirectPath({\n+    void this.props.setRedirectPath({\n       path: location.pathname + location.search + location.hash,\n     });\n   };"
    },
    {
      "sha": "2f5e19c16535a909fc981f9f05a981c91a0272e4",
      "filename": "src/core/client/admin/routes/Configure/sections/Auth/OIDCConfigContainer.tsx",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/Configure/sections/Auth/OIDCConfigContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/Configure/sections/Auth/OIDCConfigContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Configure/sections/Auth/OIDCConfigContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -8,6 +8,7 @@ import {\n   withFetch,\n   withFragmentContainer,\n } from \"coral-framework/lib/relay\";\n+import { OmitRefType } from \"coral-framework/types\";\n \n import { OIDCConfig_formValues } from \"coral-admin/__generated__/OIDCConfig_formValues.graphql\";\n import { OIDCConfigContainer_auth as AuthData } from \"coral-admin/__generated__/OIDCConfigContainer_auth.graphql\";\n@@ -19,7 +20,9 @@ interface Props {\n   auth: AuthData;\n   disabled?: boolean;\n   discoverOIDCConfiguration: FetchProp<typeof DiscoverOIDCConfigurationFetch>;\n-  form: FormApi<{ auth: AuthData & OIDCConfig_formValues }>;\n+  form: FormApi<{\n+    auth: OmitRefType<AuthData> & OmitRefType<OIDCConfig_formValues>;\n+  }>;\n }\n \n interface State {"
    },
    {
      "sha": "3e53eadedc21035a47a4ffa64bd33d5977b878b8",
      "filename": "src/core/client/admin/routes/Configure/sections/Auth/SSOSigningSecretRotation/SSOSigningSecretCard.tsx",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/Configure/sections/Auth/SSOSigningSecretRotation/SSOSigningSecretCard.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/Configure/sections/Auth/SSOSigningSecretRotation/SSOSigningSecretCard.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Configure/sections/Auth/SSOSigningSecretRotation/SSOSigningSecretCard.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -87,30 +87,30 @@ const SSOSigningSecretCard: FunctionComponent<Props> = ({\n     (rotation: string) => {\n       switch (rotation) {\n         case RotateOptions.NOW:\n-          rotateSSOSigningSecret({ inactiveIn: 0 });\n+          void rotateSSOSigningSecret({ inactiveIn: 0 });\n           break;\n         case RotateOptions.IN1DAY:\n-          rotateSSOSigningSecret({ inactiveIn: 24 * 60 * 60 });\n+          void rotateSSOSigningSecret({ inactiveIn: 24 * 60 * 60 });\n           break;\n         case RotateOptions.IN1WEEK:\n-          rotateSSOSigningSecret({ inactiveIn: 7 * 24 * 60 * 60 });\n+          void rotateSSOSigningSecret({ inactiveIn: 7 * 24 * 60 * 60 });\n           break;\n         case RotateOptions.IN30DAYS:\n-          rotateSSOSigningSecret({ inactiveIn: 30 * 24 * 60 * 60 });\n+          void rotateSSOSigningSecret({ inactiveIn: 30 * 24 * 60 * 60 });\n           break;\n         default:\n-          rotateSSOSigningSecret({ inactiveIn: 0 });\n+          void rotateSSOSigningSecret({ inactiveIn: 0 });\n       }\n     },\n     [rotateSSOSigningSecret]\n   );\n   const onDeactivate = useCallback(() => {\n-    deactivateSSOSigningSecret({\n+    void deactivateSSOSigningSecret({\n       kid: id,\n     });\n   }, [deactivateSSOSigningSecret, id]);\n   const onDelete = useCallback(() => {\n-    deleteSSOSigningSecret({\n+    void deleteSSOSigningSecret({\n       kid: id,\n     });\n   }, [deleteSSOSigningSecret, id]);"
    },
    {
      "sha": "2d334418cb7c637a56e7c9d121dfb582e0216290",
      "filename": "src/core/client/admin/routes/Configure/sections/General/AnnouncementConfigContainer.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/Configure/sections/General/AnnouncementConfigContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/Configure/sections/General/AnnouncementConfigContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Configure/sections/General/AnnouncementConfigContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -38,7 +38,7 @@ const AnnouncementConfigContainer: FunctionComponent<Props> = ({\n   const onCreate = useCallback((values) => {\n     try {\n       setSubmitError(null);\n-      createAnnouncement(values);\n+      void createAnnouncement(values);\n       setShowForm(false);\n     } catch (error) {\n       setSubmitError(error.message);\n@@ -47,7 +47,7 @@ const AnnouncementConfigContainer: FunctionComponent<Props> = ({\n   const onDelete = useCallback(() => {\n     try {\n       setSubmitError(null);\n-      deleteAnnouncement();\n+      void deleteAnnouncement();\n     } catch (error) {\n       setSubmitError(error.message);\n       setShowForm(false);"
    },
    {
      "sha": "890747e55585a82b6abb03cf088121d78ad6474b",
      "filename": "src/core/client/admin/routes/Configure/sections/General/GeneralConfigRoute.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/Configure/sections/General/GeneralConfigRoute.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/Configure/sections/General/GeneralConfigRoute.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Configure/sections/General/GeneralConfigRoute.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -35,7 +35,7 @@ class GeneralConfigRoute extends React.Component<Props> {\n const enhanced = withRouteConfig<Props>({\n   getQuery: () => {\n     // Start prefetching markdown editor.\n-    loadMarkdownEditor();\n+    void loadMarkdownEditor();\n \n     // Fetch graphql data.\n     return graphql`"
    },
    {
      "sha": "aa0316702941578d5245452a0b750012f1ce419b",
      "filename": "src/core/client/admin/routes/Configure/sections/Moderation/PerspectiveConfig.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/Configure/sections/Moderation/PerspectiveConfig.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/Configure/sections/Moderation/PerspectiveConfig.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Configure/sections/Moderation/PerspectiveConfig.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -108,7 +108,7 @@ const PerspectiveConfig: FunctionComponent<Props> = ({ disabled }) => {\n           </Localized>\n           <Localized\n             id=\"configure-moderation-perspective-toxicityThresholdDescription\"\n-            $default={TOXICITY_THRESHOLD_DEFAULT + \"%\"}\n+            $default={TOXICITY_THRESHOLD_DEFAULT.toString() + \"%\"}\n           >\n             <HelperText>\n               This value can be set a percentage between 0 and 100. This number"
    },
    {
      "sha": "87fb1fd69b3516bca9e970d41008fa8b1115ef58",
      "filename": "src/core/client/admin/routes/Login/AccountCompletionContainer.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/Login/AccountCompletionContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/Login/AccountCompletionContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Login/AccountCompletionContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -70,7 +70,7 @@ function handleAccountCompletion(props: Props) {\n       }\n     } else {\n       // all set, complete account.\n-      props\n+      void props\n         .completeAccount({ accessToken: props.local.accessToken! })\n         .then(() => {\n           props.router.replace(props.local.redirectPath || \"/admin\");"
    },
    {
      "sha": "b846297a2831543421a003e7b3c8b0cc9e5f7d8b",
      "filename": "src/core/client/admin/routes/Login/views/AddEmailAddress/AddEmailAddress.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/Login/views/AddEmailAddress/AddEmailAddress.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/Login/views/AddEmailAddress/AddEmailAddress.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Login/views/AddEmailAddress/AddEmailAddress.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -31,7 +31,7 @@ const AddEmailAddress: FunctionComponent = () => {\n       } catch (error) {\n         if (error instanceof InvalidRequestError) {\n           if (error.code === \"DUPLICATE_EMAIL\") {\n-            setDuplicateEmail({ duplicateEmail: input.email });\n+            void setDuplicateEmail({ duplicateEmail: input.email });\n             setView({ view: \"LINK_ACCOUNT\" });\n             return;\n           }"
    },
    {
      "sha": "027356cdbe128cac6d642b41dbbf68b48ca5bddb",
      "filename": "src/core/client/admin/routes/Moderate/Queue/QueueRoute.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/Moderate/Queue/QueueRoute.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/Moderate/Queue/QueueRoute.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Moderate/Queue/QueueRoute.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -58,7 +58,7 @@ export const QueueRoute: FunctionComponent<Props> = (props) => {\n   );\n   const viewNew = useMutation(QueueViewNewMutation);\n   const onViewNew = useCallback(() => {\n-    viewNew({\n+    void viewNew({\n       queue: props.queueName,\n       storyID: props.storyID || null,\n       siteID: props.siteID || null,"
    },
    {
      "sha": "f54572ffc6a6a39d59b3f9cbd3a585900d3aa0ca",
      "filename": "src/core/client/admin/routes/Stories/StoryActions/StoryActionsContainer.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/Stories/StoryActions/StoryActionsContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/routes/Stories/StoryActions/StoryActionsContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Stories/StoryActions/StoryActionsContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -23,13 +23,13 @@ const StoryActionsContainer: FunctionComponent<Props> = (props) => {\n   const closeStory = useMutation(CloseStoryMutation);\n   const openStory = useMutation(OpenStoryMutation);\n   const onRescrape = useCallback(() => {\n-    rescrape({ id: props.story.id });\n+    void rescrape({ id: props.story.id });\n   }, [props.story.id]);\n   const onClose = useCallback(() => {\n-    closeStory({ id: props.story.id });\n+    void closeStory({ id: props.story.id });\n   }, [props.story.id]);\n   const onOpen = useCallback(() => {\n-    openStory({ id: props.story.id });\n+    void openStory({ id: props.story.id });\n   }, [props.story.id]);\n   const canChangeStatus = can(props.viewer, Ability.CHANGE_STORY_STATUS);\n   return ("
    },
    {
      "sha": "a3c8987ad5f82e0368c7f3465d9ce18833200497",
      "filename": "src/core/client/admin/test/community/community.spec.tsx",
      "status": "modified",
      "additions": 24,
      "deletions": 25,
      "changes": 49,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/test/community/community.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/test/community/community.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/test/community/community.spec.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -1,4 +1,3 @@\n-import TestRenderer from \"react-test-renderer\";\n import { v1 as uuid } from \"uuid\";\n \n import { pureMerge } from \"coral-common/utils\";\n@@ -427,23 +426,23 @@ it(\"suspend user\", async () => {\n     selector: \"tr\",\n   });\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(userRow).getByLabelText(\"Change user status\").props.onClick();\n   });\n \n   const popup = within(userRow).getByLabelText(\n     \"A dropdown to change the user status\"\n   );\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(popup).getByText(\"Suspend\", { selector: \"button\" }).props.onClick();\n   });\n \n   const modal = within(testRenderer.root).getByLabelText(\"Suspend\", {\n     exact: false,\n   });\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(modal).getByType(\"form\").props.onSubmit();\n   });\n   within(userRow).getByText(\"Suspended\");\n@@ -490,15 +489,15 @@ it(\"remove user suspension\", async () => {\n     selector: \"tr\",\n   });\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(userRow).getByLabelText(\"Change user status\").props.onClick();\n   });\n \n   const popup = within(userRow).getByLabelText(\n     \"A dropdown to change the user status\"\n   );\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(popup)\n       .getByText(\"Remove suspension\", { selector: \"button\" })\n       .props.onClick();\n@@ -539,15 +538,15 @@ it(\"suspend user with custom timeout\", async () => {\n     selector: \"tr\",\n   });\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(userRow).getByLabelText(\"Change user status\").props.onClick();\n   });\n \n   const popup = within(userRow).getByLabelText(\n     \"A dropdown to change the user status\"\n   );\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(popup).getByText(\"Suspend\", { selector: \"button\" }).props.onClick();\n   });\n \n@@ -557,11 +556,11 @@ it(\"suspend user with custom timeout\", async () => {\n \n   const changedDuration = within(modal).getByID(\"duration-604800\");\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     changedDuration.props.onChange(changedDuration.props.value.toString());\n   });\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(modal).getByType(\"form\").props.onSubmit();\n   });\n   within(userRow).getByText(\"Suspended\");\n@@ -599,15 +598,15 @@ it(\"suspend user with custom message\", async () => {\n     selector: \"tr\",\n   });\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(userRow).getByLabelText(\"Change user status\").props.onClick();\n   });\n \n   const popup = within(userRow).getByLabelText(\n     \"A dropdown to change the user status\"\n   );\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(popup).getByText(\"Suspend\", { selector: \"button\" }).props.onClick();\n   });\n \n@@ -617,17 +616,17 @@ it(\"suspend user with custom message\", async () => {\n \n   const toggleEdit = within(modal).getByID(\"suspendModal-editMessage\");\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     toggleEdit.props.onChange(true);\n   });\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(modal)\n       .getByID(\"suspendModal-message\")\n       .props.onChange(\"YOU WERE SUSPENDED FOR BEHAVING BADLY\");\n   });\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(modal).getByType(\"form\").props.onSubmit();\n   });\n \n@@ -665,15 +664,15 @@ it(\"ban user\", async () => {\n     selector: \"tr\",\n   });\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(userRow).getByLabelText(\"Change user status\").props.onClick();\n   });\n \n   const popup = within(userRow).getByLabelText(\n     \"A dropdown to change the user status\"\n   );\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(popup).getByText(\"Ban\", { selector: \"button\" }).props.onClick();\n   });\n \n@@ -684,7 +683,7 @@ it(\"ban user\", async () => {\n     }\n   );\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(modal).getByType(\"form\").props.onSubmit();\n   });\n   within(userRow).getByText(\"Banned\");\n@@ -722,15 +721,15 @@ it(\"ban user with custom message\", async () => {\n     selector: \"tr\",\n   });\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(userRow).getByLabelText(\"Change user status\").props.onClick();\n   });\n \n   const popup = within(userRow).getByLabelText(\n     \"A dropdown to change the user status\"\n   );\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(popup).getByText(\"Ban\", { selector: \"button\" }).props.onClick();\n   });\n \n@@ -743,17 +742,17 @@ it(\"ban user with custom message\", async () => {\n \n   const toggleMessage = within(modal).getByID(\"banModal-showMessage\");\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     toggleMessage.props.onChange(true);\n   });\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(modal)\n       .getByID(\"banModal-message\")\n       .props.onChange(\"YOU WERE BANNED FOR BREAKING THE RULES\");\n   });\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(modal).getByType(\"form\").props.onSubmit();\n   });\n   within(userRow).getByText(\"Banned\");\n@@ -802,15 +801,15 @@ it(\"remove user ban\", async () => {\n     selector: \"tr\",\n   });\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(userRow).getByLabelText(\"Change user status\").props.onClick();\n   });\n \n   const popup = within(userRow).getByLabelText(\n     \"A dropdown to change the user status\"\n   );\n \n-  TestRenderer.act(() => {\n+  act(() => {\n     within(popup)\n       .getByText(\"Remove ban\", { selector: \"button\" })\n       .props.onClick();"
    },
    {
      "sha": "87837a11c6db2fb940dd6bbdedf24bf58bc26462",
      "filename": "src/core/client/admin/test/configure/auth.spec.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/test/configure/auth.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/admin/test/configure/auth.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/test/configure/auth.spec.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -204,14 +204,13 @@ it(\"prevents stream lock out\", async () => {\n     window.confirm = stubCancel;\n     // Let's disable stream target in local auth.\n     act(() => streamTarget.props.onChange(false));\n-    within(streamTarget).debug();\n \n     // Send form\n     await act(async () => await form.props.onSubmit());\n \n     // Submit button should not be disabled because we canceled the submit.\n-    wait(() => expect(saveChanges.props.disabled).toBe(true));\n-    wait(() => {\n+    await wait(() => expect(saveChanges.props.disabled).toBe(false));\n+    await wait(() => {\n       expect(stubCancel.calledOnce).toBe(true);\n     });\n "
    },
    {
      "sha": "f563f4e214e8a7fafaa6b7205fcce2e581edb4da",
      "filename": "src/core/client/auth/App/AccountCompletion/AccountCompletionContainer.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/auth/App/AccountCompletion/AccountCompletionContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/auth/App/AccountCompletion/AccountCompletionContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/App/AccountCompletion/AccountCompletionContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -75,7 +75,7 @@ function handleAccountCompletion(props: Props) {\n       return false;\n     }\n     // all set, complete account.\n-    completeAccount({ accessToken: accessToken! });\n+    void completeAccount({ accessToken: accessToken! });\n \n     // account completed.\n     return true;"
    },
    {
      "sha": "0d76d7884b474cf0e95e1e78ede2c869902ca35c",
      "filename": "src/core/client/auth/index.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/auth/index.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/auth/index.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/index.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -30,4 +30,4 @@ async function main() {\n   ReactDOM.render(<Index />, document.getElementById(\"app\"));\n }\n \n-main();\n+void main();"
    },
    {
      "sha": "bc9c63c39b364b593631a3c6f529d4cf3bed0b17",
      "filename": "src/core/client/auth/test/signUp.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/auth/test/signUp.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/auth/test/signUp.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/test/signUp.spec.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -234,7 +234,7 @@ it(\"shows server error\", async () => {\n   expect(submitButton.props.disabled).toBe(true);\n \n   await act(async () => {\n-    wait(() => expect(submitButton.props.disabled).toBe(false));\n+    await wait(() => expect(submitButton.props.disabled).toBe(false));\n   });\n \n   within(main).getByText(\"Server Error\");"
    },
    {
      "sha": "43d9692fb774fea4ee9ab6407878c52023b00110",
      "filename": "src/core/client/auth/views/SignIn/SignInContainer.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/auth/views/SignIn/SignInContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/auth/views/SignIn/SignInContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/views/SignIn/SignInContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -44,7 +44,7 @@ const SignInContainer: FunctionComponent<Props> = ({\n   useEffect(() => {\n     return () => {\n       // Clear the error when we unmount.\n-      clearError();\n+      void clearError();\n     };\n   }, [clearError, auth]);\n "
    },
    {
      "sha": "20c8fe00e89bb85bd430cf6cf2d1be16dc9025f5",
      "filename": "src/core/client/framework/lib/bootstrap/createManaged.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/framework/lib/bootstrap/createManaged.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/framework/lib/bootstrap/createManaged.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/framework/lib/bootstrap/createManaged.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -162,7 +162,7 @@ function createManagedCoralContextProvider(\n     // This is called every time a user session starts or ends.\n     private clearSession = async (nextAccessToken?: string) => {\n       // Clear session storage.\n-      this.state.context.sessionStorage.clear();\n+      void this.state.context.sessionStorage.clear();\n \n       // Pause subscriptions.\n       subscriptionClient.pause();"
    },
    {
      "sha": "70c647425ebf0199f003ce67c358b81cabcd5b08",
      "filename": "src/core/client/framework/lib/relay/fetch.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/framework/lib/relay/fetch.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/framework/lib/relay/fetch.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/framework/lib/relay/fetch.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -93,7 +93,7 @@ export function useImmediateFetch<V extends {}, R>(\n       }, 100 + 50 * Math.random());\n     }\n \n-    doTheFetch();\n+    void doTheFetch();\n   }, Object.values(variables).concat(isUndefined(refetch) ? [] : [refetch]));\n \n   return [state, loading];"
    },
    {
      "sha": "106ae582cdcfb85f5fc95d6525bf1d1f6df2783a",
      "filename": "src/core/client/framework/lib/storage/PromisifiedStorage.spec.ts",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/framework/lib/storage/PromisifiedStorage.spec.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/framework/lib/storage/PromisifiedStorage.spec.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/framework/lib/storage/PromisifiedStorage.spec.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -5,22 +5,22 @@ it(\"should set and unset values\", async () => {\n   const storage = createPromisifiedStorage(createInMemoryStorage());\n   await expect(storage.setItem(\"test\", \"value\")).resolves.toBeUndefined();\n   await expect(storage.getItem(\"test\")).resolves.toBe(\"value\");\n-  storage.removeItem(\"test\");\n+  await storage.removeItem(\"test\");\n   await expect(storage.getItem(\"test\")).resolves.toBeNull();\n });\n \n it(\"should return length\", async () => {\n   const storage = createPromisifiedStorage(createInMemoryStorage());\n-  storage.setItem(\"a\", \"value\");\n-  storage.setItem(\"b\", \"value\");\n-  storage.setItem(\"c\", \"value\");\n+  await storage.setItem(\"a\", \"value\");\n+  await storage.setItem(\"b\", \"value\");\n+  await storage.setItem(\"c\", \"value\");\n   await expect(storage.length).resolves.toBe(3);\n });\n \n it(\"should nth value\", async () => {\n   const storage = createPromisifiedStorage(createInMemoryStorage());\n-  storage.setItem(\"a\", \"a\");\n-  storage.setItem(\"b\", \"b\");\n-  storage.setItem(\"c\", \"c\");\n+  await storage.setItem(\"a\", \"a\");\n+  await storage.setItem(\"b\", \"b\");\n+  await storage.setItem(\"c\", \"c\");\n   await expect(storage.key(2)).resolves.toBe(\"c\");\n });"
    },
    {
      "sha": "590f3e0f32485124fc6c9dfc2b8f169bcddd6316",
      "filename": "src/core/client/framework/lib/storage/PymStorage.spec.ts",
      "status": "modified",
      "additions": 18,
      "deletions": 18,
      "changes": 36,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/framework/lib/storage/PymStorage.spec.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/framework/lib/storage/PymStorage.spec.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/framework/lib/storage/PymStorage.spec.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -18,7 +18,7 @@ class PymStub {\n }\n \n describe(\"PymStorage\", () => {\n-  it(\"should set item\", () => {\n+  it(\"should set item\", async () => {\n     const pym = new PymStub(\"localStorage\");\n     const storage = createPymStorage(pym as any, \"localStorage\");\n     const promise = storage.setItem(\"test\", \"value\");\n@@ -28,10 +28,10 @@ describe(\"PymStorage\", () => {\n     expect(method).toBe(\"setItem\");\n     expect(parameters).toEqual({ key: \"test\", value: \"value\" });\n     pym.listeners[\"pymStorage.localStorage.response\"](JSON.stringify({ id }));\n-    expect(promise).resolves.toBeUndefined();\n+    await expect(promise).resolves.toBeUndefined();\n   });\n \n-  it(\"should remove item\", () => {\n+  it(\"should remove item\", async () => {\n     const pym = new PymStub(\"localStorage\");\n     const storage = createPymStorage(pym as any, \"localStorage\");\n     const promise = storage.removeItem(\"test\");\n@@ -41,10 +41,10 @@ describe(\"PymStorage\", () => {\n     expect(method).toBe(\"removeItem\");\n     expect(parameters).toEqual({ key: \"test\" });\n     pym.listeners[\"pymStorage.localStorage.response\"](JSON.stringify({ id }));\n-    expect(promise).resolves.toBeUndefined();\n+    await expect(promise).resolves.toBeUndefined();\n   });\n \n-  it(\"should get item\", () => {\n+  it(\"should get item\", async () => {\n     const pym = new PymStub(\"localStorage\");\n     const storage = createPymStorage(pym as any, \"localStorage\");\n     const promise = storage.getItem(\"test\");\n@@ -56,10 +56,10 @@ describe(\"PymStorage\", () => {\n     pym.listeners[\"pymStorage.localStorage.response\"](\n       JSON.stringify({ id, result: \"value\" })\n     );\n-    expect(promise).resolves.toBe(\"value\");\n+    await expect(promise).resolves.toBe(\"value\");\n   });\n \n-  it(\"should get length\", () => {\n+  it(\"should get length\", async () => {\n     const pym = new PymStub(\"localStorage\");\n     const storage = createPymStorage(pym as any, \"localStorage\");\n     const promise = storage.length;\n@@ -71,10 +71,10 @@ describe(\"PymStorage\", () => {\n     pym.listeners[\"pymStorage.localStorage.response\"](\n       JSON.stringify({ id, result: 3 })\n     );\n-    expect(promise).resolves.toBe(3);\n+    await expect(promise).resolves.toBe(3);\n   });\n \n-  it(\"should get key\", () => {\n+  it(\"should get key\", async () => {\n     const pym = new PymStub(\"localStorage\");\n     const storage = createPymStorage(pym as any, \"localStorage\");\n     const promise = storage.key(2);\n@@ -86,10 +86,10 @@ describe(\"PymStorage\", () => {\n     pym.listeners[\"pymStorage.localStorage.response\"](\n       JSON.stringify({ id, result: \"myKey\" })\n     );\n-    expect(promise).resolves.toBe(\"myKey\");\n+    await expect(promise).resolves.toBe(\"myKey\");\n   });\n \n-  it(\"should clear\", () => {\n+  it(\"should clear\", async () => {\n     const pym = new PymStub(\"localStorage\");\n     const storage = createPymStorage(pym as any, \"localStorage\");\n     const promise = storage.clear();\n@@ -99,11 +99,11 @@ describe(\"PymStorage\", () => {\n     expect(method).toBe(\"clear\");\n     expect(parameters).toEqual({});\n     pym.listeners[\"pymStorage.localStorage.response\"](JSON.stringify({ id }));\n-    expect(promise).resolves.toBeUndefined();\n+    await expect(promise).resolves.toBeUndefined();\n   });\n \n   describe(\"on error\", () => {\n-    it(\"should reject set item\", () => {\n+    it(\"should reject set item\", async () => {\n       const pym = new PymStub(\"localStorage\");\n       const storage = createPymStorage(pym as any, \"localStorage\");\n       const promise = storage.setItem(\"test\", \"value\");\n@@ -113,9 +113,9 @@ describe(\"PymStorage\", () => {\n       pym.listeners[\"pymStorage.localStorage.error\"](\n         JSON.stringify({ id, error: \"error\" })\n       );\n-      expect(promise).rejects.toThrow(new Error(\"error\"));\n+      await expect(promise).rejects.toThrow(new Error(\"error\"));\n     });\n-    it(\"should reject remove item\", () => {\n+    it(\"should reject remove item\", async () => {\n       const pym = new PymStub(\"localStorage\");\n       const storage = createPymStorage(pym as any, \"localStorage\");\n       const promise = storage.removeItem(\"test\");\n@@ -125,9 +125,9 @@ describe(\"PymStorage\", () => {\n       pym.listeners[\"pymStorage.localStorage.error\"](\n         JSON.stringify({ id, error: \"error\" })\n       );\n-      expect(promise).rejects.toThrow(new Error(\"error\"));\n+      await expect(promise).rejects.toThrow(new Error(\"error\"));\n     });\n-    it(\"should reject get item\", () => {\n+    it(\"should reject get item\", async () => {\n       const pym = new PymStub(\"localStorage\");\n       const storage = createPymStorage(pym as any, \"localStorage\");\n       const promise = storage.getItem(\"test\");\n@@ -137,7 +137,7 @@ describe(\"PymStorage\", () => {\n       pym.listeners[\"pymStorage.localStorage.error\"](\n         JSON.stringify({ id, error: \"error\" })\n       );\n-      expect(promise).rejects.toThrow(new Error(\"error\"));\n+      await expect(promise).rejects.toThrow(new Error(\"error\"));\n     });\n   });\n });"
    },
    {
      "sha": "1f5fd7dfb644002dbf2c074518b16981bfafc841",
      "filename": "src/core/client/framework/testHelpers/createTestRenderer.tsx",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/framework/testHelpers/createTestRenderer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/framework/testHelpers/createTestRenderer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/framework/testHelpers/createTestRenderer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -14,7 +14,7 @@ import {\n import { PostMessageService } from \"coral-framework/lib/postMessage\";\n import { RestClient } from \"coral-framework/lib/rest\";\n import { createPromisifiedStorage } from \"coral-framework/lib/storage\";\n-import { createUUIDGenerator } from \"coral-framework/testHelpers\";\n+import { act, createUUIDGenerator } from \"coral-framework/testHelpers\";\n \n import createFluentBundle from \"./createFluentBundle\";\n import createRelayEnvironment from \"./createRelayEnvironment\";\n@@ -35,8 +35,8 @@ export interface Resolvers<Q extends Resolver<any, any> = any, M = any> {\n }\n \n export interface TestResolvers<T extends Resolvers = any> {\n-  Query?: { [P in keyof Required<T>[\"Query\"]]: () => any };\n-  Mutation?: { [P in keyof Required<T>[\"Mutation\"]]: () => any };\n+  Query?: { [P in keyof Required<T>[\"Query\"]]?: () => any };\n+  Mutation?: { [P in keyof Required<T>[\"Mutation\"]]?: () => any };\n }\n \n function createNodeMock(element: React.ReactElement<any>) {\n@@ -111,7 +111,7 @@ export default function createTestRenderer<\n   };\n \n   let testRenderer: ReactTestRenderer;\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer = TestRenderer.create(\n       <CoralContextProvider value={context}>{element}</CoralContextProvider>,\n       { createNodeMock }"
    },
    {
      "sha": "6719ce3470e1127fc5dfdde416ba3ab95f594174",
      "filename": "src/core/client/framework/types.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/framework/types.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/framework/types.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/framework/types.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -3,3 +3,4 @@ export { Overwrite, PropTypesOf } from \"coral-ui/types\";\n export { DeepPartial } from \"coral-common/types\";\n \n export type RelayEnumLiteral<T> = keyof T | \"%future added value\";\n+export type OmitRefType<T> = Omit<T, \" $refType\">;"
    },
    {
      "sha": "1c783592939426cbaba44c19a69b3263385b084c",
      "filename": "src/core/client/install/App/App.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/install/App/App.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/install/App/App.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/install/App/App.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -33,7 +33,7 @@ const App: FunctionComponent = () => {\n       }\n     }\n \n-    check();\n+    void check();\n   }, []);\n \n   return ("
    },
    {
      "sha": "84b45d8ee1972b0eb5003dd51b3d6056511bef15",
      "filename": "src/core/client/install/index.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/install/index.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/install/index.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/install/index.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -30,4 +30,4 @@ async function main() {\n   ReactDOM.render(<Index />, document.getElementById(\"app\"));\n }\n \n-main();\n+void main();"
    },
    {
      "sha": "262766c07ea90a9fdc7f12759bb6e4f43ad5bdda",
      "filename": "src/core/client/stream/App/SetActiveTabMutation.spec.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/App/SetActiveTabMutation.spec.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/App/SetActiveTabMutation.spec.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/App/SetActiveTabMutation.spec.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -16,12 +16,12 @@ beforeAll(() => {\n   });\n });\n \n-it(\"Sets activeTab\", () => {\n+it(\"Sets activeTab\", async () => {\n   const tab = \"COMMENTS\";\n   const eventEmitter = new EventEmitter2();\n   const mock = sinon.mock(eventEmitter);\n   mock.expects(\"emit\").withArgs(\"setMainTab\", { tab });\n-  commit(environment, { tab }, { eventEmitter });\n+  await commit(environment, { tab }, { eventEmitter });\n   expect(source.get(LOCAL_ID)!.activeTab).toEqual(tab);\n   mock.verify();\n });"
    },
    {
      "sha": "0805ca9bb48ceecf9e721721fdd3dabd5a73ccbd",
      "filename": "src/core/client/stream/App/TabBarContainer.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/App/TabBarContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/App/TabBarContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/App/TabBarContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -28,7 +28,7 @@ interface Props {\n \n export class TabBarContainer extends Component<Props> {\n   private handleSetActiveTab = (tab: SetActiveTabInput[\"tab\"]) => {\n-    this.props.setActiveTab({ tab });\n+    void this.props.setActiveTab({ tab });\n   };\n \n   public render() {"
    },
    {
      "sha": "73106b45d7a31b5bc7029e8b7e48e9ab18a26bbc",
      "filename": "src/core/client/stream/App/listeners/OnPostMessageSetAccessToken.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/App/listeners/OnPostMessageSetAccessToken.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/App/listeners/OnPostMessageSetAccessToken.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/App/listeners/OnPostMessageSetAccessToken.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -16,7 +16,7 @@ export class OnPostMessageSetAccessToken extends Component<Props> {\n     super(props);\n     // Auth popup will use this to handle a successful login.\n     props.postMessage.on(\"setAccessToken\", (accessToken: string) => {\n-      props.setAccessToken({ accessToken });\n+      void props.setAccessToken({ accessToken });\n       SignedInEvent.emit(props.eventEmitter);\n     });\n   }"
    },
    {
      "sha": "f5742972139c0781f075c566f79dbe1c8c2493e1",
      "filename": "src/core/client/stream/App/listeners/OnPymLogin.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/App/listeners/OnPymLogin.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/App/listeners/OnPymLogin.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/App/listeners/OnPymLogin.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -16,7 +16,7 @@ export class OnPymLogin extends Component<Props> {\n \n     // Sets comment id through pym.\n     props.pym.onMessage(\"login\", (accessToken) => {\n-      this.props.setAccessToken({ accessToken });\n+      void this.props.setAccessToken({ accessToken });\n     });\n   }\n "
    },
    {
      "sha": "864289d72f5a5f808efa0e123923798ec03578bf",
      "filename": "src/core/client/stream/App/listeners/OnPymLogout.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/App/listeners/OnPymLogout.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/App/listeners/OnPymLogout.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/App/listeners/OnPymLogout.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -18,7 +18,7 @@ export class OnPymLogout extends Component<Props> {\n \n     // Sets comment id through pym.\n     props.pym.onMessage(\"logout\", (accessToken) => {\n-      this.props.signOut();\n+      void this.props.signOut();\n     });\n   }\n "
    },
    {
      "sha": "1b43391001048f6e307b2671d8645721247458a9",
      "filename": "src/core/client/stream/common/UserBox/SetAuthPopupStateMutation.spec.ts",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/common/UserBox/SetAuthPopupStateMutation.spec.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/common/UserBox/SetAuthPopupStateMutation.spec.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/common/UserBox/SetAuthPopupStateMutation.spec.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -20,14 +20,14 @@ beforeAll(() => {\n   });\n });\n \n-it(\"sets state\", () => {\n-  commit(environment, { open: true, focus: false });\n+it(\"sets state\", async () => {\n+  await commit(environment, { open: true, focus: false });\n   expect(source.get(AUTH_POPUP_ID)!.open).toEqual(true);\n   expect(source.get(AUTH_POPUP_ID)!.focus).toEqual(false);\n });\n \n-it(\"sets state\", () => {\n-  commit(environment, {\n+it(\"sets state\", async () => {\n+  await commit(environment, {\n     open: false,\n     focus: true,\n     href: \"https://coralproject.net\",\n@@ -37,16 +37,16 @@ it(\"sets state\", () => {\n   expect(source.get(AUTH_POPUP_ID)!.href).toEqual(\"https://coralproject.net\");\n });\n \n-it(\"keep previous state\", () => {\n-  commit(environment, { open: false, focus: true });\n-  commit(environment, {});\n+it(\"keep previous state\", async () => {\n+  await commit(environment, { open: false, focus: true });\n+  await commit(environment, {});\n   expect(source.get(AUTH_POPUP_ID)!.open).toEqual(false);\n   expect(source.get(AUTH_POPUP_ID)!.focus).toEqual(true);\n });\n \n-it(\"change only one\", () => {\n-  commit(environment, { open: false, focus: true });\n-  commit(environment, { open: true });\n+it(\"change only one\", async () => {\n+  await commit(environment, { open: false, focus: true });\n+  await commit(environment, { open: true });\n   expect(source.get(AUTH_POPUP_ID)!.open).toEqual(true);\n   expect(source.get(AUTH_POPUP_ID)!.focus).toEqual(true);\n });"
    },
    {
      "sha": "341f0b16425dc25896186d24f0fa8c2b2445a266",
      "filename": "src/core/client/stream/common/useHandleIncompleteAccount.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/common/useHandleIncompleteAccount.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/common/useHandleIncompleteAccount.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/common/useHandleIncompleteAccount.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -22,7 +22,7 @@ const useHandleIncompleteAccount = () => {\n       ) {\n         // eslint-disable-next-line\n         console.log(\"Coral: User account is incomplete. Perform logout.\")\n-        signOut();\n+        void signOut();\n         return true;\n       }\n       return false;"
    },
    {
      "sha": "9d842b5ae5c9ed1b9b3e0fab7db78ef18209b8ec",
      "filename": "src/core/client/stream/index.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/index.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/index.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/index.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -35,4 +35,4 @@ async function main() {\n   ReactDOM.render(<Index />, document.getElementById(\"app\"));\n }\n \n-main();\n+void main();"
    },
    {
      "sha": "b33aeacab8e3d9335b558073774b12e7cbffef2f",
      "filename": "src/core/client/stream/mutations/SetCommentIDMutation.spec.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/mutations/SetCommentIDMutation.spec.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/mutations/SetCommentIDMutation.spec.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/mutations/SetCommentIDMutation.spec.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -24,9 +24,9 @@ afterEach(() => {\n   window.history.replaceState(previousState, document.title, previousLocation);\n });\n \n-it(\"Sets comment id\", () => {\n+it(\"Sets comment id\", async () => {\n   const id = \"comment1-id\";\n-  commit(environment, { id }, {} as any);\n+  await commit(environment, { id }, {} as any);\n   expect(source.get(LOCAL_ID)!.commentID).toEqual(id);\n   expect(parseQuery(location.search).commentID).toEqual(id);\n });\n@@ -38,7 +38,7 @@ it(\"Should call setCommentID in pym\", async () => {\n       sendMessage: sinon.mock().once().withArgs(\"setCommentID\", id),\n     },\n   };\n-  commit(environment, { id }, context as any);\n+  await commit(environment, { id }, context as any);\n   await timeout();\n   expect(source.get(LOCAL_ID)!.commentID).toEqual(id);\n   context.pym.sendMessage.verify();\n@@ -50,7 +50,7 @@ it(\"Should call setCommentID in pym with empty id\", async () => {\n       sendMessage: sinon.mock().once().withArgs(\"setCommentID\", \"\"),\n     },\n   };\n-  commit(environment, { id: null }, context as any);\n+  await commit(environment, { id: null }, context as any);\n   await timeout();\n   expect(source.get(LOCAL_ID)!.commentID).toEqual(null);\n   expect(parseQuery(location.search).commentID).toBeUndefined();"
    },
    {
      "sha": "c8ffdcbc5ec062b5b28f3d3ba29ad2650d2160e2",
      "filename": "src/core/client/stream/mutations/ShowAuthPopupMutation.spec.ts",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/mutations/ShowAuthPopupMutation.spec.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/mutations/ShowAuthPopupMutation.spec.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/mutations/ShowAuthPopupMutation.spec.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -23,36 +23,36 @@ beforeEach(() => {\n   });\n });\n \n-it(\"emits ShowAuthPopupEvent and LoginPromptEvent on SIGN_IN\", () => {\n+it(\"emits ShowAuthPopupEvent and LoginPromptEvent on SIGN_IN\", async () => {\n   const view = \"SIGN_IN\";\n   const eventEmitter = new EventEmitter2();\n   const mock = sinon.mock(eventEmitter);\n   mock.expects(\"emit\").withArgs(\"loginPrompt\");\n   mock.expects(\"emit\").withArgs(\"showAuthPopup\", { view });\n-  commit(environment, { view }, { eventEmitter });\n+  await commit(environment, { view }, { eventEmitter });\n   mock.verify();\n });\n \n-it(\"emits only ShowAuthPopupEvent on other views\", () => {\n+it(\"emits only ShowAuthPopupEvent on other views\", async () => {\n   const view = \"FORGOT_PASSWORD\";\n   const eventEmitter = new EventEmitter2();\n   const mock = sinon.mock(eventEmitter);\n   mock.expects(\"emit\").withArgs(\"showAuthPopup\", { view });\n-  commit(environment, { view }, { eventEmitter });\n+  await commit(environment, { view }, { eventEmitter });\n   mock.verify();\n });\n \n-it(\"opens popup or focus if already open\", () => {\n+it(\"opens popup or focus if already open\", async () => {\n   const view = \"SIGN_IN\";\n   const context = {\n     eventEmitter: new EventEmitter2(),\n   };\n-  commit(environment, { view }, context);\n+  await commit(environment, { view }, context);\n   expect(source.get(AUTH_POPUP_ID)!.open).toEqual(true);\n   expect(source.get(AUTH_POPUP_ID)!.focus).toEqual(false);\n   expect(source.get(AUTH_POPUP_ID)!.view).toEqual(\"SIGN_IN\");\n \n-  commit(environment, { view }, context);\n+  await commit(environment, { view }, context);\n   expect(source.get(AUTH_POPUP_ID)!.open).toEqual(true);\n   expect(source.get(AUTH_POPUP_ID)!.focus).toEqual(true);\n });"
    },
    {
      "sha": "d5e051a7806bd1799bd9a9861256f3cf824ae8c7",
      "filename": "src/core/client/stream/tabs/Comments/Comment/CommentContainer.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Comment/CommentContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Comment/CommentContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/CommentContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -144,7 +144,7 @@ export class CommentContainer extends Component<Props, State> {\n         };\n       });\n     } else {\n-      this.props.showAuthPopup({ view: \"SIGN_IN\" });\n+      void this.props.showAuthPopup({ view: \"SIGN_IN\" });\n     }\n   };\n \n@@ -157,7 +157,7 @@ export class CommentContainer extends Component<Props, State> {\n         showEditDialog: true,\n       }));\n     } else {\n-      this.props.showAuthPopup({ view: \"SIGN_IN\" });\n+      void this.props.showAuthPopup({ view: \"SIGN_IN\" });\n     }\n   };\n \n@@ -189,7 +189,7 @@ export class CommentContainer extends Component<Props, State> {\n       from: \"COMMENT_STREAM\",\n     });\n     e.preventDefault();\n-    this.props.setCommentID({ id: this.props.comment.id });\n+    void this.props.setCommentID({ id: this.props.comment.id });\n     return false;\n   };\n "
    },
    {
      "sha": "5877c26bfe6f95dd407ccf07152362fdc65ec054",
      "filename": "src/core/client/stream/tabs/Comments/Comment/ModerationDropdown/ModerationActionsContainer.tsx",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Comment/ModerationDropdown/ModerationActionsContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Comment/ModerationDropdown/ModerationActionsContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/ModerationDropdown/ModerationActionsContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -51,7 +51,10 @@ const ModerationActionsContainer: FunctionComponent<Props> = ({\n     if (!comment.revision) {\n       return;\n     }\n-    approve({ commentID: comment.id, commentRevisionID: comment.revision.id });\n+    void approve({\n+      commentID: comment.id,\n+      commentRevisionID: comment.revision.id,\n+    });\n   }, [approve, comment]);\n   const onReject = useCallback(async () => {\n     if (!comment.revision) {\n@@ -67,15 +70,15 @@ const ModerationActionsContainer: FunctionComponent<Props> = ({\n     if (!comment.revision) {\n       return;\n     }\n-    feature({\n+    void feature({\n       storyID: story.id,\n       commentID: comment.id,\n       commentRevisionID: comment.revision.id,\n     });\n     onDismiss();\n   }, [feature, onDismiss, story, comment]);\n   const onUnfeature = useCallback(() => {\n-    unfeature({\n+    void unfeature({\n       commentID: comment.id,\n       storyID: story.id,\n     });"
    },
    {
      "sha": "01bd45bdb8cff33c45effba9e8996efc66cbab03",
      "filename": "src/core/client/stream/tabs/Comments/Comment/ReactionButton/CreateCommentReactionMutation.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Comment/ReactionButton/CreateCommentReactionMutation.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Comment/ReactionButton/CreateCommentReactionMutation.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/ReactionButton/CreateCommentReactionMutation.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -71,7 +71,7 @@ async function commit(\n               },\n               actionCounts: {\n                 reaction: {\n-                  total: currentCount + 1,\n+                  total: (currentCount as number) + 1,\n                 },\n               },\n             } as any,"
    },
    {
      "sha": "fdf6d73e8204bf479ac956511e2af25c6c2a863d",
      "filename": "src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/ReplyCommentFormContainer.tsx",
      "status": "modified",
      "additions": 8,
      "deletions": 5,
      "changes": 13,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/ReplyCommentFormContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/ReplyCommentFormContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/ReplyCommentForm/ReplyCommentFormContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -65,7 +65,7 @@ export class ReplyCommentFormContainer extends Component<Props, State> {\n \n   constructor(props: Props) {\n     super(props);\n-    this.init();\n+    void this.init();\n   }\n \n   private handleRTERef = (rte: CoralRTE | null) => {\n@@ -91,7 +91,7 @@ export class ReplyCommentFormContainer extends Component<Props, State> {\n   }\n \n   private handleOnCancelOrDismiss = () => {\n-    this.props.sessionStorage.removeItem(this.contextKey);\n+    void this.props.sessionStorage.removeItem(this.contextKey);\n     if (this.props.onClose) {\n       this.props.onClose();\n     }\n@@ -119,7 +119,7 @@ export class ReplyCommentFormContainer extends Component<Props, State> {\n         })\n       );\n       if (submitStatus !== \"RETRY\") {\n-        this.props.sessionStorage.removeItem(this.contextKey);\n+        void this.props.sessionStorage.removeItem(this.contextKey);\n         if (submitStatus === \"APPROVED\" && this.props.onClose) {\n           this.props.onClose();\n           return;\n@@ -150,9 +150,12 @@ export class ReplyCommentFormContainer extends Component<Props, State> {\n \n   private handleOnChange: ReplyCommentFormProps[\"onChange\"] = (state, form) => {\n     if (state.values.body) {\n-      this.props.sessionStorage.setItem(this.contextKey, state.values.body);\n+      void this.props.sessionStorage.setItem(\n+        this.contextKey,\n+        state.values.body\n+      );\n     } else {\n-      this.props.sessionStorage.removeItem(this.contextKey);\n+      void this.props.sessionStorage.removeItem(this.contextKey);\n     }\n     // Reset errors whenever user clears the form.\n     if (state.touched && state.touched.body && !state.values.body) {"
    },
    {
      "sha": "a07a0d08c109997f2999aef687d51a591aa2c322",
      "filename": "src/core/client/stream/tabs/Comments/Comment/ReportFlow/ReportButton.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Comment/ReportFlow/ReportButton.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Comment/ReportFlow/ReportButton.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/ReportFlow/ReportButton.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -50,7 +50,7 @@ const ReportButton: FunctionComponent<Props> = ({\n   }, [comment]);\n \n   const signIn = useCallback(() => {\n-    showAuthPopup({ view: \"SIGN_IN\" });\n+    void showAuthPopup({ view: \"SIGN_IN\" });\n   }, [showAuthPopup]);\n \n   if (isReported) {"
    },
    {
      "sha": "effdadd5daffa1edb802f907868f10352ac220b3",
      "filename": "src/core/client/stream/tabs/Comments/Comment/ShowConversationLink.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Comment/ShowConversationLink.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Comment/ShowConversationLink.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/ShowConversationLink.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -44,7 +44,7 @@ const ShowConversationLink: FunctionComponent<ShowConversationLinkProps> = (\n         target=\"_parent\"\n         anchor\n       >\n-        Read More of this Conversation >\n+        Read More of this Conversation &gt;\n       </Button>\n     </Localized>\n   );"
    },
    {
      "sha": "206a9fa091c1762b648cd50e1247075d61dbe80e",
      "filename": "src/core/client/stream/tabs/Comments/Comment/UserBanPopover/UserBanPopoverContainer.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Comment/UserBanPopover/UserBanPopoverContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Comment/UserBanPopover/UserBanPopoverContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/UserBanPopover/UserBanPopoverContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -35,7 +35,7 @@ const UserBanPopoverContainer: FunctionComponent<Props> = ({\n   const { localeBundles } = useCoralContext();\n \n   const onBan = useCallback(() => {\n-    banUser({\n+    void banUser({\n       userID: user.id,\n       commentID: comment.id,\n       rejectExistingComments: false,\n@@ -47,7 +47,7 @@ const UserBanPopoverContainer: FunctionComponent<Props> = ({\n       ),\n     });\n     if (!rejected && comment.revision) {\n-      reject({\n+      void reject({\n         commentID: comment.id,\n         commentRevisionID: comment.revision.id,\n         storyID: story.id,"
    },
    {
      "sha": "5173b531f3391ef989e53901eac6d4076ec37b59",
      "filename": "src/core/client/stream/tabs/Comments/Comment/UserIgnorePopover/UserIgnorePopoverContainer.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Comment/UserIgnorePopover/UserIgnorePopoverContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Comment/UserIgnorePopover/UserIgnorePopoverContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/UserIgnorePopover/UserIgnorePopoverContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -25,7 +25,7 @@ export const UserIgnorePopoverContainer: FunctionComponent<Props> = ({\n }) => {\n   const ignoreUser = useMutation(IgnoreUserMutation);\n   const onIgnore = useCallback(() => {\n-    ignoreUser({ userID: user.id });\n+    void ignoreUser({ userID: user.id });\n     onDismiss();\n   }, [user.id, ignoreUser]);\n   return ("
    },
    {
      "sha": "789d175bdeb22696b611f7d3850d6199fc167eb0",
      "filename": "src/core/client/stream/tabs/Comments/PermalinkView/PermalinkViewContainer.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/PermalinkView/PermalinkViewContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/PermalinkView/PermalinkViewContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/PermalinkView/PermalinkViewContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -36,7 +36,7 @@ class PermalinkViewContainer extends React.Component<\n     ViewFullDiscussionEvent.emit(this.props.eventEmitter, {\n       commentID: this.props.comment && this.props.comment.id,\n     });\n-    this.props.setCommentID({ id: null });\n+    void this.props.setCommentID({ id: null });\n     e.preventDefault();\n   };\n   private getShowAllCommentsHref() {"
    },
    {
      "sha": "46cdf9241b4eff26ccf3ef5811f57e57204cf300",
      "filename": "src/core/client/stream/tabs/Comments/ReplyList/ReplyListContainer.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/ReplyList/ReplyListContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/ReplyList/ReplyListContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/ReplyList/ReplyListContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -107,7 +107,7 @@ export const ReplyListContainer: React.FunctionComponent<Props> = (props) => {\n \n   const viewNew = useMutation(ReplyListViewNewMutation);\n   const onViewNew = useCallback(() => {\n-    viewNew({ commentID: props.comment.id });\n+    void viewNew({ commentID: props.comment.id });\n   }, [props.comment.id, viewNew]);\n \n   const viewNewCount ="
    },
    {
      "sha": "d3c091d4f33f865241b8d27a04107615fbb99f93",
      "filename": "src/core/client/stream/tabs/Comments/Stream/Announcement/AnnouncementContainer.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Stream/Announcement/AnnouncementContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Stream/Announcement/AnnouncementContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/Announcement/AnnouncementContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -32,7 +32,7 @@ export const AnnouncementContainer: FunctionComponent<Props> = ({\n         }\n       }\n     }\n-    getDismissedStatus();\n+    void getDismissedStatus();\n   }, [settings]);\n   const dismissAnnouncement = useCallback(async () => {\n     if (settings.announcement) {"
    },
    {
      "sha": "f0f74c51f5ea4bda152d6f353fc3747d8600aa94",
      "filename": "src/core/client/stream/tabs/Comments/Stream/AnsweredCommentsTab/AnsweredCommentContainer.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Stream/AnsweredCommentsTab/AnsweredCommentContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Stream/AnsweredCommentsTab/AnsweredCommentContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/AnsweredCommentsTab/AnsweredCommentContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -49,7 +49,7 @@ const AnsweredCommentContainer: FunctionComponent<Props> = (props) => {\n         from: \"FEATURED_COMMENTS\",\n         commentID: comment.id,\n       });\n-      setCommentID({ id: comment.id });\n+      void setCommentID({ id: comment.id });\n       return false;\n     },\n     [setCommentID, comment]"
    },
    {
      "sha": "a74574e02e26fa650f484fcc19fd8b0f3fcbadf1",
      "filename": "src/core/client/stream/tabs/Comments/Stream/DeleteAccount/StreamDeletionRequestCalloutContainer.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Stream/DeleteAccount/StreamDeletionRequestCalloutContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Stream/DeleteAccount/StreamDeletionRequestCalloutContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/DeleteAccount/StreamDeletionRequestCalloutContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -39,7 +39,7 @@ const StreamDeletionRequestCalloutContainer: FunctionComponent<Props> = ({\n \n   const cancelAccountDeletion = useMutation(CancelAccountDeletionMutation);\n   const cancelDeletion = useCallback(() => {\n-    cancelAccountDeletion();\n+    void cancelAccountDeletion();\n   }, [cancelAccountDeletion]);\n \n   const deletionDate = viewer.scheduledDeletionDate"
    },
    {
      "sha": "dda85514c2d154a7b27f9e6b2556b0b416cab509",
      "filename": "src/core/client/stream/tabs/Comments/Stream/FeaturedComments/FeaturedCommentContainer.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Stream/FeaturedComments/FeaturedCommentContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Stream/FeaturedComments/FeaturedCommentContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/FeaturedComments/FeaturedCommentContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -50,7 +50,7 @@ const FeaturedCommentContainer: FunctionComponent<Props> = (props) => {\n         from: \"FEATURED_COMMENTS\",\n         commentID: comment.id,\n       });\n-      setCommentID({ id: comment.id });\n+      void setCommentID({ id: comment.id });\n       return false;\n     },\n     [setCommentID, comment]"
    },
    {
      "sha": "20cfe3b4a7666a3fbb78579af72d1569cc44f03d",
      "filename": "src/core/client/stream/tabs/Comments/Stream/PostCommentForm/PostCommentFormContainer.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Stream/PostCommentForm/PostCommentFormContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Stream/PostCommentForm/PostCommentFormContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/PostCommentForm/PostCommentFormContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -92,7 +92,7 @@ export class PostCommentFormContainer extends Component<Props, State> {\n     // Restore comment draft, if available.\n     this.state.notLoggedInDraft = preserveNotLoggedInDraft;\n     preserveNotLoggedInDraft = \"\";\n-    this.init();\n+    void this.init();\n   }\n \n   public componentWillUnmount() {\n@@ -168,9 +168,9 @@ export class PostCommentFormContainer extends Component<Props, State> {\n       this.setState({ submitStatus: null });\n     }\n     if (state.values.body) {\n-      this.props.sessionStorage.setItem(contextKey, state.values.body);\n+      void this.props.sessionStorage.setItem(contextKey, state.values.body);\n     } else {\n-      this.props.sessionStorage.removeItem(contextKey);\n+      void this.props.sessionStorage.removeItem(contextKey);\n     }\n \n     // Reset errors whenever user clears the form."
    },
    {
      "sha": "463ce86b06fe3b78d8bf15c97ab1c7a6b43c66db",
      "filename": "src/core/client/stream/tabs/Comments/Stream/StoryClosedTimeout/StoryClosedTimeoutContainer.tsx",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Stream/StoryClosedTimeout/StoryClosedTimeoutContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Comments/Stream/StoryClosedTimeout/StoryClosedTimeoutContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/StoryClosedTimeout/StoryClosedTimeoutContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -49,7 +49,10 @@ class StoryClosedTimeoutContainer extends React.Component<Props> {\n \n   private handleClose = () => {\n     this.timer = null;\n-    this.props.setStoryClosed({ storyID: this.props.story.id, isClosed: true });\n+    void this.props.setStoryClosed({\n+      storyID: this.props.story.id,\n+      isClosed: true,\n+    });\n   };\n \n   public render() {"
    },
    {
      "sha": "499f2e9631bb0580b261097055fce2db5c338efa",
      "filename": "src/core/client/stream/tabs/Configure/AddMessage/AddMessageOpen.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Configure/AddMessage/AddMessageOpen.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Configure/AddMessage/AddMessageOpen.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Configure/AddMessage/AddMessageOpen.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -43,7 +43,7 @@ const AddMessageOpen: FunctionComponent<Props> = ({\n         return;\n       }\n \n-      updateMutation({\n+      void updateMutation({\n         id: storyID,\n         settings: {\n           messageBox: {\n@@ -58,7 +58,7 @@ const AddMessageOpen: FunctionComponent<Props> = ({\n     [updateMutation, setShowSuccess]\n   );\n   const onRemoveClicked = useCallback(() => {\n-    updateMutation({\n+    void updateMutation({\n       id: storyID,\n       settings: {\n         messageBox: { icon: \"\", content: \"\", enabled: false },"
    },
    {
      "sha": "93a80e915d4152d0694c8767fd472db8121f2e5f",
      "filename": "src/core/client/stream/tabs/Configure/ConfigureQuery.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Configure/ConfigureQuery.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Configure/ConfigureQuery.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Configure/ConfigureQuery.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -19,7 +19,7 @@ const loadConfigureContainer = () =>\n   import(\"./ConfigureContainer\" /* webpackChunkName: \"configure\" */).then(\n     (x) => {\n       // New css is loaded, take care of polyfilling those css vars for IE11.\n-      polyfillCSSVarsForIE11();\n+      void polyfillCSSVarsForIE11();\n       return x;\n     }\n   );"
    },
    {
      "sha": "96b256e5e380504bba8b20537fc1771900c11e1d",
      "filename": "src/core/client/stream/tabs/Configure/OpenOrCloseStream/OpenOrCloseStreamContainer.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Configure/OpenOrCloseStream/OpenOrCloseStreamContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Configure/OpenOrCloseStream/OpenOrCloseStreamContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Configure/OpenOrCloseStream/OpenOrCloseStreamContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -36,9 +36,9 @@ const OpenOrCloseStreamContainer: FunctionComponent<Props> = ({\n     if (!waiting) {\n       setWaiting(true);\n       if (story.isClosed) {\n-        openStory({ id: story.id });\n+        await openStory({ id: story.id });\n       } else {\n-        closeStory({ id: story.id });\n+        await closeStory({ id: story.id });\n       }\n       setWaiting(false);\n       setShowSuccess(true);"
    },
    {
      "sha": "f24c29d6dae33cd8d284f79eff0e930074b5f168",
      "filename": "src/core/client/stream/tabs/Configure/Q&A/ExpertSelectionContainer.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Configure/Q&A/ExpertSelectionContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Configure/Q&A/ExpertSelectionContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Configure/Q&A/ExpertSelectionContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -117,7 +117,7 @@ const ExpertSelectionContainer: FunctionComponent<Props> = ({\n \n   const onAddExpert = useCallback(\n     (id: string) => {\n-      addExpertMutation({\n+      void addExpertMutation({\n         storyID,\n         userID: id,\n       });\n@@ -127,7 +127,7 @@ const ExpertSelectionContainer: FunctionComponent<Props> = ({\n   );\n   const onRemoveExpert = useCallback(\n     (id: string, username: string | null, email: string | null) => {\n-      removeExpertMutation({\n+      void removeExpertMutation({\n         storyID,\n         userID: id,\n       });"
    },
    {
      "sha": "3e69491d0d05f1cf4f04a3d616e216b07a42c353",
      "filename": "src/core/client/stream/tabs/Profile/DeletionRequest/DeletionRequestCalloutContainer.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Profile/DeletionRequest/DeletionRequestCalloutContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Profile/DeletionRequest/DeletionRequestCalloutContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Profile/DeletionRequest/DeletionRequestCalloutContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -27,7 +27,7 @@ const DeletionRequestCalloutContainer: FunctionComponent<Props> = ({\n \n   const cancelDeletionMutation = useMutation(CancelAccountDeletionMutation);\n   const cancelDeletion = useCallback(() => {\n-    cancelDeletionMutation();\n+    void cancelDeletionMutation();\n   }, [cancelDeletionMutation]);\n \n   const { locales } = useCoralContext();"
    },
    {
      "sha": "fe1142f67abe1a58b75384b685887bae57350216",
      "filename": "src/core/client/stream/tabs/Profile/MyComments/HistoryCommentContainer.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Profile/MyComments/HistoryCommentContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Profile/MyComments/HistoryCommentContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Profile/MyComments/HistoryCommentContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -28,7 +28,7 @@ const HistoryCommentContainer: FunctionComponent<Props> = (props) => {\n   const handleGotoConversation = useCallback(\n     (e: React.MouseEvent) => {\n       if (props.story.id === props.comment.story.id) {\n-        props.setCommentID({ id: props.comment.id });\n+        void props.setCommentID({ id: props.comment.id });\n         emitViewConversationEvent({\n           from: \"COMMENT_HISTORY\",\n           commentID: props.comment.id,"
    },
    {
      "sha": "31329dd0c99608dec810dba6b556329b24438f8b",
      "filename": "src/core/client/stream/tabs/Profile/ProfileQuery.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Profile/ProfileQuery.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Profile/ProfileQuery.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Profile/ProfileQuery.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -19,7 +19,7 @@ import { ProfileQueryLocal as Local } from \"coral-stream/__generated__/ProfileQu\n const loadProfileContainer = () =>\n   import(\"./ProfileContainer\" /* webpackChunkName: \"profile\" */).then((x) => {\n     // New css is loaded, take care of polyfilling those css vars for IE11.\n-    polyfillCSSVarsForIE11();\n+    void polyfillCSSVarsForIE11();\n     return x;\n   });\n // (cvle) For some reason without `setTimeout` this request will block other requests."
    },
    {
      "sha": "b31c798e50c930804bf82c8e3757addeec4fc63a",
      "filename": "src/core/client/stream/tabs/Profile/Settings/ChangePasswordContainer.tsx",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Profile/Settings/ChangePasswordContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Profile/Settings/ChangePasswordContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Profile/Settings/ChangePasswordContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -30,16 +30,16 @@ const ChangePasswordContainer: FunctionComponent<Props> = ({\n   const setAuthPopupState = useMutation(SetAuthPopupStateMutation);\n   const showAuthPopup = useMutation(ShowAuthPopupMutation);\n   const onResetPassword = useCallback(() => {\n-    showAuthPopup({ view: \"FORGOT_PASSWORD\" });\n+    void showAuthPopup({ view: \"FORGOT_PASSWORD\" });\n   }, [showAuthPopup]);\n   const onFocus = useCallback(() => {\n-    setAuthPopupState({ focus: true });\n+    void setAuthPopupState({ focus: true });\n   }, [setAuthPopupState]);\n   const onBlur = useCallback(() => {\n-    setAuthPopupState({ focus: true });\n+    void setAuthPopupState({ focus: true });\n   }, [setAuthPopupState]);\n   const onClose = useCallback(() => {\n-    setAuthPopupState({ open: false });\n+    void setAuthPopupState({ open: false });\n   }, [setAuthPopupState]);\n \n   if ("
    },
    {
      "sha": "4a0b3fd2bc89a026caf4e3c107e3e4bb1f2b5c66",
      "filename": "src/core/client/stream/tabs/Profile/Settings/DeleteAccount/DeleteAccountContainer.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Profile/Settings/DeleteAccount/DeleteAccountContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/tabs/Profile/Settings/DeleteAccount/DeleteAccountContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Profile/Settings/DeleteAccount/DeleteAccountContainer.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -38,7 +38,7 @@ const DeleteAccountContainer: FunctionComponent<Props> = ({\n   }, [setDeletePopoverVisible]);\n \n   const cancelDeletion = useCallback(() => {\n-    cancelAccountDeletion();\n+    void cancelAccountDeletion();\n   }, [cancelAccountDeletion]);\n \n   const { locales } = useCoralContext();"
    },
    {
      "sha": "4d1ea4315caf1e0b0e082dd48892be7317828f80",
      "filename": "src/core/client/stream/test/comments/stream/charCountPostComment.spec.tsx",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/test/comments/stream/charCountPostComment.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/test/comments/stream/charCountPostComment.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/charCountPostComment.spec.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -67,7 +67,7 @@ it(\"validate min\", async () => {\n   act(() => rte.props.onChange(\"ab\"));\n   act(() => form.props.onSubmit());\n   await act(async () => {\n-    waitForElement(() => within(form).getByText(text));\n+    await waitForElement(() => within(form).getByText(text));\n   });\n \n   // Reset validation when erasing all content.\n@@ -153,10 +153,14 @@ it(\"update from server upon specific char count error\", async () => {\n     );\n \n     act(() => rte.props.onChange(\"abc\"));\n-    waitForElement(() => within(form).getByText(\"7 characters remaining\"));\n+    await waitForElement(() =>\n+      within(form).getByText(\"7 characters remaining\")\n+    );\n \n     act(() => rte.props.onChange(\"abcdefgh\"));\n-    waitForElement(() => within(form).getByText(\"2 characters remaining\"));\n+    await waitForElement(() =>\n+      within(form).getByText(\"2 characters remaining\")\n+    );\n \n     act(() => {\n       form.props.onSubmit();"
    },
    {
      "sha": "a8a96963be6f3bae5c36a14a0f5a1430cffc5e43",
      "filename": "src/core/client/stream/test/comments/stream/charCountReplyComment.spec.tsx",
      "status": "modified",
      "additions": 12,
      "deletions": 6,
      "changes": 18,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/test/comments/stream/charCountReplyComment.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/test/comments/stream/charCountReplyComment.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/charCountReplyComment.spec.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -114,10 +114,10 @@ it(\"show remaining characters\", async () => {\n   const { rte, form } = await createTestRenderer();\n \n   act(() => rte.props.onChange(\"abc\"));\n-  waitForElement(() => within(form).getByText(\"7 characters remaining\"));\n+  await waitForElement(() => within(form).getByText(\"7 characters remaining\"));\n \n   act(() => rte.props.onChange(\"abcdefghijkl\"));\n-  waitForElement(() => within(form).getByText(\"-2 characters remaining\"));\n+  await waitForElement(() => within(form).getByText(\"-2 characters remaining\"));\n });\n \n it(\"update from server upon specific char count error\", async () => {\n@@ -157,16 +157,22 @@ it(\"update from server upon specific char count error\", async () => {\n     );\n \n     act(() => rte.props.onChange(\"abc\"));\n-    waitForElement(() => within(form).getByText(\"7 characters remaining\"));\n+    await waitForElement(() =>\n+      within(form).getByText(\"7 characters remaining\")\n+    );\n \n     act(() => rte.props.onChange(\"abcdefgh\"));\n-    waitForElement(() => within(form).getByText(\"2 characters remaining\"));\n+    await waitForElement(() =>\n+      within(form).getByText(\"2 characters remaining\")\n+    );\n \n     await act(async () => form.props.onSubmit());\n-    waitForElement(() => within(form).getByText(\"-3 characters remaining\"));\n+    await waitForElement(() =>\n+      within(form).getByText(\"-3 characters remaining\")\n+    );\n \n     // Body submit error should be displayed.\n-    waitForElement(() => within(form).getByText(errorCode));\n+    await waitForElement(() => within(form).getByText(errorCode));\n \n     act(() => rte.props.onChange(\"abcde\"));\n "
    },
    {
      "sha": "1d9aee7f4b88d8bb78d83c73b42947d65976a3fe",
      "filename": "src/core/client/stream/test/comments/stream/emitCountEvents.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/test/comments/stream/emitCountEvents.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/stream/test/comments/stream/emitCountEvents.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/emitCountEvents.spec.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -40,7 +40,7 @@ async function createTestRenderer(\n }\n \n it(\"emit commentCount events\", (done) => {\n-  createTestRenderer().then(({ context: { eventEmitter } }) => {\n+  void createTestRenderer().then(({ context: { eventEmitter } }) => {\n     eventEmitter.on(\"commentCount\", (args) => {\n       expect(args).toMatchInlineSnapshot(`\n         Object {"
    },
    {
      "sha": "72af1930af14c5c755a85729381a896bae8a5795",
      "filename": "src/core/client/test/mocks.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/test/mocks.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/test/mocks.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/test/mocks.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -5,7 +5,8 @@ jest.mock(\"react-transition-group\", () => ({\n }));\n \n jest.mock(\"react-dom\", () => ({\n-  ...jest.requireActual(\"react-dom\"),\n+  // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n+  ...(jest.requireActual(\"react-dom\") as any),\n   createPortal: (node: any) => node,\n }));\n "
    },
    {
      "sha": "d86e168edf51c9fa87355c26872c91040273b792",
      "filename": "src/core/client/ui/components/Modal/Modal.spec.tsx",
      "status": "modified",
      "additions": 9,
      "deletions": 7,
      "changes": 16,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/ui/components/Modal/Modal.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/ui/components/Modal/Modal.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/ui/components/Modal/Modal.spec.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -3,6 +3,8 @@ import React from \"react\";\n import TestRenderer, { ReactTestRenderer } from \"react-test-renderer\";\n import sinon from \"sinon\";\n \n+import { act } from \"coral-framework/testHelpers\";\n+\n import Modal from \"./Modal\";\n \n const createNodeMock = () => ({\n@@ -12,7 +14,7 @@ const createNodeMock = () => ({\n it(\"renders correctly\", () => {\n   expect(document.body.lastChild).toBeNull();\n   let testRenderer: ReactTestRenderer;\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer = TestRenderer.create(\n       <Modal>\n         <div>Test</div>\n@@ -22,7 +24,7 @@ it(\"renders correctly\", () => {\n   });\n   expect(testRenderer!.toJSON()).toBeNull();\n   expect(document.body.lastChild).toBeNull();\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer.update(\n       <Modal open>\n         <div>Test</div>\n@@ -33,7 +35,7 @@ it(\"renders correctly\", () => {\n   expect(document.body.lastElementChild!.getAttribute(\"data-portal\")).toBe(\n     \"modal\"\n   );\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer.unmount();\n   });\n   expect(document.body.lastChild).toBeNull();\n@@ -45,7 +47,7 @@ it(\"relays backdrop click events\", () => {\n   const onClose = sinon.stub();\n   expect(document.body.lastChild).toBeNull();\n   let testRenderer: ReactTestRenderer;\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer = TestRenderer.create(\n       <Modal open onBackdropClick={onBackdropClick} onClose={onClose}>\n         <div>Test</div>\n@@ -56,7 +58,7 @@ it(\"relays backdrop click events\", () => {\n   testRenderer!.root\n     .findByProps({ \"data-testid\": \"backdrop\" })\n     .props.onClick(event);\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer.unmount();\n   });\n   expect(onBackdropClick.called).toBe(true);\n@@ -70,7 +72,7 @@ it(\"relays esc events\", () => {\n   const onClose = sinon.stub();\n   expect(document.body.lastChild).toBeNull();\n   let testRenderer: ReactTestRenderer;\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer = TestRenderer.create(\n       <Modal open onEscapeKeyDown={onEscapeKeyDown} onClose={onClose}>\n         <div>Test</div>\n@@ -81,7 +83,7 @@ it(\"relays esc events\", () => {\n   const el = testRenderer!.root.find((i) => i.props.onKeyDown);\n   el.props.onKeyDown(escEvent);\n   el.props.onKeyDown(otherEvent);\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer.unmount();\n   });\n   expect(onEscapeKeyDown.called).toBe(true);"
    },
    {
      "sha": "c0a35a2f5c990fb1dcfd0bdc1aad437e283f5bdf",
      "filename": "src/core/client/ui/components/NoScroll/NoScroll.spec.tsx",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/ui/components/NoScroll/NoScroll.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/ui/components/NoScroll/NoScroll.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/ui/components/NoScroll/NoScroll.spec.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -1,16 +1,18 @@\n import React from \"react\";\n import TestRenderer, { ReactTestRenderer } from \"react-test-renderer\";\n \n+import { act } from \"coral-framework/testHelpers\";\n+\n import NoScroll from \"./NoScroll\";\n \n it(\"renders correctly\", () => {\n   expect(document.body.className).toBe(\"\");\n   let testRenderer: ReactTestRenderer;\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer = TestRenderer.create(<NoScroll active />);\n   });\n   expect(document.body.className).toBe(\"NoScroll-noScroll\");\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer.update(<NoScroll />);\n   });\n   expect(document.body.className).toBe(\"\");\n@@ -19,7 +21,7 @@ it(\"renders correctly\", () => {\n it(\"renders correctly with multiple instances\", () => {\n   expect(document.body.className).toBe(\"\");\n   let testRenderer: ReactTestRenderer;\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer = TestRenderer.create(\n       <>\n         <NoScroll active />\n@@ -29,7 +31,7 @@ it(\"renders correctly with multiple instances\", () => {\n     );\n   });\n   expect(document.body.className).toBe(\"NoScroll-noScroll\");\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer.update(\n       <>\n         <NoScroll />\n@@ -39,7 +41,7 @@ it(\"renders correctly with multiple instances\", () => {\n     );\n   });\n   expect(document.body.className).toBe(\"NoScroll-noScroll\");\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer.update(\n       <>\n         <NoScroll />"
    },
    {
      "sha": "d86e168edf51c9fa87355c26872c91040273b792",
      "filename": "src/core/client/ui/components/v2/Modal/Modal.spec.tsx",
      "status": "modified",
      "additions": 9,
      "deletions": 7,
      "changes": 16,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/ui/components/v2/Modal/Modal.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/ui/components/v2/Modal/Modal.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/ui/components/v2/Modal/Modal.spec.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -3,6 +3,8 @@ import React from \"react\";\n import TestRenderer, { ReactTestRenderer } from \"react-test-renderer\";\n import sinon from \"sinon\";\n \n+import { act } from \"coral-framework/testHelpers\";\n+\n import Modal from \"./Modal\";\n \n const createNodeMock = () => ({\n@@ -12,7 +14,7 @@ const createNodeMock = () => ({\n it(\"renders correctly\", () => {\n   expect(document.body.lastChild).toBeNull();\n   let testRenderer: ReactTestRenderer;\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer = TestRenderer.create(\n       <Modal>\n         <div>Test</div>\n@@ -22,7 +24,7 @@ it(\"renders correctly\", () => {\n   });\n   expect(testRenderer!.toJSON()).toBeNull();\n   expect(document.body.lastChild).toBeNull();\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer.update(\n       <Modal open>\n         <div>Test</div>\n@@ -33,7 +35,7 @@ it(\"renders correctly\", () => {\n   expect(document.body.lastElementChild!.getAttribute(\"data-portal\")).toBe(\n     \"modal\"\n   );\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer.unmount();\n   });\n   expect(document.body.lastChild).toBeNull();\n@@ -45,7 +47,7 @@ it(\"relays backdrop click events\", () => {\n   const onClose = sinon.stub();\n   expect(document.body.lastChild).toBeNull();\n   let testRenderer: ReactTestRenderer;\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer = TestRenderer.create(\n       <Modal open onBackdropClick={onBackdropClick} onClose={onClose}>\n         <div>Test</div>\n@@ -56,7 +58,7 @@ it(\"relays backdrop click events\", () => {\n   testRenderer!.root\n     .findByProps({ \"data-testid\": \"backdrop\" })\n     .props.onClick(event);\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer.unmount();\n   });\n   expect(onBackdropClick.called).toBe(true);\n@@ -70,7 +72,7 @@ it(\"relays esc events\", () => {\n   const onClose = sinon.stub();\n   expect(document.body.lastChild).toBeNull();\n   let testRenderer: ReactTestRenderer;\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer = TestRenderer.create(\n       <Modal open onEscapeKeyDown={onEscapeKeyDown} onClose={onClose}>\n         <div>Test</div>\n@@ -81,7 +83,7 @@ it(\"relays esc events\", () => {\n   const el = testRenderer!.root.find((i) => i.props.onKeyDown);\n   el.props.onKeyDown(escEvent);\n   el.props.onKeyDown(otherEvent);\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer.unmount();\n   });\n   expect(onEscapeKeyDown.called).toBe(true);"
    },
    {
      "sha": "c0a35a2f5c990fb1dcfd0bdc1aad437e283f5bdf",
      "filename": "src/core/client/ui/components/v2/NoScroll/NoScroll.spec.tsx",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/ui/components/v2/NoScroll/NoScroll.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/client/ui/components/v2/NoScroll/NoScroll.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/ui/components/v2/NoScroll/NoScroll.spec.tsx?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -1,16 +1,18 @@\n import React from \"react\";\n import TestRenderer, { ReactTestRenderer } from \"react-test-renderer\";\n \n+import { act } from \"coral-framework/testHelpers\";\n+\n import NoScroll from \"./NoScroll\";\n \n it(\"renders correctly\", () => {\n   expect(document.body.className).toBe(\"\");\n   let testRenderer: ReactTestRenderer;\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer = TestRenderer.create(<NoScroll active />);\n   });\n   expect(document.body.className).toBe(\"NoScroll-noScroll\");\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer.update(<NoScroll />);\n   });\n   expect(document.body.className).toBe(\"\");\n@@ -19,7 +21,7 @@ it(\"renders correctly\", () => {\n it(\"renders correctly with multiple instances\", () => {\n   expect(document.body.className).toBe(\"\");\n   let testRenderer: ReactTestRenderer;\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer = TestRenderer.create(\n       <>\n         <NoScroll active />\n@@ -29,7 +31,7 @@ it(\"renders correctly with multiple instances\", () => {\n     );\n   });\n   expect(document.body.className).toBe(\"NoScroll-noScroll\");\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer.update(\n       <>\n         <NoScroll />\n@@ -39,7 +41,7 @@ it(\"renders correctly with multiple instances\", () => {\n     );\n   });\n   expect(document.body.className).toBe(\"NoScroll-noScroll\");\n-  TestRenderer.act(() => {\n+  act(() => {\n     testRenderer.update(\n       <>\n         <NoScroll />"
    },
    {
      "sha": "30f2c48821687390ad1b990fa6c793b7ed8f6d3d",
      "filename": "src/core/common/types.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/common/types.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/common/types.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/common/types.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -20,6 +20,7 @@ export type Promiseable<T> = Promise<T> | T;\n \n export type Nullable<T> = { [P in keyof T]: T[P] | null };\n \n+// eslint-disable-next-line @typescript-eslint/ban-types\n export type DeepWritableObject<T> = T extends object\n   ? {\n       -readonly [P in keyof T]: T[P] extends Array<infer U> | undefined\n@@ -34,6 +35,7 @@ export type DeepWritable<T> = T extends Array<infer U> | ReadonlyArray<infer U>\n   ? Array<DeepWritableObject<U>>\n   : DeepWritableObject<T>;\n \n+// eslint-disable-next-line @typescript-eslint/ban-types\n export type DeepNullable<T> = T extends object\n   ? {\n       [P in keyof T]: T[P] extends Array<infer U> | undefined\n@@ -47,6 +49,7 @@ export type DeepNullable<T> = T extends object\n /**\n  * Like Partial, but recurses down the object marking each field as Partial.\n  */\n+// eslint-disable-next-line @typescript-eslint/ban-types\n export type DeepPartial<T> = T extends object\n   ? {\n       [P in keyof T]?: T[P] extends Array<infer U> | undefined\n@@ -61,6 +64,7 @@ export type DeepPartial<T> = T extends object\n  * FirstDeepPartial is like DeepPartial but applies only to the first parameters\n  * on the object.\n  */\n+// eslint-disable-next-line @typescript-eslint/ban-types\n export type FirstDeepPartial<T> = T extends object\n   ? {\n       [P in keyof T]: DeepPartial<T[P]>;"
    },
    {
      "sha": "d902e5b615a1acfdd496fbd449084b20f2da7664",
      "filename": "src/core/server/app/handlers/api/dashboard/index.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/app/handlers/api/dashboard/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/app/handlers/api/dashboard/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/handlers/api/dashboard/index.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -23,9 +23,9 @@ import { Request, RequestHandler } from \"coral-server/types/express\";\n \n function getMetricsOptions(req: Request) {\n   // Get the current Tenant on the request.\n-  const { id: tenantID } = req.coral?.tenant!;\n+  const { id: tenantID } = req.coral!.tenant!;\n \n-  const now = req.coral?.now!;\n+  const now = req.coral!.now;\n \n   // To set a fixed date for the date, uncomment the line below.\n   // const now = DateTime.utc(2020, 5, 5, 12, 30).toJSDate();"
    },
    {
      "sha": "50797f132ec0b20f613bc97eb1a42a66b73d3cd2",
      "filename": "src/core/server/app/middleware/passport/strategies/jwt.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/app/middleware/passport/strategies/jwt.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/app/middleware/passport/strategies/jwt.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/middleware/passport/strategies/jwt.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -27,6 +27,7 @@ export type JWTStrategyOptions = Pick<\n /**\n  * Token is the various forms of the Token that can be verified.\n  */\n+// eslint-disable-next-line @typescript-eslint/ban-types\n export type Token = OIDCIDToken | SSOToken | JWTToken | object | string | null;\n \n /**\n@@ -49,6 +50,7 @@ export interface Verifier<T = Token> {\n    * supports will perform type checking and ensure that the given Tenant\n    * supports the requested verification type.\n    */\n+  // eslint-disable-next-line @typescript-eslint/ban-types\n   supports: (token: T | object, tenant: Tenant, kid?: string) => token is T;\n }\n "
    },
    {
      "sha": "51526a61bcca060d9a8da08cf6e1ef5f177da056",
      "filename": "src/core/server/app/middleware/passport/strategies/oidc/index.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/app/middleware/passport/strategies/oidc/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/app/middleware/passport/strategies/oidc/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/middleware/passport/strategies/oidc/index.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -84,6 +84,7 @@ export interface StrategyItem {\n   jwksClient?: JwksClient;\n }\n \n+// eslint-disable-next-line @typescript-eslint/ban-types\n export function isOIDCToken(token: OIDCIDToken | object): token is OIDCIDToken {\n   const { error } = OIDCIDTokenSchema.validate(token, {\n     // OIDC ID tokens may contain many other fields we haven't seen.. We Just"
    },
    {
      "sha": "92f68f7bef8c2e564fae159f26af44e0003bd713",
      "filename": "src/core/server/app/middleware/passport/strategies/verifiers/jwt.spec.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/app/middleware/passport/strategies/verifiers/jwt.spec.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/app/middleware/passport/strategies/verifiers/jwt.spec.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/middleware/passport/strategies/verifiers/jwt.spec.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -27,6 +27,7 @@ it(\"validates a jwt token\", async () => {\n   const tokenString = await signTokenString(config, user, tenant, {}, now);\n \n   // Verify that the token conforms to the JWT token schema.\n+  // eslint-disable-next-line @typescript-eslint/ban-types\n   const token = jwt.decode(tokenString) as object;\n \n   expect(isJWTToken(token)).toBeTruthy();"
    },
    {
      "sha": "a4d931af750b60e736cdd1c15facdeea6df6df53",
      "filename": "src/core/server/app/middleware/passport/strategies/verifiers/jwt.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/app/middleware/passport/strategies/verifiers/jwt.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/app/middleware/passport/strategies/verifiers/jwt.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/middleware/passport/strategies/verifiers/jwt.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -35,6 +35,7 @@ export const JWTTokenSchema = Joi.object().keys({\n   pat: Joi.boolean(),\n });\n \n+// eslint-disable-next-line @typescript-eslint/ban-types\n export function isJWTToken(token: JWTToken | object): token is JWTToken {\n   const { error } = JWTTokenSchema.validate(token, {\n     allowUnknown: true,\n@@ -59,6 +60,7 @@ export class JWTVerifier implements Verifier<JWTToken> {\n     this.redis = redis;\n   }\n \n+  // eslint-disable-next-line @typescript-eslint/ban-types\n   public supports(token: JWTToken | object, tenant: Tenant): token is JWTToken {\n     return isJWTToken(token) && token.iss === tenant.id;\n   }"
    },
    {
      "sha": "db9da5d259bfc0f84dcbb7c33446993efd13d2db",
      "filename": "src/core/server/app/middleware/passport/strategies/verifiers/sso.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/app/middleware/passport/strategies/verifiers/sso.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/app/middleware/passport/strategies/verifiers/sso.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/middleware/passport/strategies/verifiers/sso.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -60,6 +60,7 @@ export interface SSOToken {\n   user: SSOUserProfile;\n }\n \n+// eslint-disable-next-line @typescript-eslint/ban-types\n export function isSSOToken(token: SSOToken | object): token is SSOToken {\n   const { error } = SSOTokenSchema.validate(token, { allowUnknown: true });\n   return isNil(error);\n@@ -237,6 +238,7 @@ export class SSOVerifier implements Verifier<SSOToken> {\n   }\n \n   public supports(\n+    // eslint-disable-next-line @typescript-eslint/ban-types\n     token: SSOToken | object,\n     tenant: Tenant,\n     kid?: string\n@@ -304,7 +306,7 @@ export class SSOVerifier implements Verifier<SSOToken> {\n       // succeeded! Mark the key as used last now and break out. We should do\n       // this in the nextTick because it's not important to have it recorded at\n       // the same time.\n-      updateLastUsedAtKID(this.redis, tenant.id, key.kid, now);\n+      void updateLastUsedAtKID(this.redis, tenant.id, key.kid, now);\n \n       // TODO: [CORL-754] (wyattjoh) reintroduce when we amend the front-end to display the kid\n       // if (!kid) {"
    },
    {
      "sha": "c2432c9dff4e8f942891331fb75613f5d7087dbf",
      "filename": "src/core/server/app/request/limiter.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/app/request/limiter.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/app/request/limiter.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/request/limiter.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -65,7 +65,7 @@ export class Limiter {\n     // if this is new or has no expiry\n     if (tries === 1 || expiry === -1) {\n       // then expire it after the timeout\n-      this.redis.expire(key, this.ttl);\n+      void this.redis.expire(key, this.ttl);\n     }\n \n     if (tries > this.max) {"
    },
    {
      "sha": "379b8badbc2e01ed0f984378ac4c19ecce2ce116",
      "filename": "src/core/server/cron/notificationDigesting.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/cron/notificationDigesting.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/cron/notificationDigesting.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/cron/notificationDigesting.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -108,7 +108,7 @@ const processNotificationDigesting = (\n       // TODO: sort the digest template elements by the digest order.\n \n       // Add the email containing the digest information.\n-      mailerQueue.add({\n+      void mailerQueue.add({\n         tenantID: tenant.id,\n         message: {\n           to: user.email!,"
    },
    {
      "sha": "1f79e2e29dc8871e6e25ee416230c7510d01ed84",
      "filename": "src/core/server/graph/mutators/Comments.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/graph/mutators/Comments.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/graph/mutators/Comments.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/mutators/Comments.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -184,7 +184,7 @@ export const Comments = (ctx: GraphContext) => ({\n       )\n       .then((comment) => {\n         // Publish that the comment was featured.\n-        publishCommentFeatured(ctx.broker, comment);\n+        void publishCommentFeatured(ctx.broker, comment);\n \n         // Return it to the next step.\n         return comment;"
    },
    {
      "sha": "2aa7f3cde75ddbc72d26d4f35752f2b5ba03c94c",
      "filename": "src/core/server/graph/resolvers/Comment.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/graph/resolvers/Comment.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/graph/resolvers/Comment.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/resolvers/Comment.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -82,7 +82,7 @@ export const Comment: GQLCommentTypeResolver<comment.Comment> = {\n \n     const children = await ctx.loaders.Comments.visible.loadMany(childIDs);\n     return children.reduce(\n-      (sum: any, c: any) => (c && hasPublishedStatus(c) ? sum + 1 : sum),\n+      (sum: number, c: any) => (c && hasPublishedStatus(c) ? sum + 1 : sum),\n       0\n     );\n   },"
    },
    {
      "sha": "bb149dd87a85a5454fc5f3d59e27705a69fc40aa",
      "filename": "src/core/server/graph/resolvers/ModerationQueue.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/graph/resolvers/ModerationQueue.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/graph/resolvers/ModerationQueue.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/resolvers/ModerationQueue.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -19,7 +19,7 @@ export const ModerationQueue: GQLModerationQueueTypeResolver<ModerationQueueInpu\n   id: ({ selector, connection: { filter } }) => {\n     // NOTE: (wyattjoh) when the queues change shape in the future, investigate adding more dynamicness to this id generation\n     if (filter && filter.storyID) {\n-      return selector + \"::storyID:\" + filter.storyID;\n+      return selector + \"::storyID:\" + (filter.storyID as string);\n     }\n \n     return selector;"
    },
    {
      "sha": "7a69f20b64073709e9a6d9dda841b08bd9b95cc0",
      "filename": "src/core/server/graph/resolvers/util.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/graph/resolvers/util.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/graph/resolvers/util.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/resolvers/util.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -16,6 +16,6 @@ export function getRequestedFields<T>(info: GraphQLResolveInfo) {\n }\n \n export function reconstructTenantURLResolver<T = any>(path: string) {\n-  return (parent: T, args: {}, ctx: GraphContext) =>\n+  return (parent: T, args: unknown, ctx: GraphContext) =>\n     reconstructTenantURL(ctx.config, ctx.tenant, ctx.req, path);\n }"
    },
    {
      "sha": "a1772bfc6d690c8ee84abe404997d82c45921e5f",
      "filename": "src/core/server/models/comment/counts/shared.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/models/comment/counts/shared.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/models/comment/counts/shared.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/models/comment/counts/shared.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -210,7 +210,10 @@ export async function updateSharedCommentCounts(\n     const args = flattenDeep(Object.entries(moderationQueueQueues));\n \n     // Add the command to the pipeline.\n-    pipeline.mhincrby(commentCountsModerationQueueQueuesKey(tenantID), ...args);\n+    void pipeline.mhincrby(\n+      commentCountsModerationQueueQueuesKey(tenantID),\n+      ...args\n+    );\n   }\n \n   // Execute the pipeline."
    },
    {
      "sha": "78dc8fa6f8ab3d05682f2f6e8f6a61e8fae574eb",
      "filename": "src/core/server/queue/Task.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/queue/Task.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/queue/Task.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/queue/Task.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -80,7 +80,7 @@ export default class Task<T extends TenantResource, U = any> {\n    * job requests.\n    */\n   public process() {\n-    this.queue.process(async (job: Job<T>) => {\n+    void this.queue.process(async (job: Job<T>) => {\n       const log = this.log.child(\n         { jobID: job.id, attemptsMade: job.attemptsMade },\n         true"
    },
    {
      "sha": "8e31d7ecd1b4f49212e9084a9b0f9600d88778be",
      "filename": "src/core/server/queue/tasks/mailer/processor.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/queue/tasks/mailer/processor.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/queue/tasks/mailer/processor.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/queue/tasks/mailer/processor.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -133,7 +133,8 @@ function createMessageTranslator(i18n: I18n) {\n     }\n \n     // Translate the bundle.\n-    await loc.translateFragment(dom.window.document);\n+    // TODO: don't cast to any.\n+    await loc.translateFragment(dom.window.document as any);\n \n     // Grab the rendered HTML from the dom, and juice them.\n     if (!dom.window.document.documentElement) {"
    },
    {
      "sha": "2640f91218029d2d0d4dd7e72b06ebcd8e74c204",
      "filename": "src/core/server/services/comments/actions.ts",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/services/comments/actions.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/services/comments/actions.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/comments/actions.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -246,7 +246,7 @@ export async function createReaction(\n   );\n   if (action) {\n     // A comment reaction was created! Publish it.\n-    publishCommentReactionCreated(\n+    void publishCommentReactionCreated(\n       broker,\n       comment,\n       input.commentRevisionID,\n@@ -356,7 +356,12 @@ export async function createFlag(\n   );\n   if (action) {\n     // A action was created! Publish the event.\n-    publishCommentFlagCreated(broker, comment, input.commentRevisionID, action);\n+    void publishCommentFlagCreated(\n+      broker,\n+      comment,\n+      input.commentRevisionID,\n+      action\n+    );\n   }\n \n   return comment;"
    },
    {
      "sha": "eacd04907741e71dc25358000adb4c3dcec4c137",
      "filename": "src/core/server/services/stories/index.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/services/stories/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/services/stories/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/stories/index.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -95,7 +95,7 @@ export async function findOrCreate(\n   }\n \n   if (wasUpserted) {\n-    StoryCreatedCoralEvent.publish(broker, {\n+    void StoryCreatedCoralEvent.publish(broker, {\n       storyID: story.id,\n       storyURL: story.url,\n       siteID: story.siteID,\n@@ -224,7 +224,7 @@ export async function create(\n     story = await scrape(mongo, config, tenant.id, story.id, storyURL);\n   }\n \n-  StoryCreatedCoralEvent.publish(broker, {\n+  void StoryCreatedCoralEvent.publish(broker, {\n     storyID: story.id,\n     storyURL: story.url,\n     siteID: site.id,"
    },
    {
      "sha": "ddc1895b9a4b2e9d26ca9aea8e084f1f78d1afc9",
      "filename": "src/core/server/services/tenant/cache/cache.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/services/tenant/cache/cache.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/services/tenant/cache/cache.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/tenant/cache/cache.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -144,7 +144,7 @@ export default class TenantCache {\n       subscriber.on(\"message\", this.onMessage);\n \n       // Subscribe to tenant notifications.\n-      subscriber.subscribe(TENANT_CACHE_CHANNEL);\n+      void subscriber.subscribe(TENANT_CACHE_CHANNEL);\n     }\n   }\n "
    },
    {
      "sha": "03318d1d542baaa168d476a615d89bc97964af68",
      "filename": "src/core/server/stacks/helpers/publishChanges.ts",
      "status": "modified",
      "additions": 19,
      "deletions": 12,
      "changes": 31,
      "blob_url": "https://github.com/coralproject/talk/blob/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/stacks/helpers/publishChanges.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/2acc761a5dc900dbd958f58186b1f3c58bf2a319/src/core/server/stacks/helpers/publishChanges.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/stacks/helpers/publishChanges.ts?ref=2acc761a5dc900dbd958f58186b1f3c58bf2a319",
      "patch": "@@ -25,36 +25,43 @@ export default async function publishChanges(\n   broker: CoralEventPublisherBroker,\n   input: PublishChangesInput\n ) {\n+  const promises: Promise<any>[] = [];\n+\n   // Publish changes.\n-  publishModerationQueueChanges(broker, input.moderationQueue, input.after);\n+  promises.push(\n+    publishModerationQueueChanges(broker, input.moderationQueue, input.after)\n+  );\n \n   // If this was a change, and it has a \"before\" state for the comment, process\n   // those updates too.\n   if (input.before) {\n-    publishCommentStatusChanges(\n-      broker,\n-      input.before.status,\n-      input.after.status,\n-      input.after.id,\n-      input.commentRevisionID,\n-      input.after.storyID,\n-      input.moderatorID || null\n+    promises.push(\n+      publishCommentStatusChanges(\n+        broker,\n+        input.before.status,\n+        input.after.status,\n+        input.after.id,\n+        input.commentRevisionID,\n+        input.after.storyID,\n+        input.moderatorID || null\n+      )\n     );\n \n     if (hasModeratorStatus(input.before) && hasPublishedStatus(input.after)) {\n-      publishCommentReleased(broker, input.after);\n+      promises.push(publishCommentReleased(broker, input.after));\n     }\n   } else {\n     // This block is only hit if there is no before (if this is a new comment).\n \n     // If this is a reply, publish it.\n     if (input.after.parentID) {\n-      publishCommentReplyCreated(broker, input.after);\n+      promises.push(publishCommentReplyCreated(broker, input.after));\n     }\n \n     // If this comment is visible (and not a reply), publish it.\n     if (!input.after.parentID && hasPublishedStatus(input.after)) {\n-      publishCommentCreated(broker, input.after);\n+      promises.push(publishCommentCreated(broker, input.after));\n     }\n   }\n+  await Promise.all(promises);\n }"
    }
  ]
}
