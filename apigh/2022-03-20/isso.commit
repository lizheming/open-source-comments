{
  "sha": "4d7a05f22b4dd3fb870eaab52681ff744701ecc7",
  "node_id": "C_kwDOAF-mA9oAKDRkN2EwNWYyMmI0ZGQzZmI4NzBlYWFiNTI2ODFmZjc0NDcwMWVjYzc",
  "commit": {
    "author": {
      "name": "ix5",
      "email": "ix5@users.noreply.github.com",
      "date": "2022-03-15T16:45:29Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2022-03-15T16:45:29Z"
    },
    "message": "Merge pull request #810 from fliiiix/bugfix/api-docs\n\nBugfix/api docs",
    "tree": {
      "sha": "b55f24f4ddbc524262de12e374b61cc321e24b2b",
      "url": "https://api.github.com/repos/posativ/isso/git/trees/b55f24f4ddbc524262de12e374b61cc321e24b2b"
    },
    "url": "https://api.github.com/repos/posativ/isso/git/commits/4d7a05f22b4dd3fb870eaab52681ff744701ecc7",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiMMKpCRBK7hj4Ov3rIwAAq8gIACOXOM7Ww4xwfcTq87Si37FT\nqCKg7OyLrvhQSXQe6s8FpYp5lvQgjrF5mBW0Hw5UkNYt9cerjrSEnLHQcXps9OtV\n8XR6wP9+yRvgH4FShZgkNSn6Ac+ycVFBxucZmJ+Jcq5RbawXziTCsIuzl8mxRa/Q\nTaypwmAvcGjrDbMJzZK0Vkp7hJGsHjPkEYRcd+8fsvGuuq5an4PtJoCrKg3czxow\ng3auD2r9HlkxqGT49EhGHjbFAwLEVOIFlV2D5vF4xsUVVnf6VlGN2Js49uLbVBya\nhVXqQ99+M7Ulwwq+5lOylWbneV32EKKIgf7ZsswxvZiQMcwLyEoghEFNmgoRMdc=\n=ohjn\n-----END PGP SIGNATURE-----\n",
      "payload": "tree b55f24f4ddbc524262de12e374b61cc321e24b2b\nparent 3a0737809baab84990d7c2a5153c7ff8d83eab38\nparent e80e7dd9ce74f0b08ea10a4a833855bfb6e7922f\nauthor ix5 <ix5@users.noreply.github.com> 1647362729 +0100\ncommitter GitHub <noreply@github.com> 1647362729 +0100\n\nMerge pull request #810 from fliiiix/bugfix/api-docs\n\nBugfix/api docs"
    }
  },
  "url": "https://api.github.com/repos/posativ/isso/commits/4d7a05f22b4dd3fb870eaab52681ff744701ecc7",
  "html_url": "https://github.com/posativ/isso/commit/4d7a05f22b4dd3fb870eaab52681ff744701ecc7",
  "comments_url": "https://api.github.com/repos/posativ/isso/commits/4d7a05f22b4dd3fb870eaab52681ff744701ecc7/comments",
  "author": {
    "login": "ix5",
    "id": 10212877,
    "node_id": "MDQ6VXNlcjEwMjEyODc3",
    "avatar_url": "https://avatars.githubusercontent.com/u/10212877?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ix5",
    "html_url": "https://github.com/ix5",
    "followers_url": "https://api.github.com/users/ix5/followers",
    "following_url": "https://api.github.com/users/ix5/following{/other_user}",
    "gists_url": "https://api.github.com/users/ix5/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ix5/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ix5/subscriptions",
    "organizations_url": "https://api.github.com/users/ix5/orgs",
    "repos_url": "https://api.github.com/users/ix5/repos",
    "events_url": "https://api.github.com/users/ix5/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ix5/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3a0737809baab84990d7c2a5153c7ff8d83eab38",
      "url": "https://api.github.com/repos/posativ/isso/commits/3a0737809baab84990d7c2a5153c7ff8d83eab38",
      "html_url": "https://github.com/posativ/isso/commit/3a0737809baab84990d7c2a5153c7ff8d83eab38"
    },
    {
      "sha": "e80e7dd9ce74f0b08ea10a4a833855bfb6e7922f",
      "url": "https://api.github.com/repos/posativ/isso/commits/e80e7dd9ce74f0b08ea10a4a833855bfb6e7922f",
      "html_url": "https://github.com/posativ/isso/commit/e80e7dd9ce74f0b08ea10a4a833855bfb6e7922f"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 10,
    "deletions": 10
  },
  "files": [
    {
      "sha": "4304692fa4ccd0c56702ad9d7c40e2481d76e06d",
      "filename": "isso/views/comments.py",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/posativ/isso/blob/4d7a05f22b4dd3fb870eaab52681ff744701ecc7/isso/views/comments.py",
      "raw_url": "https://github.com/posativ/isso/raw/4d7a05f22b4dd3fb870eaab52681ff744701ecc7/isso/views/comments.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso/views/comments.py?ref=4d7a05f22b4dd3fb870eaab52681ff744701ecc7",
      "patch": "@@ -29,7 +29,7 @@\n from isso.views import requires\n \n \n-# from Django appearently, looks good to me *duck*\n+# from Django apparently, looks good to me *duck*\n __url_re = re.compile(\n     r'^'\n     r'(https?://)?'\n@@ -183,7 +183,7 @@ def verify(cls, comment):\n     \"\"\"\n     @apiDefine plainParam\n     @apiParam {number=0,1} [plain]\n-        Iff set to `1`, the plain text entered by the user will be returned in the comments’ `text` attribute (instead of the rendered markdown).\n+        If set to `1`, the plain text entered by the user will be returned in the comments’ `text` attribute (instead of the rendered markdown).\n     \"\"\"\n     \"\"\"\n     @apiDefine commentResponse\n@@ -229,7 +229,7 @@ def verify(cls, comment):\n     @apiParam {string} [website]\n         The comment’s author’s website’s url.\n     @apiParam {number} [parent]\n-        The parent comment’s id iff the new comment is a response to an existing comment.\n+        The parent comment’s id if the new comment is a response to an existing comment.\n \n     @apiExample {curl} Create a reply to comment with id 15:\n         curl 'https://comments.example.com/new?uri=/thread/' -d '{\"text\": \"Stop saying that! *isso*!\", \"author\": \"Max Rant\", \"email\": \"rant@example.com\", \"parent\": 15}' -H 'Content-Type: application/json' -c cookie.txt\n@@ -551,7 +551,7 @@ def delete(self, environ, request, id, key=None):\n         return resp\n \n     \"\"\"\n-    @api {get} /id/:id/unsubscribe/:email/key unsubscribe\n+    @api {get} /id/:id/unsubscribe/:email/:key unsubscribe\n     @apiGroup Comment\n     @apiDescription\n         Opt out from getting any further email notifications about replies to a particular comment. In order to use this endpoint, the requestor needs a `key` that is usually obtained from an email sent out by isso.\n@@ -612,7 +612,7 @@ def unsubscribe(self, environ, request, id, email, key):\n         return Response(modal, 200, content_type=\"text/html\")\n \n     \"\"\"\n-    @api {post} /id/:id/:action/key moderate\n+    @api {post} /id/:id/:action/:key moderate\n     @apiGroup Comment\n     @apiDescription\n         Publish or delete a comment that is in the moderation queue (mode `2`). In order to use this endpoint, the requestor needs a `key` that is usually obtained from an email sent out by isso.\n@@ -716,7 +716,7 @@ def moderate(self, environ, request, id, action, key):\n         @apiParam {number} [limit]\n             The maximum number of returned top-level comments. Omit for unlimited results.\n         @apiParam {number} [nested_limit]\n-            The maximum number of returned nested comments per commint. Omit for unlimited results.\n+            The maximum number of returned nested comments per comment. Omit for unlimited results.\n         @apiParam {number} [after]\n             Includes only comments were added after the provided UNIX timestamp.\n \n@@ -725,13 +725,13 @@ def moderate(self, environ, request, id, action, key):\n         @apiSuccess {Object[]} replies\n             The list of comments. Each comment also has the `total_replies`, `replies`, `id` and `hidden_replies` properties to represent nested comments.\n         @apiSuccess {number} id\n-            Id of the comment `replies` is the list of replies of. `null` for the list of toplevel comments.\n+            Id of the comment `replies` is the list of replies of. `null` for the list of top-level comments.\n         @apiSuccess {number} hidden_replies\n-            The number of comments that were ommited from the results because of the `limit` request parameter. Usually, this will be `total_replies` - `limit`.\n+            The number of comments that were omitted from the results because of the `limit` request parameter. Usually, this will be `total_replies` - `limit`.\n \n         @apiExample {curl} Get 2 comments with 5 responses:\n             curl 'https://comments.example.com/?uri=/thread/&limit=2&nested_limit=5'\n-        @apiSuccessExample Example reponse:\n+        @apiSuccessExample Example response:\n             {\n               \"total_replies\": 14,\n               \"replies\": [\n@@ -971,7 +971,7 @@ def count(self, environ, request, uri):\n     @api {post} /count count comments\n     @apiGroup Thread\n     @apiDescription\n-        Counts the number of comments on multiple threads. The requestor provides a list of thread uris. The number of comments on each thread is returned as a list, in the same order as the threads were requested. The counts include comments that are reponses to comments.\n+        Counts the number of comments on multiple threads. The requestor provides a list of thread uris. The number of comments on each thread is returned as a list, in the same order as the threads were requested. The counts include comments that are responses to comments.\n \n     @apiExample {curl} get the count of 5 threads:\n         curl 'https://comments.example.com/count' -d '[\"/blog/firstPost.html\", \"/blog/controversalPost.html\", \"/blog/howToCode.html\",    \"/blog/boringPost.html\", \"/blog/isso.html\"]"
    }
  ]
}
