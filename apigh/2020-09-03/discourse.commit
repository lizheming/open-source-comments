{
  "sha": "67dec38f314b877e35be56d21f47f297799ea903",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODo2N2RlYzM4ZjMxNGI4NzdlMzViZTU2ZDIxZjQ3ZjI5Nzc5OWVhOTAz",
  "commit": {
    "author": {
      "name": "Blake Erickson",
      "email": "o.blakeerickson@gmail.com",
      "date": "2020-09-03T02:12:24Z"
    },
    "committer": {
      "name": "Blake Erickson",
      "email": "o.blakeerickson@gmail.com",
      "date": "2020-09-03T02:19:46Z"
    },
    "message": "FIX: Gravatar download attempt if user is missing their email\n\nIt is possible that a user could exist without an email, if so we should\nnot enqueue a job to download their gravatar.\n\nThis commit resolves this error that can occur:\n\n```\nJob exception: undefined method `email' for nil:NilClass\n/var/www/discourse/app/models/user.rb:1204:in `email'\n/var/www/discourse/app/jobs/regular/update_gravatar.rb:12:in `execute'\n```\n\nThis commit also fixes the original spec which actually was wrong. The\njob never enqueued in the original spec and so the gravatar was never\nactually updated and the test was checking if the two values were the\nsame, but they were both null and never updated, so of course they were\nthe same!\n\nA new test has also been added to make sure the gravatar job isn't\nenqueued when a user's email is missing.",
    "tree": {
      "sha": "bf29120f41aeba70b8b4bef1e1596febd768b065",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/bf29120f41aeba70b8b4bef1e1596febd768b065"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/67dec38f314b877e35be56d21f47f297799ea903",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/67dec38f314b877e35be56d21f47f297799ea903",
  "html_url": "https://github.com/discourse/discourse/commit/67dec38f314b877e35be56d21f47f297799ea903",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/67dec38f314b877e35be56d21f47f297799ea903/comments",
  "author": {
    "login": "oblakeerickson",
    "id": 1490496,
    "node_id": "MDQ6VXNlcjE0OTA0OTY=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/1490496?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/oblakeerickson",
    "html_url": "https://github.com/oblakeerickson",
    "followers_url": "https://api.github.com/users/oblakeerickson/followers",
    "following_url": "https://api.github.com/users/oblakeerickson/following{/other_user}",
    "gists_url": "https://api.github.com/users/oblakeerickson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/oblakeerickson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/oblakeerickson/subscriptions",
    "organizations_url": "https://api.github.com/users/oblakeerickson/orgs",
    "repos_url": "https://api.github.com/users/oblakeerickson/repos",
    "events_url": "https://api.github.com/users/oblakeerickson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/oblakeerickson/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "oblakeerickson",
    "id": 1490496,
    "node_id": "MDQ6VXNlcjE0OTA0OTY=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/1490496?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/oblakeerickson",
    "html_url": "https://github.com/oblakeerickson",
    "followers_url": "https://api.github.com/users/oblakeerickson/followers",
    "following_url": "https://api.github.com/users/oblakeerickson/following{/other_user}",
    "gists_url": "https://api.github.com/users/oblakeerickson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/oblakeerickson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/oblakeerickson/subscriptions",
    "organizations_url": "https://api.github.com/users/oblakeerickson/orgs",
    "repos_url": "https://api.github.com/users/oblakeerickson/repos",
    "events_url": "https://api.github.com/users/oblakeerickson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/oblakeerickson/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d9b30308f1f61078ccef6a2553a1a347396e3f99",
      "url": "https://api.github.com/repos/discourse/discourse/commits/d9b30308f1f61078ccef6a2553a1a347396e3f99",
      "html_url": "https://github.com/discourse/discourse/commit/d9b30308f1f61078ccef6a2553a1a347396e3f99"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 36,
    "deletions": 7
  },
  "files": [
    {
      "sha": "de954b41eeac3ddf9041188ba80227cc43f3d4ce",
      "filename": "app/jobs/regular/update_gravatar.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/67dec38f314b877e35be56d21f47f297799ea903/app/jobs/regular/update_gravatar.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/67dec38f314b877e35be56d21f47f297799ea903/app/jobs/regular/update_gravatar.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/jobs/regular/update_gravatar.rb?ref=67dec38f314b877e35be56d21f47f297799ea903",
      "patch": "@@ -9,7 +9,7 @@ def execute(args)\n       user = User.find_by(id: args[:user_id])\n       avatar = UserAvatar.find_by(id: args[:avatar_id])\n \n-      if user && avatar && avatar.user&.id == user.id && user.email.present?\n+      if user && avatar && avatar.user&.id == user.id && user.primary_email.present?\n         avatar.update_gravatar!\n         if !user.uploaded_avatar_id && avatar.gravatar_upload_id\n           user.update_column(:uploaded_avatar_id, avatar.gravatar_upload_id)"
    },
    {
      "sha": "865b6676facceb2a17f390c48cb9c4edb8b3d357",
      "filename": "app/models/user.rb",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/discourse/discourse/blob/67dec38f314b877e35be56d21f47f297799ea903/app/models/user.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/67dec38f314b877e35be56d21f47f297799ea903/app/models/user.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/user.rb?ref=67dec38f314b877e35be56d21f47f297799ea903",
      "patch": "@@ -1077,7 +1077,10 @@ def refresh_avatar\n \n     avatar = user_avatar || create_user_avatar\n \n-    if SiteSetting.automatically_download_gravatars? && !avatar.last_gravatar_download_attempt\n+    if self.primary_email.present? &&\n+        SiteSetting.automatically_download_gravatars? &&\n+        !avatar.last_gravatar_download_attempt\n+\n       Jobs.cancel_scheduled_job(:update_gravatar, user_id: self.id, avatar_id: avatar.id)\n       Jobs.enqueue_in(1.second, :update_gravatar, user_id: self.id, avatar_id: avatar.id)\n     end"
    },
    {
      "sha": "0f0de83105904da33896819b4a67b67970d225f3",
      "filename": "spec/jobs/update_gravatar_spec.rb",
      "status": "modified",
      "additions": 31,
      "deletions": 5,
      "changes": 36,
      "blob_url": "https://github.com/discourse/discourse/blob/67dec38f314b877e35be56d21f47f297799ea903/spec/jobs/update_gravatar_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/67dec38f314b877e35be56d21f47f297799ea903/spec/jobs/update_gravatar_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/jobs/update_gravatar_spec.rb?ref=67dec38f314b877e35be56d21f47f297799ea903",
      "patch": "@@ -3,22 +3,48 @@\n require 'rails_helper'\n \n describe Jobs::UpdateGravatar do\n+  fab!(:user) { Fabricate(:user) }\n+  let(:temp) { Tempfile.new('test') }\n+  fab!(:upload) { Fabricate(:upload, user: user) }\n+  let(:avatar) { user.create_user_avatar! }\n \n   it \"picks gravatar if system avatar is picked and gravatar was just downloaded\" do\n-    user = User.create!(username: \"bob\", name: \"bob\", email: \"a@a.com\")\n+    temp.binmode\n+    # tiny valid png\n+    temp.write(Base64.decode64(\"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAACklEQVR4nGMAAQAABQABDQottAAAAABJRU5ErkJggg==\"))\n+    temp.rewind\n+    FileHelper.expects(:download).returns(temp)\n+\n+    Jobs.run_immediately!\n+\n     expect(user.uploaded_avatar_id).to eq(nil)\n     expect(user.user_avatar.gravatar_upload_id).to eq(nil)\n \n-    png = Base64.decode64(\"R0lGODlhAQABALMAAAAAAIAAAACAAICAAAAAgIAAgACAgMDAwICAgP8AAAD/AP//AAAA//8A/wD//wBiZCH5BAEAAA8ALAAAAAABAAEAAAQC8EUAOw==\")\n-    url = \"https://www.gravatar.com/avatar/d10ca8d11301c2f4993ac2279ce4b930.png?s=360&d=404\"\n-    stub_request(:get, url).to_return(body: png)\n-\n     SiteSetting.automatically_download_gravatars = true\n \n     user.refresh_avatar\n     user.reload\n \n+    expect(user.uploaded_avatar_id).to_not eq(nil)\n     expect(user.uploaded_avatar_id).to eq(user.user_avatar.gravatar_upload_id)\n+\n+    temp.unlink\n   end\n \n+  it \"does not enqueue a job when user is missing their email\" do\n+    user.primary_email.destroy\n+    user.reload\n+\n+    expect(user.uploaded_avatar_id).to eq(nil)\n+    expect(user.user_avatar.gravatar_upload_id).to eq(nil)\n+\n+    SiteSetting.automatically_download_gravatars = true\n+\n+    expect { user.refresh_avatar }\n+      .to change { Jobs::UpdateGravatar.jobs.count }.by(0)\n+    user.reload\n+\n+    expect(user.uploaded_avatar_id).to eq(nil)\n+    expect(user.user_avatar.gravatar_upload_id).to eq(nil)\n+  end\n end"
    }
  ]
}
