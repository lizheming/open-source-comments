{
  "sha": "3b99a588f77c232c225024147e41713c6dae254e",
  "node_id": "C_kwDOCQOkhNoAKDNiOTlhNTg4Zjc3YzIzMmMyMjUwMjQxNDdlNDE3MTNjNmRhZTI1NGU",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2023-02-04T12:55:01Z"
    },
    "committer": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2023-02-04T12:55:01Z"
    },
    "message": "chore: replace deprecated `io/ioutil` with new\n\nSigned-off-by: qwqcode <qwqcode@gmail.com>",
    "tree": {
      "sha": "920ced14941e300c5cbf086dbb8f3ae09aeb9115",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/920ced14941e300c5cbf086dbb8f3ae09aeb9115"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/3b99a588f77c232c225024147e41713c6dae254e",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQS0Ev3sdPZbHkWwzmLUbg8O6nwTagUCY95VpQAKCRDUbg8O6nwT\navhQAP0fANfqrmSFjtwuMA7ZeWOY/x9Me8xHE6xhqAzrVs/aUQEAvWb1bqgv5j3M\npLc3m5F6rDXSrN4wIx9DcIPWLQtTCwY=\n=l0zS\n-----END PGP SIGNATURE-----",
      "payload": "tree 920ced14941e300c5cbf086dbb8f3ae09aeb9115\nparent fa3239e5668734991d5fa686ec86e1de0a452a8b\nauthor qwqcode <qwqcode@gmail.com> 1675515301 +0800\ncommitter qwqcode <qwqcode@gmail.com> 1675515301 +0800\n\nchore: replace deprecated `io/ioutil` with new\n\nSigned-off-by: qwqcode <qwqcode@gmail.com>\n"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/3b99a588f77c232c225024147e41713c6dae254e",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/3b99a588f77c232c225024147e41713c6dae254e",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/3b99a588f77c232c225024147e41713c6dae254e/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fa3239e5668734991d5fa686ec86e1de0a452a8b",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/fa3239e5668734991d5fa686ec86e1de0a452a8b",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/fa3239e5668734991d5fa686ec86e1de0a452a8b"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 11,
    "deletions": 15
  },
  "files": [
    {
      "sha": "aee9ba4958187dcf865999eb160a1c9f837c217c",
      "filename": "internal/anti_spam/anti_spam.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/3b99a588f77c232c225024147e41713c6dae254e/internal%2Fanti_spam%2Fanti_spam.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/3b99a588f77c232c225024147e41713c6dae254e/internal%2Fanti_spam%2Fanti_spam.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fanti_spam%2Fanti_spam.go?ref=3b99a588f77c232c225024147e41713c6dae254e",
      "patch": "@@ -2,8 +2,8 @@ package anti_spam\n \n import (\n \t\"fmt\"\n-\t\"io/ioutil\"\n \t\"net/url\"\n+\t\"os\"\n \t\"strconv\"\n \t\"strings\"\n \n@@ -124,7 +124,7 @@ func SyncSpamCheck(comment *entity.Comment, fiberCtx *fiber.Ctx) {\n \t\t\tAntiSpamReplaceKeywords = &[]string{}\n \t\t\t// 加载文件\n \t\t\tfor _, f := range keywordsConf.Files {\n-\t\t\t\tbuf, err := ioutil.ReadFile(f)\n+\t\t\t\tbuf, err := os.ReadFile(f)\n \t\t\t\tif err != nil {\n \t\t\t\t\tlogrus.Error(\"Failed to load Keyword Dictionary file:\" + f)\n \t\t\t\t} else {"
    },
    {
      "sha": "e62b711cf9c8d94a14a271efc3d24efc984a0f16",
      "filename": "internal/anti_spam/anti_spam_akismet.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/3b99a588f77c232c225024147e41713c6dae254e/internal%2Fanti_spam%2Fanti_spam_akismet.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/3b99a588f77c232c225024147e41713c6dae254e/internal%2Fanti_spam%2Fanti_spam_akismet.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fanti_spam%2Fanti_spam_akismet.go?ref=3b99a588f77c232c225024147e41713c6dae254e",
      "patch": "@@ -3,7 +3,7 @@ package anti_spam\n import (\n \t\"errors\"\n \t\"fmt\"\n-\t\"io/ioutil\"\n+\t\"io\"\n \t\"net/http\"\n \t\"net/url\"\n \t\"reflect\"\n@@ -60,7 +60,7 @@ func Akismet(params *AkismetParams, key string) (isPass bool, err error) {\n \t}\n \n \tdefer resp.Body.Close()\n-\trespBody, err := ioutil.ReadAll(resp.Body)\n+\trespBody, err := io.ReadAll(resp.Body)\n \tif err != nil {\n \t\treturn false, err\n \t}"
    },
    {
      "sha": "01b2fc17803e5885a1ea0314df55dcd4b02fadbb",
      "filename": "internal/artransfer/importer.go",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/3b99a588f77c232c225024147e41713c6dae254e/internal%2Fartransfer%2Fimporter.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/3b99a588f77c232c225024147e41713c6dae254e/internal%2Fartransfer%2Fimporter.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fartransfer%2Fimporter.go?ref=3b99a588f77c232c225024147e41713c6dae254e",
      "patch": "@@ -5,7 +5,6 @@ import (\n \t\"encoding/json\"\n \t\"errors\"\n \t\"fmt\"\n-\t\"io/ioutil\"\n \t\"net/url\"\n \t\"os\"\n \t\"reflect\"\n@@ -170,7 +169,7 @@ func JsonFileReady(payload []string) (string, error) {\n \t\treturn \"\", errors.New(i18n.T(\"{{name}} not found\", map[string]interface{}{\"name\": i18n.T(\"File\")}))\n \t}\n \n-\tbuf, err := ioutil.ReadFile(jsonFile)\n+\tbuf, err := os.ReadFile(jsonFile)\n \tif err != nil {\n \t\treturn \"\", errors.New(\"file open failed\" + \": \" + err.Error())\n \t}"
    },
    {
      "sha": "37cae222336a10b64efba28fe148734f8fd3af3f",
      "filename": "internal/captcha/geetest.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/3b99a588f77c232c225024147e41713c6dae254e/internal%2Fcaptcha%2Fgeetest.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/3b99a588f77c232c225024147e41713c6dae254e/internal%2Fcaptcha%2Fgeetest.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fcaptcha%2Fgeetest.go?ref=3b99a588f77c232c225024147e41713c6dae254e",
      "patch": "@@ -6,7 +6,7 @@ import (\n \t\"encoding/hex\"\n \t\"encoding/json\"\n \t\"errors\"\n-\t\"io/ioutil\"\n+\t\"io\"\n \t\"net/http\"\n \t\"net/url\"\n \t\"time\"\n@@ -62,7 +62,7 @@ func GeetestCheck(paramsJSON string) (isPass bool, reason string, err error) {\n \t}\n \n \t// 处理响应结果\n-\tresJsonBuf, _ := ioutil.ReadAll(resp.Body)\n+\tresJsonBuf, _ := io.ReadAll(resp.Body)\n \tresJson := string(resJsonBuf)\n \n \tgResult := gjson.Get(resJson, \"result\")"
    },
    {
      "sha": "fd6c449df3f262f75f779d30f4a873bcc50449ea",
      "filename": "internal/core/core.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/3b99a588f77c232c225024147e41713c6dae254e/internal%2Fcore%2Fcore.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/3b99a588f77c232c225024147e41713c6dae254e/internal%2Fcore%2Fcore.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fcore%2Fcore.go?ref=3b99a588f77c232c225024147e41713c6dae254e",
      "patch": "@@ -1,7 +1,7 @@\n package core\n \n import (\n-\t\"io/ioutil\"\n+\t\"io\"\n \t\"os\"\n \t\"sync\"\n \n@@ -91,7 +91,7 @@ func initI18n() {\n func initLog() {\n \tlogrus.New()\n \tif !config.Instance.Log.Enabled {\n-\t\tlogrus.SetOutput(ioutil.Discard)\n+\t\tlogrus.SetOutput(io.Discard)\n \t\treturn\n \t}\n "
    },
    {
      "sha": "f712b8d1cc88ae2d96d7ff447c9e65076412719b",
      "filename": "internal/core/gen.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/3b99a588f77c232c225024147e41713c6dae254e/internal%2Fcore%2Fgen.go",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/3b99a588f77c232c225024147e41713c6dae254e/internal%2Fcore%2Fgen.go",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/internal%2Fcore%2Fgen.go?ref=3b99a588f77c232c225024147e41713c6dae254e",
      "patch": "@@ -2,7 +2,7 @@ package core\n \n import (\n \t\"fmt\"\n-\t\"io/ioutil\"\n+\t\"io\"\n \t\"math/rand\"\n \t\"os\"\n \t\"path/filepath\"\n@@ -84,7 +84,7 @@ func getEmbedFile(filename string) string {\n \t\tlogrus.Fatal(\"Invalid built-in resource `\"+filename+\"`: \", err)\n \t}\n \n-\tbuf, err := ioutil.ReadAll(file)\n+\tbuf, err := io.ReadAll(file)\n \tif err != nil {\n \t\tlogrus.Fatal(\"Read built-in resources `\"+filename+\"` error: \", err)\n \t}"
    },
    {
      "sha": "358241ed209ecfb270f74ac6d9a5a6b9cacd28a8",
      "filename": "ui/packages/artalk/index.html",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/3b99a588f77c232c225024147e41713c6dae254e/ui%2Fpackages%2Fartalk%2Findex.html",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/3b99a588f77c232c225024147e41713c6dae254e/ui%2Fpackages%2Fartalk%2Findex.html",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Findex.html?ref=3b99a588f77c232c225024147e41713c6dae254e",
      "patch": "@@ -30,9 +30,6 @@\n     body.dark-mode .to-night { background: #006fd9;border: 1px solid #2d3235;color: #fff; }\n     .to-top { right: 25px; }\n   </style>\n-  <!--<link rel=\"stylesheet\"\n-      href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0/styles/arta.min.css\">\n-  <script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0/highlight.min.js\"></script>-->\n \n   <!-- For mobile testing -->\n   <script src=\"https://unpkg.com/vconsole@latest/dist/vconsole.min.js\"></script>"
    }
  ]
}
