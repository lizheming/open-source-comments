{
  "sha": "1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a",
  "node_id": "C_kwDOBtgov9oAKDFmOTZhMGU0ZDNlZTExMDJkN2M3Y2ZmNWE3NzFhYmRjNmEwMzMzMGE",
  "commit": {
    "author": {
      "name": "Dmitry Verkhoturov",
      "email": "paskal.07@gmail.com",
      "date": "2022-07-04T21:39:43Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2022-07-10T15:49:41Z"
    },
    "message": "update go-pkgz/auth module to fix dev provider work\n\nFix for error introduced in the following commit:\nhttps://github.com/go-pkgz/auth/commit/06e72788bcbb23d958c60655b42892b95457477e\n\nAfter text/template was replaced with the html/template,\nthe dev provider started escaping parameters\nwhich were not supposed to be escaped.",
    "tree": {
      "sha": "6d09e8ab2a60d0be530a876574904f9954ea1dbd",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/6d09e8ab2a60d0be530a876574904f9954ea1dbd"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a",
  "html_url": "https://github.com/umputun/remark42/commit/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/comments",
  "author": {
    "login": "paskal",
    "id": 712534,
    "node_id": "MDQ6VXNlcjcxMjUzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/712534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paskal",
    "html_url": "https://github.com/paskal",
    "followers_url": "https://api.github.com/users/paskal/followers",
    "following_url": "https://api.github.com/users/paskal/following{/other_user}",
    "gists_url": "https://api.github.com/users/paskal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paskal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paskal/subscriptions",
    "organizations_url": "https://api.github.com/users/paskal/orgs",
    "repos_url": "https://api.github.com/users/paskal/repos",
    "events_url": "https://api.github.com/users/paskal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paskal/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "99716984adab05bc02344fa62e6ab44895fc26b3",
      "url": "https://api.github.com/repos/umputun/remark42/commits/99716984adab05bc02344fa62e6ab44895fc26b3",
      "html_url": "https://github.com/umputun/remark42/commit/99716984adab05bc02344fa62e6ab44895fc26b3"
    }
  ],
  "stats": {
    "total": 330,
    "additions": 122,
    "deletions": 208
  },
  "files": [
    {
      "sha": "6bf14c3cd7360e524eb17808d3078876f4c863ff",
      "filename": ".github/workflows/ci-test-backend.yml",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/.github%2Fworkflows%2Fci-test-backend.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/.github%2Fworkflows%2Fci-test-backend.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/.github%2Fworkflows%2Fci-test-backend.yml?ref=1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a",
      "patch": "@@ -34,7 +34,7 @@ jobs:\n \n       - name: install golangci-lint and goveralls\n         run: |\n-          curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $GITHUB_WORKSPACE v1.44.0\n+          curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $GITHUB_WORKSPACE v1.46.1\n           go get -u github.com/mattn/goveralls\n \n       - name: test and lint backend"
    },
    {
      "sha": "5bd4dab655e61f1ae3c8170d6555cd7beae49f93",
      "filename": "backend/_example/memory_store/go.mod",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2F_example%2Fmemory_store%2Fgo.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2F_example%2Fmemory_store%2Fgo.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2F_example%2Fmemory_store%2Fgo.mod?ref=1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a",
      "patch": "@@ -27,7 +27,7 @@ require (\n \tgithub.com/gorilla/css v1.0.0 // indirect\n \tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n \tgithub.com/hashicorp/go-multierror v1.1.1 // indirect\n-\tgithub.com/microcosm-cc/bluemonday v1.0.18 // indirect\n+\tgithub.com/microcosm-cc/bluemonday v1.0.19 // indirect\n \tgithub.com/pkg/errors v0.9.1 // indirect\n \tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n \tgithub.com/rs/xid v1.4.0 // indirect"
    },
    {
      "sha": "09674c474ad9d1e3ab4c93204f09d6e68955f39c",
      "filename": "backend/_example/memory_store/go.sum",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2F_example%2Fmemory_store%2Fgo.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2F_example%2Fmemory_store%2Fgo.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2F_example%2Fmemory_store%2Fgo.sum?ref=1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a",
      "patch": "@@ -56,8 +56,8 @@ github.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\n github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\n github.com/mattn/go-colorable v0.1.6/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\n github.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\n-github.com/microcosm-cc/bluemonday v1.0.18 h1:6HcxvXDAi3ARt3slx6nTesbvorIc3QeTzBNRvWktHBo=\n-github.com/microcosm-cc/bluemonday v1.0.18/go.mod h1:Z0r70sCuXHig8YpBzCc5eGHAap2K7e/u082ZUpDRRqM=\n+github.com/microcosm-cc/bluemonday v1.0.19 h1:OI7hoF5FY4pFz2VA//RN8TfM0YJ2dJcl4P4APrCWy6c=\n+github.com/microcosm-cc/bluemonday v1.0.19/go.mod h1:QNzV2UbLK2/53oIIwTOyLUSABMkjZ4tqiyC1g/DyqxE=\n github.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n github.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\n github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n@@ -86,7 +86,6 @@ golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACk\n golang.org/x/image v0.0.0-20220413100746-70e8d0d3baa9 h1:LRtI4W37N+KFebI/qV0OFiLUv4GLOWeEW5hn/KEJvxE=\n golang.org/x/image v0.0.0-20220413100746-70e8d0d3baa9/go.mod h1:023OzeP/+EPmXeapQh35lcL3II3LrY8Ic+EFFKVhULM=\n golang.org/x/net v0.0.0-20200520182314-0ba52f642ac2/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\n-golang.org/x/net v0.0.0-20210614182718-04defd469f4e/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\n golang.org/x/net v0.0.0-20210916014120-12bc252f5db8/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\n golang.org/x/net v0.0.0-20220520000938-2e3eb7b945c2 h1:NWy5+hlRbC7HK+PmcXVUmW1IMyFce7to56IUvhUFm7Y=\n golang.org/x/net v0.0.0-20220520000938-2e3eb7b945c2/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk="
    },
    {
      "sha": "c57904dc65a36f9d81da7499aaae3b7c3b7bc35e",
      "filename": "backend/go.mod",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fgo.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fgo.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fgo.mod?ref=1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a",
      "patch": "@@ -11,7 +11,7 @@ require (\n \tgithub.com/go-chi/chi/v5 v5.0.7\n \tgithub.com/go-chi/cors v1.2.1\n \tgithub.com/go-chi/render v1.0.1\n-\tgithub.com/go-pkgz/auth v1.19.1-0.20220605174438-06e72788bcbb\n+\tgithub.com/go-pkgz/auth v1.19.1-0.20220624002401-8b91a0eee69a\n \tgithub.com/go-pkgz/jrpc v0.2.0\n \tgithub.com/go-pkgz/lcw v0.8.1\n \tgithub.com/go-pkgz/lgr v0.10.4\n@@ -25,7 +25,7 @@ require (\n \tgithub.com/hashicorp/go-multierror v1.1.1\n \tgithub.com/jessevdk/go-flags v1.5.0\n \tgithub.com/kyokomi/emoji/v2 v2.2.9\n-\tgithub.com/microcosm-cc/bluemonday v1.0.18\n+\tgithub.com/microcosm-cc/bluemonday v1.0.19\n \tgithub.com/rakyll/statik v0.1.7\n \tgithub.com/rs/xid v1.4.0\n \tgithub.com/russross/blackfriday/v2 v2.1.0"
    },
    {
      "sha": "29455474ab61095f7a9dbe09d088c1a79edb3e9b",
      "filename": "backend/go.sum",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fgo.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fgo.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fgo.sum?ref=1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a",
      "patch": "@@ -143,6 +143,8 @@ github.com/go-oauth2/oauth2/v4 v4.4.3 h1:IiU3iAK5NEeZ4mUf5HV9tN7iNlx4AGUkIJ5M1C4\n github.com/go-oauth2/oauth2/v4 v4.4.3/go.mod h1:NR9Hugz5/Qe2OGxoPBhsTRNjnm/amC+z9+XTwt63rhs=\n github.com/go-pkgz/auth v1.19.1-0.20220605174438-06e72788bcbb h1:HYMG+Tto0JVSMPtYkdXR3sT2FbKImFuXctgo9e4OdQw=\n github.com/go-pkgz/auth v1.19.1-0.20220605174438-06e72788bcbb/go.mod h1:ncL+ePcAf9A7lCKKDAQ6aIs4MTz/Q/g5XIhRx5hap6E=\n+github.com/go-pkgz/auth v1.19.1-0.20220624002401-8b91a0eee69a h1:gp0mLtawviHOwmrd6E60yxA+9GAKtpBjI1WCc/4oyAE=\n+github.com/go-pkgz/auth v1.19.1-0.20220624002401-8b91a0eee69a/go.mod h1:ncL+ePcAf9A7lCKKDAQ6aIs4MTz/Q/g5XIhRx5hap6E=\n github.com/go-pkgz/email v0.3.0 h1:89FbVF6trHkdn2VVoXlBfZHkdYQ1vLmQ54OhdosaFtc=\n github.com/go-pkgz/email v0.3.0/go.mod h1:TpnmSLkQW3FyICit2hn7WIhCUDrhCX6btzz5wS3wHRI=\n github.com/go-pkgz/expirable-cache v0.0.3 h1:rTh6qNPp78z0bQE6HDhXBHUwqnV9i09Vm6dksJLXQDc=\n@@ -306,6 +308,8 @@ github.com/mattn/go-colorable v0.1.7/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope\n github.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\n github.com/microcosm-cc/bluemonday v1.0.18 h1:6HcxvXDAi3ARt3slx6nTesbvorIc3QeTzBNRvWktHBo=\n github.com/microcosm-cc/bluemonday v1.0.18/go.mod h1:Z0r70sCuXHig8YpBzCc5eGHAap2K7e/u082ZUpDRRqM=\n+github.com/microcosm-cc/bluemonday v1.0.19 h1:OI7hoF5FY4pFz2VA//RN8TfM0YJ2dJcl4P4APrCWy6c=\n+github.com/microcosm-cc/bluemonday v1.0.19/go.mod h1:QNzV2UbLK2/53oIIwTOyLUSABMkjZ4tqiyC1g/DyqxE=\n github.com/montanaflynn/stats v0.0.0-20171201202039-1bf9dbcd8cbe/go.mod h1:wL8QJuTMNUDYhXwkmfOly8iTdp5TEcJFWZD2D7SIkUc=\n github.com/moul/http2curl v1.0.0 h1:dRMWoAtb+ePxMlLkrCbAqh4TlPHXvoGUSQ323/9Zahs=\n github.com/moul/http2curl v1.0.0/go.mod h1:8UbvGypXm98wA/IqH45anm5Y2Z6ep6O31QGOAZ3H0fQ="
    },
    {
      "sha": "222c7ae7d8538096bb715feab4d2b0c56bc7b02c",
      "filename": "backend/vendor/github.com/go-pkgz/auth/provider/dev_provider.go",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fdev_provider.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fdev_provider.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Fdev_provider.go?ref=1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a",
      "patch": "@@ -35,7 +35,7 @@ type DevAuthServer struct {\n }\n \n // Run oauth2 dev server on port devAuthPort\n-func (d *DevAuthServer) Run(ctx context.Context) { //nolint (gocyclo)\n+func (d *DevAuthServer) Run(ctx context.Context) { // nolint (gocyclo)\n \tif d.Provider.Port == 0 {\n \t\td.Provider.Port = defDevAuthPort\n \t}\n@@ -60,9 +60,7 @@ func (d *DevAuthServer) Run(ctx context.Context) { //nolint (gocyclo)\n \n \t\t\t\t// first time it will be called without username and will ask for one\n \t\t\t\tif !d.Automatic && (r.ParseForm() != nil || r.Form.Get(\"username\") == \"\") {\n-\n-\t\t\t\t\tformData := struct{ Query string }{Query: r.URL.RawQuery}\n-\n+\t\t\t\t\tformData := struct{ Query template.URL }{Query: template.URL(r.URL.RawQuery)} //nolint:gosec // query is safes\n \t\t\t\t\tif err = userFormTmpl.Execute(w, formData); err != nil {\n \t\t\t\t\t\td.Logf(\"[WARN] can't write, %s\", err)\n \t\t\t\t\t}"
    },
    {
      "sha": "f4ee0ecdaade67afca7b1dc4947ae50462a99d37",
      "filename": "backend/vendor/github.com/go-pkgz/auth/provider/telegram.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Ftelegram.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Ftelegram.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fgo-pkgz%2Fauth%2Fprovider%2Ftelegram.go?ref=1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a",
      "patch": "@@ -309,7 +309,7 @@ func (th *TelegramHandler) LoginHandler(w http.ResponseWriter, r *http.Request)\n \t\t\tExpiresAt: time.Now().Add(30 * time.Minute).Unix(),\n \t\t\tNotBefore: time.Now().Add(-1 * time.Minute).Unix(),\n \t\t},\n-\t\tSessionOnly: false, // TODO\n+\t\tSessionOnly: false, // TODO review?\n \t}\n \n \tif _, err := th.TokenService.Set(w, claims); err != nil {"
    },
    {
      "sha": "2e6c493ba8c13c6a2fc1e1fcee7236fbfffbfcc8",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/LICENSE.md",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FLICENSE.md",
      "raw_url": "https://github.com/umputun/remark42/raw/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FLICENSE.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FLICENSE.md?ref=1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a",
      "patch": "@@ -1,3 +1,6 @@\n+SPDX short identifier: BSD-3-Clause\n+https://opensource.org/licenses/BSD-3-Clause\n+\n Copyright (c) 2014, David Kitchen <david@buro9.com>\n \n All rights reserved."
    },
    {
      "sha": "8e658fea754473d2d89de688e2a9b1e2740398b6",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/README.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2FREADME.md?ref=1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a",
      "patch": "@@ -1,4 +1,4 @@\n-# bluemonday [![Build Status](https://travis-ci.org/microcosm-cc/bluemonday.svg?branch=master)](https://travis-ci.org/microcosm-cc/bluemonday) [![GoDoc](https://godoc.org/github.com/microcosm-cc/bluemonday?status.png)](https://godoc.org/github.com/microcosm-cc/bluemonday) [![Sourcegraph](https://sourcegraph.com/github.com/microcosm-cc/bluemonday/-/badge.svg)](https://sourcegraph.com/github.com/microcosm-cc/bluemonday?badge)\n+# bluemonday [![GoDoc](https://godoc.org/github.com/microcosm-cc/bluemonday?status.png)](https://godoc.org/github.com/microcosm-cc/bluemonday) [![Sourcegraph](https://sourcegraph.com/github.com/microcosm-cc/bluemonday/-/badge.svg)](https://sourcegraph.com/github.com/microcosm-cc/bluemonday?badge)\n \n bluemonday is a HTML sanitizer implemented in Go. It is fast and highly configurable.\n "
    },
    {
      "sha": "e0429cf25c3eb63e7bc32e2d620614b02318016e",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/css/handlers.go",
      "status": "modified",
      "additions": 99,
      "deletions": 170,
      "changes": 269,
      "blob_url": "https://github.com/umputun/remark42/blob/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fcss%2Fhandlers.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fcss%2Fhandlers.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fcss%2Fhandlers.go?ref=1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a",
      "patch": "@@ -280,6 +280,49 @@ var (\n \t\t\"slategray\", \"slategrey\", \"snow\", \"springgreen\", \"steelblue\", \"tan\",\n \t\t\"teal\", \"thistle\", \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\",\n \t\t\"whitesmoke\", \"yellow\", \"yellowgreen\"}\n+\n+\tAlpha             = regexp.MustCompile(`^[a-z]+$`)\n+\tBlur              = regexp.MustCompile(`^blur\\([0-9]+px\\)$`)\n+\tBrightnessCont    = regexp.MustCompile(`^(brightness|contrast)\\([0-9]+\\%\\)$`)\n+\tCount             = regexp.MustCompile(`^[0-9]+[\\.]?[0-9]*$`)\n+\tCubicBezier       = regexp.MustCompile(`^cubic-bezier\\(([ ]*(0(.[0-9]+)?|1(.0)?),){3}[ ]*(0(.[0-9]+)?|1)\\)$`)\n+\tDigits            = regexp.MustCompile(`^digits [2-4]$`)\n+\tDropShadow        = regexp.MustCompile(`drop-shadow\\(([-]?[0-9]+px) ([-]?[0-9]+px)( [-]?[0-9]+px)?( ([-]?[0-9]+px))?`)\n+\tFont              = regexp.MustCompile(`^('[a-z \\-]+'|[a-z \\-]+)$`)\n+\tGrayscale         = regexp.MustCompile(`^grayscale\\(([0-9]{1,2}|100)%\\)$`)\n+\tGridTemplateAreas = regexp.MustCompile(`^['\"]?[a-z ]+['\"]?$`)\n+\tHexRGB            = regexp.MustCompile(`^#([0-9a-f]{3}|[0-9a-f]{6}|[0-9a-f]{8})$`)\n+\tHSL               = regexp.MustCompile(`^hsl\\([ ]*([012]?[0-9]{1,2}|3[0-5][0-9]|360),[ ]*([0-9]{0,2}|100)\\%,[ ]*([0-9]{0,2}|100)\\%\\)$`)\n+\tHSLA              = regexp.MustCompile(`^hsla\\(([ ]*[012]?[0-9]{1,2}|3[0-5][0-9]|360),[ ]*([0-9]{0,2}|100)\\%,[ ]*([0-9]{0,2}|100)\\%,[ ]*(1|1\\.0|0|(0\\.[0-9]+))\\)$`)\n+\tHueRotate         = regexp.MustCompile(`^hue-rotate\\(([12]?[0-9]{1,2}|3[0-5][0-9]|360)?\\)$`)\n+\tInvert            = regexp.MustCompile(`^invert\\(([0-9]{1,2}|100)%\\)$`)\n+\tLength            = regexp.MustCompile(`^[\\-]?([0-9]+|[0-9]*[\\.][0-9]+)(%|cm|mm|in|px|pt|pc|em|ex|ch|rem|vw|vh|vmin|vmax|deg|rad|turn)?$`)\n+\tMatrix            = regexp.MustCompile(`^matrix\\(([ ]*[0-9]+[\\.]?[0-9]*,){5}([ ]*[0-9]+[\\.]?[0-9]*)\\)$`)\n+\tMatrix3D          = regexp.MustCompile(`^matrix3d\\(([ ]*[0-9]+[\\.]?[0-9]*,){15}([ ]*[0-9]+[\\.]?[0-9]*)\\)$`)\n+\tNegTime           = regexp.MustCompile(`^[\\-]?[0-9]+[\\.]?[0-9]*(s|ms)?$`)\n+\tNumeric           = regexp.MustCompile(`^[0-9]+$`)\n+\tNumericDecimal    = regexp.MustCompile(`^[0-9\\.]+$`)\n+\tOpactiy           = regexp.MustCompile(`^opacity\\(([0-9]{1,2}|100)%\\)$`)\n+\tPerspective       = regexp.MustCompile(`perspective\\(`)\n+\tPosition          = regexp.MustCompile(`^[\\-]*[0-9]+[cm|mm|in|px|pt|pc\\%]* [[\\-]*[0-9]+[cm|mm|in|px|pt|pc\\%]*]*$`)\n+\tOpacity           = regexp.MustCompile(`^(0[.]?[0-9]*)|(1.0)$`)\n+\tQuotedAlpha       = regexp.MustCompile(`^[\"'][a-z]+[\"']$`)\n+\tQuotes            = regexp.MustCompile(`^([ ]*[\"'][\\x{0022}\\x{0027}\\x{2039}\\x{2039}\\x{203A}\\x{00AB}\\x{00BB}\\x{2018}\\x{2019}\\x{201C}-\\x{201E}][\"'] [\"'][\\x{0022}\\x{0027}\\x{2039}\\x{2039}\\x{203A}\\x{00AB}\\x{00BB}\\x{2018}\\x{2019}\\x{201C}-\\x{201E}][\"'])+$`)\n+\tRect              = regexp.MustCompile(`^rect\\([0-9]+px,[ ]*[0-9]+px,[ ]*[0-9]+px,[ ]*[0-9]+px\\)$`)\n+\tRGB               = regexp.MustCompile(`^rgb\\(([ ]*((([0-9]{1,2}|100)\\%)|(([01]?[0-9]{1,2})|(2[0-4][0-9])|(25[0-5]))),){2}([ ]*((([0-9]{1,2}|100)\\%)|(([01]?[0-9]{1,2})|(2[0-4][0-9])|(25[0-5]))))\\)$`)\n+\tRGBA              = regexp.MustCompile(`^rgba\\(([ ]*((([0-9]{1,2}|100)\\%)|(([01]?[0-9]{1,2})|(2[0-4][0-9])|(25[0-5]))),){3}[ ]*(1(\\.0)?|0|(0\\.[0-9]+))\\)$`)\n+\tRotate            = regexp.MustCompile(`^rotate(x|y|z)?\\(([12]?|3[0-5][0-9]|360)\\)$`)\n+\tRotate3D          = regexp.MustCompile(`^rotate3d\\(([ ]?(1(\\.0)?|0\\.[0-9]+),){3}([12]?|3[0-5][0-9]|360)\\)$`)\n+\tSaturate          = regexp.MustCompile(`^saturate\\([0-9]+%\\)$`)\n+\tSepia             = regexp.MustCompile(`^sepia\\(([0-9]{1,2}|100)%\\)$`)\n+\tSkew              = regexp.MustCompile(`skew(x|y)?\\(`)\n+\tSpan              = regexp.MustCompile(`^span [0-9]+$`)\n+\tSteps             = regexp.MustCompile(`^steps\\([ ]*[0-9]+([ ]*,[ ]*(start|end)?)\\)$`)\n+\tTime              = regexp.MustCompile(`^[0-9]+[\\.]?[0-9]*(s|ms)?$`)\n+\tTransitionProp    = regexp.MustCompile(`^([a-zA-Z]+,[ ]?)*[a-zA-Z]+$`)\n+\tTranslateScale    = regexp.MustCompile(`(translate|translate3d|translatex|translatey|translatez|scale|scale3d|scalex|scaley|scalez)\\(`)\n+\tURL               = regexp.MustCompile(`^url\\([\\\"\\']?((https|http)[a-z0-9\\.\\\\/_:]+[\\\"\\']?)\\)$`)\n+\tZIndex            = regexp.MustCompile(`^[\\-]?[0-9]+$`)\n )\n \n func multiSplit(value string, seps ...string) []string {\n@@ -388,9 +431,7 @@ func AnimationHandler(value string) bool {\n }\n \n func AnimationDelayHandler(value string) bool {\n-\treg := regexp.MustCompile(`[\\-]?[0-9]+[\\.]?[0-9]*[s|ms]?`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif NegTime.MatchString(value) {\n \t\treturn true\n \t}\n \tvalues := []string{\"initial\", \"inherit\"}\n@@ -405,9 +446,7 @@ func AnimationDirectionHandler(value string) bool {\n }\n \n func AnimationDurationHandler(value string) bool {\n-\treg := regexp.MustCompile(`[0-9]+[\\.]?[0-9]*[s|ms]?`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Time.MatchString(value) {\n \t\treturn true\n \t}\n \tvalues := []string{\"initial\", \"inherit\"}\n@@ -422,9 +461,7 @@ func AnimationFillModeHandler(value string) bool {\n }\n \n func AnimationIterationCountHandler(value string) bool {\n-\treg := regexp.MustCompile(`[0-9]+[\\.]?[0-9]*`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Count.MatchString(value) {\n \t\treturn true\n \t}\n \tvalues := []string{\"infinite\", \"initial\", \"inherit\"}\n@@ -433,9 +470,7 @@ func AnimationIterationCountHandler(value string) bool {\n }\n \n func AnimationNameHandler(value string) bool {\n-\treg := regexp.MustCompile(`[a-z]+`)\n-\treg.Longest()\n-\treturn reg.FindString(value) == value && value != \"\"\n+\treturn Alpha.MatchString(value)\n }\n \n func AnimationPlayStateHandler(value string) bool {\n@@ -450,14 +485,10 @@ func TimingFunctionHandler(value string) bool {\n \tif in(splitVals, values) {\n \t\treturn true\n \t}\n-\treg := regexp.MustCompile(`cubic-bezier\\(([ ]*(0(.[0-9]+)?|1(.0)?),){3}[ ]*(0(.[0-9]+)?|1)\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif CubicBezier.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`steps\\([ ]*[0-9]+([ ]*,[ ]*(start|end)?)\\)`)\n-\treg.Longest()\n-\treturn reg.FindString(value) == value && value != \"\"\n+\treturn Steps.MatchString(value)\n }\n \n func BackfaceVisibilityHandler(value string) bool {\n@@ -518,9 +549,7 @@ func ImageHandler(value string) bool {\n \tif in(splitVals, values) {\n \t\treturn true\n \t}\n-\treg := regexp.MustCompile(`url\\([\\\"\\']?((https|http)[a-z0-9\\.\\\\/_:]+[\\\"\\']?)\\)`)\n-\treg.Longest()\n-\treturn reg.FindString(value) == value && value != \"\"\n+\treturn URL.MatchString(value)\n }\n \n func BackgroundOriginHandler(value string) bool {\n@@ -535,12 +564,7 @@ func BackgroundPositionHandler(value string) bool {\n \tif in(splitVals, values) {\n \t\treturn true\n \t}\n-\treg := regexp.MustCompile(`[\\-]*[0-9]+[cm|mm|in|px|pt|pc\\%]* [[\\-]*[0-9]+[cm|mm|in|px|pt|pc\\%]*]*`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n-\t\treturn true\n-\t}\n-\treturn false\n+\treturn Position.MatchString(value)\n }\n \n func BackgroundRepeatHandler(value string) bool {\n@@ -816,31 +840,19 @@ func CaretColorHandler(value string) bool {\n \tif in(splitVals, colorValues) {\n \t\treturn true\n \t}\n-\treg := regexp.MustCompile(`#[0-9abcdef]{6}`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif HexRGB.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`rgb\\(([ ]*((([0-9]{1,2}|100)\\%)|(([01]?[0-9]{1,2})|(2[0-4][0-9])|(25[0-5]))),){2}([ ]*((([0-9]{1,2}|100)\\%)|(([01]?[0-9]{1,2})|(2[0-4][0-9])|(25[0-5]))))\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif RGB.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`rgba\\(([ ]*((([0-9]{1,2}|100)\\%)|(([01]?[0-9]{1,2})|(2[0-4][0-9])|(25[0-5]))),){3}[ ]*(1(\\.0)?|0|(0\\.[0-9]+))\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif RGBA.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`hsl\\([ ]*([012]?[0-9]{1,2}|3[0-5][0-9]|360),[ ]*([0-9]{0,2}|100)\\%,[ ]*([0-9]{0,2}|100)\\%\\)`)\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif HSL.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`hsla\\(([ ]*[012]?[0-9]{1,2}|3[0-5][0-9]|360),[ ]*([0-9]{0,2}|100)\\%,[ ]*([0-9]{0,2}|100)\\%,[ ]*(1|1\\.0|0|(0\\.[0-9]+))\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n-\t\treturn true\n-\t}\n-\treturn false\n+\treturn HSLA.MatchString(value)\n }\n \n func ClearHandler(value string) bool {\n@@ -850,9 +862,7 @@ func ClearHandler(value string) bool {\n }\n \n func ClipHandler(value string) bool {\n-\treg := regexp.MustCompile(`rect\\([0-9]+px,[ ]*[0-9]+px,[ ]*[0-9]+px,[ ]*[0-9]+px\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Rect.MatchString(value) {\n \t\treturn true\n \t}\n \tvalues := []string{\"auto\", \"initial\", \"inherit\"}\n@@ -865,38 +875,23 @@ func ColorHandler(value string) bool {\n \tif in(splitVals, colorValues) {\n \t\treturn true\n \t}\n-\treg := regexp.MustCompile(`#[0-9abcdef]{6}`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif HexRGB.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`rgb\\(([ ]*((([0-9]{1,2}|100)\\%)|(([01]?[0-9]{1,2})|(2[0-4][0-9])|(25[0-5]))),){2}([ ]*((([0-9]{1,2}|100)\\%)|(([01]?[0-9]{1,2})|(2[0-4][0-9])|(25[0-5]))))\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif RGB.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`rgba\\(([ ]*((([0-9]{1,2}|100)\\%)|(([01]?[0-9]{1,2})|(2[0-4][0-9])|(25[0-5]))),){3}[ ]*(1(\\.0)?|0|(0\\.[0-9]+))\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif RGBA.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`hsl\\([ ]*([012]?[0-9]{1,2}|3[0-5][0-9]|360),[ ]*([0-9]{0,2}|100)\\%,[ ]*([0-9]{0,2}|100)\\%\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif HSL.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`hsla\\(([ ]*[012]?[0-9]{1,2}|3[0-5][0-9]|360),[ ]*([0-9]{0,2}|100)\\%,[ ]*([0-9]{0,2}|100)\\%,[ ]*(1|1\\.0|0|(0\\.[0-9]+))\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n-\t\treturn true\n-\t}\n-\treturn false\n+\treturn HSLA.MatchString(value)\n }\n \n func ColumnCountHandler(value string) bool {\n-\treg := regexp.MustCompile(`[0-9]+`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Numeric.MatchString(value) {\n \t\treturn true\n \t}\n \tvalues := []string{\"auto\", \"initial\", \"inherit\"}\n@@ -1000,54 +995,35 @@ func FilterHandler(value string) bool {\n \tif in(splitVals, values) {\n \t\treturn true\n \t}\n-\treg := regexp.MustCompile(`blur\\([0-9]+px\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Blur.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`(brightness|contrast)\\([0-9]+\\%\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif BrightnessCont.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`drop-shadow\\(([-]?[0-9]+px) ([-]?[0-9]+px)( [-]?[0-9]+px)?( ([-]?[0-9]+px))?`)\n-\treg.Longest()\n-\tcolorValue := strings.TrimSuffix(string(reg.ReplaceAll([]byte(value), []byte{})), \")\")\n-\tif ColorHandler(colorValue) {\n+\tif DropShadow.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`grayscale\\(([0-9]{1,2}|100)%\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tcolorValue := strings.TrimSuffix(string(DropShadow.ReplaceAll([]byte(value), []byte{})), \")\")\n+\tif ColorHandler(colorValue) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`hue-rotate\\(([12]?[0-9]{1,2}|3[0-5][0-9]|360)?\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Grayscale.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`invert\\(([0-9]{1,2}|100)%\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif HueRotate.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`opacity\\(([0-9]{1,2}|100)%\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Invert.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`saturate\\([0-9]+%\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Opacity.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`sepia\\(([0-9]{1,2}|100)%\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Saturate.MatchString(value) {\n \t\treturn true\n \t}\n-\t//Not allowing URLs\n-\treturn false\n+\treturn Sepia.MatchString(value)\n }\n \n func FlexHandler(value string) bool {\n@@ -1092,9 +1068,7 @@ func FlexFlowHandler(value string) bool {\n }\n \n func FlexGrowHandler(value string) bool {\n-\treg := regexp.MustCompile(`[0-9\\.]+`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif NumericDecimal.MatchString(value) {\n \t\treturn true\n \t}\n \tsplitVals := strings.Split(value, \";\")\n@@ -1144,11 +1118,9 @@ func FontFamilyHandler(value string) bool {\n \tif in(splitVals, values) {\n \t\treturn true\n \t}\n-\treg := regexp.MustCompile(`('[a-z \\-]+'|[a-z \\-]+)`)\n-\treg.Longest()\n \tfor _, i := range splitVals {\n \t\ti = strings.TrimSpace(i)\n-\t\tif reg.FindString(i) != i {\n+\t\tif Font.FindString(i) != i {\n \t\t\treturn false\n \t\t}\n \t}\n@@ -1162,9 +1134,7 @@ func FontKerningHandler(value string) bool {\n }\n \n func FontLanguageOverrideHandler(value string) bool {\n-\treg := regexp.MustCompile(`[a-z]+`)\n-\treg.Longest()\n-\treturn reg.FindString(value) == value && value != \"\"\n+\treturn Alpha.MatchString(value)\n }\n \n func FontSizeHandler(value string) bool {\n@@ -1177,9 +1147,7 @@ func FontSizeHandler(value string) bool {\n }\n \n func FontSizeAdjustHandler(value string) bool {\n-\treg := regexp.MustCompile(`[0-9]+[\\.]?[0-9]*`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Count.MatchString(value) {\n \t\treturn true\n \t}\n \tvalues := []string{\"auto\", \"initial\", \"inherit\"}\n@@ -1298,9 +1266,7 @@ func GridColumnGapHandler(value string) bool {\n }\n \n func LengthHandler(value string) bool {\n-\treg := regexp.MustCompile(`[\\-]?[0-9]+[\\.]?[0-9]*(%|cm|mm|in|px|pt|pc|em|ex|ch|rem|vw|vh|vmin|vmax|deg|rad|turn)?`)\n-\treg.Longest()\n-\treturn reg.FindString(value) == value && value != \"\"\n+\treturn Length.MatchString(value)\n }\n \n func LineBreakHandler(value string) bool {\n@@ -1310,12 +1276,10 @@ func LineBreakHandler(value string) bool {\n }\n \n func GridAxisStartEndHandler(value string) bool {\n-\treg := regexp.MustCompile(`[0-9]+`)\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Numeric.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`span [0-9]+`)\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Span.MatchString(value) {\n \t\treturn true\n \t}\n \tvalues := []string{\"auto\"}\n@@ -1366,9 +1330,7 @@ func GridTemplateAreasHandler(value string) bool {\n \tif in([]string{value}, values) {\n \t\treturn true\n \t}\n-\treg := regexp.MustCompile(`['\"]?[a-z ]+['\"]?`)\n-\treg.Longest()\n-\treturn reg.FindString(value) == value && value != \"\"\n+\treturn GridTemplateAreas.MatchString(value)\n }\n \n func GridTemplateColumnsHandler(value string) bool {\n@@ -1551,9 +1513,7 @@ func ObjectPositionHandler(value string) bool {\n }\n \n func OpacityHandler(value string) bool {\n-\treg := regexp.MustCompile(\"(0[.]?[0-9]*)|(1.0)\")\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Opacity.MatchString(value) {\n \t\treturn true\n \t}\n \tvalues := []string{\"initial\", \"inherit\"}\n@@ -1562,9 +1522,7 @@ func OpacityHandler(value string) bool {\n }\n \n func OrderHandler(value string) bool {\n-\treg := regexp.MustCompile(\"[0-9]+\")\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Numeric.MatchString(value) {\n \t\treturn true\n \t}\n \tvalues := []string{\"initial\", \"inherit\"}\n@@ -1629,9 +1587,7 @@ func OverflowWrapHandler(value string) bool {\n }\n \n func OrphansHandler(value string) bool {\n-\treg := regexp.MustCompile(`[0-9]+`)\n-\treg.Longest()\n-\treturn reg.FindString(value) == value && value != \"\"\n+\treturn Numeric.MatchString(value)\n }\n \n func PaddingHandler(value string) bool {\n@@ -1716,9 +1672,7 @@ func QuotesHandler(value string) bool {\n \tif in(splitVals, values) {\n \t\treturn true\n \t}\n-\treg := regexp.MustCompile(`([ ]*[\"'][\\x{0022}\\x{0027}\\x{2039}\\x{2039}\\x{203A}\\x{00AB}\\x{00BB}\\x{2018}\\x{2019}\\x{201C}-\\x{201E}][\"'] [\"'][\\x{0022}\\x{0027}\\x{2039}\\x{2039}\\x{203A}\\x{00AB}\\x{00BB}\\x{2018}\\x{2019}\\x{201C}-\\x{201E}][\"'])+`)\n-\treg.Longest()\n-\treturn reg.FindString(value) == value && value != \"\"\n+\treturn Quotes.MatchString(value)\n }\n \n func ResizeHandler(value string) bool {\n@@ -1766,9 +1720,7 @@ func TextCombineUprightHandler(value string) bool {\n \tif in(splitVals, values) {\n \t\treturn true\n \t}\n-\treg := regexp.MustCompile(`digits [2-4]`)\n-\treg.Longest()\n-\treturn reg.FindString(value) == value && value != \"\"\n+\treturn Digits.MatchString(value)\n }\n \n func TextDecorationHandler(value string) bool {\n@@ -1813,9 +1765,7 @@ func TextJustifyHandler(value string) bool {\n }\n \n func TextOverflowHandler(value string) bool {\n-\treg := regexp.MustCompile(\"[\\\"'][a-z]+[\\\"']\")\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif QuotedAlpha.MatchString(value) {\n \t\treturn true\n \t}\n \tvalues := []string{\"clip\", \"ellipsis\", \"initial\", \"inherit\"}\n@@ -1868,18 +1818,13 @@ func TransformHandler(value string) bool {\n \tif in([]string{value}, values) {\n \t\treturn true\n \t}\n-\treg := regexp.MustCompile(`matrix\\(([ ]*[0-9]+[\\.]?[0-9]*,){5}([ ]*[0-9]+[\\.]?[0-9]*)\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Matrix.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`matrix3d\\(([ ]*[0-9]+[\\.]?[0-9]*,){15}([ ]*[0-9]+[\\.]?[0-9]*)\\)`)\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Matrix3D.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`(translate|translate3d|translatex|translatey|translatez|scale|scale3d|scalex|scaley|scalez)\\(`)\n-\treg.Longest()\n-\tsubValue := string(reg.ReplaceAll([]byte(value), []byte{}))\n+\tsubValue := string(TranslateScale.ReplaceAll([]byte(value), []byte{}))\n \ttrimValue := strings.Split(strings.TrimSuffix(subValue, \")\"), \",\")\n \tvalid := true\n \tfor _, i := range trimValue {\n@@ -1891,19 +1836,13 @@ func TransformHandler(value string) bool {\n \tif valid && trimValue != nil {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`rotate(x|y|z)?\\(([12]?|3[0-5][0-9]|360)\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Rotate.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`rotate3d\\(([ ]?(1(\\.0)?|0\\.[0-9]+),){3}([12]?|3[0-5][0-9]|360)\\)`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Rotate3D.MatchString(value) {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`skew(x|y)?\\(`)\n-\treg.Longest()\n-\tsubValue = string(reg.ReplaceAll([]byte(value), []byte{}))\n+\tsubValue = string(Skew.ReplaceAll([]byte(value), []byte{}))\n \tsubValue = strings.TrimSuffix(subValue, \")\")\n \ttrimValue = strings.Split(subValue, \",\")\n \tvalid = true\n@@ -1916,9 +1855,7 @@ func TransformHandler(value string) bool {\n \tif valid {\n \t\treturn true\n \t}\n-\treg = regexp.MustCompile(`perspective\\(`)\n-\treg.Longest()\n-\tsubValue = string(reg.ReplaceAll([]byte(value), []byte{}))\n+\tsubValue = string(Perspective.ReplaceAll([]byte(value), []byte{}))\n \tsubValue = strings.TrimSuffix(subValue, \")\")\n \treturn LengthHandler(subValue)\n }\n@@ -1973,9 +1910,7 @@ func TransitionHandler(value string) bool {\n }\n \n func TransitionDelayHandler(value string) bool {\n-\treg := regexp.MustCompile(\"[0-9]+[.]?[0-9]*(s|ms)?\")\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Time.MatchString(value) {\n \t\treturn true\n \t}\n \tvalues := []string{\"initial\", \"inherit\"}\n@@ -1984,9 +1919,7 @@ func TransitionDelayHandler(value string) bool {\n }\n \n func TransitionDurationHandler(value string) bool {\n-\treg := regexp.MustCompile(\"[0-9]+[.]?[0-9]*(s|ms)?\")\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif Time.MatchString(value) {\n \t\treturn true\n \t}\n \tvalues := []string{\"initial\", \"inherit\"}\n@@ -1995,9 +1928,7 @@ func TransitionDurationHandler(value string) bool {\n }\n \n func TransitionPropertyHandler(value string) bool {\n-\treg := regexp.MustCompile(\"([a-zA-Z]+,[ ]?)*[a-zA-Z]+\")\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif TransitionProp.MatchString(value) {\n \t\treturn true\n \t}\n \tvalues := []string{\"none\", \"all\", \"initial\", \"inherit\"}\n@@ -2075,9 +2006,7 @@ func WritingModeHandler(value string) bool {\n }\n \n func ZIndexHandler(value string) bool {\n-\treg := regexp.MustCompile(`[\\-]?[0-9]+`)\n-\treg.Longest()\n-\tif reg.FindString(value) == value && value != \"\" {\n+\tif ZIndex.MatchString(value) {\n \t\treturn true\n \t}\n \tvalues := []string{\"auto\", \"initial\", \"inherit\"}"
    },
    {
      "sha": "d4039492eaa62f75cbb899537cdba40cf7fb841f",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/helpers.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fhelpers.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fhelpers.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fhelpers.go?ref=1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a",
      "patch": "@@ -117,7 +117,7 @@ var (\n \t// This is not exported as it's not useful by itself, and only has value\n \t// within the AllowDataURIImages func\n \tdataURIImagePrefix = regexp.MustCompile(\n-\t\t`^image/(gif|jpeg|png|webp);base64,`,\n+\t\t`^image/(gif|jpeg|png|svg\\+xml|webp);base64,`,\n \t)\n )\n "
    },
    {
      "sha": "904ee82e147f59cb9601dddeb28aaa87678a7dea",
      "filename": "backend/vendor/github.com/microcosm-cc/bluemonday/sanitize.go",
      "status": "modified",
      "additions": 2,
      "deletions": 21,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark42/blob/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fsanitize.go",
      "raw_url": "https://github.com/umputun/remark42/raw/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fsanitize.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Fmicrocosm-cc%2Fbluemonday%2Fsanitize.go?ref=1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a",
      "patch": "@@ -322,9 +322,7 @@ func (p *Policy) sanitize(r io.Reader, w io.Writer) error {\n \t\t\t\taps = aa\n \t\t\t}\n \t\t\tif len(token.Attr) != 0 {\n-\t\t\t\ttoken.Attr = escapeAttributes(\n-\t\t\t\t\tp.sanitizeAttrs(token.Data, token.Attr, aps),\n-\t\t\t\t)\n+\t\t\t\ttoken.Attr = p.sanitizeAttrs(token.Data, token.Attr, aps)\n \t\t\t}\n \n \t\t\tif len(token.Attr) == 0 {\n@@ -434,7 +432,7 @@ func (p *Policy) sanitize(r io.Reader, w io.Writer) error {\n \t\t\t}\n \n \t\t\tif len(token.Attr) != 0 {\n-\t\t\t\ttoken.Attr = escapeAttributes(p.sanitizeAttrs(token.Data, token.Attr, aps))\n+\t\t\t\ttoken.Attr = p.sanitizeAttrs(token.Data, token.Attr, aps)\n \t\t\t}\n \n \t\t\tif len(token.Attr) == 0 && !p.allowNoAttrs(token.Data) {\n@@ -565,11 +563,9 @@ attrsLoop:\n \t\t\tfor _, ap := range apl {\n \t\t\t\tif ap.regexp != nil {\n \t\t\t\t\tif ap.regexp.MatchString(htmlAttr.Val) {\n-\t\t\t\t\t\thtmlAttr.Val = escapeAttribute(htmlAttr.Val)\n \t\t\t\t\t\tcleanAttrs = append(cleanAttrs, htmlAttr)\n \t\t\t\t\t}\n \t\t\t\t} else {\n-\t\t\t\t\thtmlAttr.Val = escapeAttribute(htmlAttr.Val)\n \t\t\t\t\tcleanAttrs = append(cleanAttrs, htmlAttr)\n \t\t\t\t}\n \t\t\t}\n@@ -1112,18 +1108,3 @@ func normaliseElementName(str string) string {\n \t\t`\"`,\n \t)\n }\n-\n-func escapeAttributes(attrs []html.Attribute) []html.Attribute {\n-\tescapedAttrs := []html.Attribute{}\n-\tfor _, attr := range attrs {\n-\t\tattr.Val = escapeAttribute(attr.Val)\n-\t\tescapedAttrs = append(escapedAttrs, attr)\n-\t}\n-\treturn escapedAttrs\n-}\n-\n-func escapeAttribute(val string) string {\n-\tval = strings.Replace(val, string([]rune{'\\u00A0'}), `&nbsp;`, -1)\n-\tval = strings.Replace(val, `\"`, `&quot;`, -1)\n-\treturn val\n-}"
    },
    {
      "sha": "37805af96b6d589e91530aab85b690441fea2447",
      "filename": "backend/vendor/modules.txt",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fvendor%2Fmodules.txt",
      "raw_url": "https://github.com/umputun/remark42/raw/1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a/backend%2Fvendor%2Fmodules.txt",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fmodules.txt?ref=1f96a0e4d3ee1102d7c7cff5a771abdc6a03330a",
      "patch": "@@ -86,7 +86,7 @@ github.com/go-chi/render\n github.com/go-oauth2/oauth2/v4\n github.com/go-oauth2/oauth2/v4/errors\n github.com/go-oauth2/oauth2/v4/server\n-# github.com/go-pkgz/auth v1.19.1-0.20220605174438-06e72788bcbb\n+# github.com/go-pkgz/auth v1.19.1-0.20220624002401-8b91a0eee69a\n ## explicit; go 1.17\n github.com/go-pkgz/auth\n github.com/go-pkgz/auth/avatar\n@@ -185,8 +185,8 @@ github.com/klauspost/compress/zstd/internal/xxhash\n # github.com/kyokomi/emoji/v2 v2.2.9\n ## explicit; go 1.14\n github.com/kyokomi/emoji/v2\n-# github.com/microcosm-cc/bluemonday v1.0.18\n-## explicit; go 1.16\n+# github.com/microcosm-cc/bluemonday v1.0.19\n+## explicit; go 1.18\n github.com/microcosm-cc/bluemonday\n github.com/microcosm-cc/bluemonday/css\n # github.com/nullrocks/identicon v0.0.0-20180626043057-7875f45b0022"
    }
  ]
}
