{
  "sha": "151913f3712524d880430ecd289113042d010d88",
  "node_id": "C_kwDOBtgov9oAKDE1MTkxM2YzNzEyNTI0ZDg4MDQzMGVjZDI4OTExMzA0MmQwMTBkODg",
  "commit": {
    "author": {
      "name": "Dmitry Verkhoturov",
      "email": "paskal.07@gmail.com",
      "date": "2021-12-20T19:35:04Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2021-12-20T19:36:58Z"
    },
    "message": "style fixes to the documentation and CLI params description",
    "tree": {
      "sha": "3830c59a4d118c8059cc9e99290d23e237081957",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/3830c59a4d118c8059cc9e99290d23e237081957"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/151913f3712524d880430ecd289113042d010d88",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/151913f3712524d880430ecd289113042d010d88",
  "html_url": "https://github.com/umputun/remark42/commit/151913f3712524d880430ecd289113042d010d88",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/151913f3712524d880430ecd289113042d010d88/comments",
  "author": {
    "login": "paskal",
    "id": 712534,
    "node_id": "MDQ6VXNlcjcxMjUzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/712534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paskal",
    "html_url": "https://github.com/paskal",
    "followers_url": "https://api.github.com/users/paskal/followers",
    "following_url": "https://api.github.com/users/paskal/following{/other_user}",
    "gists_url": "https://api.github.com/users/paskal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paskal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paskal/subscriptions",
    "organizations_url": "https://api.github.com/users/paskal/orgs",
    "repos_url": "https://api.github.com/users/paskal/repos",
    "events_url": "https://api.github.com/users/paskal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paskal/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e341e25f0f3bb7e132e76fceab16b328ea0a7513",
      "url": "https://api.github.com/repos/umputun/remark42/commits/e341e25f0f3bb7e132e76fceab16b328ea0a7513",
      "html_url": "https://github.com/umputun/remark42/commit/e341e25f0f3bb7e132e76fceab16b328ea0a7513"
    }
  ],
  "stats": {
    "total": 352,
    "additions": 168,
    "deletions": 184
  },
  "files": [
    {
      "sha": "89b2b91940fe1706fe9bf93c97a67d75438cff47",
      "filename": "backend/app/cmd/server.go",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/backend/app/cmd/server.go",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/backend/app/cmd/server.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/cmd/server.go?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -84,7 +84,7 @@ type ServerCommand struct {\n \n \tAuth struct {\n \t\tTTL struct {\n-\t\t\tJWT    time.Duration `long:\"jwt\" env:\"JWT\" default:\"5m\" description:\"jwt TTL\"`\n+\t\t\tJWT    time.Duration `long:\"jwt\" env:\"JWT\" default:\"5m\" description:\"JWT TTL\"`\n \t\t\tCookie time.Duration `long:\"cookie\" env:\"COOKIE\" default:\"200h\" description:\"auth cookie TTL\"`\n \t\t} `group:\"ttl\" namespace:\"ttl\" env-namespace:\"TTL\"`\n \n@@ -138,7 +138,7 @@ type AuthGroup struct {\n type StoreGroup struct {\n \tType string `long:\"type\" env:\"TYPE\" description:\"type of storage\" choice:\"bolt\" choice:\"rpc\" default:\"bolt\"` // nolint\n \tBolt struct {\n-\t\tPath    string        `long:\"path\" env:\"PATH\" default:\"./var\" description:\"parent dir for bolt files\"`\n+\t\tPath    string        `long:\"path\" env:\"PATH\" default:\"./var\" description:\"parent directory for the bolt files\"`\n \t\tTimeout time.Duration `long:\"timeout\" env:\"TIMEOUT\" default:\"30s\" description:\"bolt timeout\"`\n \t} `group:\"bolt\" namespace:\"bolt\" env-namespace:\"BOLT\"`\n \tRPC RPCGroup `group:\"rpc\" namespace:\"rpc\" env-namespace:\"RPC\"`\n@@ -156,8 +156,8 @@ type ImageGroup struct {\n \t\tFile string `long:\"file\" env:\"FILE\" default:\"./var/pictures.db\" description:\"images bolt file location\"`\n \t} `group:\"bolt\" namespace:\"bolt\" env-namespace:\"bolt\"`\n \tMaxSize      int      `long:\"max-size\" env:\"MAX_SIZE\" default:\"5000000\" description:\"max size of image file\"`\n-\tResizeWidth  int      `long:\"resize-width\" env:\"RESIZE_WIDTH\" default:\"2400\" description:\"width of resized image\"`\n-\tResizeHeight int      `long:\"resize-height\" env:\"RESIZE_HEIGHT\" default:\"900\" description:\"height of resized image\"`\n+\tResizeWidth  int      `long:\"resize-width\" env:\"RESIZE_WIDTH\" default:\"2400\" description:\"width of a resized image\"`\n+\tResizeHeight int      `long:\"resize-height\" env:\"RESIZE_HEIGHT\" default:\"900\" description:\"height of a resized image\"`\n \tRPC          RPCGroup `group:\"rpc\" namespace:\"rpc\" env-namespace:\"RPC\"`\n }\n \n@@ -170,17 +170,17 @@ type AvatarGroup struct {\n \tBolt struct {\n \t\tFile string `long:\"file\" env:\"FILE\" default:\"./var/avatars.db\" description:\"avatars bolt file location\"`\n \t} `group:\"bolt\" namespace:\"bolt\" env-namespace:\"bolt\"`\n-\tURI    string `long:\"uri\" env:\"URI\" default:\"./var/avatars\" description:\"avatar's store URI\"`\n+\tURI    string `long:\"uri\" env:\"URI\" default:\"./var/avatars\" description:\"avatars store URI\"`\n \tRszLmt int    `long:\"rsz-lmt\" env:\"RESIZE\" default:\"0\" description:\"max image size for resizing avatars on save\"`\n }\n \n // CacheGroup defines options group for cache params\n type CacheGroup struct {\n \tType      string `long:\"type\" env:\"TYPE\" description:\"type of cache\" choice:\"redis_pub_sub\" choice:\"mem\" choice:\"none\" default:\"mem\"` // nolint\n-\tRedisAddr string `long:\"redis_addr\" env:\"REDIS_ADDR\" default:\"127.0.0.1:6379\" description:\"address of redis cache, turn redis cache on for distributed cache\"`\n+\tRedisAddr string `long:\"redis_addr\" env:\"REDIS_ADDR\" default:\"127.0.0.1:6379\" description:\"address of Redis PubSub instance, turn redis_pub_sub cache on for distributed cache\"`\n \tMax       struct {\n \t\tItems int   `long:\"items\" env:\"ITEMS\" default:\"1000\" description:\"max cached items\"`\n-\t\tValue int   `long:\"value\" env:\"VALUE\" default:\"65536\" description:\"max size of cached value\"`\n+\t\tValue int   `long:\"value\" env:\"VALUE\" default:\"65536\" description:\"max size of the cached value\"`\n \t\tSize  int64 `long:\"size\" env:\"SIZE\" default:\"50000000\" description:\"max size of total cache\"`\n \t} `group:\"max\" namespace:\"max\" env-namespace:\"MAX\"`\n }\n@@ -218,7 +218,7 @@ type NotifyGroup struct {\n \tAdmins    []string `long:\"admins\" env:\"ADMINS\" description:\"types of admin notifications\" choice:\"none\" choice:\"telegram\" choice:\"email\" choice:\"slack\" choice:\"webhook\" default:\"none\" env-delim:\",\"`                     //nolint\n \tQueueSize int      `long:\"queue\" env:\"QUEUE\" description:\"size of notification queue\" default:\"100\"`\n \tTelegram  struct {\n-\t\tChannel string        `long:\"chan\" env:\"CHAN\" description:\"ID of telegram channel for admin notifications\"`\n+\t\tChannel string        `long:\"chan\" env:\"CHAN\" description:\"the ID of telegram channel for admin notifications\"`\n \t\tAPI     string        `long:\"api\" env:\"API\" default:\"https://api.telegram.org/bot\" description:\"[deprecated, not used] telegram api prefix\"`\n \t\tToken   string        `long:\"token\" env:\"TOKEN\" description:\"[deprecated, use --telegram.token] telegram token\"`\n \t\tTimeout time.Duration `long:\"timeout\" env:\"TIMEOUT\" default:\"5s\" description:\"[deprecated, use --telegram.timeout] telegram timeout\"`\n@@ -244,8 +244,8 @@ type NotifyGroup struct {\n type SSLGroup struct {\n \tType         string `long:\"type\" env:\"TYPE\" description:\"ssl (auto) support\" choice:\"none\" choice:\"static\" choice:\"auto\" default:\"none\"` //nolint\n \tPort         int    `long:\"port\" env:\"PORT\" description:\"port number for https server\" default:\"8443\"`\n-\tCert         string `long:\"cert\" env:\"CERT\" description:\"path to cert.pem file\"`\n-\tKey          string `long:\"key\" env:\"KEY\" description:\"path to key.pem file\"`\n+\tCert         string `long:\"cert\" env:\"CERT\" description:\"path to the cert.pem file\"`\n+\tKey          string `long:\"key\" env:\"KEY\" description:\"path to the key.pem file\"`\n \tACMELocation string `long:\"acme-location\" env:\"ACME_LOCATION\" description:\"dir where certificates will be stored by autocert manager\" default:\"./var/acme\"`\n \tACMEEmail    string `long:\"acme-email\" env:\"ACME_EMAIL\" description:\"admin email for certificate notifications\"`\n }"
    },
    {
      "sha": "2371349cb46f2cad79e0b1319d34b78c6d1eabe9",
      "filename": "backend/app/main.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/backend/app/main.go",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/backend/app/main.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/main.go?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -24,7 +24,7 @@ type Opts struct {\n \tRemapCmd   cmd.RemapCommand   `command:\"remap\"`\n \n \tRemarkURL    string `long:\"url\" env:\"REMARK_URL\" required:\"true\" description:\"url to remark\"`\n-\tSharedSecret string `long:\"secret\" env:\"SECRET\" required:\"true\" description:\"shared secret key used to sign JWT, should be a random, long, hard-to-guess string\"`\n+\tSharedSecret string `long:\"secret\" env:\"SECRET\" required:\"true\" description:\"the shared secret key used to sign JWT, should be a random, long, hard-to-guess string\"`\n \n \tDbg bool `long:\"dbg\" env:\"DEBUG\" description:\"debug mode\"`\n }"
    },
    {
      "sha": "91ef0b459290d1e4ba25d2702ecb6f362ca34df2",
      "filename": "site/src/docs/backup/automatic/index.md",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/backup/automatic/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/backup/automatic/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/backup/automatic/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -2,10 +2,10 @@\n title: Automatic Backup\n ---\n \n-Remark42 by default makes daily backup files under `${BACKUP_PATH}` (default `./var/backup`). Backups kept up to `${MAX_BACKUP_FILES}` (default 10). Each backup file contains exported and gzipped content, i.e. all comments. At any point, the user can restore such backup and revert all comments to the desired state.\n+Remark42 by default makes daily backup files under `${BACKUP_PATH}` (default `./var/backup`). Backups kept up to `${MAX_BACKUP_FILES}` (default 10). Each backup file contains exported and gzipped content, i.e., all comments. At any point, the user can restore such backup and revert all comments to the desired state.\n \n-**Note:** Restore procedure cleans the current data store and replaces all comments with comments from the backup file.\n+**Note:** The restore procedure cleans the current data store and replaces all comments from the backup file.\n \n-For safety and security reasons restore functionality not exposed outside of your server by default. The recommended way to restore from the backup is to use provided `scripts/restore-backup.sh`. It can run inside the container:\n+For safety and security reasons, restore functionality not exposed outside your server by default. The recommended way to restore from the backup is to use provided `scripts/restore-backup.sh`. It can run inside the container:\n \n `docker exec -it remark42 restore -f {backup-filename.gz} -s {your site ID}`"
    },
    {
      "sha": "9993c6f51db9c4e33a33625ffabfc986588fa7f8",
      "filename": "site/src/docs/backup/index.md",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/backup/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/backup/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/backup/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -2,7 +2,6 @@\n title: Backup\n ---\n \n-\n ### Backup format\n \n-The backup file is a text file with all exported comments separated by EOL. Each backup record is a valid JSON with all key/value unmarshaled from `Comment` struct (see below).\n+The backup file is a text file with all exported comments separated by EOL. Each backup record is a valid JSON with all key/value unmarshaled from the `Comment` struct (see [here](https://remark42.com/docs/contributing/api/#commenting))."
    },
    {
      "sha": "93da62818d0c49f1caba93b1da03f4de1d94932e",
      "filename": "site/src/docs/backup/manual/index.md",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/backup/manual/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/backup/manual/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/backup/manual/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -2,7 +2,7 @@\n title: Manual Backup\n ---\n \n-You can make a backup manually whenever you want. Run command:\n+You can make a backup manually whenever you want. Run the command:\n `docker exec -it remark42 backup -s {your site ID}`\n \n-This command makes `userbackup-{site ID}-{timestamp}.gz` by default.\n+This command creates `userbackup-{site ID}-{timestamp}.gz` file by default."
    },
    {
      "sha": "45c1e671ea394fa1fc40940a72e543084972f0b6",
      "filename": "site/src/docs/backup/migration/index.md",
      "status": "modified",
      "additions": 3,
      "deletions": 12,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/backup/migration/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/backup/migration/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/backup/migration/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -2,12 +2,12 @@\n title: Migration\n ---\n \n-Remark42 supports importing comments from Disqus, WordPress, Commento, or native backup format. All imported comments have an `Imported` field set to `true`. All methods below remove existing comments from they site if they are present, please use the last paragraph to preserve them.\n+Remark42 supports importing comments from Disqus, WordPress, Commento, or native backup format. All imported comments have an `Imported` field set to `true`. All methods below remove existing comments from the site if they are present, please use the last paragraph to preserve them.\n \n ### Initial import from Disqus\n \n-1. Disqus provides an export of all comments on your site in a gzipped file. This option is available in your Moderation panel at Disqus Admin > Setup > Export. The export will be sent into a queue and then emailed to the address associated with your account once it's ready. Direct link to export will be something like `https://<siteud>.disqus.com/admin/discussions/export/`. See [importing-exporting](https://help.disqus.com/en/articles/1717199-importing-exporting) for more details\n-2. Move this file to your Remark42 host within `./var` and extract, i.e. `gunzip <disqus-export-name>.xml.gz`\n+1. Disqus provides export of all comments on your site in a gzipped file. This option is available in your Moderation panel at Disqus Admin > Setup > Export. The export will be sent into a queue and then emailed to the address associated with your account once it's ready. Direct link to export will be something like `https://<siteud>.disqus.com/admin/discussions/export/`. See [importing-exporting](https://help.disqus.com/en/articles/1717199-importing-exporting) for more details\n+2. Move this file to your Remark42 host within `./var` and extract, i.e., `gunzip <disqus-export-name>.xml.gz`\n 3. Run import command - `docker exec -it remark42 import -p disqus -f /srv/var/{disqus-export-name}.xml -s {your site ID}`\n \n ### Initial import from WordPress\n@@ -20,12 +20,3 @@ Remark42 supports importing comments from Disqus, WordPress, Commento, or native\n \n 1. Move exported json file to your Remark42 host within `./var`\n 2. Run import command - `docker exec -it remark42 import -p commento -f /srv/var/{commento-export-name}.json -s {your site ID}`\n-\n-### Import without removing existing comments\n-\n-All methods above nuke the existing comments on the site. To preserve it you should make two backup files, one for the current remark42 content, and another for imported WP/Discuss/Commento content. The format of backups is straightforward json with EOL (json line) and can be easily constructed from multiple sources. Merge them together and restore them from the resulting file:\n-\n-```shell\n-cat wp-export.json | grep -v '{\"version\":1' >> combined-export.json\n-docker exec -it remark42 restore -f combined-export.json -s {your site ID}\n-```"
    },
    {
      "sha": "87e6faecb0605af9281415ac7b6a00bb25c08613",
      "filename": "site/src/docs/backup/restore/index.md",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/backup/restore/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/backup/restore/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/backup/restore/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -2,6 +2,15 @@\n title: Restore Backup\n ---\n \n-Restore will clean all comments first and then will process with complete import from a given file.\n+Restore will clean all comments first and then process with complete import from a given file.\n \n `docker exec -it remark42 restore -f {backup file name} -s {your site ID}`\n+\n+### Import/restore without removing existing comments\n+\n+All methods above nuke the existing comments on the site. You should make two backup files to preserve them, one for the current remark42 content and another for imported WP/Discuss/Commento content. The format of backups is plain JSON with EOL (JSON line) and can be easily constructed from multiple sources. Merge them and restore them from the resulting file:\n+\n+```shell\n+cat wp-export.json | grep -v '{\"version\":1' >> combined-export.json\n+docker exec -it remark42 restore -f combined-export.json -s {your site ID}\n+```"
    },
    {
      "sha": "d69e406f90a833817efbea493d5b048ebfea5fd7",
      "filename": "site/src/docs/backup/url-migration/index.md",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/backup/url-migration/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/backup/url-migration/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/backup/url-migration/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -2,11 +2,11 @@\n title: Site URL migration\n ---\n \n-Here is an example on how to move your comments after your posts are moved, from `https://example.org/blog/<slug>` to `https://example.org/post/<slug>` in that example.\n+Here is an example of how to move your comments after your posts are moved, from `https://example.org/blog/<slug>` to `https://example.org/post/<slug>` in that example.\n \n ### Rules file\n \n-First you have to create a `rules` file in remark's `/var` folder.\n+First, you must create a `rules` file in the remark's `/var` folder.\n \n Format is simply `old_url new_url` like following:\n "
    },
    {
      "sha": "2bbccae8abc9498fdfaaa890d4a397470590c8a9",
      "filename": "site/src/docs/configuration/authorization/index.md",
      "status": "modified",
      "additions": 21,
      "deletions": 21,
      "changes": 42,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/configuration/authorization/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/configuration/authorization/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/configuration/authorization/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -4,22 +4,22 @@ title: Authorization\n \n ## OAuth Providers\n \n-Authentication handled by external providers. You should setup OAuth2 for all (or some) of them to allow users to make comments. It is not mandatory to have all of them, but at least one should be correctly configured.\n+Authentication handled by external providers. You should set up OAuth2 for at least one of them to allow users to make comments. It is not mandatory to have all of them, but one should be correctly configured.\n \n ### Facebook\n \n-1. Open the list of apps on [Facebook Developers Platform](https://developers.facebook.com/apps)\n-2. Create a new app with [this manual](https://developers.facebook.com/docs/development/create-an-app/) or use existing app\n+1. Open the list of apps on the [Facebook Developers Platform](https://developers.facebook.com/apps)\n+2. Create a new app with [this manual](https://developers.facebook.com/docs/development/create-an-app/) or use an existing app\n 3. Open your app and choose **\"Facebook Login\"** and then **\"Web\"**\n-4. Set **\"Site URL\"** to your domain, e.g.: `https://remark42.mysite.com`\n+4. Set **\"Site URL\"** to your domain, e.g., `https://remark42.mysite.com`\n 5. Under **\"Facebook login\"**/**\"Settings\"** fill \"Valid OAuth redirect URIs\" with your callback URL constructed as domain plus `/auth/facebook/callback`, e.g `https://remark42.mysite.com/auth/facebook/callback`\n-6. Select **\"App Review\"** and turn public flag on. This step may ask you to provide a link to your privacy policy\n+6. Select **\"App Review\"** and turn the public flag on. This step may ask you to provide a link to your privacy policy\n \n ### GitHub\n \n 1. Create a new **\"OAuth App\"**: https://github.com/settings/developers\n 2. Fill **\"Application Name\"** and **\"Homepage URL\"** for your site\n-3. Under **\"Authorization callback URL\"** enter the correct URL constructed as domain + `/auth/github/callback`, i.e. `https://remark42.mysite.com/auth/github/callback`\n+3. Under **\"Authorization callback URL\"** enter the correct URL constructed as domain + `/auth/github/callback`, i.e., `https://remark42.mysite.com/auth/github/callback`\n 4. Take note of the **Client ID** and **Client Secret**\n \n ### Google\n@@ -28,15 +28,15 @@ Authentication handled by external providers. You should setup OAuth2 for all (o\n 2. Choose the new project from the top right project dropdown (only if another project is selected)\n 3. In the project Dashboard center pane, choose **\"API Manager\"**\n 4. In the left Nav pane, choose **\"Credentials\"**\n-5. In the center pane, choose **\"OAuth consent screen\"** tab. Fill in **\"Product name shown to users\"** and hit save\n-6. In the center pane, choose **\"Credentials\"** tab\n+5. In the center pane, choose the **\"OAuth consent screen\"** tab. Fill in **\"Product name shown to users\"** and hit save\n+6. In the center pane, choose the **\"Credentials\"** tab\n \n-- Open the **\"New credentials\"** drop down\n+- Open the **\"New credentials\"** drop-down\n - Choose **\"OAuth client ID\"**\n - Choose **\"Web application\"**\n-- Application name is freeform, choose something appropriate\n-- Authorized origins is your domain, e.g.: `https://remark42.mysite.com`\n-- Authorized redirect URIs is the location of OAuth2/callback constructed as domain + `/auth/google/callback`, e.g.: `https://remark42.mysite.com/auth/google/callback`\n+- Application name is freeform; choose something appropriate\n+- Authorized origins should be your domain, e.g., `https://remark42.mysite.com`\n+- Authorized redirect URIs is the location of OAuth2/callback constructed as domain + `/auth/google/callback`, e.g., `https://remark42.mysite.com/auth/google/callback`\n - Choose **\"Create\"**\n \n 7. Take note of the **Client ID** and **Client Secret**\n@@ -46,7 +46,7 @@ _instructions for Google OAuth2 setup borrowed from [oauth2_proxy](https://githu\n ### Microsoft\n \n 1. Register a new application [using the Azure portal](https://docs.microsoft.com/en-us/graph/auth-register-app-v2)\n-2. Under **\"Authentication/Platform configurations/Web\"** enter the correct URL constructed as domain + `/auth/microsoft/callback`, i.e. `https://example.mysite.com/auth/microsoft/callback`\n+2. Under **\"Authentication/Platform configurations/Web\"** enter the correct URL constructed as domain + `/auth/microsoft/callback`, i.e., `https://example.mysite.com/auth/microsoft/callback`\n 3. In **\"Overview\"** take note of the **Application (client) ID**\n 4. Choose the new project from the top right project dropdown (only if another project is selected)\n 5. Select **\"Certificates & secrets\"** and click on **\"+ New Client Secret\"**\n@@ -62,7 +62,7 @@ _instructions for Google OAuth2 setup borrowed from [oauth2_proxy](https://githu\n \n 1. Create a new **\"OAuth App\"**: https://oauth.yandex.com/client/new\n 2. Fill **\"App name\"** for your site\n-3. Under **Platforms** select **\"Web services\"** and enter **\"Callback URI #1\"** constructed as domain + `/auth/yandex/callback`, i.e. `https://remark42.mysite.com/auth/yandex/callback`\n+3. Under **Platforms** select **\"Web services\"** and enter **\"Callback URI #1\"** constructed as domain + `/auth/yandex/callback`, i.e., `https://remark42.mysite.com/auth/yandex/callback`\n 4. Select **Permissions**. You need the following permissions only from the **\"Yandex.Passport API\"** section:\n \n - Access to the user avatar\n@@ -77,17 +77,17 @@ For more details refer to [Yandex OAuth](https://yandex.com/dev/oauth/doc/dg/con\n \n 1. Create a new Patreon client https://www.patreon.com/portal/registration/register-clients\n 2. Fill **App Name**, **Description**\n-3. In the field **Redirect URIs** enter the correct URI constructed as domain + `/auth/patreon/callback`, i.e. `https://example.mysite.com/auth/patreon/callback`\n-4. Expand client details, take a note of the **Client ID** and **Client Secret**. Those will be used as `AUTH_PATREON_CID` and `AUTH_PATREON_CSEC`\n+3. In the field **Redirect URIs** enter the correct URI constructed as domain + `/auth/patreon/callback`, i.e., `https://example.mysite.com/auth/patreon/callback`\n+4. Expand client details and note the **Client ID** and **Client Secret**. Those will be used as `AUTH_PATREON_CID` and `AUTH_PATREON_CSEC`\n \n ### Telegram\n \n-1. Contact [@BotFather](https://t.me/botfather) and follow his instructions to create your own bot (call it, for example, \"My site auth bot\")\n-1. Write down resulting token as `TELEGRAM_TOKEN` into remark42 config, and also set `AUTH_TELEGRAM` to `true` to enable telegram auth for your users.\n+1. Contact [@BotFather](https://t.me/botfather) and follow his instructions to create your bot (call it, for example, \"My site auth bot\")\n+1. Write down the resulting token as `TELEGRAM_TOKEN` into remark42 config, and also set `AUTH_TELEGRAM` to `true` to enable telegram auth for your users.\n \n ### Anonymous\n \n-Optionally, anonymous access can be turned on. In this case, an extra `anonymous` provider will allow logins without any social login with any name satisfying 2 conditions:\n+Optionally, anonymous access can be turned on. In this case, an extra `anonymous` provider will allow logins without any social login with any name satisfying two conditions:\n \n-- name should be at least 3 characters long\n-- name has to start from the letter and contains letters, numbers, underscores and spaces only\n+- the name should be at least three characters long\n+- the name has to start from the letter and contains letters, numbers, underscores and spaces only"
    },
    {
      "sha": "102ca299ab8cb8e937ee2d7edc426633d04106e4",
      "filename": "site/src/docs/configuration/email/index.md",
      "status": "modified",
      "additions": 28,
      "deletions": 43,
      "changes": 71,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/configuration/email/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/configuration/email/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/configuration/email/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -20,8 +20,7 @@ This documentation describes how to enable the email-related capabilities of Rem\n \n ## Setup email server connection\n \n-To enable any of email functionality you need to set up email\n-(SMTP) server connection using these variables:\n+To enable any email functionality, you need to set up an email (SMTP) server connection using these variables:\n \n ```\n SMTP_HOST\n@@ -36,7 +35,7 @@ SMTP_TIMEOUT\n \n ### User notifications\n \n-Here is the list of variables which affect user email notifications:\n+Here is the list of variables that affect user email notifications:\n \n ```yaml\n NOTIFY_USERS=email\n@@ -46,7 +45,7 @@ NOTIFY_EMAIL_VERIFICATION_SUBJ # \"Email verification\" by default\n \n ### Admin notifications\n \n-Here is the list of variables which affect admin notifications, which will be sent for each new comment on your site:\n+Here is the list of variables that affect admin notifications, which will be sent for each new comment on your site:\n \n ```yaml\n NOTIFY_ADMINS=email\n@@ -68,12 +67,25 @@ This is an example of a configuration using [Mailgun](https://www.mailgun.com/)\n - NOTIFY_EMAIL_FROM=notify@example.com\n ```\n \n-#### API\n+### SendGrid\n+\n+This is an example of a configuration using [SendGrid](https://sendgrid.com/) email service:\n+\n+```yaml\n+- SMTP_HOST=smtp.sendgrid.net\n+- SMTP_PORT=465\n+- SMTP_TLS=true\n+- SMTP_USERNAME=apikey\n+- SMTP_PASSWORD=key-123456789\n+- AUTH_EMAIL_FROM=notify@example.com\n+- NOTIFY_EMAIL_FROM=notify@example.com\n+```\n+\n+### Mailgun or SendGrid without exposing your server's IP\n \n-When you don't want to expose your IP (which is impossible with any SMTP provider)\n-and for situations when connecting to external SMTP server is impossible due to firewall settings is setting up an SMTP-to-API bridge and sending messages through it.\n+When you don't want to expose your IP (which is impossible with any SMTP provider) and when connecting to an external SMTP server is impossible due to firewall settings setting up an SMTP-to-API bridge and sending messages through it.\n \n-To use any of containers below with in remark42 environment set following two `SMTP` variables:\n+To use any of the containers below within remark42 environment, set the following two `SMTP` variables:\n \n ```yaml\n - SMTP_HOST=mail\n@@ -102,35 +114,8 @@ mailgun:\n     - MG_DOMAIN=example.com\n ```\n \n-Please note that before\n-[stevenolen/mailgun-smtp-server#5](https://github.com/stevenolen/mailgun-smtp-server/issues/5)\n-is fixed, Europe domain names are not supported by this tool.\n-\n-### SendGrid\n-\n-This is an example of a configuration using [SendGrid](https://sendgrid.com/) email service:\n+Please note that before [stevenolen/mailgun-smtp-server#5](https://github.com/stevenolen/mailgun-smtp-server/issues/5) is fixed, Europe domain names are not supported by this tool.\n \n-```yaml\n-- SMTP_HOST=smtp.sendgrid.net\n-- SMTP_PORT=465\n-- SMTP_TLS=true\n-- SMTP_USERNAME=apikey\n-- SMTP_PASSWORD=key-123456789\n-- AUTH_EMAIL_FROM=notify@example.com\n-- NOTIFY_EMAIL_FROM=notify@example.com\n-```\n-\n-#### API\n-\n-When you don't want to expose your IP (which is impossible with any SMTP provider)\n-and for situations when connecting to external SMTP server is impossible due to firewall settings is setting up an SMTP-to-API bridge and sending messages through it.\n-\n-To use any of containers below with in remark42 environment set following two `SMTP` variables:\n-\n-```yaml\n-- SMTP_HOST=mail\n-- SMTP_PORT=25\n-```\n \n #### fgribreau/smtp-to-sendgrid-gateway\n \n@@ -187,7 +172,7 @@ A domain or an email that will be used in `AUTH_EMAIL_FROM` or `NOTIFY_EMAIL_FRO\n \n ## Setup email authentication\n \n-Here is the list of variables which affect email authentication:\n+Here is the list of variables that affect email authentication:\n \n ```\n AUTH_EMAIL_ENABLE\n@@ -204,18 +189,18 @@ After you set `SMTP_` variables, you can allow email authentication by setting t\n - AUTH_EMAIL_FROM=notify@example.com\n ```\n \n-Usually, you don't need to change/set anything else. In case if you want to use a different email template set `AUTH_EMAIL_TEMPLATE`, for instance `- AUTH_EMAIL_TEMPLATE=\"Confirmation email, token: {{.Token}}\"`. See [verified-authentication](https://github.com/go-pkgz/auth#verified-authentication) for more details.\n+Usually, you don't need to change/set anything else. In case if you want to use a different email template, set `AUTH_EMAIL_TEMPLATE`, for instance `- AUTH_EMAIL_TEMPLATE=\"Confirmation email, token: {{.Token}}\"`. See [verified-authentication](https://github.com/go-pkgz/auth#verified-authentication) for more details.\n \n ## Email messages templates\n \n Remark42 uses golang templates for email templating. Templates are located in `backend/templates` and embedded into binary by statik\n \n-For getting access to the files you can use package `templates` from `backend/app/templates`\n+For getting access to the files, you can use package `templates` from `backend/app/templates`\n \n-Now we have following templates:\n+Now we have the following templates:\n \n - `email_confirmation_login.html.tmpl` – used for confirmation of login\n - `email_confirmation_subscription.html.tmpl` – used for confirmation of subscription\n-    - `email_reply.html.tmpl` – used for sending replies to user comments (when user subscribed to it) and for noticing admins about new comments on a site\n-    - `email_unsubscribe.html.tmpl` – used for notification about successful unsubscribe from replies\n-    - `error_response.html.tmpl` – used for ...\n+- `email_reply.html.tmpl` – used for sending replies to user comments (when the user subscribed to it) and for noticing admins about new comments on a site\n+- `email_unsubscribe.html.tmpl` – used for notification about successful unsubscribe from replies\n+- `error_response.html.tmpl` – used for HTML errors"
    },
    {
      "sha": "503c795add2716b4fabf443d172cdff4652536b0",
      "filename": "site/src/docs/configuration/frontend/index.md",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/configuration/frontend/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/configuration/frontend/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/configuration/frontend/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -61,19 +61,19 @@ And then add this node in the place where you want to see Remark42 widget:\n \n After that widget will be rendered inside this node.\n \n-If you want to set this up on a Single Page App, see [appropriate doc page](https://remark42.com/docs/configuration/frontend/).\n+If you want to set this up on a Single Page App, see the [appropriate doc page](https://remark42.com/docs/configuration/frontend/).\n \n ##### Themes\n \n-Right now Remark42 has two themes: light and dark. You can pick one using a configuration object, but there is also a possibility to switch between themes in runtime. For this purpose Remark42 adds to `window` object named `REMARK42`, which contains a function `changeTheme`. Just call this function and pass a name of the theme that you want to turn on:\n+Remark42 has two themes: light and dark. You can pick one using a configuration object, but there is also a possibility to switch between themes in runtime. For this purpose, Remark42 adds to the `window` object named `REMARK42`, which contains a function `changeTheme`. Just call this function and pass a name of the theme that you want to turn on:\n \n ```js\n window.REMARK42.changeTheme('light');\n ```\n \n ##### Locales\n \n-Right now Remark42 is translated to English (en), Belarusian (be), Brazilian Portuguese (bp), Bulgarian (bg), Chinese (zh), Finnish (fi), French (fr), German (de), Japanese (ja), Korean (ko), Polish (pl), Russian (ru), Spanish (es), Turkish (tr), Ukrainian (ua), Italian (it) and Vietnamese (vi) languages. You can pick one using [configuration object](https://remark42.com/docs/getting-started/installation/#setup-on-your-website).\n+Right now Remark42 is translated to English (en), Belarusian (be), Brazilian Portuguese (bp), Bulgarian (bg), Chinese (zh), Finnish (fi), French (fr), German (de), Japanese (ja), Korean (ko), Polish (pl), Russian (ru), Spanish (es), Turkish (tr), Ukrainian (ua), Italian (it) and Vietnamese (vi) languages. You can pick one using a [configuration object](https://remark42.com/docs/getting-started/installation/#setup-on-your-website).\n \n Do you want to translate Remark42 to other locales? Please see [this documentation](https://remark42.com/docs/contributing/translations/) for details.\n \n@@ -126,9 +126,9 @@ And then add a node like this in the place where you want to see a number of com\n ></span>\n ```\n \n-You can use as many nodes like this as you need to. The script will found all of them by the class `remark__counter`, and it will use `data-url` attribute to define the page with comments.\n+You can use as many nodes like this as you need to. The script will find all of them by the class `remark__counter`, and it will use the `data-url` attribute to define the page with comments.\n \n-Also script can use `url` property from `remark_config` object, or `window.location.origin + window.location.pathname` if nothing else is defined.\n+Also, the script can use `url` property from `remark_config` object or `window.location.origin + window.location.pathname` if nothing else is defined.\n \n ## Widgets\n \n@@ -138,7 +138,7 @@ Also script can use `url` property from `remark_config` object, or `window.locat\n \n ## API for Single-Page Applications\n \n-Originally tested on [Nuxt.js](https://nuxtjs.org/), but it should be applicable to all SPAs.\n+Tested initially on [Nuxt.js](https://nuxtjs.org/), but it should apply to all SPAs.\n \n - Add the following JavaScript to your `index.html`, which in this case, it is identical to `<script defer src=\"$HOST/web/embed.js\"></script>`\n "
    },
    {
      "sha": "5f3978d0d8a4e32b011cd2178002383c299d4cce",
      "filename": "site/src/docs/configuration/parameters/index.md",
      "status": "modified",
      "additions": 19,
      "deletions": 19,
      "changes": 38,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/configuration/parameters/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/configuration/parameters/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/configuration/parameters/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -7,7 +7,7 @@ title: Command-Line Interface parameters\n Most of the parameters have sane defaults and don't require customization. There are only a few parameters the user has to define:\n \n 1. `SECRET` - secret key, can be any long and hard-to-guess string\n-2. `REMARK_URL` - URL pointing to your Remark42 server, i.e. `https://demo.remark42.com`\n+2. `REMARK_URL` - URL pointing to your Remark42 server, i.e., `https://demo.remark42.com`\n 3. At least one pair of `AUTH_<PROVIDER>_CID` and `AUTH_<PROVIDER>_CSEC` defining OAuth2 provider(s)\n \n The minimal `docker-compose.yml` has to include all required parameters:\n@@ -35,36 +35,36 @@ services:\n | Command line            | Environment             | Default                  | Description                                     |\n | ----------------------- | ----------------------- | ------------------------ | ----------------------------------------------- |\n | url                     | REMARK_URL              |                          | URL to Remark42 server, _required_              |\n-| secret                  | SECRET                  |                          | shared secret key used to sign JWT, should be a random, long, hard-to-guess string, _required_ |\n+| secret                  | SECRET                  |                          | the shared secret key used to sign JWT, should be a random, long, hard-to-guess string, _required_ |\n | site                    | SITE                    | `remark`                 | site name(s), _multi_                           |\n | store.type              | STORE_TYPE              | `bolt`                   | type of storage, `bolt` or `rpc`                |\n-| store.bolt.path         | STORE_BOLT_PATH         | `./var`                  | path to data directory                          |\n+| store.bolt.path         | STORE_BOLT_PATH         | `./var`                  | parent directory for the bolt files             |\n | store.bolt.timeout      | STORE_BOLT_TIMEOUT      | `30s`                    | boltdb access timeout                           |\n | admin.shared.id         | ADMIN_SHARED_ID         |                          | admin IDs (list of user IDs), _multi_           |\n | admin.shared.email      | ADMIN_SHARED_EMAIL      | `admin@${REMARK_URL}`    | admin emails, _multi_                           |\n | backup                  | BACKUP_PATH             | `./var/backup`           | backups location                                |\n | max-back                | MAX_BACKUP_FILES        | `10`                     | max backup files to keep                        |\n | cache.type              | CACHE_TYPE              | `mem`                    | type of cache, `redis_pub_sub` or `mem` or `none` |\n-| cache.redis_addr        | CACHE_REDIS_ADDR        | `127.0.0.1:6379`         | address of redis PubSub instance, turn `redis_pub_sub` cache on for distributed cache |\n+| cache.redis_addr        | CACHE_REDIS_ADDR        | `127.0.0.1:6379`         | address of Redis PubSub instance, turn `redis_pub_sub` cache on for distributed cache |\n | cache.max.items         | CACHE_MAX_ITEMS         | `1000`                   | max number of cached items, `0` - unlimited     |\n-| cache.max.value         | CACHE_MAX_VALUE         | `65536`                  | max size of cached value, `0` - unlimited       |\n+| cache.max.value         | CACHE_MAX_VALUE         | `65536`                  | max size of the cached value, `0` - unlimited   |\n | cache.max.size          | CACHE_MAX_SIZE          | `50000000`               | max size of all cached values, `0` - unlimited  |\n | avatar.type             | AVATAR_TYPE             | `fs`                     | type of avatar storage, `fs`, `bolt`, or `uri`  |\n | avatar.fs.path          | AVATAR_FS_PATH          | `./var/avatars`          | avatars location for `fs` store                 |\n-| avatar.bolt.file        | AVATAR_BOLT_FILE        | `./var/avatars.db`       | file name for `bolt` store                      |\n-| avatar.uri              | AVATAR_URI              | `./var/avatars`          | avatar store uri                                |\n+| avatar.bolt.file        | AVATAR_BOLT_FILE        | `./var/avatars.db`       | avatars `bolt` file location                    |\n+| avatar.uri              | AVATAR_URI              | `./var/avatars`          | avatars store URI                               |\n | avatar.rsz-lmt          | AVATAR_RSZ_LMT          | `0` (disabled)           | max image size for resizing avatars on save     |\n | image.type              | IMAGE_TYPE              | `fs`                     | type of image storage, `fs`, `bolt`             |\n | image.max-size          | IMAGE_MAX_SIZE          | `5000000`                | max size of image file                          |\n | image.fs.path           | IMAGE_FS_PATH           | `./var/pictures`         | permanent location of images                    |\n | image.fs.staging        | IMAGE_FS_STAGING        | `./var/pictures.staging` | staging location of images                      |\n | image.fs.partitions     | IMAGE_FS_PARTITIONS     | `100`                    | number of image partitions                      |\n | image.bolt.file         | IMAGE_BOLT_FILE         | `/var/pictures.db`       | images bolt file location                       |\n-| image.resize-width      | IMAGE_RESIZE_WIDTH      | `2400`                   | width of resized image                          |\n-| image.resize-height     | IMAGE_RESIZE_HEIGHT     | `900`                    | height of resized image                         |\n-| auth.ttl.jwt            | AUTH_TTL_JWT            | `5m`                     | jwt TTL                                         |\n+| image.resize-width      | IMAGE_RESIZE_WIDTH      | `2400`                   | width of a resized image                        |\n+| image.resize-height     | IMAGE_RESIZE_HEIGHT     | `900`                    | height of a resized image                       |\n+| auth.ttl.jwt            | AUTH_TTL_JWT            | `5m`                     | JWT TTL                                         |\n | auth.ttl.cookie         | AUTH_TTL_COOKIE         | `200h`                   | cookie TTL                                      |\n-| auth.send-jwt-header    | AUTH_SEND_JWT_HEADER    | `false`                  | send JWT as a header instead of cookie          |\n+| auth.send-jwt-header    | AUTH_SEND_JWT_HEADER    | `false`                  | send JWT as a header instead of a cookie        |\n | auth.same-site          | AUTH_SAME_SITE          | `default`                | set same site policy for cookies (`default`, `none`, `lax` or `strict`) |\n | auth.google.cid         | AUTH_GOOGLE_CID         |                          | Google OAuth client ID                          |\n | auth.google.csec        | AUTH_GOOGLE_CSEC        |                          | Google OAuth client secret                      |\n@@ -91,7 +91,7 @@ services:\n | notify.users            | NOTIFY_USERS            | none                     | type of user notifications (Telegram, email)    |\n | notify.admins           | NOTIFY_ADMINS           | none                     | type of admin notifications (Telegram, Slack, webhook and/or email) |\n | notify.queue            | NOTIFY_QUEUE            | `100`                    | size of notification queue                      |\n-| notify.telegram.chan    | NOTIFY_TELEGRAM_CHAN    |                          | ID of telegram channel for admin notifications  |\n+| notify.telegram.chan    | NOTIFY_TELEGRAM_CHAN    |                          | the ID of telegram channel for admin notifications |\n | notify.slack.token      | NOTIFY_SLACK_TOKEN      |                          | Slack token                                     |\n | notify.slack.chan       | NOTIFY_SLACK_CHAN       | `general`                | Slack channel for admin notifications           |\n | notify.webhook.url      | NOTIFY_WEBHOOK_URL      |                          | Webhook notification URL for admin notifications |\n@@ -110,8 +110,8 @@ services:\n | smtp.timeout            | SMTP_TIMEOUT            | `10s`                    | SMTP TCP connection timeout                     |\n | ssl.type                | SSL_TYPE                | none                     | `none`-HTTP, `static`-HTTPS, `auto`-HTTPS + le  |\n | ssl.port                | SSL_PORT                | `8443`                   | port for HTTPS server                           |\n-| ssl.cert                | SSL_CERT                |                          | path to cert.pem file                           |\n-| ssl.key                 | SSL_KEY                 |                          | path to key.pem file                            |\n+| ssl.cert                | SSL_CERT                |                          | path to the cert.pem file                       |\n+| ssl.key                 | SSL_KEY                 |                          | path to the key.pem file                        |\n | ssl.acme-location       | SSL_ACME_LOCATION       | `./var/acme`             | dir where obtained le-certs will be stored      |\n | ssl.acme-email          | SSL_ACME_EMAIL          |                          | admin email for receiving notifications from LE |\n | max-comment             | MAX_COMMENT_SIZE        | `2048`                   | comment's size limit                            |\n@@ -141,13 +141,13 @@ services:\n | admin-passwd            | ADMIN_PASSWD            | none (disabled)          | password for `admin` basic auth                 |\n | dbg                     | DEBUG                   | `false`                  | debug mode                                      |\n \n-- command line parameters are long-form `--<key>=value`, i.e. `--site=https://demo.remark42.com`\n-- _multi_ parameters separated by `,` in the environment or repeated with command line key, like `--site=s1 --site=s2 ...`\n-- _required_ parameters have to be presented in the environment or provided in the command line\n+- command-line parameters are long-form `--<key>=value`, i.e., `--site=https://demo.remark42.com`\n+- _multi_ parameters separated by `,` in the environment or repeated with command-line keys, like `--site=s1 --site=s2 ...`\n+- _required_ parameters have to be presented in the environment or provided in the command-line\n \n ### Deprecated parameters\n \n-The following list of command-line options is deprecated and might be removed in next major release after the version in which they were deprecated. After Remark42 version update, please check the startup log once for deprecation warning messages to avoid trouble with unrecognized command-line options in the future.\n+The following list of command-line options is deprecated and might be removed in the next major release after the version they were deprecated. After the Remark42 version update, please check the startup log once for deprecation warning messages to avoid trouble with unrecognized command-line options in the future.\n \n <details>\n <summary>Deprecated options</summary>\n@@ -181,7 +181,7 @@ To get a user ID just log in and click on your username or any other user you wa\n \n ### Docker parameters\n \n-Two parameters allow customizing Docker container on the system level:\n+Two parameters allow customizing the Docker container on the system level:\n \n * `APP_UID` - sets UID to run Remark42 application in container (default=1001)\n * `TIME_ZONE` - sets time zone of Remark42 container (default=America/Chicago)"
    },
    {
      "sha": "fb33108cc534a9a1a31a77e3ea766f209c8b5ed0",
      "filename": "site/src/docs/configuration/telegram/index.md",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/configuration/telegram/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/configuration/telegram/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/configuration/telegram/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -37,9 +37,9 @@ Use this token to access the HTTP API:\n For a description of the Bot API, see this page: https://core.telegram.org/bots/api\n ```\n \n-## Auth\n+## Authentication\n \n-To enable Telegram authorization for the users, set variable `AUTH_TELEGRAM=true`.\n+To enable Telegram authentication for the users, set variable `AUTH_TELEGRAM=true`.\n \n ## Notifications\n "
    },
    {
      "sha": "bcca2fce74a2539d9aab1ec8a1629494b3095b9c",
      "filename": "site/src/docs/contributing/api/index.md",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/contributing/api/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/contributing/api/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/contributing/api/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -4,7 +4,7 @@ title: API\n \n ## Authorization\n \n-- `GET /auth/{provider}/login?from=http://url&site=site_id&session=1` - perform \"social\" login with one of [supported providers](#register-oauth2-providers) and redirect to `url`. Presence of `session` (any non-zero value) change the default cookie expiration and makes them session-only\n+- `GET /auth/{provider}/login?from=http://url&site=site_id&session=1` - perform \"social\" login with one of [supported providers](https://remark42.com/docs/configuration/authorization/#oauth-providers) and redirect to `url`. The presence of `session` (any non-zero value) change the default cookie expiration and makes them session-only\n - `GET /auth/logout` - logout\n \n ```go\n@@ -55,7 +55,7 @@ type Edit struct {\n - `POST /api/v1/preview` - preview comment in HTML. Body is `Comment` to render\n - `GET /api/v1/find?site=site-id&url=post-url&sort=fld&format=tree|plain` - find all comments for given post\n \n-This is the primary call used by UI to show comments for the given post. It can return comments in two formats - `plain` and `tree`. In plain format result will be sorted list of `Comment`. In tree format this is going to be tree-like object with this structure:\n+This is the primary call UI uses to show comments for the given post. It can return comments in two formats - `plain` and `tree`. In plain format, the result will be a sorted list of `Comment`. In tree format, this is going to be a tree-like object with this structure:\n \n ```go\n type Tree struct {\n@@ -69,7 +69,7 @@ type Node struct {\n }\n ```\n \n-Sort can be `time`, `active` or `score`. Supported sort order with prefix -/+, i.e. `-time`. For `tree` mode sort will be applied to top-level comments only and all replies are always sorted by time.\n+Sort can be `time`, `active`, or `score`. Supported sort order with prefix -/+, i.e., `-time`. For `tree` mode, the sort will be applied to top-level comments only, and all replies are always sorted by time.\n \n - `PUT /api/v1/comment/{id}?site=site-id&url=post-url` - edit comment, allowed once in `EDIT_TIME` minutes since creation. Body is `EditRequest` JSON\n \n@@ -183,14 +183,14 @@ data: {\"url\":\"https://radio-t.com/blah1\",\"count\":9,\"first_time\":\"2019-06-18T12:5\n - `GET /api/v1/picture/{user}/{id}` - load stored image\n - `POST /api/v1/picture` - upload and store image, uses post form with `FormFile(\"file\")`. Returns `{\"id\": user/imgid}`, _auth required_\n \n-_returned ID should be appended to load image URL on caller side_\n+_returned ID should be appended to load image URL on the caller side_\n \n ## Email Subscription\n \n - `GET /api/v1/email?site=site-id` - get user's email, _auth required_\n-- `POST /api/v1/email/subscribe?site=site-id&address=user@example.org` - makes confirmation token and sends it to user over email, _auth required_\n+- `POST /api/v1/email/subscribe?site=site-id&address=user@example.org` - makes confirmation token and sends it to the user over email, _auth required_\n \n-  Trying to subscribe to the same email a second time will return response code `409 Conflict` and explaining error message\n+  Trying to subscribe to the same email a second time will return response code `409 Conflict` with explaining error message\n \n - `POST /api/v1/email/confirm?site=site-id&tkn=token` - uses provided token parameter to set email for the user, _auth required_\n \n@@ -215,7 +215,7 @@ type BlockedUser struct {\n - `GET /api/v1/admin/export?site=site-id&mode=[stream|file]` - export all comments to JSON stream or gz file\n - `POST /api/v1/admin/import?site=site-id` - import comments from the backup, uses post body\n - `POST /api/v1/admin/import/form?site=site-id` - import comments from the backup, user post form\n-- `POST /api/v1/admin/remap?site=site-id` - remap comments to different URLs. Expect list of \"from-url new-url\" pairs separated by \\n. From-url and new-url parts are separated by space. If URLs end with an asterisk (\\*) it means matching by the prefix. Remap procedure based on export/import chain so make the backup first\n+- `POST /api/v1/admin/remap?site=site-id` - remap comments to different URLs. Expect a list of \"from-url new-url\" pairs separated by \\n. From-url and new-url parts are separated by space. If URLs end with an asterisk (\\*), it means matching the prefix. Remap procedure based on export/import chain so make the backup first\n \n ```\n http://oldsite.com* https://newsite.com*"
    },
    {
      "sha": "7bfdf89a52a10dcd0b7f1acde83ad71544fcd766",
      "filename": "site/src/docs/contributing/development/frontend/index.md",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/contributing/development/frontend/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/contributing/development/frontend/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/contributing/development/frontend/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -4,33 +4,33 @@ title: Frontend Development Guidelines\n \n ### Code Style\n \n-- project uses TypeScript to statically analyze code\n+- the project uses TypeScript to statically analyze code\n - project uses `eslint` and `stylelint` to check frontend code. You can manually run via `npm run lint`\n-- Git Hooks (via husky) installed automatically on `npm install` and check and try to fix code style if possible, otherwise commit will be rejected\n+- Git Hooks (via husky) installed automatically on `npm install`. They check and try to fix code style if possible, otherwise commit will be rejected\n - if you want IDE integration, you need `eslint` and `stylelint` plugin to be installed\n \n ### CSS Styles\n \n-- now we are migrating to CSS Modules and this is a recommended way to stylization. A file with styles should be named like `component.module.css`\n+- now we are migrating to CSS Modules, and this is a recommended way to stylization. A file with styles should be named like `component.module.css`\n - old component styles use BEM notation (at least it should): `block__element_modifier`. Also, there are `mix` classes: `block_modifier`\n-- new way to naming CSS selectors is camel-case like `blockElemenModifier` and use `classnames` to combine it\n+- new way to name CSS selectors is camel-case like `blockElemenModifier` and use `classnames` to combine it\n - component base style resides in the component's root directory with a name of component converted to kebab-case. For example, `ListComments` style is located in `./app/components/list-comments/list-component.tsx`\n - any other files should be named also in kebab-case. For example, `./app/utils/get-param.ts`\n \n ### Imports\n \n - imports for TypeScript, JavaScript files should be without extension: `./index`, not `./index.ts`\n-- if the file resides in the same directory or subdirectory import should be relative: `./types/something`\n-- otherwise it should be imported by absolute path relative to `src` folder like `common/store` which mapped to `./app/common/store.ts` in webpack, tsconfig and Jest\n+- if the file resides in the same directory or subdirectory, import should be relative: `./types/something`\n+- otherwise, it should be imported by absolute path relative to `src` folder like `common/store` which mapped to `./app/common/store.ts` in webpack, tsconfig and Jest\n \n ### Testing\n \n - project uses `jest` as test harness\n-- Jest checks files that match regex `\\.(test|spec)\\.ts(x?)$`, i.e. `comment.test.tsx`, `comment.spec.ts`\n+- Jest checks files that match regex `\\.(test|spec)\\.ts(x?)$`, i.e., `comment.test.tsx`, `comment.spec.ts`\n - tests are running on push attempt\n - example tests can be found in `./app/store/user/reducers.test.ts`, `./app/components/auth-panel/auth-panel.test.tsx`\n \n-### How to add new locale\n+### How to add a new locale\n \n Please see [this documentation](https://remark42.com/docs/contributing/translations/).\n "
    },
    {
      "sha": "c6dc1e73658e60ecda4a64321e1fb3ae03831a4c",
      "filename": "site/src/docs/contributing/development/index.md",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/contributing/development/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/contributing/development/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/contributing/development/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -4,10 +4,10 @@ title: Development\n \n You can use a fully functional local version to develop and test both frontend and backend. It requires at least 2GB RAM or swap enabled.\n \n-To bring it up run:\n+To bring it up, run:\n \n ```shell\n-# if you mainly work on backend\n+# if you mainly work on the backend\n cp compose-dev-backend.yml compose-private.yml\n # if you mainly work on frontend\n cp compose-dev-frontend.yml compose-private.yml\n@@ -18,25 +18,25 @@ docker-compose -f compose-private.yml build\n docker-compose -f compose-private.yml up\n ```\n \n-It starts Remark42 on `127.0.0.1:8080` and adds local OAuth2 provider \"Dev\". To access the UI demo page go to `127.0.0.1:8080/web`. By default, you would be logged in as `dev_user` which is defined as admin. You can tweak any of [supported parameters](#parameters) in corresponded yml file.\n+It starts Remark42 on `127.0.0.1:8080` and adds local OAuth2 provider \"Dev\". To access the UI demo page go to `127.0.0.1:8080/web`. By default, you would be logged in as `dev_user`, defined as admin. You can tweak any of the [supported parameters](https://remark42.com/docs/configuration/parameters/) in corresponded yml file.\n \n Backend Docker Compose config by default skips running frontend related tests. Frontend Docker Compose config by default skips running backend related tests and sets `NODE_ENV=development` for frontend build.\n \n ### Backend development\n \n-To run backend locally (development mode, without Docker) you have to have the latest stable `go` toolchain [installed](https://golang.org/doc/install).\n+To run backend locally (development mode, without Docker), you have to have to [install](https://golang.org/doc/install) the latest stable `go` toolchain.\n \n To run backend - `cd backend; go run app/main.go server --dbg --secret=12345 --url=http://127.0.0.1:8080 --admin-passwd=password --site=remark`. It stars backend service with embedded bolt store on port `8080` with basic auth, allowing to authenticate and run requests directly, like this:\n \n `HTTP http://admin:password@127.0.0.1:8080/api/v1/find?site=remark&sort=-active&format=tree&url=http://127.0.0.1:8080`\n \n ### Frontend development\n \n-Frontend development guide can be found [here](https://remark42.com/docs/contributing/development/frontend/).\n+The frontend development guide can be found [here](https://remark42.com/docs/contributing/development/frontend/).\n \n #### Build\n \n-You should have at least 2GB RAM or swap enabled for building.\n+You must have at least 2GB RAM or swap enabled for building.\n \n - install [Node.js 12.11](https://nodejs.org/en/) or higher\n - install [NPM 6.13.4](https://www.npmjs.com/package/npm)\n@@ -48,15 +48,15 @@ You should have at least 2GB RAM or swap enabled for building.\n \n #### Development server\n \n-For local development mode with Hot Reloading use `npm start` instead of `npm run build`. In this case, `webpack` will serve files using `webpack-dev-server` on `localhost:9000`. By visiting `127.0.0.1:9000/web` you will get a page with the main comments widget communicating with a demo server backend running on `https://demo.remark42.com`. But you will not be able to log in with any OAuth providers due to security reasons.\n+For local development mode with Hot Reloading, use `npm start` instead of `npm run build`. In this case, `webpack` will serve files using `webpack-dev-server` on `localhost:9000`. By visiting `127.0.0.1:9000/web`, you will get a page with the main comments widget communicating with a demo server backend running on `https://demo.remark42.com`. But you will not be able to log in with any OAuth providers due to security reasons.\n \n You can attach to the locally running backend by providing `REMARK_URL` environment variable.\n \n ```shell\n npx cross-env REMARK_URL=http://127.0.0.1:8080 npm start\n ```\n \n-**Note:** If you want to redefine env variables such as `PORT` on your local instance you can add `.env` file to `./frontend` folder and rewrite variables as you wish. For such functional, we use `dotenv`.\n+**Note:** If you want to redefine env variables such as `PORT` on your local instance, you can add `.env` file to `./frontend` folder and rewrite variables as you wish. For such functional, we use `dotenv`.\n \n The best way to start a local developer environment:\n "
    },
    {
      "sha": "b09a1679bd2cca56dc2b5dba663afb065532ce91",
      "filename": "site/src/docs/contributing/technical-details/index.md",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/contributing/technical-details/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/contributing/technical-details/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/contributing/technical-details/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -4,9 +4,9 @@ title: Technical Details\n \n Data stored in [boltdb](https://github.com/etcd-io/bbolt) (embedded key/value database) files under `STORE_BOLT_PATH`. Each site is stored in a separate boltdb file.\n \n-To migrate/move Remark42 to another host boltdb files as well as avatars directory `AVATAR_FS_PATH` should be transferred. Optionally, boltdb can be used to store avatars as well.\n+To migrate/move Remark42 to another host, boltdb files and avatars directory `AVATAR_FS_PATH` should be transferred. Optionally, boltdb can be used to store avatars as well.\n \n-Automatic backup process runs every 24h and exports all content in JSON-like format to `backup-remark-YYYYMMDD.gz`.\n+The automatic backup process runs every 24h and exports all content in JSON-like format to `backup-remark-YYYYMMDD.gz`.\n \n Authentication implemented with [go-pkgz/auth](https://github.com/go-pkgz/auth) stored in a cookie. It uses HttpOnly, secure cookies.\n \n@@ -16,7 +16,7 @@ User's activity throttled globally (up to 1000 simultaneous requests) and limite\n \n Request timeout set to 60sec.\n \n-Admin authentication (`--admin-password` set) allows to hit Remark42 API without social login and with admin privileges. Adds basic-auth for username: `admin`, password: `${ADMIN_PASSWD}`.\n+Admin authentication (`--admin-password` set) allows to hit Remark42 API without social login and admin privileges. Adds basic-auth for username: `admin`, password: `${ADMIN_PASSWD}`.\n \n User can vote for the comment multiple times but only to change the vote. Double voting is not allowed.\n \n@@ -28,6 +28,6 @@ All avatars resized and cached locally to prevent rate limiters from OAuth provi\n \n Images served over HTTP can be proxied to HTTPS (`IMAGE_PROXY_HTTP2HTTPS=true`) to prevent mixed HTTP/HTTPS.\n \n-All images can be proxied and saved locally (`IMAGE_PROXY_CACHE_EXTERNAL=true`) instead of serving from the original location. Beware, images that are posted with this parameter enabled will be served from proxy even after it will be disabled.\n+All images can be proxied and saved locally (`IMAGE_PROXY_CACHE_EXTERNAL=true`) instead of serving from the original location. Beware, images that are posted with this parameter enabled will be served from proxy even after it is disabled.\n \n Docker build uses [publicly available](https://github.com/umputun/baseimage) base images."
    },
    {
      "sha": "5a572b42e3b011ff0471b701e045a70035110c1b",
      "filename": "site/src/docs/contributing/translations/index.md",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/contributing/translations/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/contributing/translations/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/contributing/translations/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -11,17 +11,17 @@ directory with `.json` extension and content like following:\n {\n   \"anonymousLoginForm.length-limit\": \"Username must be at least 3 characters long\",\n   \"anonymousLoginForm.log-in\": \"Log in\",\n-  \"anonymousLoginForm.symbol-limit\": \"Username must start from the letter and contain only latin letters, numbers, underscores, and spaces\",\n+  \"anonymousLoginForm.symbol-limit\": \"Username must start from the letter and contain only Latin letters, numbers, underscores, and spaces\",\n   <...>\n }\n ```\n \n ### Add a new translation\n \n We truly appreciate people spending time contributing their translations to remark42. Please go through the steps\n-below in order to have your translation start being available to all remark42 users and included in the next release.\n+below to have your translation available to all remark42 users and included in the next release.\n \n-1.  Create a fork of [umputun/remark42](https://github.com/umputun/remark42) repo, and if you already have one please pull the latest changes from the upstream master branch. It could be done like that:\n+1.  Create a fork of [umputun/remark42](https://github.com/umputun/remark42) repo, and if you already have one, please pull the latest changes from the upstream master branch. It could be done like that:\n \n     ```shell\n     git remote add upstream https://github.com/umputun/remark42.git\n@@ -30,17 +30,17 @@ below in order to have your translation start being available to all remark42 us\n     git push\n     ```\n \n-1.  Add a new locale with [two-letter code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) of the language you want to make the translation into to list in [frontend/tasks/supportedLocales.json](https://github.com/umputun/remark42/blob/master/frontend/tasks/supportedLocales.json)\n-1.  Run `npm install` in `frontend` folder\n-1.  Run `npm run translation:extract` in `frontend` folder\n-1.  Run `npm run translation:generate` in `frontend` folder\n-1.  Translate all values in the newly created json file in\n+1.  Add a new locale with a [two-letter code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) of the language you want to do the translation into to list in [frontend/tasks/supportedLocales.json](https://github.com/umputun/remark42/blob/master/frontend/tasks/supportedLocales.json)\n+1.  Run `npm install` in the `frontend` folder\n+1.  Run `npm run translation:extract` in the `frontend` folder\n+1.  Run `npm run translation:generate` in the `frontend` folder\n+1.  Translate all values in the newly created JSON file in\n     [frontend/app/locales/](https://github.com/umputun/remark42/tree/master/frontend/app/locales)\n 1.  Commit all changes above in your fork\n 1.  Test your changes in the interface:\n \n     1.  Uncomment `locale: \"ru\"` line in [frontend/templates/demo.ejs](https://github.com/umputun/remark42/blob/master/frontend/templates/demo.ejs) and replace `ru` with your translation language code\n-    2.  [Run remark42 in Docker](https://github.com/umputun/remark42#development) by issuing following commands from the root directory of your remark42 fork:\n+    2.  [Run remark42 in Docker](https://github.com/umputun/remark42#development) by issuing the following commands from the root directory of your remark42 fork:\n         `shell docker-compose -f compose-dev-frontend.yml build docker-compose -f compose-dev-frontend.yml up `\n \n     3.  open [http://127.0.0.1:8080/web](http://127.0.0.1:8080/web), log in, make a comment, make a reply to a comment, and make sure your translation looks as you expect it to look"
    },
    {
      "sha": "f34bdf41e2d8940196d5f0dd828450c647be69b7",
      "filename": "site/src/docs/getting-started/installation/index.md",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/getting-started/installation/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/getting-started/installation/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/getting-started/installation/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -11,13 +11,13 @@ _This is the recommended way to run Remark42_\n - copy provided [`docker-compose.yml`](https://github.com/umputun/remark42/blob/master/docker-compose.yml) and customize for your needs\n - make sure you **don't keep** `ADMIN_PASSWD=something...` for any non-development deployments\n - pull prepared images from the Docker Hub and start - `docker-compose pull && docker-compose up -d`\n-- alternatively compile from the sources - `docker-compose build && docker-compose up -d`\n+- alternatively, compile from the sources - `docker-compose build && docker-compose up -d`\n \n ### Installation with Binary\n \n-- download [archive for stable release](https://github.com/umputun/remark42/releases)\n+- download [archive for the stable release](https://github.com/umputun/remark42/releases)\n - unpack with `gunzip` (Linux, macOS) or with `zip` (Windows)\n-- run as `remark42.{os}-{arch} server {parameters...}`, i.e. `remark42.linux-amd64 server --secret=12345 --url=http://127.0.0.1:8080`\n+- run as `remark42.{os}-{arch} server {parameters...}`, i.e., `remark42.linux-amd64 server --secret=12345 --url=http://127.0.0.1:8080`\n - alternatively compile from the sources - `make OS=[linux|darwin|windows] ARCH=[amd64,386,arm64,arm]`\n \n ## Setup on Your Website\n@@ -67,13 +67,13 @@ Put the next code snippet on a page of your site where you want to have comments\n \n After that widget will be rendered inside this node.\n \n-If you want to set this up on a Single Page App, see [appropriate doc page](https://remark42.com/docs/configuration/frontend/).\n+If you want to set this up on a Single Page App, see the [appropriate doc page](https://remark42.com/docs/configuration/frontend/).\n \n #### Quick installation test\n \n-To verify if Remark42 has been properly installed, check a demo page at `${REMARK_URL}/web` URL. Make sure to include `remark` site ID to `${SITE}` list.\n+To verify if Remark42 has been properly installed, check a demo page at `${REMARK_URL}/web` URL. Make sure to include `remark` site ID to the `${SITE}` list.\n \n ### Build from the source\n \n * to build Docker container - `make docker`. This command will produce container `umputun/remark42`\n-* to build a single binary for direct execution - `make OS=<linux|windows|darwin> ARCH=<amd64|386>`. This step will produce executable `remark42` file with everything embedded\n+* to build a single binary for direct execution - `make OS=<linux|windows|darwin> ARCH=<amd64|386>`. This step will produce an executable `remark42` file with everything embedded"
    },
    {
      "sha": "fb19cc3829aa49066b0207622e89f823065aad6a",
      "filename": "site/src/docs/manuals/kubernetes/index.md",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/manuals/kubernetes/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/manuals/kubernetes/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/manuals/kubernetes/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -148,8 +148,8 @@ spec:\n \n Change `storageClassName` if you run on top of different cloud / bare metal.\n \n-This example assumes there is nginx Ingress with cert-manager already set up.\n-Adjust accordingly if you use different Ingress.\n+This example assumes there is Nginx Ingress with a cert-manager already set up.\n+Adjust if you use different Ingress.\n \n In addition you'd need to define secrets, e.g.\n "
    },
    {
      "sha": "a3837ae95639265e4561a80932c2bad689fd2e48",
      "filename": "site/src/docs/manuals/nginx/index.md",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/manuals/nginx/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/manuals/nginx/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/manuals/nginx/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -2,7 +2,7 @@\n title: Configure with Nginx\n ---\n \n-## How to configure remark42 with nginx reverse proxy\n+## How to configure remark42 with Nginx reverse proxy\n \n Example of nginx configuration (reverse proxy) running remark42 service on remark42.example.com\n \n@@ -51,4 +51,4 @@ server {\n }\n ```\n \n-note: `proxy_pass` points to internal DNS name `remark42` and expected to run from the same compose. If nginx runs outside compose the real IP (or docker's bridge IP) should be used\n+Note: `proxy_pass` points to internal DNS name `remark42` and is expected to run from the same compose. If Nginx runs outside compose, the real IP (or docker's bridge IP) should be used"
    },
    {
      "sha": "3c8eeda87b7ff34201372957289785e53cb7fb59",
      "filename": "site/src/docs/manuals/subdomain/index.md",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/docs/manuals/subdomain/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/docs/manuals/subdomain/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/manuals/subdomain/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -4,7 +4,7 @@ title: Configure Instance on Subdomain\n \n ## How to configure remark42 without a subdomain\n \n-All README examples show configurations with remark42 on its own subdomain, i.e. `https://remark42.example.com`. However, it is possible and sometimes desirable to run remark42 without a subdomain, but just under some path, i.e. `https://example.com/remark42`.\n+All README examples show configurations with remark42 on its own subdomain, i.e., `https://remark42.example.com`. However, it is possible and sometimes desirable to run remark42 without a subdomain, but just under some path, i.e., `https://example.com/remark42`.\n \n - The frontend URL looks like this: `s.src = 'https://example.com/remark42/web/embed.js;`\n \n@@ -17,7 +17,7 @@ All README examples show configurations with remark42 on its own subdomain, i.e.\n \n ### docker-compose configuration\n \n-Both Nginx and Caddy configuration below relies on remark42 available on hostname `remark42`, which is achieved by having `container_name: remark42` in docker-compose.\n+Both Nginx and Caddy configuration below rely on remark42 available on hostname `remark42`, which is achieved by having `container_name: remark42` in docker-compose.\n \n Example `docker-compose.yaml`:\n "
    },
    {
      "sha": "ea619aa27f60ed37b7226fae6042a75742bbb009",
      "filename": "site/src/pages/index.md",
      "status": "modified",
      "additions": 12,
      "deletions": 12,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/151913f3712524d880430ecd289113042d010d88/site/src/pages/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/151913f3712524d880430ecd289113042d010d88/site/src/pages/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/pages/index.md?ref=151913f3712524d880430ecd289113042d010d88",
      "patch": "@@ -1,47 +1,47 @@\n ---\n layout: home.njk\n permalink: index.html\n-title: Remark42 – Privacy focused lightweight commenting engine\n+title: Remark42 – Privacy-focused lightweight commenting engine\n ---\n \n-<h1 class=\"text-center !text-4xl !md:text-5xl\">Privacy focused lightweight commenting engine</h1>\n+<h1 class=\"text-center !text-4xl !md:text-5xl\">Privacy-focused lightweight commenting engine</h1>\n \n-Remark42 gives you opportunity to have self-hosted, lightweight, and simple (yet functional) comment engine, which doesn't spy on users. It can be embedded into blogs, articles or any other place where readers add comments.\n+Remark42 allows you to have a self-hosted, lightweight, and simple (yet functional) comment engine, which doesn't spy on users. It can be embedded into blogs, articles or any other place where readers add comments.\n \n * Social login via Google, Twitter, Facebook, Microsoft, GitHub, Yandex, Patreon and Telegram\n * Login via email\n * Optional anonymous access\n * Multi-level nested comments with both tree and plain presentations\n * Import from Disqus and WordPress\n * Markdown support with friendly formatter toolbar\n-* Moderator can remove comments and block users\n+* Moderators can remove comments and block users\n * Voting, pinning and verification system\n * Sortable comments\n * Images upload with drag-and-drop\n * Extractor for recent comments, cross-post\n * RSS for all comments and each post\n-* Telegram, Slack and email notifications for Admins (get notified for each new comment)\n-* Email and Telegram notifications for users (get notified when someone responds to your comment)\n+* Telegram, Slack, email and webhook admin notifications for each new comment on your site\n+* Email and Telegram notifications for users so that they get notified when someone responds to their comments\n * Export data to JSON with automatic backups\n * No external databases, everything embedded in a single data file\n * Fully dockerized and can be deployed in a single command\n-* Self-contained executable can be deployed directly to Linux, Windows and macOS\n+* A self-contained executable can be deployed directly to Linux, Windows and macOS\n * Clean, lightweight and customizable UI with white and dark themes\n * Multi-site mode from a single instance\n * Integration with automatic SSL (direct or via reproxy)\n-* Privacy focused\n+* Privacy-focused\n \n ## Privacy\n \n * Remark42 is trying to be very sensitive to any private or semi-private information.\n-* Authentication requesting the minimal possible scope from authentication providers. All extra information returned by them is immediately dropped and not stored in any form.\n+* Authentication is requesting the minimal possible scope from authentication providers and all extra information returned by them is immediately dropped and not stored in any form.\n * Generally, Remark42 keeps user ID, username and avatar link only. None of these fields exposed directly - ID and name hashed, avatar proxied.\n * There is no tracking of any sort.\n * Login mechanic uses JWT stored in a cookie (HttpOnly, secured). The second cookie (XSRF_TOKEN) is a random ID preventing CSRF.\n-* There is no cross-site login, i.e. user's behavior can't be analyzed across independent sites running Remark42.\n+* There is no cross-site login, i.e., user's behavior can't be analyzed across independent sites running Remark42.\n * There are no third-party analytic services involved.\n-* User can request all information Remark42 knows about and export to gz file.\n-* Supported complete cleanup of all information related to user's activity.\n+* Users can request all information Remark42 knows about them and receive the export in the gz file.\n+* Supports complete cleanup of all information related to user's activity by user's \"deleteme\" request.\n * Cookie lifespan can be restricted to session-only.\n * All potentially sensitive data stored by Remark42 hashed and encrypted.\n "
    }
  ]
}
