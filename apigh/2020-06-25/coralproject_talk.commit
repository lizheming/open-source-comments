{
  "sha": "f3ef9ef778ccefa855a94b7e48d3a249cf759043",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6ZjNlZjllZjc3OGNjZWZhODU1YTk0YjdlNDhkM2EyNDljZjc1OTA0Mw==",
  "commit": {
    "author": {
      "name": "Wyatt Johnson",
      "email": "wyattjoh@gmail.com",
      "date": "2020-06-24T22:24:37Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-06-24T22:24:37Z"
    },
    "message": "Replace nodemailer with emailjs (#2983)\n\n* chore: replace nodemailer with emailjs\r\n\r\n* fix: bumped version",
    "tree": {
      "sha": "b791d6ae4e4a71dd08b57f1f0b15096fcd267e54",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/b791d6ae4e4a71dd08b57f1f0b15096fcd267e54"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/f3ef9ef778ccefa855a94b7e48d3a249cf759043",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe89KlCRBK7hj4Ov3rIwAAdHIIAIbdTnn4SzkTFfL7T6XJN1yl\nC/pfU86s641ZY6xG79dJr+ay6mH3Dh8OILkaNfcl5XYlFNMoWtxS6DYct+AaDdss\n9CT4slmqP0k033U/dj22uF8H11jAsZaVOACobe8JwUyES5RJHMYd4VcQmptCrffs\nmGPlRwY2+RIfWgnwRoMjUcVgKjbpHSvayqI45hj1iTbt2NF2QQiBl3+rWslutSpC\nKFm+ApbEIxQw8Kda30FKWnOxq0y6cbsawTORuQSwoqrOWLrkrGrcbX8XhYrew+HO\n+WzoKUUG82+BwWrN9L0vo5fzulSeqbnhO7xS5/o634rqHWeXZsO1BVo4wRyMCIA=\n=6QNo\n-----END PGP SIGNATURE-----\n",
      "payload": "tree b791d6ae4e4a71dd08b57f1f0b15096fcd267e54\nparent db8c9de0e7b3b96ef905ae8408fc8aa9188ed804\nauthor Wyatt Johnson <wyattjoh@gmail.com> 1593037477 +0000\ncommitter GitHub <noreply@github.com> 1593037477 +0000\n\nReplace nodemailer with emailjs (#2983)\n\n* chore: replace nodemailer with emailjs\r\n\r\n* fix: bumped version"
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/f3ef9ef778ccefa855a94b7e48d3a249cf759043",
  "html_url": "https://github.com/coralproject/talk/commit/f3ef9ef778ccefa855a94b7e48d3a249cf759043",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/f3ef9ef778ccefa855a94b7e48d3a249cf759043/comments",
  "author": {
    "login": "wyattjoh",
    "id": 633002,
    "node_id": "MDQ6VXNlcjYzMzAwMg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/633002?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wyattjoh",
    "html_url": "https://github.com/wyattjoh",
    "followers_url": "https://api.github.com/users/wyattjoh/followers",
    "following_url": "https://api.github.com/users/wyattjoh/following{/other_user}",
    "gists_url": "https://api.github.com/users/wyattjoh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wyattjoh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wyattjoh/subscriptions",
    "organizations_url": "https://api.github.com/users/wyattjoh/orgs",
    "repos_url": "https://api.github.com/users/wyattjoh/repos",
    "events_url": "https://api.github.com/users/wyattjoh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wyattjoh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "db8c9de0e7b3b96ef905ae8408fc8aa9188ed804",
      "url": "https://api.github.com/repos/coralproject/talk/commits/db8c9de0e7b3b96ef905ae8408fc8aa9188ed804",
      "html_url": "https://github.com/coralproject/talk/commit/db8c9de0e7b3b96ef905ae8408fc8aa9188ed804"
    }
  ],
  "stats": {
    "total": 84,
    "additions": 45,
    "deletions": 39
  },
  "files": [
    {
      "sha": "2354e09b7fe5d6dd719a9cc346d074422628b426",
      "filename": "package-lock.json",
      "status": "modified",
      "additions": 5,
      "deletions": 14,
      "changes": 19,
      "blob_url": "https://github.com/coralproject/talk/blob/f3ef9ef778ccefa855a94b7e48d3a249cf759043/package-lock.json",
      "raw_url": "https://github.com/coralproject/talk/raw/f3ef9ef778ccefa855a94b7e48d3a249cf759043/package-lock.json",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/package-lock.json?ref=f3ef9ef778ccefa855a94b7e48d3a249cf759043",
      "patch": "@@ -7906,15 +7906,6 @@\n         }\n       }\n     },\n-    \"@types/nodemailer\": {\n-      \"version\": \"6.4.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@types/nodemailer/-/nodemailer-6.4.0.tgz\",\n-      \"integrity\": \"sha512-KY7bFWB0MahRZvVW4CuW83qcCDny59pJJ0MQ5ifvfcjNwPlIT0vW4uARO4u1gtkYnWdhSvURegecY/tzcukJcA==\",\n-      \"dev\": true,\n-      \"requires\": {\n-        \"@types/node\": \"*\"\n-      }\n-    },\n     \"@types/normalize-package-data\": {\n       \"version\": \"2.4.0\",\n       \"resolved\": \"https://registry.npmjs.org/@types/normalize-package-data/-/normalize-package-data-2.4.0.tgz\",\n@@ -18037,6 +18028,11 @@\n         \"minimalistic-crypto-utils\": \"^1.0.0\"\n       }\n     },\n+    \"emailjs\": {\n+      \"version\": \"3.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/emailjs/-/emailjs-3.2.0.tgz\",\n+      \"integrity\": \"sha512-eZMcUgkhNkHlr9J8ifhNyvuMEoSlpZzZj10kgCaa3b2DQo9GKkYYoQ4dB0iOQ6WERrT7VKW7XOTEbt7ZbTtyyQ==\"\n+    },\n     \"emoji-regex\": {\n       \"version\": \"6.1.1\",\n       \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-6.1.1.tgz\",\n@@ -36242,11 +36238,6 @@\n         \"semver\": \"^5.3.0\"\n       }\n     },\n-    \"nodemailer\": {\n-      \"version\": \"6.4.6\",\n-      \"resolved\": \"https://registry.npmjs.org/nodemailer/-/nodemailer-6.4.6.tgz\",\n-      \"integrity\": \"sha512-/kJ+FYVEm2HuUlw87hjSqTss+GU35D4giOpdSfGp7DO+5h6RlJj7R94YaYHOkoxu1CSaM0d3WRBtCzwXrY6MKA==\"\n-    },\n     \"noms\": {\n       \"version\": \"0.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/noms/-/noms-0.0.0.tgz\","
    },
    {
      "sha": "ea638c52ea3de85b215c2f221e94265da180bc76",
      "filename": "package.json",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/coralproject/talk/blob/f3ef9ef778ccefa855a94b7e48d3a249cf759043/package.json",
      "raw_url": "https://github.com/coralproject/talk/raw/f3ef9ef778ccefa855a94b7e48d3a249cf759043/package.json",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/package.json?ref=f3ef9ef778ccefa855a94b7e48d3a249cf759043",
      "patch": "@@ -88,6 +88,7 @@\n     \"dataloader\": \"1.4.0\",\n     \"dompurify\": \"^2.0.8\",\n     \"dotenv\": \"^8.2.0\",\n+    \"emailjs\": \"^3.2.0\",\n     \"env-rewrite\": \"^1.0.2\",\n     \"express\": \"^4.17.1\",\n     \"express-enforces-ssl\": \"^1.1.0\",\n@@ -123,7 +124,6 @@\n     \"mongodb-core\": \"^3.2.7\",\n     \"ms\": \"^2.1.2\",\n     \"node-fetch\": \"^2.6.0\",\n-    \"nodemailer\": \"^6.4.6\",\n     \"nunjucks\": \"^3.2.1\",\n     \"on-finished\": \"^2.3.0\",\n     \"passport\": \"^0.4.1\",\n@@ -204,7 +204,6 @@\n     \"@types/ms\": \"^0.7.31\",\n     \"@types/node\": \"^12.12.34\",\n     \"@types/node-fetch\": \"^2.5.5\",\n-    \"@types/nodemailer\": \"^6.4.0\",\n     \"@types/nunjucks\": \"^3.1.3\",\n     \"@types/on-finished\": \"^2.3.1\",\n     \"@types/passport\": \"^1.0.3\","
    },
    {
      "sha": "8bbbe663d4b7b640d48d2bcdeb3a08ae83dd60a8",
      "filename": "src/core/server/queue/tasks/mailer/processor.ts",
      "status": "modified",
      "additions": 39,
      "deletions": 23,
      "changes": 62,
      "blob_url": "https://github.com/coralproject/talk/blob/f3ef9ef778ccefa855a94b7e48d3a249cf759043/src/core/server/queue/tasks/mailer/processor.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/f3ef9ef778ccefa855a94b7e48d3a249cf759043/src/core/server/queue/tasks/mailer/processor.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/queue/tasks/mailer/processor.ts?ref=f3ef9ef778ccefa855a94b7e48d3a249cf759043",
      "patch": "@@ -3,14 +3,18 @@ import { DOMLocalization } from \"@fluent/dom/compat\";\n import Joi from \"@hapi/joi\";\n import { Job } from \"bull\";\n import createDOMPurify from \"dompurify\";\n+import {\n+  Message,\n+  MessageAttachment,\n+  SMTPClient,\n+  SMTPConnectionOptions,\n+} from \"emailjs\";\n import { minify } from \"html-minifier\";\n import htmlToText from \"html-to-text\";\n import { JSDOM } from \"jsdom\";\n import { juiceResources } from \"juice\";\n import { camelCase, isNil } from \"lodash\";\n import { Db } from \"mongodb\";\n-import { createTransport } from \"nodemailer\";\n-import { Options } from \"nodemailer/lib/smtp-connection\";\n \n import { LanguageCode } from \"coral-common/helpers\";\n import { Config } from \"coral-server/config\";\n@@ -51,12 +55,16 @@ const MailerDataSchema = Joi.object().keys({\n   tenantID: Joi.string(),\n });\n \n-interface Message {\n-  from: string;\n-  to: string;\n-  html: string;\n-  text: string;\n-  subject: string;\n+function send(client: SMTPClient, message: Message): Promise<Message> {\n+  return new Promise((resolve, reject) => {\n+    client.send(message, (err, msg) => {\n+      if (err) {\n+        return reject(err);\n+      }\n+\n+      return resolve(msg);\n+    });\n+  });\n }\n \n /**\n@@ -150,6 +158,18 @@ function createMessageTranslator(i18n: I18n) {\n     // Juice the HTML to inline resources.\n     const html = await juiceHTML(dom.serialize());\n \n+    // Wrap the html in an email attachment as an alternative representation of\n+    // the email message. This is casted \"as MessageAttachment\" following the\n+    // test example here:\n+    //\n+    // https://github.com/eleith/emailjs/blob/0781d02cbf7de0d55b417d00ae7f5ab1283bf527/test/message.ts#L166-L169\n+    //\n+    // TODO: (wyattjoh) tracking issue here https://github.com/eleith/emailjs/issues/254\n+    const attachment = {\n+      data: html,\n+      alternative: true,\n+    } as MessageAttachment;\n+\n     // Get the translated subject.\n     const subject = translate(\n       bundle,\n@@ -162,13 +182,13 @@ function createMessageTranslator(i18n: I18n) {\n     const text = htmlToText.fromString(html);\n \n     // Prepare the message payload.\n-    return {\n+    return new Message({\n       from: fromAddress,\n       to: data.message.to,\n-      html,\n       text,\n       subject,\n-    };\n+      attachment,\n+    });\n   };\n }\n \n@@ -177,9 +197,7 @@ export const createJobProcessor = (options: MailProcessorOptions) => {\n \n   // Create the cache adapter that will handle invalidating the email transport\n   // when the tenant experiences a change.\n-  const cache = new TenantCacheAdapter<ReturnType<typeof createTransport>>(\n-    tenantCache\n-  );\n+  const cache = new TenantCacheAdapter<SMTPClient>(tenantCache);\n \n   // Create the message translator function.\n   const translateMessage = createMessageTranslator(i18n);\n@@ -268,23 +286,21 @@ export const createJobProcessor = (options: MailProcessorOptions) => {\n     if (!transport) {\n       try {\n         // Create the new transport options.\n-        const opts: Options = {\n+        const opts: Partial<SMTPConnectionOptions> = {\n           host: smtp.host,\n           port: smtp.port,\n-          secure: smtp.secure,\n+          tls: smtp.secure,\n         };\n         if (smtp.authentication && smtp.username && smtp.password) {\n           // If authentication details are provided, add them to the transport\n           // configuration.\n-          opts.auth = {\n-            type: \"login\",\n-            user: smtp.username,\n-            pass: smtp.password,\n-          };\n+          opts.user = smtp.username;\n+          opts.password = smtp.password;\n+          opts.authentication = [\"LOGIN\"];\n         }\n \n         // Create the transport based on the smtp uri.\n-        transport = createTransport(opts);\n+        transport = new SMTPClient(opts);\n       } catch (e) {\n         throw new WrappedInternalError(e, \"could not create email transport\");\n       }\n@@ -303,7 +319,7 @@ export const createJobProcessor = (options: MailProcessorOptions) => {\n \n     try {\n       // Send the mail message.\n-      await transport.sendMail(message);\n+      await send(transport, message);\n     } catch (e) {\n       throw new WrappedInternalError(e, \"could not send email\");\n     }"
    }
  ]
}
