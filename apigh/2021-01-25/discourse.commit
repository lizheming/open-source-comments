{
  "sha": "21d66032452d3593c25e9c09365dac8fbf8cc2aa",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODoyMWQ2NjAzMjQ1MmQzNTkzYzI1ZTljMDkzNjVkYWM4ZmJmOGNjMmFh",
  "commit": {
    "author": {
      "name": "Joffrey JAFFEUX",
      "email": "j.jaffeux@gmail.com",
      "date": "2021-01-25T11:04:27Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2021-01-25T11:04:27Z"
    },
    "message": "DEV: followup to 8edd2b38cb to use existing spec (#11830)\n\nThis commit also better explains in spec why max_values might be off by one.",
    "tree": {
      "sha": "4d1973d27bd66c35e7fc60854669f59afb5cef34",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/4d1973d27bd66c35e7fc60854669f59afb5cef34"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/21d66032452d3593c25e9c09365dac8fbf8cc2aa",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgDqW7CRBK7hj4Ov3rIwAAdHIIAHaAhk8Uc+uNITxFTW66Xqbr\nQsO1uKEf5FMs7/Bg00Ts4NiCfBdwga0X3CmcC4rU2GBKG26LI1jDYdxVpKMYm5z7\nAZ8Kry53UUcI1szh3ZuOTxE8FzmMG1nzDmJZpp4WPmhE5lSz2xSFFJMjYWQMLfJ+\n7u82+Q7mirHWoM1/zNbWygnTTi6XNN+fF1AJjFWCryxmQ0LBoU3eJgTgIesfndRU\n5UBJkdux6IrCOFULA5cgkUYeSa+MyXrfi2+/91EWmiJ73bGmStpdN3WT0/I/KwYP\nOVNse/HvnBK33vMU4k1eYyOEVvNVYDiHaRWpuekzKYLPLhylTEwd3b75g0OtD2k=\n=OTg1\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 4d1973d27bd66c35e7fc60854669f59afb5cef34\nparent bed011feef23f7cc12fde9762fe76849a7c04479\nauthor Joffrey JAFFEUX <j.jaffeux@gmail.com> 1611572667 +0100\ncommitter GitHub <noreply@github.com> 1611572667 +0100\n\nDEV: followup to 8edd2b38cb to use existing spec (#11830)\n\nThis commit also better explains in spec why max_values might be off by one."
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/21d66032452d3593c25e9c09365dac8fbf8cc2aa",
  "html_url": "https://github.com/discourse/discourse/commit/21d66032452d3593c25e9c09365dac8fbf8cc2aa",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/21d66032452d3593c25e9c09365dac8fbf8cc2aa/comments",
  "author": {
    "login": "jjaffeux",
    "id": 339945,
    "node_id": "MDQ6VXNlcjMzOTk0NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/339945?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jjaffeux",
    "html_url": "https://github.com/jjaffeux",
    "followers_url": "https://api.github.com/users/jjaffeux/followers",
    "following_url": "https://api.github.com/users/jjaffeux/following{/other_user}",
    "gists_url": "https://api.github.com/users/jjaffeux/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jjaffeux/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jjaffeux/subscriptions",
    "organizations_url": "https://api.github.com/users/jjaffeux/orgs",
    "repos_url": "https://api.github.com/users/jjaffeux/repos",
    "events_url": "https://api.github.com/users/jjaffeux/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jjaffeux/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bed011feef23f7cc12fde9762fe76849a7c04479",
      "url": "https://api.github.com/repos/discourse/discourse/commits/bed011feef23f7cc12fde9762fe76849a7c04479",
      "html_url": "https://github.com/discourse/discourse/commit/bed011feef23f7cc12fde9762fe76849a7c04479"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 7,
    "deletions": 21
  },
  "files": [
    {
      "sha": "ea6a2bf8e63564012356b0fafc72db1ca8d7fed0",
      "filename": "spec/components/timeline_lookup_spec.rb",
      "status": "modified",
      "additions": 7,
      "deletions": 4,
      "changes": 11,
      "blob_url": "https://github.com/discourse/discourse/blob/21d66032452d3593c25e9c09365dac8fbf8cc2aa/spec/components/timeline_lookup_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/21d66032452d3593c25e9c09365dac8fbf8cc2aa/spec/components/timeline_lookup_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/components/timeline_lookup_spec.rb?ref=21d66032452d3593c25e9c09365dac8fbf8cc2aa",
      "patch": "@@ -25,16 +25,19 @@\n     input = (1..100).map { |i| [1000 + i, 100 - i] }\n \n     result = TimelineLookup.build(input, 5)\n-    expect(result.size).to eq(5)\n-    expect(result).to eq([[1, 99], [21, 79], [41, 59], [61, 39], [81, 19]])\n+    # even if max_value is 5 we might get 6 (5 + 1)\n+    # to ensure the last tuple is captured\n+    expect(result).to eq([[1, 99], [21, 79], [41, 59], [61, 39], [81, 19], [input.size, input.last[1]]])\n   end\n \n   it \"respects an uneven `max_values` setting\" do\n     input = (1..100).map { |i| [1000 + i, 100 - i] }\n \n     result = TimelineLookup.build(input, 3)\n-    expect(result.size).to eq(3)\n-    expect(result).to eq([[1, 99], [35, 65], [69, 31]])\n+    # even if max_value is 3 we might get 4 (3 + 1)\n+    # to ensure the last tuple is captured\n+    expect(result.size).to eq(4)\n+    expect(result).to eq([[1, 99], [35, 65], [69, 31], [input.size, input.last[1]]])\n   end\n \n end"
    },
    {
      "sha": "517b038c57eda23b2b7300288e14ab9b2cd815a7",
      "filename": "spec/lib/timeline_lookup_spec.rb",
      "status": "removed",
      "additions": 0,
      "deletions": 17,
      "changes": 17,
      "blob_url": "https://github.com/discourse/discourse/blob/bed011feef23f7cc12fde9762fe76849a7c04479/spec/lib/timeline_lookup_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/bed011feef23f7cc12fde9762fe76849a7c04479/spec/lib/timeline_lookup_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/lib/timeline_lookup_spec.rb?ref=bed011feef23f7cc12fde9762fe76849a7c04479",
      "patch": "@@ -1,17 +0,0 @@\n-# frozen_string_literal: true\n-\n-require 'rails_helper'\n-\n-describe TimelineLookup do\n-\n-  context '.build' do\n-    it 'keeps the last tuple in the lookup' do\n-      tuples = [\n-        [7173, 400], [7174, 390], [7175, 380], [7176, 370], [7177, 1]\n-      ]\n-\n-      expect(TimelineLookup.build(tuples, 2)).to eq([[1, 400], [4, 370], [5, 1]])\n-    end\n-  end\n-\n-end"
    }
  ]
}
