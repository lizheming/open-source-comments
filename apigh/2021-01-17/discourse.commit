{
  "sha": "869d25b7d38525a3e6209281b8f3548bb3afc3b9",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODo4NjlkMjViN2QzODUyNWEzZTYyMDkyODFiOGYzNTQ4YmIzYWZjM2I5",
  "commit": {
    "author": {
      "name": "Arpit Jalan",
      "email": "arpit@techapj.com",
      "date": "2021-01-16T14:05:19Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2021-01-16T14:05:19Z"
    },
    "message": "DEV: add specs for Vanilla import script improvements (#11712)",
    "tree": {
      "sha": "58b7a1f1b7282084deec70ef691e2cafacb7495e",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/58b7a1f1b7282084deec70ef691e2cafacb7495e"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/869d25b7d38525a3e6209281b8f3548bb3afc3b9",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgAvKgCRBK7hj4Ov3rIwAAdHIIABhFwEIU5QE/VJwfgyqasY8o\ngaxrAkvisUZLdMiitnQ+ZGQ6+gQTRINVZYCSSNXtArGgrGlxhhgfurO1kBwiP10b\ntPNSMGltfdC4HvmKEgUtzZWQ0ziZvz0jEGmQPXINa7F/td6DowHX4hn89WIfbo3S\nNuWC2nC0rf5bZUKCRLwphegvvRDoN1E68IVU8vVMMWaNu9IGelFBLrbXPdnOlY8v\nQVh8R3vknOCkGA7h2Vztm1PuvR84pIMcCb74RWAmBkYjqsln6qjXntMf2yWOzUDr\nwb4AKfGYwTHg6X5CVYggHl9pcgAr92+PS2lbsYiy6DJ/3GfjmLtu8deUNOqTz/8=\n=y+zz\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 58b7a1f1b7282084deec70ef691e2cafacb7495e\nparent 06d318820a8413b147e0f793124c436ad434c7f3\nauthor Arpit Jalan <arpit@techapj.com> 1610805919 +0530\ncommitter GitHub <noreply@github.com> 1610805919 +0530\n\nDEV: add specs for Vanilla import script improvements (#11712)\n\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/869d25b7d38525a3e6209281b8f3548bb3afc3b9",
  "html_url": "https://github.com/discourse/discourse/commit/869d25b7d38525a3e6209281b8f3548bb3afc3b9",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/869d25b7d38525a3e6209281b8f3548bb3afc3b9/comments",
  "author": {
    "login": "techAPJ",
    "id": 5732281,
    "node_id": "MDQ6VXNlcjU3MzIyODE=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/5732281?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/techAPJ",
    "html_url": "https://github.com/techAPJ",
    "followers_url": "https://api.github.com/users/techAPJ/followers",
    "following_url": "https://api.github.com/users/techAPJ/following{/other_user}",
    "gists_url": "https://api.github.com/users/techAPJ/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/techAPJ/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/techAPJ/subscriptions",
    "organizations_url": "https://api.github.com/users/techAPJ/orgs",
    "repos_url": "https://api.github.com/users/techAPJ/repos",
    "events_url": "https://api.github.com/users/techAPJ/events{/privacy}",
    "received_events_url": "https://api.github.com/users/techAPJ/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "06d318820a8413b147e0f793124c436ad434c7f3",
      "url": "https://api.github.com/repos/discourse/discourse/commits/06d318820a8413b147e0f793124c436ad434c7f3",
      "html_url": "https://github.com/discourse/discourse/commit/06d318820a8413b147e0f793124c436ad434c7f3"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 18,
    "deletions": 0
  },
  "files": [
    {
      "sha": "d0a3dd32eb19ea98c954f76ced228bc4f940dc2d",
      "filename": "spec/script/import_scripts/vanilla_body_parser_spec.rb",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/discourse/discourse/blob/869d25b7d38525a3e6209281b8f3548bb3afc3b9/spec/script/import_scripts/vanilla_body_parser_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/869d25b7d38525a3e6209281b8f3548bb3afc3b9/spec/script/import_scripts/vanilla_body_parser_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/script/import_scripts/vanilla_body_parser_spec.rb?ref=869d25b7d38525a3e6209281b8f3548bb3afc3b9",
      "patch": "@@ -37,6 +37,24 @@\n this starts with spaces but IS NOT a quote'''\n   end\n \n+  it 'replaces pre tags with code backticks' do\n+    complex_html = '<pre class=\"CodeBlock\">foobar</pre>'\n+    parsed = VanillaBodyParser.new({ 'Format' => 'Html', 'Body' => complex_html }, user_id).parse\n+    expect(parsed).to eq \"\\n```\\nfoobar\\n```\\n\"\n+  end\n+\n+  it 'strips code tags' do\n+    complex_html = '<code>foobar</code>'\n+    parsed = VanillaBodyParser.new({ 'Format' => 'Html', 'Body' => complex_html }, user_id).parse\n+    expect(parsed).to eq \"foobar\"\n+  end\n+\n+  it 'replaces div with quote class to bbcode quotes' do\n+    complex_html = '<div class=\"Quote\">foobar</div>'\n+    parsed = VanillaBodyParser.new({ 'Format' => 'Html', 'Body' => complex_html }, user_id).parse\n+    expect(parsed).to eq \"\\n\\n[quote]\\n\\nfoobar\\n\\n[/quote]\\n\\n\"\n+  end\n+\n   describe 'rich format' do\n     let(:rich_bodies) { JSON.parse(File.read('spec/fixtures/json/vanilla-rich-posts.json')).deep_symbolize_keys }\n "
    }
  ]
}
