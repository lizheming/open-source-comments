{
  "sha": "9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
  "node_id": "C_kwDOBtgov9oAKDljMWE4Mjc2ODVhODQ1MjBhYzM1ZWI2ZDRjYTIzNzVjYTFlOWE3NWU",
  "commit": {
    "author": {
      "name": "Dmitry Verkhoturov",
      "email": "paskal.07@gmail.com",
      "date": "2022-07-13T02:01:06Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2022-07-14T01:29:46Z"
    },
    "message": "update alecthomas/chroma and Depado/bfchroma to v2",
    "tree": {
      "sha": "bbfb47f84b99dd5de92193598fbda749daf7bf82",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/bbfb47f84b99dd5de92193598fbda749daf7bf82"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
  "html_url": "https://github.com/umputun/remark42/commit/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/comments",
  "author": {
    "login": "paskal",
    "id": 712534,
    "node_id": "MDQ6VXNlcjcxMjUzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/712534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paskal",
    "html_url": "https://github.com/paskal",
    "followers_url": "https://api.github.com/users/paskal/followers",
    "following_url": "https://api.github.com/users/paskal/following{/other_user}",
    "gists_url": "https://api.github.com/users/paskal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paskal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paskal/subscriptions",
    "organizations_url": "https://api.github.com/users/paskal/orgs",
    "repos_url": "https://api.github.com/users/paskal/repos",
    "events_url": "https://api.github.com/users/paskal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paskal/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "url": "https://api.github.com/repos/umputun/remark42/commits/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "html_url": "https://github.com/umputun/remark42/commit/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32"
    }
  ],
  "stats": {
    "total": 46993,
    "additions": 32361,
    "deletions": 14632
  },
  "files": [
    {
      "sha": "234d273b907f929b1702f1aa822a66b1262a516a",
      "filename": "backend/_example/memory_store/go.mod",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2F_example%2Fmemory_store%2Fgo.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2F_example%2Fmemory_store%2Fgo.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2F_example%2Fmemory_store%2Fgo.mod?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -7,13 +7,13 @@ require (\n \tgithub.com/go-pkgz/lgr v0.10.4\n \tgithub.com/jessevdk/go-flags v1.5.0\n \tgithub.com/stretchr/testify v1.8.0\n-\tgithub.com/umputun/remark42/backend v1.9.0\n+\tgithub.com/umputun/remark42/backend v1.10.1\n )\n \n require (\n-\tgithub.com/Depado/bfchroma v1.3.0 // indirect\n+\tgithub.com/Depado/bfchroma/v2 v2.0.0 // indirect\n \tgithub.com/PuerkitoBio/goquery v1.8.0 // indirect\n-\tgithub.com/alecthomas/chroma v0.10.0 // indirect\n+\tgithub.com/alecthomas/chroma/v2 v2.2.0 // indirect\n \tgithub.com/andybalholm/cascadia v1.3.1 // indirect\n \tgithub.com/aymerick/douceur v0.2.0 // indirect\n \tgithub.com/davecgh/go-spew v1.1.1 // indirect"
    },
    {
      "sha": "fe81234f98466b60b10e5f78fe17018b3abff3ea",
      "filename": "backend/_example/memory_store/go.sum",
      "status": "modified",
      "additions": 5,
      "deletions": 22,
      "changes": 27,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2F_example%2Fmemory_store%2Fgo.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2F_example%2Fmemory_store%2Fgo.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2F_example%2Fmemory_store%2Fgo.sum?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -1,20 +1,14 @@\n-github.com/Depado/bfchroma v1.3.0 h1:zz14vpvySU6S0CL6yGPr1vkFevQecIt8dJdCsMS2JpM=\n-github.com/Depado/bfchroma v1.3.0/go.mod h1:c0bFk0tFmT+clD3TIGurjWCfD/QV8/EebfM3JGr+98M=\n+github.com/Depado/bfchroma/v2 v2.0.0 h1:IRpN9BPkNwEpR6w1ectIcNWOuhDSLx+8f1pn83fzxx8=\n+github.com/Depado/bfchroma/v2 v2.0.0/go.mod h1:wFwW/Pw8Tnd0irzgO9Zxtxgzp3aPS8qBWlyadxujxmw=\n github.com/PuerkitoBio/goquery v1.8.0 h1:PJTF7AmFCFKk1N6V6jmKfrNH9tV5pNE6lZMkG0gta/U=\n github.com/PuerkitoBio/goquery v1.8.0/go.mod h1:ypIiRMtY7COPGk+I/YbZLbxsxn9g5ejnI2HSMtkjZvI=\n-github.com/alecthomas/assert v0.0.0-20170929043011-405dbfeb8e38/go.mod h1:r7bzyVFMNntcxPZXK3/+KdruV1H5KSlyVY0gc+NgInI=\n-github.com/alecthomas/chroma v0.7.3/go.mod h1:sko8vR34/90zvl5QdcUdvzL3J8NKjAUx9va9jPuFNoM=\n-github.com/alecthomas/chroma v0.10.0 h1:7XDcGkCQopCNKjZHfYrNLraA+M7e0fMiJ/Mfikbfjek=\n-github.com/alecthomas/chroma v0.10.0/go.mod h1:jtJATyUxlIORhUOFNA9NZDWGAQ8wpxQQqNSB4rjA/1s=\n-github.com/alecthomas/colour v0.0.0-20160524082231-60882d9e2721/go.mod h1:QO9JBoKquHd+jz9nshCh40fOfO+JzsoXy8qTHF68zU0=\n-github.com/alecthomas/kong v0.2.4/go.mod h1:kQOmtJgV+Lb4aj+I2LEn40cbtawdWJ9Y8QLq+lElKxE=\n-github.com/alecthomas/repr v0.0.0-20180818092828-117648cd9897/go.mod h1:xTS7Pm1pD1mvyM075QCDSRqH6qRLXylzS24ZTpRiSzQ=\n-github.com/alecthomas/repr v0.0.0-20200325044227-4184120f674c/go.mod h1:xTS7Pm1pD1mvyM075QCDSRqH6qRLXylzS24ZTpRiSzQ=\n+github.com/alecthomas/chroma/v2 v2.2.0 h1:Aten8jfQwUqEdadVFFjNyjx7HTexhKP0XuqBG67mRDY=\n+github.com/alecthomas/chroma/v2 v2.2.0/go.mod h1:vf4zrexSH54oEjJ7EdB65tGNHmH3pGZmVkgTP5RHvAs=\n+github.com/alecthomas/repr v0.0.0-20220113201626-b1b626ac65ae h1:zzGwJfFlFGD94CyyYwCJeSuD32Gj9GTaSi5y9hoVzdY=\n github.com/andybalholm/cascadia v1.3.1 h1:nhxRkql1kdYCc8Snf7D5/D3spOX+dBgjA6u8x004T2c=\n github.com/andybalholm/cascadia v1.3.1/go.mod h1:R4bJ1UQfqADjvDa4P6HZHLh/3OxWWEqc0Sk8XGwHqvA=\n github.com/aymerick/douceur v0.2.0 h1:Mv+mAeH1Q+n9Fr+oyamOlAkUNPWPlA8PPGR0QAaYuPk=\n github.com/aymerick/douceur v0.2.0/go.mod h1:wlT5vV2O3h55X9m7iVYN0TBM0NH/MmbLnd30/FjWUq4=\n-github.com/danwakefield/fnmatch v0.0.0-20160403171240-cbb64ac3d964/go.mod h1:Xd9hchkHSWYkEqJwUGisez3G1QY8Ryz0sdWrLPMGjLk=\n github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\n github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n@@ -24,7 +18,6 @@ github.com/didip/tollbooth/v6 v6.1.2/go.mod h1:xjcse6CTHCLuOkzsWrEgdy9WPJFv+p/x6\n github.com/didip/tollbooth_chi v0.0.0-20200524181329-8b84cd7183d9/go.mod h1:YWyIfq3y4ArRfWZ9XksmuusP+7Mad+T0iFZ0kv0XG/M=\n github.com/didip/tollbooth_chi v0.0.0-20220429013743-da966f2f674b h1:elkngQhLBcyDIXwL9Z7AfXXbBszUEsLxqNw6WPF8Mtc=\n github.com/didip/tollbooth_chi v0.0.0-20220429013743-da966f2f674b/go.mod h1:0ZVa6kSzS011nfTC1rELyxK4tjVf6vqBnOv7oY2KlsA=\n-github.com/dlclark/regexp2 v1.2.0/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\n github.com/dlclark/regexp2 v1.4.0 h1:F1rxgk7p4uKjwIQxBs9oAXe5CqrXlCduYEJvrF4u93E=\n github.com/dlclark/regexp2 v1.4.0/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\n github.com/go-chi/chi v4.1.1+incompatible h1:MmTgB0R8Bt/jccxp+t6S/1VGIKdJw5J74CK/c9tTfA4=\n@@ -55,26 +48,19 @@ github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORN\n github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\n github.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\n github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\n-github.com/mattn/go-colorable v0.1.6/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\n-github.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\n github.com/microcosm-cc/bluemonday v1.0.19 h1:OI7hoF5FY4pFz2VA//RN8TfM0YJ2dJcl4P4APrCWy6c=\n github.com/microcosm-cc/bluemonday v1.0.19/go.mod h1:QNzV2UbLK2/53oIIwTOyLUSABMkjZ4tqiyC1g/DyqxE=\n-github.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n github.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\n github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\n github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\n github.com/rs/xid v1.4.0 h1:qd7wPTDkN6KQx2VmMBLrpHkiyQwgFXRnkOLacUiaSNY=\n github.com/rs/xid v1.4.0/go.mod h1:trrq9SKmegXys3aeAKXMUTdJsYXVwGY3RLcfgqegfbg=\n-github.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\n github.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\n github.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\n-github.com/sergi/go-diff v1.0.0/go.mod h1:0CfEIISq7TuYL3j771MWULgwwjU+GofnZX9QAmXWZgo=\n-github.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=\n github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\n github.com/stretchr/objx v0.4.0 h1:M2gUjqZET1qApGOWNSnZ49BAIMX4F/1plDv3+l31EJ4=\n github.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\n-github.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\n github.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\n github.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\n github.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\n@@ -92,10 +78,7 @@ golang.org/x/net v0.0.0-20210916014120-12bc252f5db8/go.mod h1:9nx3DQGgdP8bBQD5qx\n golang.org/x/net v0.0.0-20220708220712-1185a9018129 h1:vucSRfWwTsoXro7P+3Cjlr6flUMtzCwzlvkxEQtHHB0=\n golang.org/x/net v0.0.0-20220708220712-1185a9018129/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\n golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n-golang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20200413165638-669c56c373c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200923182605-d9f96fdee20d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs="
    },
    {
      "sha": "f556efa54b6d9169ad0adff32470b61e8c8d7433",
      "filename": "backend/app/rest/api/rest_private_test.go",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fapp%2Frest%2Fapi%2Frest_private_test.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fapp%2Frest%2Fapi%2Frest_private_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fapp%2Frest%2Fapi%2Frest_private_test.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -54,6 +54,32 @@ func TestRest_Create(t *testing.T) {\n \tassert.True(t, len(c[\"id\"].(string)) > 8)\n }\n \n+// based on issue https://github.com/umputun/remark42/issues/1292\n+func TestRest_CreateFilteredCode(t *testing.T) {\n+\tt.Skip(\"not yet fixed\")\n+\tts, _, teardown := startupT(t)\n+\tdefer teardown()\n+\n+\tresp, err := post(t, ts.URL+\"/api/v1/comment\",\n+\t\t`{\"text\": \"`+\"`foo<bar>`\"+`\", \"locator\":{\"url\": \"https://radio-t.com/blah1\", \"site\": \"remark42\"}}`)\n+\tassert.NoError(t, err)\n+\tb, err := io.ReadAll(resp.Body)\n+\tassert.NoError(t, err)\n+\trequire.Equal(t, http.StatusCreated, resp.StatusCode, string(b))\n+\tassert.NoError(t, resp.Body.Close())\n+\n+\tc := R.JSON{}\n+\terr = json.Unmarshal(b, &c)\n+\tassert.NoError(t, err)\n+\tloc := c[\"locator\"].(map[string]interface{})\n+\tassert.Equal(t, \"remark42\", loc[\"site\"])\n+\tassert.Equal(t, \"https://radio-t.com/blah1\", loc[\"url\"])\n+\tassert.Equal(t, \"`foo<bar>`\", c[\"orig\"])\n+\tassert.Contains(t, c[\"text\"], \"foo\")\n+\tassert.Contains(t, c[\"text\"], \"bar\")\n+\tassert.True(t, len(c[\"id\"].(string)) > 8)\n+}\n+\n func TestRest_CreateOldPost(t *testing.T) {\n \tts, srv, teardown := startupT(t)\n \tdefer teardown()"
    },
    {
      "sha": "32358c146fc051cdad7381c575fce0df2fa973e9",
      "filename": "backend/app/rest/api/rest_public_test.go",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fapp%2Frest%2Fapi%2Frest_public_test.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fapp%2Frest%2Fapi%2Frest_public_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fapp%2Frest%2Fapi%2Frest_public_test.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -131,10 +131,10 @@ BKT\n \tassert.NoError(t, err)\n \tassert.Equal(t,\n \t\t`<h1>h1</h1>\n-<pre class=\"chroma\"><code><span><span>func TestRest_Preview(t *testing.T) {\n-</span></span><span><span>srv, ts := prep(t)\n-</span></span><span><span>  require.NotNil(t, srv)\n-</span></span><span><span>}\n+<pre class=\"chroma\"><code><span class=\"line\"><span class=\"cl\">func TestRest_Preview(t *testing.T) {\n+</span></span><span class=\"line\"><span class=\"cl\">srv, ts := prep(t)\n+</span></span><span class=\"line\"><span class=\"cl\">  require.NotNil(t, srv)\n+</span></span><span class=\"line\"><span class=\"cl\">}\n </span></span></code></pre>`,\n \t\tstring(b))\n \tassert.NoError(t, resp.Body.Close())\n@@ -157,7 +157,7 @@ BKT\n \tassert.Equal(t, http.StatusOK, resp.StatusCode)\n \tb, err := io.ReadAll(resp.Body)\n \tassert.NoError(t, err)\n-\tassert.Equal(t, `<pre class=\"chroma\"><code><span><span><span class=\"kd\">func</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"nx\">aa</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"kt\">int</span> <span class=\"p\">{</span><span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">}</span>\n+\tassert.Equal(t, `<pre class=\"chroma\"><code><span class=\"line\"><span class=\"cl\"><span class=\"kd\">func</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"nx\">aa</span> <span class=\"kt\">string</span><span class=\"p\">)</span> <span class=\"kt\">int</span> <span class=\"p\">{</span><span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">}</span>\n </span></span></code></pre>`, string(b))\n \tassert.NoError(t, resp.Body.Close())\n }"
    },
    {
      "sha": "a04f545b89c56fe34a794aead8a25b779af18d4b",
      "filename": "backend/app/store/comment.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fapp%2Fstore%2Fcomment.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fapp%2Fstore%2Fcomment.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fapp%2Fstore%2Fcomment.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -117,8 +117,8 @@ func (c *Comment) Sanitize() {\n \tp := bluemonday.UGCPolicy()\n \tp.AllowAttrs(\"class\").Matching(regexp.MustCompile(\"^chroma$\")).OnElements(\"pre\")\n \t// this is list of <span> tag classes which could be produced by chroma code renderer\n-\t// source: https://github.com/alecthomas/chroma/blob/022b6f4fc2c4aa819aac18363c8de3f70619200b/types.go#L221-L316\n-\tconst codeSpanClassRegex = \"^(chroma|ln|lnt|hl|lntable|lntd|w|err|x|esc|k|kc\" +\n+\t// source: https://github.com/alecthomas/chroma/blob/cc2dd5b/types.go#L211-L307\n+\tconst codeSpanClassRegex = \"^(bg|chroma|line|ln|lnt|hl|lntable|lntd|cl|w|err|x|k|kc\" +\n \t\t\"|kd|kn|kp|kr|kt|n|na|nb|bp|nc|no|nd|ni|ne|nf|fm|py|nl|nn|nx|nt|nv|vc|vg\" +\n \t\t\"|vi|vm|l|ld|s|sa|sb|sc|dl|sd|s2|se|sh|si|sx|sr|s1|ss|m|mb|mf|mh|mi|il\" +\n \t\t\"|mo|o|ow|p|c|ch|cm|cp|cpf|c1|cs|g|gd|ge|gr|gh|gi|go|gp|gs|gu|gt|gl)$\""
    },
    {
      "sha": "3eb3f638c1c5032dece51c27cb6c39bf384d3112",
      "filename": "backend/app/store/formatter.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fapp%2Fstore%2Fformatter.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fapp%2Fstore%2Fformatter.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fapp%2Fstore%2Fformatter.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -4,9 +4,9 @@ import (\n \t\"net/url\"\n \t\"strings\"\n \n-\t\"github.com/Depado/bfchroma\"\n+\tbfchroma \"github.com/Depado/bfchroma/v2\"\n \t\"github.com/PuerkitoBio/goquery\"\n-\t\"github.com/alecthomas/chroma/formatters/html\"\n+\t\"github.com/alecthomas/chroma/v2/formatters/html\"\n \tbf \"github.com/russross/blackfriday/v2\"\n )\n "
    },
    {
      "sha": "872a06f4b64ca328c8b76cf6e3edff57ca94252a",
      "filename": "backend/go.mod",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fgo.mod",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fgo.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fgo.mod?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -3,9 +3,9 @@ module github.com/umputun/remark42/backend\n go 1.17\n \n require (\n-\tgithub.com/Depado/bfchroma v1.3.0\n+\tgithub.com/Depado/bfchroma/v2 v2.0.0\n \tgithub.com/PuerkitoBio/goquery v1.8.0\n-\tgithub.com/alecthomas/chroma v0.10.0\n+\tgithub.com/alecthomas/chroma/v2 v2.2.0\n \tgithub.com/didip/tollbooth/v6 v6.1.2\n \tgithub.com/didip/tollbooth_chi v0.0.0-20220429013743-da966f2f674b\n \tgithub.com/go-chi/chi/v5 v5.0.7"
    },
    {
      "sha": "870869997c30e5de705c8fa5972d2a4a67e703a4",
      "filename": "backend/go.sum",
      "status": "modified",
      "additions": 6,
      "deletions": 18,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fgo.sum",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fgo.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fgo.sum?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -54,21 +54,17 @@ cloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9\n dmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\n github.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\n github.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\n-github.com/Depado/bfchroma v1.3.0 h1:zz14vpvySU6S0CL6yGPr1vkFevQecIt8dJdCsMS2JpM=\n-github.com/Depado/bfchroma v1.3.0/go.mod h1:c0bFk0tFmT+clD3TIGurjWCfD/QV8/EebfM3JGr+98M=\n+github.com/Depado/bfchroma/v2 v2.0.0 h1:IRpN9BPkNwEpR6w1ectIcNWOuhDSLx+8f1pn83fzxx8=\n+github.com/Depado/bfchroma/v2 v2.0.0/go.mod h1:wFwW/Pw8Tnd0irzgO9Zxtxgzp3aPS8qBWlyadxujxmw=\n github.com/OneOfOne/xxhash v1.2.2/go.mod h1:HSdplMjZKSmBqAxg5vPj2TmRDmfkzw+cTzAElWljhcU=\n github.com/PuerkitoBio/goquery v1.8.0 h1:PJTF7AmFCFKk1N6V6jmKfrNH9tV5pNE6lZMkG0gta/U=\n github.com/PuerkitoBio/goquery v1.8.0/go.mod h1:ypIiRMtY7COPGk+I/YbZLbxsxn9g5ejnI2HSMtkjZvI=\n github.com/ajg/form v1.5.1 h1:t9c7v8JUKu/XxOGBU0yjNpaMloxGEJhUkqFRq0ibGeU=\n github.com/ajg/form v1.5.1/go.mod h1:uL1WgH+h2mgNtvBq0339dVnzXdBETtL2LeUXaIv25UY=\n-github.com/alecthomas/assert v0.0.0-20170929043011-405dbfeb8e38/go.mod h1:r7bzyVFMNntcxPZXK3/+KdruV1H5KSlyVY0gc+NgInI=\n-github.com/alecthomas/chroma v0.7.3/go.mod h1:sko8vR34/90zvl5QdcUdvzL3J8NKjAUx9va9jPuFNoM=\n-github.com/alecthomas/chroma v0.10.0 h1:7XDcGkCQopCNKjZHfYrNLraA+M7e0fMiJ/Mfikbfjek=\n-github.com/alecthomas/chroma v0.10.0/go.mod h1:jtJATyUxlIORhUOFNA9NZDWGAQ8wpxQQqNSB4rjA/1s=\n-github.com/alecthomas/colour v0.0.0-20160524082231-60882d9e2721/go.mod h1:QO9JBoKquHd+jz9nshCh40fOfO+JzsoXy8qTHF68zU0=\n-github.com/alecthomas/kong v0.2.4/go.mod h1:kQOmtJgV+Lb4aj+I2LEn40cbtawdWJ9Y8QLq+lElKxE=\n-github.com/alecthomas/repr v0.0.0-20180818092828-117648cd9897/go.mod h1:xTS7Pm1pD1mvyM075QCDSRqH6qRLXylzS24ZTpRiSzQ=\n-github.com/alecthomas/repr v0.0.0-20200325044227-4184120f674c/go.mod h1:xTS7Pm1pD1mvyM075QCDSRqH6qRLXylzS24ZTpRiSzQ=\n+github.com/alecthomas/chroma/v2 v2.2.0 h1:Aten8jfQwUqEdadVFFjNyjx7HTexhKP0XuqBG67mRDY=\n+github.com/alecthomas/chroma/v2 v2.2.0/go.mod h1:vf4zrexSH54oEjJ7EdB65tGNHmH3pGZmVkgTP5RHvAs=\n+github.com/alecthomas/repr v0.0.0-20220113201626-b1b626ac65ae h1:zzGwJfFlFGD94CyyYwCJeSuD32Gj9GTaSi5y9hoVzdY=\n+github.com/alecthomas/repr v0.0.0-20220113201626-b1b626ac65ae/go.mod h1:2kn6fqh/zIyPLmm3ugklbEi5hg5wS435eygvNfaDQL8=\n github.com/alicebob/gopher-json v0.0.0-20180125190556-5a6b3ba71ee6 h1:45bxf7AZMwWcqkLzDAQugVEwedisr5nRJ1r+7LYnv0U=\n github.com/alicebob/gopher-json v0.0.0-20180125190556-5a6b3ba71ee6/go.mod h1:SGnFV6hVsYE877CKEZ6tDNTjaSXYUk6QqoIK6PrAtcc=\n github.com/alicebob/miniredis/v2 v2.11.4 h1:GsuyeunTx7EllZBU3/6Ji3dhMQZDpC9rLf1luJ+6M5M=\n@@ -95,7 +91,6 @@ github.com/cncf/xds/go v0.0.0-20210312221358-fbca930ec8ed/go.mod h1:eXthEFrGJvWH\n github.com/cncf/xds/go v0.0.0-20210805033703-aa0b78936158/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\n github.com/cncf/xds/go v0.0.0-20210922020428-25de7278fc84/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\n github.com/cncf/xds/go v0.0.0-20211011173535-cb28da3451f1/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\n-github.com/danwakefield/fnmatch v0.0.0-20160403171240-cbb64ac3d964/go.mod h1:Xd9hchkHSWYkEqJwUGisez3G1QY8Ryz0sdWrLPMGjLk=\n github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\n github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n@@ -107,7 +102,6 @@ github.com/didip/tollbooth/v6 v6.1.2/go.mod h1:xjcse6CTHCLuOkzsWrEgdy9WPJFv+p/x6\n github.com/didip/tollbooth_chi v0.0.0-20200524181329-8b84cd7183d9/go.mod h1:YWyIfq3y4ArRfWZ9XksmuusP+7Mad+T0iFZ0kv0XG/M=\n github.com/didip/tollbooth_chi v0.0.0-20220429013743-da966f2f674b h1:elkngQhLBcyDIXwL9Z7AfXXbBszUEsLxqNw6WPF8Mtc=\n github.com/didip/tollbooth_chi v0.0.0-20220429013743-da966f2f674b/go.mod h1:0ZVa6kSzS011nfTC1rELyxK4tjVf6vqBnOv7oY2KlsA=\n-github.com/dlclark/regexp2 v1.2.0/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\n github.com/dlclark/regexp2 v1.4.0 h1:F1rxgk7p4uKjwIQxBs9oAXe5CqrXlCduYEJvrF4u93E=\n github.com/dlclark/regexp2 v1.4.0/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\n github.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\n@@ -302,7 +296,6 @@ github.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\n github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\n github.com/kyokomi/emoji/v2 v2.2.9 h1:UWYkjplPZ4rMPvLxc+/e12/xTqoRcn55oUySkpZ554g=\n github.com/kyokomi/emoji/v2 v2.2.9/go.mod h1:JUcn42DTdsXJo1SWanHh4HKDEyPaR5CqkmoirZZP9qE=\n-github.com/mattn/go-colorable v0.1.6/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\n github.com/mattn/go-colorable v0.1.7/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\n github.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\n github.com/microcosm-cc/bluemonday v1.0.18/go.mod h1:Z0r70sCuXHig8YpBzCc5eGHAap2K7e/u082ZUpDRRqM=\n@@ -324,7 +317,6 @@ github.com/onsi/gomega v1.7.0/go.mod h1:ex+gbHU/CVuBBDIJjb2X0qEXbFg53c61hWP/1Cpa\n github.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=\n github.com/onsi/gomega v1.10.1 h1:o0+MgICZLuZ7xjH7Vx6zS/zcu93/BEp1VwkIW1mEXCE=\n github.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=\n-github.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n github.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\n github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\n@@ -336,14 +328,11 @@ github.com/rogpeppe/fastuuid v1.2.0/go.mod h1:jVj6XXZzXRy/MSR5jhDC/2q6DgLz+nrA6L\n github.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\n github.com/rs/xid v1.4.0 h1:qd7wPTDkN6KQx2VmMBLrpHkiyQwgFXRnkOLacUiaSNY=\n github.com/rs/xid v1.4.0/go.mod h1:trrq9SKmegXys3aeAKXMUTdJsYXVwGY3RLcfgqegfbg=\n-github.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\n github.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\n github.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\n github.com/sclevine/agouti v3.0.0+incompatible/go.mod h1:b4WX9W9L1sfQKXeJf1mUTLZKJ48R1S7H23Ji7oFO5Bw=\n-github.com/sergi/go-diff v1.0.0/go.mod h1:0CfEIISq7TuYL3j771MWULgwwjU+GofnZX9QAmXWZgo=\n github.com/sergi/go-diff v1.1.0 h1:we8PVUC3FE2uYfodKH/nBHMSetSfHDR6scGdBi+erh0=\n github.com/sergi/go-diff v1.1.0/go.mod h1:STckp+ISIX8hZLjrqAeVduY0gWCT9IjLuqbuNXdaHfM=\n-github.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=\n github.com/skip2/go-qrcode v0.0.0-20200617195104-da1b6568686e h1:MRM5ITcdelLK2j1vwZ3Je0FKVCfqOLp5zO6trqMLYs0=\n github.com/skip2/go-qrcode v0.0.0-20200617195104-da1b6568686e/go.mod h1:XV66xRDqSt+GTGFMVlhk3ULuV0y9ZmzeVGR4mloJI3M=\n github.com/slack-go/slack v0.10.3 h1:kKYwlKY73AfSrtAk9UHWCXXfitudkDztNI9GYBviLxw=\n@@ -591,7 +580,6 @@ golang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7w\n golang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n-golang.org/x/sys v0.0.0-20200413165638-669c56c373c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs="
    },
    {
      "sha": "d70bd6552b19e0192361e61b2322024ad8d456b4",
      "filename": "backend/vendor/github.com/Depado/bfchroma/.golangci.yml",
      "status": "removed",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2FDepado%2Fbfchroma%2F.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2FDepado%2Fbfchroma%2F.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2FDepado%2Fbfchroma%2F.golangci.yml?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,16 +0,0 @@\n-run:\n-  timeout: 5m\n-\n-linters:\n-  enable:\n-    - megacheck\n-    - govet\n-  disable:\n-    - errcheck\n-    - maligned\n-    - prealloc\n-  disable-all: false\n-  presets:\n-    - bugs\n-    - unused\n-  fast: false"
    },
    {
      "sha": "9fceead3d700a8dd164b5a7686107a8e0cc1a48c",
      "filename": "backend/vendor/github.com/Depado/bfchroma/v2/.drone.yml",
      "status": "renamed",
      "additions": 10,
      "deletions": 9,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2FDepado%2Fbfchroma%2Fv2%2F.drone.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2FDepado%2Fbfchroma%2Fv2%2F.drone.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2FDepado%2Fbfchroma%2Fv2%2F.drone.yml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -5,21 +5,22 @@ type: docker\n \n steps:\n - name: test\n-  image: golang:1.13.1\n+  image: golang:latest\n   volumes:\n   - name: deps\n     path: /go\n   commands:\n   - go test -race -coverprofile=coverage.txt -covermode=atomic\n \n - name: linter\n-  image: golang:1.13.1\n+  image: golang:latest\n   volumes:\n-  - name: deps\n-    path: /go\n+    - name: deps\n+      path: /go\n   commands:\n-    - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.20.0\n-    - ./bin/golangci-lint run\n+    - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s\n+    - ./bin/golangci-lint run --timeout 5m\n+    - rm -r ./bin/\n \n - name: coverage\n   image: plugins/codecov\n@@ -37,8 +38,8 @@ steps:\n     token:\n       from_secret: telegram_token\n     message: >\n-      *{{repo.name}}*  \n-      [Build {{build.number}}]({{build.link}}) by {{commit.author}} {{#success build.status}}succeeded{{else}}failed{{/success}} in {{buildtime build.started}}  \n+      *{{repo.name}}*\n+      [Build {{build.number}}]({{build.link}}) by {{commit.author}} {{#success build.status}}succeeded{{else}}failed{{/success}} in {{buildtime build.started}}\n       `{{truncate commit.sha 8}}`: \"{{commit.message}}\"\n   when:\n     status:\n@@ -48,4 +49,4 @@ steps:\n volumes:\n - name: deps\n   host:\n-    path: /var/lib/cache/godeps/\n\\ No newline at end of file\n+    path: /var/lib/cache/godeps/",
      "previous_filename": "backend/vendor/github.com/Depado/bfchroma/.drone.yml"
    },
    {
      "sha": "ca5c23e176a383d255797b5c6ba6f2312fb14aa2",
      "filename": "backend/vendor/github.com/Depado/bfchroma/v2/.gitignore",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2FDepado%2Fbfchroma%2Fv2%2F.gitignore",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2FDepado%2Fbfchroma%2Fv2%2F.gitignore",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2FDepado%2Fbfchroma%2Fv2%2F.gitignore?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "previous_filename": "backend/vendor/github.com/Depado/bfchroma/.gitignore"
    },
    {
      "sha": "8864d4a39633c1bcb33a8983d146d0b6390ed3d0",
      "filename": "backend/vendor/github.com/Depado/bfchroma/v2/LICENSE",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2FDepado%2Fbfchroma%2Fv2%2FLICENSE",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2FDepado%2Fbfchroma%2Fv2%2FLICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2FDepado%2Fbfchroma%2Fv2%2FLICENSE?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "previous_filename": "backend/vendor/github.com/Depado/bfchroma/LICENSE"
    },
    {
      "sha": "04257047bf2b2f49384696c5b8e4acfdf2cea052",
      "filename": "backend/vendor/github.com/Depado/bfchroma/v2/README.md",
      "status": "renamed",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2FDepado%2Fbfchroma%2Fv2%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2FDepado%2Fbfchroma%2Fv2%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2FDepado%2Fbfchroma%2Fv2%2FREADME.md?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -2,9 +2,8 @@\n \n [![forthebadge](https://forthebadge.com/images/badges/made-with-go.svg)](https://forthebadge.com)[![forthebadge](https://forthebadge.com/images/badges/built-with-love.svg)](https://forthebadge.com)\n \n-![Go Version](https://img.shields.io/badge/go-1.13-brightgreen.svg)\n [![Go Report Card](https://goreportcard.com/badge/github.com/Depado/bfchroma)](https://goreportcard.com/report/github.com/Depado/bfchroma)\n-[![Build Status](https://drone.depado.eu/api/badges/Depado/bfchroma/status.svg)](https://drone.depado.eu/Depado/bfchroma)\n+[![Build Status](https://drone.depa.do/api/badges/Depado/bfchroma/status.svg)](https://drone.depa.do/Depado/bfchroma)\n [![codecov](https://codecov.io/gh/Depado/bfchroma/branch/master/graph/badge.svg)](https://codecov.io/gh/Depado/bfchroma)\n [![License](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/Depado/bfchroma/blob/master/LICENSE)\n [![Godoc](https://godoc.org/github.com/Depado/bfchroma?status.svg)](https://godoc.org/github.com/Depado/bfchroma)\n@@ -21,11 +20,9 @@ This project requires and uses the `v2` version of\n [Blackfriday](https://github.com/russross/blackfriday/tree/v2).\n \n ```\n-$ go get -u github.com/Depado/bfchroma\n+$ go get github.com/Depado/bfchroma\n ```\n \n-_This project uses the module approach of go 1.11_ \n-\n ## Features\n \n This renderer integrates chroma to highlight code with triple backtick notation.",
      "previous_filename": "backend/vendor/github.com/Depado/bfchroma/README.md"
    },
    {
      "sha": "a87e75a36e724028f34ac6d03e96e010d305080c",
      "filename": "backend/vendor/github.com/Depado/bfchroma/v2/renderer.go",
      "status": "renamed",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2FDepado%2Fbfchroma%2Fv2%2Frenderer.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2FDepado%2Fbfchroma%2Fv2%2Frenderer.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2FDepado%2Fbfchroma%2Fv2%2Frenderer.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -5,10 +5,10 @@ package bfchroma\n import (\n \t\"io\"\n \n-\t\"github.com/alecthomas/chroma\"\n-\t\"github.com/alecthomas/chroma/formatters/html\"\n-\t\"github.com/alecthomas/chroma/lexers\"\n-\t\"github.com/alecthomas/chroma/styles\"\n+\t\"github.com/alecthomas/chroma/v2\"\n+\t\"github.com/alecthomas/chroma/v2/formatters/html\"\n+\t\"github.com/alecthomas/chroma/v2/lexers\"\n+\t\"github.com/alecthomas/chroma/v2/styles\"\n \tbf \"github.com/russross/blackfriday/v2\"\n )\n \n@@ -108,17 +108,17 @@ type Renderer struct {\n \tChromaOptions []html.Option\n \tStyle         *chroma.Style\n \tFormatter     *html.Formatter\n-\tembedCSS bool\n+\tembedCSS      bool\n }\n \n // RenderNode satisfies the Renderer interface\n func (r *Renderer) RenderNode(w io.Writer, node *bf.Node, entering bool) bf.WalkStatus {\n \tswitch node.Type {\n \tcase bf.Document:\n \t\tif entering && r.embedCSS {\n-\t\t\tw.Write([]byte(\"<style>\"))\n-\t\t\tr.Formatter.WriteCSS(w, r.Style)\n-\t\t\tw.Write([]byte(\"</style>\"))\n+\t\t\tw.Write([]byte(\"<style>\"))       // nolint: errcheck\n+\t\t\tr.Formatter.WriteCSS(w, r.Style) // nolint: errcheck\n+\t\t\tw.Write([]byte(\"</style>\"))      // nolint: errcheck\n \t\t}\n \t\treturn r.Base.RenderNode(w, node, entering)\n \tcase bf.CodeBlock:\n@@ -144,4 +144,4 @@ func (r *Renderer) RenderFooter(w io.Writer, ast *bf.Node) {\n // ChromaCSS returns CSS used with chroma's html.WithClasses() option\n func (r *Renderer) ChromaCSS(w io.Writer) error {\n \treturn r.Formatter.WriteCSS(w, r.Style)\n-}\n\\ No newline at end of file\n+}",
      "previous_filename": "backend/vendor/github.com/Depado/bfchroma/renderer.go"
    },
    {
      "sha": "268aa6a5927b23a915ca3925a9e9dc55d12bcd5b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/abap.go",
      "status": "removed",
      "additions": 0,
      "deletions": 60,
      "changes": 60,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fabap.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fabap.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fabap.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,60 +0,0 @@\n-package a\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// ABAP lexer.\n-var Abap = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"ABAP\",\n-\t\tAliases:         []string{\"abap\"},\n-\t\tFilenames:       []string{\"*.abap\", \"*.ABAP\"},\n-\t\tMimeTypes:       []string{\"text/x-abap\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tabapRules,\n-))\n-\n-func abapRules() Rules {\n-\treturn Rules{\n-\t\t\"common\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`^\\*.*$`, CommentSingle, nil},\n-\t\t\t{`\\\".*?\\n`, CommentSingle, nil},\n-\t\t\t{`##\\w+`, CommentSpecial, nil},\n-\t\t},\n-\t\t\"variable-names\": {\n-\t\t\t{`<\\S+>`, NameVariable, nil},\n-\t\t\t{`\\w[\\w~]*(?:(\\[\\])|->\\*)?`, NameVariable, nil},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\tInclude(\"common\"),\n-\t\t\t{`CALL\\s+(?:BADI|CUSTOMER-FUNCTION|FUNCTION)`, Keyword, nil},\n-\t\t\t{`(CALL\\s+(?:DIALOG|SCREEN|SUBSCREEN|SELECTION-SCREEN|TRANSACTION|TRANSFORMATION))\\b`, Keyword, nil},\n-\t\t\t{`(FORM|PERFORM)(\\s+)(\\w+)`, ByGroups(Keyword, Text, NameFunction), nil},\n-\t\t\t{`(PERFORM)(\\s+)(\\()(\\w+)(\\))`, ByGroups(Keyword, Text, Punctuation, NameVariable, Punctuation), nil},\n-\t\t\t{`(MODULE)(\\s+)(\\S+)(\\s+)(INPUT|OUTPUT)`, ByGroups(Keyword, Text, NameFunction, Text, Keyword), nil},\n-\t\t\t{`(METHOD)(\\s+)([\\w~]+)`, ByGroups(Keyword, Text, NameFunction), nil},\n-\t\t\t{`(\\s+)([\\w\\-]+)([=\\-]>)([\\w\\-~]+)`, ByGroups(Text, NameVariable, Operator, NameFunction), nil},\n-\t\t\t{`(?<=(=|-)>)([\\w\\-~]+)(?=\\()`, NameFunction, nil},\n-\t\t\t{`(TEXT)(-)(\\d{3})`, ByGroups(Keyword, Punctuation, LiteralNumberInteger), nil},\n-\t\t\t{`(TEXT)(-)(\\w{3})`, ByGroups(Keyword, Punctuation, NameVariable), nil},\n-\t\t\t{`(ADD-CORRESPONDING|AUTHORITY-CHECK|CLASS-DATA|CLASS-EVENTS|CLASS-METHODS|CLASS-POOL|DELETE-ADJACENT|DIVIDE-CORRESPONDING|EDITOR-CALL|ENHANCEMENT-POINT|ENHANCEMENT-SECTION|EXIT-COMMAND|FIELD-GROUPS|FIELD-SYMBOLS|FUNCTION-POOL|INTERFACE-POOL|INVERTED-DATE|LOAD-OF-PROGRAM|LOG-POINT|MESSAGE-ID|MOVE-CORRESPONDING|MULTIPLY-CORRESPONDING|NEW-LINE|NEW-PAGE|NEW-SECTION|NO-EXTENSION|OUTPUT-LENGTH|PRINT-CONTROL|SELECT-OPTIONS|START-OF-SELECTION|SUBTRACT-CORRESPONDING|SYNTAX-CHECK|SYSTEM-EXCEPTIONS|TYPE-POOL|TYPE-POOLS|NO-DISPLAY)\\b`, Keyword, nil},\n-\t\t\t{`(?<![-\\>])(CREATE\\s+(PUBLIC|PRIVATE|DATA|OBJECT)|(PUBLIC|PRIVATE|PROTECTED)\\s+SECTION|(TYPE|LIKE)\\s+((LINE\\s+OF|REF\\s+TO|(SORTED|STANDARD|HASHED)\\s+TABLE\\s+OF))?|FROM\\s+(DATABASE|MEMORY)|CALL\\s+METHOD|(GROUP|ORDER) BY|HAVING|SEPARATED BY|GET\\s+(BADI|BIT|CURSOR|DATASET|LOCALE|PARAMETER|PF-STATUS|(PROPERTY|REFERENCE)\\s+OF|RUN\\s+TIME|TIME\\s+(STAMP)?)?|SET\\s+(BIT|BLANK\\s+LINES|COUNTRY|CURSOR|DATASET|EXTENDED\\s+CHECK|HANDLER|HOLD\\s+DATA|LANGUAGE|LEFT\\s+SCROLL-BOUNDARY|LOCALE|MARGIN|PARAMETER|PF-STATUS|PROPERTY\\s+OF|RUN\\s+TIME\\s+(ANALYZER|CLOCK\\s+RESOLUTION)|SCREEN|TITLEBAR|UPADTE\\s+TASK\\s+LOCAL|USER-COMMAND)|CONVERT\\s+((INVERTED-)?DATE|TIME|TIME\\s+STAMP|TEXT)|(CLOSE|OPEN)\\s+(DATASET|CURSOR)|(TO|FROM)\\s+(DATA BUFFER|INTERNAL TABLE|MEMORY ID|DATABASE|SHARED\\s+(MEMORY|BUFFER))|DESCRIBE\\s+(DISTANCE\\s+BETWEEN|FIELD|LIST|TABLE)|FREE\\s(MEMORY|OBJECT)?|PROCESS\\s+(BEFORE\\s+OUTPUT|AFTER\\s+INPUT|ON\\s+(VALUE-REQUEST|HELP-REQUEST))|AT\\s+(LINE-SELECTION|USER-COMMAND|END\\s+OF|NEW)|AT\\s+SELECTION-SCREEN(\\s+(ON(\\s+(BLOCK|(HELP|VALUE)-REQUEST\\s+FOR|END\\s+OF|RADIOBUTTON\\s+GROUP))?|OUTPUT))?|SELECTION-SCREEN:?\\s+((BEGIN|END)\\s+OF\\s+((TABBED\\s+)?BLOCK|LINE|SCREEN)|COMMENT|FUNCTION\\s+KEY|INCLUDE\\s+BLOCKS|POSITION|PUSHBUTTON|SKIP|ULINE)|LEAVE\\s+(LIST-PROCESSING|PROGRAM|SCREEN|TO LIST-PROCESSING|TO TRANSACTION)(ENDING|STARTING)\\s+AT|FORMAT\\s+(COLOR|INTENSIFIED|INVERSE|HOTSPOT|INPUT|FRAMES|RESET)|AS\\s+(CHECKBOX|SUBSCREEN|WINDOW)|WITH\\s+(((NON-)?UNIQUE)?\\s+KEY|FRAME)|(BEGIN|END)\\s+OF|DELETE(\\s+ADJACENT\\s+DUPLICATES\\sFROM)?|COMPARING(\\s+ALL\\s+FIELDS)?|(INSERT|APPEND)(\\s+INITIAL\\s+LINE\\s+(IN)?TO|\\s+LINES\\s+OF)?|IN\\s+((BYTE|CHARACTER)\\s+MODE|PROGRAM)|END-OF-(DEFINITION|PAGE|SELECTION)|WITH\\s+FRAME(\\s+TITLE)|(REPLACE|FIND)\\s+((FIRST|ALL)\\s+OCCURRENCES?\\s+OF\\s+)?(SUBSTRING|REGEX)?|MATCH\\s+(LENGTH|COUNT|LINE|OFFSET)|(RESPECTING|IGNORING)\\s+CASE|IN\\s+UPDATE\\s+TASK|(SOURCE|RESULT)\\s+(XML)?|REFERENCE\\s+INTO|AND\\s+(MARK|RETURN)|CLIENT\\s+SPECIFIED|CORRESPONDING\\s+FIELDS\\s+OF|IF\\s+FOUND|FOR\\s+EVENT|INHERITING\\s+FROM|LEAVE\\s+TO\\s+SCREEN|LOOP\\s+AT\\s+(SCREEN)?|LOWER\\s+CASE|MATCHCODE\\s+OBJECT|MODIF\\s+ID|MODIFY\\s+SCREEN|NESTING\\s+LEVEL|NO\\s+INTERVALS|OF\\s+STRUCTURE|RADIOBUTTON\\s+GROUP|RANGE\\s+OF|REF\\s+TO|SUPPRESS DIALOG|TABLE\\s+OF|UPPER\\s+CASE|TRANSPORTING\\s+NO\\s+FIELDS|VALUE\\s+CHECK|VISIBLE\\s+LENGTH|HEADER\\s+LINE|COMMON\\s+PART)\\b`, Keyword, nil},\n-\t\t\t{`(^|(?<=(\\s|\\.)))(ABBREVIATED|ABSTRACT|ADD|ALIASES|ALIGN|ALPHA|ASSERT|AS|ASSIGN(ING)?|AT(\\s+FIRST)?|BACK|BLOCK|BREAK-POINT|CASE|CATCH|CHANGING|CHECK|CLASS|CLEAR|COLLECT|COLOR|COMMIT|CREATE|COMMUNICATION|COMPONENTS?|COMPUTE|CONCATENATE|CONDENSE|CONSTANTS|CONTEXTS|CONTINUE|CONTROLS|COUNTRY|CURRENCY|DATA|DATE|DECIMALS|DEFAULT|DEFINE|DEFINITION|DEFERRED|DEMAND|DETAIL|DIRECTORY|DIVIDE|DO|DUMMY|ELSE(IF)?|ENDAT|ENDCASE|ENDCATCH|ENDCLASS|ENDDO|ENDFORM|ENDFUNCTION|ENDIF|ENDINTERFACE|ENDLOOP|ENDMETHOD|ENDMODULE|ENDSELECT|ENDTRY|ENDWHILE|ENHANCEMENT|EVENTS|EXACT|EXCEPTIONS?|EXIT|EXPONENT|EXPORT|EXPORTING|EXTRACT|FETCH|FIELDS?|FOR|FORM|FORMAT|FREE|FROM|FUNCTION|HIDE|ID|IF|IMPORT|IMPLEMENTATION|IMPORTING|IN|INCLUDE|INCLUDING|INDEX|INFOTYPES|INITIALIZATION|INTERFACE|INTERFACES|INTO|LANGUAGE|LEAVE|LENGTH|LINES|LOAD|LOCAL|JOIN|KEY|NEXT|MAXIMUM|MESSAGE|METHOD[S]?|MINIMUM|MODULE|MODIFIER|MODIFY|MOVE|MULTIPLY|NODES|NUMBER|OBLIGATORY|OBJECT|OF|OFF|ON|OTHERS|OVERLAY|PACK|PAD|PARAMETERS|PERCENTAGE|POSITION|PROGRAM|PROVIDE|PUBLIC|PUT|PF\\d\\d|RAISE|RAISING|RANGES?|READ|RECEIVE|REDEFINITION|REFRESH|REJECT|REPORT|RESERVE|RESUME|RETRY|RETURN|RETURNING|RIGHT|ROLLBACK|REPLACE|SCROLL|SEARCH|SELECT|SHIFT|SIGN|SINGLE|SIZE|SKIP|SORT|SPLIT|STATICS|STOP|STYLE|SUBMATCHES|SUBMIT|SUBTRACT|SUM(?!\\()|SUMMARY|SUMMING|SUPPLY|TABLE|TABLES|TIMESTAMP|TIMES?|TIMEZONE|TITLE|\\??TO|TOP-OF-PAGE|TRANSFER|TRANSLATE|TRY|TYPES|ULINE|UNDER|UNPACK|UPDATE|USING|VALUE|VALUES|VIA|VARYING|VARY|WAIT|WHEN|WHERE|WIDTH|WHILE|WITH|WINDOW|WRITE|XSD|ZERO)\\b`, Keyword, nil},\n-\t\t\t{`(abs|acos|asin|atan|boolc|boolx|bit_set|char_off|charlen|ceil|cmax|cmin|condense|contains|contains_any_of|contains_any_not_of|concat_lines_of|cos|cosh|count|count_any_of|count_any_not_of|dbmaxlen|distance|escape|exp|find|find_end|find_any_of|find_any_not_of|floor|frac|from_mixed|insert|lines|log|log10|match|matches|nmax|nmin|numofchar|repeat|replace|rescale|reverse|round|segment|shift_left|shift_right|sign|sin|sinh|sqrt|strlen|substring|substring_after|substring_from|substring_before|substring_to|tan|tanh|to_upper|to_lower|to_mixed|translate|trunc|xstrlen)(\\()\\b`, ByGroups(NameBuiltin, Punctuation), nil},\n-\t\t\t{`&[0-9]`, Name, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`(?<=(\\s|.))(AND|OR|EQ|NE|GT|LT|GE|LE|CO|CN|CA|NA|CS|NOT|NS|CP|NP|BYTE-CO|BYTE-CN|BYTE-CA|BYTE-NA|BYTE-CS|BYTE-NS|IS\\s+(NOT\\s+)?(INITIAL|ASSIGNED|REQUESTED|BOUND))\\b`, OperatorWord, nil},\n-\t\t\tInclude(\"variable-names\"),\n-\t\t\t{`[?*<>=\\-+&]`, Operator, nil},\n-\t\t\t{`'(''|[^'])*'`, LiteralStringSingle, nil},\n-\t\t\t{\"`([^`])*`\", LiteralStringSingle, nil},\n-\t\t\t{`([|}])([^{}|]*?)([|{])`, ByGroups(Punctuation, LiteralStringSingle, Punctuation), nil},\n-\t\t\t{`[/;:()\\[\\],.]`, Punctuation, nil},\n-\t\t\t{`(!)(\\w+)`, ByGroups(Operator, Name), nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "85c47afce291f96dca6aa51ad1ec42ee20f0314e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/abnf.go",
      "status": "removed",
      "additions": 0,
      "deletions": 42,
      "changes": 42,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fabnf.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fabnf.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fabnf.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,42 +0,0 @@\n-package a\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Abnf lexer.\n-var Abnf = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"ABNF\",\n-\t\tAliases:   []string{\"abnf\"},\n-\t\tFilenames: []string{\"*.abnf\"},\n-\t\tMimeTypes: []string{\"text/x-abnf\"},\n-\t},\n-\tabnfRules,\n-))\n-\n-func abnfRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`;.*$`, CommentSingle, nil},\n-\t\t\t{`(%[si])?\"[^\"]*\"`, Literal, nil},\n-\t\t\t{`%b[01]+\\-[01]+\\b`, Literal, nil},\n-\t\t\t{`%b[01]+(\\.[01]+)*\\b`, Literal, nil},\n-\t\t\t{`%d[0-9]+\\-[0-9]+\\b`, Literal, nil},\n-\t\t\t{`%d[0-9]+(\\.[0-9]+)*\\b`, Literal, nil},\n-\t\t\t{`%x[0-9a-fA-F]+\\-[0-9a-fA-F]+\\b`, Literal, nil},\n-\t\t\t{`%x[0-9a-fA-F]+(\\.[0-9a-fA-F]+)*\\b`, Literal, nil},\n-\t\t\t{`\\b[0-9]+\\*[0-9]+`, Operator, nil},\n-\t\t\t{`\\b[0-9]+\\*`, Operator, nil},\n-\t\t\t{`\\b[0-9]+`, Operator, nil},\n-\t\t\t{`\\*`, Operator, nil},\n-\t\t\t{Words(``, `\\b`, `ALPHA`, `BIT`, `CHAR`, `CR`, `CRLF`, `CTL`, `DIGIT`, `DQUOTE`, `HEXDIG`, `HTAB`, `LF`, `LWSP`, `OCTET`, `SP`, `VCHAR`, `WSP`), Keyword, nil},\n-\t\t\t{`[a-zA-Z][a-zA-Z0-9-]+\\b`, NameClass, nil},\n-\t\t\t{`(=/|=|/)`, Operator, nil},\n-\t\t\t{`[\\[\\]()]`, Punctuation, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`.`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "df55d6daca94c2fddea1e83cf66ae728e7dac82c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/actionscript.go",
      "status": "removed",
      "additions": 0,
      "deletions": 43,
      "changes": 43,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Factionscript.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Factionscript.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Factionscript.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,43 +0,0 @@\n-package a\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Actionscript lexer.\n-var Actionscript = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:         \"ActionScript\",\n-\t\tAliases:      []string{\"as\", \"actionscript\"},\n-\t\tFilenames:    []string{\"*.as\"},\n-\t\tMimeTypes:    []string{\"application/x-actionscript\", \"text/x-actionscript\", \"text/actionscript\"},\n-\t\tNotMultiline: true,\n-\t\tDotAll:       true,\n-\t},\n-\tactionscriptRules,\n-))\n-\n-func actionscriptRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n-\t\t\t{`/(\\\\\\\\|\\\\/|[^/\\n])*/[gim]*`, LiteralStringRegex, nil},\n-\t\t\t{`[~^*!%&<>|+=:;,/?\\\\-]+`, Operator, nil},\n-\t\t\t{`[{}\\[\\]();.]+`, Punctuation, nil},\n-\t\t\t{Words(``, `\\b`, `case`, `default`, `for`, `each`, `in`, `while`, `do`, `break`, `return`, `continue`, `if`, `else`, `throw`, `try`, `catch`, `var`, `with`, `new`, `typeof`, `arguments`, `instanceof`, `this`, `switch`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `class`, `public`, `final`, `internal`, `native`, `override`, `private`, `protected`, `static`, `import`, `extends`, `implements`, `interface`, `intrinsic`, `return`, `super`, `dynamic`, `function`, `const`, `get`, `namespace`, `package`, `set`), KeywordDeclaration, nil},\n-\t\t\t{`(true|false|null|NaN|Infinity|-Infinity|undefined|Void)\\b`, KeywordConstant, nil},\n-\t\t\t{Words(``, `\\b`, `Accessibility`, `AccessibilityProperties`, `ActionScriptVersion`, `ActivityEvent`, `AntiAliasType`, `ApplicationDomain`, `AsBroadcaster`, `Array`, `AsyncErrorEvent`, `AVM1Movie`, `BevelFilter`, `Bitmap`, `BitmapData`, `BitmapDataChannel`, `BitmapFilter`, `BitmapFilterQuality`, `BitmapFilterType`, `BlendMode`, `BlurFilter`, `Boolean`, `ByteArray`, `Camera`, `Capabilities`, `CapsStyle`, `Class`, `Color`, `ColorMatrixFilter`, `ColorTransform`, `ContextMenu`, `ContextMenuBuiltInItems`, `ContextMenuEvent`, `ContextMenuItem`, `ConvultionFilter`, `CSMSettings`, `DataEvent`, `Date`, `DefinitionError`, `DeleteObjectSample`, `Dictionary`, `DisplacmentMapFilter`, `DisplayObject`, `DisplacmentMapFilterMode`, `DisplayObjectContainer`, `DropShadowFilter`, `Endian`, `EOFError`, `Error`, `ErrorEvent`, `EvalError`, `Event`, `EventDispatcher`, `EventPhase`, `ExternalInterface`, `FileFilter`, `FileReference`, `FileReferenceList`, `FocusDirection`, `FocusEvent`, `Font`, `FontStyle`, `FontType`, `FrameLabel`, `FullScreenEvent`, `Function`, `GlowFilter`, `GradientBevelFilter`, `GradientGlowFilter`, `GradientType`, `Graphics`, `GridFitType`, `HTTPStatusEvent`, `IBitmapDrawable`, `ID3Info`, `IDataInput`, `IDataOutput`, `IDynamicPropertyOutputIDynamicPropertyWriter`, `IEventDispatcher`, `IExternalizable`, `IllegalOperationError`, `IME`, `IMEConversionMode`, `IMEEvent`, `int`, `InteractiveObject`, `InterpolationMethod`, `InvalidSWFError`, `InvokeEvent`, `IOError`, `IOErrorEvent`, `JointStyle`, `Key`, `Keyboard`, `KeyboardEvent`, `KeyLocation`, `LineScaleMode`, `Loader`, `LoaderContext`, `LoaderInfo`, `LoadVars`, `LocalConnection`, `Locale`, `Math`, `Matrix`, `MemoryError`, `Microphone`, `MorphShape`, `Mouse`, `MouseEvent`, `MovieClip`, `MovieClipLoader`, `Namespace`, `NetConnection`, `NetStatusEvent`, `NetStream`, `NewObjectSample`, `Number`, `Object`, `ObjectEncoding`, `PixelSnapping`, `Point`, `PrintJob`, `PrintJobOptions`, `PrintJobOrientation`, `ProgressEvent`, `Proxy`, `QName`, `RangeError`, `Rectangle`, `ReferenceError`, `RegExp`, `Responder`, `Sample`, `Scene`, `ScriptTimeoutError`, `Security`, `SecurityDomain`, `SecurityError`, `SecurityErrorEvent`, `SecurityPanel`, `Selection`, `Shape`, `SharedObject`, `SharedObjectFlushStatus`, `SimpleButton`, `Socket`, `Sound`, `SoundChannel`, `SoundLoaderContext`, `SoundMixer`, `SoundTransform`, `SpreadMethod`, `Sprite`, `StackFrame`, `StackOverflowError`, `Stage`, `StageAlign`, `StageDisplayState`, `StageQuality`, `StageScaleMode`, `StaticText`, `StatusEvent`, `String`, `StyleSheet`, `SWFVersion`, `SyncEvent`, `SyntaxError`, `System`, `TextColorType`, `TextField`, `TextFieldAutoSize`, `TextFieldType`, `TextFormat`, `TextFormatAlign`, `TextLineMetrics`, `TextRenderer`, `TextSnapshot`, `Timer`, `TimerEvent`, `Transform`, `TypeError`, `uint`, `URIError`, `URLLoader`, `URLLoaderDataFormat`, `URLRequest`, `URLRequestHeader`, `URLRequestMethod`, `URLStream`, `URLVariabeles`, `VerifyError`, `Video`, `XML`, `XMLDocument`, `XMLList`, `XMLNode`, `XMLNodeType`, `XMLSocket`, `XMLUI`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\b`, `decodeURI`, `decodeURIComponent`, `encodeURI`, `escape`, `eval`, `isFinite`, `isNaN`, `isXMLName`, `clearInterval`, `fscommand`, `getTimer`, `getURL`, `getVersion`, `parseFloat`, `parseInt`, `setInterval`, `trace`, `updateAfterEvent`, `unescape`), NameFunction, nil},\n-\t\t\t{`[$a-zA-Z_]\\w*`, NameOther, nil},\n-\t\t\t{`[0-9][0-9]*\\.[0-9]+([eE][0-9]+)?[fd]?`, LiteralNumberFloat, nil},\n-\t\t\t{`0x[0-9a-f]+`, LiteralNumberHex, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "45596dcc17501cba2a80afd0545c58e676a0259a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/actionscript3.go",
      "status": "removed",
      "additions": 0,
      "deletions": 60,
      "changes": 60,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Factionscript3.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Factionscript3.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Factionscript3.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,60 +0,0 @@\n-package a\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Actionscript 3 lexer.\n-var Actionscript3 = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"ActionScript 3\",\n-\t\tAliases:   []string{\"as3\", \"actionscript3\"},\n-\t\tFilenames: []string{\"*.as\"},\n-\t\tMimeTypes: []string{\"application/x-actionscript3\", \"text/x-actionscript3\", \"text/actionscript3\"},\n-\t\tDotAll:    true,\n-\t},\n-\tactionscript3Rules,\n-))\n-\n-func actionscript3Rules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`(function\\s+)([$a-zA-Z_]\\w*)(\\s*)(\\()`, ByGroups(KeywordDeclaration, NameFunction, Text, Operator), Push(\"funcparams\")},\n-\t\t\t{`(var|const)(\\s+)([$a-zA-Z_]\\w*)(\\s*)(:)(\\s*)([$a-zA-Z_]\\w*(?:\\.<\\w+>)?)`, ByGroups(KeywordDeclaration, Text, Name, Text, Punctuation, Text, KeywordType), nil},\n-\t\t\t{`(import|package)(\\s+)((?:[$a-zA-Z_]\\w*|\\.)+)(\\s*)`, ByGroups(Keyword, Text, NameNamespace, Text), nil},\n-\t\t\t{`(new)(\\s+)([$a-zA-Z_]\\w*(?:\\.<\\w+>)?)(\\s*)(\\()`, ByGroups(Keyword, Text, KeywordType, Text, Operator), nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n-\t\t\t{`/(\\\\\\\\|\\\\/|[^\\n])*/[gisx]*`, LiteralStringRegex, nil},\n-\t\t\t{`(\\.)([$a-zA-Z_]\\w*)`, ByGroups(Operator, NameAttribute), nil},\n-\t\t\t{`(case|default|for|each|in|while|do|break|return|continue|if|else|throw|try|catch|with|new|typeof|arguments|instanceof|this|switch|import|include|as|is)\\b`, Keyword, nil},\n-\t\t\t{`(class|public|final|internal|native|override|private|protected|static|import|extends|implements|interface|intrinsic|return|super|dynamic|function|const|get|namespace|package|set)\\b`, KeywordDeclaration, nil},\n-\t\t\t{`(true|false|null|NaN|Infinity|-Infinity|undefined|void)\\b`, KeywordConstant, nil},\n-\t\t\t{`(decodeURI|decodeURIComponent|encodeURI|escape|eval|isFinite|isNaN|isXMLName|clearInterval|fscommand|getTimer|getURL|getVersion|isFinite|parseFloat|parseInt|setInterval|trace|updateAfterEvent|unescape)\\b`, NameFunction, nil},\n-\t\t\t{`[$a-zA-Z_]\\w*`, Name, nil},\n-\t\t\t{`[0-9][0-9]*\\.[0-9]+([eE][0-9]+)?[fd]?`, LiteralNumberFloat, nil},\n-\t\t\t{`0x[0-9a-f]+`, LiteralNumberHex, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t\t{`[~^*!%&<>|+=:;,/?\\\\{}\\[\\]().-]+`, Operator, nil},\n-\t\t},\n-\t\t\"funcparams\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`(\\s*)(\\.\\.\\.)?([$a-zA-Z_]\\w*)(\\s*)(:)(\\s*)([$a-zA-Z_]\\w*(?:\\.<\\w+>)?|\\*)(\\s*)`, ByGroups(Text, Punctuation, Name, Text, Operator, Text, KeywordType, Text), Push(\"defval\")},\n-\t\t\t{`\\)`, Operator, Push(\"type\")},\n-\t\t},\n-\t\t\"type\": {\n-\t\t\t{`(\\s*)(:)(\\s*)([$a-zA-Z_]\\w*(?:\\.<\\w+>)?|\\*)`, ByGroups(Text, Operator, Text, KeywordType), Pop(2)},\n-\t\t\t{`\\s+`, Text, Pop(2)},\n-\t\t\tDefault(Pop(2)),\n-\t\t},\n-\t\t\"defval\": {\n-\t\t\t{`(=)(\\s*)([^(),]+)(\\s*)(,?)`, ByGroups(Operator, Text, UsingSelf(\"root\"), Text, Operator), Pop(1)},\n-\t\t\t{`,`, Operator, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "916727124bfb761ba516ab0f49a33e8f8d6717aa",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/ada.go",
      "status": "removed",
      "additions": 0,
      "deletions": 118,
      "changes": 118,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fada.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fada.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fada.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,118 +0,0 @@\n-package a\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Ada lexer.\n-var Ada = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"Ada\",\n-\t\tAliases:         []string{\"ada\", \"ada95\", \"ada2005\"},\n-\t\tFilenames:       []string{\"*.adb\", \"*.ads\", \"*.ada\"},\n-\t\tMimeTypes:       []string{\"text/x-ada\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tadaRules,\n-))\n-\n-func adaRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`--.*?\\n`, CommentSingle, nil},\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`function|procedure|entry`, KeywordDeclaration, Push(\"subprogram\")},\n-\t\t\t{`(subtype|type)(\\s+)(\\w+)`, ByGroups(KeywordDeclaration, Text, KeywordType), Push(\"type_def\")},\n-\t\t\t{`task|protected`, KeywordDeclaration, nil},\n-\t\t\t{`(subtype)(\\s+)`, ByGroups(KeywordDeclaration, Text), nil},\n-\t\t\t{`(end)(\\s+)`, ByGroups(KeywordReserved, Text), Push(\"end\")},\n-\t\t\t{`(pragma)(\\s+)(\\w+)`, ByGroups(KeywordReserved, Text, CommentPreproc), nil},\n-\t\t\t{`(true|false|null)\\b`, KeywordConstant, nil},\n-\t\t\t{Words(``, `\\b`, `Address`, `Byte`, `Boolean`, `Character`, `Controlled`, `Count`, `Cursor`, `Duration`, `File_Mode`, `File_Type`, `Float`, `Generator`, `Integer`, `Long_Float`, `Long_Integer`, `Long_Long_Float`, `Long_Long_Integer`, `Natural`, `Positive`, `Reference_Type`, `Short_Float`, `Short_Integer`, `Short_Short_Float`, `Short_Short_Integer`, `String`, `Wide_Character`, `Wide_String`), KeywordType, nil},\n-\t\t\t{`(and(\\s+then)?|in|mod|not|or(\\s+else)|rem)\\b`, OperatorWord, nil},\n-\t\t\t{`generic|private`, KeywordDeclaration, nil},\n-\t\t\t{`package`, KeywordDeclaration, Push(\"package\")},\n-\t\t\t{`array\\b`, KeywordReserved, Push(\"array_def\")},\n-\t\t\t{`(with|use)(\\s+)`, ByGroups(KeywordNamespace, Text), Push(\"import\")},\n-\t\t\t{`(\\w+)(\\s*)(:)(\\s*)(constant)`, ByGroups(NameConstant, Text, Punctuation, Text, KeywordReserved), nil},\n-\t\t\t{`<<\\w+>>`, NameLabel, nil},\n-\t\t\t{`(\\w+)(\\s*)(:)(\\s*)(declare|begin|loop|for|while)`, ByGroups(NameLabel, Text, Punctuation, Text, KeywordReserved), nil},\n-\t\t\t{Words(`\\b`, `\\b`, `abort`, `abs`, `abstract`, `accept`, `access`, `aliased`, `all`, `array`, `at`, `begin`, `body`, `case`, `constant`, `declare`, `delay`, `delta`, `digits`, `do`, `else`, `elsif`, `end`, `entry`, `exception`, `exit`, `interface`, `for`, `goto`, `if`, `is`, `limited`, `loop`, `new`, `null`, `of`, `or`, `others`, `out`, `overriding`, `pragma`, `protected`, `raise`, `range`, `record`, `renames`, `requeue`, `return`, `reverse`, `select`, `separate`, `subtype`, `synchronized`, `task`, `tagged`, `terminate`, `then`, `type`, `until`, `when`, `while`, `xor`), KeywordReserved, nil},\n-\t\t\t{`\"[^\"]*\"`, LiteralString, nil},\n-\t\t\tInclude(\"attribute\"),\n-\t\t\tInclude(\"numbers\"),\n-\t\t\t{`'[^']'`, LiteralStringChar, nil},\n-\t\t\t{`(\\w+)(\\s*|[(,])`, ByGroups(Name, UsingSelf(\"root\")), nil},\n-\t\t\t{`(<>|=>|:=|[()|:;,.'])`, Punctuation, nil},\n-\t\t\t{`[*<>+=/&-]`, Operator, nil},\n-\t\t\t{`\\n+`, Text, nil},\n-\t\t},\n-\t\t\"numbers\": {\n-\t\t\t{`[0-9_]+#[0-9a-f]+#`, LiteralNumberHex, nil},\n-\t\t\t{`[0-9_]+\\.[0-9_]*`, LiteralNumberFloat, nil},\n-\t\t\t{`[0-9_]+`, LiteralNumberInteger, nil},\n-\t\t},\n-\t\t\"attribute\": {\n-\t\t\t{`(')(\\w+)`, ByGroups(Punctuation, NameAttribute), nil},\n-\t\t},\n-\t\t\"subprogram\": {\n-\t\t\t{`\\(`, Punctuation, Push(\"#pop\", \"formal_part\")},\n-\t\t\t{`;`, Punctuation, Pop(1)},\n-\t\t\t{`is\\b`, KeywordReserved, Pop(1)},\n-\t\t\t{`\"[^\"]+\"|\\w+`, NameFunction, nil},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"end\": {\n-\t\t\t{`(if|case|record|loop|select)`, KeywordReserved, nil},\n-\t\t\t{`\"[^\"]+\"|[\\w.]+`, NameFunction, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`;`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"type_def\": {\n-\t\t\t{`;`, Punctuation, Pop(1)},\n-\t\t\t{`\\(`, Punctuation, Push(\"formal_part\")},\n-\t\t\t{`with|and|use`, KeywordReserved, nil},\n-\t\t\t{`array\\b`, KeywordReserved, Push(\"#pop\", \"array_def\")},\n-\t\t\t{`record\\b`, KeywordReserved, Push(\"record_def\")},\n-\t\t\t{`(null record)(;)`, ByGroups(KeywordReserved, Punctuation), Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"array_def\": {\n-\t\t\t{`;`, Punctuation, Pop(1)},\n-\t\t\t{`(\\w+)(\\s+)(range)`, ByGroups(KeywordType, Text, KeywordReserved), nil},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"record_def\": {\n-\t\t\t{`end record`, KeywordReserved, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"import\": {\n-\t\t\t{`[\\w.]+`, NameNamespace, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"formal_part\": {\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t\t{`\\w+`, NameVariable, nil},\n-\t\t\t{`,|:[^=]`, Punctuation, nil},\n-\t\t\t{`(in|not|null|out|access)\\b`, KeywordReserved, nil},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"package\": {\n-\t\t\t{`body`, KeywordDeclaration, nil},\n-\t\t\t{`is\\s+new|renames`, KeywordReserved, nil},\n-\t\t\t{`is`, KeywordReserved, Pop(1)},\n-\t\t\t{`;`, Punctuation, Pop(1)},\n-\t\t\t{`\\(`, Punctuation, Push(\"package_instantiation\")},\n-\t\t\t{`([\\w.]+)`, NameClass, nil},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"package_instantiation\": {\n-\t\t\t{`(\"[^\"]+\"|\\w+)(\\s+)(=>)`, ByGroups(NameVariable, Text, Punctuation), nil},\n-\t\t\t{`[\\w.\\'\"]`, Text, nil},\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "4055f3651eba2792528cc6accf67418bc74fff73",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/al.go",
      "status": "removed",
      "additions": 0,
      "deletions": 47,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fal.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fal.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fal.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,47 +0,0 @@\n-package a\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Al lexer.\n-var Al = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"AL\",\n-\t\tAliases:         []string{\"al\"},\n-\t\tFilenames:       []string{\"*.al\", \"*.dal\"},\n-\t\tMimeTypes:       []string{\"text/x-al\"},\n-\t\tDotAll:          true,\n-\t\tCaseInsensitive: true,\n-\t},\n-\talRules,\n-))\n-\n-// https://github.com/microsoft/AL/blob/master/grammar/alsyntax.tmlanguage\n-func alRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t\t{`(?s)\\/\\*.*?\\\\*\\*\\/`, CommentMultiline, nil},\n-\t\t\t{`(?s)//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`\\\"([^\\\"])*\\\"`, Text, nil},\n-\t\t\t{`'([^'])*'`, LiteralString, nil},\n-\t\t\t{`\\b(?i:(ARRAY|ASSERTERROR|BEGIN|BREAK|CASE|DO|DOWNTO|ELSE|END|EVENT|EXIT|FOR|FOREACH|FUNCTION|IF|IMPLEMENTS|IN|INDATASET|INTERFACE|INTERNAL|LOCAL|OF|PROCEDURE|PROGRAM|PROTECTED|REPEAT|RUNONCLIENT|SECURITYFILTERING|SUPPRESSDISPOSE|TEMPORARY|THEN|TO|TRIGGER|UNTIL|VAR|WHILE|WITH|WITHEVENTS))\\b`, Keyword, nil},\n-\t\t\t{`\\b(?i:(AND|DIV|MOD|NOT|OR|XOR))\\b`, OperatorWord, nil},\n-\t\t\t{`\\b(?i:(AVERAGE|CONST|COUNT|EXIST|FIELD|FILTER|LOOKUP|MAX|MIN|ORDER|SORTING|SUM|TABLEDATA|UPPERLIMIT|WHERE|ASCENDING|DESCENDING))\\b`, Keyword, nil},\n-\t\t\t{`\\b(?i:(CODEUNIT|PAGE|PAGEEXTENSION|PAGECUSTOMIZATION|DOTNET|ENUM|ENUMEXTENSION|VALUE|QUERY|REPORT|TABLE|TABLEEXTENSION|XMLPORT|PROFILE|CONTROLADDIN|REPORTEXTENSION|INTERFACE|PERMISSIONSET|PERMISSIONSETEXTENSION|ENTITLEMENT))\\b`, Keyword, nil},\n-\t\t\t{`\\b(?i:(Action|Array|Automation|BigInteger|BigText|Blob|Boolean|Byte|Char|ClientType|Code|Codeunit|CompletionTriggerErrorLevel|ConnectionType|Database|DataClassification|DataScope|Date|DateFormula|DateTime|Decimal|DefaultLayout|Dialog|Dictionary|DotNet|DotNetAssembly|DotNetTypeDeclaration|Duration|Enum|ErrorInfo|ErrorType|ExecutionContext|ExecutionMode|FieldClass|FieldRef|FieldType|File|FilterPageBuilder|Guid|InStream|Integer|Joker|KeyRef|List|ModuleDependencyInfo|ModuleInfo|None|Notification|NotificationScope|ObjectType|Option|OutStream|Page|PageResult|Query|Record|RecordId|RecordRef|Report|ReportFormat|SecurityFilter|SecurityFiltering|Table|TableConnectionType|TableFilter|TestAction|TestField|TestFilterField|TestPage|TestPermissions|TestRequestPage|Text|TextBuilder|TextConst|TextEncoding|Time|TransactionModel|TransactionType|Variant|Verbosity|Version|XmlPort|HttpContent|HttpHeaders|HttpClient|HttpRequestMessage|HttpResponseMessage|JsonToken|JsonValue|JsonArray|JsonObject|View|Views|XmlAttribute|XmlAttributeCollection|XmlComment|XmlCData|XmlDeclaration|XmlDocument|XmlDocumentType|XmlElement|XmlNamespaceManager|XmlNameTable|XmlNode|XmlNodeList|XmlProcessingInstruction|XmlReadOptions|XmlText|XmlWriteOptions|WebServiceActionContext|WebServiceActionResultCode|SessionSettings))\\b`, Keyword, nil},\n-\t\t\t{`\\b([<>]=|<>|<|>)\\b?`, Operator, nil},\n-\t\t\t{`\\b(\\-|\\+|\\/|\\*)\\b`, Operator, nil},\n-\t\t\t{`\\s*(\\:=|\\+=|-=|\\/=|\\*=)\\s*?`, Operator, nil},\n-\t\t\t{`\\b(?i:(ADD|ADDFIRST|ADDLAST|ADDAFTER|ADDBEFORE|ACTION|ACTIONS|AREA|ASSEMBLY|CHARTPART|CUEGROUP|CUSTOMIZES|COLUMN|DATAITEM|DATASET|ELEMENTS|EXTENDS|FIELD|FIELDGROUP|FIELDATTRIBUTE|FIELDELEMENT|FIELDGROUPS|FIELDS|FILTER|FIXED|GRID|GROUP|MOVEAFTER|MOVEBEFORE|KEY|KEYS|LABEL|LABELS|LAYOUT|MODIFY|MOVEFIRST|MOVELAST|MOVEBEFORE|MOVEAFTER|PART|REPEATER|USERCONTROL|REQUESTPAGE|SCHEMA|SEPARATOR|SYSTEMPART|TABLEELEMENT|TEXTATTRIBUTE|TEXTELEMENT|TYPE))\\b`, Keyword, nil},\n-\t\t\t{`\\s*[(\\.\\.)&\\|]\\s*`, Operator, nil},\n-\t\t\t{`\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\b`, LiteralNumber, nil},\n-\t\t\t{`[;:,]`, Punctuation, nil},\n-\t\t\t{`#[ \\t]*(if|else|elif|endif|define|undef|region|endregion|pragma)\\b.*?\\n`, CommentPreproc, nil},\n-\t\t\t{`\\w+`, Text, nil},\n-\t\t\t{`.`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "a947edad60a88a5fa9448e8eb3020c0bbeff0147",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/angular2.go",
      "status": "removed",
      "additions": 0,
      "deletions": 46,
      "changes": 46,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fangular2.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fangular2.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fangular2.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,46 +0,0 @@\n-package a\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Angular2 lexer.\n-var Angular2 = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Angular2\",\n-\t\tAliases:   []string{\"ng2\"},\n-\t\tFilenames: []string{},\n-\t\tMimeTypes: []string{},\n-\t},\n-\tangular2Rules,\n-))\n-\n-func angular2Rules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[^{([*#]+`, Other, nil},\n-\t\t\t{`(\\{\\{)(\\s*)`, ByGroups(CommentPreproc, Text), Push(\"ngExpression\")},\n-\t\t\t{`([([]+)([\\w:.-]+)([\\])]+)(\\s*)(=)(\\s*)`, ByGroups(Punctuation, NameAttribute, Punctuation, Text, Operator, Text), Push(\"attr\")},\n-\t\t\t{`([([]+)([\\w:.-]+)([\\])]+)(\\s*)`, ByGroups(Punctuation, NameAttribute, Punctuation, Text), nil},\n-\t\t\t{`([*#])([\\w:.-]+)(\\s*)(=)(\\s*)`, ByGroups(Punctuation, NameAttribute, Punctuation, Operator), Push(\"attr\")},\n-\t\t\t{`([*#])([\\w:.-]+)(\\s*)`, ByGroups(Punctuation, NameAttribute, Punctuation), nil},\n-\t\t},\n-\t\t\"ngExpression\": {\n-\t\t\t{`\\s+(\\|\\s+)?`, Text, nil},\n-\t\t\t{`\\}\\}`, CommentPreproc, Pop(1)},\n-\t\t\t{`:?(true|false)`, LiteralStringBoolean, nil},\n-\t\t\t{`:?\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`:?'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t\t{`[0-9](\\.[0-9]*)?(eE[+-][0-9])?[flFLdD]?|0[xX][0-9a-fA-F]+[Ll]?`, LiteralNumber, nil},\n-\t\t\t{`[a-zA-Z][\\w-]*(\\(.*\\))?`, NameVariable, nil},\n-\t\t\t{`\\.[\\w-]+(\\(.*\\))?`, NameVariable, nil},\n-\t\t\t{`(\\?)(\\s*)([^}\\s]+)(\\s*)(:)(\\s*)([^}\\s]+)(\\s*)`, ByGroups(Operator, Text, LiteralString, Text, Operator, Text, LiteralString, Text), nil},\n-\t\t},\n-\t\t\"attr\": {\n-\t\t\t{`\".*?\"`, LiteralString, Pop(1)},\n-\t\t\t{`'.*?'`, LiteralString, Pop(1)},\n-\t\t\t{`[^\\s>]+`, LiteralString, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "c744353f1139bff5c454dbb9685cad5ee651e7cb",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/antlr.go",
      "status": "removed",
      "additions": 0,
      "deletions": 105,
      "changes": 105,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fantlr.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fantlr.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fantlr.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,105 +0,0 @@\n-package a\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// ANTLR lexer.\n-var ANTLR = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"ANTLR\",\n-\t\tAliases:   []string{\"antlr\"},\n-\t\tFilenames: []string{},\n-\t\tMimeTypes: []string{},\n-\t},\n-\tantlrRules,\n-))\n-\n-func antlrRules() Rules {\n-\treturn Rules{\n-\t\t\"whitespace\": {\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t},\n-\t\t\"comments\": {\n-\t\t\t{`//.*$`, Comment, nil},\n-\t\t\t{`/\\*(.|\\n)*?\\*/`, Comment, nil},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"comments\"),\n-\t\t\t{`(lexer|parser|tree)?(\\s*)(grammar\\b)(\\s*)([A-Za-z]\\w*)(;)`, ByGroups(Keyword, TextWhitespace, Keyword, TextWhitespace, NameClass, Punctuation), nil},\n-\t\t\t{`options\\b`, Keyword, Push(\"options\")},\n-\t\t\t{`tokens\\b`, Keyword, Push(\"tokens\")},\n-\t\t\t{`(scope)(\\s*)([A-Za-z]\\w*)(\\s*)(\\{)`, ByGroups(Keyword, TextWhitespace, NameVariable, TextWhitespace, Punctuation), Push(\"action\")},\n-\t\t\t{`(catch|finally)\\b`, Keyword, Push(\"exception\")},\n-\t\t\t{`(@[A-Za-z]\\w*)(\\s*)(::)?(\\s*)([A-Za-z]\\w*)(\\s*)(\\{)`, ByGroups(NameLabel, TextWhitespace, Punctuation, TextWhitespace, NameLabel, TextWhitespace, Punctuation), Push(\"action\")},\n-\t\t\t{`((?:protected|private|public|fragment)\\b)?(\\s*)([A-Za-z]\\w*)(!)?`, ByGroups(Keyword, TextWhitespace, NameLabel, Punctuation), Push(\"rule-alts\", \"rule-prelims\")},\n-\t\t},\n-\t\t\"exception\": {\n-\t\t\t{`\\n`, TextWhitespace, Pop(1)},\n-\t\t\t{`\\s`, TextWhitespace, nil},\n-\t\t\tInclude(\"comments\"),\n-\t\t\t{`\\[`, Punctuation, Push(\"nested-arg-action\")},\n-\t\t\t{`\\{`, Punctuation, Push(\"action\")},\n-\t\t},\n-\t\t\"rule-prelims\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"comments\"),\n-\t\t\t{`returns\\b`, Keyword, nil},\n-\t\t\t{`\\[`, Punctuation, Push(\"nested-arg-action\")},\n-\t\t\t{`\\{`, Punctuation, Push(\"action\")},\n-\t\t\t{`(throws)(\\s+)([A-Za-z]\\w*)`, ByGroups(Keyword, TextWhitespace, NameLabel), nil},\n-\t\t\t{`(,)(\\s*)([A-Za-z]\\w*)`, ByGroups(Punctuation, TextWhitespace, NameLabel), nil},\n-\t\t\t{`options\\b`, Keyword, Push(\"options\")},\n-\t\t\t{`(scope)(\\s+)(\\{)`, ByGroups(Keyword, TextWhitespace, Punctuation), Push(\"action\")},\n-\t\t\t{`(scope)(\\s+)([A-Za-z]\\w*)(\\s*)(;)`, ByGroups(Keyword, TextWhitespace, NameLabel, TextWhitespace, Punctuation), nil},\n-\t\t\t{`(@[A-Za-z]\\w*)(\\s*)(\\{)`, ByGroups(NameLabel, TextWhitespace, Punctuation), Push(\"action\")},\n-\t\t\t{`:`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"rule-alts\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"comments\"),\n-\t\t\t{`options\\b`, Keyword, Push(\"options\")},\n-\t\t\t{`:`, Punctuation, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralString, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`<<([^>]|>[^>])>>`, LiteralString, nil},\n-\t\t\t{`\\$?[A-Z_]\\w*`, NameConstant, nil},\n-\t\t\t{`\\$?[a-z_]\\w*`, NameVariable, nil},\n-\t\t\t{`(\\+|\\||->|=>|=|\\(|\\)|\\.\\.|\\.|\\?|\\*|\\^|!|\\#|~)`, Operator, nil},\n-\t\t\t{`,`, Punctuation, nil},\n-\t\t\t{`\\[`, Punctuation, Push(\"nested-arg-action\")},\n-\t\t\t{`\\{`, Punctuation, Push(\"action\")},\n-\t\t\t{`;`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"tokens\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"comments\"),\n-\t\t\t{`\\{`, Punctuation, nil},\n-\t\t\t{`([A-Z]\\w*)(\\s*)(=)?(\\s*)(\\'(?:\\\\\\\\|\\\\\\'|[^\\']*)\\')?(\\s*)(;)`, ByGroups(NameLabel, TextWhitespace, Punctuation, TextWhitespace, LiteralString, TextWhitespace, Punctuation), nil},\n-\t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"options\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"comments\"),\n-\t\t\t{`\\{`, Punctuation, nil},\n-\t\t\t{`([A-Za-z]\\w*)(\\s*)(=)(\\s*)([A-Za-z]\\w*|\\'(?:\\\\\\\\|\\\\\\'|[^\\']*)\\'|[0-9]+|\\*)(\\s*)(;)`, ByGroups(NameVariable, TextWhitespace, Punctuation, TextWhitespace, Text, TextWhitespace, Punctuation), nil},\n-\t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"action\": {\n-\t\t\t{`([^${}\\'\"/\\\\]+|\"(\\\\\\\\|\\\\\"|[^\"])*\"|'(\\\\\\\\|\\\\'|[^'])*'|//.*$\\n?|/\\*(.|\\n)*?\\*/|/(?!\\*)(\\\\\\\\|\\\\/|[^/])*/|\\\\(?!%)|/)+`, Other, nil},\n-\t\t\t{`(\\\\)(%)`, ByGroups(Punctuation, Other), nil},\n-\t\t\t{`(\\$[a-zA-Z]+)(\\.?)(text|value)?`, ByGroups(NameVariable, Punctuation, NameProperty), nil},\n-\t\t\t{`\\{`, Punctuation, Push()},\n-\t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"nested-arg-action\": {\n-\t\t\t{`([^$\\[\\]\\'\"/]+|\"(\\\\\\\\|\\\\\"|[^\"])*\"|'(\\\\\\\\|\\\\'|[^'])*'|//.*$\\n?|/\\*(.|\\n)*?\\*/|/(?!\\*)(\\\\\\\\|\\\\/|[^/])*/|/)+`, Other, nil},\n-\t\t\t{`\\[`, Punctuation, Push()},\n-\t\t\t{`\\]`, Punctuation, Pop(1)},\n-\t\t\t{`(\\$[a-zA-Z]+)(\\.?)(text|value)?`, ByGroups(NameVariable, Punctuation, NameProperty), nil},\n-\t\t\t{`(\\\\\\\\|\\\\\\]|\\\\\\[|[^\\[\\]])+`, Other, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "5685eb15ce063cd8fbe5e5865774b9204c704809",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/apache.go",
      "status": "removed",
      "additions": 0,
      "deletions": 42,
      "changes": 42,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fapache.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fapache.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fapache.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,42 +0,0 @@\n-package a\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Apacheconf lexer.\n-var Apacheconf = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"ApacheConf\",\n-\t\tAliases:         []string{\"apacheconf\", \"aconf\", \"apache\"},\n-\t\tFilenames:       []string{\".htaccess\", \"apache.conf\", \"apache2.conf\"},\n-\t\tMimeTypes:       []string{\"text/x-apacheconf\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tapacheconfRules,\n-))\n-\n-func apacheconfRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`(#.*?)$`, Comment, nil},\n-\t\t\t{`(<[^\\s>]+)(?:(\\s+)(.*?))?(>)`, ByGroups(NameTag, Text, LiteralString, NameTag), nil},\n-\t\t\t{`([a-z]\\w*)(\\s+)`, ByGroups(NameBuiltin, Text), Push(\"value\")},\n-\t\t\t{`\\.+`, Text, nil},\n-\t\t},\n-\t\t\"value\": {\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`$`, Text, Pop(1)},\n-\t\t\t{`\\\\`, Text, nil},\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`\\d+\\.\\d+\\.\\d+\\.\\d+(?:/\\d+)?`, LiteralNumber, nil},\n-\t\t\t{`\\d+`, LiteralNumber, nil},\n-\t\t\t{`/([a-z0-9][\\w./-]+)`, LiteralStringOther, nil},\n-\t\t\t{`(on|off|none|any|all|double|email|dns|min|minimal|os|productonly|full|emerg|alert|crit|error|warn|notice|info|debug|registry|script|inetd|standalone|user|group)\\b`, Keyword, nil},\n-\t\t\t{`\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"`, LiteralStringDouble, nil},\n-\t\t\t{`[^\\s\"\\\\]+`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "f929d2e2b17aaf494ba572e20c743f2744228aaf",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/apl.go",
      "status": "removed",
      "additions": 0,
      "deletions": 40,
      "changes": 40,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fapl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fapl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fapl.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,40 +0,0 @@\n-package a\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Apl lexer.\n-var Apl = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"APL\",\n-\t\tAliases:   []string{\"apl\"},\n-\t\tFilenames: []string{\"*.apl\"},\n-\t\tMimeTypes: []string{},\n-\t},\n-\taplRules,\n-))\n-\n-func aplRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`[⍝#].*$`, CommentSingle, nil},\n-\t\t\t{`\\'((\\'\\')|[^\\'])*\\'`, LiteralStringSingle, nil},\n-\t\t\t{`\"((\"\")|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`[⋄◇()]`, Punctuation, nil},\n-\t\t\t{`[\\[\\];]`, LiteralStringRegex, nil},\n-\t\t\t{`⎕[A-Za-zΔ∆⍙][A-Za-zΔ∆⍙_¯0-9]*`, NameFunction, nil},\n-\t\t\t{`[A-Za-zΔ∆⍙_][A-Za-zΔ∆⍙_¯0-9]*`, NameVariable, nil},\n-\t\t\t{`¯?(0[Xx][0-9A-Fa-f]+|[0-9]*\\.?[0-9]+([Ee][+¯]?[0-9]+)?|¯|∞)([Jj]¯?(0[Xx][0-9A-Fa-f]+|[0-9]*\\.?[0-9]+([Ee][+¯]?[0-9]+)?|¯|∞))?`, LiteralNumber, nil},\n-\t\t\t{`[\\.\\\\/⌿⍀¨⍣⍨⍠⍤∘⍥@⌺⌶⍢]`, NameAttribute, nil},\n-\t\t\t{`[+\\-×÷⌈⌊∣|⍳?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⌸⍯↗⊆⍸]`, Operator, nil},\n-\t\t\t{`⍬`, NameConstant, nil},\n-\t\t\t{`[⎕⍞]`, NameVariableGlobal, nil},\n-\t\t\t{`[←→]`, KeywordDeclaration, nil},\n-\t\t\t{`[⍺⍵⍶⍹∇:]`, NameBuiltinPseudo, nil},\n-\t\t\t{`[{}]`, KeywordType, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "b6a53c5ff824614c44756ce8d6500e1fef457961",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/applescript.go",
      "status": "removed",
      "additions": 0,
      "deletions": 59,
      "changes": 59,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fapplescript.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fapplescript.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fapplescript.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,59 +0,0 @@\n-package a\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Applescript lexer.\n-var Applescript = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"AppleScript\",\n-\t\tAliases:   []string{\"applescript\"},\n-\t\tFilenames: []string{\"*.applescript\"},\n-\t\tMimeTypes: []string{},\n-\t\tDotAll:    true,\n-\t},\n-\tapplescriptRules,\n-))\n-\n-func applescriptRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`¬\\n`, LiteralStringEscape, nil},\n-\t\t\t{`'s\\s+`, Text, nil},\n-\t\t\t{`(--|#).*?$`, Comment, nil},\n-\t\t\t{`\\(\\*`, CommentMultiline, Push(\"comment\")},\n-\t\t\t{`[(){}!,.:]`, Punctuation, nil},\n-\t\t\t{`(«)([^»]+)(»)`, ByGroups(Text, NameBuiltin, Text), nil},\n-\t\t\t{`\\b((?:considering|ignoring)\\s*)(application responses|case|diacriticals|hyphens|numeric strings|punctuation|white space)`, ByGroups(Keyword, NameBuiltin), nil},\n-\t\t\t{`(-|\\*|\\+|&|≠|>=?|<=?|=|≥|≤|/|÷|\\^)`, Operator, nil},\n-\t\t\t{`\\b(and|or|is equal|equals|(is )?equal to|is not|isn't|isn't equal( to)?|is not equal( to)?|doesn't equal|does not equal|(is )?greater than|comes after|is not less than or equal( to)?|isn't less than or equal( to)?|(is )?less than|comes before|is not greater than or equal( to)?|isn't greater than or equal( to)?|(is  )?greater than or equal( to)?|is not less than|isn't less than|does not come before|doesn't come before|(is )?less than or equal( to)?|is not greater than|isn't greater than|does not come after|doesn't come after|starts? with|begins? with|ends? with|contains?|does not contain|doesn't contain|is in|is contained by|is not in|is not contained by|isn't contained by|div|mod|not|(a  )?(ref( to)?|reference to)|is|does)\\b`, OperatorWord, nil},\n-\t\t\t{`^(\\s*(?:on|end)\\s+)(zoomed|write to file|will zoom|will show|will select tab view item|will resize( sub views)?|will resign active|will quit|will pop up|will open|will move|will miniaturize|will hide|will finish launching|will display outline cell|will display item cell|will display cell|will display browser cell|will dismiss|will close|will become active|was miniaturized|was hidden|update toolbar item|update parameters|update menu item|shown|should zoom|should selection change|should select tab view item|should select row|should select item|should select column|should quit( after last window closed)?|should open( untitled)?|should expand item|should end editing|should collapse item|should close|should begin editing|selection changing|selection changed|selected tab view item|scroll wheel|rows changed|right mouse up|right mouse dragged|right mouse down|resized( sub views)?|resigned main|resigned key|resigned active|read from file|prepare table drop|prepare table drag|prepare outline drop|prepare outline drag|prepare drop|plugin loaded|parameters updated|panel ended|opened|open untitled|number of rows|number of items|number of browser rows|moved|mouse up|mouse moved|mouse exited|mouse entered|mouse dragged|mouse down|miniaturized|load data representation|launched|keyboard up|keyboard down|items changed|item value changed|item value|item expandable|idle|exposed|end editing|drop|drag( (entered|exited|updated))?|double clicked|document nib name|dialog ended|deminiaturized|data representation|conclude drop|column resized|column moved|column clicked|closed|clicked toolbar item|clicked|choose menu item|child of item|changed|change item value|change cell value|cell value changed|cell value|bounds changed|begin editing|became main|became key|awake from nib|alert ended|activated|action|accept table drop|accept outline drop)`, ByGroups(Keyword, NameFunction), nil},\n-\t\t\t{`^(\\s*)(in|on|script|to)(\\s+)`, ByGroups(Text, Keyword, Text), nil},\n-\t\t\t{`\\b(as )(alias |application |boolean |class |constant |date |file |integer |list |number |POSIX file |real |record |reference |RGB color |script |text |unit types|(?:Unicode )?text|string)\\b`, ByGroups(Keyword, NameClass), nil},\n-\t\t\t{`\\b(AppleScript|current application|false|linefeed|missing value|pi|quote|result|return|space|tab|text item delimiters|true|version)\\b`, NameConstant, nil},\n-\t\t\t{`\\b(ASCII (character|number)|activate|beep|choose URL|choose application|choose color|choose file( name)?|choose folder|choose from list|choose remote application|clipboard info|close( access)?|copy|count|current date|delay|delete|display (alert|dialog)|do shell script|duplicate|exists|get eof|get volume settings|info for|launch|list (disks|folder)|load script|log|make|mount volume|new|offset|open( (for access|location))?|path to|print|quit|random number|read|round|run( script)?|say|scripting components|set (eof|the clipboard to|volume)|store script|summarize|system attribute|system info|the clipboard|time to GMT|write|quoted form)\\b`, NameBuiltin, nil},\n-\t\t\t{`\\b(considering|else|error|exit|from|if|ignoring|in|repeat|tell|then|times|to|try|until|using terms from|while|with|with timeout( of)?|with transaction|by|continue|end|its?|me|my|return|of|as)\\b`, Keyword, nil},\n-\t\t\t{`\\b(global|local|prop(erty)?|set|get)\\b`, Keyword, nil},\n-\t\t\t{`\\b(but|put|returning|the)\\b`, NameBuiltin, nil},\n-\t\t\t{`\\b(attachment|attribute run|character|day|month|paragraph|word|year)s?\\b`, NameBuiltin, nil},\n-\t\t\t{`\\b(about|above|against|apart from|around|aside from|at|below|beneath|beside|between|for|given|instead of|on|onto|out of|over|since)\\b`, NameBuiltin, nil},\n-\t\t\t{`\\b(accepts arrow key|action method|active|alignment|allowed identifiers|allows branch selection|allows column reordering|allows column resizing|allows column selection|allows customization|allows editing text attributes|allows empty selection|allows mixed state|allows multiple selection|allows reordering|allows undo|alpha( value)?|alternate image|alternate increment value|alternate title|animation delay|associated file name|associated object|auto completes|auto display|auto enables items|auto repeat|auto resizes( outline column)?|auto save expanded items|auto save name|auto save table columns|auto saves configuration|auto scroll|auto sizes all columns to fit|auto sizes cells|background color|bezel state|bezel style|bezeled|border rect|border type|bordered|bounds( rotation)?|box type|button returned|button type|can choose directories|can choose files|can draw|can hide|cell( (background color|size|type))?|characters|class|click count|clicked( data)? column|clicked data item|clicked( data)? row|closeable|collating|color( (mode|panel))|command key down|configuration|content(s| (size|view( margins)?))?|context|continuous|control key down|control size|control tint|control view|controller visible|coordinate system|copies( on scroll)?|corner view|current cell|current column|current( field)?  editor|current( menu)? item|current row|current tab view item|data source|default identifiers|delta (x|y|z)|destination window|directory|display mode|displayed cell|document( (edited|rect|view))?|double value|dragged column|dragged distance|dragged items|draws( cell)? background|draws grid|dynamically scrolls|echos bullets|edge|editable|edited( data)? column|edited data item|edited( data)? row|enabled|enclosing scroll view|ending page|error handling|event number|event type|excluded from windows menu|executable path|expanded|fax number|field editor|file kind|file name|file type|first responder|first visible column|flipped|floating|font( panel)?|formatter|frameworks path|frontmost|gave up|grid color|has data items|has horizontal ruler|has horizontal scroller|has parent data item|has resize indicator|has shadow|has sub menu|has vertical ruler|has vertical scroller|header cell|header view|hidden|hides when deactivated|highlights by|horizontal line scroll|horizontal page scroll|horizontal ruler view|horizontally resizable|icon image|id|identifier|ignores multiple clicks|image( (alignment|dims when disabled|frame style|scaling))?|imports graphics|increment value|indentation per level|indeterminate|index|integer value|intercell spacing|item height|key( (code|equivalent( modifier)?|window))?|knob thickness|label|last( visible)? column|leading offset|leaf|level|line scroll|loaded|localized sort|location|loop mode|main( (bunde|menu|window))?|marker follows cell|matrix mode|maximum( content)? size|maximum visible columns|menu( form representation)?|miniaturizable|miniaturized|minimized image|minimized title|minimum column width|minimum( content)? size|modal|modified|mouse down state|movie( (controller|file|rect))?|muted|name|needs display|next state|next text|number of tick marks|only tick mark values|opaque|open panel|option key down|outline table column|page scroll|pages across|pages down|palette label|pane splitter|parent data item|parent window|pasteboard|path( (names|separator))?|playing|plays every frame|plays selection only|position|preferred edge|preferred type|pressure|previous text|prompt|properties|prototype cell|pulls down|rate|released when closed|repeated|requested print time|required file type|resizable|resized column|resource path|returns records|reuses columns|rich text|roll over|row height|rulers visible|save panel|scripts path|scrollable|selectable( identifiers)?|selected cell|selected( data)? columns?|selected data items?|selected( data)? rows?|selected item identifier|selection by rect|send action on arrow key|sends action when done editing|separates columns|separator item|sequence number|services menu|shared frameworks path|shared support path|sheet|shift key down|shows alpha|shows state by|size( mode)?|smart insert delete enabled|sort case sensitivity|sort column|sort order|sort type|sorted( data rows)?|sound|source( mask)?|spell checking enabled|starting page|state|string value|sub menu|super menu|super view|tab key traverses cells|tab state|tab type|tab view|table view|tag|target( printer)?|text color|text container insert|text container origin|text returned|tick mark position|time stamp|title(d| (cell|font|height|position|rect))?|tool tip|toolbar|trailing offset|transparent|treat packages as directories|truncated labels|types|unmodified characters|update views|use sort indicator|user defaults|uses data source|uses ruler|uses threaded animation|uses title from previous column|value wraps|version|vertical( (line scroll|page scroll|ruler view))?|vertically resizable|view|visible( document rect)?|volume|width|window|windows menu|wraps|zoomable|zoomed)\\b`, NameAttribute, nil},\n-\t\t\t{`\\b(action cell|alert reply|application|box|browser( cell)?|bundle|button( cell)?|cell|clip view|color well|color-panel|combo box( item)?|control|data( (cell|column|item|row|source))?|default entry|dialog reply|document|drag info|drawer|event|font(-panel)?|formatter|image( (cell|view))?|matrix|menu( item)?|item|movie( view)?|open-panel|outline view|panel|pasteboard|plugin|popup button|progress indicator|responder|save-panel|scroll view|secure text field( cell)?|slider|sound|split view|stepper|tab view( item)?|table( (column|header cell|header view|view))|text( (field( cell)?|view))?|toolbar( item)?|user-defaults|view|window)s?\\b`, NameBuiltin, nil},\n-\t\t\t{`\\b(animate|append|call method|center|close drawer|close panel|display|display alert|display dialog|display panel|go|hide|highlight|increment|item for|load image|load movie|load nib|load panel|load sound|localized string|lock focus|log|open drawer|path for|pause|perform action|play|register|resume|scroll|select( all)?|show|size to fit|start|step back|step forward|stop|synchronize|unlock focus|update)\\b`, NameBuiltin, nil},\n-\t\t\t{`\\b((in )?back of|(in )?front of|[0-9]+(st|nd|rd|th)|first|second|third|fourth|fifth|sixth|seventh|eighth|ninth|tenth|after|back|before|behind|every|front|index|last|middle|some|that|through|thru|where|whose)\\b`, NameBuiltin, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`\\b([a-zA-Z]\\w*)\\b`, NameVariable, nil},\n-\t\t\t{`[-+]?(\\d+\\.\\d*|\\d*\\.\\d+)(E[-+][0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`[-+]?\\d+`, LiteralNumberInteger, nil},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`\\(\\*`, CommentMultiline, Push()},\n-\t\t\t{`\\*\\)`, CommentMultiline, Pop(1)},\n-\t\t\t{`[^*(]+`, CommentMultiline, nil},\n-\t\t\t{`[*(]`, CommentMultiline, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "0edbe3f9343cf736c669ccfc937eeae284819d82",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/arduino.go",
      "status": "removed",
      "additions": 0,
      "deletions": 114,
      "changes": 114,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Farduino.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Farduino.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Farduino.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,114 +0,0 @@\n-package a\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Arduino lexer.\n-var Arduino = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Arduino\",\n-\t\tAliases:   []string{\"arduino\"},\n-\t\tFilenames: []string{\"*.ino\"},\n-\t\tMimeTypes: []string{\"text/x-arduino\"},\n-\t\tEnsureNL:  true,\n-\t},\n-\tarduinoRules,\n-))\n-\n-func arduinoRules() Rules {\n-\treturn Rules{\n-\t\t\"statements\": {\n-\t\t\t{Words(``, `\\b`, `catch`, `const_cast`, `delete`, `dynamic_cast`, `explicit`, `export`, `friend`, `mutable`, `namespace`, `new`, `operator`, `private`, `protected`, `public`, `reinterpret_cast`, `restrict`, `static_cast`, `template`, `this`, `throw`, `throws`, `try`, `typeid`, `typename`, `using`, `virtual`, `constexpr`, `nullptr`, `decltype`, `thread_local`, `alignas`, `alignof`, `static_assert`, `noexcept`, `override`, `final`), Keyword, nil},\n-\t\t\t{`char(16_t|32_t)\\b`, KeywordType, nil},\n-\t\t\t{`(class)\\b`, ByGroups(Keyword, Text), Push(\"classname\")},\n-\t\t\t{`(R)(\")([^\\\\()\\s]{,16})(\\()((?:.|\\n)*?)(\\)\\3)(\")`, ByGroups(LiteralStringAffix, LiteralString, LiteralStringDelimiter, LiteralStringDelimiter, LiteralString, LiteralStringDelimiter, LiteralString), nil},\n-\t\t\t{`(u8|u|U)(\")`, ByGroups(LiteralStringAffix, LiteralString), Push(\"string\")},\n-\t\t\t{`(L?)(\")`, ByGroups(LiteralStringAffix, LiteralString), Push(\"string\")},\n-\t\t\t{`(L?)(')(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-fA-F0-9]{1,2}|[^\\\\\\'\\n])(')`, ByGroups(LiteralStringAffix, LiteralStringChar, LiteralStringChar, LiteralStringChar), nil},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+)[eE][+-]?\\d+[LlUu]*`, LiteralNumberFloat, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+[fF])[fF]?`, LiteralNumberFloat, nil},\n-\t\t\t{`0x[0-9a-fA-F]+[LlUu]*`, LiteralNumberHex, nil},\n-\t\t\t{`0[0-7]+[LlUu]*`, LiteralNumberOct, nil},\n-\t\t\t{`\\d+[LlUu]*`, LiteralNumberInteger, nil},\n-\t\t\t{`\\*/`, Error, nil},\n-\t\t\t{`[~!%^&*+=|?:<>/-]`, Operator, nil},\n-\t\t\t{`[()\\[\\],.]`, Punctuation, nil},\n-\t\t\t{Words(``, `\\b`, `asm`, `auto`, `break`, `case`, `const`, `continue`, `default`, `do`, `else`, `enum`, `extern`, `for`, `goto`, `if`, `register`, `restricted`, `return`, `sizeof`, `static`, `struct`, `switch`, `typedef`, `union`, `volatile`, `while`), Keyword, nil},\n-\t\t\t{`(_Bool|_Complex|_Imaginary|array|atomic_bool|atomic_char|atomic_int|atomic_llong|atomic_long|atomic_schar|atomic_short|atomic_uchar|atomic_uint|atomic_ullong|atomic_ulong|atomic_ushort|auto|bool|boolean|BooleanVariables|Byte|byte|Char|char|char16_t|char32_t|class|complex|Const|const|const_cast|delete|double|dynamic_cast|enum|explicit|extern|Float|float|friend|inline|Int|int|int16_t|int32_t|int64_t|int8_t|Long|long|new|NULL|null|operator|private|PROGMEM|protected|public|register|reinterpret_cast|short|signed|sizeof|Static|static|static_cast|String|struct|typedef|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|virtual|Void|void|Volatile|volatile|word)\\b`, KeywordType, nil},\n-\t\t\t// Start of: Arduino-specific syntax\n-\t\t\t{`(and|final|If|Loop|loop|not|or|override|setup|Setup|throw|try|xor)\\b`, Keyword, nil}, // Addition to keywords already defined by C++\n-\t\t\t{`(ANALOG_MESSAGE|BIN|CHANGE|DEC|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FALLING|FIRMATA_STRING|HALF_PI|HEX|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL1V1|INTERNAL2V56|INTERNAL2V56|LED_BUILTIN|LED_BUILTIN_RX|LED_BUILTIN_TX|LOW|LSBFIRST|MSBFIRST|OCT|OUTPUT|PI|REPORT_ANALOG|REPORT_DIGITAL|RISING|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET|TWO_PI)\\b`, KeywordConstant, nil},\n-\t\t\t{`(boolean|const|byte|word|string|String|array)\\b`, NameVariable, nil},\n-\t\t\t{`(Keyboard|KeyboardController|MouseController|SoftwareSerial|EthernetServer|EthernetClient|LiquidCrystal|RobotControl|GSMVoiceCall|EthernetUDP|EsploraTFT|HttpClient|RobotMotor|WiFiClient|GSMScanner|FileSystem|Scheduler|GSMServer|YunClient|YunServer|IPAddress|GSMClient|GSMModem|Keyboard|Ethernet|Console|GSMBand|Esplora|Stepper|Process|WiFiUDP|GSM_SMS|Mailbox|USBHost|Firmata|PImage|Client|Server|GSMPIN|FileIO|Bridge|Serial|EEPROM|Stream|Mouse|Audio|Servo|File|Task|GPRS|WiFi|Wire|TFT|GSM|SPI|SD)\\b`, NameClass, nil},\n-\t\t\t{`(abs|Abs|accept|ACos|acos|acosf|addParameter|analogRead|AnalogRead|analogReadResolution|AnalogReadResolution|analogReference|AnalogReference|analogWrite|AnalogWrite|analogWriteResolution|AnalogWriteResolution|answerCall|asin|ASin|asinf|atan|ATan|atan2|ATan2|atan2f|atanf|attach|attached|attachGPRS|attachInterrupt|AttachInterrupt|autoscroll|available|availableForWrite|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|Bit|BitClear|bitClear|bitRead|BitRead|bitSet|BitSet|BitWrite|bitWrite|blink|blinkVersion|BSSID|buffer|byte|cbrt|cbrtf|Ceil|ceil|ceilf|changePIN|char|charAt|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compareTo|compassRead|concat|config|connect|connected|constrain|Constrain|copysign|copysignf|cos|Cos|cosf|cosh|coshf|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|degrees|Delay|delay|DelayMicroseconds|delayMicroseconds|detach|DetachInterrupt|detachInterrupt|DigitalPinToInterrupt|digitalPinToInterrupt|DigitalRead|digitalRead|DigitalWrite|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endsWith|endTransmission|endWrite|equals|equalsIgnoreCase|exists|exitValue|Exp|exp|expf|fabs|fabsf|fdim|fdimf|fill|find|findUntil|float|floor|Floor|floorf|flush|fma|fmaf|fmax|fmaxf|fmin|fminf|fmod|fmodf|gatewayIP|get|getAsynchronously|getBand|getButton|getBytes|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|HighByte|home|hypot|hypotf|image|indexOf|int|interrupts|IPAddress|IRread|isActionDone|isAlpha|isAlphaNumeric|isAscii|isControl|isDigit|isDirectory|isfinite|isGraph|isHexadecimalDigit|isinf|isListening|isLowerCase|isnan|isPIN|isPressed|isPrintable|isPunct|isSpace|isUpperCase|isValid|isWhitespace|keyboardRead|keyPressed|keyReleased|knobRead|lastIndexOf|ldexp|ldexpf|leftToRight|length|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|log|Log|log10|log10f|logf|long|lowByte|LowByte|lrint|lrintf|lround|lroundf|macAddress|maintain|map|Map|Max|max|messageAvailable|Micros|micros|millis|Millis|Min|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|NoInterrupts|noListenOnLocalhost|noStroke|noTone|NoTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|PinMode|pinMode|playFile|playMelody|point|pointTo|position|Pow|pow|powf|prepare|press|print|printFirmwareVersion|println|printVersion|process|processInput|PulseIn|pulseIn|pulseInLong|PulseInLong|put|radians|random|Random|randomSeed|RandomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|replace|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|round|roundf|RSSI|run|runAsynchronously|running|runShellCommand|runShellCommandAsynchronously|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|Serial_Available|Serial_Begin|Serial_End|Serial_Flush|Serial_Peek|Serial_Print|Serial_Println|Serial_Read|serialEvent|setBand|setBitOrder|setCharAt|setClockDivider|setCursor|setDataMode|setDNS|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|ShiftIn|shiftIn|ShiftOut|shiftOut|shutdown|signbit|sin|Sin|sinf|sinh|sinhf|size|sizeof|Sq|sq|Sqrt|sqrt|sqrtf|SSID|startLoop|startsWith|step|stop|stroke|subnetMask|substring|switchPIN|tan|Tan|tanf|tanh|tanhf|tempoWrite|text|toCharArray|toInt|toLowerCase|tone|Tone|toUpperCase|transfer|trim|trunc|truncf|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|WiFiServer|word|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRed|writeRGB|yield|Yield)\\b`, NameFunction, nil},\n-\t\t\t// End of: Arduino-specific syntax\n-\t\t\t{Words(``, `\\b`, `inline`, `_inline`, `__inline`, `naked`, `restrict`, `thread`, `typename`), KeywordReserved, nil},\n-\t\t\t{`(__m(128i|128d|128|64))\\b`, KeywordReserved, nil},\n-\t\t\t{Words(`__`, `\\b`, `asm`, `int8`, `based`, `except`, `int16`, `stdcall`, `cdecl`, `fastcall`, `int32`, `declspec`, `finally`, `int64`, `try`, `leave`, `wchar_t`, `w64`, `unaligned`, `raise`, `noop`, `identifier`, `forceinline`, `assume`), KeywordReserved, nil},\n-\t\t\t{`(true|false|NULL)\\b`, NameBuiltin, nil},\n-\t\t\t{`([a-zA-Z_]\\w*)(\\s*)(:)(?!:)`, ByGroups(NameLabel, Text, Punctuation), nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`((?:[\\w*\\s])+?(?:\\s|[*]))([a-zA-Z_]\\w*)(\\s*\\([^;]*?\\))([^;{]*)(\\{)`, ByGroups(UsingSelf(\"root\"), NameFunction, UsingSelf(\"root\"), UsingSelf(\"root\"), Punctuation), Push(\"function\")},\n-\t\t\t{`((?:[\\w*\\s])+?(?:\\s|[*]))([a-zA-Z_]\\w*)(\\s*\\([^;]*?\\))([^;]*)(;)`, ByGroups(UsingSelf(\"root\"), NameFunction, UsingSelf(\"root\"), UsingSelf(\"root\"), Punctuation), nil},\n-\t\t\tDefault(Push(\"statement\")),\n-\t\t\t{Words(`__`, `\\b`, `virtual_inheritance`, `uuidof`, `super`, `single_inheritance`, `multiple_inheritance`, `interface`, `event`), KeywordReserved, nil},\n-\t\t\t{`__(offload|blockingoffload|outer)\\b`, KeywordPseudo, nil},\n-\t\t},\n-\t\t\"classname\": {\n-\t\t\t{`[a-zA-Z_]\\w*`, NameClass, Pop(1)},\n-\t\t\t{`\\s*(?=>)`, Text, Pop(1)},\n-\t\t},\n-\t\t\"whitespace\": {\n-\t\t\t{`^#if\\s+0`, CommentPreproc, Push(\"if0\")},\n-\t\t\t{`^#`, CommentPreproc, Push(\"macro\")},\n-\t\t\t{`^(\\s*(?:/[*].*?[*]/\\s*)?)(#if\\s+0)`, ByGroups(UsingSelf(\"root\"), CommentPreproc), Push(\"if0\")},\n-\t\t\t{`^(\\s*(?:/[*].*?[*]/\\s*)?)(#)`, ByGroups(UsingSelf(\"root\"), CommentPreproc), Push(\"macro\")},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`//(\\n|[\\w\\W]*?[^\\\\]\\n)`, CommentSingle, nil},\n-\t\t\t{`/(\\\\\\n)?[*][\\w\\W]*?[*](\\\\\\n)?/`, CommentMultiline, nil},\n-\t\t\t{`/(\\\\\\n)?[*][\\w\\W]*`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"statement\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"statements\"),\n-\t\t\t{`[{}]`, Punctuation, nil},\n-\t\t\t{`;`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"function\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"statements\"),\n-\t\t\t{`;`, Punctuation, nil},\n-\t\t\t{`\\{`, Punctuation, Push()},\n-\t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`\\\\([\\\\abfnrtv\"\\']|x[a-fA-F0-9]{2,4}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8}|[0-7]{1,3})`, LiteralStringEscape, nil},\n-\t\t\t{`[^\\\\\"\\n]+`, LiteralString, nil},\n-\t\t\t{`\\\\\\n`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralString, nil},\n-\t\t},\n-\t\t\"macro\": {\n-\t\t\t{`(include)(\\s*(?:/[*].*?[*]/\\s*)?)([^\\n]+)`, ByGroups(CommentPreproc, Text, CommentPreprocFile), nil},\n-\t\t\t{`[^/\\n]+`, CommentPreproc, nil},\n-\t\t\t{`/[*](.|\\n)*?[*]/`, CommentMultiline, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, Pop(1)},\n-\t\t\t{`/`, CommentPreproc, nil},\n-\t\t\t{`(?<=\\\\)\\n`, CommentPreproc, nil},\n-\t\t\t{`\\n`, CommentPreproc, Pop(1)},\n-\t\t},\n-\t\t\"if0\": {\n-\t\t\t{`^\\s*#if.*?(?<!\\\\)\\n`, CommentPreproc, Push()},\n-\t\t\t{`^\\s*#el(?:se|if).*\\n`, CommentPreproc, Pop(1)},\n-\t\t\t{`^\\s*#endif.*?(?<!\\\\)\\n`, CommentPreproc, Pop(1)},\n-\t\t\t{`.*?\\n`, Comment, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "a2bdceebb4063f048c896b68b954d9c98eba32b0",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/armasm.go",
      "status": "removed",
      "additions": 0,
      "deletions": 72,
      "changes": 72,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Farmasm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Farmasm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Farmasm.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,72 +0,0 @@\n-package a\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-var ArmAsm = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"ArmAsm\",\n-\t\tAliases:   []string{\"armasm\"},\n-\t\tEnsureNL:  true,\n-\t\tFilenames: []string{\"*.s\", \"*.S\"},\n-\t\tMimeTypes: []string{\"text/x-armasm\", \"text/x-asm\"},\n-\t},\n-\tarmasmRules,\n-))\n-\n-func armasmRules() Rules {\n-\treturn Rules{\n-\t\t\"commentsandwhitespace\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`[@;].*?\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"literal\": {\n-\t\t\t// Binary\n-\t\t\t{`0b[01]+`, NumberBin, Pop(1)},\n-\t\t\t// Hex\n-\t\t\t{`0x\\w{1,8}`, NumberHex, Pop(1)},\n-\t\t\t// Octal\n-\t\t\t{`0\\d+`, NumberOct, Pop(1)},\n-\t\t\t// Float\n-\t\t\t{`\\d+?\\.\\d+?`, NumberFloat, Pop(1)},\n-\t\t\t// Integer\n-\t\t\t{`\\d+`, NumberInteger, Pop(1)},\n-\t\t\t// String\n-\t\t\t{`(\")(.+)(\")`, ByGroups(Punctuation, StringDouble, Punctuation), Pop(1)},\n-\t\t\t// Char\n-\t\t\t{`(')(.{1}|\\\\.{1})(')`, ByGroups(Punctuation, StringChar, Punctuation), Pop(1)},\n-\t\t},\n-\t\t\"opcode\": {\n-\t\t\t// Escape at line end\n-\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t\t// Comment\n-\t\t\t{`(@|;).*\\n`, CommentSingle, Pop(1)},\n-\t\t\t// Whitespace\n-\t\t\t{`(\\s+|,)`, Text, nil},\n-\t\t\t// Register by number\n-\t\t\t{`[rapcfxwbhsdqv]\\d{1,2}`, NameClass, nil},\n-\t\t\t// Address by hex\n-\t\t\t{`=0x\\w+`, ByGroups(Text, NameLabel), nil},\n-\t\t\t// Pseudo address by label\n-\t\t\t{`(=)(\\w+)`, ByGroups(Text, NameLabel), nil},\n-\t\t\t// Immediate\n-\t\t\t{`#`, Text, Push(\"literal\")},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\tInclude(\"commentsandwhitespace\"),\n-\t\t\t// Directive with optional param\n-\t\t\t{`(\\.\\w+)([ \\t]+\\w+\\s+?)?`, ByGroups(KeywordNamespace, NameLabel), nil},\n-\t\t\t// Label with data\n-\t\t\t{`(\\w+)(:)(\\s+\\.\\w+\\s+)`, ByGroups(NameLabel, Punctuation, KeywordNamespace), Push(\"literal\")},\n-\t\t\t// Label\n-\t\t\t{`(\\w+)(:)`, ByGroups(NameLabel, Punctuation), nil},\n-\t\t\t// Syscall Op\n-\t\t\t{`svc\\s+\\w+`, NameNamespace, nil},\n-\t\t\t// Opcode\n-\t\t\t{`[a-zA-Z]+`, Text, Push(\"opcode\")},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "95afab2fed2c510fedaf5eb014addbba9e9a452e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/a/awk.go",
      "status": "removed",
      "additions": 0,
      "deletions": 52,
      "changes": 52,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fawk.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fawk.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fa%2Fawk.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,52 +0,0 @@\n-package a\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Awk lexer.\n-var Awk = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Awk\",\n-\t\tAliases:   []string{\"awk\", \"gawk\", \"mawk\", \"nawk\"},\n-\t\tFilenames: []string{\"*.awk\"},\n-\t\tMimeTypes: []string{\"application/x-awk\"},\n-\t},\n-\tawkRules,\n-))\n-\n-func awkRules() Rules {\n-\treturn Rules{\n-\t\t\"commentsandwhitespace\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`#.*$`, CommentSingle, nil},\n-\t\t},\n-\t\t\"slashstartsregex\": {\n-\t\t\tInclude(\"commentsandwhitespace\"),\n-\t\t\t{`/(\\\\.|[^[/\\\\\\n]|\\[(\\\\.|[^\\]\\\\\\n])*])+/\\B`, LiteralStringRegex, Pop(1)},\n-\t\t\t{`(?=/)`, Text, Push(\"#pop\", \"badregex\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"badregex\": {\n-\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\t{`^(?=\\s|/)`, Text, Push(\"slashstartsregex\")},\n-\t\t\tInclude(\"commentsandwhitespace\"),\n-\t\t\t{`\\+\\+|--|\\|\\||&&|in\\b|\\$|!?~|\\|&|(\\*\\*|[-<>+*%\\^/!=|])=?`, Operator, Push(\"slashstartsregex\")},\n-\t\t\t{`[{(\\[;,]`, Punctuation, Push(\"slashstartsregex\")},\n-\t\t\t{`[})\\].]`, Punctuation, nil},\n-\t\t\t{`(break|continue|do|while|exit|for|if|else|return|switch|case|default)\\b`, Keyword, Push(\"slashstartsregex\")},\n-\t\t\t{`function\\b`, KeywordDeclaration, Push(\"slashstartsregex\")},\n-\t\t\t{`(atan2|cos|exp|int|log|rand|sin|sqrt|srand|gensub|gsub|index|length|match|split|patsplit|sprintf|sub|substr|tolower|toupper|close|fflush|getline|next(file)|print|printf|strftime|systime|mktime|delete|system|strtonum|and|compl|lshift|or|rshift|asorti?|isarray|bindtextdomain|dcn?gettext|@(include|load|namespace))\\b`, KeywordReserved, nil},\n-\t\t\t{`(ARGC|ARGIND|ARGV|BEGIN(FILE)?|BINMODE|CONVFMT|ENVIRON|END(FILE)?|ERRNO|FIELDWIDTHS|FILENAME|FNR|FPAT|FS|IGNORECASE|LINT|NF|NR|OFMT|OFS|ORS|PROCINFO|RLENGTH|RS|RSTART|RT|SUBSEP|TEXTDOMAIN)\\b`, NameBuiltin, nil},\n-\t\t\t{`[@$a-zA-Z_]\\w*`, NameOther, nil},\n-\t\t\t{`[0-9][0-9]*\\.[0-9]+([eE][0-9]+)?[fd]?`, LiteralNumberFloat, nil},\n-\t\t\t{`0x[0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "d8916d0e6b0e9ad05139bec78d9234b26c1ff77f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/b/ballerina.go",
      "status": "removed",
      "additions": 0,
      "deletions": 50,
      "changes": 50,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fballerina.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fballerina.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fballerina.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,50 +0,0 @@\n-package b\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Ballerina lexer.\n-var Ballerina = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Ballerina\",\n-\t\tAliases:   []string{\"ballerina\"},\n-\t\tFilenames: []string{\"*.bal\"},\n-\t\tMimeTypes: []string{\"text/x-ballerina\"},\n-\t\tDotAll:    true,\n-\t},\n-\tballerinaRules,\n-))\n-\n-func ballerinaRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n-\t\t\t{`(break|catch|continue|done|else|finally|foreach|forever|fork|if|lock|match|return|throw|transaction|try|while)\\b`, Keyword, nil},\n-\t\t\t{`((?:(?:[^\\W\\d]|\\$)[\\w.\\[\\]$<>]*\\s+)+?)((?:[^\\W\\d]|\\$)[\\w$]*)(\\s*)(\\()`, ByGroups(UsingSelf(\"root\"), NameFunction, Text, Operator), nil},\n-\t\t\t{`@[^\\W\\d][\\w.]*`, NameDecorator, nil},\n-\t\t\t{`(annotation|bind|but|endpoint|error|function|object|private|public|returns|service|type|var|with|worker)\\b`, KeywordDeclaration, nil},\n-\t\t\t{`(boolean|byte|decimal|float|int|json|map|nil|record|string|table|xml)\\b`, KeywordType, nil},\n-\t\t\t{`(true|false|null)\\b`, KeywordConstant, nil},\n-\t\t\t{`(import)(\\s+)`, ByGroups(KeywordNamespace, Text), Push(\"import\")},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`'\\\\.'|'[^\\\\]'|'\\\\u[0-9a-fA-F]{4}'`, LiteralStringChar, nil},\n-\t\t\t{`(\\.)((?:[^\\W\\d]|\\$)[\\w$]*)`, ByGroups(Operator, NameAttribute), nil},\n-\t\t\t{`^\\s*([^\\W\\d]|\\$)[\\w$]*:`, NameLabel, nil},\n-\t\t\t{`([^\\W\\d]|\\$)[\\w$]*`, Name, nil},\n-\t\t\t{`([0-9][0-9_]*\\.([0-9][0-9_]*)?|\\.[0-9][0-9_]*)([eE][+\\-]?[0-9][0-9_]*)?[fFdD]?|[0-9][eE][+\\-]?[0-9][0-9_]*[fFdD]?|[0-9]([eE][+\\-]?[0-9][0-9_]*)?[fFdD]|0[xX]([0-9a-fA-F][0-9a-fA-F_]*\\.?|([0-9a-fA-F][0-9a-fA-F_]*)?\\.[0-9a-fA-F][0-9a-fA-F_]*)[pP][+\\-]?[0-9][0-9_]*[fFdD]?`, LiteralNumberFloat, nil},\n-\t\t\t{`0[xX][0-9a-fA-F][0-9a-fA-F_]*[lL]?`, LiteralNumberHex, nil},\n-\t\t\t{`0[bB][01][01_]*[lL]?`, LiteralNumberBin, nil},\n-\t\t\t{`0[0-7_]+[lL]?`, LiteralNumberOct, nil},\n-\t\t\t{`0|[1-9][0-9_]*[lL]?`, LiteralNumberInteger, nil},\n-\t\t\t{`[~^*!%&\\[\\](){}<>|+=:;,./?-]`, Operator, nil},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t},\n-\t\t\"import\": {\n-\t\t\t{`[\\w.]+`, NameNamespace, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "34b1e222d3bc84e86e3dc86e06329fcb6b69c2d3",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/b/bash.go",
      "status": "removed",
      "additions": 0,
      "deletions": 100,
      "changes": 100,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fbash.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fbash.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fbash.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,100 +0,0 @@\n-package b\n-\n-import (\n-\t\"regexp\"\n-\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// TODO(moorereason): can this be factored away?\n-var bashAnalyserRe = regexp.MustCompile(`(?m)^#!.*/bin/(?:env |)(?:bash|zsh|sh|ksh)`)\n-\n-// Bash lexer.\n-var Bash = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Bash\",\n-\t\tAliases:   []string{\"bash\", \"sh\", \"ksh\", \"zsh\", \"shell\"},\n-\t\tFilenames: []string{\"*.sh\", \"*.ksh\", \"*.bash\", \"*.ebuild\", \"*.eclass\", \".env\", \"*.env\", \"*.exheres-0\", \"*.exlib\", \"*.zsh\", \"*.zshrc\", \".bashrc\", \"bashrc\", \".bash_*\", \"bash_*\", \"zshrc\", \".zshrc\", \"PKGBUILD\"},\n-\t\tMimeTypes: []string{\"application/x-sh\", \"application/x-shellscript\"},\n-\t},\n-\tbashRules,\n-).SetAnalyser(func(text string) float32 {\n-\tif bashAnalyserRe.FindString(text) != \"\" {\n-\t\treturn 1.0\n-\t}\n-\treturn 0.0\n-}))\n-\n-func bashRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"basic\"),\n-\t\t\t{\"`\", LiteralStringBacktick, Push(\"backticks\")},\n-\t\t\tInclude(\"data\"),\n-\t\t\tInclude(\"interp\"),\n-\t\t},\n-\t\t\"interp\": {\n-\t\t\t{`\\$\\(\\(`, Keyword, Push(\"math\")},\n-\t\t\t{`\\$\\(`, Keyword, Push(\"paren\")},\n-\t\t\t{`\\$\\{#?`, LiteralStringInterpol, Push(\"curly\")},\n-\t\t\t{`\\$[a-zA-Z_]\\w*`, NameVariable, nil},\n-\t\t\t{`\\$(?:\\d+|[#$?!_*@-])`, NameVariable, nil},\n-\t\t\t{`\\$`, Text, nil},\n-\t\t},\n-\t\t\"basic\": {\n-\t\t\t{`\\b(if|fi|else|while|do|done|for|then|return|function|case|select|continue|until|esac|elif)(\\s*)\\b`, ByGroups(Keyword, Text), nil},\n-\t\t\t{\"\\\\b(alias|bg|bind|break|builtin|caller|cd|command|compgen|complete|declare|dirs|disown|echo|enable|eval|exec|exit|export|false|fc|fg|getopts|hash|help|history|jobs|kill|let|local|logout|popd|printf|pushd|pwd|read|readonly|set|shift|shopt|source|suspend|test|time|times|trap|true|type|typeset|ulimit|umask|unalias|unset|wait)(?=[\\\\s)`])\", NameBuiltin, nil},\n-\t\t\t{`\\A#!.+\\n`, CommentPreproc, nil},\n-\t\t\t{`#.*(\\S|$)`, CommentSingle, nil},\n-\t\t\t{`\\\\[\\w\\W]`, LiteralStringEscape, nil},\n-\t\t\t{`(\\b\\w+)(\\s*)(\\+?=)`, ByGroups(NameVariable, Text, Operator), nil},\n-\t\t\t{`[\\[\\]{}()=]`, Operator, nil},\n-\t\t\t{`<<<`, Operator, nil},\n-\t\t\t{`<<-?\\s*(\\'?)\\\\?(\\w+)[\\w\\W]+?\\2`, LiteralString, nil},\n-\t\t\t{`&&|\\|\\|`, Operator, nil},\n-\t\t},\n-\t\t\"data\": {\n-\t\t\t{`(?s)\\$?\"(\\\\\\\\|\\\\[0-7]+|\\\\.|[^\"\\\\$])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n-\t\t\t{`(?s)\\$'(\\\\\\\\|\\\\[0-7]+|\\\\.|[^'\\\\])*'`, LiteralStringSingle, nil},\n-\t\t\t{`(?s)'.*?'`, LiteralStringSingle, nil},\n-\t\t\t{`;`, Punctuation, nil},\n-\t\t\t{`&`, Punctuation, nil},\n-\t\t\t{`\\|`, Punctuation, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\d+(?= |$)`, LiteralNumber, nil},\n-\t\t\t{\"[^=\\\\s\\\\[\\\\]{}()$\\\"\\\\'`\\\\\\\\<&|;]+\", Text, nil},\n-\t\t\t{`<`, Text, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t\t{`(?s)(\\\\\\\\|\\\\[0-7]+|\\\\.|[^\"\\\\$])+`, LiteralStringDouble, nil},\n-\t\t\tInclude(\"interp\"),\n-\t\t},\n-\t\t\"curly\": {\n-\t\t\t{`\\}`, LiteralStringInterpol, Pop(1)},\n-\t\t\t{`:-`, Keyword, nil},\n-\t\t\t{`\\w+`, NameVariable, nil},\n-\t\t\t{\"[^}:\\\"\\\\'`$\\\\\\\\]+\", Punctuation, nil},\n-\t\t\t{`:`, Punctuation, nil},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"paren\": {\n-\t\t\t{`\\)`, Keyword, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"math\": {\n-\t\t\t{`\\)\\)`, Keyword, Pop(1)},\n-\t\t\t{`[-+*/%^|&]|\\*\\*|\\|\\|`, Operator, nil},\n-\t\t\t{`\\d+#\\d+`, LiteralNumber, nil},\n-\t\t\t{`\\d+#(?! )`, LiteralNumber, nil},\n-\t\t\t{`\\d+`, LiteralNumber, nil},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"backticks\": {\n-\t\t\t{\"`\", LiteralStringBacktick, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "f7a86776e5a9a1d160733110b3d36f600198fbc7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/b/batch.go",
      "status": "removed",
      "additions": 0,
      "deletions": 198,
      "changes": 198,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fbatch.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fbatch.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fbatch.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,198 +0,0 @@\n-package b\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Batchfile lexer.\n-var Batchfile = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"Batchfile\",\n-\t\tAliases:         []string{\"bat\", \"batch\", \"dosbatch\", \"winbatch\"},\n-\t\tFilenames:       []string{\"*.bat\", \"*.cmd\"},\n-\t\tMimeTypes:       []string{\"application/x-dos-batch\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tbatchfileRules,\n-))\n-\n-func batchfileRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\)((?=\\()|(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a]))(?:(?:[^\\n\\x1a^]|\\^[\\n\\x1a]?[\\w\\W])*)`, CommentSingle, nil},\n-\t\t\t{`(?=((?:(?<=^[^:])|^[^:]?)[\\t\\v\\f\\r ,;=\\xa0]*)(:))`, Text, Push(\"follow\")},\n-\t\t\t{`(?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)`, UsingSelf(\"text\"), nil},\n-\t\t\tInclude(\"redirect\"),\n-\t\t\t{`[\\n\\x1a]+`, Text, nil},\n-\t\t\t{`\\(`, Punctuation, Push(\"root/compound\")},\n-\t\t\t{`@+`, Punctuation, nil},\n-\t\t\t{`((?:for|if|rem)(?:(?=(?:\\^[\\n\\x1a]?)?/)|(?:(?!\\^)|(?<=m))(?:(?=\\()|(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a]))))((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)?(?:(?:(?:\\^[\\n\\x1a]?)?[^\"\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0])+)?(?:\\^[\\n\\x1a]?)?/(?:\\^[\\n\\x1a]?)?\\?)`, ByGroups(Keyword, UsingSelf(\"text\")), Push(\"follow\")},\n-\t\t\t{`(goto(?=(?:\\^[\\n\\x1a]?)?[\\t\\v\\f\\r ,;=\\xa0+./:[\\\\\\]]|[\\n\\x1a&<>|(]))((?:(?:\"[^\\n\\x1a\"]*(?:\"|(?=[\\n\\x1a])))|(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))|[^\"%\\n\\x1a&<>|])*(?:\\^[\\n\\x1a]?)?/(?:\\^[\\n\\x1a]?)?\\?(?:(?:\"[^\\n\\x1a\"]*(?:\"|(?=[\\n\\x1a])))|(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))|[^\"%\\n\\x1a&<>|])*)`, ByGroups(Keyword, UsingSelf(\"text\")), Push(\"follow\")},\n-\t\t\t{Words(``, `(?=(?:\\^[\\n\\x1a]?)?[\\t\\v\\f\\r ,;=\\xa0+./:[\\\\\\]]|[\\n\\x1a&<>|(])`, `assoc`, `break`, `cd`, `chdir`, `cls`, `color`, `copy`, `date`, `del`, `dir`, `dpath`, `echo`, `endlocal`, `erase`, `exit`, `ftype`, `keys`, `md`, `mkdir`, `mklink`, `move`, `path`, `pause`, `popd`, `prompt`, `pushd`, `rd`, `ren`, `rename`, `rmdir`, `setlocal`, `shift`, `start`, `time`, `title`, `type`, `ver`, `verify`, `vol`), Keyword, Push(\"follow\")},\n-\t\t\t{`(call)((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)?)(:)`, ByGroups(Keyword, UsingSelf(\"text\"), Punctuation), Push(\"call\")},\n-\t\t\t{`call(?=(?:\\^[\\n\\x1a]?)?[\\t\\v\\f\\r ,;=\\xa0+./:[\\\\\\]]|[\\n\\x1a&<>|(])`, Keyword, nil},\n-\t\t\t{`(for(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a])(?!\\^))((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+))(/f(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a]))`, ByGroups(Keyword, UsingSelf(\"text\"), Keyword), Push(\"for/f\", \"for\")},\n-\t\t\t{`(for(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a])(?!\\^))((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+))(/l(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a]))`, ByGroups(Keyword, UsingSelf(\"text\"), Keyword), Push(\"for/l\", \"for\")},\n-\t\t\t{`for(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a])(?!\\^)`, Keyword, Push(\"for2\", \"for\")},\n-\t\t\t{`(goto(?=(?:\\^[\\n\\x1a]?)?[\\t\\v\\f\\r ,;=\\xa0+./:[\\\\\\]]|[\\n\\x1a&<>|(]))((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)?)(:?)`, ByGroups(Keyword, UsingSelf(\"text\"), Punctuation), Push(\"label\")},\n-\t\t\t{`(if(?:(?=\\()|(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a]))(?!\\^))((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)?)((?:/i(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a]))?)((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)?)((?:not(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a]))?)((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)?)`, ByGroups(Keyword, UsingSelf(\"text\"), Keyword, UsingSelf(\"text\"), Keyword, UsingSelf(\"text\")), Push(\"(?\", \"if\")},\n-\t\t\t{`rem(((?=\\()|(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a]))(?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)?(?:[&<>|]+|(?:(?:\"[^\\n\\x1a\"]*(?:\"|(?=[\\n\\x1a])))|(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))|(?:(?:(?:\\^[\\n\\x1a]?)?[^\"\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0])+))+)?.*|(?=(?:\\^[\\n\\x1a]?)?[\\t\\v\\f\\r ,;=\\xa0+./:[\\\\\\]]|[\\n\\x1a&<>|(])(?:(?:[^\\n\\x1a^]|\\^[\\n\\x1a]?[\\w\\W])*))`, CommentSingle, Push(\"follow\")},\n-\t\t\t{`(set(?=(?:\\^[\\n\\x1a]?)?[\\t\\v\\f\\r ,;=\\xa0+./:[\\\\\\]]|[\\n\\x1a&<>|(]))((?:(?:\\^[\\n\\x1a]?)?[^\\S\\n])*)(/a)`, ByGroups(Keyword, UsingSelf(\"text\"), Keyword), Push(\"arithmetic\")},\n-\t\t\t{`(set(?=(?:\\^[\\n\\x1a]?)?[\\t\\v\\f\\r ,;=\\xa0+./:[\\\\\\]]|[\\n\\x1a&<>|(]))((?:(?:\\^[\\n\\x1a]?)?[^\\S\\n])*)((?:/p)?)((?:(?:\\^[\\n\\x1a]?)?[^\\S\\n])*)((?:(?:(?:\\^[\\n\\x1a]?)?[^\"\\n\\x1a&<>|^=]|\\^[\\n\\x1a]?[^\"=])+)?)((?:(?:\\^[\\n\\x1a]?)?=)?)`, ByGroups(Keyword, UsingSelf(\"text\"), Keyword, UsingSelf(\"text\"), UsingSelf(\"variable\"), Punctuation), Push(\"follow\")},\n-\t\t\tDefault(Push(\"follow\")),\n-\t\t},\n-\t\t\"follow\": {\n-\t\t\t{`((?:(?<=^[^:])|^[^:]?)[\\t\\v\\f\\r ,;=\\xa0]*)(:)([\\t\\v\\f\\r ,;=\\xa0]*)((?:(?:[^\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0+:^]|\\^[\\n\\x1a]?[\\w\\W])*))(.*)`, ByGroups(Text, Punctuation, Text, NameLabel, CommentSingle), nil},\n-\t\t\tInclude(\"redirect\"),\n-\t\t\t{`(?=[\\n\\x1a])`, Text, Pop(1)},\n-\t\t\t{`\\|\\|?|&&?`, Punctuation, Pop(1)},\n-\t\t\tInclude(\"text\"),\n-\t\t},\n-\t\t\"arithmetic\": {\n-\t\t\t{`0[0-7]+`, LiteralNumberOct, nil},\n-\t\t\t{`0x[\\da-f]+`, LiteralNumberHex, nil},\n-\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`[(),]+`, Punctuation, nil},\n-\t\t\t{`([=+\\-*/!~]|%|\\^\\^)+`, Operator, nil},\n-\t\t\t{`((?:\"[^\\n\\x1a\"]*(?:\"|(?=[\\n\\x1a])))|(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))|(\\^[\\n\\x1a]?)?[^()=+\\-*/!~%^\"\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0]|\\^[\\n\\x1a\\t\\v\\f\\r ,;=\\xa0]?[\\w\\W])+`, UsingSelf(\"variable\"), nil},\n-\t\t\t{`(?=[\\x00|&])`, Text, Pop(1)},\n-\t\t\tInclude(\"follow\"),\n-\t\t},\n-\t\t\"call\": {\n-\t\t\t{`(:?)((?:(?:[^\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0+:^]|\\^[\\n\\x1a]?[\\w\\W])*))`, ByGroups(Punctuation, NameLabel), Pop(1)},\n-\t\t},\n-\t\t\"label\": {\n-\t\t\t{`((?:(?:[^\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0+:^]|\\^[\\n\\x1a]?[\\w\\W])*)?)((?:(?:\"[^\\n\\x1a\"]*(?:\"|(?=[\\n\\x1a])))|(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))|\\^[\\n\\x1a]?[\\w\\W]|[^\"%^\\n\\x1a&<>|])*)`, ByGroups(NameLabel, CommentSingle), Pop(1)},\n-\t\t},\n-\t\t\"redirect\": {\n-\t\t\t{`((?:(?<=[\\n\\x1a\\t\\v\\f\\r ,;=\\xa0])\\d)?)(>>?&|<&)([\\n\\x1a\\t\\v\\f\\r ,;=\\xa0]*)(\\d)`, ByGroups(LiteralNumberInteger, Punctuation, Text, LiteralNumberInteger), nil},\n-\t\t\t{`((?:(?<=[\\n\\x1a\\t\\v\\f\\r ,;=\\xa0])(?<!\\^[\\n\\x1a])\\d)?)(>>?|<)((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)?(?:[&<>|]+|(?:(?:\"[^\\n\\x1a\"]*(?:\"|(?=[\\n\\x1a])))|(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))|(?:(?:(?:\\^[\\n\\x1a]?)?[^\"\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0])+))+))`, ByGroups(LiteralNumberInteger, Punctuation, UsingSelf(\"text\")), nil},\n-\t\t},\n-\t\t\"root/compound\": {\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t\t{`(?=((?:(?<=^[^:])|^[^:]?)[\\t\\v\\f\\r ,;=\\xa0]*)(:))`, Text, Push(\"follow/compound\")},\n-\t\t\t{`(?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)`, UsingSelf(\"text\"), nil},\n-\t\t\tInclude(\"redirect/compound\"),\n-\t\t\t{`[\\n\\x1a]+`, Text, nil},\n-\t\t\t{`\\(`, Punctuation, Push(\"root/compound\")},\n-\t\t\t{`@+`, Punctuation, nil},\n-\t\t\t{`((?:for|if|rem)(?:(?=(?:\\^[\\n\\x1a]?)?/)|(?:(?!\\^)|(?<=m))(?:(?=\\()|(?:(?=\\))|(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a])))))((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)?(?:(?:(?:\\^[\\n\\x1a]?)?[^\"\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0)])+)?(?:\\^[\\n\\x1a]?)?/(?:\\^[\\n\\x1a]?)?\\?)`, ByGroups(Keyword, UsingSelf(\"text\")), Push(\"follow/compound\")},\n-\t\t\t{`(goto(?:(?=\\))|(?=(?:\\^[\\n\\x1a]?)?[\\t\\v\\f\\r ,;=\\xa0+./:[\\\\\\]]|[\\n\\x1a&<>|(])))((?:(?:\"[^\\n\\x1a\"]*(?:\"|(?=[\\n\\x1a])))|(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))|[^\"%\\n\\x1a&<>|)])*(?:\\^[\\n\\x1a]?)?/(?:\\^[\\n\\x1a]?)?\\?(?:(?:\"[^\\n\\x1a\"]*(?:\"|(?=[\\n\\x1a])))|(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))|[^\"%\\n\\x1a&<>|)])*)`, ByGroups(Keyword, UsingSelf(\"text\")), Push(\"follow/compound\")},\n-\t\t\t{Words(``, `(?:(?=\\))|(?=(?:\\^[\\n\\x1a]?)?[\\t\\v\\f\\r ,;=\\xa0+./:[\\\\\\]]|[\\n\\x1a&<>|(]))`, `assoc`, `break`, `cd`, `chdir`, `cls`, `color`, `copy`, `date`, `del`, `dir`, `dpath`, `echo`, `endlocal`, `erase`, `exit`, `ftype`, `keys`, `md`, `mkdir`, `mklink`, `move`, `path`, `pause`, `popd`, `prompt`, `pushd`, `rd`, `ren`, `rename`, `rmdir`, `setlocal`, `shift`, `start`, `time`, `title`, `type`, `ver`, `verify`, `vol`), Keyword, Push(\"follow/compound\")},\n-\t\t\t{`(call)((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)?)(:)`, ByGroups(Keyword, UsingSelf(\"text\"), Punctuation), Push(\"call/compound\")},\n-\t\t\t{`call(?:(?=\\))|(?=(?:\\^[\\n\\x1a]?)?[\\t\\v\\f\\r ,;=\\xa0+./:[\\\\\\]]|[\\n\\x1a&<>|(]))`, Keyword, nil},\n-\t\t\t{`(for(?:(?=\\))|(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a]))(?!\\^))((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+))(/f(?:(?=\\))|(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a])))`, ByGroups(Keyword, UsingSelf(\"text\"), Keyword), Push(\"for/f\", \"for\")},\n-\t\t\t{`(for(?:(?=\\))|(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a]))(?!\\^))((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+))(/l(?:(?=\\))|(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a])))`, ByGroups(Keyword, UsingSelf(\"text\"), Keyword), Push(\"for/l\", \"for\")},\n-\t\t\t{`for(?:(?=\\))|(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a]))(?!\\^)`, Keyword, Push(\"for2\", \"for\")},\n-\t\t\t{`(goto(?:(?=\\))|(?=(?:\\^[\\n\\x1a]?)?[\\t\\v\\f\\r ,;=\\xa0+./:[\\\\\\]]|[\\n\\x1a&<>|(])))((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)?)(:?)`, ByGroups(Keyword, UsingSelf(\"text\"), Punctuation), Push(\"label/compound\")},\n-\t\t\t{`(if(?:(?=\\()|(?:(?=\\))|(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a])))(?!\\^))((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)?)((?:/i(?:(?=\\))|(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a])))?)((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)?)((?:not(?:(?=\\))|(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a])))?)((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)?)`, ByGroups(Keyword, UsingSelf(\"text\"), Keyword, UsingSelf(\"text\"), Keyword, UsingSelf(\"text\")), Push(\"(?\", \"if\")},\n-\t\t\t{`rem(((?=\\()|(?:(?=\\))|(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a])))(?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)?(?:[&<>|]+|(?:(?:\"[^\\n\\x1a\"]*(?:\"|(?=[\\n\\x1a])))|(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))|(?:(?:(?:\\^[\\n\\x1a]?)?[^\"\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0])+))+)?.*|(?:(?=\\))|(?=(?:\\^[\\n\\x1a]?)?[\\t\\v\\f\\r ,;=\\xa0+./:[\\\\\\]]|[\\n\\x1a&<>|(]))(?:(?:[^\\n\\x1a^)]|\\^[\\n\\x1a]?[^)])*))`, CommentSingle, Push(\"follow/compound\")},\n-\t\t\t{`(set(?:(?=\\))|(?=(?:\\^[\\n\\x1a]?)?[\\t\\v\\f\\r ,;=\\xa0+./:[\\\\\\]]|[\\n\\x1a&<>|(])))((?:(?:\\^[\\n\\x1a]?)?[^\\S\\n])*)(/a)`, ByGroups(Keyword, UsingSelf(\"text\"), Keyword), Push(\"arithmetic/compound\")},\n-\t\t\t{`(set(?:(?=\\))|(?=(?:\\^[\\n\\x1a]?)?[\\t\\v\\f\\r ,;=\\xa0+./:[\\\\\\]]|[\\n\\x1a&<>|(])))((?:(?:\\^[\\n\\x1a]?)?[^\\S\\n])*)((?:/p)?)((?:(?:\\^[\\n\\x1a]?)?[^\\S\\n])*)((?:(?:(?:\\^[\\n\\x1a]?)?[^\"\\n\\x1a&<>|^=)]|\\^[\\n\\x1a]?[^\"=])+)?)((?:(?:\\^[\\n\\x1a]?)?=)?)`, ByGroups(Keyword, UsingSelf(\"text\"), Keyword, UsingSelf(\"text\"), UsingSelf(\"variable\"), Punctuation), Push(\"follow/compound\")},\n-\t\t\tDefault(Push(\"follow/compound\")),\n-\t\t},\n-\t\t\"follow/compound\": {\n-\t\t\t{`(?=\\))`, Text, Pop(1)},\n-\t\t\t{`((?:(?<=^[^:])|^[^:]?)[\\t\\v\\f\\r ,;=\\xa0]*)(:)([\\t\\v\\f\\r ,;=\\xa0]*)((?:(?:[^\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0+:^)]|\\^[\\n\\x1a]?[^)])*))(.*)`, ByGroups(Text, Punctuation, Text, NameLabel, CommentSingle), nil},\n-\t\t\tInclude(\"redirect/compound\"),\n-\t\t\t{`(?=[\\n\\x1a])`, Text, Pop(1)},\n-\t\t\t{`\\|\\|?|&&?`, Punctuation, Pop(1)},\n-\t\t\tInclude(\"text\"),\n-\t\t},\n-\t\t\"arithmetic/compound\": {\n-\t\t\t{`(?=\\))`, Text, Pop(1)},\n-\t\t\t{`0[0-7]+`, LiteralNumberOct, nil},\n-\t\t\t{`0x[\\da-f]+`, LiteralNumberHex, nil},\n-\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`[(),]+`, Punctuation, nil},\n-\t\t\t{`([=+\\-*/!~]|%|\\^\\^)+`, Operator, nil},\n-\t\t\t{`((?:\"[^\\n\\x1a\"]*(?:\"|(?=[\\n\\x1a])))|(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))|(\\^[\\n\\x1a]?)?[^()=+\\-*/!~%^\"\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0]|\\^[\\n\\x1a\\t\\v\\f\\r ,;=\\xa0]?[^)])+`, UsingSelf(\"variable\"), nil},\n-\t\t\t{`(?=[\\x00|&])`, Text, Pop(1)},\n-\t\t\tInclude(\"follow\"),\n-\t\t},\n-\t\t\"call/compound\": {\n-\t\t\t{`(?=\\))`, Text, Pop(1)},\n-\t\t\t{`(:?)((?:(?:[^\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0+:^)]|\\^[\\n\\x1a]?[^)])*))`, ByGroups(Punctuation, NameLabel), Pop(1)},\n-\t\t},\n-\t\t\"label/compound\": {\n-\t\t\t{`(?=\\))`, Text, Pop(1)},\n-\t\t\t{`((?:(?:[^\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0+:^)]|\\^[\\n\\x1a]?[^)])*)?)((?:(?:\"[^\\n\\x1a\"]*(?:\"|(?=[\\n\\x1a])))|(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))|\\^[\\n\\x1a]?[^)]|[^\"%^\\n\\x1a&<>|)])*)`, ByGroups(NameLabel, CommentSingle), Pop(1)},\n-\t\t},\n-\t\t\"redirect/compound\": {\n-\t\t\t{`((?:(?<=[\\n\\x1a\\t\\v\\f\\r ,;=\\xa0])\\d)?)(>>?&|<&)([\\n\\x1a\\t\\v\\f\\r ,;=\\xa0]*)(\\d)`, ByGroups(LiteralNumberInteger, Punctuation, Text, LiteralNumberInteger), nil},\n-\t\t\t{`((?:(?<=[\\n\\x1a\\t\\v\\f\\r ,;=\\xa0])(?<!\\^[\\n\\x1a])\\d)?)(>>?|<)((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)?(?:[&<>|]+|(?:(?:\"[^\\n\\x1a\"]*(?:\"|(?=[\\n\\x1a])))|(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))|(?:(?:(?:\\^[\\n\\x1a]?)?[^\"\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0)])+))+))`, ByGroups(LiteralNumberInteger, Punctuation, UsingSelf(\"text\")), nil},\n-\t\t},\n-\t\t\"variable-or-escape\": {\n-\t\t\t{`(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))`, NameVariable, nil},\n-\t\t\t{`%%|\\^[\\n\\x1a]?(\\^!|[\\w\\W])`, LiteralStringEscape, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t\t{`(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))`, NameVariable, nil},\n-\t\t\t{`\\^!|%%`, LiteralStringEscape, nil},\n-\t\t\t{`[^\"%^\\n\\x1a]+|[%^]`, LiteralStringDouble, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"sqstring\": {\n-\t\t\tInclude(\"variable-or-escape\"),\n-\t\t\t{`[^%]+|%`, LiteralStringSingle, nil},\n-\t\t},\n-\t\t\"bqstring\": {\n-\t\t\tInclude(\"variable-or-escape\"),\n-\t\t\t{`[^%]+|%`, LiteralStringBacktick, nil},\n-\t\t},\n-\t\t\"text\": {\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n-\t\t\tInclude(\"variable-or-escape\"),\n-\t\t\t{`[^\"%^\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0\\d)]+|.`, Text, nil},\n-\t\t},\n-\t\t\"variable\": {\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n-\t\t\tInclude(\"variable-or-escape\"),\n-\t\t\t{`[^\"%^\\n\\x1a]+|.`, NameVariable, nil},\n-\t\t},\n-\t\t\"for\": {\n-\t\t\t{`((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+))(in)((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+))(\\()`, ByGroups(UsingSelf(\"text\"), Keyword, UsingSelf(\"text\"), Punctuation), Pop(1)},\n-\t\t\tInclude(\"follow\"),\n-\t\t},\n-\t\t\"for2\": {\n-\t\t\t{`\\)`, Punctuation, nil},\n-\t\t\t{`((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+))(do(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a]))`, ByGroups(UsingSelf(\"text\"), Keyword), Pop(1)},\n-\t\t\t{`[\\n\\x1a]+`, Text, nil},\n-\t\t\tInclude(\"follow\"),\n-\t\t},\n-\t\t\"for/f\": {\n-\t\t\t{`(\")((?:(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))|[^\"])*?\")([\\n\\x1a\\t\\v\\f\\r ,;=\\xa0]*)(\\))`, ByGroups(LiteralStringDouble, UsingSelf(\"string\"), Text, Punctuation), nil},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"#pop\", \"for2\", \"string\")},\n-\t\t\t{`('(?:%%|(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))|[\\w\\W])*?')([\\n\\x1a\\t\\v\\f\\r ,;=\\xa0]*)(\\))`, ByGroups(UsingSelf(\"sqstring\"), Text, Punctuation), nil},\n-\t\t\t{\"(`(?:%%|(?:(?:%(?:\\\\*|(?:~[a-z]*(?:\\\\$[^:]+:)?)?\\\\d|[^%:\\\\n\\\\x1a]+(?::(?:~(?:-?\\\\d+)?(?:,(?:-?\\\\d+)?)?|(?:[^%\\\\n\\\\x1a^]|\\\\^[^%\\\\n\\\\x1a])[^=\\\\n\\\\x1a]*=(?:[^%\\\\n\\\\x1a^]|\\\\^[^%\\\\n\\\\x1a])*)?)?%))|(?:\\\\^?![^!:\\\\n\\\\x1a]+(?::(?:~(?:-?\\\\d+)?(?:,(?:-?\\\\d+)?)?|(?:[^!\\\\n\\\\x1a^]|\\\\^[^!\\\\n\\\\x1a])[^=\\\\n\\\\x1a]*=(?:[^!\\\\n\\\\x1a^]|\\\\^[^!\\\\n\\\\x1a])*)?)?\\\\^?!))|[\\\\w\\\\W])*?`)([\\\\n\\\\x1a\\\\t\\\\v\\\\f\\\\r ,;=\\\\xa0]*)(\\\\))\", ByGroups(UsingSelf(\"bqstring\"), Text, Punctuation), nil},\n-\t\t\tInclude(\"for2\"),\n-\t\t},\n-\t\t\"for/l\": {\n-\t\t\t{`-?\\d+`, LiteralNumberInteger, nil},\n-\t\t\tInclude(\"for2\"),\n-\t\t},\n-\t\t\"if\": {\n-\t\t\t{`((?:cmdextversion|errorlevel)(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a]))((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+))(\\d+)`, ByGroups(Keyword, UsingSelf(\"text\"), LiteralNumberInteger), Pop(1)},\n-\t\t\t{`(defined(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a]))((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+))((?:[&<>|]+|(?:(?:\"[^\\n\\x1a\"]*(?:\"|(?=[\\n\\x1a])))|(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))|(?:(?:(?:\\^[\\n\\x1a]?)?[^\"\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0])+))+))`, ByGroups(Keyword, UsingSelf(\"text\"), UsingSelf(\"variable\")), Pop(1)},\n-\t\t\t{`(exist(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a]))((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)(?:[&<>|]+|(?:(?:\"[^\\n\\x1a\"]*(?:\"|(?=[\\n\\x1a])))|(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))|(?:(?:(?:\\^[\\n\\x1a]?)?[^\"\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0])+))+))`, ByGroups(Keyword, UsingSelf(\"text\")), Pop(1)},\n-\t\t\t{`((?:-?(?:0[0-7]+|0x[\\da-f]+|\\d+)(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a]))(?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+))((?:equ|geq|gtr|leq|lss|neq))((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)(?:-?(?:0[0-7]+|0x[\\da-f]+|\\d+)(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a])))`, ByGroups(UsingSelf(\"arithmetic\"), OperatorWord, UsingSelf(\"arithmetic\")), Pop(1)},\n-\t\t\t{`(?:[&<>|]+|(?:(?:\"[^\\n\\x1a\"]*(?:\"|(?=[\\n\\x1a])))|(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))|(?:(?:(?:\\^[\\n\\x1a]?)?[^\"\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0])+))+)`, UsingSelf(\"text\"), Push(\"#pop\", \"if2\")},\n-\t\t},\n-\t\t\"if2\": {\n-\t\t\t{`((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)?)(==)((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)?(?:[&<>|]+|(?:(?:\"[^\\n\\x1a\"]*(?:\"|(?=[\\n\\x1a])))|(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))|(?:(?:(?:\\^[\\n\\x1a]?)?[^\"\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0])+))+))`, ByGroups(UsingSelf(\"text\"), Operator, UsingSelf(\"text\")), Pop(1)},\n-\t\t\t{`((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+))((?:equ|geq|gtr|leq|lss|neq))((?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)(?:[&<>|]+|(?:(?:\"[^\\n\\x1a\"]*(?:\"|(?=[\\n\\x1a])))|(?:(?:%(?:\\*|(?:~[a-z]*(?:\\$[^:]+:)?)?\\d|[^%:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])[^=\\n\\x1a]*=(?:[^%\\n\\x1a^]|\\^[^%\\n\\x1a])*)?)?%))|(?:\\^?![^!:\\n\\x1a]+(?::(?:~(?:-?\\d+)?(?:,(?:-?\\d+)?)?|(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])[^=\\n\\x1a]*=(?:[^!\\n\\x1a^]|\\^[^!\\n\\x1a])*)?)?\\^?!))|(?:(?:(?:\\^[\\n\\x1a]?)?[^\"\\n\\x1a&<>|\\t\\v\\f\\r ,;=\\xa0])+))+))`, ByGroups(UsingSelf(\"text\"), OperatorWord, UsingSelf(\"text\")), Pop(1)},\n-\t\t},\n-\t\t\"(?\": {\n-\t\t\t{`(?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)`, UsingSelf(\"text\"), nil},\n-\t\t\t{`\\(`, Punctuation, Push(\"#pop\", \"else?\", \"root/compound\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"else?\": {\n-\t\t\t{`(?:(?:(?:\\^[\\n\\x1a])?[\\t\\v\\f\\r ,;=\\xa0])+)`, UsingSelf(\"text\"), nil},\n-\t\t\t{`else(?=\\^?[\\t\\v\\f\\r ,;=\\xa0]|[&<>|\\n\\x1a])`, Keyword, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "d6a0ae3347d58198e13a3f0f2d281ced9c48d5de",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/b/bibtex.go",
      "status": "removed",
      "additions": 0,
      "deletions": 80,
      "changes": 80,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fbibtex.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fbibtex.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fbibtex.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,80 +0,0 @@\n-package b\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Bibtex lexer.\n-var Bibtex = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"BibTeX\",\n-\t\tAliases:         []string{\"bib\", \"bibtex\"},\n-\t\tFilenames:       []string{\"*.bib\"},\n-\t\tMimeTypes:       []string{\"text/x-bibtex\"},\n-\t\tNotMultiline:    true,\n-\t\tCaseInsensitive: true,\n-\t},\n-\tbibtexRules,\n-))\n-\n-func bibtexRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`@comment`, Comment, nil},\n-\t\t\t{`@preamble`, NameClass, Push(\"closing-brace\", \"value\", \"opening-brace\")},\n-\t\t\t{`@string`, NameClass, Push(\"closing-brace\", \"field\", \"opening-brace\")},\n-\t\t\t{\"@[a-z_@!$&*+\\\\-./:;<>?\\\\[\\\\\\\\\\\\]^`|~][\\\\w@!$&*+\\\\-./:;<>?\\\\[\\\\\\\\\\\\]^`|~]*\", NameClass, Push(\"closing-brace\", \"command-body\", \"opening-brace\")},\n-\t\t\t{`.+`, Comment, nil},\n-\t\t},\n-\t\t\"opening-brace\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`[{(]`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"closing-brace\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`[})]`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"command-body\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`[^\\s\\,\\}]+`, NameLabel, Push(\"#pop\", \"fields\")},\n-\t\t},\n-\t\t\"fields\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`,`, Punctuation, Push(\"field\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"field\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{\"[a-z_@!$&*+\\\\-./:;<>?\\\\[\\\\\\\\\\\\]^`|~][\\\\w@!$&*+\\\\-./:;<>?\\\\[\\\\\\\\\\\\]^`|~]*\", NameAttribute, Push(\"value\", \"=\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"=\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`=`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"value\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{\"[a-z_@!$&*+\\\\-./:;<>?\\\\[\\\\\\\\\\\\]^`|~][\\\\w@!$&*+\\\\-./:;<>?\\\\[\\\\\\\\\\\\]^`|~]*\", NameVariable, nil},\n-\t\t\t{`\"`, LiteralString, Push(\"quoted-string\")},\n-\t\t\t{`\\{`, LiteralString, Push(\"braced-string\")},\n-\t\t\t{`[\\d]+`, LiteralNumber, nil},\n-\t\t\t{`#`, Punctuation, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"quoted-string\": {\n-\t\t\t{`\\{`, LiteralString, Push(\"braced-string\")},\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`[^\\{\\\"]+`, LiteralString, nil},\n-\t\t},\n-\t\t\"braced-string\": {\n-\t\t\t{`\\{`, LiteralString, Push()},\n-\t\t\t{`\\}`, LiteralString, Pop(1)},\n-\t\t\t{`[^\\{\\}]+`, LiteralString, nil},\n-\t\t},\n-\t\t\"whitespace\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "ec136fbc565e4a76e76218d17a84bb8632f43322",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/b/bicep.go",
      "status": "removed",
      "additions": 0,
      "deletions": 112,
      "changes": 112,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fbicep.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fbicep.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fbicep.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,112 +0,0 @@\n-package b\n-\n-import (\n-\t\"strings\"\n-\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Bicep lexer.\n-var Bicep = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Bicep\",\n-\t\tAliases:   []string{\"bicep\"},\n-\t\tFilenames: []string{\"*.bicep\"},\n-\t},\n-\tbicepRules,\n-))\n-\n-func bicepRules() Rules {\n-\tbicepFunctions := []string{\n-\t\t\"any\",\n-\t\t\"array\",\n-\t\t\"concat\",\n-\t\t\"contains\",\n-\t\t\"empty\",\n-\t\t\"first\",\n-\t\t\"intersection\",\n-\t\t\"items\",\n-\t\t\"last\",\n-\t\t\"length\",\n-\t\t\"min\",\n-\t\t\"max\",\n-\t\t\"range\",\n-\t\t\"skip\",\n-\t\t\"take\",\n-\t\t\"union\",\n-\t\t\"dateTimeAdd\",\n-\t\t\"utcNow\",\n-\t\t\"deployment\",\n-\t\t\"environment\",\n-\t\t\"loadFileAsBase64\",\n-\t\t\"loadTextContent\",\n-\t\t\"int\",\n-\t\t\"json\",\n-\t\t\"extensionResourceId\",\n-\t\t\"getSecret\",\n-\t\t\"list\",\n-\t\t\"listKeys\",\n-\t\t\"listKeyValue\",\n-\t\t\"listAccountSas\",\n-\t\t\"listSecrets\",\n-\t\t\"pickZones\",\n-\t\t\"reference\",\n-\t\t\"resourceId\",\n-\t\t\"subscriptionResourceId\",\n-\t\t\"tenantResourceId\",\n-\t\t\"managementGroup\",\n-\t\t\"resourceGroup\",\n-\t\t\"subscription\",\n-\t\t\"tenant\",\n-\t\t\"base64\",\n-\t\t\"base64ToJson\",\n-\t\t\"base64ToString\",\n-\t\t\"dataUri\",\n-\t\t\"dataUriToString\",\n-\t\t\"endsWith\",\n-\t\t\"format\",\n-\t\t\"guid\",\n-\t\t\"indexOf\",\n-\t\t\"lastIndexOf\",\n-\t\t\"length\",\n-\t\t\"newGuid\",\n-\t\t\"padLeft\",\n-\t\t\"replace\",\n-\t\t\"split\",\n-\t\t\"startsWith\",\n-\t\t\"string\",\n-\t\t\"substring\",\n-\t\t\"toLower\",\n-\t\t\"toUpper\",\n-\t\t\"trim\",\n-\t\t\"uniqueString\",\n-\t\t\"uri\",\n-\t\t\"uriComponent\",\n-\t\t\"uriComponentToString\",\n-\t}\n-\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`//[^\\n\\r]+`, CommentSingle, nil},\n-\t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n-\t\t\t{`([']?\\w+[']?)(:)`, ByGroups(NameProperty, Punctuation), nil},\n-\t\t\t{`\\b('(resourceGroup|subscription|managementGroup|tenant)')\\b`, KeywordNamespace, nil},\n-\t\t\t{`'[\\w\\$\\{\\(\\)\\}\\.]{1,}?'`, LiteralStringInterpol, nil},\n-\t\t\t{`('''|').*?('''|')`, LiteralString, nil},\n-\t\t\t{`\\b(allowed|batchSize|description|maxLength|maxValue|metadata|minLength|minValue|secure)\\b`, NameDecorator, nil},\n-\t\t\t{`\\b(az|sys)\\.`, NameNamespace, nil},\n-\t\t\t{`\\b(` + strings.Join(bicepFunctions, \"|\") + `)\\b`, NameFunction, nil},\n-\t\t\t// https://docs.microsoft.com/en-us/azure/azure-resource-manager/bicep/bicep-functions-logical\n-\t\t\t{`\\b(bool)(\\()`, ByGroups(NameFunction, Punctuation), nil},\n-\t\t\t{`\\b(for|if|in)\\b`, Keyword, nil},\n-\t\t\t{`\\b(module|output|param|resource|var)\\b`, KeywordDeclaration, nil},\n-\t\t\t{`\\b(array|bool|int|object|string)\\b`, KeywordType, nil},\n-\t\t\t// https://docs.microsoft.com/en-us/azure/azure-resource-manager/bicep/operators\n-\t\t\t{`(>=|>|<=|<|==|!=|=~|!~|::|&&|\\?\\?|!|-|%|\\*|\\/|\\+)`, Operator, nil},\n-\t\t\t{`[\\(\\)\\[\\]\\.:\\?{}@=]`, Punctuation, nil},\n-\t\t\t{`[\\w_-]+`, Text, nil},\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "119f96b09845a02647f7999e0d18e9330b897a39",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/b/blitz.go",
      "status": "removed",
      "additions": 0,
      "deletions": 52,
      "changes": 52,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fblitz.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fblitz.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fblitz.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,52 +0,0 @@\n-package b\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Blitzbasic lexer.\n-var Blitzbasic = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"BlitzBasic\",\n-\t\tAliases:         []string{\"blitzbasic\", \"b3d\", \"bplus\"},\n-\t\tFilenames:       []string{\"*.bb\", \"*.decls\"},\n-\t\tMimeTypes:       []string{\"text/x-bb\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tblitzbasicRules,\n-))\n-\n-func blitzbasicRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[ \\t]+`, Text, nil},\n-\t\t\t{`;.*?\\n`, CommentSingle, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n-\t\t\t{`[0-9]+\\.[0-9]*(?!\\.)`, LiteralNumberFloat, nil},\n-\t\t\t{`\\.[0-9]+(?!\\.)`, LiteralNumberFloat, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`\\$[0-9a-f]+`, LiteralNumberHex, nil},\n-\t\t\t{`\\%[10]+`, LiteralNumberBin, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `Shl`, `Shr`, `Sar`, `Mod`, `Or`, `And`, `Not`, `Abs`, `Sgn`, `Handle`, `Int`, `Float`, `Str`, `First`, `Last`, `Before`, `After`), Operator, nil},\n-\t\t\t{`([+\\-*/~=<>^])`, Operator, nil},\n-\t\t\t{`[(),:\\[\\]\\\\]`, Punctuation, nil},\n-\t\t\t{`\\.([ \\t]*)([a-z]\\w*)`, NameLabel, nil},\n-\t\t\t{`\\b(New)\\b([ \\t]+)([a-z]\\w*)`, ByGroups(KeywordReserved, Text, NameClass), nil},\n-\t\t\t{`\\b(Gosub|Goto)\\b([ \\t]+)([a-z]\\w*)`, ByGroups(KeywordReserved, Text, NameLabel), nil},\n-\t\t\t{`\\b(Object)\\b([ \\t]*)([.])([ \\t]*)([a-z]\\w*)\\b`, ByGroups(Operator, Text, Punctuation, Text, NameClass), nil},\n-\t\t\t{`\\b([a-z]\\w*)(?:([ \\t]*)(@{1,2}|[#$%])|([ \\t]*)([.])([ \\t]*)(?:([a-z]\\w*)))?\\b([ \\t]*)(\\()`, ByGroups(NameFunction, Text, KeywordType, Text, Punctuation, Text, NameClass, Text, Punctuation), nil},\n-\t\t\t{`\\b(Function)\\b([ \\t]+)([a-z]\\w*)(?:([ \\t]*)(@{1,2}|[#$%])|([ \\t]*)([.])([ \\t]*)(?:([a-z]\\w*)))?`, ByGroups(KeywordReserved, Text, NameFunction, Text, KeywordType, Text, Punctuation, Text, NameClass), nil},\n-\t\t\t{`\\b(Type)([ \\t]+)([a-z]\\w*)`, ByGroups(KeywordReserved, Text, NameClass), nil},\n-\t\t\t{`\\b(Pi|True|False|Null)\\b`, KeywordConstant, nil},\n-\t\t\t{`\\b(Local|Global|Const|Field|Dim)\\b`, KeywordDeclaration, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `End`, `Return`, `Exit`, `Chr`, `Len`, `Asc`, `New`, `Delete`, `Insert`, `Include`, `Function`, `Type`, `If`, `Then`, `Else`, `ElseIf`, `EndIf`, `For`, `To`, `Next`, `Step`, `Each`, `While`, `Wend`, `Repeat`, `Until`, `Forever`, `Select`, `Case`, `Default`, `Goto`, `Gosub`, `Data`, `Read`, `Restore`), KeywordReserved, nil},\n-\t\t\t{`([a-z]\\w*)(?:([ \\t]*)(@{1,2}|[#$%])|([ \\t]*)([.])([ \\t]*)(?:([a-z]\\w*)))?`, ByGroups(NameVariable, Text, KeywordType, Text, Punctuation, Text, NameClass), nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\"\"`, LiteralStringDouble, nil},\n-\t\t\t{`\"C?`, LiteralStringDouble, Pop(1)},\n-\t\t\t{`[^\"]+`, LiteralStringDouble, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "dcf7360c1d09e18eec3e3f0d61602b06e0ee88e6",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/b/bnf.go",
      "status": "removed",
      "additions": 0,
      "deletions": 28,
      "changes": 28,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fbnf.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fbnf.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fbnf.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,28 +0,0 @@\n-package b\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Bnf lexer.\n-var Bnf = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"BNF\",\n-\t\tAliases:   []string{\"bnf\"},\n-\t\tFilenames: []string{\"*.bnf\"},\n-\t\tMimeTypes: []string{\"text/x-bnf\"},\n-\t},\n-\tbnfRules,\n-))\n-\n-func bnfRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`(<)([ -;=?-~]+)(>)`, ByGroups(Punctuation, NameClass, Punctuation), nil},\n-\t\t\t{`::=`, Operator, nil},\n-\t\t\t{`[^<>:]+`, Text, nil},\n-\t\t\t{`.`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "d35e9c6db974ab43cbb8cda671e99680447b5f0d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/b/brainfuck.go",
      "status": "removed",
      "additions": 0,
      "deletions": 38,
      "changes": 38,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fbrainfuck.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fbrainfuck.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fb%2Fbrainfuck.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,38 +0,0 @@\n-package b\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Brainfuck lexer.\n-var Brainfuck = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Brainfuck\",\n-\t\tAliases:   []string{\"brainfuck\", \"bf\"},\n-\t\tFilenames: []string{\"*.bf\", \"*.b\"},\n-\t\tMimeTypes: []string{\"application/x-brainfuck\"},\n-\t},\n-\tbrainfuckRules,\n-))\n-\n-func brainfuckRules() Rules {\n-\treturn Rules{\n-\t\t\"common\": {\n-\t\t\t{`[.,]+`, NameTag, nil},\n-\t\t\t{`[+-]+`, NameBuiltin, nil},\n-\t\t\t{`[<>]+`, NameVariable, nil},\n-\t\t\t{`[^.,+\\-<>\\[\\]]+`, Comment, nil},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\t{`\\[`, Keyword, Push(\"loop\")},\n-\t\t\t{`\\]`, Error, nil},\n-\t\t\tInclude(\"common\"),\n-\t\t},\n-\t\t\"loop\": {\n-\t\t\t{`\\[`, Keyword, Push()},\n-\t\t\t{`\\]`, Keyword, Pop(1)},\n-\t\t\tInclude(\"common\"),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "3698c4f2977196244bee4f4c2cf781ca9bd8af07",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/c.go",
      "status": "removed",
      "additions": 0,
      "deletions": 96,
      "changes": 96,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fc.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,96 +0,0 @@\n-package c\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// C lexer.\n-var C = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"C\",\n-\t\tAliases:   []string{\"c\"},\n-\t\tFilenames: []string{\"*.c\", \"*.h\", \"*.idc\", \"*.x[bp]m\"},\n-\t\tMimeTypes: []string{\"text/x-chdr\", \"text/x-csrc\", \"image/x-xbitmap\", \"image/x-xpixmap\"},\n-\t\tEnsureNL:  true,\n-\t},\n-\tcRules,\n-))\n-\n-func cRules() Rules {\n-\treturn Rules{\n-\t\t\"whitespace\": {\n-\t\t\t{`^#if\\s+0`, CommentPreproc, Push(\"if0\")},\n-\t\t\t{`^#`, CommentPreproc, Push(\"macro\")},\n-\t\t\t{`^(\\s*(?:/[*].*?[*]/\\s*)?)(#if\\s+0)`, ByGroups(UsingSelf(\"root\"), CommentPreproc), Push(\"if0\")},\n-\t\t\t{`^(\\s*(?:/[*].*?[*]/\\s*)?)(#)`, ByGroups(UsingSelf(\"root\"), CommentPreproc), Push(\"macro\")},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`//(\\n|[\\w\\W]*?[^\\\\]\\n)`, CommentSingle, nil},\n-\t\t\t{`/(\\\\\\n)?[*][\\w\\W]*?[*](\\\\\\n)?/`, CommentMultiline, nil},\n-\t\t\t{`/(\\\\\\n)?[*][\\w\\W]*`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"statements\": {\n-\t\t\t{`(L?)(\")`, ByGroups(LiteralStringAffix, LiteralString), Push(\"string\")},\n-\t\t\t{`(L?)(')(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-fA-F0-9]{1,2}|[^\\\\\\'\\n])(')`, ByGroups(LiteralStringAffix, LiteralStringChar, LiteralStringChar, LiteralStringChar), nil},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+)[eE][+-]?\\d+[LlUu]*`, LiteralNumberFloat, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+[fF])[fF]?`, LiteralNumberFloat, nil},\n-\t\t\t{`0x[0-9a-fA-F]+[LlUu]*`, LiteralNumberHex, nil},\n-\t\t\t{`0[0-7]+[LlUu]*`, LiteralNumberOct, nil},\n-\t\t\t{`\\d+[LlUu]*`, LiteralNumberInteger, nil},\n-\t\t\t{`\\*/`, Error, nil},\n-\t\t\t{`[~!%^&*+=|?:<>/-]`, Operator, nil},\n-\t\t\t{`[()\\[\\],.]`, Punctuation, nil},\n-\t\t\t{Words(``, `\\b`, `asm`, `auto`, `break`, `case`, `const`, `continue`, `default`, `do`, `else`, `enum`, `extern`, `for`, `goto`, `if`, `register`, `restricted`, `return`, `sizeof`, `static`, `struct`, `switch`, `typedef`, `union`, `volatile`, `while`), Keyword, nil},\n-\t\t\t{`(bool|int|long|float|short|double|char((8|16|32)_t)?|unsigned|signed|void|u?int(_fast|_least|)(8|16|32|64)_t)\\b`, KeywordType, nil},\n-\t\t\t{Words(``, `\\b`, `inline`, `_inline`, `__inline`, `naked`, `restrict`, `thread`, `typename`), KeywordReserved, nil},\n-\t\t\t{`(__m(128i|128d|128|64))\\b`, KeywordReserved, nil},\n-\t\t\t{Words(`__`, `\\b`, `asm`, `int8`, `based`, `except`, `int16`, `stdcall`, `cdecl`, `fastcall`, `int32`, `declspec`, `finally`, `int64`, `try`, `leave`, `wchar_t`, `w64`, `unaligned`, `raise`, `noop`, `identifier`, `forceinline`, `assume`), KeywordReserved, nil},\n-\t\t\t{`(true|false|NULL)\\b`, NameBuiltin, nil},\n-\t\t\t{`([a-zA-Z_]\\w*)(\\s*)(:)(?!:)`, ByGroups(NameLabel, Text, Punctuation), nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`((?:[\\w*\\s])+?(?:\\s|[*]))([a-zA-Z_]\\w*)(\\s*\\([^;]*?\\))([^;{]*)(\\{)`, ByGroups(UsingSelf(\"root\"), NameFunction, UsingSelf(\"root\"), UsingSelf(\"root\"), Punctuation), Push(\"function\")},\n-\t\t\t{`((?:[\\w*\\s])+?(?:\\s|[*]))([a-zA-Z_]\\w*)(\\s*\\([^;]*?\\))([^;]*)(;)`, ByGroups(UsingSelf(\"root\"), NameFunction, UsingSelf(\"root\"), UsingSelf(\"root\"), Punctuation), nil},\n-\t\t\tDefault(Push(\"statement\")),\n-\t\t},\n-\t\t\"statement\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"statements\"),\n-\t\t\t{`[{}]`, Punctuation, nil},\n-\t\t\t{`;`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"function\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"statements\"),\n-\t\t\t{`;`, Punctuation, nil},\n-\t\t\t{`\\{`, Punctuation, Push()},\n-\t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`\\\\([\\\\abfnrtv\"\\']|x[a-fA-F0-9]{2,4}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8}|[0-7]{1,3})`, LiteralStringEscape, nil},\n-\t\t\t{`[^\\\\\"\\n]+`, LiteralString, nil},\n-\t\t\t{`\\\\\\n`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralString, nil},\n-\t\t},\n-\t\t\"macro\": {\n-\t\t\t{`(include)(\\s*(?:/[*].*?[*]/\\s*)?)([^\\n]+)`, ByGroups(CommentPreproc, Text, CommentPreprocFile), nil},\n-\t\t\t{`[^/\\n]+`, CommentPreproc, nil},\n-\t\t\t{`/[*](.|\\n)*?[*]/`, CommentMultiline, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, Pop(1)},\n-\t\t\t{`/`, CommentPreproc, nil},\n-\t\t\t{`(?<=\\\\)\\n`, CommentPreproc, nil},\n-\t\t\t{`\\n`, CommentPreproc, Pop(1)},\n-\t\t},\n-\t\t\"if0\": {\n-\t\t\t{`^\\s*#if.*?(?<!\\\\)\\n`, CommentPreproc, Push()},\n-\t\t\t{`^\\s*#el(?:se|if).*\\n`, CommentPreproc, Pop(1)},\n-\t\t\t{`^\\s*#endif.*?(?<!\\\\)\\n`, CommentPreproc, Pop(1)},\n-\t\t\t{`.*?\\n`, Comment, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "ec0d892c0fa52b0a82afee74c53167c3ccd7b7c1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/capnproto.go",
      "status": "removed",
      "additions": 0,
      "deletions": 65,
      "changes": 65,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcapnproto.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcapnproto.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcapnproto.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,65 +0,0 @@\n-package c\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Cap'N'Proto Proto lexer.\n-var CapNProto = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Cap'n Proto\",\n-\t\tAliases:   []string{\"capnp\"},\n-\t\tFilenames: []string{\"*.capnp\"},\n-\t\tMimeTypes: []string{},\n-\t},\n-\tcapNProtoRules,\n-))\n-\n-func capNProtoRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`#.*?$`, CommentSingle, nil},\n-\t\t\t{`@[0-9a-zA-Z]*`, NameDecorator, nil},\n-\t\t\t{`=`, Literal, Push(\"expression\")},\n-\t\t\t{`:`, NameClass, Push(\"type\")},\n-\t\t\t{`\\$`, NameAttribute, Push(\"annotation\")},\n-\t\t\t{`(struct|enum|interface|union|import|using|const|annotation|extends|in|of|on|as|with|from|fixed)\\b`, Keyword, nil},\n-\t\t\t{`[\\w.]+`, Name, nil},\n-\t\t\t{`[^#@=:$\\w]+`, Text, nil},\n-\t\t},\n-\t\t\"type\": {\n-\t\t\t{`[^][=;,(){}$]+`, NameClass, nil},\n-\t\t\t{`[[(]`, NameClass, Push(\"parentype\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"parentype\": {\n-\t\t\t{`[^][;()]+`, NameClass, nil},\n-\t\t\t{`[[(]`, NameClass, Push()},\n-\t\t\t{`[])]`, NameClass, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"expression\": {\n-\t\t\t{`[^][;,(){}$]+`, Literal, nil},\n-\t\t\t{`[[(]`, Literal, Push(\"parenexp\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"parenexp\": {\n-\t\t\t{`[^][;()]+`, Literal, nil},\n-\t\t\t{`[[(]`, Literal, Push()},\n-\t\t\t{`[])]`, Literal, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"annotation\": {\n-\t\t\t{`[^][;,(){}=:]+`, NameAttribute, nil},\n-\t\t\t{`[[(]`, NameAttribute, Push(\"annexp\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"annexp\": {\n-\t\t\t{`[^][;()]+`, NameAttribute, nil},\n-\t\t\t{`[[(]`, NameAttribute, Push()},\n-\t\t\t{`[])]`, NameAttribute, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "9d424d4b281837fd28cfce581ba2ad8aacccc013",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/ceylon.go",
      "status": "removed",
      "additions": 0,
      "deletions": 67,
      "changes": 67,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fceylon.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fceylon.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fceylon.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,67 +0,0 @@\n-package c\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Ceylon lexer.\n-var Ceylon = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Ceylon\",\n-\t\tAliases:   []string{\"ceylon\"},\n-\t\tFilenames: []string{\"*.ceylon\"},\n-\t\tMimeTypes: []string{\"text/x-ceylon\"},\n-\t\tDotAll:    true,\n-\t},\n-\tceylonRules,\n-))\n-\n-func ceylonRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`^(\\s*(?:[a-zA-Z_][\\w.\\[\\]]*\\s+)+?)([a-zA-Z_]\\w*)(\\s*)(\\()`, ByGroups(UsingSelf(\"root\"), NameFunction, Text, Operator), nil},\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"comment\")},\n-\t\t\t{`(shared|abstract|formal|default|actual|variable|deprecated|small|late|literal|doc|by|see|throws|optional|license|tagged|final|native|annotation|sealed)\\b`, NameDecorator, nil},\n-\t\t\t{`(break|case|catch|continue|else|finally|for|in|if|return|switch|this|throw|try|while|is|exists|dynamic|nonempty|then|outer|assert|let)\\b`, Keyword, nil},\n-\t\t\t{`(abstracts|extends|satisfies|super|given|of|out|assign)\\b`, KeywordDeclaration, nil},\n-\t\t\t{`(function|value|void|new)\\b`, KeywordType, nil},\n-\t\t\t{`(assembly|module|package)(\\s+)`, ByGroups(KeywordNamespace, Text), nil},\n-\t\t\t{`(true|false|null)\\b`, KeywordConstant, nil},\n-\t\t\t{`(class|interface|object|alias)(\\s+)`, ByGroups(KeywordDeclaration, Text), Push(\"class\")},\n-\t\t\t{`(import)(\\s+)`, ByGroups(KeywordNamespace, Text), Push(\"import\")},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`'\\\\.'|'[^\\\\]'|'\\\\\\{#[0-9a-fA-F]{4}\\}'`, LiteralStringChar, nil},\n-\t\t\t{\"\\\".*``.*``.*\\\"\", LiteralStringInterpol, nil},\n-\t\t\t{`(\\.)([a-z_]\\w*)`, ByGroups(Operator, NameAttribute), nil},\n-\t\t\t{`[a-zA-Z_]\\w*:`, NameLabel, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t\t{`[~^*!%&\\[\\](){}<>|+=:;,./?-]`, Operator, nil},\n-\t\t\t{`\\d{1,3}(_\\d{3})+\\.\\d{1,3}(_\\d{3})+[kMGTPmunpf]?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d{1,3}(_\\d{3})+\\.[0-9]+([eE][+-]?[0-9]+)?[kMGTPmunpf]?`, LiteralNumberFloat, nil},\n-\t\t\t{`[0-9][0-9]*\\.\\d{1,3}(_\\d{3})+[kMGTPmunpf]?`, LiteralNumberFloat, nil},\n-\t\t\t{`[0-9][0-9]*\\.[0-9]+([eE][+-]?[0-9]+)?[kMGTPmunpf]?`, LiteralNumberFloat, nil},\n-\t\t\t{`#([0-9a-fA-F]{4})(_[0-9a-fA-F]{4})+`, LiteralNumberHex, nil},\n-\t\t\t{`#[0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`\\$([01]{4})(_[01]{4})+`, LiteralNumberBin, nil},\n-\t\t\t{`\\$[01]+`, LiteralNumberBin, nil},\n-\t\t\t{`\\d{1,3}(_\\d{3})+[kMGTP]?`, LiteralNumberInteger, nil},\n-\t\t\t{`[0-9]+[kMGTP]?`, LiteralNumberInteger, nil},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t},\n-\t\t\"class\": {\n-\t\t\t{`[A-Za-z_]\\w*`, NameClass, Pop(1)},\n-\t\t},\n-\t\t\"import\": {\n-\t\t\t{`[a-z][\\w.]*`, NameNamespace, Pop(1)},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`[^*/]`, CommentMultiline, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push()},\n-\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n-\t\t\t{`[*/]`, CommentMultiline, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "f3050346f9e0f81504cfe15424db70686b8aa39e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/cfengine3.go",
      "status": "removed",
      "additions": 0,
      "deletions": 60,
      "changes": 60,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcfengine3.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcfengine3.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcfengine3.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,60 +0,0 @@\n-package c\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Cfengine3 lexer.\n-var Cfengine3 = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"CFEngine3\",\n-\t\tAliases:   []string{\"cfengine3\", \"cf3\"},\n-\t\tFilenames: []string{\"*.cf\"},\n-\t\tMimeTypes: []string{},\n-\t},\n-\tcfengine3Rules,\n-))\n-\n-func cfengine3Rules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`#.*?\\n`, Comment, nil},\n-\t\t\t{`(body)(\\s+)(\\S+)(\\s+)(control)`, ByGroups(Keyword, Text, Keyword, Text, Keyword), nil},\n-\t\t\t{`(body|bundle)(\\s+)(\\S+)(\\s+)(\\w+)(\\()`, ByGroups(Keyword, Text, Keyword, Text, NameFunction, Punctuation), Push(\"arglist\")},\n-\t\t\t{`(body|bundle)(\\s+)(\\S+)(\\s+)(\\w+)`, ByGroups(Keyword, Text, Keyword, Text, NameFunction), nil},\n-\t\t\t{`(\")([^\"]+)(\")(\\s+)(string|slist|int|real)(\\s*)(=>)(\\s*)`, ByGroups(Punctuation, NameVariable, Punctuation, Text, KeywordType, Text, Operator, Text), nil},\n-\t\t\t{`(\\S+)(\\s*)(=>)(\\s*)`, ByGroups(KeywordReserved, Text, Operator, Text), nil},\n-\t\t\t{`\"`, LiteralString, Push(\"string\")},\n-\t\t\t{`(\\w+)(\\()`, ByGroups(NameFunction, Punctuation), nil},\n-\t\t\t{`([\\w.!&|()]+)(::)`, ByGroups(NameClass, Punctuation), nil},\n-\t\t\t{`(\\w+)(:)`, ByGroups(KeywordDeclaration, Punctuation), nil},\n-\t\t\t{`@[{(][^)}]+[})]`, NameVariable, nil},\n-\t\t\t{`[(){},;]`, Punctuation, nil},\n-\t\t\t{`=>`, Operator, nil},\n-\t\t\t{`->`, Operator, nil},\n-\t\t\t{`\\d+\\.\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`\\w+`, NameFunction, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\\$[{(]`, LiteralStringInterpol, Push(\"interpol\")},\n-\t\t\t{`\\\\.`, LiteralStringEscape, nil},\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`\\n`, LiteralString, nil},\n-\t\t\t{`.`, LiteralString, nil},\n-\t\t},\n-\t\t\"interpol\": {\n-\t\t\t{`\\$[{(]`, LiteralStringInterpol, Push()},\n-\t\t\t{`[})]`, LiteralStringInterpol, Pop(1)},\n-\t\t\t{`[^${()}]+`, LiteralStringInterpol, nil},\n-\t\t},\n-\t\t\"arglist\": {\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t\t{`,`, Punctuation, nil},\n-\t\t\t{`\\w+`, NameVariable, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "58db9aac9fd6bedacddbe0975f7059a466d16bd5",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/chaiscript.go",
      "status": "removed",
      "additions": 0,
      "deletions": 67,
      "changes": 67,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fchaiscript.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fchaiscript.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fchaiscript.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,67 +0,0 @@\n-package c\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Chaiscript lexer.\n-var Chaiscript = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"ChaiScript\",\n-\t\tAliases:   []string{\"chai\", \"chaiscript\"},\n-\t\tFilenames: []string{\"*.chai\"},\n-\t\tMimeTypes: []string{\"text/x-chaiscript\", \"application/x-chaiscript\"},\n-\t\tDotAll:    true,\n-\t},\n-\tchaiscriptRules,\n-))\n-\n-func chaiscriptRules() Rules {\n-\treturn Rules{\n-\t\t\"commentsandwhitespace\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n-\t\t\t{`^\\#.*?\\n`, CommentSingle, nil},\n-\t\t},\n-\t\t\"slashstartsregex\": {\n-\t\t\tInclude(\"commentsandwhitespace\"),\n-\t\t\t{`/(\\\\.|[^[/\\\\\\n]|\\[(\\\\.|[^\\]\\\\\\n])*])+/([gim]+\\b|\\B)`, LiteralStringRegex, Pop(1)},\n-\t\t\t{`(?=/)`, Text, Push(\"#pop\", \"badregex\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"badregex\": {\n-\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\tInclude(\"commentsandwhitespace\"),\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`\\+\\+|--|~|&&|\\?|:|\\|\\||\\\\(?=\\n)|\\.\\.(<<|>>>?|==?|!=?|[-<>+*%&|^/])=?`, Operator, Push(\"slashstartsregex\")},\n-\t\t\t{`[{(\\[;,]`, Punctuation, Push(\"slashstartsregex\")},\n-\t\t\t{`[})\\].]`, Punctuation, nil},\n-\t\t\t{`[=+\\-*/]`, Operator, nil},\n-\t\t\t{`(for|in|while|do|break|return|continue|if|else|throw|try|catch)\\b`, Keyword, Push(\"slashstartsregex\")},\n-\t\t\t{`(var)\\b`, KeywordDeclaration, Push(\"slashstartsregex\")},\n-\t\t\t{`(attr|def|fun)\\b`, KeywordReserved, nil},\n-\t\t\t{`(true|false)\\b`, KeywordConstant, nil},\n-\t\t\t{`(eval|throw)\\b`, NameBuiltin, nil},\n-\t\t\t{\"`\\\\S+`\", NameBuiltin, nil},\n-\t\t\t{`[$a-zA-Z_]\\w*`, NameOther, nil},\n-\t\t\t{`[0-9][0-9]*\\.[0-9]+([eE][0-9]+)?[fd]?`, LiteralNumberFloat, nil},\n-\t\t\t{`0x[0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"dqstring\")},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t},\n-\t\t\"dqstring\": {\n-\t\t\t{`\\$\\{[^\"}]+?\\}`, LiteralStringInterpol, nil},\n-\t\t\t{`\\$`, LiteralStringDouble, nil},\n-\t\t\t{`\\\\\\\\`, LiteralStringDouble, nil},\n-\t\t\t{`\\\\\"`, LiteralStringDouble, nil},\n-\t\t\t{`[^\\\\\"$]+`, LiteralStringDouble, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "f99f906c208ea386fe29284c2c517d4c8eacbd8d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/clojure.go",
      "status": "removed",
      "additions": 0,
      "deletions": 42,
      "changes": 42,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fclojure.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fclojure.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fclojure.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,42 +0,0 @@\n-package c\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Clojure lexer.\n-var Clojure = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Clojure\",\n-\t\tAliases:   []string{\"clojure\", \"clj\"},\n-\t\tFilenames: []string{\"*.clj\"},\n-\t\tMimeTypes: []string{\"text/x-clojure\", \"application/x-clojure\"},\n-\t},\n-\tclojureRules,\n-))\n-\n-func clojureRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`;.*$`, CommentSingle, nil},\n-\t\t\t{`[,\\s]+`, Text, nil},\n-\t\t\t{`-?\\d+\\.\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`-?\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`0x-?[abcdef\\d]+`, LiteralNumberHex, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`'(?!#)[\\w!$%*+<=>?/.#-]+`, LiteralStringSymbol, nil},\n-\t\t\t{`\\\\(.|[a-z]+)`, LiteralStringChar, nil},\n-\t\t\t{`::?#?(?!#)[\\w!$%*+<=>?/.#-]+`, LiteralStringSymbol, nil},\n-\t\t\t{\"~@|[`\\\\'#^~&@]\", Operator, nil},\n-\t\t\t{Words(``, ` `, `.`, `def`, `do`, `fn`, `if`, `let`, `new`, `quote`, `var`, `loop`), Keyword, nil},\n-\t\t\t{Words(``, ` `, `def-`, `defn`, `defn-`, `defmacro`, `defmulti`, `defmethod`, `defstruct`, `defonce`, `declare`, `definline`, `definterface`, `defprotocol`, `defrecord`, `deftype`, `defproject`, `ns`), KeywordDeclaration, nil},\n-\t\t\t{Words(``, ` `, `*`, `+`, `-`, `->`, `/`, `<`, `<=`, `=`, `==`, `>`, `>=`, `..`, `accessor`, `agent`, `agent-errors`, `aget`, `alength`, `all-ns`, `alter`, `and`, `append-child`, `apply`, `array-map`, `aset`, `aset-boolean`, `aset-byte`, `aset-char`, `aset-double`, `aset-float`, `aset-int`, `aset-long`, `aset-short`, `assert`, `assoc`, `await`, `await-for`, `bean`, `binding`, `bit-and`, `bit-not`, `bit-or`, `bit-shift-left`, `bit-shift-right`, `bit-xor`, `boolean`, `branch?`, `butlast`, `byte`, `cast`, `char`, `children`, `class`, `clear-agent-errors`, `comment`, `commute`, `comp`, `comparator`, `complement`, `concat`, `conj`, `cons`, `constantly`, `cond`, `if-not`, `construct-proxy`, `contains?`, `count`, `create-ns`, `create-struct`, `cycle`, `dec`, `deref`, `difference`, `disj`, `dissoc`, `distinct`, `doall`, `doc`, `dorun`, `doseq`, `dosync`, `dotimes`, `doto`, `double`, `down`, `drop`, `drop-while`, `edit`, `end?`, `ensure`, `eval`, `every?`, `false?`, `ffirst`, `file-seq`, `filter`, `find`, `find-doc`, `find-ns`, `find-var`, `first`, `float`, `flush`, `for`, `fnseq`, `frest`, `gensym`, `get-proxy-class`, `get`, `hash-map`, `hash-set`, `identical?`, `identity`, `if-let`, `import`, `in-ns`, `inc`, `index`, `insert-child`, `insert-left`, `insert-right`, `inspect-table`, `inspect-tree`, `instance?`, `int`, `interleave`, `intersection`, `into`, `into-array`, `iterate`, `join`, `key`, `keys`, `keyword`, `keyword?`, `last`, `lazy-cat`, `lazy-cons`, `left`, `lefts`, `line-seq`, `list*`, `list`, `load`, `load-file`, `locking`, `long`, `loop`, `macroexpand`, `macroexpand-1`, `make-array`, `make-node`, `map`, `map-invert`, `map?`, `mapcat`, `max`, `max-key`, `memfn`, `merge`, `merge-with`, `meta`, `min`, `min-key`, `name`, `namespace`, `neg?`, `new`, `newline`, `next`, `nil?`, `node`, `not`, `not-any?`, `not-every?`, `not=`, `ns-imports`, `ns-interns`, `ns-map`, `ns-name`, `ns-publics`, `ns-refers`, `ns-resolve`, `ns-unmap`, `nth`, `nthrest`, `or`, `parse`, `partial`, `path`, `peek`, `pop`, `pos?`, `pr`, `pr-str`, `print`, `print-str`, `println`, `println-str`, `prn`, `prn-str`, `project`, `proxy`, `proxy-mappings`, `quot`, `rand`, `rand-int`, `range`, `re-find`, `re-groups`, `re-matcher`, `re-matches`, `re-pattern`, `re-seq`, `read`, `read-line`, `reduce`, `ref`, `ref-set`, `refer`, `rem`, `remove`, `remove-method`, `remove-ns`, `rename`, `rename-keys`, `repeat`, `replace`, `replicate`, `resolve`, `rest`, `resultset-seq`, `reverse`, `rfirst`, `right`, `rights`, `root`, `rrest`, `rseq`, `second`, `select`, `select-keys`, `send`, `send-off`, `seq`, `seq-zip`, `seq?`, `set`, `short`, `slurp`, `some`, `sort`, `sort-by`, `sorted-map`, `sorted-map-by`, `sorted-set`, `special-symbol?`, `split-at`, `split-with`, `str`, `string?`, `struct`, `struct-map`, `subs`, `subvec`, `symbol`, `symbol?`, `sync`, `take`, `take-nth`, `take-while`, `test`, `time`, `to-array`, `to-array-2d`, `tree-seq`, `true?`, `union`, `up`, `update-proxy`, `val`, `vals`, `var-get`, `var-set`, `var?`, `vector`, `vector-zip`, `vector?`, `when`, `when-first`, `when-let`, `when-not`, `with-local-vars`, `with-meta`, `with-open`, `with-out-str`, `xml-seq`, `xml-zip`, `zero?`, `zipmap`, `zipper`), NameBuiltin, nil},\n-\t\t\t{`(?<=\\()(?!#)[\\w!$%*+<=>?/.#-]+`, NameFunction, nil},\n-\t\t\t{`(?!#)[\\w!$%*+<=>?/.#-]+`, NameVariable, nil},\n-\t\t\t{`(\\[|\\])`, Punctuation, nil},\n-\t\t\t{`(\\{|\\})`, Punctuation, nil},\n-\t\t\t{`(\\(|\\))`, Punctuation, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "0e0708db49f87302bbeb47bd8b3fb7055ed719f3",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/cmake.go",
      "status": "removed",
      "additions": 0,
      "deletions": 48,
      "changes": 48,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcmake.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcmake.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcmake.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,48 +0,0 @@\n-package c\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Cmake lexer.\n-var Cmake = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"CMake\",\n-\t\tAliases:   []string{\"cmake\"},\n-\t\tFilenames: []string{\"*.cmake\", \"CMakeLists.txt\"},\n-\t\tMimeTypes: []string{\"text/x-cmake\"},\n-\t},\n-\tcmakeRules,\n-))\n-\n-func cmakeRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\b(\\w+)([ \\t]*)(\\()`, ByGroups(NameBuiltin, Text, Punctuation), Push(\"args\")},\n-\t\t\tInclude(\"keywords\"),\n-\t\t\tInclude(\"ws\"),\n-\t\t},\n-\t\t\"args\": {\n-\t\t\t{`\\(`, Punctuation, Push()},\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t\t{`(\\$\\{)(.+?)(\\})`, ByGroups(Operator, NameVariable, Operator), nil},\n-\t\t\t{`(\\$ENV\\{)(.+?)(\\})`, ByGroups(Operator, NameVariable, Operator), nil},\n-\t\t\t{`(\\$<)(.+?)(>)`, ByGroups(Operator, NameVariable, Operator), nil},\n-\t\t\t{`(?s)\".*?\"`, LiteralStringDouble, nil},\n-\t\t\t{`\\\\\\S+`, LiteralString, nil},\n-\t\t\t{`[^)$\"# \\t\\n]+`, LiteralString, nil},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\tInclude(\"keywords\"),\n-\t\t\tInclude(\"ws\"),\n-\t\t},\n-\t\t\"string\": {},\n-\t\t\"keywords\": {\n-\t\t\t{`\\b(WIN32|UNIX|APPLE|CYGWIN|BORLAND|MINGW|MSVC|MSVC_IDE|MSVC60|MSVC70|MSVC71|MSVC80|MSVC90)\\b`, Keyword, nil},\n-\t\t},\n-\t\t\"ws\": {\n-\t\t\t{`[ \\t]+`, Text, nil},\n-\t\t\t{`#.*\\n`, Comment, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "8b2f6d9bc781018ca8e0a122a32e761bbf6fc661",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/cobol.go",
      "status": "removed",
      "additions": 0,
      "deletions": 55,
      "changes": 55,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcobol.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcobol.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcobol.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,55 +0,0 @@\n-package c\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Cobol lexer.\n-var Cobol = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"COBOL\",\n-\t\tAliases:         []string{\"cobol\"},\n-\t\tFilenames:       []string{\"*.cob\", \"*.COB\", \"*.cpy\", \"*.CPY\"},\n-\t\tMimeTypes:       []string{\"text/x-cobol\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tcobolRules,\n-))\n-\n-func cobolRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"comment\"),\n-\t\t\tInclude(\"strings\"),\n-\t\t\tInclude(\"core\"),\n-\t\t\tInclude(\"nums\"),\n-\t\t\t{`[a-z0-9]([\\w\\-]*[a-z0-9]+)?`, NameVariable, nil},\n-\t\t\t{`[ \\t]+`, Text, nil},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`(^.{6}[*/].*\\n|^.{6}|\\*>.*\\n)`, Comment, nil},\n-\t\t},\n-\t\t\"core\": {\n-\t\t\t{`(^|(?<=[^\\w\\-]))(ALL\\s+)?((ZEROES)|(HIGH-VALUE|LOW-VALUE|QUOTE|SPACE|ZERO)(S)?)\\s*($|(?=[^\\w\\-]))`, NameConstant, nil},\n-\t\t\t{Words(`(^|(?<=[^\\w\\-]))`, `\\s*($|(?=[^\\w\\-]))`, `ACCEPT`, `ADD`, `ALLOCATE`, `CALL`, `CANCEL`, `CLOSE`, `COMPUTE`, `CONFIGURATION`, `CONTINUE`, `DATA`, `DELETE`, `DISPLAY`, `DIVIDE`, `DIVISION`, `ELSE`, `END`, `END-ACCEPT`, `END-ADD`, `END-CALL`, `END-COMPUTE`, `END-DELETE`, `END-DISPLAY`, `END-DIVIDE`, `END-EVALUATE`, `END-IF`, `END-MULTIPLY`, `END-OF-PAGE`, `END-PERFORM`, `END-READ`, `END-RETURN`, `END-REWRITE`, `END-SEARCH`, `END-START`, `END-STRING`, `END-SUBTRACT`, `END-UNSTRING`, `END-WRITE`, `ENVIRONMENT`, `EVALUATE`, `EXIT`, `FD`, `FILE`, `FILE-CONTROL`, `FOREVER`, `FREE`, `GENERATE`, `GO`, `GOBACK`, `IDENTIFICATION`, `IF`, `INITIALIZE`, `INITIATE`, `INPUT-OUTPUT`, `INSPECT`, `INVOKE`, `I-O-CONTROL`, `LINKAGE`, `LOCAL-STORAGE`, `MERGE`, `MOVE`, `MULTIPLY`, `OPEN`, `PERFORM`, `PROCEDURE`, `PROGRAM-ID`, `RAISE`, `READ`, `RELEASE`, `RESUME`, `RETURN`, `REWRITE`, `SCREEN`, `SD`, `SEARCH`, `SECTION`, `SET`, `SORT`, `START`, `STOP`, `STRING`, `SUBTRACT`, `SUPPRESS`, `TERMINATE`, `THEN`, `UNLOCK`, `UNSTRING`, `USE`, `VALIDATE`, `WORKING-STORAGE`, `WRITE`), KeywordReserved, nil},\n-\t\t\t{Words(`(^|(?<=[^\\w\\-]))`, `\\s*($|(?=[^\\w\\-]))`, `ACCESS`, `ADDRESS`, `ADVANCING`, `AFTER`, `ALL`, `ALPHABET`, `ALPHABETIC`, `ALPHABETIC-LOWER`, `ALPHABETIC-UPPER`, `ALPHANUMERIC`, `ALPHANUMERIC-EDITED`, `ALSO`, `ALTER`, `ALTERNATEANY`, `ARE`, `AREA`, `AREAS`, `ARGUMENT-NUMBER`, `ARGUMENT-VALUE`, `AS`, `ASCENDING`, `ASSIGN`, `AT`, `AUTO`, `AUTO-SKIP`, `AUTOMATIC`, `AUTOTERMINATE`, `BACKGROUND-COLOR`, `BASED`, `BEEP`, `BEFORE`, `BELL`, `BLANK`, `BLINK`, `BLOCK`, `BOTTOM`, `BY`, `BYTE-LENGTH`, `CHAINING`, `CHARACTER`, `CHARACTERS`, `CLASS`, `CODE`, `CODE-SET`, `COL`, `COLLATING`, `COLS`, `COLUMN`, `COLUMNS`, `COMMA`, `COMMAND-LINE`, `COMMIT`, `COMMON`, `CONSTANT`, `CONTAINS`, `CONTENT`, `CONTROL`, `CONTROLS`, `CONVERTING`, `COPY`, `CORR`, `CORRESPONDING`, `COUNT`, `CRT`, `CURRENCY`, `CURSOR`, `CYCLE`, `DATE`, `DAY`, `DAY-OF-WEEK`, `DE`, `DEBUGGING`, `DECIMAL-POINT`, `DECLARATIVES`, `DEFAULT`, `DELIMITED`, `DELIMITER`, `DEPENDING`, `DESCENDING`, `DETAIL`, `DISK`, `DOWN`, `DUPLICATES`, `DYNAMIC`, `EBCDIC`, `ENTRY`, `ENVIRONMENT-NAME`, `ENVIRONMENT-VALUE`, `EOL`, `EOP`, `EOS`, `ERASE`, `ERROR`, `ESCAPE`, `EXCEPTION`, `EXCLUSIVE`, `EXTEND`, `EXTERNAL`, `FILE-ID`, `FILLER`, `FINAL`, `FIRST`, `FIXED`, `FLOAT-LONG`, `FLOAT-SHORT`, `FOOTING`, `FOR`, `FOREGROUND-COLOR`, `FORMAT`, `FROM`, `FULL`, `FUNCTION`, `FUNCTION-ID`, `GIVING`, `GLOBAL`, `GROUP`, `HEADING`, `HIGHLIGHT`, `I-O`, `ID`, `IGNORE`, `IGNORING`, `IN`, `INDEX`, `INDEXED`, `INDICATE`, `INITIAL`, `INITIALIZED`, `INPUT`, `INTO`, `INTRINSIC`, `INVALID`, `IS`, `JUST`, `JUSTIFIED`, `KEY`, `LABEL`, `LAST`, `LEADING`, `LEFT`, `LENGTH`, `LIMIT`, `LIMITS`, `LINAGE`, `LINAGE-COUNTER`, `LINE`, `LINES`, `LOCALE`, `LOCK`, `LOWLIGHT`, `MANUAL`, `MEMORY`, `MINUS`, `MODE`, `MULTIPLE`, `NATIONAL`, `NATIONAL-EDITED`, `NATIVE`, `NEGATIVE`, `NEXT`, `NO`, `NULL`, `NULLS`, `NUMBER`, `NUMBERS`, `NUMERIC`, `NUMERIC-EDITED`, `OBJECT-COMPUTER`, `OCCURS`, `OF`, `OFF`, `OMITTED`, `ON`, `ONLY`, `OPTIONAL`, `ORDER`, `ORGANIZATION`, `OTHER`, `OUTPUT`, `OVERFLOW`, `OVERLINE`, `PACKED-DECIMAL`, `PADDING`, `PAGE`, `PARAGRAPH`, `PLUS`, `POINTER`, `POSITION`, `POSITIVE`, `PRESENT`, `PREVIOUS`, `PRINTER`, `PRINTING`, `PROCEDURE-POINTER`, `PROCEDURES`, `PROCEED`, `PROGRAM`, `PROGRAM-POINTER`, `PROMPT`, `QUOTE`, `QUOTES`, `RANDOM`, `RD`, `RECORD`, `RECORDING`, `RECORDS`, `RECURSIVE`, `REDEFINES`, `REEL`, `REFERENCE`, `RELATIVE`, `REMAINDER`, `REMOVAL`, `RENAMES`, `REPLACING`, `REPORT`, `REPORTING`, `REPORTS`, `REPOSITORY`, `REQUIRED`, `RESERVE`, `RETURNING`, `REVERSE-VIDEO`, `REWIND`, `RIGHT`, `ROLLBACK`, `ROUNDED`, `RUN`, `SAME`, `SCROLL`, `SECURE`, `SEGMENT-LIMIT`, `SELECT`, `SENTENCE`, `SEPARATE`, `SEQUENCE`, `SEQUENTIAL`, `SHARING`, `SIGN`, `SIGNED`, `SIGNED-INT`, `SIGNED-LONG`, `SIGNED-SHORT`, `SIZE`, `SORT-MERGE`, `SOURCE`, `SOURCE-COMPUTER`, `SPECIAL-NAMES`, `STANDARD`, `STANDARD-1`, `STANDARD-2`, `STATUS`, `SUM`, `SYMBOLIC`, `SYNC`, `SYNCHRONIZED`, `TALLYING`, `TAPE`, `TEST`, `THROUGH`, `THRU`, `TIME`, `TIMES`, `TO`, `TOP`, `TRAILING`, `TRANSFORM`, `TYPE`, `UNDERLINE`, `UNIT`, `UNSIGNED`, `UNSIGNED-INT`, `UNSIGNED-LONG`, `UNSIGNED-SHORT`, `UNTIL`, `UP`, `UPDATE`, `UPON`, `USAGE`, `USING`, `VALUE`, `VALUES`, `VARYING`, `WAIT`, `WHEN`, `WITH`, `WORDS`, `YYYYDDD`, `YYYYMMDD`), KeywordPseudo, nil},\n-\t\t\t{Words(`(^|(?<=[^\\w\\-]))`, `\\s*($|(?=[^\\w\\-]))`, `ACTIVE-CLASS`, `ALIGNED`, `ANYCASE`, `ARITHMETIC`, `ATTRIBUTE`, `B-AND`, `B-NOT`, `B-OR`, `B-XOR`, `BIT`, `BOOLEAN`, `CD`, `CENTER`, `CF`, `CH`, `CHAIN`, `CLASS-ID`, `CLASSIFICATION`, `COMMUNICATION`, `CONDITION`, `DATA-POINTER`, `DESTINATION`, `DISABLE`, `EC`, `EGI`, `EMI`, `ENABLE`, `END-RECEIVE`, `ENTRY-CONVENTION`, `EO`, `ESI`, `EXCEPTION-OBJECT`, `EXPANDS`, `FACTORY`, `FLOAT-BINARY-16`, `FLOAT-BINARY-34`, `FLOAT-BINARY-7`, `FLOAT-DECIMAL-16`, `FLOAT-DECIMAL-34`, `FLOAT-EXTENDED`, `FORMAT`, `FUNCTION-POINTER`, `GET`, `GROUP-USAGE`, `IMPLEMENTS`, `INFINITY`, `INHERITS`, `INTERFACE`, `INTERFACE-ID`, `INVOKE`, `LC_ALL`, `LC_COLLATE`, `LC_CTYPE`, `LC_MESSAGES`, `LC_MONETARY`, `LC_NUMERIC`, `LC_TIME`, `LINE-COUNTER`, `MESSAGE`, `METHOD`, `METHOD-ID`, `NESTED`, `NONE`, `NORMAL`, `OBJECT`, `OBJECT-REFERENCE`, `OPTIONS`, `OVERRIDE`, `PAGE-COUNTER`, `PF`, `PH`, `PROPERTY`, `PROTOTYPE`, `PURGE`, `QUEUE`, `RAISE`, `RAISING`, `RECEIVE`, `RELATION`, `REPLACE`, `REPRESENTS-NOT-A-NUMBER`, `RESET`, `RESUME`, `RETRY`, `RF`, `RH`, `SECONDS`, `SEGMENT`, `SELF`, `SEND`, `SOURCES`, `STATEMENT`, `STEP`, `STRONG`, `SUB-QUEUE-1`, `SUB-QUEUE-2`, `SUB-QUEUE-3`, `SUPER`, `SYMBOL`, `SYSTEM-DEFAULT`, `TABLE`, `TERMINAL`, `TEXT`, `TYPEDEF`, `UCS-4`, `UNIVERSAL`, `USER-DEFAULT`, `UTF-16`, `UTF-8`, `VAL-STATUS`, `VALID`, `VALIDATE`, `VALIDATE-STATUS`), Error, nil},\n-\t\t\t{`(^|(?<=[^\\w\\-]))(PIC\\s+.+?(?=(\\s|\\.\\s))|PICTURE\\s+.+?(?=(\\s|\\.\\s))|(COMPUTATIONAL)(-[1-5X])?|(COMP)(-[1-5X])?|BINARY-C-LONG|BINARY-CHAR|BINARY-DOUBLE|BINARY-LONG|BINARY-SHORT|BINARY)\\s*($|(?=[^\\w\\-]))`, KeywordType, nil},\n-\t\t\t{`(\\*\\*|\\*|\\+|-|/|<=|>=|<|>|==|/=|=)`, Operator, nil},\n-\t\t\t{`([(),;:&%.])`, Punctuation, nil},\n-\t\t\t{`(^|(?<=[^\\w\\-]))(ABS|ACOS|ANNUITY|ASIN|ATAN|BYTE-LENGTH|CHAR|COMBINED-DATETIME|CONCATENATE|COS|CURRENT-DATE|DATE-OF-INTEGER|DATE-TO-YYYYMMDD|DAY-OF-INTEGER|DAY-TO-YYYYDDD|EXCEPTION-(?:FILE|LOCATION|STATEMENT|STATUS)|EXP10|EXP|E|FACTORIAL|FRACTION-PART|INTEGER-OF-(?:DATE|DAY|PART)|INTEGER|LENGTH|LOCALE-(?:DATE|TIME(?:-FROM-SECONDS)?)|LOG(?:10)?|LOWER-CASE|MAX|MEAN|MEDIAN|MIDRANGE|MIN|MOD|NUMVAL(?:-C)?|ORD(?:-MAX|-MIN)?|PI|PRESENT-VALUE|RANDOM|RANGE|REM|REVERSE|SECONDS-FROM-FORMATTED-TIME|SECONDS-PAST-MIDNIGHT|SIGN|SIN|SQRT|STANDARD-DEVIATION|STORED-CHAR-LENGTH|SUBSTITUTE(?:-CASE)?|SUM|TAN|TEST-DATE-YYYYMMDD|TEST-DAY-YYYYDDD|TRIM|UPPER-CASE|VARIANCE|WHEN-COMPILED|YEAR-TO-YYYY)\\s*($|(?=[^\\w\\-]))`, NameFunction, nil},\n-\t\t\t{`(^|(?<=[^\\w\\-]))(true|false)\\s*($|(?=[^\\w\\-]))`, NameBuiltin, nil},\n-\t\t\t{`(^|(?<=[^\\w\\-]))(equal|equals|ne|lt|le|gt|ge|greater|less|than|not|and|or)\\s*($|(?=[^\\w\\-]))`, OperatorWord, nil},\n-\t\t},\n-\t\t\"strings\": {\n-\t\t\t{`\"[^\"\\n]*(\"|\\n)`, LiteralStringDouble, nil},\n-\t\t\t{`'[^'\\n]*('|\\n)`, LiteralStringSingle, nil},\n-\t\t},\n-\t\t\"nums\": {\n-\t\t\t{`\\d+(\\s*|\\.$|$)`, LiteralNumberInteger, nil},\n-\t\t\t{`[+-]?\\d*\\.\\d+(E[-+]?\\d+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`[+-]?\\d+\\.\\d*(E[-+]?\\d+)?`, LiteralNumberFloat, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "381a8fed86dfa1eb0f2e270676974a1de1c70de1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/coffee.go",
      "status": "removed",
      "additions": 0,
      "deletions": 95,
      "changes": 95,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcoffee.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcoffee.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcoffee.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,95 +0,0 @@\n-package c\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Coffeescript lexer.\n-var Coffeescript = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:         \"CoffeeScript\",\n-\t\tAliases:      []string{\"coffee-script\", \"coffeescript\", \"coffee\"},\n-\t\tFilenames:    []string{\"*.coffee\"},\n-\t\tMimeTypes:    []string{\"text/coffeescript\"},\n-\t\tNotMultiline: true,\n-\t\tDotAll:       true,\n-\t},\n-\tcoffeescriptRules,\n-))\n-\n-func coffeescriptRules() Rules {\n-\treturn Rules{\n-\t\t\"commentsandwhitespace\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`###[^#].*?###`, CommentMultiline, nil},\n-\t\t\t{`#(?!##[^#]).*?\\n`, CommentSingle, nil},\n-\t\t},\n-\t\t\"multilineregex\": {\n-\t\t\t{`[^/#]+`, LiteralStringRegex, nil},\n-\t\t\t{`///([gim]+\\b|\\B)`, LiteralStringRegex, Pop(1)},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpoling_string\")},\n-\t\t\t{`[/#]`, LiteralStringRegex, nil},\n-\t\t},\n-\t\t\"slashstartsregex\": {\n-\t\t\tInclude(\"commentsandwhitespace\"),\n-\t\t\t{`///`, LiteralStringRegex, Push(\"#pop\", \"multilineregex\")},\n-\t\t\t{`/(?! )(\\\\.|[^[/\\\\\\n]|\\[(\\\\.|[^\\]\\\\\\n])*])+/([gim]+\\b|\\B)`, LiteralStringRegex, Pop(1)},\n-\t\t\t{`/`, Operator, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"root\": {\n-\t\t\tInclude(\"commentsandwhitespace\"),\n-\t\t\t{`^(?=\\s|/)`, Text, Push(\"slashstartsregex\")},\n-\t\t\t{\"\\\\+\\\\+|~|&&|\\\\band\\\\b|\\\\bor\\\\b|\\\\bis\\\\b|\\\\bisnt\\\\b|\\\\bnot\\\\b|\\\\?|:|\\\\|\\\\||\\\\\\\\(?=\\\\n)|(<<|>>>?|==?(?!>)|!=?|=(?!>)|-(?!>)|[<>+*`%&\\\\|\\\\^/])=?\", Operator, Push(\"slashstartsregex\")},\n-\t\t\t{`(?:\\([^()]*\\))?\\s*[=-]>`, NameFunction, Push(\"slashstartsregex\")},\n-\t\t\t{`[{(\\[;,]`, Punctuation, Push(\"slashstartsregex\")},\n-\t\t\t{`[})\\].]`, Punctuation, nil},\n-\t\t\t{`(?<![.$])(for|own|in|of|while|until|loop|break|return|continue|switch|when|then|if|unless|else|throw|try|catch|finally|new|delete|typeof|instanceof|super|extends|this|class|by)\\b`, Keyword, Push(\"slashstartsregex\")},\n-\t\t\t{`(?<![.$])(true|false|yes|no|on|off|null|NaN|Infinity|undefined)\\b`, KeywordConstant, nil},\n-\t\t\t{`(Array|Boolean|Date|Error|Function|Math|netscape|Number|Object|Packages|RegExp|String|sun|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|isNaN|parseFloat|parseInt|document|window)\\b`, NameBuiltin, nil},\n-\t\t\t{`[$a-zA-Z_][\\w.:$]*\\s*[:=]\\s`, NameVariable, Push(\"slashstartsregex\")},\n-\t\t\t{`@[$a-zA-Z_][\\w.:$]*\\s*[:=]\\s`, NameVariableInstance, Push(\"slashstartsregex\")},\n-\t\t\t{`@`, NameOther, Push(\"slashstartsregex\")},\n-\t\t\t{`@?[$a-zA-Z_][\\w$]*`, NameOther, nil},\n-\t\t\t{`[0-9][0-9]*\\.[0-9]+([eE][0-9]+)?[fd]?`, LiteralNumberFloat, nil},\n-\t\t\t{`0x[0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`\"\"\"`, LiteralString, Push(\"tdqs\")},\n-\t\t\t{`'''`, LiteralString, Push(\"tsqs\")},\n-\t\t\t{`\"`, LiteralString, Push(\"dqs\")},\n-\t\t\t{`'`, LiteralString, Push(\"sqs\")},\n-\t\t},\n-\t\t\"strings\": {\n-\t\t\t{`[^#\\\\\\'\"]+`, LiteralString, nil},\n-\t\t},\n-\t\t\"interpoling_string\": {\n-\t\t\t{`\\}`, LiteralStringInterpol, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"dqs\": {\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`\\\\.|\\'`, LiteralString, nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpoling_string\")},\n-\t\t\t{`#`, LiteralString, nil},\n-\t\t\tInclude(\"strings\"),\n-\t\t},\n-\t\t\"sqs\": {\n-\t\t\t{`'`, LiteralString, Pop(1)},\n-\t\t\t{`#|\\\\.|\"`, LiteralString, nil},\n-\t\t\tInclude(\"strings\"),\n-\t\t},\n-\t\t\"tdqs\": {\n-\t\t\t{`\"\"\"`, LiteralString, Pop(1)},\n-\t\t\t{`\\\\.|\\'|\"`, LiteralString, nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpoling_string\")},\n-\t\t\t{`#`, LiteralString, nil},\n-\t\t\tInclude(\"strings\"),\n-\t\t},\n-\t\t\"tsqs\": {\n-\t\t\t{`'''`, LiteralString, Pop(1)},\n-\t\t\t{`#|\\\\.|\\'|\"`, LiteralString, nil},\n-\t\t\tInclude(\"strings\"),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "bc28bc3baf2e133155b8257b806f924c70d64983",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/coldfusion.go",
      "status": "removed",
      "additions": 0,
      "deletions": 52,
      "changes": 52,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcoldfusion.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcoldfusion.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcoldfusion.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,52 +0,0 @@\n-package c\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Cfstatement lexer.\n-var Cfstatement = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"cfstatement\",\n-\t\tAliases:         []string{\"cfs\"},\n-\t\tFilenames:       []string{},\n-\t\tMimeTypes:       []string{},\n-\t\tNotMultiline:    true,\n-\t\tCaseInsensitive: true,\n-\t},\n-\tcfstatementRules,\n-))\n-\n-func cfstatementRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*(?:.|\\n)*?\\*/`, CommentMultiline, nil},\n-\t\t\t{`\\+\\+|--`, Operator, nil},\n-\t\t\t{`[-+*/^&=!]`, Operator, nil},\n-\t\t\t{`<=|>=|<|>|==`, Operator, nil},\n-\t\t\t{`mod\\b`, Operator, nil},\n-\t\t\t{`(eq|lt|gt|lte|gte|not|is|and|or)\\b`, Operator, nil},\n-\t\t\t{`\\|\\||&&`, Operator, nil},\n-\t\t\t{`\\?`, Operator, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n-\t\t\t{`'.*?'`, LiteralStringSingle, nil},\n-\t\t\t{`\\d+`, LiteralNumber, nil},\n-\t\t\t{`(if|else|len|var|xml|default|break|switch|component|property|function|do|try|catch|in|continue|for|return|while|required|any|array|binary|boolean|component|date|guid|numeric|query|string|struct|uuid|case)\\b`, Keyword, nil},\n-\t\t\t{`(true|false|null)\\b`, KeywordConstant, nil},\n-\t\t\t{`(application|session|client|cookie|super|this|variables|arguments)\\b`, NameConstant, nil},\n-\t\t\t{`([a-z_$][\\w.]*)(\\s*)(\\()`, ByGroups(NameFunction, Text, Punctuation), nil},\n-\t\t\t{`[a-z_$][\\w.]*`, NameVariable, nil},\n-\t\t\t{`[()\\[\\]{};:,.\\\\]`, Punctuation, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\"\"`, LiteralStringDouble, nil},\n-\t\t\t{`#.+?#`, LiteralStringInterpol, nil},\n-\t\t\t{`[^\"#]+`, LiteralStringDouble, nil},\n-\t\t\t{`#`, LiteralStringDouble, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "e0103ef66bcb6016983d3687f604cb9c2c5e90a0",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/coq.go",
      "status": "removed",
      "additions": 0,
      "deletions": 67,
      "changes": 67,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcoq.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcoq.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcoq.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,67 +0,0 @@\n-package c\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Coq lexer.\n-var Coq = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Coq\",\n-\t\tAliases:   []string{\"coq\"},\n-\t\tFilenames: []string{\"*.v\"},\n-\t\tMimeTypes: []string{\"text/x-coq\"},\n-\t},\n-\tcoqRules,\n-))\n-\n-func coqRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`false|true|\\(\\)|\\[\\]`, NameBuiltinPseudo, nil},\n-\t\t\t{`\\(\\*`, Comment, Push(\"comment\")},\n-\t\t\t{Words(`\\b`, `\\b`, `Section`, `Module`, `End`, `Require`, `Import`, `Export`, `Variable`, `Variables`, `Parameter`, `Parameters`, `Axiom`, `Hypothesis`, `Hypotheses`, `Notation`, `Local`, `Tactic`, `Reserved`, `Scope`, `Open`, `Close`, `Bind`, `Delimit`, `Definition`, `Let`, `Ltac`, `Fixpoint`, `CoFixpoint`, `Morphism`, `Relation`, `Implicit`, `Arguments`, `Set`, `Unset`, `Contextual`, `Strict`, `Prenex`, `Implicits`, `Inductive`, `CoInductive`, `Record`, `Structure`, `Canonical`, `Coercion`, `Theorem`, `Lemma`, `Corollary`, `Proposition`, `Fact`, `Remark`, `Example`, `Proof`, `Goal`, `Save`, `Qed`, `Defined`, `Hint`, `Resolve`, `Rewrite`, `View`, `Search`, `Show`, `Print`, `Printing`, `All`, `Graph`, `Projections`, `inside`, `outside`, `Check`, `Global`, `Instance`, `Class`, `Existing`, `Universe`, `Polymorphic`, `Monomorphic`, `Context`), KeywordNamespace, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `forall`, `exists`, `exists2`, `fun`, `fix`, `cofix`, `struct`, `match`, `end`, `in`, `return`, `let`, `if`, `is`, `then`, `else`, `for`, `of`, `nosimpl`, `with`, `as`), Keyword, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `Type`, `Prop`), KeywordType, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `pose`, `set`, `move`, `case`, `elim`, `apply`, `clear`, `hnf`, `intro`, `intros`, `generalize`, `rename`, `pattern`, `after`, `destruct`, `induction`, `using`, `refine`, `inversion`, `injection`, `rewrite`, `congr`, `unlock`, `compute`, `ring`, `field`, `replace`, `fold`, `unfold`, `change`, `cutrewrite`, `simpl`, `have`, `suff`, `wlog`, `suffices`, `without`, `loss`, `nat_norm`, `assert`, `cut`, `trivial`, `revert`, `bool_congr`, `nat_congr`, `symmetry`, `transitivity`, `auto`, `split`, `left`, `right`, `autorewrite`, `tauto`, `setoid_rewrite`, `intuition`, `eauto`, `eapply`, `econstructor`, `etransitivity`, `constructor`, `erewrite`, `red`, `cbv`, `lazy`, `vm_compute`, `native_compute`, `subst`), Keyword, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `by`, `done`, `exact`, `reflexivity`, `tauto`, `romega`, `omega`, `assumption`, `solve`, `contradiction`, `discriminate`, `congruence`), KeywordPseudo, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `do`, `last`, `first`, `try`, `idtac`, `repeat`), KeywordReserved, nil},\n-\t\t\t{`\\b([A-Z][\\w\\']*)`, Name, nil},\n-\t\t\t{\"(\\u03bb|\\u03a0|\\\\|\\\\}|\\\\{\\\\||\\\\\\\\/|/\\\\\\\\|=>|~|\\\\}|\\\\|]|\\\\||\\\\{<|\\\\{|`|_|]|\\\\[\\\\||\\\\[>|\\\\[<|\\\\[|\\\\?\\\\?|\\\\?|>\\\\}|>]|>|=|<->|<-|<|;;|;|:>|:=|::|:|\\\\.\\\\.|\\\\.|->|-\\\\.|-|,|\\\\+|\\\\*|\\\\)|\\\\(|&&|&|#|!=)\", Operator, nil},\n-\t\t\t{`([=<>@^|&+\\*/$%-]|[!?~])?[!$%&*+\\./:<=>?@^|~-]`, Operator, nil},\n-\t\t\t{`\\b(unit|nat|bool|string|ascii|list)\\b`, KeywordType, nil},\n-\t\t\t{`[^\\W\\d][\\w']*`, Name, nil},\n-\t\t\t{`\\d[\\d_]*`, LiteralNumberInteger, nil},\n-\t\t\t{`0[xX][\\da-fA-F][\\da-fA-F_]*`, LiteralNumberHex, nil},\n-\t\t\t{`0[oO][0-7][0-7_]*`, LiteralNumberOct, nil},\n-\t\t\t{`0[bB][01][01_]*`, LiteralNumberBin, nil},\n-\t\t\t{`-?\\d[\\d_]*(.[\\d_]*)?([eE][+\\-]?\\d[\\d_]*)`, LiteralNumberFloat, nil},\n-\t\t\t{`'(?:(\\\\[\\\\\\\"'ntbr ])|(\\\\[0-9]{3})|(\\\\x[0-9a-fA-F]{2}))'`, LiteralStringChar, nil},\n-\t\t\t{`'.'`, LiteralStringChar, nil},\n-\t\t\t{`'`, Keyword, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n-\t\t\t{`[~?][a-z][\\w\\']*:`, Name, nil},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`[^(*)]+`, Comment, nil},\n-\t\t\t{`\\(\\*`, Comment, Push()},\n-\t\t\t{`\\*\\)`, Comment, Pop(1)},\n-\t\t\t{`[(*)]`, Comment, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`[^\"]+`, LiteralStringDouble, nil},\n-\t\t\t{`\"\"`, LiteralStringDouble, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t},\n-\t\t\"dotted\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\.`, Punctuation, nil},\n-\t\t\t{`[A-Z][\\w\\']*(?=\\s*\\.)`, NameNamespace, nil},\n-\t\t\t{`[A-Z][\\w\\']*`, NameClass, Pop(1)},\n-\t\t\t{`[a-z][a-z0-9_\\']*`, Name, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "3f4a1fde05cd6dd6a3d55a8b77f8407f7ed2b7e6",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/cpp.go",
      "status": "removed",
      "additions": 0,
      "deletions": 110,
      "changes": 110,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcpp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcpp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcpp.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,110 +0,0 @@\n-package c\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// CPP lexer.\n-var CPP = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"C++\",\n-\t\tAliases:   []string{\"cpp\", \"c++\"},\n-\t\tFilenames: []string{\"*.cpp\", \"*.hpp\", \"*.c++\", \"*.h++\", \"*.cc\", \"*.hh\", \"*.cxx\", \"*.hxx\", \"*.C\", \"*.H\", \"*.cp\", \"*.CPP\"},\n-\t\tMimeTypes: []string{\"text/x-c++hdr\", \"text/x-c++src\"},\n-\t\tEnsureNL:  true,\n-\t},\n-\tcppRules,\n-))\n-\n-func cppRules() Rules {\n-\treturn Rules{\n-\t\t\"statements\": {\n-\t\t\t{Words(``, `\\b`, `catch`, `const_cast`, `delete`, `dynamic_cast`, `explicit`, `export`, `friend`, `mutable`, `namespace`, `new`, `operator`, `private`, `protected`, `public`, `reinterpret_cast`, `restrict`, `static_cast`, `template`, `this`, `throw`, `throws`, `try`, `typeid`, `typename`, `using`, `virtual`, `constexpr`, `nullptr`, `decltype`, `thread_local`, `alignas`, `alignof`, `static_assert`, `noexcept`, `override`, `final`, `concept`, `requires`, `consteval`, `co_await`, `co_return`, `co_yield`), Keyword, nil},\n-\t\t\t{`(enum)\\b(\\s+)(class)\\b(\\s*)`, ByGroups(Keyword, Text, Keyword, Text), Push(\"classname\")},\n-\t\t\t{`(class|struct|enum|union)\\b(\\s*)`, ByGroups(Keyword, Text), Push(\"classname\")},\n-\t\t\t{`\\[\\[.+\\]\\]`, NameAttribute, nil},\n-\t\t\t{`(R)(\")([^\\\\()\\s]{,16})(\\()((?:.|\\n)*?)(\\)\\3)(\")`, ByGroups(LiteralStringAffix, LiteralString, LiteralStringDelimiter, LiteralStringDelimiter, LiteralString, LiteralStringDelimiter, LiteralString), nil},\n-\t\t\t{`(u8|u|U)(\")`, ByGroups(LiteralStringAffix, LiteralString), Push(\"string\")},\n-\t\t\t{`(L?)(\")`, ByGroups(LiteralStringAffix, LiteralString), Push(\"string\")},\n-\t\t\t{`(L?)(')(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-fA-F0-9]{1,2}|[^\\\\\\'\\n])(')`, ByGroups(LiteralStringAffix, LiteralStringChar, LiteralStringChar, LiteralStringChar), nil},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+)[eE][+-]?\\d+[LlUu]*`, LiteralNumberFloat, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+[fF])[fF]?`, LiteralNumberFloat, nil},\n-\t\t\t{`0[xX]([0-9A-Fa-f]('?[0-9A-Fa-f]+)*)[LlUu]*`, LiteralNumberHex, nil},\n-\t\t\t{`0('?[0-7]+)+[LlUu]*`, LiteralNumberOct, nil},\n-\t\t\t{`0[Bb][01]('?[01]+)*[LlUu]*`, LiteralNumberBin, nil},\n-\t\t\t{`[0-9]('?[0-9]+)*[LlUu]*`, LiteralNumberInteger, nil},\n-\t\t\t{`\\*/`, Error, nil},\n-\t\t\t{`[~!%^&*+=|?:<>/-]`, Operator, nil},\n-\t\t\t{`[()\\[\\],.]`, Punctuation, nil},\n-\t\t\t{Words(``, `\\b`, `asm`, `auto`, `break`, `case`, `const`, `continue`, `default`, `do`, `else`, `enum`, `extern`, `for`, `goto`, `if`, `register`, `restricted`, `return`, `sizeof`, `static`, `struct`, `switch`, `typedef`, `union`, `volatile`, `while`), Keyword, nil},\n-\t\t\t{`(bool|int|long|float|short|double|char((8|16|32)_t)?|wchar_t|unsigned|signed|void|u?int(_fast|_least|)(8|16|32|64)_t)\\b`, KeywordType, nil},\n-\t\t\t{Words(``, `\\b`, `inline`, `_inline`, `__inline`, `naked`, `restrict`, `thread`, `typename`), KeywordReserved, nil},\n-\t\t\t{`(__m(128i|128d|128|64))\\b`, KeywordReserved, nil},\n-\t\t\t{Words(`__`, `\\b`, `asm`, `int8`, `based`, `except`, `int16`, `stdcall`, `cdecl`, `fastcall`, `int32`, `declspec`, `finally`, `int64`, `try`, `leave`, `w64`, `unaligned`, `raise`, `noop`, `identifier`, `forceinline`, `assume`), KeywordReserved, nil},\n-\t\t\t{`(true|false|NULL)\\b`, NameBuiltin, nil},\n-\t\t\t{`([a-zA-Z_]\\w*)(\\s*)(:)(?!:)`, ByGroups(NameLabel, Text, Punctuation), nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`((?:[\\w*\\s])+?(?:\\s|[*]))([a-zA-Z_]\\w*)(\\s*\\([^;]*?\\))([^;{]*)(\\{)`, ByGroups(UsingSelf(\"root\"), NameFunction, UsingSelf(\"root\"), UsingSelf(\"root\"), Punctuation), Push(\"function\")},\n-\t\t\t{`((?:[\\w*\\s])+?(?:\\s|[*]))([a-zA-Z_]\\w*)(\\s*\\([^;]*?\\))([^;]*)(;)`, ByGroups(UsingSelf(\"root\"), NameFunction, UsingSelf(\"root\"), UsingSelf(\"root\"), Punctuation), nil},\n-\t\t\tDefault(Push(\"statement\")),\n-\t\t\t{Words(`__`, `\\b`, `virtual_inheritance`, `uuidof`, `super`, `single_inheritance`, `multiple_inheritance`, `interface`, `event`), KeywordReserved, nil},\n-\t\t\t{`__(offload|blockingoffload|outer)\\b`, KeywordPseudo, nil},\n-\t\t},\n-\t\t\"classname\": {\n-\t\t\t{`(\\[\\[.+\\]\\])(\\s*)`, ByGroups(NameAttribute, Text), nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, NameClass, Pop(1)},\n-\t\t\t{`\\s*(?=[>{])`, Text, Pop(1)},\n-\t\t},\n-\t\t\"whitespace\": {\n-\t\t\t{`^#if\\s+0`, CommentPreproc, Push(\"if0\")},\n-\t\t\t{`^#`, CommentPreproc, Push(\"macro\")},\n-\t\t\t{`^(\\s*(?:/[*].*?[*]/\\s*)?)(#if\\s+0)`, ByGroups(UsingSelf(\"root\"), CommentPreproc), Push(\"if0\")},\n-\t\t\t{`^(\\s*(?:/[*].*?[*]/\\s*)?)(#)`, ByGroups(UsingSelf(\"root\"), CommentPreproc), Push(\"macro\")},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`//(\\n|[\\w\\W]*?[^\\\\]\\n)`, CommentSingle, nil},\n-\t\t\t{`/(\\\\\\n)?[*][\\w\\W]*?[*](\\\\\\n)?/`, CommentMultiline, nil},\n-\t\t\t{`/(\\\\\\n)?[*][\\w\\W]*`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"statement\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"statements\"),\n-\t\t\t{`[{]`, Punctuation, Push(\"root\")},\n-\t\t\t{`[;}]`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"function\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"statements\"),\n-\t\t\t{`;`, Punctuation, nil},\n-\t\t\t{`\\{`, Punctuation, Push()},\n-\t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`\\\\([\\\\abfnrtv\"\\']|x[a-fA-F0-9]{2,4}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8}|[0-7]{1,3})`, LiteralStringEscape, nil},\n-\t\t\t{`[^\\\\\"\\n]+`, LiteralString, nil},\n-\t\t\t{`\\\\\\n`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralString, nil},\n-\t\t},\n-\t\t\"macro\": {\n-\t\t\t{`(include)(\\s*(?:/[*].*?[*]/\\s*)?)([^\\n]+)`, ByGroups(CommentPreproc, Text, CommentPreprocFile), nil},\n-\t\t\t{`[^/\\n]+`, CommentPreproc, nil},\n-\t\t\t{`/[*](.|\\n)*?[*]/`, CommentMultiline, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, Pop(1)},\n-\t\t\t{`/`, CommentPreproc, nil},\n-\t\t\t{`(?<=\\\\)\\n`, CommentPreproc, nil},\n-\t\t\t{`\\n`, CommentPreproc, Pop(1)},\n-\t\t},\n-\t\t\"if0\": {\n-\t\t\t{`^\\s*#if.*?(?<!\\\\)\\n`, CommentPreproc, Push()},\n-\t\t\t{`^\\s*#el(?:se|if).*\\n`, CommentPreproc, Pop(1)},\n-\t\t\t{`^\\s*#endif.*?(?<!\\\\)\\n`, CommentPreproc, Pop(1)},\n-\t\t\t{`.*?\\n`, Comment, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "f06830d2950a017f388809a21ae093ef18d7611b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/crystal.go",
      "status": "removed",
      "additions": 0,
      "deletions": 266,
      "changes": 266,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcrystal.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcrystal.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcrystal.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,266 +0,0 @@\n-package c\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Crystal lexer.\n-var Crystal = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Crystal\",\n-\t\tAliases:   []string{\"cr\", \"crystal\"},\n-\t\tFilenames: []string{\"*.cr\"},\n-\t\tMimeTypes: []string{\"text/x-crystal\"},\n-\t\tDotAll:    true,\n-\t},\n-\tcrystalRules,\n-))\n-\n-func crystalRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`#.*?$`, CommentSingle, nil},\n-\t\t\t{Words(``, `\\b`, `abstract`, `asm`, `as`, `begin`, `break`, `case`, `do`, `else`, `elsif`, `end`, `ensure`, `extend`, `ifdef`, `if`, `include`, `instance_sizeof`, `next`, `of`, `pointerof`, `private`, `protected`, `rescue`, `return`, `require`, `sizeof`, `super`, `then`, `typeof`, `unless`, `until`, `when`, `while`, `with`, `yield`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `true`, `false`, `nil`), KeywordConstant, nil},\n-\t\t\t{`(module|lib)(\\s+)([a-zA-Z_]\\w*(?:::[a-zA-Z_]\\w*)*)`, ByGroups(Keyword, Text, NameNamespace), nil},\n-\t\t\t{`(def|fun|macro)(\\s+)((?:[a-zA-Z_]\\w*::)*)`, ByGroups(Keyword, Text, NameNamespace), Push(\"funcname\")},\n-\t\t\t{\"def(?=[*%&^`~+-/\\\\[<>=])\", Keyword, Push(\"funcname\")},\n-\t\t\t{`(class|struct|union|type|alias|enum)(\\s+)((?:[a-zA-Z_]\\w*::)*)`, ByGroups(Keyword, Text, NameNamespace), Push(\"classname\")},\n-\t\t\t{`(self|out|uninitialized)\\b|(is_a|responds_to)\\?`, KeywordPseudo, nil},\n-\t\t\t{Words(``, `\\b`, `debugger`, `record`, `pp`, `assert_responds_to`, `spawn`, `parallel`, `getter`, `setter`, `property`, `delegate`, `def_hash`, `def_equals`, `def_equals_and_hash`, `forward_missing_to`), NameBuiltinPseudo, nil},\n-\t\t\t{`getter[!?]|property[!?]|__(DIR|FILE|LINE)__\\b`, NameBuiltinPseudo, nil},\n-\t\t\t{Words(`(?<!\\.)`, `\\b`, `Object`, `Value`, `Struct`, `Reference`, `Proc`, `Class`, `Nil`, `Symbol`, `Enum`, `Void`, `Bool`, `Number`, `Int`, `Int8`, `Int16`, `Int32`, `Int64`, `UInt8`, `UInt16`, `UInt32`, `UInt64`, `Float`, `Float32`, `Float64`, `Char`, `String`, `Pointer`, `Slice`, `Range`, `Exception`, `Regex`, `Mutex`, `StaticArray`, `Array`, `Hash`, `Set`, `Tuple`, `Deque`, `Box`, `Process`, `File`, `Dir`, `Time`, `Channel`, `Concurrent`, `Scheduler`, `abort`, `at_exit`, `caller`, `delay`, `exit`, `fork`, `future`, `get_stack_top`, `gets`, `lazy`, `loop`, `main`, `p`, `print`, `printf`, `puts`, `raise`, `rand`, `read_line`, `sleep`, `sprintf`, `system`, `with_color`), NameBuiltin, nil},\n-\t\t\t{\"(?<!\\\\w)(<<-?)([\\\"`\\\\']?)([a-zA-Z_]\\\\w*)(\\\\2)(.*?\\\\n)\", StringHeredoc, nil},\n-\t\t\t{`(<<-?)(\"|\\')()(\\2)(.*?\\n)`, StringHeredoc, nil},\n-\t\t\t{`__END__`, CommentPreproc, Push(\"end-part\")},\n-\t\t\t{`(?:^|(?<=[=<>~!:])|(?<=(?:\\s|;)when\\s)|(?<=(?:\\s|;)or\\s)|(?<=(?:\\s|;)and\\s)|(?<=\\.index\\s)|(?<=\\.scan\\s)|(?<=\\.sub\\s)|(?<=\\.sub!\\s)|(?<=\\.gsub\\s)|(?<=\\.gsub!\\s)|(?<=\\.match\\s)|(?<=(?:\\s|;)if\\s)|(?<=(?:\\s|;)elsif\\s)|(?<=^when\\s)|(?<=^index\\s)|(?<=^scan\\s)|(?<=^sub\\s)|(?<=^gsub\\s)|(?<=^sub!\\s)|(?<=^gsub!\\s)|(?<=^match\\s)|(?<=^if\\s)|(?<=^elsif\\s))(\\s*)(/)`, ByGroups(Text, LiteralStringRegex), Push(\"multiline-regex\")},\n-\t\t\t{`(?<=\\(|,|\\[)/`, LiteralStringRegex, Push(\"multiline-regex\")},\n-\t\t\t{`(\\s+)(/)(?![\\s=])`, ByGroups(Text, LiteralStringRegex), Push(\"multiline-regex\")},\n-\t\t\t{`(0o[0-7]+(?:_[0-7]+)*(?:_?[iu][0-9]+)?)\\b(\\s*)([/?])?`, ByGroups(LiteralNumberOct, Text, Operator), nil},\n-\t\t\t{`(0x[0-9A-Fa-f]+(?:_[0-9A-Fa-f]+)*(?:_?[iu][0-9]+)?)\\b(\\s*)([/?])?`, ByGroups(LiteralNumberHex, Text, Operator), nil},\n-\t\t\t{`(0b[01]+(?:_[01]+)*(?:_?[iu][0-9]+)?)\\b(\\s*)([/?])?`, ByGroups(LiteralNumberBin, Text, Operator), nil},\n-\t\t\t{`((?:0(?![0-9])|[1-9][\\d_]*)(?:\\.\\d[\\d_]*)(?:e[+-]?[0-9]+)?(?:_?f[0-9]+)?)(\\s*)([/?])?`, ByGroups(LiteralNumberFloat, Text, Operator), nil},\n-\t\t\t{`((?:0(?![0-9])|[1-9][\\d_]*)(?:\\.\\d[\\d_]*)?(?:e[+-]?[0-9]+)(?:_?f[0-9]+)?)(\\s*)([/?])?`, ByGroups(LiteralNumberFloat, Text, Operator), nil},\n-\t\t\t{`((?:0(?![0-9])|[1-9][\\d_]*)(?:\\.\\d[\\d_]*)?(?:e[+-]?[0-9]+)?(?:_?f[0-9]+))(\\s*)([/?])?`, ByGroups(LiteralNumberFloat, Text, Operator), nil},\n-\t\t\t{`(0\\b|[1-9][\\d]*(?:_\\d+)*(?:_?[iu][0-9]+)?)\\b(\\s*)([/?])?`, ByGroups(LiteralNumberInteger, Text, Operator), nil},\n-\t\t\t{`@@[a-zA-Z_]\\w*`, NameVariableClass, nil},\n-\t\t\t{`@[a-zA-Z_]\\w*`, NameVariableInstance, nil},\n-\t\t\t{`\\$\\w+`, NameVariableGlobal, nil},\n-\t\t\t{\"\\\\$[!@&`\\\\'+~=/\\\\\\\\,;.<>_*$?:\\\"^-]\", NameVariableGlobal, nil},\n-\t\t\t{`\\$-[0adFiIlpvw]`, NameVariableGlobal, nil},\n-\t\t\t{`::`, Operator, nil},\n-\t\t\tInclude(\"strings\"),\n-\t\t\t{`\\?(\\\\[MC]-)*(\\\\([\\\\befnrtv#\"\\']|x[a-fA-F0-9]{1,2}|[0-7]{1,3})|\\S)(?!\\w)`, LiteralStringChar, nil},\n-\t\t\t{`[A-Z][A-Z_]+\\b`, NameConstant, nil},\n-\t\t\t{`\\{%`, LiteralStringInterpol, Push(\"in-macro-control\")},\n-\t\t\t{`\\{\\{`, LiteralStringInterpol, Push(\"in-macro-expr\")},\n-\t\t\t{`(@\\[)(\\s*)([A-Z]\\w*)`, ByGroups(Operator, Text, NameDecorator), Push(\"in-attr\")},\n-\t\t\t{Words(`(\\.|::)`, ``, `!=`, `!~`, `!`, `%`, `&&`, `&`, `**`, `*`, `+`, `-`, `/`, `<=>`, `<<`, `<=`, `<`, `===`, `==`, `=~`, `=`, `>=`, `>>`, `>`, `[]=`, `[]?`, `[]`, `^`, `||`, `|`, `~`), ByGroups(Operator, NameOperator), nil},\n-\t\t\t{\"(\\\\.|::)([a-zA-Z_]\\\\w*[!?]?|[*%&^`~+\\\\-/\\\\[<>=])\", ByGroups(Operator, Name), nil},\n-\t\t\t{`[a-zA-Z_]\\w*(?:[!?](?!=))?`, Name, nil},\n-\t\t\t{`(\\[|\\]\\??|\\*\\*|<=>?|>=|<<?|>>?|=~|===|!~|&&?|\\|\\||\\.{1,3})`, Operator, nil},\n-\t\t\t{`[-+/*%=<>&!^|~]=?`, Operator, nil},\n-\t\t\t{`[(){};,/?:\\\\]`, Punctuation, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t\t\"funcname\": {\n-\t\t\t{\"(?:([a-zA-Z_]\\\\w*)(\\\\.))?([a-zA-Z_]\\\\w*[!?]?|\\\\*\\\\*?|[-+]@?|[/%&|^`~]|\\\\[\\\\]=?|<<|>>|<=?>|>=?|===?)\", ByGroups(NameClass, Operator, NameFunction), Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"classname\": {\n-\t\t\t{`[A-Z_]\\w*`, NameClass, nil},\n-\t\t\t{`(\\()(\\s*)([A-Z_]\\w*)(\\s*)(\\))`, ByGroups(Punctuation, Text, NameClass, Text, Punctuation), nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"in-intp\": {\n-\t\t\t{`\\{`, LiteralStringInterpol, Push()},\n-\t\t\t{`\\}`, LiteralStringInterpol, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"string-intp\": {\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"in-intp\")},\n-\t\t},\n-\t\t\"string-escaped\": {\n-\t\t\t{`\\\\([\\\\befnstv#\"\\']|x[a-fA-F0-9]{1,2}|[0-7]{1,3})`, LiteralStringEscape, nil},\n-\t\t},\n-\t\t\"string-intp-escaped\": {\n-\t\t\tInclude(\"string-intp\"),\n-\t\t\tInclude(\"string-escaped\"),\n-\t\t},\n-\t\t\"interpolated-regex\": {\n-\t\t\tInclude(\"string-intp\"),\n-\t\t\t{`[\\\\#]`, LiteralStringRegex, nil},\n-\t\t\t{`[^\\\\#]+`, LiteralStringRegex, nil},\n-\t\t},\n-\t\t\"interpolated-string\": {\n-\t\t\tInclude(\"string-intp\"),\n-\t\t\t{`[\\\\#]`, LiteralStringOther, nil},\n-\t\t\t{`[^\\\\#]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"multiline-regex\": {\n-\t\t\tInclude(\"string-intp\"),\n-\t\t\t{`\\\\\\\\`, LiteralStringRegex, nil},\n-\t\t\t{`\\\\/`, LiteralStringRegex, nil},\n-\t\t\t{`[\\\\#]`, LiteralStringRegex, nil},\n-\t\t\t{`[^\\\\/#]+`, LiteralStringRegex, nil},\n-\t\t\t{`/[imsx]*`, LiteralStringRegex, Pop(1)},\n-\t\t},\n-\t\t\"end-part\": {\n-\t\t\t{`.+`, CommentPreproc, Pop(1)},\n-\t\t},\n-\t\t\"in-macro-control\": {\n-\t\t\t{`\\{%`, LiteralStringInterpol, Push()},\n-\t\t\t{`%\\}`, LiteralStringInterpol, Pop(1)},\n-\t\t\t{`for\\b|in\\b`, Keyword, nil},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"in-macro-expr\": {\n-\t\t\t{`\\{\\{`, LiteralStringInterpol, Push()},\n-\t\t\t{`\\}\\}`, LiteralStringInterpol, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"in-attr\": {\n-\t\t\t{`\\[`, Operator, Push()},\n-\t\t\t{`\\]`, Operator, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"strings\": {\n-\t\t\t{`\\:@{0,2}[a-zA-Z_]\\w*[!?]?`, LiteralStringSymbol, nil},\n-\t\t\t{Words(`\\:@{0,2}`, ``, `!=`, `!~`, `!`, `%`, `&&`, `&`, `**`, `*`, `+`, `-`, `/`, `<=>`, `<<`, `<=`, `<`, `===`, `==`, `=~`, `=`, `>=`, `>>`, `>`, `[]=`, `[]?`, `[]`, `^`, `||`, `|`, `~`), LiteralStringSymbol, nil},\n-\t\t\t{`:'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSymbol, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^']|\\\\[^'\\\\]+)'`, LiteralStringChar, nil},\n-\t\t\t{`:\"`, LiteralStringSymbol, Push(\"simple-sym\")},\n-\t\t\t{`([a-zA-Z_]\\w*)(:)(?!:)`, ByGroups(LiteralStringSymbol, Punctuation), nil},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"simple-string\")},\n-\t\t\t{\"(?<!\\\\.)`\", LiteralStringBacktick, Push(\"simple-backtick\")},\n-\t\t\t{`%\\{`, LiteralStringOther, Push(\"cb-intp-string\")},\n-\t\t\t{`%[wi]\\{`, LiteralStringOther, Push(\"cb-string\")},\n-\t\t\t{`%r\\{`, LiteralStringRegex, Push(\"cb-regex\")},\n-\t\t\t{`%\\[`, LiteralStringOther, Push(\"sb-intp-string\")},\n-\t\t\t{`%[wi]\\[`, LiteralStringOther, Push(\"sb-string\")},\n-\t\t\t{`%r\\[`, LiteralStringRegex, Push(\"sb-regex\")},\n-\t\t\t{`%\\(`, LiteralStringOther, Push(\"pa-intp-string\")},\n-\t\t\t{`%[wi]\\(`, LiteralStringOther, Push(\"pa-string\")},\n-\t\t\t{`%r\\(`, LiteralStringRegex, Push(\"pa-regex\")},\n-\t\t\t{`%<`, LiteralStringOther, Push(\"ab-intp-string\")},\n-\t\t\t{`%[wi]<`, LiteralStringOther, Push(\"ab-string\")},\n-\t\t\t{`%r<`, LiteralStringRegex, Push(\"ab-regex\")},\n-\t\t\t{`(%r([\\W_]))((?:\\\\\\2|(?!\\2).)*)(\\2[imsx]*)`, String, nil},\n-\t\t\t{`(%[wi]([\\W_]))((?:\\\\\\2|(?!\\2).)*)(\\2)`, String, nil},\n-\t\t\t{`(?<=[-+/*%=<>&!^|~,(])(\\s*)(%([\\t ])(?:(?:\\\\\\3|(?!\\3).)*)\\3)`, ByGroups(Text, LiteralStringOther, None), nil},\n-\t\t\t{`^(\\s*)(%([\\t ])(?:(?:\\\\\\3|(?!\\3).)*)\\3)`, ByGroups(Text, LiteralStringOther, None), nil},\n-\t\t\t{`(%([\\[{(<]))((?:\\\\\\2|(?!\\2).)*)(\\2)`, String, nil},\n-\t\t},\n-\t\t\"simple-string\": {\n-\t\t\tInclude(\"string-intp-escaped\"),\n-\t\t\t{`[^\\\\\"#]+`, LiteralStringDouble, nil},\n-\t\t\t{`[\\\\#]`, LiteralStringDouble, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t},\n-\t\t\"simple-sym\": {\n-\t\t\tInclude(\"string-escaped\"),\n-\t\t\t{`[^\\\\\"#]+`, LiteralStringSymbol, nil},\n-\t\t\t{`[\\\\#]`, LiteralStringSymbol, nil},\n-\t\t\t{`\"`, LiteralStringSymbol, Pop(1)},\n-\t\t},\n-\t\t\"simple-backtick\": {\n-\t\t\tInclude(\"string-intp-escaped\"),\n-\t\t\t{\"[^\\\\\\\\`#]+\", LiteralStringBacktick, nil},\n-\t\t\t{`[\\\\#]`, LiteralStringBacktick, nil},\n-\t\t\t{\"`\", LiteralStringBacktick, Pop(1)},\n-\t\t},\n-\t\t\"cb-intp-string\": {\n-\t\t\t{`\\\\[\\{]`, LiteralStringOther, nil},\n-\t\t\t{`\\{`, LiteralStringOther, Push()},\n-\t\t\t{`\\}`, LiteralStringOther, Pop(1)},\n-\t\t\tInclude(\"string-intp-escaped\"),\n-\t\t\t{`[\\\\#{}]`, LiteralStringOther, nil},\n-\t\t\t{`[^\\\\#{}]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"cb-string\": {\n-\t\t\t{`\\\\[\\\\{}]`, LiteralStringOther, nil},\n-\t\t\t{`\\{`, LiteralStringOther, Push()},\n-\t\t\t{`\\}`, LiteralStringOther, Pop(1)},\n-\t\t\t{`[\\\\#{}]`, LiteralStringOther, nil},\n-\t\t\t{`[^\\\\#{}]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"cb-regex\": {\n-\t\t\t{`\\\\[\\\\{}]`, LiteralStringRegex, nil},\n-\t\t\t{`\\{`, LiteralStringRegex, Push()},\n-\t\t\t{`\\}[imsx]*`, LiteralStringRegex, Pop(1)},\n-\t\t\tInclude(\"string-intp\"),\n-\t\t\t{`[\\\\#{}]`, LiteralStringRegex, nil},\n-\t\t\t{`[^\\\\#{}]+`, LiteralStringRegex, nil},\n-\t\t},\n-\t\t\"sb-intp-string\": {\n-\t\t\t{`\\\\[\\[]`, LiteralStringOther, nil},\n-\t\t\t{`\\[`, LiteralStringOther, Push()},\n-\t\t\t{`\\]`, LiteralStringOther, Pop(1)},\n-\t\t\tInclude(\"string-intp-escaped\"),\n-\t\t\t{`[\\\\#\\[\\]]`, LiteralStringOther, nil},\n-\t\t\t{`[^\\\\#\\[\\]]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"sb-string\": {\n-\t\t\t{`\\\\[\\\\\\[\\]]`, LiteralStringOther, nil},\n-\t\t\t{`\\[`, LiteralStringOther, Push()},\n-\t\t\t{`\\]`, LiteralStringOther, Pop(1)},\n-\t\t\t{`[\\\\#\\[\\]]`, LiteralStringOther, nil},\n-\t\t\t{`[^\\\\#\\[\\]]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"sb-regex\": {\n-\t\t\t{`\\\\[\\\\\\[\\]]`, LiteralStringRegex, nil},\n-\t\t\t{`\\[`, LiteralStringRegex, Push()},\n-\t\t\t{`\\][imsx]*`, LiteralStringRegex, Pop(1)},\n-\t\t\tInclude(\"string-intp\"),\n-\t\t\t{`[\\\\#\\[\\]]`, LiteralStringRegex, nil},\n-\t\t\t{`[^\\\\#\\[\\]]+`, LiteralStringRegex, nil},\n-\t\t},\n-\t\t\"pa-intp-string\": {\n-\t\t\t{`\\\\[\\(]`, LiteralStringOther, nil},\n-\t\t\t{`\\(`, LiteralStringOther, Push()},\n-\t\t\t{`\\)`, LiteralStringOther, Pop(1)},\n-\t\t\tInclude(\"string-intp-escaped\"),\n-\t\t\t{`[\\\\#()]`, LiteralStringOther, nil},\n-\t\t\t{`[^\\\\#()]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"pa-string\": {\n-\t\t\t{`\\\\[\\\\()]`, LiteralStringOther, nil},\n-\t\t\t{`\\(`, LiteralStringOther, Push()},\n-\t\t\t{`\\)`, LiteralStringOther, Pop(1)},\n-\t\t\t{`[\\\\#()]`, LiteralStringOther, nil},\n-\t\t\t{`[^\\\\#()]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"pa-regex\": {\n-\t\t\t{`\\\\[\\\\()]`, LiteralStringRegex, nil},\n-\t\t\t{`\\(`, LiteralStringRegex, Push()},\n-\t\t\t{`\\)[imsx]*`, LiteralStringRegex, Pop(1)},\n-\t\t\tInclude(\"string-intp\"),\n-\t\t\t{`[\\\\#()]`, LiteralStringRegex, nil},\n-\t\t\t{`[^\\\\#()]+`, LiteralStringRegex, nil},\n-\t\t},\n-\t\t\"ab-intp-string\": {\n-\t\t\t{`\\\\[<]`, LiteralStringOther, nil},\n-\t\t\t{`<`, LiteralStringOther, Push()},\n-\t\t\t{`>`, LiteralStringOther, Pop(1)},\n-\t\t\tInclude(\"string-intp-escaped\"),\n-\t\t\t{`[\\\\#<>]`, LiteralStringOther, nil},\n-\t\t\t{`[^\\\\#<>]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"ab-string\": {\n-\t\t\t{`\\\\[\\\\<>]`, LiteralStringOther, nil},\n-\t\t\t{`<`, LiteralStringOther, Push()},\n-\t\t\t{`>`, LiteralStringOther, Pop(1)},\n-\t\t\t{`[\\\\#<>]`, LiteralStringOther, nil},\n-\t\t\t{`[^\\\\#<>]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"ab-regex\": {\n-\t\t\t{`\\\\[\\\\<>]`, LiteralStringRegex, nil},\n-\t\t\t{`<`, LiteralStringRegex, Push()},\n-\t\t\t{`>[imsx]*`, LiteralStringRegex, Pop(1)},\n-\t\t\tInclude(\"string-intp\"),\n-\t\t\t{`[\\\\#<>]`, LiteralStringRegex, nil},\n-\t\t\t{`[^\\\\#<>]+`, LiteralStringRegex, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "4776864dbff2a3ff49beca62d13607b2a8845814",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/csharp.go",
      "status": "removed",
      "additions": 0,
      "deletions": 56,
      "changes": 56,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcsharp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcsharp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcsharp.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,56 +0,0 @@\n-package c\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// CSharp lexer.\n-var CSharp = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"C#\",\n-\t\tAliases:   []string{\"csharp\", \"c#\"},\n-\t\tFilenames: []string{\"*.cs\"},\n-\t\tMimeTypes: []string{\"text/x-csharp\"},\n-\t\tDotAll:    true,\n-\t\tEnsureNL:  true,\n-\t},\n-\tcSharpRules,\n-))\n-\n-func cSharpRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`^\\s*\\[.*?\\]`, NameAttribute, nil},\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`///[^\\n\\r]+`, CommentSpecial, nil},\n-\t\t\t{`//[^\\n\\r]+`, CommentSingle, nil},\n-\t\t\t{`/[*].*?[*]/`, CommentMultiline, nil},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`[~!%^&*()+=|\\[\\]:;,.<>/?-]`, Punctuation, nil},\n-\t\t\t{`[{}]`, Punctuation, nil},\n-\t\t\t{`@\"(\"\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`\\$@?\"(\"\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"\\n])*[\"\\n]`, LiteralString, nil},\n-\t\t\t{`'\\\\.'|'[^\\\\]'`, LiteralStringChar, nil},\n-\t\t\t{`0[xX][0-9a-fA-F]+[Ll]?|[0-9_](\\.[0-9]*)?([eE][+-]?[0-9]+)?[flFLdD]?`, LiteralNumber, nil},\n-\t\t\t{`#[ \\t]*(if|endif|else|elif|define|undef|line|error|warning|region|endregion|pragma|nullable)\\b[^\\n\\r]+`, CommentPreproc, nil},\n-\t\t\t{`\\b(extern)(\\s+)(alias)\\b`, ByGroups(Keyword, Text, Keyword), nil},\n-\t\t\t{`(abstract|as|async|await|base|break|by|case|catch|checked|const|continue|default|delegate|do|else|enum|event|explicit|extern|false|finally|fixed|for|foreach|goto|if|implicit|in|init|internal|is|let|lock|new|null|on|operator|out|override|params|private|protected|public|readonly|ref|return|sealed|sizeof|stackalloc|static|switch|this|throw|true|try|typeof|unchecked|unsafe|virtual|void|while|get|set|new|partial|yield|add|remove|value|alias|ascending|descending|from|group|into|orderby|select|thenby|where|join|equals)\\b`, Keyword, nil},\n-\t\t\t{`(global)(::)`, ByGroups(Keyword, Punctuation), nil},\n-\t\t\t{`(bool|byte|char|decimal|double|dynamic|float|int|long|object|sbyte|short|string|uint|ulong|ushort|var)\\b\\??`, KeywordType, nil},\n-\t\t\t{`(class|struct|record|interface)(\\s+)`, ByGroups(Keyword, Text), Push(\"class\")},\n-\t\t\t{`(namespace|using)(\\s+)`, ByGroups(Keyword, Text), Push(\"namespace\")},\n-\t\t\t{`@?[_a-zA-Z]\\w*`, Name, nil},\n-\t\t},\n-\t\t\"class\": {\n-\t\t\t{`@?[_a-zA-Z]\\w*`, NameClass, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"namespace\": {\n-\t\t\t{`(?=\\()`, Text, Pop(1)},\n-\t\t\t{`(@?[_a-zA-Z]\\w*|\\.)+`, NameNamespace, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "9f3a01d5455dd49b621ca89ed78eefc6bcd944d2",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/css.go",
      "status": "removed",
      "additions": 0,
      "deletions": 121,
      "changes": 121,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcss.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcss.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcss.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,121 +0,0 @@\n-package c\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// CSS lexer.\n-var CSS = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"CSS\",\n-\t\tAliases:   []string{\"css\"},\n-\t\tFilenames: []string{\"*.css\"},\n-\t\tMimeTypes: []string{\"text/css\"},\n-\t},\n-\tcssRules,\n-))\n-\n-func cssRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"basics\"),\n-\t\t},\n-\t\t\"basics\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`/\\*(?:.|\\n)*?\\*/`, Comment, nil},\n-\t\t\t{`\\{`, Punctuation, Push(\"content\")},\n-\t\t\t{`(\\:{1,2})([\\w-]+)`, ByGroups(Punctuation, NameDecorator), nil},\n-\t\t\t{`(\\.)([\\w-]+)`, ByGroups(Punctuation, NameClass), nil},\n-\t\t\t{`(\\#)([\\w-]+)`, ByGroups(Punctuation, NameNamespace), nil},\n-\t\t\t{`(@)([\\w-]+)`, ByGroups(Punctuation, Keyword), Push(\"atrule\")},\n-\t\t\t{`[\\w-]+`, NameTag, nil},\n-\t\t\t{`[~^*!%&$\\[\\]()<>|+=@:;,./?-]`, Operator, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t},\n-\t\t\"atrule\": {\n-\t\t\t{`\\{`, Punctuation, Push(\"atcontent\")},\n-\t\t\t{`;`, Punctuation, Pop(1)},\n-\t\t\tInclude(\"basics\"),\n-\t\t},\n-\t\t\"atcontent\": {\n-\t\t\tInclude(\"basics\"),\n-\t\t\t{`\\}`, Punctuation, Pop(2)},\n-\t\t},\n-\t\t\"atparenthesis\": {\n-\t\t\tInclude(\"common-values\"),\n-\t\t\t{`/\\*(?:.|\\n)*?\\*/`, Comment, nil},\n-\t\t\tInclude(\"numeric-values\"),\n-\t\t\t{`[*+/-]`, Operator, nil},\n-\t\t\t{`[,]`, Punctuation, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t\t{`[a-zA-Z_-]\\w*`, Name, nil},\n-\t\t\t{`\\(`, Punctuation, Push(\"atparenthesis\")},\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"content\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t\t{`;`, Punctuation, nil},\n-\t\t\t{`^@.*?$`, CommentPreproc, nil},\n-\t\t\t{Words(``, ``, `-ms-`, `mso-`, `-moz-`, `-o-`, `-xv-`, `-atsc-`, `-wap-`, `-khtml-`, `-webkit-`, `prince-`, `-ah-`, `-hp-`, `-ro-`, `-rim-`, `-tc-`), KeywordPseudo, nil},\n-\t\t\t{`(align-content|align-items|align-self|alignment-baseline|all|animation|animation-delay|animation-direction|animation-duration|animation-fill-mode|animation-iteration-count|animation-name|animation-play-state|animation-timing-function|appearance|azimuth|backface-visibility|background|background-attachment|background-blend-mode|background-clip|background-color|background-image|background-origin|background-position|background-repeat|background-size|baseline-shift|bookmark-label|bookmark-level|bookmark-state|border|border-bottom|border-bottom-color|border-bottom-left-radius|border-bottom-right-radius|border-bottom-style|border-bottom-width|border-boundary|border-collapse|border-color|border-image|border-image-outset|border-image-repeat|border-image-slice|border-image-source|border-image-width|border-left|border-left-color|border-left-style|border-left-width|border-radius|border-right|border-right-color|border-right-style|border-right-width|border-spacing|border-style|border-top|border-top-color|border-top-left-radius|border-top-right-radius|border-top-style|border-top-width|border-width|bottom|box-decoration-break|box-shadow|box-sizing|box-snap|box-suppress|break-after|break-before|break-inside|caption-side|caret|caret-animation|caret-color|caret-shape|chains|clear|clip|clip-path|clip-rule|color|color-interpolation-filters|column-count|column-fill|column-gap|column-rule|column-rule-color|column-rule-style|column-rule-width|column-span|column-width|columns|content|counter-increment|counter-reset|counter-set|crop|cue|cue-after|cue-before|cursor|direction|display|dominant-baseline|elevation|empty-cells|filter|flex|flex-basis|flex-direction|flex-flow|flex-grow|flex-shrink|flex-wrap|float|float-defer|float-offset|float-reference|flood-color|flood-opacity|flow|flow-from|flow-into|font|font-family|font-feature-settings|font-kerning|font-language-override|font-size|font-size-adjust|font-stretch|font-style|font-synthesis|font-variant|font-variant-alternates|font-variant-caps|font-variant-east-asian|font-variant-ligatures|font-variant-numeric|font-variant-position|font-weight|footnote-display|footnote-policy|glyph-orientation-vertical|grid|grid-area|grid-auto-columns|grid-auto-flow|grid-auto-rows|grid-column|grid-column-end|grid-column-gap|grid-column-start|grid-gap|grid-row|grid-row-end|grid-row-gap|grid-row-start|grid-template|grid-template-areas|grid-template-columns|grid-template-rows|hanging-punctuation|height|hyphenate-character|hyphenate-limit-chars|hyphenate-limit-last|hyphenate-limit-lines|hyphenate-limit-zone|hyphens|image-orientation|image-resolution|initial-letter|initial-letter-align|initial-letter-wrap|isolation|justify-content|justify-items|justify-self|left|letter-spacing|lighting-color|line-break|line-grid|line-height|line-snap|list-style|list-style-image|list-style-position|list-style-type|margin|margin-bottom|margin-left|margin-right|margin-top|marker-side|marquee-direction|marquee-loop|marquee-speed|marquee-style|mask|mask-border|mask-border-mode|mask-border-outset|mask-border-repeat|mask-border-slice|mask-border-source|mask-border-width|mask-clip|mask-composite|mask-image|mask-mode|mask-origin|mask-position|mask-repeat|mask-size|mask-type|max-height|max-lines|max-width|min-height|min-width|mix-blend-mode|motion|motion-offset|motion-path|motion-rotation|move-to|nav-down|nav-left|nav-right|nav-up|object-fit|object-position|offset-after|offset-before|offset-end|offset-start|opacity|order|orphans|outline|outline-color|outline-offset|outline-style|outline-width|overflow|overflow-style|overflow-wrap|overflow-x|overflow-y|padding|padding-bottom|padding-left|padding-right|padding-top|page|page-break-after|page-break-before|page-break-inside|page-policy|pause|pause-after|pause-before|perspective|perspective-origin|pitch|pitch-range|play-during|polar-angle|polar-distance|position|presentation-level|quotes|region-fragment|resize|rest|rest-after|rest-before|richness|right|rotation|rotation-point|ruby-align|ruby-merge|ruby-position|running|scroll-snap-coordinate|scroll-snap-destination|scroll-snap-points-x|scroll-snap-points-y|scroll-snap-type|shape-image-threshold|shape-inside|shape-margin|shape-outside|size|speak|speak-as|speak-header|speak-numeral|speak-punctuation|speech-rate|stress|string-set|tab-size|table-layout|text-align|text-align-last|text-combine-upright|text-decoration|text-decoration-color|text-decoration-line|text-decoration-skip|text-decoration-style|text-emphasis|text-emphasis-color|text-emphasis-position|text-emphasis-style|text-indent|text-justify|text-orientation|text-overflow|text-shadow|text-space-collapse|text-space-trim|text-spacing|text-transform|text-underline-position|text-wrap|top|transform|transform-origin|transform-style|transition|transition-delay|transition-duration|transition-property|transition-timing-function|unicode-bidi|user-select|vertical-align|visibility|voice-balance|voice-duration|voice-family|voice-pitch|voice-range|voice-rate|voice-stress|voice-volume|volume|white-space|widows|width|will-change|word-break|word-spacing|word-wrap|wrap-after|wrap-before|wrap-flow|wrap-inside|wrap-through|writing-mode|z-index)(\\s*)(\\:)`, ByGroups(Keyword, Text, Punctuation), Push(\"value-start\")},\n-\t\t\t{`(--[a-zA-Z_][\\w-]*)(\\s*)(\\:)`, ByGroups(NameVariable, Text, Punctuation), Push(\"value-start\")},\n-\t\t\t{`([a-zA-Z_][\\w-]*)(\\s*)(\\:)`, ByGroups(Name, Text, Punctuation), Push(\"value-start\")},\n-\t\t\t{`/\\*(?:.|\\n)*?\\*/`, Comment, nil},\n-\t\t},\n-\t\t\"value-start\": {\n-\t\t\tInclude(\"common-values\"),\n-\t\t\t{Words(``, `\\b`, `align-content`, `align-items`, `align-self`, `alignment-baseline`, `all`, `animation`, `animation-delay`, `animation-direction`, `animation-duration`, `animation-fill-mode`, `animation-iteration-count`, `animation-name`, `animation-play-state`, `animation-timing-function`, `appearance`, `azimuth`, `backface-visibility`, `background`, `background-attachment`, `background-blend-mode`, `background-clip`, `background-color`, `background-image`, `background-origin`, `background-position`, `background-repeat`, `background-size`, `baseline-shift`, `bookmark-label`, `bookmark-level`, `bookmark-state`, `border`, `border-bottom`, `border-bottom-color`, `border-bottom-left-radius`, `border-bottom-right-radius`, `border-bottom-style`, `border-bottom-width`, `border-boundary`, `border-collapse`, `border-color`, `border-image`, `border-image-outset`, `border-image-repeat`, `border-image-slice`, `border-image-source`, `border-image-width`, `border-left`, `border-left-color`, `border-left-style`, `border-left-width`, `border-radius`, `border-right`, `border-right-color`, `border-right-style`, `border-right-width`, `border-spacing`, `border-style`, `border-top`, `border-top-color`, `border-top-left-radius`, `border-top-right-radius`, `border-top-style`, `border-top-width`, `border-width`, `bottom`, `box-decoration-break`, `box-shadow`, `box-sizing`, `box-snap`, `box-suppress`, `break-after`, `break-before`, `break-inside`, `caption-side`, `caret`, `caret-animation`, `caret-color`, `caret-shape`, `chains`, `clear`, `clip`, `clip-path`, `clip-rule`, `color`, `color-interpolation-filters`, `column-count`, `column-fill`, `column-gap`, `column-rule`, `column-rule-color`, `column-rule-style`, `column-rule-width`, `column-span`, `column-width`, `columns`, `content`, `counter-increment`, `counter-reset`, `counter-set`, `crop`, `cue`, `cue-after`, `cue-before`, `cursor`, `direction`, `display`, `dominant-baseline`, `elevation`, `empty-cells`, `filter`, `flex`, `flex-basis`, `flex-direction`, `flex-flow`, `flex-grow`, `flex-shrink`, `flex-wrap`, `float`, `float-defer`, `float-offset`, `float-reference`, `flood-color`, `flood-opacity`, `flow`, `flow-from`, `flow-into`, `font`, `font-family`, `font-feature-settings`, `font-kerning`, `font-language-override`, `font-size`, `font-size-adjust`, `font-stretch`, `font-style`, `font-synthesis`, `font-variant`, `font-variant-alternates`, `font-variant-caps`, `font-variant-east-asian`, `font-variant-ligatures`, `font-variant-numeric`, `font-variant-position`, `font-weight`, `footnote-display`, `footnote-policy`, `glyph-orientation-vertical`, `grid`, `grid-area`, `grid-auto-columns`, `grid-auto-flow`, `grid-auto-rows`, `grid-column`, `grid-column-end`, `grid-column-gap`, `grid-column-start`, `grid-gap`, `grid-row`, `grid-row-end`, `grid-row-gap`, `grid-row-start`, `grid-template`, `grid-template-areas`, `grid-template-columns`, `grid-template-rows`, `hanging-punctuation`, `height`, `hyphenate-character`, `hyphenate-limit-chars`, `hyphenate-limit-last`, `hyphenate-limit-lines`, `hyphenate-limit-zone`, `hyphens`, `image-orientation`, `image-resolution`, `initial-letter`, `initial-letter-align`, `initial-letter-wrap`, `isolation`, `justify-content`, `justify-items`, `justify-self`, `left`, `letter-spacing`, `lighting-color`, `line-break`, `line-grid`, `line-height`, `line-snap`, `list-style`, `list-style-image`, `list-style-position`, `list-style-type`, `margin`, `margin-bottom`, `margin-left`, `margin-right`, `margin-top`, `marker-side`, `marquee-direction`, `marquee-loop`, `marquee-speed`, `marquee-style`, `mask`, `mask-border`, `mask-border-mode`, `mask-border-outset`, `mask-border-repeat`, `mask-border-slice`, `mask-border-source`, `mask-border-width`, `mask-clip`, `mask-composite`, `mask-image`, `mask-mode`, `mask-origin`, `mask-position`, `mask-repeat`, `mask-size`, `mask-type`, `max-height`, `max-lines`, `max-width`, `min-height`, `min-width`, `mix-blend-mode`, `motion`, `motion-offset`, `motion-path`, `motion-rotation`, `move-to`, `nav-down`, `nav-left`, `nav-right`, `nav-up`, `object-fit`, `object-position`, `offset-after`, `offset-before`, `offset-end`, `offset-start`, `opacity`, `order`, `orphans`, `outline`, `outline-color`, `outline-offset`, `outline-style`, `outline-width`, `overflow`, `overflow-style`, `overflow-wrap`, `overflow-x`, `overflow-y`, `padding`, `padding-bottom`, `padding-left`, `padding-right`, `padding-top`, `page`, `page-break-after`, `page-break-before`, `page-break-inside`, `page-policy`, `pause`, `pause-after`, `pause-before`, `perspective`, `perspective-origin`, `pitch`, `pitch-range`, `play-during`, `polar-angle`, `polar-distance`, `position`, `presentation-level`, `quotes`, `region-fragment`, `resize`, `rest`, `rest-after`, `rest-before`, `richness`, `right`, `rotation`, `rotation-point`, `ruby-align`, `ruby-merge`, `ruby-position`, `running`, `scroll-snap-coordinate`, `scroll-snap-destination`, `scroll-snap-points-x`, `scroll-snap-points-y`, `scroll-snap-type`, `shape-image-threshold`, `shape-inside`, `shape-margin`, `shape-outside`, `size`, `speak`, `speak-as`, `speak-header`, `speak-numeral`, `speak-punctuation`, `speech-rate`, `stress`, `string-set`, `tab-size`, `table-layout`, `text-align`, `text-align-last`, `text-combine-upright`, `text-decoration`, `text-decoration-color`, `text-decoration-line`, `text-decoration-skip`, `text-decoration-style`, `text-emphasis`, `text-emphasis-color`, `text-emphasis-position`, `text-emphasis-style`, `text-indent`, `text-justify`, `text-orientation`, `text-overflow`, `text-shadow`, `text-space-collapse`, `text-space-trim`, `text-spacing`, `text-transform`, `text-underline-position`, `text-wrap`, `top`, `transform`, `transform-origin`, `transform-style`, `transition`, `transition-delay`, `transition-duration`, `transition-property`, `transition-timing-function`, `unicode-bidi`, `user-select`, `vertical-align`, `visibility`, `voice-balance`, `voice-duration`, `voice-family`, `voice-pitch`, `voice-range`, `voice-rate`, `voice-stress`, `voice-volume`, `volume`, `white-space`, `widows`, `width`, `will-change`, `word-break`, `word-spacing`, `word-wrap`, `wrap-after`, `wrap-before`, `wrap-flow`, `wrap-inside`, `wrap-through`, `writing-mode`, `z-index`), Keyword, nil},\n-\t\t\t{`\\!important`, CommentPreproc, nil},\n-\t\t\t{`/\\*(?:.|\\n)*?\\*/`, Comment, nil},\n-\t\t\tInclude(\"numeric-values\"),\n-\t\t\t{`[~^*!%&<>|+=@:./?-]+`, Operator, nil},\n-\t\t\t{`[\\[\\](),]+`, Punctuation, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t\t{`[a-zA-Z_][\\w-]*`, Name, nil},\n-\t\t\t{`;`, Punctuation, Pop(1)},\n-\t\t\t{`\\}`, Punctuation, Pop(2)},\n-\t\t},\n-\t\t\"function-start\": {\n-\t\t\tInclude(\"common-values\"),\n-\t\t\t{`/\\*(?:.|\\n)*?\\*/`, Comment, nil},\n-\t\t\tInclude(\"numeric-values\"),\n-\t\t\t{`[*+/-]`, Operator, nil},\n-\t\t\t{`[,]`, Punctuation, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t\t{`[a-zA-Z_-]\\w*`, Name, nil},\n-\t\t\t{`\\(`, Punctuation, Push(\"atparenthesis\")},\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"common-values\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{Words(``, ``, `-ms-`, `mso-`, `-moz-`, `-o-`, `-xv-`, `-atsc-`, `-wap-`, `-khtml-`, `-webkit-`, `prince-`, `-ah-`, `-hp-`, `-ro-`, `-rim-`, `-tc-`), KeywordPseudo, nil},\n-\t\t\tInclude(\"urls\"),\n-\t\t\t{`(attr|blackness|blend|blenda|blur|brightness|calc|circle|color-mod|contrast|counter|cubic-bezier|device-cmyk|drop-shadow|ellipse|gray|grayscale|hsl|hsla|hue|hue-rotate|hwb|image|inset|invert|lightness|linear-gradient|matrix|matrix3d|opacity|perspective|polygon|radial-gradient|rect|repeating-linear-gradient|repeating-radial-gradient|rgb|rgba|rotate|rotate3d|rotateX|rotateY|rotateZ|saturate|saturation|scale|scale3d|scaleX|scaleY|scaleZ|sepia|shade|skewX|skewY|steps|tint|toggle|translate|translate3d|translateX|translateY|translateZ|whiteness)(\\()`, ByGroups(NameBuiltin, Punctuation), Push(\"function-start\")},\n-\t\t\t{`([a-zA-Z_][\\w-]+)(\\()`, ByGroups(NameFunction, Punctuation), Push(\"function-start\")},\n-\t\t\t{Words(``, `\\b`, `absolute`, `alias`, `all`, `all-petite-caps`, `all-scroll`, `all-small-caps`, `allow-end`, `alpha`, `alternate`, `alternate-reverse`, `always`, `armenian`, `auto`, `avoid`, `avoid-column`, `avoid-page`, `backwards`, `balance`, `baseline`, `below`, `blink`, `block`, `bold`, `bolder`, `border-box`, `both`, `bottom`, `box-decoration`, `break-word`, `capitalize`, `cell`, `center`, `circle`, `clip`, `clone`, `close-quote`, `col-resize`, `collapse`, `color`, `color-burn`, `color-dodge`, `column`, `column-reverse`, `compact`, `condensed`, `contain`, `container`, `content-box`, `context-menu`, `copy`, `cover`, `crisp-edges`, `crosshair`, `currentColor`, `cursive`, `darken`, `dashed`, `decimal`, `decimal-leading-zero`, `default`, `descendants`, `difference`, `digits`, `disc`, `distribute`, `dot`, `dotted`, `double`, `double-circle`, `e-resize`, `each-line`, `ease`, `ease-in`, `ease-in-out`, `ease-out`, `edges`, `ellipsis`, `end`, `ew-resize`, `exclusion`, `expanded`, `extra-condensed`, `extra-expanded`, `fantasy`, `fill`, `fill-box`, `filled`, `first`, `fixed`, `flat`, `flex`, `flex-end`, `flex-start`, `flip`, `force-end`, `forwards`, `from-image`, `full-width`, `geometricPrecision`, `georgian`, `groove`, `hanging`, `hard-light`, `help`, `hidden`, `hide`, `horizontal`, `hue`, `icon`, `infinite`, `inherit`, `initial`, `ink`, `inline`, `inline-block`, `inline-flex`, `inline-table`, `inset`, `inside`, `inter-word`, `invert`, `isolate`, `italic`, `justify`, `large`, `larger`, `last`, `left`, `lighten`, `lighter`, `line-through`, `linear`, `list-item`, `local`, `loose`, `lower-alpha`, `lower-greek`, `lower-latin`, `lower-roman`, `lowercase`, `ltr`, `luminance`, `luminosity`, `mandatory`, `manipulation`, `manual`, `margin-box`, `match-parent`, `medium`, `mixed`, `monospace`, `move`, `multiply`, `n-resize`, `ne-resize`, `nesw-resize`, `no-close-quote`, `no-drop`, `no-open-quote`, `no-repeat`, `none`, `normal`, `not-allowed`, `nowrap`, `ns-resize`, `nw-resize`, `nwse-resize`, `objects`, `oblique`, `off`, `on`, `open`, `open-quote`, `optimizeLegibility`, `optimizeSpeed`, `outset`, `outside`, `over`, `overlay`, `overline`, `padding-box`, `page`, `pan-down`, `pan-left`, `pan-right`, `pan-up`, `pan-x`, `pan-y`, `paused`, `petite-caps`, `pixelated`, `pointer`, `preserve-3d`, `progress`, `proximity`, `relative`, `repeat`, `repeat no-repeat`, `repeat-x`, `repeat-y`, `reverse`, `ridge`, `right`, `round`, `row`, `row-resize`, `row-reverse`, `rtl`, `ruby`, `ruby-base`, `ruby-base-container`, `ruby-text`, `ruby-text-container`, `run-in`, `running`, `s-resize`, `sans-serif`, `saturation`, `scale-down`, `screen`, `scroll`, `se-resize`, `semi-condensed`, `semi-expanded`, `separate`, `serif`, `sesame`, `show`, `sideways`, `sideways-left`, `sideways-right`, `slice`, `small`, `small-caps`, `smaller`, `smooth`, `snap`, `soft-light`, `solid`, `space`, `space-around`, `space-between`, `spaces`, `square`, `start`, `static`, `step-end`, `step-start`, `sticky`, `stretch`, `strict`, `stroke-box`, `style`, `sw-resize`, `table`, `table-caption`, `table-cell`, `table-column`, `table-column-group`, `table-footer-group`, `table-header-group`, `table-row`, `table-row-group`, `text`, `thick`, `thin`, `titling-caps`, `to`, `top`, `triangle`, `ultra-condensed`, `ultra-expanded`, `under`, `underline`, `unicase`, `unset`, `upper-alpha`, `upper-latin`, `upper-roman`, `uppercase`, `upright`, `use-glyph-orientation`, `vertical`, `vertical-text`, `view-box`, `visible`, `w-resize`, `wait`, `wavy`, `weight`, `weight style`, `wrap`, `wrap-reverse`, `x-large`, `x-small`, `xx-large`, `xx-small`, `zoom-in`, `zoom-out`), KeywordConstant, nil},\n-\t\t\t{Words(``, `\\b`, `above`, `aural`, `behind`, `bidi-override`, `center-left`, `center-right`, `cjk-ideographic`, `continuous`, `crop`, `cross`, `embed`, `far-left`, `far-right`, `fast`, `faster`, `hebrew`, `high`, `higher`, `hiragana`, `hiragana-iroha`, `katakana`, `katakana-iroha`, `landscape`, `left-side`, `leftwards`, `level`, `loud`, `low`, `lower`, `message-box`, `middle`, `mix`, `narrower`, `once`, `portrait`, `right-side`, `rightwards`, `silent`, `slow`, `slower`, `small-caption`, `soft`, `spell-out`, `status-bar`, `super`, `text-bottom`, `text-top`, `wider`, `x-fast`, `x-high`, `x-loud`, `x-low`, `x-soft`, `yes`, `pre`, `pre-wrap`, `pre-line`), KeywordConstant, nil},\n-\t\t\t{Words(``, `\\b`, `aliceblue`, `antiquewhite`, `aqua`, `aquamarine`, `azure`, `beige`, `bisque`, `black`, `blanchedalmond`, `blue`, `blueviolet`, `brown`, `burlywood`, `cadetblue`, `chartreuse`, `chocolate`, `coral`, `cornflowerblue`, `cornsilk`, `crimson`, `cyan`, `darkblue`, `darkcyan`, `darkgoldenrod`, `darkgray`, `darkgreen`, `darkgrey`, `darkkhaki`, `darkmagenta`, `darkolivegreen`, `darkorange`, `darkorchid`, `darkred`, `darksalmon`, `darkseagreen`, `darkslateblue`, `darkslategray`, `darkslategrey`, `darkturquoise`, `darkviolet`, `deeppink`, `deepskyblue`, `dimgray`, `dimgrey`, `dodgerblue`, `firebrick`, `floralwhite`, `forestgreen`, `fuchsia`, `gainsboro`, `ghostwhite`, `gold`, `goldenrod`, `gray`, `green`, `greenyellow`, `grey`, `honeydew`, `hotpink`, `indianred`, `indigo`, `ivory`, `khaki`, `lavender`, `lavenderblush`, `lawngreen`, `lemonchiffon`, `lightblue`, `lightcoral`, `lightcyan`, `lightgoldenrodyellow`, `lightgray`, `lightgreen`, `lightgrey`, `lightpink`, `lightsalmon`, `lightseagreen`, `lightskyblue`, `lightslategray`, `lightslategrey`, `lightsteelblue`, `lightyellow`, `lime`, `limegreen`, `linen`, `magenta`, `maroon`, `mediumaquamarine`, `mediumblue`, `mediumorchid`, `mediumpurple`, `mediumseagreen`, `mediumslateblue`, `mediumspringgreen`, `mediumturquoise`, `mediumvioletred`, `midnightblue`, `mintcream`, `mistyrose`, `moccasin`, `navajowhite`, `navy`, `oldlace`, `olive`, `olivedrab`, `orange`, `orangered`, `orchid`, `palegoldenrod`, `palegreen`, `paleturquoise`, `palevioletred`, `papayawhip`, `peachpuff`, `peru`, `pink`, `plum`, `powderblue`, `purple`, `rebeccapurple`, `red`, `rosybrown`, `royalblue`, `saddlebrown`, `salmon`, `sandybrown`, `seagreen`, `seashell`, `sienna`, `silver`, `skyblue`, `slateblue`, `slategray`, `slategrey`, `snow`, `springgreen`, `steelblue`, `tan`, `teal`, `thistle`, `tomato`, `turquoise`, `violet`, `wheat`, `white`, `whitesmoke`, `yellow`, `yellowgreen`, `transparent`), KeywordConstant, nil},\n-\t\t},\n-\t\t\"urls\": {\n-\t\t\t{`(url)(\\()(\".*?\")(\\))`, ByGroups(NameBuiltin, Punctuation, LiteralStringDouble, Punctuation), nil},\n-\t\t\t{`(url)(\\()('.*?')(\\))`, ByGroups(NameBuiltin, Punctuation, LiteralStringSingle, Punctuation), nil},\n-\t\t\t{`(url)(\\()(.*?)(\\))`, ByGroups(NameBuiltin, Punctuation, LiteralStringOther, Punctuation), nil},\n-\t\t},\n-\t\t\"numeric-values\": {\n-\t\t\t{`\\#[a-zA-Z0-9]{1,6}`, LiteralNumberHex, nil},\n-\t\t\t{`[+\\-]?[0-9]*[.][0-9]+`, LiteralNumberFloat, Push(\"numeric-end\")},\n-\t\t\t{`[+\\-]?[0-9]+`, LiteralNumberInteger, Push(\"numeric-end\")},\n-\t\t},\n-\t\t\"numeric-end\": {\n-\t\t\t{Words(``, `\\b`, `deg`, `grad`, `rad`, `turn`, `Hz`, `kHz`, `em`, `ex`, `ch`, `rem`, `vh`, `vw`, `vmin`, `vmax`, `px`, `mm`, `cm`, `in`, `pt`, `pc`, `q`, `dpi`, `dpcm`, `dppx`, `s`, `ms`), KeywordType, nil},\n-\t\t\t{`%`, KeywordType, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "0cce20410d4b2d775832e58a9ea3edd3c31aaedc",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/cython.go",
      "status": "removed",
      "additions": 0,
      "deletions": 139,
      "changes": 139,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcython.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcython.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fc%2Fcython.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,139 +0,0 @@\n-package c\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Cython lexer.\n-var Cython = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Cython\",\n-\t\tAliases:   []string{\"cython\", \"pyx\", \"pyrex\"},\n-\t\tFilenames: []string{\"*.pyx\", \"*.pxd\", \"*.pxi\"},\n-\t\tMimeTypes: []string{\"text/x-cython\", \"application/x-cython\"},\n-\t},\n-\tcythonRules,\n-))\n-\n-func cythonRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`^(\\s*)(\"\"\"(?:.|\\n)*?\"\"\")`, ByGroups(Text, LiteralStringDoc), nil},\n-\t\t\t{`^(\\s*)('''(?:.|\\n)*?''')`, ByGroups(Text, LiteralStringDoc), nil},\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`#.*$`, Comment, nil},\n-\t\t\t{`[]{}:(),;[]`, Punctuation, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`\\\\`, Text, nil},\n-\t\t\t{`(in|is|and|or|not)\\b`, OperatorWord, nil},\n-\t\t\t{`(<)([a-zA-Z0-9.?]+)(>)`, ByGroups(Punctuation, KeywordType, Punctuation), nil},\n-\t\t\t{`!=|==|<<|>>|[-~+/*%=<>&^|.?]`, Operator, nil},\n-\t\t\t{`(from)(\\d+)(<=)(\\s+)(<)(\\d+)(:)`, ByGroups(Keyword, LiteralNumberInteger, Operator, Name, Operator, Name, Punctuation), nil},\n-\t\t\tInclude(\"keywords\"),\n-\t\t\t{`(def|property)(\\s+)`, ByGroups(Keyword, Text), Push(\"funcname\")},\n-\t\t\t{`(cp?def)(\\s+)`, ByGroups(Keyword, Text), Push(\"cdef\")},\n-\t\t\t{`(cdef)(:)`, ByGroups(Keyword, Punctuation), nil},\n-\t\t\t{`(class|struct)(\\s+)`, ByGroups(Keyword, Text), Push(\"classname\")},\n-\t\t\t{`(from)(\\s+)`, ByGroups(Keyword, Text), Push(\"fromimport\")},\n-\t\t\t{`(c?import)(\\s+)`, ByGroups(Keyword, Text), Push(\"import\")},\n-\t\t\tInclude(\"builtins\"),\n-\t\t\tInclude(\"backtick\"),\n-\t\t\t{`(?:[rR]|[uU][rR]|[rR][uU])\"\"\"`, LiteralString, Push(\"tdqs\")},\n-\t\t\t{`(?:[rR]|[uU][rR]|[rR][uU])'''`, LiteralString, Push(\"tsqs\")},\n-\t\t\t{`(?:[rR]|[uU][rR]|[rR][uU])\"`, LiteralString, Push(\"dqs\")},\n-\t\t\t{`(?:[rR]|[uU][rR]|[rR][uU])'`, LiteralString, Push(\"sqs\")},\n-\t\t\t{`[uU]?\"\"\"`, LiteralString, Combined(\"stringescape\", \"tdqs\")},\n-\t\t\t{`[uU]?'''`, LiteralString, Combined(\"stringescape\", \"tsqs\")},\n-\t\t\t{`[uU]?\"`, LiteralString, Combined(\"stringescape\", \"dqs\")},\n-\t\t\t{`[uU]?'`, LiteralString, Combined(\"stringescape\", \"sqs\")},\n-\t\t\tInclude(\"name\"),\n-\t\t\tInclude(\"numbers\"),\n-\t\t},\n-\t\t\"keywords\": {\n-\t\t\t{Words(``, `\\b`, `assert`, `break`, `by`, `continue`, `ctypedef`, `del`, `elif`, `else`, `except`, `except?`, `exec`, `finally`, `for`, `fused`, `gil`, `global`, `if`, `include`, `lambda`, `nogil`, `pass`, `print`, `raise`, `return`, `try`, `while`, `yield`, `as`, `with`), Keyword, nil},\n-\t\t\t{`(DEF|IF|ELIF|ELSE)\\b`, CommentPreproc, nil},\n-\t\t},\n-\t\t\"builtins\": {\n-\t\t\t{Words(`(?<!\\.)`, `\\b`, `__import__`, `abs`, `all`, `any`, `apply`, `basestring`, `bin`, `bool`, `buffer`, `bytearray`, `bytes`, `callable`, `chr`, `classmethod`, `cmp`, `coerce`, `compile`, `complex`, `delattr`, `dict`, `dir`, `divmod`, `enumerate`, `eval`, `execfile`, `exit`, `file`, `filter`, `float`, `frozenset`, `getattr`, `globals`, `hasattr`, `hash`, `hex`, `id`, `input`, `int`, `intern`, `isinstance`, `issubclass`, `iter`, `len`, `list`, `locals`, `long`, `map`, `max`, `min`, `next`, `object`, `oct`, `open`, `ord`, `pow`, `property`, `range`, `raw_input`, `reduce`, `reload`, `repr`, `reversed`, `round`, `set`, `setattr`, `slice`, `sorted`, `staticmethod`, `str`, `sum`, `super`, `tuple`, `type`, `unichr`, `unicode`, `unsigned`, `vars`, `xrange`, `zip`), NameBuiltin, nil},\n-\t\t\t{`(?<!\\.)(self|None|Ellipsis|NotImplemented|False|True|NULL)\\b`, NameBuiltinPseudo, nil},\n-\t\t\t{Words(`(?<!\\.)`, `\\b`, `ArithmeticError`, `AssertionError`, `AttributeError`, `BaseException`, `DeprecationWarning`, `EOFError`, `EnvironmentError`, `Exception`, `FloatingPointError`, `FutureWarning`, `GeneratorExit`, `IOError`, `ImportError`, `ImportWarning`, `IndentationError`, `IndexError`, `KeyError`, `KeyboardInterrupt`, `LookupError`, `MemoryError`, `NameError`, `NotImplemented`, `NotImplementedError`, `OSError`, `OverflowError`, `OverflowWarning`, `PendingDeprecationWarning`, `ReferenceError`, `RuntimeError`, `RuntimeWarning`, `StandardError`, `StopIteration`, `SyntaxError`, `SyntaxWarning`, `SystemError`, `SystemExit`, `TabError`, `TypeError`, `UnboundLocalError`, `UnicodeDecodeError`, `UnicodeEncodeError`, `UnicodeError`, `UnicodeTranslateError`, `UnicodeWarning`, `UserWarning`, `ValueError`, `Warning`, `ZeroDivisionError`), NameException, nil},\n-\t\t},\n-\t\t\"numbers\": {\n-\t\t\t{`(\\d+\\.?\\d*|\\d*\\.\\d+)([eE][+-]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`0\\d+`, LiteralNumberOct, nil},\n-\t\t\t{`0[xX][a-fA-F0-9]+`, LiteralNumberHex, nil},\n-\t\t\t{`\\d+L`, LiteralNumberIntegerLong, nil},\n-\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n-\t\t},\n-\t\t\"backtick\": {\n-\t\t\t{\"`.*?`\", LiteralStringBacktick, nil},\n-\t\t},\n-\t\t\"name\": {\n-\t\t\t{`@\\w+`, NameDecorator, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t},\n-\t\t\"funcname\": {\n-\t\t\t{`[a-zA-Z_]\\w*`, NameFunction, Pop(1)},\n-\t\t},\n-\t\t\"cdef\": {\n-\t\t\t{`(public|readonly|extern|api|inline)\\b`, KeywordReserved, nil},\n-\t\t\t{`(struct|enum|union|class)\\b`, Keyword, nil},\n-\t\t\t{`([a-zA-Z_]\\w*)(\\s*)(?=[(:#=]|$)`, ByGroups(NameFunction, Text), Pop(1)},\n-\t\t\t{`([a-zA-Z_]\\w*)(\\s*)(,)`, ByGroups(NameFunction, Text, Punctuation), nil},\n-\t\t\t{`from\\b`, Keyword, Pop(1)},\n-\t\t\t{`as\\b`, Keyword, nil},\n-\t\t\t{`:`, Punctuation, Pop(1)},\n-\t\t\t{`(?=[\"\\'])`, Text, Pop(1)},\n-\t\t\t{`[a-zA-Z_]\\w*`, KeywordType, nil},\n-\t\t\t{`.`, Text, nil},\n-\t\t},\n-\t\t\"classname\": {\n-\t\t\t{`[a-zA-Z_]\\w*`, NameClass, Pop(1)},\n-\t\t},\n-\t\t\"import\": {\n-\t\t\t{`(\\s+)(as)(\\s+)`, ByGroups(Text, Keyword, Text), nil},\n-\t\t\t{`[a-zA-Z_][\\w.]*`, NameNamespace, nil},\n-\t\t\t{`(\\s*)(,)(\\s*)`, ByGroups(Text, Operator, Text), nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"fromimport\": {\n-\t\t\t{`(\\s+)(c?import)\\b`, ByGroups(Text, Keyword), Pop(1)},\n-\t\t\t{`[a-zA-Z_.][\\w.]*`, NameNamespace, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"stringescape\": {\n-\t\t\t{`\\\\([\\\\abfnrtv\"\\']|\\n|N\\{.*?\\}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8}|x[a-fA-F0-9]{2}|[0-7]{1,3})`, LiteralStringEscape, nil},\n-\t\t},\n-\t\t\"strings\": {\n-\t\t\t{`%(\\([a-zA-Z0-9]+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsux%]`, LiteralStringInterpol, nil},\n-\t\t\t{`[^\\\\\\'\"%\\n]+`, LiteralString, nil},\n-\t\t\t{`[\\'\"\\\\]`, LiteralString, nil},\n-\t\t\t{`%`, LiteralString, nil},\n-\t\t},\n-\t\t\"nl\": {\n-\t\t\t{`\\n`, LiteralString, nil},\n-\t\t},\n-\t\t\"dqs\": {\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`\\\\\\\\|\\\\\"|\\\\\\n`, LiteralStringEscape, nil},\n-\t\t\tInclude(\"strings\"),\n-\t\t},\n-\t\t\"sqs\": {\n-\t\t\t{`'`, LiteralString, Pop(1)},\n-\t\t\t{`\\\\\\\\|\\\\'|\\\\\\n`, LiteralStringEscape, nil},\n-\t\t\tInclude(\"strings\"),\n-\t\t},\n-\t\t\"tdqs\": {\n-\t\t\t{`\"\"\"`, LiteralString, Pop(1)},\n-\t\t\tInclude(\"strings\"),\n-\t\t\tInclude(\"nl\"),\n-\t\t},\n-\t\t\"tsqs\": {\n-\t\t\t{`'''`, LiteralString, Pop(1)},\n-\t\t\tInclude(\"strings\"),\n-\t\t\tInclude(\"nl\"),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "48d0fb7c96eb2729725f12fee8ebf5b3eafc5e5b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/circular/doc.go",
      "status": "removed",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fcircular%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fcircular%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fcircular%2Fdoc.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,2 +0,0 @@\n-// Package circular exists to break circular dependencies between lexers.\n-package circular"
    },
    {
      "sha": "e4bbc67d94e7816c5fc9f1100c1a009d0b8f4a1c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/circular/php.go",
      "status": "removed",
      "additions": 0,
      "deletions": 86,
      "changes": 86,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fcircular%2Fphp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fcircular%2Fphp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fcircular%2Fphp.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,86 +0,0 @@\n-package circular\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// PHP lexer for pure PHP code (not embedded in HTML).\n-var PHP = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"PHP\",\n-\t\tAliases:         []string{\"php\", \"php3\", \"php4\", \"php5\"},\n-\t\tFilenames:       []string{\"*.php\", \"*.php[345]\", \"*.inc\"},\n-\t\tMimeTypes:       []string{\"text/x-php\"},\n-\t\tDotAll:          true,\n-\t\tCaseInsensitive: true,\n-\t\tEnsureNL:        true,\n-\t},\n-\tphpRules,\n-))\n-\n-func phpRules() Rules {\n-\treturn phpCommonRules().Rename(\"php\", \"root\")\n-}\n-\n-func phpCommonRules() Rules {\n-\treturn Rules{\n-\t\t\"php\": {\n-\t\t\t{`\\?>`, CommentPreproc, Pop(1)},\n-\t\t\t{`(<<<)([\\'\"]?)((?:[\\\\_a-z]|[^\\x00-\\x7f])(?:[\\\\\\w]|[^\\x00-\\x7f])*)(\\2\\n.*?\\n\\s*)(\\3)(;?)(\\n)`, ByGroups(LiteralString, LiteralString, LiteralStringDelimiter, LiteralString, LiteralStringDelimiter, Punctuation, Text), nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`#.*?\\n`, CommentSingle, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*\\*/`, CommentMultiline, nil},\n-\t\t\t{`/\\*\\*.*?\\*/`, LiteralStringDoc, nil},\n-\t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n-\t\t\t{`(->|::)(\\s*)((?:[\\\\_a-z]|[^\\x00-\\x7f])(?:[\\\\\\w]|[^\\x00-\\x7f])*)`, ByGroups(Operator, Text, NameAttribute), nil},\n-\t\t\t{`[~!%^&*+=|:.<>/@-]+`, Operator, nil},\n-\t\t\t{`\\?`, Operator, nil},\n-\t\t\t{`[\\[\\]{}();,]+`, Punctuation, nil},\n-\t\t\t{`(class)(\\s+)`, ByGroups(Keyword, Text), Push(\"classname\")},\n-\t\t\t{`(function)(\\s*)(?=\\()`, ByGroups(Keyword, Text), nil},\n-\t\t\t{`(function)(\\s+)(&?)(\\s*)`, ByGroups(Keyword, Text, Operator, Text), Push(\"functionname\")},\n-\t\t\t{`(const)(\\s+)((?:[\\\\_a-z]|[^\\x00-\\x7f])(?:[\\\\\\w]|[^\\x00-\\x7f])*)`, ByGroups(Keyword, Text, NameConstant), nil},\n-\t\t\t{`(and|E_PARSE|old_function|E_ERROR|or|as|E_WARNING|parent|eval|PHP_OS|break|exit|case|extends|PHP_VERSION|cfunction|FALSE|print|for|require|continue|foreach|require_once|declare|return|default|static|do|switch|die|stdClass|echo|else|TRUE|elseif|var|empty|if|xor|enddeclare|include|virtual|endfor|include_once|while|endforeach|global|endif|list|endswitch|new|endwhile|not|array|E_ALL|NULL|final|php_user_filter|interface|implements|public|private|protected|abstract|clone|try|catch|throw|this|use|namespace|trait|yield|finally)\\b`, Keyword, nil},\n-\t\t\t{`(true|false|null)\\b`, KeywordConstant, nil},\n-\t\t\tInclude(\"magicconstants\"),\n-\t\t\t{`\\$\\{\\$+(?:[\\\\_a-z]|[^\\x00-\\x7f])(?:[\\\\\\w]|[^\\x00-\\x7f])*\\}`, NameVariable, nil},\n-\t\t\t{`\\$+(?:[\\\\_a-z]|[^\\x00-\\x7f])(?:[\\\\\\w]|[^\\x00-\\x7f])*`, NameVariable, nil},\n-\t\t\t{`(?:[\\\\_a-z]|[^\\x00-\\x7f])(?:[\\\\\\w]|[^\\x00-\\x7f])*`, NameOther, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\d*\\.\\d+)(e[+-]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+e[+-]?[0-9]+`, LiteralNumberFloat, nil},\n-\t\t\t{`0[0-7]+`, LiteralNumberOct, nil},\n-\t\t\t{`0x[a-f0-9_]+`, LiteralNumberHex, nil},\n-\t\t\t{`\\d[\\d_]*`, LiteralNumberInteger, nil},\n-\t\t\t{`0b[01]+`, LiteralNumberBin, nil},\n-\t\t\t{`'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)'`, LiteralStringSingle, nil},\n-\t\t\t{\"`([^`\\\\\\\\]*(?:\\\\\\\\.[^`\\\\\\\\]*)*)`\", LiteralStringBacktick, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n-\t\t},\n-\t\t\"magicfuncs\": {\n-\t\t\t{Words(``, `\\b`, `__construct`, `__destruct`, `__call`, `__callStatic`, `__get`, `__set`, `__isset`, `__unset`, `__sleep`, `__wakeup`, `__toString`, `__invoke`, `__set_state`, `__clone`, `__debugInfo`), NameFunctionMagic, nil},\n-\t\t},\n-\t\t\"magicconstants\": {\n-\t\t\t{Words(``, `\\b`, `__LINE__`, `__FILE__`, `__DIR__`, `__FUNCTION__`, `__CLASS__`, `__TRAIT__`, `__METHOD__`, `__NAMESPACE__`), NameConstant, nil},\n-\t\t},\n-\t\t\"classname\": {\n-\t\t\t{`(?:[\\\\_a-z]|[^\\x00-\\x7f])(?:[\\\\\\w]|[^\\x00-\\x7f])*`, NameClass, Pop(1)},\n-\t\t},\n-\t\t\"functionname\": {\n-\t\t\tInclude(\"magicfuncs\"),\n-\t\t\t{`(?:[\\\\_a-z]|[^\\x00-\\x7f])(?:[\\\\\\w]|[^\\x00-\\x7f])*`, NameFunction, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t\t{`[^{$\"\\\\]+`, LiteralStringDouble, nil},\n-\t\t\t{`\\\\([nrt\"$\\\\]|[0-7]{1,3}|x[0-9a-f]{1,2})`, LiteralStringEscape, nil},\n-\t\t\t{`\\$(?:[\\\\_a-z]|[^\\x00-\\x7f])(?:[\\\\\\w]|[^\\x00-\\x7f])*(\\[\\S+?\\]|->(?:[\\\\_a-z]|[^\\x00-\\x7f])(?:[\\\\\\w]|[^\\x00-\\x7f])*)?`, LiteralStringInterpol, nil},\n-\t\t\t{`(\\{\\$\\{)(.*?)(\\}\\})`, ByGroups(LiteralStringInterpol, UsingSelf(\"root\"), LiteralStringInterpol), nil},\n-\t\t\t{`(\\{)(\\$.*?)(\\})`, ByGroups(LiteralStringInterpol, UsingSelf(\"root\"), LiteralStringInterpol), nil},\n-\t\t\t{`(\\$\\{)(\\S+)(\\})`, ByGroups(LiteralStringInterpol, NameVariable, LiteralStringInterpol), nil},\n-\t\t\t{`[${\\\\]`, LiteralStringDouble, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "ac12d2e23631f6c5a57612045db1150ab34c5f5c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/d/d.go",
      "status": "removed",
      "additions": 0,
      "deletions": 73,
      "changes": 73,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fd%2Fd.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fd%2Fd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fd%2Fd.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,73 +0,0 @@\n-package d\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// D lexer. https://dlang.org/spec/lex.html\n-var D = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"D\",\n-\t\tAliases:   []string{\"d\"},\n-\t\tFilenames: []string{\"*.d\", \"*.di\"},\n-\t\tMimeTypes: []string{\"text/x-d\"},\n-\t\tEnsureNL:  true,\n-\t},\n-\tdRules,\n-))\n-\n-func dRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\n-\t\t\t// https://dlang.org/spec/lex.html#comment\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n-\t\t\t{`/\\+.*?\\+/`, CommentMultiline, nil},\n-\n-\t\t\t// https://dlang.org/spec/lex.html#keywords\n-\t\t\t{`(asm|assert|body|break|case|cast|catch|continue|default|debug|delete|deprecated|do|else|finally|for|foreach|foreach_reverse|goto|if|in|invariant|is|macro|mixin|new|out|pragma|return|super|switch|this|throw|try|version|while|with)\\b`, Keyword, nil},\n-\t\t\t{`__(FILE|FILE_FULL_PATH|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__\\b`, NameBuiltin, nil},\n-\t\t\t{`__(traits|vector|parameters)\\b`, NameBuiltin, nil},\n-\t\t\t{`((?:(?:[^\\W\\d]|\\$)[\\w.\\[\\]$<>]*\\s+)+?)((?:[^\\W\\d]|\\$)[\\w$]*)(\\s*)(\\()`, ByGroups(UsingSelf(\"root\"), NameFunction, Text, Operator), nil},\n-\n-\t\t\t// https://dlang.org/spec/attribute.html#uda\n-\t\t\t{`@[\\w.]*`, NameDecorator, nil},\n-\t\t\t{`(abstract|auto|alias|align|const|delegate|enum|export|final|function|inout|lazy|nothrow|override|package|private|protected|public|pure|static|synchronized|template|volatile|__gshared)\\b`, KeywordDeclaration, nil},\n-\n-\t\t\t// https://dlang.org/spec/type.html#basic-data-types\n-\t\t\t{`(void|bool|byte|ubyte|short|ushort|int|uint|long|ulong|cent|ucent|float|double|real|ifloat|idouble|ireal|cfloat|cdouble|creal|char|wchar|dchar|string|wstring|dstring)\\b`, KeywordType, nil},\n-\t\t\t{`(module)(\\s+)`, ByGroups(KeywordNamespace, Text), Push(\"import\")},\n-\t\t\t{`(true|false|null)\\b`, KeywordConstant, nil},\n-\t\t\t{`(class|interface|struct|template|union)(\\s+)`, ByGroups(KeywordDeclaration, Text), Push(\"class\")},\n-\t\t\t{`(import)(\\s+)`, ByGroups(KeywordNamespace, Text), Push(\"import\")},\n-\n-\t\t\t// https://dlang.org/spec/lex.html#string_literals\n-\t\t\t// TODO support delimited strings\n-\t\t\t{`[qr]?\"(\\\\\\\\|\\\\\"|[^\"])*\"[cwd]?`, LiteralString, nil},\n-\t\t\t{\"(`)([^`]*)(`)[cwd]?\", LiteralString, nil},\n-\t\t\t{`'\\\\.'|'[^\\\\]'|'\\\\u[0-9a-fA-F]{4}'`, LiteralStringChar, nil},\n-\t\t\t{`(\\.)((?:[^\\W\\d]|\\$)[\\w$]*)`, ByGroups(Operator, NameAttribute), nil},\n-\t\t\t{`^\\s*([^\\W\\d]|\\$)[\\w$]*:`, NameLabel, nil},\n-\n-\t\t\t// https://dlang.org/spec/lex.html#floatliteral\n-\t\t\t{`([0-9][0-9_]*\\.([0-9][0-9_]*)?|\\.[0-9][0-9_]*)([eE][+\\-]?[0-9][0-9_]*)?[fFL]?i?|[0-9][eE][+\\-]?[0-9][0-9_]*[fFL]?|[0-9]([eE][+\\-]?[0-9][0-9_]*)?[fFL]|0[xX]([0-9a-fA-F][0-9a-fA-F_]*\\.?|([0-9a-fA-F][0-9a-fA-F_]*)?\\.[0-9a-fA-F][0-9a-fA-F_]*)[pP][+\\-]?[0-9][0-9_]*[fFL]?`, LiteralNumberFloat, nil},\n-\t\t\t// https://dlang.org/spec/lex.html#integerliteral\n-\t\t\t{`0[xX][0-9a-fA-F][0-9a-fA-F_]*[lL]?`, LiteralNumberHex, nil},\n-\t\t\t{`0[bB][01][01_]*[lL]?`, LiteralNumberBin, nil},\n-\t\t\t{`0[0-7_]+[lL]?`, LiteralNumberOct, nil},\n-\t\t\t{`0|[1-9][0-9_]*[lL]?`, LiteralNumberInteger, nil},\n-\t\t\t{`([~^*!%&\\[\\](){}<>|+=:;,./?-]|q{)`, Operator, nil},\n-\t\t\t{`([^\\W\\d]|\\$)[\\w$]*`, Name, nil},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t},\n-\t\t\"class\": {\n-\t\t\t{`([^\\W\\d]|\\$)[\\w$]*`, NameClass, Pop(1)},\n-\t\t},\n-\t\t\"import\": {\n-\t\t\t{`[\\w.]+\\*?`, NameNamespace, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "c1dbb5cd5e8d8a3516b744c0e042a48408484ccd",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/d/dart.go",
      "status": "removed",
      "additions": 0,
      "deletions": 95,
      "changes": 95,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fd%2Fdart.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fd%2Fdart.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fd%2Fdart.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,95 +0,0 @@\n-package d\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Dart lexer.\n-var Dart = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Dart\",\n-\t\tAliases:   []string{\"dart\"},\n-\t\tFilenames: []string{\"*.dart\"},\n-\t\tMimeTypes: []string{\"text/x-dart\"},\n-\t\tDotAll:    true,\n-\t},\n-\tdartRules,\n-))\n-\n-func dartRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"string_literal\"),\n-\t\t\t{`#!(.*?)$`, CommentPreproc, nil},\n-\t\t\t{`\\b(import|export)\\b`, Keyword, Push(\"import_decl\")},\n-\t\t\t{`\\b(library|source|part of|part)\\b`, Keyword, nil},\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n-\t\t\t{`\\b(class)\\b(\\s+)`, ByGroups(KeywordDeclaration, Text), Push(\"class\")},\n-\t\t\t{`\\b(assert|break|case|catch|continue|default|do|else|finally|for|if|in|is|new|return|super|switch|this|throw|try|while)\\b`, Keyword, nil},\n-\t\t\t{`\\b(abstract|async|await|const|extends|factory|final|get|implements|native|operator|set|static|sync|typedef|var|with|yield)\\b`, KeywordDeclaration, nil},\n-\t\t\t{`\\b(bool|double|dynamic|int|num|Object|String|void)\\b`, KeywordType, nil},\n-\t\t\t{`\\b(false|null|true)\\b`, KeywordConstant, nil},\n-\t\t\t{`[~!%^&*+=|?:<>/-]|as\\b`, Operator, nil},\n-\t\t\t{`[a-zA-Z_$]\\w*:`, NameLabel, nil},\n-\t\t\t{`[a-zA-Z_$]\\w*`, Name, nil},\n-\t\t\t{`[(){}\\[\\],.;]`, Punctuation, nil},\n-\t\t\t{`0[xX][0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`\\d+(\\.\\d*)?([eE][+-]?\\d+)?`, LiteralNumber, nil},\n-\t\t\t{`\\.\\d+([eE][+-]?\\d+)?`, LiteralNumber, nil},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t},\n-\t\t\"class\": {\n-\t\t\t{`[a-zA-Z_$]\\w*`, NameClass, Pop(1)},\n-\t\t},\n-\t\t\"import_decl\": {\n-\t\t\tInclude(\"string_literal\"),\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\b(as|show|hide)\\b`, Keyword, nil},\n-\t\t\t{`[a-zA-Z_$]\\w*`, Name, nil},\n-\t\t\t{`\\,`, Punctuation, nil},\n-\t\t\t{`\\;`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"string_literal\": {\n-\t\t\t{`r\"\"\"([\\w\\W]*?)\"\"\"`, LiteralStringDouble, nil},\n-\t\t\t{`r'''([\\w\\W]*?)'''`, LiteralStringSingle, nil},\n-\t\t\t{`r\"(.*?)\"`, LiteralStringDouble, nil},\n-\t\t\t{`r'(.*?)'`, LiteralStringSingle, nil},\n-\t\t\t{`\"\"\"`, LiteralStringDouble, Push(\"string_double_multiline\")},\n-\t\t\t{`'''`, LiteralStringSingle, Push(\"string_single_multiline\")},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string_double\")},\n-\t\t\t{`'`, LiteralStringSingle, Push(\"string_single\")},\n-\t\t},\n-\t\t\"string_common\": {\n-\t\t\t{`\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\\{[0-9A-Fa-f]*\\}|[a-z'\\\"$\\\\])`, LiteralStringEscape, nil},\n-\t\t\t{`(\\$)([a-zA-Z_]\\w*)`, ByGroups(LiteralStringInterpol, Name), nil},\n-\t\t\t{`(\\$\\{)(.*?)(\\})`, ByGroups(LiteralStringInterpol, UsingSelf(\"root\"), LiteralStringInterpol), nil},\n-\t\t},\n-\t\t\"string_double\": {\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t\t{`[^\"$\\\\\\n]+`, LiteralStringDouble, nil},\n-\t\t\tInclude(\"string_common\"),\n-\t\t\t{`\\$+`, LiteralStringDouble, nil},\n-\t\t},\n-\t\t\"string_double_multiline\": {\n-\t\t\t{`\"\"\"`, LiteralStringDouble, Pop(1)},\n-\t\t\t{`[^\"$\\\\]+`, LiteralStringDouble, nil},\n-\t\t\tInclude(\"string_common\"),\n-\t\t\t{`(\\$|\\\")+`, LiteralStringDouble, nil},\n-\t\t},\n-\t\t\"string_single\": {\n-\t\t\t{`'`, LiteralStringSingle, Pop(1)},\n-\t\t\t{`[^'$\\\\\\n]+`, LiteralStringSingle, nil},\n-\t\t\tInclude(\"string_common\"),\n-\t\t\t{`\\$+`, LiteralStringSingle, nil},\n-\t\t},\n-\t\t\"string_single_multiline\": {\n-\t\t\t{`'''`, LiteralStringSingle, Pop(1)},\n-\t\t\t{`[^\\'$\\\\]+`, LiteralStringSingle, nil},\n-\t\t\tInclude(\"string_common\"),\n-\t\t\t{`(\\$|\\')+`, LiteralStringSingle, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "d4d6db450ec5afc27c23db812c0628a2c44d1578",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/d/diff.go",
      "status": "removed",
      "additions": 0,
      "deletions": 33,
      "changes": 33,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fd%2Fdiff.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fd%2Fdiff.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fd%2Fdiff.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,33 +0,0 @@\n-package d\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Diff lexer.\n-var Diff = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Diff\",\n-\t\tAliases:   []string{\"diff\", \"udiff\"},\n-\t\tEnsureNL:  true,\n-\t\tFilenames: []string{\"*.diff\", \"*.patch\"},\n-\t\tMimeTypes: []string{\"text/x-diff\", \"text/x-patch\"},\n-\t},\n-\tdiffRules,\n-))\n-\n-func diffRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{` .*\\n`, Text, nil},\n-\t\t\t{`\\+.*\\n`, GenericInserted, nil},\n-\t\t\t{`-.*\\n`, GenericDeleted, nil},\n-\t\t\t{`!.*\\n`, GenericStrong, nil},\n-\t\t\t{`@.*\\n`, GenericSubheading, nil},\n-\t\t\t{`([Ii]ndex|diff).*\\n`, GenericHeading, nil},\n-\t\t\t{`=.*\\n`, GenericHeading, nil},\n-\t\t\t{`.*\\n`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "5d3baa916391eba761dc9c0bddbded9a3b77482b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/d/django.go",
      "status": "removed",
      "additions": 0,
      "deletions": 57,
      "changes": 57,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fd%2Fdjango.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fd%2Fdjango.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fd%2Fdjango.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,57 +0,0 @@\n-package d\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Django/Jinja lexer.\n-var DjangoJinja = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Django/Jinja\",\n-\t\tAliases:   []string{\"django\", \"jinja\"},\n-\t\tFilenames: []string{},\n-\t\tMimeTypes: []string{\"application/x-django-templating\", \"application/x-jinja\"},\n-\t\tDotAll:    true,\n-\t},\n-\tdjangoJinjaRules,\n-))\n-\n-func djangoJinjaRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[^{]+`, Other, nil},\n-\t\t\t{`\\{\\{`, CommentPreproc, Push(\"var\")},\n-\t\t\t{`\\{[*#].*?[*#]\\}`, Comment, nil},\n-\t\t\t{`(\\{%)(-?\\s*)(comment)(\\s*-?)(%\\})(.*?)(\\{%)(-?\\s*)(endcomment)(\\s*-?)(%\\})`, ByGroups(CommentPreproc, Text, Keyword, Text, CommentPreproc, Comment, CommentPreproc, Text, Keyword, Text, CommentPreproc), nil},\n-\t\t\t{`(\\{%)(-?\\s*)(raw)(\\s*-?)(%\\})(.*?)(\\{%)(-?\\s*)(endraw)(\\s*-?)(%\\})`, ByGroups(CommentPreproc, Text, Keyword, Text, CommentPreproc, Text, CommentPreproc, Text, Keyword, Text, CommentPreproc), nil},\n-\t\t\t{`(\\{%)(-?\\s*)(filter)(\\s+)([a-zA-Z_]\\w*)`, ByGroups(CommentPreproc, Text, Keyword, Text, NameFunction), Push(\"block\")},\n-\t\t\t{`(\\{%)(-?\\s*)([a-zA-Z_]\\w*)`, ByGroups(CommentPreproc, Text, Keyword), Push(\"block\")},\n-\t\t\t{`\\{`, Other, nil},\n-\t\t},\n-\t\t\"varnames\": {\n-\t\t\t{`(\\|)(\\s*)([a-zA-Z_]\\w*)`, ByGroups(Operator, Text, NameFunction), nil},\n-\t\t\t{`(is)(\\s+)(not)?(\\s+)?([a-zA-Z_]\\w*)`, ByGroups(Keyword, Text, Keyword, Text, NameFunction), nil},\n-\t\t\t{`(_|true|false|none|True|False|None)\\b`, KeywordPseudo, nil},\n-\t\t\t{`(in|as|reversed|recursive|not|and|or|is|if|else|import|with(?:(?:out)?\\s*context)?|scoped|ignore\\s+missing)\\b`, Keyword, nil},\n-\t\t\t{`(loop|block|super|forloop)\\b`, NameBuiltin, nil},\n-\t\t\t{`[a-zA-Z_][\\w-]*`, NameVariable, nil},\n-\t\t\t{`\\.\\w+`, NameVariable, nil},\n-\t\t\t{`:?\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`:?'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t\t{`([{}()\\[\\]+\\-*/,:~]|[><=]=?)`, Operator, nil},\n-\t\t\t{`[0-9](\\.[0-9]*)?(eE[+-][0-9])?[flFLdD]?|0[xX][0-9a-fA-F]+[Ll]?`, LiteralNumber, nil},\n-\t\t},\n-\t\t\"var\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`(-?)(\\}\\})`, ByGroups(Text, CommentPreproc), Pop(1)},\n-\t\t\tInclude(\"varnames\"),\n-\t\t},\n-\t\t\"block\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`(-?)(%\\})`, ByGroups(Text, CommentPreproc), Pop(1)},\n-\t\t\tInclude(\"varnames\"),\n-\t\t\t{`.`, Punctuation, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "aeec6b1d9ec53c2b5393dc11cfca71b24249fd9d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/d/dtd.go",
      "status": "removed",
      "additions": 0,
      "deletions": 73,
      "changes": 73,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fd%2Fdtd.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fd%2Fdtd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fd%2Fdtd.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,73 +0,0 @@\n-package d\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Dtd lexer.\n-var Dtd = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"DTD\",\n-\t\tAliases:   []string{\"dtd\"},\n-\t\tFilenames: []string{\"*.dtd\"},\n-\t\tMimeTypes: []string{\"application/xml-dtd\"},\n-\t\tDotAll:    true,\n-\t},\n-\tdtdRules,\n-))\n-\n-func dtdRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"common\"),\n-\t\t\t{`(<!ELEMENT)(\\s+)(\\S+)`, ByGroups(Keyword, Text, NameTag), Push(\"element\")},\n-\t\t\t{`(<!ATTLIST)(\\s+)(\\S+)`, ByGroups(Keyword, Text, NameTag), Push(\"attlist\")},\n-\t\t\t{`(<!ENTITY)(\\s+)(\\S+)`, ByGroups(Keyword, Text, NameEntity), Push(\"entity\")},\n-\t\t\t{`(<!NOTATION)(\\s+)(\\S+)`, ByGroups(Keyword, Text, NameTag), Push(\"notation\")},\n-\t\t\t{`(<!\\[)([^\\[\\s]+)(\\s*)(\\[)`, ByGroups(Keyword, NameEntity, Text, Keyword), nil},\n-\t\t\t{`(<!DOCTYPE)(\\s+)([^>\\s]+)`, ByGroups(Keyword, Text, NameTag), nil},\n-\t\t\t{`PUBLIC|SYSTEM`, KeywordConstant, nil},\n-\t\t\t{`[\\[\\]>]`, Keyword, nil},\n-\t\t},\n-\t\t\"common\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`(%|&)[^;]*;`, NameEntity, nil},\n-\t\t\t{`<!--`, Comment, Push(\"comment\")},\n-\t\t\t{`[(|)*,?+]`, Operator, nil},\n-\t\t\t{`\"[^\"]*\"`, LiteralStringDouble, nil},\n-\t\t\t{`\\'[^\\']*\\'`, LiteralStringSingle, nil},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`[^-]+`, Comment, nil},\n-\t\t\t{`-->`, Comment, Pop(1)},\n-\t\t\t{`-`, Comment, nil},\n-\t\t},\n-\t\t\"element\": {\n-\t\t\tInclude(\"common\"),\n-\t\t\t{`EMPTY|ANY|#PCDATA`, KeywordConstant, nil},\n-\t\t\t{`[^>\\s|()?+*,]+`, NameTag, nil},\n-\t\t\t{`>`, Keyword, Pop(1)},\n-\t\t},\n-\t\t\"attlist\": {\n-\t\t\tInclude(\"common\"),\n-\t\t\t{`CDATA|IDREFS|IDREF|ID|NMTOKENS|NMTOKEN|ENTITIES|ENTITY|NOTATION`, KeywordConstant, nil},\n-\t\t\t{`#REQUIRED|#IMPLIED|#FIXED`, KeywordConstant, nil},\n-\t\t\t{`xml:space|xml:lang`, KeywordReserved, nil},\n-\t\t\t{`[^>\\s|()?+*,]+`, NameAttribute, nil},\n-\t\t\t{`>`, Keyword, Pop(1)},\n-\t\t},\n-\t\t\"entity\": {\n-\t\t\tInclude(\"common\"),\n-\t\t\t{`SYSTEM|PUBLIC|NDATA`, KeywordConstant, nil},\n-\t\t\t{`[^>\\s|()?+*,]+`, NameEntity, nil},\n-\t\t\t{`>`, Keyword, Pop(1)},\n-\t\t},\n-\t\t\"notation\": {\n-\t\t\tInclude(\"common\"),\n-\t\t\t{`SYSTEM|PUBLIC`, KeywordConstant, nil},\n-\t\t\t{`[^>\\s|()?+*,]+`, NameAttribute, nil},\n-\t\t\t{`>`, Keyword, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "feda74870e1812dd9440143f93133b1e6aef979c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/d/dylan.go",
      "status": "removed",
      "additions": 0,
      "deletions": 76,
      "changes": 76,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fd%2Fdylan.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fd%2Fdylan.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fd%2Fdylan.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,76 +0,0 @@\n-package d\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Dylan lexer.\n-var Dylan = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"Dylan\",\n-\t\tAliases:         []string{\"dylan\"},\n-\t\tFilenames:       []string{\"*.dylan\", \"*.dyl\", \"*.intr\"},\n-\t\tMimeTypes:       []string{\"text/x-dylan\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tfunc() Rules {\n-\t\treturn Rules{\n-\t\t\t\"root\": {\n-\t\t\t\t{`\\s+`, Whitespace, nil},\n-\t\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t\t{`([a-z0-9-]+:)([ \\t]*)(.*(?:\\n[ \\t].+)*)`, ByGroups(NameAttribute, Whitespace, LiteralString), nil},\n-\t\t\t\tDefault(Push(\"code\")),\n-\t\t\t},\n-\t\t\t\"code\": {\n-\t\t\t\t{`\\s+`, Whitespace, nil},\n-\t\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t\t{`/\\*`, CommentMultiline, Push(\"comment\")},\n-\t\t\t\t{`\"`, LiteralString, Push(\"string\")},\n-\t\t\t\t{`'(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-f0-9]{1,2}|[^\\\\\\'\\n])'`, LiteralStringChar, nil},\n-\t\t\t\t{`#b[01]+`, LiteralNumberBin, nil},\n-\t\t\t\t{`#o[0-7]+`, LiteralNumberOct, nil},\n-\t\t\t\t{`[-+]?(\\d*\\.\\d+([ed][-+]?\\d+)?|\\d+(\\.\\d*)?e[-+]?\\d+)`, LiteralNumberFloat, nil},\n-\t\t\t\t{`[-+]?\\d+`, LiteralNumberInteger, nil},\n-\t\t\t\t{`#x[0-9a-f]+`, LiteralNumberHex, nil},\n-\n-\t\t\t\t{`(\\?\\\\?)([\\w!&*<>|^$%@+~?/=-]+)(:)(token|name|variable|expression|body|case-body|\\*)`,\n-\t\t\t\t\tByGroups(Operator, NameVariable, Operator, NameBuiltin), nil},\n-\t\t\t\t{`(\\?)(:)(token|name|variable|expression|body|case-body|\\*)`,\n-\t\t\t\t\tByGroups(Operator, Operator, NameVariable), nil},\n-\t\t\t\t{`(\\?\\\\?)([\\w!&*<>|^$%@+~?/=-]+)`, ByGroups(Operator, NameVariable), nil},\n-\n-\t\t\t\t{`(=>|::|#\\(|#\\[|##|\\?\\?|\\?=|\\?|[(){}\\[\\],.;])`, Punctuation, nil},\n-\t\t\t\t{`:=`, Operator, nil},\n-\t\t\t\t{`#[tf]`, Literal, nil},\n-\t\t\t\t{`#\"`, LiteralStringSymbol, Push(\"symbol\")},\n-\t\t\t\t{`#[a-z0-9-]+`, Keyword, nil},\n-\t\t\t\t{`#(all-keys|include|key|next|rest)`, Keyword, nil},\n-\t\t\t\t{`[\\w!&*<>|^$%@+~?/=-]+:`, KeywordConstant, nil},\n-\t\t\t\t{`<[\\w!&*<>|^$%@+~?/=-]+>`, NameClass, nil},\n-\t\t\t\t{`\\*[\\w!&*<>|^$%@+~?/=-]+\\*`, NameVariableGlobal, nil},\n-\t\t\t\t{`\\$[\\w!&*<>|^$%@+~?/=-]+`, NameConstant, nil},\n-\t\t\t\t{`(let|method|function)([ \\t]+)([\\w!&*<>|^$%@+~?/=-]+)`, ByGroups(NameBuiltin, Whitespace, NameVariable), nil},\n-\t\t\t\t{`(error|signal|return|break)`, NameException, nil},\n-\t\t\t\t{`(\\\\?)([\\w!&*<>|^$%@+~?/=-]+)`, ByGroups(Operator, Name), nil},\n-\t\t\t},\n-\t\t\t\"comment\": {\n-\t\t\t\t{`[^*/]`, CommentMultiline, nil},\n-\t\t\t\t{`/\\*`, CommentMultiline, Push()},\n-\t\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n-\t\t\t\t{`[*/]`, CommentMultiline, nil},\n-\t\t\t},\n-\t\t\t\"symbol\": {\n-\t\t\t\t{`\"`, LiteralStringSymbol, Pop(1)},\n-\t\t\t\t{`[^\\\\\"]+`, LiteralStringSymbol, nil},\n-\t\t\t},\n-\t\t\t\"string\": {\n-\t\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t\t{`\\\\([\\\\abfnrtv\"\\']|x[a-f0-9]{2,4}|[0-7]{1,3})`, LiteralStringEscape, nil},\n-\t\t\t\t{`[^\\\\\"\\n]+`, LiteralString, nil},\n-\t\t\t\t{`\\\\\\n`, LiteralString, nil},\n-\t\t\t\t{`\\\\`, LiteralString, nil},\n-\t\t\t},\n-\t\t}\n-\t},\n-))"
    },
    {
      "sha": "5ccdd38ea3280b2ece8ee104f13b994eda78bd44",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/e/ebnf.go",
      "status": "removed",
      "additions": 0,
      "deletions": 55,
      "changes": 55,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fe%2Febnf.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fe%2Febnf.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fe%2Febnf.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,55 +0,0 @@\n-package e\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Ebnf lexer.\n-var Ebnf = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"EBNF\",\n-\t\tAliases:   []string{\"ebnf\"},\n-\t\tFilenames: []string{\"*.ebnf\"},\n-\t\tMimeTypes: []string{\"text/x-ebnf\"},\n-\t},\n-\tebnfRules,\n-))\n-\n-func ebnfRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"comment_start\"),\n-\t\t\tInclude(\"identifier\"),\n-\t\t\t{`=`, Operator, Push(\"production\")},\n-\t\t},\n-\t\t\"production\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"comment_start\"),\n-\t\t\tInclude(\"identifier\"),\n-\t\t\t{`\"[^\"]*\"`, LiteralStringDouble, nil},\n-\t\t\t{`'[^']*'`, LiteralStringSingle, nil},\n-\t\t\t{`(\\?[^?]*\\?)`, NameEntity, nil},\n-\t\t\t{`[\\[\\]{}(),|]`, Punctuation, nil},\n-\t\t\t{`-`, Operator, nil},\n-\t\t\t{`;`, Punctuation, Pop(1)},\n-\t\t\t{`\\.`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"whitespace\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t\t\"comment_start\": {\n-\t\t\t{`\\(\\*`, CommentMultiline, Push(\"comment\")},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`[^*)]`, CommentMultiline, nil},\n-\t\t\tInclude(\"comment_start\"),\n-\t\t\t{`\\*\\)`, CommentMultiline, Pop(1)},\n-\t\t\t{`[*)]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"identifier\": {\n-\t\t\t{`([a-zA-Z][\\w \\-]*)`, Keyword, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "f283f846bef0d73cc5317d7a8085d6e3c0625a84",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/e/elixir.go",
      "status": "removed",
      "additions": 0,
      "deletions": 281,
      "changes": 281,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fe%2Felixir.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fe%2Felixir.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fe%2Felixir.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,281 +0,0 @@\n-package e\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Elixir lexer.\n-var Elixir = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Elixir\",\n-\t\tAliases:   []string{\"elixir\", \"ex\", \"exs\"},\n-\t\tFilenames: []string{\"*.ex\", \"*.exs\"},\n-\t\tMimeTypes: []string{\"text/x-elixir\"},\n-\t},\n-\telixirRules,\n-))\n-\n-func elixirRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`#.*$`, CommentSingle, nil},\n-\t\t\t{`(\\?)(\\\\x\\{)([\\da-fA-F]+)(\\})`, ByGroups(LiteralStringChar, LiteralStringEscape, LiteralNumberHex, LiteralStringEscape), nil},\n-\t\t\t{`(\\?)(\\\\x[\\da-fA-F]{1,2})`, ByGroups(LiteralStringChar, LiteralStringEscape), nil},\n-\t\t\t{`(\\?)(\\\\[abdefnrstv])`, ByGroups(LiteralStringChar, LiteralStringEscape), nil},\n-\t\t\t{`\\?\\\\?.`, LiteralStringChar, nil},\n-\t\t\t{`:::`, LiteralStringSymbol, nil},\n-\t\t\t{`::`, Operator, nil},\n-\t\t\t{`:(?:\\.\\.\\.|<<>>|%\\{\\}|%|\\{\\})`, LiteralStringSymbol, nil},\n-\t\t\t{`:(?:(?:\\.\\.\\.|[a-z_]\\w*[!?]?)|[A-Z]\\w*(?:\\.[A-Z]\\w*)*|(?:\\<\\<\\<|\\>\\>\\>|\\|\\|\\||\\&\\&\\&|\\^\\^\\^|\\~\\~\\~|\\=\\=\\=|\\!\\=\\=|\\~\\>\\>|\\<\\~\\>|\\|\\~\\>|\\<\\|\\>|\\=\\=|\\!\\=|\\<\\=|\\>\\=|\\&\\&|\\|\\||\\<\\>|\\+\\+|\\-\\-|\\|\\>|\\=\\~|\\-\\>|\\<\\-|\\||\\.|\\=|\\~\\>|\\<\\~|\\<|\\>|\\+|\\-|\\*|\\/|\\!|\\^|\\&))`, LiteralStringSymbol, nil},\n-\t\t\t{`:\"`, LiteralStringSymbol, Push(\"string_double_atom\")},\n-\t\t\t{`:'`, LiteralStringSymbol, Push(\"string_single_atom\")},\n-\t\t\t{`((?:\\.\\.\\.|<<>>|%\\{\\}|%|\\{\\})|(?:(?:\\.\\.\\.|[a-z_]\\w*[!?]?)|[A-Z]\\w*(?:\\.[A-Z]\\w*)*|(?:\\<\\<\\<|\\>\\>\\>|\\|\\|\\||\\&\\&\\&|\\^\\^\\^|\\~\\~\\~|\\=\\=\\=|\\!\\=\\=|\\~\\>\\>|\\<\\~\\>|\\|\\~\\>|\\<\\|\\>|\\=\\=|\\!\\=|\\<\\=|\\>\\=|\\&\\&|\\|\\||\\<\\>|\\+\\+|\\-\\-|\\|\\>|\\=\\~|\\-\\>|\\<\\-|\\||\\.|\\=|\\~\\>|\\<\\~|\\<|\\>|\\+|\\-|\\*|\\/|\\!|\\^|\\&)))(:)(?=\\s|\\n)`, ByGroups(LiteralStringSymbol, Punctuation), nil},\n-\t\t\t{`(fn|do|end|after|else|rescue|catch)\\b`, Keyword, nil},\n-\t\t\t{`(not|and|or|when|in)\\b`, OperatorWord, nil},\n-\t\t\t{`(case|cond|for|if|unless|try|receive|raise|quote|unquote|unquote_splicing|throw|super|while)\\b`, Keyword, nil},\n-\t\t\t{`(def|defp|defmodule|defprotocol|defmacro|defmacrop|defdelegate|defexception|defstruct|defimpl|defcallback)\\b`, KeywordDeclaration, nil},\n-\t\t\t{`(import|require|use|alias)\\b`, KeywordNamespace, nil},\n-\t\t\t{`(nil|true|false)\\b`, NameConstant, nil},\n-\t\t\t{`(_|__MODULE__|__DIR__|__ENV__|__CALLER__)\\b`, NamePseudo, nil},\n-\t\t\t{`@(?:\\.\\.\\.|[a-z_]\\w*[!?]?)`, NameAttribute, nil},\n-\t\t\t{`(?:\\.\\.\\.|[a-z_]\\w*[!?]?)`, Name, nil},\n-\t\t\t{`(%?)([A-Z]\\w*(?:\\.[A-Z]\\w*)*)`, ByGroups(Punctuation, NameClass), nil},\n-\t\t\t{`\\<\\<\\<|\\>\\>\\>|\\|\\|\\||\\&\\&\\&|\\^\\^\\^|\\~\\~\\~|\\=\\=\\=|\\!\\=\\=|\\~\\>\\>|\\<\\~\\>|\\|\\~\\>|\\<\\|\\>`, Operator, nil},\n-\t\t\t{`\\=\\=|\\!\\=|\\<\\=|\\>\\=|\\&\\&|\\|\\||\\<\\>|\\+\\+|\\-\\-|\\|\\>|\\=\\~|\\-\\>|\\<\\-|\\||\\.|\\=|\\~\\>|\\<\\~`, Operator, nil},\n-\t\t\t{`\\\\\\\\|\\<\\<|\\>\\>|\\=\\>|\\(|\\)|\\:|\\;|\\,|\\[|\\]`, Punctuation, nil},\n-\t\t\t{`&\\d`, NameEntity, nil},\n-\t\t\t{`\\<|\\>|\\+|\\-|\\*|\\/|\\!|\\^|\\&`, Operator, nil},\n-\t\t\t{`0b[01](_?[01])*`, LiteralNumberBin, nil},\n-\t\t\t{`0o[0-7](_?[0-7])*`, LiteralNumberOct, nil},\n-\t\t\t{`0x[\\da-fA-F](_?[\\dA-Fa-f])*`, LiteralNumberHex, nil},\n-\t\t\t{`\\d(_?\\d)*\\.\\d(_?\\d)*([eE][-+]?\\d(_?\\d)*)?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d(_?\\d)*`, LiteralNumberInteger, nil},\n-\t\t\t{`\"\"\"\\s*`, LiteralStringHeredoc, Push(\"heredoc_double\")},\n-\t\t\t{`'''\\s*$`, LiteralStringHeredoc, Push(\"heredoc_single\")},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string_double\")},\n-\t\t\t{`'`, LiteralStringSingle, Push(\"string_single\")},\n-\t\t\tInclude(\"sigils\"),\n-\t\t\t{`%\\{`, Punctuation, Push(\"map_key\")},\n-\t\t\t{`\\{`, Punctuation, Push(\"tuple\")},\n-\t\t},\n-\t\t\"heredoc_double\": {\n-\t\t\t{`^\\s*\"\"\"`, LiteralStringHeredoc, Pop(1)},\n-\t\t\tInclude(\"heredoc_interpol\"),\n-\t\t},\n-\t\t\"heredoc_single\": {\n-\t\t\t{`^\\s*'''`, LiteralStringHeredoc, Pop(1)},\n-\t\t\tInclude(\"heredoc_interpol\"),\n-\t\t},\n-\t\t\"heredoc_interpol\": {\n-\t\t\t{`[^#\\\\\\n]+`, LiteralStringHeredoc, nil},\n-\t\t\tInclude(\"escapes\"),\n-\t\t\t{`\\\\.`, LiteralStringHeredoc, nil},\n-\t\t\t{`\\n+`, LiteralStringHeredoc, nil},\n-\t\t\tInclude(\"interpol\"),\n-\t\t},\n-\t\t\"heredoc_no_interpol\": {\n-\t\t\t{`[^\\\\\\n]+`, LiteralStringHeredoc, nil},\n-\t\t\t{`\\\\.`, LiteralStringHeredoc, nil},\n-\t\t\t{`\\n+`, LiteralStringHeredoc, nil},\n-\t\t},\n-\t\t\"escapes\": {\n-\t\t\t{`(\\\\x\\{)([\\da-fA-F]+)(\\})`, ByGroups(LiteralStringEscape, LiteralNumberHex, LiteralStringEscape), nil},\n-\t\t\t{`(\\\\x[\\da-fA-F]{1,2})`, LiteralStringEscape, nil},\n-\t\t\t{`(\\\\[abdefnrstv])`, LiteralStringEscape, nil},\n-\t\t},\n-\t\t\"interpol\": {\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpol_string\")},\n-\t\t},\n-\t\t\"interpol_string\": {\n-\t\t\t{`\\}`, LiteralStringInterpol, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"map_key\": {\n-\t\t\tInclude(\"root\"),\n-\t\t\t{`:`, Punctuation, Push(\"map_val\")},\n-\t\t\t{`=>`, Punctuation, Push(\"map_val\")},\n-\t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"map_val\": {\n-\t\t\tInclude(\"root\"),\n-\t\t\t{`,`, Punctuation, Pop(1)},\n-\t\t\t{`(?=\\})`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"tuple\": {\n-\t\t\tInclude(\"root\"),\n-\t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"string_double\": {\n-\t\t\t{`[^#\"\\\\]+`, LiteralStringDouble, nil},\n-\t\t\tInclude(\"escapes\"),\n-\t\t\t{`\\\\.`, LiteralStringDouble, nil},\n-\t\t\t{`(\")`, ByGroups(LiteralStringDouble), Pop(1)},\n-\t\t\tInclude(\"interpol\"),\n-\t\t},\n-\t\t\"string_single\": {\n-\t\t\t{`[^#'\\\\]+`, LiteralStringSingle, nil},\n-\t\t\tInclude(\"escapes\"),\n-\t\t\t{`\\\\.`, LiteralStringSingle, nil},\n-\t\t\t{`(')`, ByGroups(LiteralStringSingle), Pop(1)},\n-\t\t\tInclude(\"interpol\"),\n-\t\t},\n-\t\t\"string_double_atom\": {\n-\t\t\t{`[^#\"\\\\]+`, LiteralStringSymbol, nil},\n-\t\t\tInclude(\"escapes\"),\n-\t\t\t{`\\\\.`, LiteralStringSymbol, nil},\n-\t\t\t{`(\")`, ByGroups(LiteralStringSymbol), Pop(1)},\n-\t\t\tInclude(\"interpol\"),\n-\t\t},\n-\t\t\"string_single_atom\": {\n-\t\t\t{`[^#'\\\\]+`, LiteralStringSymbol, nil},\n-\t\t\tInclude(\"escapes\"),\n-\t\t\t{`\\\\.`, LiteralStringSymbol, nil},\n-\t\t\t{`(')`, ByGroups(LiteralStringSymbol), Pop(1)},\n-\t\t\tInclude(\"interpol\"),\n-\t\t},\n-\t\t\"sigils\": {\n-\t\t\t{`(~[a-z])(\"\"\")`, ByGroups(LiteralStringOther, LiteralStringHeredoc), Push(\"triquot-end\", \"triquot-intp\")},\n-\t\t\t{`(~[A-Z])(\"\"\")`, ByGroups(LiteralStringOther, LiteralStringHeredoc), Push(\"triquot-end\", \"triquot-no-intp\")},\n-\t\t\t{`(~[a-z])(''')`, ByGroups(LiteralStringOther, LiteralStringHeredoc), Push(\"triapos-end\", \"triapos-intp\")},\n-\t\t\t{`(~[A-Z])(''')`, ByGroups(LiteralStringOther, LiteralStringHeredoc), Push(\"triapos-end\", \"triapos-no-intp\")},\n-\t\t\t{`~[a-z]\\{`, LiteralStringOther, Push(\"cb-intp\")},\n-\t\t\t{`~[A-Z]\\{`, LiteralStringOther, Push(\"cb-no-intp\")},\n-\t\t\t{`~[a-z]\\[`, LiteralStringOther, Push(\"sb-intp\")},\n-\t\t\t{`~[A-Z]\\[`, LiteralStringOther, Push(\"sb-no-intp\")},\n-\t\t\t{`~[a-z]\\(`, LiteralStringOther, Push(\"pa-intp\")},\n-\t\t\t{`~[A-Z]\\(`, LiteralStringOther, Push(\"pa-no-intp\")},\n-\t\t\t{`~[a-z]<`, LiteralStringOther, Push(\"ab-intp\")},\n-\t\t\t{`~[A-Z]<`, LiteralStringOther, Push(\"ab-no-intp\")},\n-\t\t\t{`~[a-z]/`, LiteralStringOther, Push(\"slas-intp\")},\n-\t\t\t{`~[A-Z]/`, LiteralStringOther, Push(\"slas-no-intp\")},\n-\t\t\t{`~[a-z]\\|`, LiteralStringOther, Push(\"pipe-intp\")},\n-\t\t\t{`~[A-Z]\\|`, LiteralStringOther, Push(\"pipe-no-intp\")},\n-\t\t\t{`~[a-z]\"`, LiteralStringOther, Push(\"quot-intp\")},\n-\t\t\t{`~[A-Z]\"`, LiteralStringOther, Push(\"quot-no-intp\")},\n-\t\t\t{`~[a-z]'`, LiteralStringOther, Push(\"apos-intp\")},\n-\t\t\t{`~[A-Z]'`, LiteralStringOther, Push(\"apos-no-intp\")},\n-\t\t},\n-\t\t\"triquot-end\": {\n-\t\t\t{`[a-zA-Z]+`, LiteralStringOther, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"triquot-intp\": {\n-\t\t\t{`^\\s*\"\"\"`, LiteralStringHeredoc, Pop(1)},\n-\t\t\tInclude(\"heredoc_interpol\"),\n-\t\t},\n-\t\t\"triquot-no-intp\": {\n-\t\t\t{`^\\s*\"\"\"`, LiteralStringHeredoc, Pop(1)},\n-\t\t\tInclude(\"heredoc_no_interpol\"),\n-\t\t},\n-\t\t\"triapos-end\": {\n-\t\t\t{`[a-zA-Z]+`, LiteralStringOther, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"triapos-intp\": {\n-\t\t\t{`^\\s*'''`, LiteralStringHeredoc, Pop(1)},\n-\t\t\tInclude(\"heredoc_interpol\"),\n-\t\t},\n-\t\t\"triapos-no-intp\": {\n-\t\t\t{`^\\s*'''`, LiteralStringHeredoc, Pop(1)},\n-\t\t\tInclude(\"heredoc_no_interpol\"),\n-\t\t},\n-\t\t\"cb-intp\": {\n-\t\t\t{`[^#\\}\\\\]+`, LiteralStringOther, nil},\n-\t\t\tInclude(\"escapes\"),\n-\t\t\t{`\\\\.`, LiteralStringOther, nil},\n-\t\t\t{`\\}[a-zA-Z]*`, LiteralStringOther, Pop(1)},\n-\t\t\tInclude(\"interpol\"),\n-\t\t},\n-\t\t\"cb-no-intp\": {\n-\t\t\t{`[^\\}\\\\]+`, LiteralStringOther, nil},\n-\t\t\t{`\\\\.`, LiteralStringOther, nil},\n-\t\t\t{`\\}[a-zA-Z]*`, LiteralStringOther, Pop(1)},\n-\t\t},\n-\t\t\"sb-intp\": {\n-\t\t\t{`[^#\\]\\\\]+`, LiteralStringOther, nil},\n-\t\t\tInclude(\"escapes\"),\n-\t\t\t{`\\\\.`, LiteralStringOther, nil},\n-\t\t\t{`\\][a-zA-Z]*`, LiteralStringOther, Pop(1)},\n-\t\t\tInclude(\"interpol\"),\n-\t\t},\n-\t\t\"sb-no-intp\": {\n-\t\t\t{`[^\\]\\\\]+`, LiteralStringOther, nil},\n-\t\t\t{`\\\\.`, LiteralStringOther, nil},\n-\t\t\t{`\\][a-zA-Z]*`, LiteralStringOther, Pop(1)},\n-\t\t},\n-\t\t\"pa-intp\": {\n-\t\t\t{`[^#\\)\\\\]+`, LiteralStringOther, nil},\n-\t\t\tInclude(\"escapes\"),\n-\t\t\t{`\\\\.`, LiteralStringOther, nil},\n-\t\t\t{`\\)[a-zA-Z]*`, LiteralStringOther, Pop(1)},\n-\t\t\tInclude(\"interpol\"),\n-\t\t},\n-\t\t\"pa-no-intp\": {\n-\t\t\t{`[^\\)\\\\]+`, LiteralStringOther, nil},\n-\t\t\t{`\\\\.`, LiteralStringOther, nil},\n-\t\t\t{`\\)[a-zA-Z]*`, LiteralStringOther, Pop(1)},\n-\t\t},\n-\t\t\"ab-intp\": {\n-\t\t\t{`[^#>\\\\]+`, LiteralStringOther, nil},\n-\t\t\tInclude(\"escapes\"),\n-\t\t\t{`\\\\.`, LiteralStringOther, nil},\n-\t\t\t{`>[a-zA-Z]*`, LiteralStringOther, Pop(1)},\n-\t\t\tInclude(\"interpol\"),\n-\t\t},\n-\t\t\"ab-no-intp\": {\n-\t\t\t{`[^>\\\\]+`, LiteralStringOther, nil},\n-\t\t\t{`\\\\.`, LiteralStringOther, nil},\n-\t\t\t{`>[a-zA-Z]*`, LiteralStringOther, Pop(1)},\n-\t\t},\n-\t\t\"slas-intp\": {\n-\t\t\t{`[^#/\\\\]+`, LiteralStringOther, nil},\n-\t\t\tInclude(\"escapes\"),\n-\t\t\t{`\\\\.`, LiteralStringOther, nil},\n-\t\t\t{`/[a-zA-Z]*`, LiteralStringOther, Pop(1)},\n-\t\t\tInclude(\"interpol\"),\n-\t\t},\n-\t\t\"slas-no-intp\": {\n-\t\t\t{`[^/\\\\]+`, LiteralStringOther, nil},\n-\t\t\t{`\\\\.`, LiteralStringOther, nil},\n-\t\t\t{`/[a-zA-Z]*`, LiteralStringOther, Pop(1)},\n-\t\t},\n-\t\t\"pipe-intp\": {\n-\t\t\t{`[^#\\|\\\\]+`, LiteralStringOther, nil},\n-\t\t\tInclude(\"escapes\"),\n-\t\t\t{`\\\\.`, LiteralStringOther, nil},\n-\t\t\t{`\\|[a-zA-Z]*`, LiteralStringOther, Pop(1)},\n-\t\t\tInclude(\"interpol\"),\n-\t\t},\n-\t\t\"pipe-no-intp\": {\n-\t\t\t{`[^\\|\\\\]+`, LiteralStringOther, nil},\n-\t\t\t{`\\\\.`, LiteralStringOther, nil},\n-\t\t\t{`\\|[a-zA-Z]*`, LiteralStringOther, Pop(1)},\n-\t\t},\n-\t\t\"quot-intp\": {\n-\t\t\t{`[^#\"\\\\]+`, LiteralStringOther, nil},\n-\t\t\tInclude(\"escapes\"),\n-\t\t\t{`\\\\.`, LiteralStringOther, nil},\n-\t\t\t{`\"[a-zA-Z]*`, LiteralStringOther, Pop(1)},\n-\t\t\tInclude(\"interpol\"),\n-\t\t},\n-\t\t\"quot-no-intp\": {\n-\t\t\t{`[^\"\\\\]+`, LiteralStringOther, nil},\n-\t\t\t{`\\\\.`, LiteralStringOther, nil},\n-\t\t\t{`\"[a-zA-Z]*`, LiteralStringOther, Pop(1)},\n-\t\t},\n-\t\t\"apos-intp\": {\n-\t\t\t{`[^#'\\\\]+`, LiteralStringOther, nil},\n-\t\t\tInclude(\"escapes\"),\n-\t\t\t{`\\\\.`, LiteralStringOther, nil},\n-\t\t\t{`'[a-zA-Z]*`, LiteralStringOther, Pop(1)},\n-\t\t\tInclude(\"interpol\"),\n-\t\t},\n-\t\t\"apos-no-intp\": {\n-\t\t\t{`[^'\\\\]+`, LiteralStringOther, nil},\n-\t\t\t{`\\\\.`, LiteralStringOther, nil},\n-\t\t\t{`'[a-zA-Z]*`, LiteralStringOther, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "0fb6689537b664fe5b677d1961a97e47ac1fd6c7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/e/elm.go",
      "status": "removed",
      "additions": 0,
      "deletions": 63,
      "changes": 63,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fe%2Felm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fe%2Felm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fe%2Felm.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,63 +0,0 @@\n-package e\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Elm lexer.\n-var Elm = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Elm\",\n-\t\tAliases:   []string{\"elm\"},\n-\t\tFilenames: []string{\"*.elm\"},\n-\t\tMimeTypes: []string{\"text/x-elm\"},\n-\t},\n-\telmRules,\n-))\n-\n-func elmRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\{-`, CommentMultiline, Push(\"comment\")},\n-\t\t\t{`--.*`, CommentSingle, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\"`, LiteralString, Push(\"doublequote\")},\n-\t\t\t{`^\\s*module\\s*`, KeywordNamespace, Push(\"imports\")},\n-\t\t\t{`^\\s*import\\s*`, KeywordNamespace, Push(\"imports\")},\n-\t\t\t{`\\[glsl\\|.*`, NameEntity, Push(\"shader\")},\n-\t\t\t{Words(``, `\\b`, `alias`, `as`, `case`, `else`, `if`, `import`, `in`, `let`, `module`, `of`, `port`, `then`, `type`, `where`), KeywordReserved, nil},\n-\t\t\t{`[A-Z]\\w*`, KeywordType, nil},\n-\t\t\t{`^main `, KeywordReserved, nil},\n-\t\t\t{Words(`\\(`, `\\)`, `~`, `||`, `|>`, `|`, \"`\", `^`, `\\`, `'`, `>>`, `>=`, `>`, `==`, `=`, `<~`, `<|`, `<=`, `<<`, `<-`, `<`, `::`, `:`, `/=`, `//`, `/`, `..`, `.`, `->`, `-`, `++`, `+`, `*`, `&&`, `%`), NameFunction, nil},\n-\t\t\t{Words(``, ``, `~`, `||`, `|>`, `|`, \"`\", `^`, `\\`, `'`, `>>`, `>=`, `>`, `==`, `=`, `<~`, `<|`, `<=`, `<<`, `<-`, `<`, `::`, `:`, `/=`, `//`, `/`, `..`, `.`, `->`, `-`, `++`, `+`, `*`, `&&`, `%`), NameFunction, nil},\n-\t\t\tInclude(\"numbers\"),\n-\t\t\t{`[a-z_][a-zA-Z_\\']*`, NameVariable, nil},\n-\t\t\t{`[,()\\[\\]{}]`, Punctuation, nil},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`-(?!\\})`, CommentMultiline, nil},\n-\t\t\t{`\\{-`, CommentMultiline, Push(\"comment\")},\n-\t\t\t{`[^-}]`, CommentMultiline, nil},\n-\t\t\t{`-\\}`, CommentMultiline, Pop(1)},\n-\t\t},\n-\t\t\"doublequote\": {\n-\t\t\t{`\\\\u[0-9a-fA-F]{4}`, LiteralStringEscape, nil},\n-\t\t\t{`\\\\[nrfvb\\\\\"]`, LiteralStringEscape, nil},\n-\t\t\t{`[^\"]`, LiteralString, nil},\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t},\n-\t\t\"imports\": {\n-\t\t\t{`\\w+(\\.\\w+)*`, NameClass, Pop(1)},\n-\t\t},\n-\t\t\"numbers\": {\n-\t\t\t{`_?\\d+\\.(?=\\d+)`, LiteralNumberFloat, nil},\n-\t\t\t{`_?\\d+`, LiteralNumberInteger, nil},\n-\t\t},\n-\t\t\"shader\": {\n-\t\t\t{`\\|(?!\\])`, NameEntity, nil},\n-\t\t\t{`\\|\\]`, NameEntity, Pop(1)},\n-\t\t\t{`.*\\n`, NameEntity, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "5f5c9caadc70295b828c01707619d4d08576857e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/e/erlang.go",
      "status": "removed",
      "additions": 0,
      "deletions": 70,
      "changes": 70,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fe%2Ferlang.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fe%2Ferlang.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fe%2Ferlang.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,70 +0,0 @@\n-package e\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Erlang lexer.\n-var Erlang = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Erlang\",\n-\t\tAliases:   []string{\"erlang\"},\n-\t\tFilenames: []string{\"*.erl\", \"*.hrl\", \"*.es\", \"*.escript\"},\n-\t\tMimeTypes: []string{\"text/x-erlang\"},\n-\t},\n-\terlangRules,\n-))\n-\n-func erlangRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`%.*\\n`, Comment, nil},\n-\t\t\t{Words(``, `\\b`, `after`, `begin`, `case`, `catch`, `cond`, `end`, `fun`, `if`, `let`, `of`, `query`, `receive`, `try`, `when`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `abs`, `append_element`, `apply`, `atom_to_list`, `binary_to_list`, `bitstring_to_list`, `binary_to_term`, `bit_size`, `bump_reductions`, `byte_size`, `cancel_timer`, `check_process_code`, `delete_module`, `demonitor`, `disconnect_node`, `display`, `element`, `erase`, `exit`, `float`, `float_to_list`, `fun_info`, `fun_to_list`, `function_exported`, `garbage_collect`, `get`, `get_keys`, `group_leader`, `hash`, `hd`, `integer_to_list`, `iolist_to_binary`, `iolist_size`, `is_atom`, `is_binary`, `is_bitstring`, `is_boolean`, `is_builtin`, `is_float`, `is_function`, `is_integer`, `is_list`, `is_number`, `is_pid`, `is_port`, `is_process_alive`, `is_record`, `is_reference`, `is_tuple`, `length`, `link`, `list_to_atom`, `list_to_binary`, `list_to_bitstring`, `list_to_existing_atom`, `list_to_float`, `list_to_integer`, `list_to_pid`, `list_to_tuple`, `load_module`, `localtime_to_universaltime`, `make_tuple`, `md5`, `md5_final`, `md5_update`, `memory`, `module_loaded`, `monitor`, `monitor_node`, `node`, `nodes`, `open_port`, `phash`, `phash2`, `pid_to_list`, `port_close`, `port_command`, `port_connect`, `port_control`, `port_call`, `port_info`, `port_to_list`, `process_display`, `process_flag`, `process_info`, `purge_module`, `put`, `read_timer`, `ref_to_list`, `register`, `resume_process`, `round`, `send`, `send_after`, `send_nosuspend`, `set_cookie`, `setelement`, `size`, `spawn`, `spawn_link`, `spawn_monitor`, `spawn_opt`, `split_binary`, `start_timer`, `statistics`, `suspend_process`, `system_flag`, `system_info`, `system_monitor`, `system_profile`, `term_to_binary`, `tl`, `trace`, `trace_delivered`, `trace_info`, `trace_pattern`, `trunc`, `tuple_size`, `tuple_to_list`, `universaltime_to_localtime`, `unlink`, `unregister`, `whereis`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\b`, `and`, `andalso`, `band`, `bnot`, `bor`, `bsl`, `bsr`, `bxor`, `div`, `not`, `or`, `orelse`, `rem`, `xor`), OperatorWord, nil},\n-\t\t\t{`^-`, Punctuation, Push(\"directive\")},\n-\t\t\t{`(\\+\\+?|--?|\\*|/|<|>|/=|=:=|=/=|=<|>=|==?|<-|!|\\?)`, Operator, nil},\n-\t\t\t{`\"`, LiteralString, Push(\"string\")},\n-\t\t\t{`<<`, NameLabel, nil},\n-\t\t\t{`>>`, NameLabel, nil},\n-\t\t\t{`((?:[a-z]\\w*|'[^\\n']*[^\\\\]'))(:)`, ByGroups(NameNamespace, Punctuation), nil},\n-\t\t\t{`(?:^|(?<=:))((?:[a-z]\\w*|'[^\\n']*[^\\\\]'))(\\s*)(\\()`, ByGroups(NameFunction, Text, Punctuation), nil},\n-\t\t\t{`[+-]?(?:[2-9]|[12][0-9]|3[0-6])#[0-9a-zA-Z]+`, LiteralNumberInteger, nil},\n-\t\t\t{`[+-]?\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`[+-]?\\d+.\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`[]\\[:_@\\\".{}()|;,]`, Punctuation, nil},\n-\t\t\t{`(?:[A-Z_]\\w*)`, NameVariable, nil},\n-\t\t\t{`(?:[a-z]\\w*|'[^\\n']*[^\\\\]')`, Name, nil},\n-\t\t\t{`\\?(?:(?:[A-Z_]\\w*)|(?:[a-z]\\w*|'[^\\n']*[^\\\\]'))`, NameConstant, nil},\n-\t\t\t{`\\$(?:(?:\\\\(?:[bdefnrstv\\'\"\\\\]|[0-7][0-7]?[0-7]?|(?:x[0-9a-fA-F]{2}|x\\{[0-9a-fA-F]+\\})|\\^[a-zA-Z]))|\\\\[ %]|[^\\\\])`, LiteralStringChar, nil},\n-\t\t\t{`#(?:[a-z]\\w*|'[^\\n']*[^\\\\]')(:?\\.(?:[a-z]\\w*|'[^\\n']*[^\\\\]'))?`, NameLabel, nil},\n-\t\t\t{`\\A#!.+\\n`, CommentHashbang, nil},\n-\t\t\t{`#\\{`, Punctuation, Push(\"map_key\")},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`(?:\\\\(?:[bdefnrstv\\'\"\\\\]|[0-7][0-7]?[0-7]?|(?:x[0-9a-fA-F]{2}|x\\{[0-9a-fA-F]+\\})|\\^[a-zA-Z]))`, LiteralStringEscape, nil},\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`~[0-9.*]*[~#+BPWXb-ginpswx]`, LiteralStringInterpol, nil},\n-\t\t\t{`[^\"\\\\~]+`, LiteralString, nil},\n-\t\t\t{`~`, LiteralString, nil},\n-\t\t},\n-\t\t\"directive\": {\n-\t\t\t{`(define)(\\s*)(\\()((?:(?:[A-Z_]\\w*)|(?:[a-z]\\w*|'[^\\n']*[^\\\\]')))`, ByGroups(NameEntity, Text, Punctuation, NameConstant), Pop(1)},\n-\t\t\t{`(record)(\\s*)(\\()((?:(?:[A-Z_]\\w*)|(?:[a-z]\\w*|'[^\\n']*[^\\\\]')))`, ByGroups(NameEntity, Text, Punctuation, NameLabel), Pop(1)},\n-\t\t\t{`(?:[a-z]\\w*|'[^\\n']*[^\\\\]')`, NameEntity, Pop(1)},\n-\t\t},\n-\t\t\"map_key\": {\n-\t\t\tInclude(\"root\"),\n-\t\t\t{`=>`, Punctuation, Push(\"map_val\")},\n-\t\t\t{`:=`, Punctuation, Push(\"map_val\")},\n-\t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"map_val\": {\n-\t\t\tInclude(\"root\"),\n-\t\t\t{`,`, Punctuation, Pop(1)},\n-\t\t\t{`(?=\\})`, Punctuation, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "d88beb231d17780a40be64403d9c5b242457284c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/f/factor.go",
      "status": "removed",
      "additions": 0,
      "deletions": 119,
      "changes": 119,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ff%2Ffactor.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ff%2Ffactor.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ff%2Ffactor.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,119 +0,0 @@\n-package f\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Factor lexer.\n-var Factor = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Factor\",\n-\t\tAliases:   []string{\"factor\"},\n-\t\tFilenames: []string{\"*.factor\"},\n-\t\tMimeTypes: []string{\"text/x-factor\"},\n-\t},\n-\tfactorRules,\n-))\n-\n-func factorRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`#!.*$`, CommentPreproc, nil},\n-\t\t\tDefault(Push(\"base\")),\n-\t\t},\n-\t\t\"base\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`((?:MACRO|MEMO|TYPED)?:[:]?)(\\s+)(\\S+)`, ByGroups(Keyword, Text, NameFunction), nil},\n-\t\t\t{`(M:[:]?)(\\s+)(\\S+)(\\s+)(\\S+)`, ByGroups(Keyword, Text, NameClass, Text, NameFunction), nil},\n-\t\t\t{`(C:)(\\s+)(\\S+)(\\s+)(\\S+)`, ByGroups(Keyword, Text, NameFunction, Text, NameClass), nil},\n-\t\t\t{`(GENERIC:)(\\s+)(\\S+)`, ByGroups(Keyword, Text, NameFunction), nil},\n-\t\t\t{`(HOOK:|GENERIC#)(\\s+)(\\S+)(\\s+)(\\S+)`, ByGroups(Keyword, Text, NameFunction, Text, NameFunction), nil},\n-\t\t\t{`\\(\\s`, NameFunction, Push(\"stackeffect\")},\n-\t\t\t{`;\\s`, Keyword, nil},\n-\t\t\t{`(USING:)(\\s+)`, ByGroups(KeywordNamespace, Text), Push(\"vocabs\")},\n-\t\t\t{`(USE:|UNUSE:|IN:|QUALIFIED:)(\\s+)(\\S+)`, ByGroups(KeywordNamespace, Text, NameNamespace), nil},\n-\t\t\t{`(QUALIFIED-WITH:)(\\s+)(\\S+)(\\s+)(\\S+)`, ByGroups(KeywordNamespace, Text, NameNamespace, Text, NameNamespace), nil},\n-\t\t\t{`(FROM:|EXCLUDE:)(\\s+)(\\S+)(\\s+=>\\s)`, ByGroups(KeywordNamespace, Text, NameNamespace, Text), Push(\"words\")},\n-\t\t\t{`(RENAME:)(\\s+)(\\S+)(\\s+)(\\S+)(\\s+=>\\s+)(\\S+)`, ByGroups(KeywordNamespace, Text, NameFunction, Text, NameNamespace, Text, NameFunction), nil},\n-\t\t\t{`(ALIAS:|TYPEDEF:)(\\s+)(\\S+)(\\s+)(\\S+)`, ByGroups(KeywordNamespace, Text, NameFunction, Text, NameFunction), nil},\n-\t\t\t{`(DEFER:|FORGET:|POSTPONE:)(\\s+)(\\S+)`, ByGroups(KeywordNamespace, Text, NameFunction), nil},\n-\t\t\t{`(TUPLE:|ERROR:)(\\s+)(\\S+)(\\s+<\\s+)(\\S+)`, ByGroups(Keyword, Text, NameClass, Text, NameClass), Push(\"slots\")},\n-\t\t\t{`(TUPLE:|ERROR:|BUILTIN:)(\\s+)(\\S+)`, ByGroups(Keyword, Text, NameClass), Push(\"slots\")},\n-\t\t\t{`(MIXIN:|UNION:|INTERSECTION:)(\\s+)(\\S+)`, ByGroups(Keyword, Text, NameClass), nil},\n-\t\t\t{`(PREDICATE:)(\\s+)(\\S+)(\\s+<\\s+)(\\S+)`, ByGroups(Keyword, Text, NameClass, Text, NameClass), nil},\n-\t\t\t{`(C:)(\\s+)(\\S+)(\\s+)(\\S+)`, ByGroups(Keyword, Text, NameFunction, Text, NameClass), nil},\n-\t\t\t{`(INSTANCE:)(\\s+)(\\S+)(\\s+)(\\S+)`, ByGroups(Keyword, Text, NameClass, Text, NameClass), nil},\n-\t\t\t{`(SLOT:)(\\s+)(\\S+)`, ByGroups(Keyword, Text, NameFunction), nil},\n-\t\t\t{`(SINGLETON:)(\\s+)(\\S+)`, ByGroups(Keyword, Text, NameClass), nil},\n-\t\t\t{`SINGLETONS:`, Keyword, Push(\"classes\")},\n-\t\t\t{`(CONSTANT:|SYMBOL:|MAIN:|HELP:)(\\s+)(\\S+)`, ByGroups(Keyword, Text, NameFunction), nil},\n-\t\t\t{`SYMBOLS:\\s`, Keyword, Push(\"words\")},\n-\t\t\t{`SYNTAX:\\s`, Keyword, nil},\n-\t\t\t{`ALIEN:\\s`, Keyword, nil},\n-\t\t\t{`(STRUCT:)(\\s+)(\\S+)`, ByGroups(Keyword, Text, NameClass), nil},\n-\t\t\t{`(FUNCTION:)(\\s+\\S+\\s+)(\\S+)(\\s+\\(\\s+[^)]+\\)\\s)`, ByGroups(KeywordNamespace, Text, NameFunction, Text), nil},\n-\t\t\t{`(FUNCTION-ALIAS:)(\\s+)(\\S+)(\\s+\\S+\\s+)(\\S+)(\\s+\\(\\s+[^)]+\\)\\s)`, ByGroups(KeywordNamespace, Text, NameFunction, Text, NameFunction, Text), nil},\n-\t\t\t{`(?:<PRIVATE|PRIVATE>)\\s`, KeywordNamespace, nil},\n-\t\t\t{`\"\"\"\\s+(?:.|\\n)*?\\s+\"\"\"`, LiteralString, nil},\n-\t\t\t{`\"(?:\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`\\S+\"\\s+(?:\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`CHAR:\\s+(?:\\\\[\\\\abfnrstv]|[^\\\\]\\S*)\\s`, LiteralStringChar, nil},\n-\t\t\t{`!\\s+.*$`, Comment, nil},\n-\t\t\t{`#!\\s+.*$`, Comment, nil},\n-\t\t\t{`/\\*\\s+(?:.|\\n)*?\\s\\*/\\s`, Comment, nil},\n-\t\t\t{`[tf]\\s`, NameConstant, nil},\n-\t\t\t{`[\\\\$]\\s+\\S+`, NameConstant, nil},\n-\t\t\t{`M\\\\\\s+\\S+\\s+\\S+`, NameConstant, nil},\n-\t\t\t{`[+-]?(?:[\\d,]*\\d)?\\.(?:\\d([\\d,]*\\d)?)?(?:[eE][+-]?\\d+)?\\s`, LiteralNumber, nil},\n-\t\t\t{`[+-]?\\d(?:[\\d,]*\\d)?(?:[eE][+-]?\\d+)?\\s`, LiteralNumber, nil},\n-\t\t\t{`0x[a-fA-F\\d](?:[a-fA-F\\d,]*[a-fA-F\\d])?(?:p\\d([\\d,]*\\d)?)?\\s`, LiteralNumber, nil},\n-\t\t\t{`NAN:\\s+[a-fA-F\\d](?:[a-fA-F\\d,]*[a-fA-F\\d])?(?:p\\d([\\d,]*\\d)?)?\\s`, LiteralNumber, nil},\n-\t\t\t{`0b[01]+\\s`, LiteralNumberBin, nil},\n-\t\t\t{`0o[0-7]+\\s`, LiteralNumberOct, nil},\n-\t\t\t{`(?:\\d([\\d,]*\\d)?)?\\+\\d(?:[\\d,]*\\d)?/\\d(?:[\\d,]*\\d)?\\s`, LiteralNumber, nil},\n-\t\t\t{`(?:\\-\\d([\\d,]*\\d)?)?\\-\\d(?:[\\d,]*\\d)?/\\d(?:[\\d,]*\\d)?\\s`, LiteralNumber, nil},\n-\t\t\t{`(?:deprecated|final|foldable|flushable|inline|recursive)\\s`, Keyword, nil},\n-\t\t\t{Words(``, `\\s`, `-rot`, `2bi`, `2bi@`, `2bi*`, `2curry`, `2dip`, `2drop`, `2dup`, `2keep`, `2nip`, `2over`, `2tri`, `2tri@`, `2tri*`, `3bi`, `3curry`, `3dip`, `3drop`, `3dup`, `3keep`, `3tri`, `4dip`, `4drop`, `4dup`, `4keep`, `<wrapper>`, `=`, `>boolean`, `clone`, `?`, `?execute`, `?if`, `and`, `assert`, `assert=`, `assert?`, `bi`, `bi-curry`, `bi-curry@`, `bi-curry*`, `bi@`, `bi*`, `boa`, `boolean`, `boolean?`, `both?`, `build`, `call`, `callstack`, `callstack>array`, `callstack?`, `clear`, `(clone)`, `compose`, `compose?`, `curry`, `curry?`, `datastack`, `die`, `dip`, `do`, `drop`, `dup`, `dupd`, `either?`, `eq?`, `equal?`, `execute`, `hashcode`, `hashcode*`, `identity-hashcode`, `identity-tuple`, `identity-tuple?`, `if`, `if*`, `keep`, `loop`, `most`, `new`, `nip`, `not`, `null`, `object`, `or`, `over`, `pick`, `prepose`, `retainstack`, `rot`, `same?`, `swap`, `swapd`, `throw`, `tri`, `tri-curry`, `tri-curry@`, `tri-curry*`, `tri@`, `tri*`, `tuple`, `tuple?`, `unless`, `unless*`, `until`, `when`, `when*`, `while`, `with`, `wrapper`, `wrapper?`, `xor`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\s`, `2cache`, `<enum>`, `>alist`, `?at`, `?of`, `assoc`, `assoc-all?`, `assoc-any?`, `assoc-clone-like`, `assoc-combine`, `assoc-diff`, `assoc-diff!`, `assoc-differ`, `assoc-each`, `assoc-empty?`, `assoc-filter`, `assoc-filter!`, `assoc-filter-as`, `assoc-find`, `assoc-hashcode`, `assoc-intersect`, `assoc-like`, `assoc-map`, `assoc-map-as`, `assoc-partition`, `assoc-refine`, `assoc-size`, `assoc-stack`, `assoc-subset?`, `assoc-union`, `assoc-union!`, `assoc=`, `assoc>map`, `assoc?`, `at`, `at+`, `at*`, `cache`, `change-at`, `clear-assoc`, `delete-at`, `delete-at*`, `enum`, `enum?`, `extract-keys`, `inc-at`, `key?`, `keys`, `map>assoc`, `maybe-set-at`, `new-assoc`, `of`, `push-at`, `rename-at`, `set-at`, `sift-keys`, `sift-values`, `substitute`, `unzip`, `value-at`, `value-at*`, `value?`, `values`, `zip`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\s`, `2cleave`, `2cleave>quot`, `3cleave`, `3cleave>quot`, `4cleave`, `4cleave>quot`, `alist>quot`, `call-effect`, `case`, `case-find`, `case>quot`, `cleave`, `cleave>quot`, `cond`, `cond>quot`, `deep-spread>quot`, `execute-effect`, `linear-case-quot`, `no-case`, `no-case?`, `no-cond`, `no-cond?`, `recursive-hashcode`, `shallow-spread>quot`, `spread`, `to-fixed-point`, `wrong-values`, `wrong-values?`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\s`, `-`, `/`, `/f`, `/i`, `/mod`, `2/`, `2^`, `<`, `<=`, `<fp-nan>`, `>`, `>=`, `>bignum`, `>fixnum`, `>float`, `>integer`, `(all-integers?)`, `(each-integer)`, `(find-integer)`, `*`, `+`, `?1+`, `abs`, `align`, `all-integers?`, `bignum`, `bignum?`, `bit?`, `bitand`, `bitnot`, `bitor`, `bits>double`, `bits>float`, `bitxor`, `complex`, `complex?`, `denominator`, `double>bits`, `each-integer`, `even?`, `find-integer`, `find-last-integer`, `fixnum`, `fixnum?`, `float`, `float>bits`, `float?`, `fp-bitwise=`, `fp-infinity?`, `fp-nan-payload`, `fp-nan?`, `fp-qnan?`, `fp-sign`, `fp-snan?`, `fp-special?`, `if-zero`, `imaginary-part`, `integer`, `integer>fixnum`, `integer>fixnum-strict`, `integer?`, `log2`, `log2-expects-positive`, `log2-expects-positive?`, `mod`, `neg`, `neg?`, `next-float`, `next-power-of-2`, `number`, `number=`, `number?`, `numerator`, `odd?`, `out-of-fixnum-range`, `out-of-fixnum-range?`, `power-of-2?`, `prev-float`, `ratio`, `ratio?`, `rational`, `rational?`, `real`, `real-part`, `real?`, `recip`, `rem`, `sgn`, `shift`, `sq`, `times`, `u<`, `u<=`, `u>`, `u>=`, `unless-zero`, `unordered?`, `when-zero`, `zero?`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\s`, `1sequence`, `2all?`, `2each`, `2map`, `2map-as`, `2map-reduce`, `2reduce`, `2selector`, `2sequence`, `3append`, `3append-as`, `3each`, `3map`, `3map-as`, `3sequence`, `4sequence`, `<repetition>`, `<reversed>`, `<slice>`, `?first`, `?last`, `?nth`, `?second`, `?set-nth`, `accumulate`, `accumulate!`, `accumulate-as`, `all?`, `any?`, `append`, `append!`, `append-as`, `assert-sequence`, `assert-sequence=`, `assert-sequence?`, `binary-reduce`, `bounds-check`, `bounds-check?`, `bounds-error`, `bounds-error?`, `but-last`, `but-last-slice`, `cartesian-each`, `cartesian-map`, `cartesian-product`, `change-nth`, `check-slice`, `check-slice-error`, `clone-like`, `collapse-slice`, `collector`, `collector-for`, `concat`, `concat-as`, `copy`, `count`, `cut`, `cut-slice`, `cut*`, `delete-all`, `delete-slice`, `drop-prefix`, `each`, `each-from`, `each-index`, `empty?`, `exchange`, `filter`, `filter!`, `filter-as`, `find`, `find-from`, `find-index`, `find-index-from`, `find-last`, `find-last-from`, `first`, `first2`, `first3`, `first4`, `flip`, `follow`, `fourth`, `glue`, `halves`, `harvest`, `head`, `head-slice`, `head-slice*`, `head*`, `head?`, `if-empty`, `immutable`, `immutable-sequence`, `immutable-sequence?`, `immutable?`, `index`, `index-from`, `indices`, `infimum`, `infimum-by`, `insert-nth`, `interleave`, `iota`, `iota-tuple`, `iota-tuple?`, `join`, `join-as`, `last`, `last-index`, `last-index-from`, `length`, `lengthen`, `like`, `longer`, `longer?`, `longest`, `map`, `map!`, `map-as`, `map-find`, `map-find-last`, `map-index`, `map-integers`, `map-reduce`, `map-sum`, `max-length`, `member-eq?`, `member?`, `midpoint@`, `min-length`, `mismatch`, `move`, `new-like`, `new-resizable`, `new-sequence`, `non-negative-integer-expected`, `non-negative-integer-expected?`, `nth`, `nths`, `pad-head`, `pad-tail`, `padding`, `partition`, `pop`, `pop*`, `prefix`, `prepend`, `prepend-as`, `produce`, `produce-as`, `product`, `push`, `push-all`, `push-either`, `push-if`, `reduce`, `reduce-index`, `remove`, `remove!`, `remove-eq`, `remove-eq!`, `remove-nth`, `remove-nth!`, `repetition`, `repetition?`, `replace-slice`, `replicate`, `replicate-as`, `rest`, `rest-slice`, `reverse`, `reverse!`, `reversed`, `reversed?`, `second`, `selector`, `selector-for`, `sequence`, `sequence-hashcode`, `sequence=`, `sequence?`, `set-first`, `set-fourth`, `set-last`, `set-length`, `set-nth`, `set-second`, `set-third`, `short`, `shorten`, `shorter`, `shorter?`, `shortest`, `sift`, `slice`, `slice-error`, `slice-error?`, `slice?`, `snip`, `snip-slice`, `start`, `start*`, `subseq`, `subseq?`, `suffix`, `suffix!`, `sum`, `sum-lengths`, `supremum`, `supremum-by`, `surround`, `tail`, `tail-slice`, `tail-slice*`, `tail*`, `tail?`, `third`, `trim`, `trim-head`, `trim-head-slice`, `trim-slice`, `trim-tail`, `trim-tail-slice`, `unclip`, `unclip-last`, `unclip-last-slice`, `unclip-slice`, `unless-empty`, `virtual-exemplar`, `virtual-sequence`, `virtual-sequence?`, `virtual@`, `when-empty`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\s`, `+@`, `change`, `change-global`, `counter`, `dec`, `get`, `get-global`, `global`, `inc`, `init-namespaces`, `initialize`, `is-global`, `make-assoc`, `namespace`, `namestack`, `off`, `on`, `set`, `set-global`, `set-namestack`, `toggle`, `with-global`, `with-scope`, `with-variable`, `with-variables`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\s`, `1array`, `2array`, `3array`, `4array`, `<array>`, `>array`, `array`, `array?`, `pair`, `pair?`, `resize-array`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\s`, `(each-stream-block-slice)`, `(each-stream-block)`, `(stream-contents-by-block)`, `(stream-contents-by-element)`, `(stream-contents-by-length-or-block)`, `(stream-contents-by-length)`, `+byte+`, `+character+`, `bad-seek-type`, `bad-seek-type?`, `bl`, `contents`, `each-block`, `each-block-size`, `each-block-slice`, `each-line`, `each-morsel`, `each-stream-block`, `each-stream-block-slice`, `each-stream-line`, `error-stream`, `flush`, `input-stream`, `input-stream?`, `invalid-read-buffer`, `invalid-read-buffer?`, `lines`, `nl`, `output-stream`, `output-stream?`, `print`, `read`, `read-into`, `read-partial`, `read-partial-into`, `read-until`, `read1`, `readln`, `seek-absolute`, `seek-absolute?`, `seek-end`, `seek-end?`, `seek-input`, `seek-output`, `seek-relative`, `seek-relative?`, `stream-bl`, `stream-contents`, `stream-contents*`, `stream-copy`, `stream-copy*`, `stream-element-type`, `stream-flush`, `stream-length`, `stream-lines`, `stream-nl`, `stream-print`, `stream-read`, `stream-read-into`, `stream-read-partial`, `stream-read-partial-into`, `stream-read-partial-unsafe`, `stream-read-unsafe`, `stream-read-until`, `stream-read1`, `stream-readln`, `stream-seek`, `stream-seekable?`, `stream-tell`, `stream-write`, `stream-write1`, `tell-input`, `tell-output`, `with-error-stream`, `with-error-stream*`, `with-error>output`, `with-input-output+error-streams`, `with-input-output+error-streams*`, `with-input-stream`, `with-input-stream*`, `with-output-stream`, `with-output-stream*`, `with-output>error`, `with-output+error-stream`, `with-output+error-stream*`, `with-streams`, `with-streams*`, `write`, `write1`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\s`, `1string`, `<string>`, `>string`, `resize-string`, `string`, `string?`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\s`, `1vector`, `<vector>`, `>vector`, `?push`, `vector`, `vector?`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\s`, `<condition>`, `<continuation>`, `<restart>`, `attempt-all`, `attempt-all-error`, `attempt-all-error?`, `callback-error-hook`, `callcc0`, `callcc1`, `cleanup`, `compute-restarts`, `condition`, `condition?`, `continuation`, `continuation?`, `continue`, `continue-restart`, `continue-with`, `current-continuation`, `error`, `error-continuation`, `error-in-thread`, `error-thread`, `ifcc`, `ignore-errors`, `in-callback?`, `original-error`, `recover`, `restart`, `restart?`, `restarts`, `rethrow`, `rethrow-restarts`, `return`, `return-continuation`, `thread-error-hook`, `throw-continue`, `throw-restarts`, `with-datastack`, `with-return`), NameBuiltin, nil},\n-\t\t\t{`\\S+`, Text, nil},\n-\t\t},\n-\t\t\"stackeffect\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\(\\s+`, NameFunction, Push(\"stackeffect\")},\n-\t\t\t{`\\)\\s`, NameFunction, Pop(1)},\n-\t\t\t{`--\\s`, NameFunction, nil},\n-\t\t\t{`\\S+`, NameVariable, nil},\n-\t\t},\n-\t\t\"slots\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`;\\s`, Keyword, Pop(1)},\n-\t\t\t{`(\\{\\s+)(\\S+)(\\s+[^}]+\\s+\\}\\s)`, ByGroups(Text, NameVariable, Text), nil},\n-\t\t\t{`\\S+`, NameVariable, nil},\n-\t\t},\n-\t\t\"vocabs\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`;\\s`, Keyword, Pop(1)},\n-\t\t\t{`\\S+`, NameNamespace, nil},\n-\t\t},\n-\t\t\"classes\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`;\\s`, Keyword, Pop(1)},\n-\t\t\t{`\\S+`, NameClass, nil},\n-\t\t},\n-\t\t\"words\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`;\\s`, Keyword, Pop(1)},\n-\t\t\t{`\\S+`, NameFunction, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "23134d4ebb2fb32439649dcf36c4dcc2fc8f6eed",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/f/fennel.go",
      "status": "removed",
      "additions": 0,
      "deletions": 66,
      "changes": 66,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ff%2Ffennel.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ff%2Ffennel.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ff%2Ffennel.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,66 +0,0 @@\n-package f\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Fennel lexer.\n-var Fennel = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Fennel\",\n-\t\tAliases:   []string{\"fennel\", \"fnl\"},\n-\t\tFilenames: []string{\"*.fennel\"},\n-\t\tMimeTypes: []string{\"text/x-fennel\", \"application/x-fennel\"},\n-\t},\n-\tfennelRules,\n-))\n-\n-// Here's some Fennel code used to generate the lists of keywords:\n-// (local fennel (require :fennel))\n-//\n-// (fn member? [t x] (each [_ y (ipairs t)] (when (= y x) (lua \"return true\"))))\n-//\n-// (local declarations [:fn :lambda :λ :local :var :global :macro :macros])\n-// (local keywords [])\n-// (local globals [])\n-//\n-// (each [name data (pairs (fennel.syntax))]\n-//   (if (member? declarations name) nil ; already populated\n-//       data.special? (table.insert keywords name)\n-//       data.macro? (table.insert keywords name)\n-//       data.global? (table.insert globals name)))\n-//\n-// (fn quoted [tbl]\n-//   (table.sort tbl)\n-//   (table.concat (icollect [_ k (ipairs tbl)]\n-//                   (string.format \"`%s`\" k)) \", \"))\n-//\n-// (print :Keyword (quoted keywords))\n-// (print :KeywordDeclaration (quoted declarations))\n-// (print :NameBuiltin (quoted globals))\n-\n-func fennelRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`;.*$`, CommentSingle, nil},\n-\t\t\t{`\\s+`, Whitespace, nil},\n-\t\t\t{`-?\\d+\\.\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`-?\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`0x-?[abcdef\\d]+`, LiteralNumberHex, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`'(?!#)[\\w!$%*+<=>?/.#-]+`, LiteralStringSymbol, nil},\n-\t\t\t{`\\\\(.|[a-z]+)`, LiteralStringChar, nil},\n-\t\t\t{`::?#?(?!#)[\\w!$%*+<=>?/.#-]+`, LiteralStringSymbol, nil},\n-\t\t\t{\"~@|[`\\\\'#^~&@]\", Operator, nil},\n-\t\t\t{Words(``, ` `, `#`, `%`, `*`, `+`, `-`, `->`, `->>`, `-?>`, `-?>>`, `.`, `..`, `/`, `//`, `:`, `<`, `<=`, `=`, `>`, `>=`, `?.`, `^`, `accumulate`, `and`, `band`, `bnot`, `bor`, `bxor`, `collect`, `comment`, `do`, `doc`, `doto`, `each`, `eval-compiler`, `for`, `hashfn`, `icollect`, `if`, `import-macros`, `include`, `length`, `let`, `lshift`, `lua`, `macrodebug`, `match`, `not`, `not=`, `or`, `partial`, `pick-args`, `pick-values`, `quote`, `require-macros`, `rshift`, `set`, `set-forcibly!`, `tset`, `values`, `when`, `while`, `with-open`, `~=`), Keyword, nil},\n-\t\t\t{Words(``, ` `, `fn`, `global`, `lambda`, `local`, `macro`, `macros`, `var`, `λ`), KeywordDeclaration, nil},\n-\t\t\t{Words(``, ` `, `_G`, `arg`, `assert`, `bit32`, `bit32.arshift`, `bit32.band`, `bit32.bnot`, `bit32.bor`, `bit32.btest`, `bit32.bxor`, `bit32.extract`, `bit32.lrotate`, `bit32.lshift`, `bit32.replace`, `bit32.rrotate`, `bit32.rshift`, `collectgarbage`, `coroutine`, `coroutine.create`, `coroutine.resume`, `coroutine.running`, `coroutine.status`, `coroutine.wrap`, `coroutine.yield`, `debug`, `debug.debug`, `debug.gethook`, `debug.getinfo`, `debug.getlocal`, `debug.getmetatable`, `debug.getregistry`, `debug.getupvalue`, `debug.getuservalue`, `debug.sethook`, `debug.setlocal`, `debug.setmetatable`, `debug.setupvalue`, `debug.setuservalue`, `debug.traceback`, `debug.upvalueid`, `debug.upvaluejoin`, `dofile`, `error`, `getmetatable`, `io`, `io.close`, `io.flush`, `io.input`, `io.lines`, `io.open`, `io.output`, `io.popen`, `io.read`, `io.tmpfile`, `io.type`, `io.write`, `ipairs`, `load`, `loadfile`, `loadstring`, `math`, `math.abs`, `math.acos`, `math.asin`, `math.atan`, `math.atan2`, `math.ceil`, `math.cos`, `math.cosh`, `math.deg`, `math.exp`, `math.floor`, `math.fmod`, `math.frexp`, `math.ldexp`, `math.log`, `math.log10`, `math.max`, `math.min`, `math.modf`, `math.pow`, `math.rad`, `math.random`, `math.randomseed`, `math.sin`, `math.sinh`, `math.sqrt`, `math.tan`, `math.tanh`, `module`, `next`, `os`, `os.clock`, `os.date`, `os.difftime`, `os.execute`, `os.exit`, `os.getenv`, `os.remove`, `os.rename`, `os.setlocale`, `os.time`, `os.tmpname`, `package`, `package.loadlib`, `package.searchpath`, `package.seeall`, `pairs`, `pcall`, `print`, `rawequal`, `rawget`, `rawlen`, `rawset`, `require`, `select`, `setmetatable`, `string`, `string.byte`, `string.char`, `string.dump`, `string.find`, `string.format`, `string.gmatch`, `string.gsub`, `string.len`, `string.lower`, `string.match`, `string.rep`, `string.reverse`, `string.sub`, `string.upper`, `table`, `table.concat`, `table.insert`, `table.maxn`, `table.pack`, `table.remove`, `table.sort`, `table.unpack`, `tonumber`, `tostring`, `type`, `unpack`, `xpcall`), NameBuiltin, nil},\n-\t\t\t{`(?<=\\()(?!#)[\\w!$%*+<=>?/.#-]+`, NameFunction, nil},\n-\t\t\t{`(?!#)[\\w!$%*+<=>?/.#-]+`, NameVariable, nil},\n-\t\t\t{`(\\[|\\])`, Punctuation, nil},\n-\t\t\t{`(\\{|\\})`, Punctuation, nil},\n-\t\t\t{`(\\(|\\))`, Punctuation, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "29d5028d5dc57680be5d45668ccc6f96b42a03c2",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/f/fish.go",
      "status": "removed",
      "additions": 0,
      "deletions": 98,
      "changes": 98,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ff%2Ffish.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ff%2Ffish.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ff%2Ffish.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,98 +0,0 @@\n-package f\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Fish lexer.\n-var Fish = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Fish\",\n-\t\tAliases:   []string{\"fish\", \"fishshell\"},\n-\t\tFilenames: []string{\"*.fish\", \"*.load\"},\n-\t\tMimeTypes: []string{\"application/x-fish\"},\n-\t},\n-\tfishRules,\n-))\n-\n-func fishRules() Rules {\n-\tkeywords := []string{\n-\t\t`begin`, `end`, `if`, `else`, `while`, `break`, `for`, `return`, `function`, `block`,\n-\t\t`case`, `continue`, `switch`, `not`, `and`, `or`, `set`, `echo`, `exit`, `pwd`, `true`,\n-\t\t`false`, `cd`, `cdh`, `count`, `test`,\n-\t}\n-\tkeywordsPattern := Words(`\\b`, `\\b`, keywords...)\n-\n-\tbuiltins := []string{\n-\t\t`alias`, `bg`, `bind`, `breakpoint`, `builtin`, `argparse`, `abbr`, `string`, `command`,\n-\t\t`commandline`, `complete`, `contains`, `dirh`, `dirs`, `disown`, `emit`, `eval`, `exec`,\n-\t\t`fg`, `fish`, `fish_add_path`, `fish_breakpoint_prompt`, `fish_command_not_found`,\n-\t\t`fish_config`, `fish_git_prompt`, `fish_greeting`, `fish_hg_prompt`, `fish_indent`,\n-\t\t`fish_is_root_user`, `fish_key_reader`, `fish_mode_prompt`, `fish_opt`, `fish_pager`,\n-\t\t`fish_prompt`, `fish_right_prompt`, `fish_status_to_signal`, `fish_svn_prompt`,\n-\t\t`fish_title`, `fish_update_completions`, `fish_vcs_prompt`, `fishd`, `funced`,\n-\t\t`funcsave`, `functions`, `help`, `history`, `isatty`, `jobs`, `math`, `mimedb`, `nextd`,\n-\t\t`open`, `prompt_pwd`, `realpath`, `popd`, `prevd`, `psub`, `pushd`, `random`, `read`,\n-\t\t`set_color`, `source`, `status`, `suspend`, `trap`, `type`, `ulimit`, `umask`, `vared`,\n-\t\t`fc`, `getopts`, `hash`, `kill`, `printf`, `time`, `wait`,\n-\t}\n-\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"basic\"),\n-\t\t\tInclude(\"interp\"),\n-\t\t\tInclude(\"data\"),\n-\t\t},\n-\t\t\"interp\": {\n-\t\t\t{`\\$\\(\\(`, Keyword, Push(\"math\")},\n-\t\t\t{`\\(`, Keyword, Push(\"paren\")},\n-\t\t\t{`\\$#?(\\w+|.)`, NameVariable, nil},\n-\t\t},\n-\t\t\"basic\": {\n-\t\t\t{Words(`(?<=(?:^|\\A|;|&&|\\|\\||\\||`+keywordsPattern+`)\\s*)`, `(?=;?\\b)`, keywords...), Keyword, nil},\n-\t\t\t{`(?<=for\\s+\\S+\\s+)in\\b`, Keyword, nil},\n-\t\t\t{Words(`\\b`, `\\s*\\b(?!\\.)`, builtins...), NameBuiltin, nil},\n-\t\t\t{`#!.*\\n`, CommentHashbang, nil},\n-\t\t\t{`#.*\\n`, Comment, nil},\n-\t\t\t{`\\\\[\\w\\W]`, LiteralStringEscape, nil},\n-\t\t\t{`(\\b\\w+)(\\s*)(=)`, ByGroups(NameVariable, Text, Operator), nil},\n-\t\t\t{`[\\[\\]()={}]`, Operator, nil},\n-\t\t\t{`(?<=\\[[^\\]]+)\\.\\.|-(?=[^\\[]+\\])`, Operator, nil},\n-\t\t\t{`<<-?\\s*(\\'?)\\\\?(\\w+)[\\w\\W]+?\\2`, LiteralString, nil},\n-\t\t\t{`(?<=set\\s+(?:--?[^\\d\\W][\\w-]*\\s+)?)\\w+`, NameVariable, nil},\n-\t\t\t{`(?<=for\\s+)\\w[\\w-]*(?=\\s+in)`, NameVariable, nil},\n-\t\t\t{`(?<=function\\s+)\\w(?:[^\\n])*?(?= *[-\\n])`, NameFunction, nil},\n-\t\t\t{`(?<=(?:^|\\b(?:and|or|sudo)\\b|;|\\|\\||&&|\\||\\(|(?:\\b\\w+\\s*=\\S+\\s)) *)\\w[\\w-]*`, NameFunction, nil},\n-\t\t},\n-\t\t\"data\": {\n-\t\t\t{`(?s)\\$?\"(\\\\\\\\|\\\\[0-7]+|\\\\.|[^\"\\\\$])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n-\t\t\t{`(?s)\\$'(\\\\\\\\|\\\\[0-7]+|\\\\.|[^'\\\\])*'`, LiteralStringSingle, nil},\n-\t\t\t{`(?s)'.*?'`, LiteralStringSingle, nil},\n-\t\t\t{`;`, Punctuation, nil},\n-\t\t\t{`&&|\\|\\||&|\\||\\^|<|>`, Operator, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\b\\d+\\b`, LiteralNumber, nil},\n-\t\t\t{`(?<=\\s+)--?[^\\d][\\w-]*`, NameAttribute, nil},\n-\t\t\t{\".+?\", Text, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t\t{`(?s)(\\\\\\\\|\\\\[0-7]+|\\\\.|[^\"\\\\$])+`, LiteralStringDouble, nil},\n-\t\t\tInclude(\"interp\"),\n-\t\t},\n-\t\t\"paren\": {\n-\t\t\t{`\\)`, Keyword, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"math\": {\n-\t\t\t{`\\)\\)`, Keyword, Pop(1)},\n-\t\t\t{`[-+*/%^|&]|\\*\\*|\\|\\|`, Operator, nil},\n-\t\t\t{`\\d+#\\d+`, LiteralNumber, nil},\n-\t\t\t{`\\d+#(?! )`, LiteralNumber, nil},\n-\t\t\t{`\\d+`, LiteralNumber, nil},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "8d66708dccf4565dc93025c3f1237daca855b3e7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/f/forth.go",
      "status": "removed",
      "additions": 0,
      "deletions": 44,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ff%2Fforth.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ff%2Fforth.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ff%2Fforth.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,44 +0,0 @@\n-package f\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Forth lexer.\n-var Forth = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"Forth\",\n-\t\tAliases:         []string{\"forth\"},\n-\t\tFilenames:       []string{\"*.frt\", \"*.fth\", \"*.fs\"},\n-\t\tMimeTypes:       []string{\"application/x-forth\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tforthRules,\n-))\n-\n-func forthRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\\\.*?\\n`, CommentSingle, nil},\n-\t\t\t{`\\([\\s].*?\\)`, CommentSingle, nil},\n-\t\t\t{`(:|variable|constant|value|buffer:)(\\s+)`, ByGroups(KeywordNamespace, Text), Push(\"worddef\")},\n-\t\t\t{`([.sc]\")(\\s+?)`, ByGroups(LiteralString, Text), Push(\"stringdef\")},\n-\t\t\t{`(blk|block|buffer|evaluate|flush|load|save-buffers|update|empty-buffers|list|refill|scr|thru|\\#s|\\*\\/mod|\\+loop|\\/mod|0<|0=|1\\+|1-|2!|2\\*|2\\/|2@|2drop|2dup|2over|2swap|>body|>in|>number|>r|\\?dup|abort|abort\\\"|abs|accept|align|aligned|allot|and|base|begin|bl|c!|c,|c@|cell\\+|cells|char|char\\+|chars|constant|count|cr|create|decimal|depth|do|does>|drop|dup|else|emit|environment\\?|evaluate|execute|exit|fill|find|fm\\/mod|here|hold|i|if|immediate|invert|j|key|leave|literal|loop|lshift|m\\*|max|min|mod|move|negate|or|over|postpone|quit|r>|r@|recurse|repeat|rot|rshift|s\\\"|s>d|sign|sm\\/rem|source|space|spaces|state|swap|then|type|u\\.|u\\<|um\\*|um\\/mod|unloop|until|variable|while|word|xor|\\[char\\]|\\[\\'\\]|@|!|\\#|<\\#|\\#>|:|;|\\+|-|\\*|\\/|,|<|>|\\|1\\+|1-|\\.|\\.r|0<>|0>|2>r|2r>|2r@|:noname|\\?do|again|c\\\"|case|compile,|endcase|endof|erase|false|hex|marker|nip|of|pad|parse|pick|refill|restore-input|roll|save-input|source-id|to|true|tuck|u\\.r|u>|unused|value|within|\\[compile\\]|\\#tib|convert|expect|query|span|tib|2constant|2literal|2variable|d\\+|d-|d\\.|d\\.r|d0<|d0=|d2\\*|d2\\/|d<|d=|d>s|dabs|dmax|dmin|dnegate|m\\*\\/|m\\+|2rot|du<|catch|throw|abort|abort\\\"|at-xy|key\\?|page|ekey|ekey>char|ekey\\?|emit\\?|ms|time&date|BIN|CLOSE-FILE|CREATE-FILE|DELETE-FILE|FILE-POSITION|FILE-SIZE|INCLUDE-FILE|INCLUDED|OPEN-FILE|R\\/O|R\\/W|READ-FILE|READ-LINE|REPOSITION-FILE|RESIZE-FILE|S\\\"|SOURCE-ID|W/O|WRITE-FILE|WRITE-LINE|FILE-STATUS|FLUSH-FILE|REFILL|RENAME-FILE|>float|d>f|f!|f\\*|f\\+|f-|f\\/|f0<|f0=|f<|f>d|f@|falign|faligned|fconstant|fdepth|fdrop|fdup|fliteral|float\\+|floats|floor|fmax|fmin|fnegate|fover|frot|fround|fswap|fvariable|represent|df!|df@|dfalign|dfaligned|dfloat\\+|dfloats|f\\*\\*|f\\.|fabs|facos|facosh|falog|fasin|fasinh|fatan|fatan2|fatanh|fcos|fcosh|fe\\.|fexp|fexpm1|fln|flnp1|flog|fs\\.|fsin|fsincos|fsinh|fsqrt|ftan|ftanh|f~|precision|set-precision|sf!|sf@|sfalign|sfaligned|sfloat\\+|sfloats|\\(local\\)|to|locals\\||allocate|free|resize|definitions|find|forth-wordlist|get-current|get-order|search-wordlist|set-current|set-order|wordlist|also|forth|only|order|previous|-trailing|\\/string|blank|cmove|cmove>|compare|search|sliteral|.s|dump|see|words|;code|ahead|assembler|bye|code|cs-pick|cs-roll|editor|state|\\[else\\]|\\[if\\]|\\[then\\]|forget|defer|defer@|defer!|action-of|begin-structure|field:|buffer:|parse-name|buffer:|traverse-wordlist|n>r|nr>|2value|fvalue|name>interpret|name>compile|name>string|cfield:|end-structure)\\s`, Keyword, nil},\n-\t\t\t{`(\\$[0-9A-F]+)`, LiteralNumberHex, nil},\n-\t\t\t{`(\\#|%|&|\\-|\\+)?[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`(\\#|%|&|\\-|\\+)?[0-9.]+`, KeywordType, nil},\n-\t\t\t{`(@i|!i|@e|!e|pause|noop|turnkey|sleep|itype|icompare|sp@|sp!|rp@|rp!|up@|up!|>a|a>|a@|a!|a@+|a@-|>b|b>|b@|b!|b@+|b@-|find-name|1ms|sp0|rp0|\\(evaluate\\)|int-trap|int!)\\s`, NameConstant, nil},\n-\t\t\t{`(do-recognizer|r:fail|recognizer:|get-recognizers|set-recognizers|r:float|r>comp|r>int|r>post|r:name|r:word|r:dnum|r:num|recognizer|forth-recognizer|rec:num|rec:float|rec:word)\\s`, NameDecorator, nil},\n-\t\t\t{`(Evalue|Rvalue|Uvalue|Edefer|Rdefer|Udefer)(\\s+)`, ByGroups(KeywordNamespace, Text), Push(\"worddef\")},\n-\t\t\t{`[^\\s]+(?=[\\s])`, NameFunction, nil},\n-\t\t},\n-\t\t\"worddef\": {\n-\t\t\t{`\\S+`, NameClass, Pop(1)},\n-\t\t},\n-\t\t\"stringdef\": {\n-\t\t\t{`[^\"]+`, LiteralString, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "af4a969ceec821a167e4ae69c6b614dd00106ce4",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/f/fortran.go",
      "status": "removed",
      "additions": 0,
      "deletions": 51,
      "changes": 51,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ff%2Ffortran.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ff%2Ffortran.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ff%2Ffortran.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,51 +0,0 @@\n-package f\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Fortran lexer.\n-var Fortran = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"Fortran\",\n-\t\tAliases:         []string{\"fortran\"},\n-\t\tFilenames:       []string{\"*.f03\", \"*.f90\", \"*.F03\", \"*.F90\"},\n-\t\tMimeTypes:       []string{\"text/x-fortran\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tfortranRules,\n-))\n-\n-func fortranRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`^#.*\\n`, CommentPreproc, nil},\n-\t\t\t{`!.*\\n`, Comment, nil},\n-\t\t\tInclude(\"strings\"),\n-\t\t\tInclude(\"core\"),\n-\t\t\t{`[a-z][\\w$]*`, Name, nil},\n-\t\t\tInclude(\"nums\"),\n-\t\t\t{`[\\s]+`, Text, nil},\n-\t\t},\n-\t\t\"core\": {\n-\t\t\t{Words(`\\b`, `\\s*\\b`, `ABSTRACT`, `ACCEPT`, `ALL`, `ALLSTOP`, `ALLOCATABLE`, `ALLOCATE`, `ARRAY`, `ASSIGN`, `ASSOCIATE`, `ASYNCHRONOUS`, `BACKSPACE`, `BIND`, `BLOCK`, `BLOCKDATA`, `BYTE`, `CALL`, `CASE`, `CLASS`, `CLOSE`, `CODIMENSION`, `COMMON`, `CONCURRRENT`, `CONTIGUOUS`, `CONTAINS`, `CONTINUE`, `CRITICAL`, `CYCLE`, `DATA`, `DEALLOCATE`, `DECODE`, `DEFERRED`, `DIMENSION`, `DO`, `ELEMENTAL`, `ELSE`, `ENCODE`, `END`, `ENTRY`, `ENUM`, `ENUMERATOR`, `EQUIVALENCE`, `EXIT`, `EXTENDS`, `EXTERNAL`, `EXTRINSIC`, `FILE`, `FINAL`, `FORALL`, `FORMAT`, `FUNCTION`, `GENERIC`, `GOTO`, `IF`, `IMAGES`, `IMPLICIT`, `IMPORT`, `IMPURE`, `INCLUDE`, `INQUIRE`, `INTENT`, `INTERFACE`, `INTRINSIC`, `IS`, `LOCK`, `MEMORY`, `MODULE`, `NAMELIST`, `NULLIFY`, `NONE`, `NON_INTRINSIC`, `NON_OVERRIDABLE`, `NOPASS`, `OPEN`, `OPTIONAL`, `OPTIONS`, `PARAMETER`, `PASS`, `PAUSE`, `POINTER`, `PRINT`, `PRIVATE`, `PROGRAM`, `PROCEDURE`, `PROTECTED`, `PUBLIC`, `PURE`, `READ`, `RECURSIVE`, `RESULT`, `RETURN`, `REWIND`, `SAVE`, `SELECT`, `SEQUENCE`, `STOP`, `SUBMODULE`, `SUBROUTINE`, `SYNC`, `SYNCALL`, `SYNCIMAGES`, `SYNCMEMORY`, `TARGET`, `THEN`, `TYPE`, `UNLOCK`, `USE`, `VALUE`, `VOLATILE`, `WHERE`, `WRITE`, `WHILE`), Keyword, nil},\n-\t\t\t{Words(`\\b`, `\\s*\\b`, `CHARACTER`, `COMPLEX`, `DOUBLE PRECISION`, `DOUBLE COMPLEX`, `INTEGER`, `LOGICAL`, `REAL`, `C_INT`, `C_SHORT`, `C_LONG`, `C_LONG_LONG`, `C_SIGNED_CHAR`, `C_SIZE_T`, `C_INT8_T`, `C_INT16_T`, `C_INT32_T`, `C_INT64_T`, `C_INT_LEAST8_T`, `C_INT_LEAST16_T`, `C_INT_LEAST32_T`, `C_INT_LEAST64_T`, `C_INT_FAST8_T`, `C_INT_FAST16_T`, `C_INT_FAST32_T`, `C_INT_FAST64_T`, `C_INTMAX_T`, `C_INTPTR_T`, `C_FLOAT`, `C_DOUBLE`, `C_LONG_DOUBLE`, `C_FLOAT_COMPLEX`, `C_DOUBLE_COMPLEX`, `C_LONG_DOUBLE_COMPLEX`, `C_BOOL`, `C_CHAR`, `C_PTR`, `C_FUNPTR`), KeywordType, nil},\n-\t\t\t{`(\\*\\*|\\*|\\+|-|\\/|<|>|<=|>=|==|\\/=|=)`, Operator, nil},\n-\t\t\t{`(::)`, KeywordDeclaration, nil},\n-\t\t\t{`[()\\[\\],:&%;.]`, Punctuation, nil},\n-\t\t\t{Words(`\\b`, `\\s*\\b`, `Abort`, `Abs`, `Access`, `AChar`, `ACos`, `ACosH`, `AdjustL`, `AdjustR`, `AImag`, `AInt`, `Alarm`, `All`, `Allocated`, `ALog`, `AMax`, `AMin`, `AMod`, `And`, `ANInt`, `Any`, `ASin`, `ASinH`, `Associated`, `ATan`, `ATanH`, `Atomic_Define`, `Atomic_Ref`, `BesJ`, `BesJN`, `Bessel_J0`, `Bessel_J1`, `Bessel_JN`, `Bessel_Y0`, `Bessel_Y1`, `Bessel_YN`, `BesY`, `BesYN`, `BGE`, `BGT`, `BLE`, `BLT`, `Bit_Size`, `BTest`, `CAbs`, `CCos`, `Ceiling`, `CExp`, `Char`, `ChDir`, `ChMod`, `CLog`, `Cmplx`, `Command_Argument_Count`, `Complex`, `Conjg`, `Cos`, `CosH`, `Count`, `CPU_Time`, `CShift`, `CSin`, `CSqRt`, `CTime`, `C_Loc`, `C_Associated`, `C_Null_Ptr`, `C_Null_Funptr`, `C_F_Pointer`, `C_F_ProcPointer`, `C_Null_Char`, `C_Alert`, `C_Backspace`, `C_Form_Feed`, `C_FunLoc`, `C_Sizeof`, `C_New_Line`, `C_Carriage_Return`, `C_Horizontal_Tab`, `C_Vertical_Tab`, `DAbs`, `DACos`, `DASin`, `DATan`, `Date_and_Time`, `DbesJ`, `DbesJN`, `DbesY`, `DbesYN`, `Dble`, `DCos`, `DCosH`, `DDiM`, `DErF`, `DErFC`, `DExp`, `Digits`, `DiM`, `DInt`, `DLog`, `DMax`, `DMin`, `DMod`, `DNInt`, `Dot_Product`, `DProd`, `DSign`, `DSinH`, `DShiftL`, `DShiftR`, `DSin`, `DSqRt`, `DTanH`, `DTan`, `DTime`, `EOShift`, `Epsilon`, `ErF`, `ErFC`, `ErFC_Scaled`, `ETime`, `Execute_Command_Line`, `Exit`, `Exp`, `Exponent`, `Extends_Type_Of`, `FDate`, `FGet`, `FGetC`, `FindLoc`, `Float`, `Floor`, `Flush`, `FNum`, `FPutC`, `FPut`, `Fraction`, `FSeek`, `FStat`, `FTell`, `Gamma`, `GError`, `GetArg`, `Get_Command`, `Get_Command_Argument`, `Get_Environment_Variable`, `GetCWD`, `GetEnv`, `GetGId`, `GetLog`, `GetPId`, `GetUId`, `GMTime`, `HostNm`, `Huge`, `Hypot`, `IAbs`, `IAChar`, `IAll`, `IAnd`, `IAny`, `IArgC`, `IBClr`, `IBits`, `IBSet`, `IChar`, `IDate`, `IDiM`, `IDInt`, `IDNInt`, `IEOr`, `IErrNo`, `IFix`, `Imag`, `ImagPart`, `Image_Index`, `Index`, `Int`, `IOr`, `IParity`, `IRand`, `IsaTty`, `IShft`, `IShftC`, `ISign`, `Iso_C_Binding`, `Is_Contiguous`, `Is_Iostat_End`, `Is_Iostat_Eor`, `ITime`, `Kill`, `Kind`, `LBound`, `LCoBound`, `Len`, `Len_Trim`, `LGe`, `LGt`, `Link`, `LLe`, `LLt`, `LnBlnk`, `Loc`, `Log`, `Log_Gamma`, `Logical`, `Long`, `LShift`, `LStat`, `LTime`, `MaskL`, `MaskR`, `MatMul`, `Max`, `MaxExponent`, `MaxLoc`, `MaxVal`, `MClock`, `Merge`, `Merge_Bits`, `Move_Alloc`, `Min`, `MinExponent`, `MinLoc`, `MinVal`, `Mod`, `Modulo`, `MvBits`, `Nearest`, `New_Line`, `NInt`, `Norm2`, `Not`, `Null`, `Num_Images`, `Or`, `Pack`, `Parity`, `PError`, `Precision`, `Present`, `Product`, `Radix`, `Rand`, `Random_Number`, `Random_Seed`, `Range`, `Real`, `RealPart`, `Rename`, `Repeat`, `Reshape`, `RRSpacing`, `RShift`, `Same_Type_As`, `Scale`, `Scan`, `Second`, `Selected_Char_Kind`, `Selected_Int_Kind`, `Selected_Real_Kind`, `Set_Exponent`, `Shape`, `ShiftA`, `ShiftL`, `ShiftR`, `Short`, `Sign`, `Signal`, `SinH`, `Sin`, `Sleep`, `Sngl`, `Spacing`, `Spread`, `SqRt`, `SRand`, `Stat`, `Storage_Size`, `Sum`, `SymLnk`, `System`, `System_Clock`, `Tan`, `TanH`, `Time`, `This_Image`, `Tiny`, `TrailZ`, `Transfer`, `Transpose`, `Trim`, `TtyNam`, `UBound`, `UCoBound`, `UMask`, `Unlink`, `Unpack`, `Verify`, `XOr`, `ZAbs`, `ZCos`, `ZExp`, `ZLog`, `ZSin`, `ZSqRt`), NameBuiltin, nil},\n-\t\t\t{`\\.(true|false)\\.`, NameBuiltin, nil},\n-\t\t\t{`\\.(eq|ne|lt|le|gt|ge|not|and|or|eqv|neqv)\\.`, OperatorWord, nil},\n-\t\t},\n-\t\t\"strings\": {\n-\t\t\t{`(?s)\"(\\\\\\\\|\\\\[0-7]+|\\\\.|[^\"\\\\])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`(?s)'(\\\\\\\\|\\\\[0-7]+|\\\\.|[^'\\\\])*'`, LiteralStringSingle, nil},\n-\t\t},\n-\t\t\"nums\": {\n-\t\t\t{`\\d+(?![.e])(_[a-z]\\w+)?`, LiteralNumberInteger, nil},\n-\t\t\t{`[+-]?\\d*\\.\\d+([ed][-+]?\\d+)?(_[a-z]\\w+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`[+-]?\\d+\\.\\d*([ed][-+]?\\d+)?(_[a-z]\\w+)?`, LiteralNumberFloat, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "44fced4d5b372a450ba8db656617a2a38808f39c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/f/fsharp.go",
      "status": "removed",
      "additions": 0,
      "deletions": 98,
      "changes": 98,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ff%2Ffsharp.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ff%2Ffsharp.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ff%2Ffsharp.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,98 +0,0 @@\n-package f\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Fsharp lexer.\n-var Fsharp = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"FSharp\",\n-\t\tAliases:   []string{\"fsharp\"},\n-\t\tFilenames: []string{\"*.fs\", \"*.fsi\"},\n-\t\tMimeTypes: []string{\"text/x-fsharp\"},\n-\t},\n-\tfsharpRules,\n-))\n-\n-func fsharpRules() Rules {\n-\treturn Rules{\n-\t\t\"escape-sequence\": {\n-\t\t\t{`\\\\[\\\\\"\\'ntbrafv]`, LiteralStringEscape, nil},\n-\t\t\t{`\\\\[0-9]{3}`, LiteralStringEscape, nil},\n-\t\t\t{`\\\\u[0-9a-fA-F]{4}`, LiteralStringEscape, nil},\n-\t\t\t{`\\\\U[0-9a-fA-F]{8}`, LiteralStringEscape, nil},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\(\\)|\\[\\]`, NameBuiltinPseudo, nil},\n-\t\t\t{`\\b(?<!\\.)([A-Z][\\w\\']*)(?=\\s*\\.)`, NameNamespace, Push(\"dotted\")},\n-\t\t\t{`\\b([A-Z][\\w\\']*)`, Name, nil},\n-\t\t\t{`///.*?\\n`, LiteralStringDoc, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`\\(\\*(?!\\))`, Comment, Push(\"comment\")},\n-\t\t\t{`@\"`, LiteralString, Push(\"lstring\")},\n-\t\t\t{`\"\"\"`, LiteralString, Push(\"tqs\")},\n-\t\t\t{`\"`, LiteralString, Push(\"string\")},\n-\t\t\t{`\\b(open|module)(\\s+)([\\w.]+)`, ByGroups(Keyword, Text, NameNamespace), nil},\n-\t\t\t{`\\b(let!?)(\\s+)(\\w+)`, ByGroups(Keyword, Text, NameVariable), nil},\n-\t\t\t{`\\b(type)(\\s+)(\\w+)`, ByGroups(Keyword, Text, NameClass), nil},\n-\t\t\t{`\\b(member|override)(\\s+)(\\w+)(\\.)(\\w+)`, ByGroups(Keyword, Text, Name, Punctuation, NameFunction), nil},\n-\t\t\t{`\\b(abstract|as|assert|base|begin|class|default|delegate|do!|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|function|fun|global|if|inherit|inline|interface|internal|in|lazy|let!|let|match|member|module|mutable|namespace|new|null|of|open|override|private|public|rec|return!|return|select|static|struct|then|to|true|try|type|upcast|use!|use|val|void|when|while|with|yield!|yield|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b`, Keyword, nil},\n-\t\t\t{\"``([^`\\\\n\\\\r\\\\t]|`[^`\\\\n\\\\r\\\\t])+``\", Name, nil},\n-\t\t\t{\"(!=|#|&&|&|\\\\(|\\\\)|\\\\*|\\\\+|,|-\\\\.|->|-|\\\\.\\\\.|\\\\.|::|:=|:>|:|;;|;|<-|<\\\\]|<|>\\\\]|>|\\\\?\\\\?|\\\\?|\\\\[<|\\\\[\\\\||\\\\[|\\\\]|_|`|\\\\{|\\\\|\\\\]|\\\\||\\\\}|~|<@@|<@|=|@>|@@>)\", Operator, nil},\n-\t\t\t{`([=<>@^|&+\\*/$%-]|[!?~])?[!$%&*+\\./:<=>?@^|~-]`, Operator, nil},\n-\t\t\t{`\\b(and|or|not)\\b`, OperatorWord, nil},\n-\t\t\t{`\\b(sbyte|byte|char|nativeint|unativeint|float32|single|float|double|int8|uint8|int16|uint16|int32|uint32|int64|uint64|decimal|unit|bool|string|list|exn|obj|enum)\\b`, KeywordType, nil},\n-\t\t\t{`#[ \\t]*(if|endif|else|line|nowarn|light|\\d+)\\b.*?\\n`, CommentPreproc, nil},\n-\t\t\t{`[^\\W\\d][\\w']*`, Name, nil},\n-\t\t\t{`\\d[\\d_]*[uU]?[yslLnQRZINGmM]?`, LiteralNumberInteger, nil},\n-\t\t\t{`0[xX][\\da-fA-F][\\da-fA-F_]*[uU]?[yslLn]?[fF]?`, LiteralNumberHex, nil},\n-\t\t\t{`0[oO][0-7][0-7_]*[uU]?[yslLn]?`, LiteralNumberOct, nil},\n-\t\t\t{`0[bB][01][01_]*[uU]?[yslLn]?`, LiteralNumberBin, nil},\n-\t\t\t{`-?\\d[\\d_]*(.[\\d_]*)?([eE][+\\-]?\\d[\\d_]*)[fFmM]?`, LiteralNumberFloat, nil},\n-\t\t\t{`'(?:(\\\\[\\\\\\\"'ntbr ])|(\\\\[0-9]{3})|(\\\\x[0-9a-fA-F]{2}))'B?`, LiteralStringChar, nil},\n-\t\t\t{`'.'`, LiteralStringChar, nil},\n-\t\t\t{`'`, Keyword, nil},\n-\t\t\t{`@?\"`, LiteralStringDouble, Push(\"string\")},\n-\t\t\t{`[~?][a-z][\\w\\']*:`, NameVariable, nil},\n-\t\t},\n-\t\t\"dotted\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\.`, Punctuation, nil},\n-\t\t\t{`[A-Z][\\w\\']*(?=\\s*\\.)`, NameNamespace, nil},\n-\t\t\t{`[A-Z][\\w\\']*`, Name, Pop(1)},\n-\t\t\t{`[a-z_][\\w\\']*`, Name, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`[^(*)@\"]+`, Comment, nil},\n-\t\t\t{`\\(\\*`, Comment, Push()},\n-\t\t\t{`\\*\\)`, Comment, Pop(1)},\n-\t\t\t{`@\"`, LiteralString, Push(\"lstring\")},\n-\t\t\t{`\"\"\"`, LiteralString, Push(\"tqs\")},\n-\t\t\t{`\"`, LiteralString, Push(\"string\")},\n-\t\t\t{`[(*)@]`, Comment, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`[^\\\\\"]+`, LiteralString, nil},\n-\t\t\tInclude(\"escape-sequence\"),\n-\t\t\t{`\\\\\\n`, LiteralString, nil},\n-\t\t\t{`\\n`, LiteralString, nil},\n-\t\t\t{`\"B?`, LiteralString, Pop(1)},\n-\t\t},\n-\t\t\"lstring\": {\n-\t\t\t{`[^\"]+`, LiteralString, nil},\n-\t\t\t{`\\n`, LiteralString, nil},\n-\t\t\t{`\"\"`, LiteralString, nil},\n-\t\t\t{`\"B?`, LiteralString, Pop(1)},\n-\t\t},\n-\t\t\"tqs\": {\n-\t\t\t{`[^\"]+`, LiteralString, nil},\n-\t\t\t{`\\n`, LiteralString, nil},\n-\t\t\t{`\"\"\"B?`, LiteralString, Pop(1)},\n-\t\t\t{`\"`, LiteralString, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "1f733f6ac17a7ef8f5029ae1bf99dd911995cc81",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/g/gas.go",
      "status": "removed",
      "additions": 0,
      "deletions": 59,
      "changes": 59,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgas.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgas.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgas.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,59 +0,0 @@\n-package g\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Gas lexer.\n-var Gas = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"GAS\",\n-\t\tAliases:   []string{\"gas\", \"asm\"},\n-\t\tFilenames: []string{\"*.s\", \"*.S\"},\n-\t\tMimeTypes: []string{\"text/x-gas\"},\n-\t},\n-\tgasRules,\n-))\n-\n-func gasRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`(?:[a-zA-Z$_][\\w$.@-]*|\\.[\\w$.@-]+):`, NameLabel, nil},\n-\t\t\t{`\\.(?:[a-zA-Z$_][\\w$.@-]*|\\.[\\w$.@-]+)`, NameAttribute, Push(\"directive-args\")},\n-\t\t\t{`lock|rep(n?z)?|data\\d+`, NameAttribute, nil},\n-\t\t\t{`(?:[a-zA-Z$_][\\w$.@-]*|\\.[\\w$.@-]+)`, NameFunction, Push(\"instruction-args\")},\n-\t\t\t{`[\\r\\n]+`, Text, nil},\n-\t\t},\n-\t\t\"directive-args\": {\n-\t\t\t{`(?:[a-zA-Z$_][\\w$.@-]*|\\.[\\w$.@-]+)`, NameConstant, nil},\n-\t\t\t{`\"(\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`@(?:[a-zA-Z$_][\\w$.@-]*|\\.[\\w$.@-]+)`, NameAttribute, nil},\n-\t\t\t{`(?:0[xX][a-zA-Z0-9]+|\\d+)`, LiteralNumberInteger, nil},\n-\t\t\t{`[\\r\\n]+`, Text, Pop(1)},\n-\t\t\tInclude(\"punctuation\"),\n-\t\t\tInclude(\"whitespace\"),\n-\t\t},\n-\t\t\"instruction-args\": {\n-\t\t\t{`([a-z0-9]+)( )(<)((?:[a-zA-Z$_][\\w$.@-]*|\\.[\\w$.@-]+))(>)`, ByGroups(LiteralNumberHex, Text, Punctuation, NameConstant, Punctuation), nil},\n-\t\t\t{`([a-z0-9]+)( )(<)((?:[a-zA-Z$_][\\w$.@-]*|\\.[\\w$.@-]+))([-+])((?:0[xX][a-zA-Z0-9]+|\\d+))(>)`, ByGroups(LiteralNumberHex, Text, Punctuation, NameConstant, Punctuation, LiteralNumberInteger, Punctuation), nil},\n-\t\t\t{`(?:[a-zA-Z$_][\\w$.@-]*|\\.[\\w$.@-]+)`, NameConstant, nil},\n-\t\t\t{`(?:0[xX][a-zA-Z0-9]+|\\d+)`, LiteralNumberInteger, nil},\n-\t\t\t{`%(?:[a-zA-Z$_][\\w$.@-]*|\\.[\\w$.@-]+)`, NameVariable, nil},\n-\t\t\t{`$(?:0[xX][a-zA-Z0-9]+|\\d+)`, LiteralNumberInteger, nil},\n-\t\t\t{`$'(.|\\\\')'`, LiteralStringChar, nil},\n-\t\t\t{`[\\r\\n]+`, Text, Pop(1)},\n-\t\t\tInclude(\"punctuation\"),\n-\t\t\tInclude(\"whitespace\"),\n-\t\t},\n-\t\t\"whitespace\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`[;#].*?\\n`, Comment, nil},\n-\t\t},\n-\t\t\"punctuation\": {\n-\t\t\t{`[-*,.()\\[\\]!:]+`, Punctuation, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "2b6af973fbee4fce522b11f4b6f033f5fcd47d0a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/g/gdscript.go",
      "status": "removed",
      "additions": 0,
      "deletions": 128,
      "changes": 128,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgdscript.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgdscript.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgdscript.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,128 +0,0 @@\n-package g\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// GDScript lexer.\n-var GDScript = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"GDScript\",\n-\t\tAliases:   []string{\"gdscript\", \"gd\"},\n-\t\tFilenames: []string{\"*.gd\"},\n-\t\tMimeTypes: []string{\"text/x-gdscript\", \"application/x-gdscript\"},\n-\t},\n-\tgdscriptRules,\n-))\n-\n-func gdscriptRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`^(\\s*)([rRuUbB]{,2})(\"\"\"(?:.|\\n)*?\"\"\")`, ByGroups(Text, LiteralStringAffix, LiteralStringDoc), nil},\n-\t\t\t{`^(\\s*)([rRuUbB]{,2})('''(?:.|\\n)*?''')`, ByGroups(Text, LiteralStringAffix, LiteralStringDoc), nil},\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`#.*$`, CommentSingle, nil},\n-\t\t\t{`[]{}:(),;[]`, Punctuation, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`\\\\`, Text, nil},\n-\t\t\t{`(in|and|or|not)\\b`, OperatorWord, nil},\n-\t\t\t{`!=|==|<<|>>|&&|\\+=|-=|\\*=|/=|%=|&=|\\|=|\\|\\||[-~+/*%=<>&^.!|$]`, Operator, nil},\n-\t\t\tInclude(\"keywords\"),\n-\t\t\t{`(def)((?:\\s|\\\\\\s)+)`, ByGroups(Keyword, Text), Push(\"funcname\")},\n-\t\t\t{`(class)((?:\\s|\\\\\\s)+)`, ByGroups(Keyword, Text), Push(\"classname\")},\n-\t\t\tInclude(\"builtins\"),\n-\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(\"\"\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Push(\"tdqs\")},\n-\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(''')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Push(\"tsqs\")},\n-\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Push(\"dqs\")},\n-\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Push(\"sqs\")},\n-\t\t\t{`([uUbB]?)(\"\"\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"stringescape\", \"tdqs\")},\n-\t\t\t{`([uUbB]?)(''')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"stringescape\", \"tsqs\")},\n-\t\t\t{`([uUbB]?)(\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"stringescape\", \"dqs\")},\n-\t\t\t{`([uUbB]?)(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"stringescape\", \"sqs\")},\n-\t\t\tInclude(\"name\"),\n-\t\t\tInclude(\"numbers\"),\n-\t\t},\n-\t\t\"keywords\": {\n-\t\t\t{Words(``, `\\b`,\n-\t\t\t\t`if`, `elif`, `else`, `for`, `do`,\n-\t\t\t\t`while`, `switch`, `case`, `break`, `continue`,\n-\t\t\t\t`pass`, `return`, `class`, `extends`, `tool`,\n-\t\t\t\t`signal`, `func`, `static`, `const`, `enum`,\n-\t\t\t\t`var`, `onready`, `export`, `setget`, `breakpoint`), Keyword, nil},\n-\t\t},\n-\t\t\"builtins\": {\n-\t\t\t{Words(`(?<!\\.)`, `\\b`,\n-\t\t\t\t`Color8`, `ColorN`, `abs`, `acos`, `asin`,\n-\t\t\t\t`assert`, `atan`, `atan2`, `bytes2var`, `ceil`,\n-\t\t\t\t`clamp`, `convert`, `cos`, `cosh`, `db2linear`,\n-\t\t\t\t`decimals`, `dectime`, `deg2rad`, `dict2inst`, `ease`,\n-\t\t\t\t`exp`, `floor`, `fmod`, `fposmod`, `funcref`,\n-\t\t\t\t`hash`, `inst2dict`, `instance_from_id`, `is_inf`, `is_nan`,\n-\t\t\t\t`lerp`, `linear2db`, `load`, `log`, `max`,\n-\t\t\t\t`min`, `nearest_po2`, `pow`, `preload`, `print`,\n-\t\t\t\t`print_stack`, `printerr`, `printraw`, `prints`, `printt`,\n-\t\t\t\t`rad2deg`, `rand_range`, `rand_seed`, `randf`, `randi`,\n-\t\t\t\t`randomize`, `range`, `round`, `seed`, `sign`,\n-\t\t\t\t`sin`, `sinh`, `sqrt`, `stepify`, `str`,\n-\t\t\t\t`str2var`, `tan`, `tanh`, `type_exist`, `typeof`,\n-\t\t\t\t`var2bytes`, `var2str`, `weakref`, `yield`,\n-\t\t\t), NameBuiltin, nil},\n-\t\t\t{`(?<!\\.)(self|false|true|PI|NAN|INF)\\b`, NameBuiltinPseudo, nil},\n-\t\t\t{Words(`(?<!\\.)`, `\\b`,\n-\t\t\t\t`AABB`, `AcceptDialog`, `AnimatedSprite`, `AnimatedSprite3D`, `Animation`, `AnimationPlayer`, `AnimationTreePlayer`, `Area`, `Area2D`, `Array`, `AtlasTexture`, `AudioServer`, `AudioServerSW`, `AudioStream`, `AudioStreamMPC`, `AudioStreamOGGVorbis`, `AudioStreamOpus`, `AudioStreamPlayback`, `AudioStreamSpeex`, `BackBufferCopy`, `BakedLight`, `BakedLightInstance`, `BakedLightSampler`, `BaseButton`, `BitMap`, `BoneAttachment`, `bool`, `BoxContainer`, `BoxShape`, `Button`, `ButtonArray`, `ButtonGroup`, `Camera`, `Camera2D`, `CanvasItem`, `CanvasItemMaterial`, `CanvasItemShader`, `CanvasItemShaderGraph`, `CanvasLayer`, `CanvasModulate`, `CapsuleShape`, `CapsuleShape2D`, `CenterContainer`, `CheckBox`, `CheckButton`, `CircleShape2D`, `CollisionObject`, `CollisionObject2D`, `CollisionPolygon`, `CollisionPolygon2D`, `CollisionShape`, `CollisionShape2D`, `Color`, `ColorArray`, `ColorPicker`, `ColorPickerButton`, `ColorRamp`, `ConcavePolygonShape`, `ConcavePolygonShape2D`, `ConeTwistJoint`, `ConfigFile`, `ConfirmationDialog`, `Container`, `Control`, `ConvexPolygonShape`, `ConvexPolygonShape2D`, `CubeMap`, `Curve2D`, `Curve3D`, `DampedSpringJoint2D`, `Dictionary`, `DirectionalLight`, `Directory`, `EditorFileDialog`, `EditorImportPlugin`, `EditorPlugin`, `EditorScenePostImport`, `EditorScript`, `Environment`, `EventPlayer`, `EventStream`, `EventStreamChibi`, `File`, `FileDialog`, `FixedMaterial`, `float`, `Font`, `FuncRef`, `GDFunctionState`, `GDNativeClass`, `GDScript`, `Generic6DOFJoint`, `Geometry`, `GeometryInstance`, `Globals`, `GraphEdit`, `GraphNode`, `GridContainer`, `GridMap`, `GrooveJoint2D`, `HBoxContainer`, `HButtonArray`, `HingeJoint`, `HScrollBar`, `HSeparator`, `HSlider`, `HSplitContainer`, `HTTPClient`, `Image`, `ImageTexture`, `ImmediateGeometry`, `Input`, `InputDefault`, `InputEvent`, `InputEventAction`, `InputEventJoystickButton`, `InputEventJoystickMotion`, `InputEventKey`, `InputEventMouseButton`, `InputEventMouseMotion`, `InputEventScreenDrag`, `InputEventScreenTouch`, `InputMap`, `InstancePlaceholder`, `int`, `IntArray`, `InterpolatedCamera`, `IP`, `IP_Unix`, `ItemList`, `Joint`, `Joint2D`, `KinematicBody`, `KinematicBody2D`, `Label`, `LargeTexture`, `Light`, `Light2D`, `LightOccluder2D`, `LineEdit`, `LineShape2D`, `MainLoop`, `MarginContainer`, `Marshalls`, `Material`, `MaterialShader`, `MaterialShaderGraph`, `Matrix3`, `Matrix32`, `MenuButton`, `Mesh`, `MeshDataTool`, `MeshInstance`, `MeshLibrary`, `MultiMesh`, `MultiMeshInstance`, `Mutex`, `Navigation`, `Navigation2D`, `NavigationMesh`, `NavigationMeshInstance`, `NavigationPolygon`, `NavigationPolygonInstance`, `Nil`, `Node`, `Node2D`, `NodePath`, `Object`, `OccluderPolygon2D`, `OmniLight`, `OptionButton`, `OS`, `PackedDataContainer`, `PackedDataContainerRef`, `PackedScene`, `PacketPeer`, `PacketPeerStream`, `PacketPeerUDP`, `Panel`, `PanelContainer`, `ParallaxBackground`, `ParallaxLayer`, `ParticleAttractor2D`, `Particles`, `Particles2D`, `Patch9Frame`, `Path`, `Path2D`, `PathFollow`, `PathFollow2D`, `PathRemap`, `PCKPacker`, `Performance`, `PHashTranslation`, `Physics2DDirectBodyState`, `Physics2DDirectBodyStateSW`, `Physics2DDirectSpaceState`, `Physics2DServer`, `Physics2DServerSW`, `Physics2DShapeQueryParameters`, `Physics2DShapeQueryResult`, `Physics2DTestMotionResult`, `PhysicsBody`, `PhysicsBody2D`, `PhysicsDirectBodyState`, `PhysicsDirectBodyStateSW`, `PhysicsDirectSpaceState`, `PhysicsServer`, `PhysicsServerSW`, `PhysicsShapeQueryParameters`, `PhysicsShapeQueryResult`, `PinJoint`, `PinJoint2D`, `Plane`, `PlaneShape`, `Polygon2D`, `PolygonPathFinder`, `Popup`, `PopupDialog`, `PopupMenu`, `PopupPanel`, `Portal`, `Position2D`, `Position3D`, `ProgressBar`, `ProximityGroup`, `Quad`, `Quat`, `Range`, `RawArray`, `RayCast`, `RayCast2D`, `RayShape`, `RayShape2D`, `RealArray`, `Rect2`, `RectangleShape2D`, `Reference`, `ReferenceFrame`, `RegEx`, `RemoteTransform2D`, `RenderTargetTexture`, `Resource`, `ResourceImportMetadata`, `ResourceInteractiveLoader`, `ResourceLoader`, `ResourcePreloader`, `ResourceSaver`, `RichTextLabel`, `RID`, `RigidBody`, `RigidBody2D`, `Room`, `RoomBounds`, `Sample`, `SampleLibrary`, `SamplePlayer`, `SamplePlayer2D`, `SceneState`, `SceneTree`, `Script`, `ScrollBar`, `ScrollContainer`, `SegmentShape2D`, `Semaphore`, `Separator`, `Shader`, `ShaderGraph`, `ShaderMaterial`, `Shape`, `Shape2D`, `Skeleton`, `Slider`, `SliderJoint`, `SoundPlayer2D`, `SoundRoomParams`, `Spatial`, `SpatialPlayer`, `SpatialSamplePlayer`, `SpatialSound2DServer`, `SpatialSound2DServerSW`, `SpatialSoundServer`, `SpatialSoundServerSW`, `SpatialStreamPlayer`, `SphereShape`, `SpinBox`, `SplitContainer`, `SpotLight`, `Sprite`, `Sprite3D`, `SpriteBase3D`, `SpriteFrames`, `StaticBody`, `StaticBody2D`, `StreamPeer`, `StreamPeerSSL`, `StreamPeerTCP`, `StreamPlayer`, `String`, `StringArray`, `StyleBox`, `StyleBoxEmpty`, `StyleBoxFlat`, `StyleBoxImageMask`, `StyleBoxTexture`, `SurfaceTool`, `TabContainer`, `Tabs`, `TCP_Server`, `TestCube`, `TextEdit`, `Texture`, `TextureButton`, `TextureFrame`, `TextureProgress`, `Theme`, `Thread`, `TileMap`, `TileSet`, `Timer`, `ToolButton`, `TouchScreenButton`, `Transform`, `Translation`, `TranslationServer`, `Tree`, `TreeItem`, `Tween`, `UndoRedo`, `VBoxContainer`, `VButtonArray`, `Vector2`, `Vector2Array`, `Vector3`, `Vector3Array`, `VehicleBody`, `VehicleWheel`, `VideoPlayer`, `VideoStream`, `VideoStreamTheora`, `Viewport`, `ViewportSprite`, `VisibilityEnabler`, `VisibilityEnabler2D`, `VisibilityNotifier`, `VisibilityNotifier2D`, `VisualInstance`, `VisualServer`, `VScrollBar`, `VSeparator`, `VSlider`, `VSplitContainer`, `WeakRef`, `WindowDialog`, `World`, `World2D`, `WorldEnvironment`, `XMLParser`, `YSort`), NameException, nil},\n-\t\t},\n-\t\t\"numbers\": {\n-\t\t\t{`(\\d+\\.\\d*|\\d*\\.\\d+)([eE][+-]?[0-9]+)?j?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+[eE][+-]?[0-9]+j?`, LiteralNumberFloat, nil},\n-\t\t\t{`0[xX][a-fA-F0-9]+`, LiteralNumberHex, nil},\n-\t\t\t{`\\d+j?`, LiteralNumberInteger, nil},\n-\t\t},\n-\t\t\"name\": {\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t},\n-\t\t\"funcname\": {\n-\t\t\t{`[a-zA-Z_]\\w*`, NameFunction, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"classname\": {\n-\t\t\t{`[a-zA-Z_]\\w*`, NameClass, Pop(1)},\n-\t\t},\n-\t\t\"stringescape\": {\n-\t\t\t{`\\\\([\\\\abfnrtv\"\\']|\\n|N\\{.*?\\}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8}|x[a-fA-F0-9]{2}|[0-7]{1,3})`, LiteralStringEscape, nil},\n-\t\t},\n-\t\t\"strings-single\": {\n-\t\t\t{`%(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsux%]`, LiteralStringInterpol, nil},\n-\t\t\t{`[^\\\\\\'\"%\\n]+`, LiteralStringSingle, nil},\n-\t\t\t{`[\\'\"\\\\]`, LiteralStringSingle, nil},\n-\t\t\t{`%`, LiteralStringSingle, nil},\n-\t\t},\n-\t\t\"strings-double\": {\n-\t\t\t{`%(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsux%]`, LiteralStringInterpol, nil},\n-\t\t\t{`[^\\\\\\'\"%\\n]+`, LiteralStringDouble, nil},\n-\t\t\t{`[\\'\"\\\\]`, LiteralStringDouble, nil},\n-\t\t\t{`%`, LiteralStringDouble, nil},\n-\t\t},\n-\t\t\"dqs\": {\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t\t{`\\\\\\\\|\\\\\"|\\\\\\n`, LiteralStringEscape, nil},\n-\t\t\tInclude(\"strings-double\"),\n-\t\t},\n-\t\t\"sqs\": {\n-\t\t\t{`'`, LiteralStringSingle, Pop(1)},\n-\t\t\t{`\\\\\\\\|\\\\'|\\\\\\n`, LiteralStringEscape, nil},\n-\t\t\tInclude(\"strings-single\"),\n-\t\t},\n-\t\t\"tdqs\": {\n-\t\t\t{`\"\"\"`, LiteralStringDouble, Pop(1)},\n-\t\t\tInclude(\"strings-double\"),\n-\t\t\t{`\\n`, LiteralStringDouble, nil},\n-\t\t},\n-\t\t\"tsqs\": {\n-\t\t\t{`'''`, LiteralStringSingle, Pop(1)},\n-\t\t\tInclude(\"strings-single\"),\n-\t\t\t{`\\n`, LiteralStringSingle, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "8ae45dcb606e7f50697147e0db535d26138490ad",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/g/gherkin.go",
      "status": "removed",
      "additions": 0,
      "deletions": 122,
      "changes": 122,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgherkin.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgherkin.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgherkin.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,122 +0,0 @@\n-package g\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Gherkin lexer.\n-var Gherkin = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Gherkin\",\n-\t\tAliases:   []string{\"cucumber\", \"Cucumber\", \"gherkin\", \"Gherkin\"},\n-\t\tFilenames: []string{\"*.feature\", \"*.FEATURE\"},\n-\t\tMimeTypes: []string{\"text/x-gherkin\"},\n-\t},\n-\tgherkinRules,\n-))\n-\n-func gherkinRules() Rules {\n-\tstepKeywords := `^(\\s*)(하지만|조건|먼저|만일|만약|단|그리고|그러면|那麼|那么|而且|當|当|前提|假設|假设|假如|假定|但是|但し|並且|并且|同時|同时|もし|ならば|ただし|しかし|かつ|و |متى |لكن |عندما |ثم |بفرض |اذاً |כאשר |וגם |בהינתן |אזי |אז |אבל |Якщо |Унда |То |Припустимо, що |Припустимо |Онда |Но |Нехай |Лекин |Когато |Када |Кад |К тому же |И |Задато |Задати |Задате |Если |Допустим |Дадено |Ва |Бирок |Аммо |Али |Але |Агар |А |І |Și |És |Zatati |Zakładając |Zadato |Zadate |Zadano |Zadani |Zadan |Youse know when youse got |Youse know like when |Yna |Ya know how |Ya gotta |Y |Wun |Wtedy |When y'all |When |Wenn |WEN |Và |Ve |Und |Un |Thì |Then y'all |Then |Tapi |Tak |Tada |Tad |Så |Stel |Soit |Siis |Si |Sed |Se |Quando |Quand |Quan |Pryd |Pokud |Pokiaľ |Però |Pero |Pak |Oraz |Onda |Ond |Oletetaan |Og |Och |O zaman |Når |När |Niin |Nhưng |N |Mutta |Men |Mas |Maka |Majd |Mais |Maar |Ma |Lorsque |Lorsqu'|Kun |Kuid |Kui |Khi |Keď |Ketika |Když |Kaj |Kai |Kada |Kad |Jeżeli |Ja |Ir |I CAN HAZ |I |Ha |Givun |Givet |Given y'all |Given |Gitt |Gegeven |Gegeben sei |Fakat |Eğer ki |Etant donné |Et |Então |Entonces |Entao |En |Eeldades |E |Duota |Dun |Donitaĵo |Donat |Donada |Do |Diyelim ki |Dengan |Den youse gotta |De |Dato |Dar |Dann |Dan |Dado |Dacă |Daca |DEN |Când |Cuando |Cho |Cept |Cand |Cal |But y'all |But |Buh |Biết |Bet |BUT |Atès |Atunci |Atesa |Anrhegedig a |Angenommen |And y'all |And |An |Ama |Als |Alors |Allora |Ali |Aleshores |Ale |Akkor |Aber |AN |A také |A |\\* )`\n-\n-\tfeatureKeywords := `^(기능|機能|功能|フィーチャ|خاصية|תכונה|Функціонал|Функционалност|Функционал|Фича|Особина|Могућност|Özellik|Właściwość|Tính năng|Trajto|Savybė|Požiadavka|Požadavek|Osobina|Ominaisuus|Omadus|OH HAI|Mogućnost|Mogucnost|Jellemző|Fīča|Funzionalità|Funktionalität|Funkcionalnost|Funkcionalitāte|Funcționalitate|Functionaliteit|Functionalitate|Funcionalitat|Funcionalidade|Fonctionnalité|Fitur|Feature|Egenskap|Egenskab|Crikey|Característica|Arwedd)(:)(.*)$`\n-\n-\tfeatureElementKeywords := `^(\\s*)(시나리오 개요|시나리오|배경|背景|場景大綱|場景|场景大纲|场景|劇本大綱|劇本|剧本大纲|剧本|テンプレ|シナリオテンプレート|シナリオテンプレ|シナリオアウトライン|シナリオ|سيناريو مخطط|سيناريو|الخلفية|תרחיש|תבנית תרחיש|רקע|Тарих|Сценарій|Сценарио|Сценарий структураси|Сценарий|Структура сценарію|Структура сценарија|Структура сценария|Скица|Рамка на сценарий|Пример|Предыстория|Предистория|Позадина|Передумова|Основа|Концепт|Контекст|Założenia|Wharrimean is|Tình huống|The thing of it is|Tausta|Taust|Tapausaihio|Tapaus|Szenariogrundriss|Szenario|Szablon scenariusza|Stsenaarium|Struktura scenarija|Skica|Skenario konsep|Skenario|Situācija|Senaryo taslağı|Senaryo|Scénář|Scénario|Schema dello scenario|Scenārijs pēc parauga|Scenārijs|Scenár|Scenaro|Scenariusz|Scenariul de şablon|Scenariul de sablon|Scenariu|Scenario Outline|Scenario Amlinellol|Scenario|Scenarijus|Scenarijaus šablonas|Scenarij|Scenarie|Rerefons|Raamstsenaarium|Primer|Pozadí|Pozadina|Pozadie|Plan du scénario|Plan du Scénario|Osnova scénáře|Osnova|Náčrt Scénáře|Náčrt Scenáru|Mate|MISHUN SRSLY|MISHUN|Kịch bản|Konturo de la scenaro|Kontext|Konteksts|Kontekstas|Kontekst|Koncept|Khung tình huống|Khung kịch bản|Háttér|Grundlage|Geçmiş|Forgatókönyv vázlat|Forgatókönyv|Fono|Esquema do Cenário|Esquema do Cenario|Esquema del escenario|Esquema de l'escenari|Escenario|Escenari|Dis is what went down|Dasar|Contexto|Contexte|Contesto|Condiţii|Conditii|Cenário|Cenario|Cefndir|Bối cảnh|Blokes|Bakgrunn|Bakgrund|Baggrund|Background|B4|Antecedents|Antecedentes|All y'all|Achtergrond|Abstrakt Scenario|Abstract Scenario)(:)(.*)$`\n-\n-\texamplesKeywords := `^(\\s*)(예|例子|例|サンプル|امثلة|דוגמאות|Сценарији|Примери|Приклади|Мисоллар|Значения|Örnekler|Voorbeelden|Variantai|Tapaukset|Scenarios|Scenariji|Scenarijai|Příklady|Példák|Príklady|Przykłady|Primjeri|Primeri|Piemēri|Pavyzdžiai|Paraugs|Juhtumid|Exemplos|Exemples|Exemplele|Exempel|Examples|Esempi|Enghreifftiau|Ekzemploj|Eksempler|Ejemplos|EXAMPLZ|Dữ liệu|Contoh|Cobber|Beispiele)(:)(.*)$`\n-\n-\treturn Rules{\n-\t\t\"comments\": {\n-\t\t\t{`\\s*#.*$`, Comment, nil},\n-\t\t},\n-\t\t\"featureElements\": {\n-\t\t\t{stepKeywords, Keyword, Push(\"stepContentStack\")},\n-\t\t\tInclude(\"comments\"),\n-\t\t\t{`(\\s|.)`, NameFunction, nil},\n-\t\t},\n-\t\t\"featureElementsOnStack\": {\n-\t\t\t{stepKeywords, Keyword, Pop(2)},\n-\t\t\tInclude(\"comments\"),\n-\t\t\t{`(\\s|.)`, NameFunction, nil},\n-\t\t},\n-\t\t\"examplesTable\": {\n-\t\t\t{`\\s+\\|`, Keyword, Push(\"examplesTableHeader\")},\n-\t\t\tInclude(\"comments\"),\n-\t\t\t{`(\\s|.)`, NameFunction, nil},\n-\t\t},\n-\t\t\"examplesTableHeader\": {\n-\t\t\t{`\\s+\\|\\s*$`, Keyword, Pop(2)},\n-\t\t\tInclude(\"comments\"),\n-\t\t\t{`\\\\\\|`, NameVariable, nil},\n-\t\t\t{`\\s*\\|`, Keyword, nil},\n-\t\t\t{`[^|]`, NameVariable, nil},\n-\t\t},\n-\t\t\"scenarioSectionsOnStack\": {\n-\t\t\t{featureElementKeywords, ByGroups(NameFunction, Keyword, Keyword, NameFunction), Push(\"featureElementsOnStack\")},\n-\t\t},\n-\t\t\"narrative\": {\n-\t\t\tInclude(\"scenarioSectionsOnStack\"),\n-\t\t\t{`(\\s|.)`, NameFunction, nil},\n-\t\t},\n-\t\t\"tableVars\": {\n-\t\t\t{`(<[^>]+>)`, NameVariable, nil},\n-\t\t},\n-\t\t\"numbers\": {\n-\t\t\t{`(\\d+\\.?\\d*|\\d*\\.\\d+)([eE][+-]?[0-9]+)?`, LiteralString, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\tInclude(\"tableVars\"),\n-\t\t\t{`(\\s|.)`, LiteralString, nil},\n-\t\t},\n-\t\t\"pyString\": {\n-\t\t\t{`\"\"\"`, Keyword, Pop(1)},\n-\t\t\tInclude(\"string\"),\n-\t\t},\n-\t\t\"stepContentRoot\": {\n-\t\t\t{`$`, Keyword, Pop(1)},\n-\t\t\tInclude(\"stepContent\"),\n-\t\t},\n-\t\t\"stepContentStack\": {\n-\t\t\t{`$`, Keyword, Pop(2)},\n-\t\t\tInclude(\"stepContent\"),\n-\t\t},\n-\t\t\"stepContent\": {\n-\t\t\t{`\"`, NameFunction, Push(\"doubleString\")},\n-\t\t\tInclude(\"tableVars\"),\n-\t\t\tInclude(\"numbers\"),\n-\t\t\tInclude(\"comments\"),\n-\t\t\t{`(\\s|.)`, NameFunction, nil},\n-\t\t},\n-\t\t\"tableContent\": {\n-\t\t\t{`\\s+\\|\\s*$`, Keyword, Pop(1)},\n-\t\t\tInclude(\"comments\"),\n-\t\t\t{`\\\\\\|`, LiteralString, nil},\n-\t\t\t{`\\s*\\|`, Keyword, nil},\n-\t\t\t{`\"`, LiteralString, Push(\"doubleStringTable\")},\n-\t\t\tInclude(\"string\"),\n-\t\t},\n-\t\t\"doubleString\": {\n-\t\t\t{`\"`, NameFunction, Pop(1)},\n-\t\t\tInclude(\"string\"),\n-\t\t},\n-\t\t\"doubleStringTable\": {\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\tInclude(\"string\"),\n-\t\t},\n-\t\t\"root\": {\n-\t\t\t{`\\n`, NameFunction, nil},\n-\t\t\tInclude(\"comments\"),\n-\t\t\t{`\"\"\"`, Keyword, Push(\"pyString\")},\n-\t\t\t{`\\s+\\|`, Keyword, Push(\"tableContent\")},\n-\t\t\t{`\"`, NameFunction, Push(\"doubleString\")},\n-\t\t\tInclude(\"tableVars\"),\n-\t\t\tInclude(\"numbers\"),\n-\t\t\t{`(\\s*)(@[^@\\r\\n\\t ]+)`, ByGroups(NameFunction, NameTag), nil},\n-\t\t\t{stepKeywords, ByGroups(NameFunction, Keyword), Push(\"stepContentRoot\")},\n-\t\t\t{featureKeywords, ByGroups(Keyword, Keyword, NameFunction), Push(\"narrative\")},\n-\t\t\t{featureElementKeywords, ByGroups(NameFunction, Keyword, Keyword, NameFunction), Push(\"featureElements\")},\n-\t\t\t{examplesKeywords, ByGroups(NameFunction, Keyword, Keyword, NameFunction), Push(\"examplesTable\")},\n-\t\t\t{`(\\s|.)`, NameFunction, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "14aa58db3d9ee77d9e79af993f7b8175527636cf",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/g/glsl.go",
      "status": "removed",
      "additions": 0,
      "deletions": 41,
      "changes": 41,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fglsl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fglsl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fglsl.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,41 +0,0 @@\n-package g\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// GLSL lexer.\n-var GLSL = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"GLSL\",\n-\t\tAliases:   []string{\"glsl\"},\n-\t\tFilenames: []string{\"*.vert\", \"*.frag\", \"*.geo\"},\n-\t\tMimeTypes: []string{\"text/x-glslsrc\"},\n-\t},\n-\tglslRules,\n-))\n-\n-func glslRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`^#.*`, CommentPreproc, nil},\n-\t\t\t{`//.*`, CommentSingle, nil},\n-\t\t\t{`/(\\\\\\n)?[*](.|\\n)*?[*](\\\\\\n)?/`, CommentMultiline, nil},\n-\t\t\t{`\\+|-|~|!=?|\\*|/|%|<<|>>|<=?|>=?|==?|&&?|\\^|\\|\\|?`, Operator, nil},\n-\t\t\t{`[?:]`, Operator, nil},\n-\t\t\t{`\\bdefined\\b`, Operator, nil},\n-\t\t\t{`[;{}(),\\[\\]]`, Punctuation, nil},\n-\t\t\t{`[+-]?\\d*\\.\\d+([eE][-+]?\\d+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`[+-]?\\d+\\.\\d*([eE][-+]?\\d+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`0[xX][0-9a-fA-F]*`, LiteralNumberHex, nil},\n-\t\t\t{`0[0-7]*`, LiteralNumberOct, nil},\n-\t\t\t{`[1-9][0-9]*`, LiteralNumberInteger, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `attribute`, `const`, `uniform`, `varying`, `centroid`, `break`, `continue`, `do`, `for`, `while`, `if`, `else`, `in`, `out`, `inout`, `float`, `int`, `void`, `bool`, `true`, `false`, `invariant`, `discard`, `return`, `mat2`, `mat3mat4`, `mat2x2`, `mat3x2`, `mat4x2`, `mat2x3`, `mat3x3`, `mat4x3`, `mat2x4`, `mat3x4`, `mat4x4`, `vec2`, `vec3`, `vec4`, `ivec2`, `ivec3`, `ivec4`, `bvec2`, `bvec3`, `bvec4`, `sampler1D`, `sampler2D`, `sampler3DsamplerCube`, `sampler1DShadow`, `sampler2DShadow`, `struct`), Keyword, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `asm`, `class`, `union`, `enum`, `typedef`, `template`, `this`, `packed`, `goto`, `switch`, `default`, `inline`, `noinline`, `volatile`, `public`, `static`, `extern`, `external`, `interface`, `long`, `short`, `double`, `half`, `fixed`, `unsigned`, `lowp`, `mediump`, `highp`, `precision`, `input`, `output`, `hvec2`, `hvec3`, `hvec4`, `dvec2`, `dvec3`, `dvec4`, `fvec2`, `fvec3`, `fvec4`, `sampler2DRect`, `sampler3DRect`, `sampler2DRectShadow`, `sizeof`, `cast`, `namespace`, `using`), Keyword, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t\t{`\\.`, Punctuation, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "a7a25094188d80d64f0e7109a53f0a00f3c33f80",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/g/gnuplot.go",
      "status": "removed",
      "additions": 0,
      "deletions": 121,
      "changes": 121,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgnuplot.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgnuplot.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgnuplot.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,121 +0,0 @@\n-package g\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Gnuplot lexer.\n-var Gnuplot = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Gnuplot\",\n-\t\tAliases:   []string{\"gnuplot\"},\n-\t\tFilenames: []string{\"*.plot\", \"*.plt\"},\n-\t\tMimeTypes: []string{\"text/x-gnuplot\"},\n-\t},\n-\tgnuplotRules,\n-))\n-\n-func gnuplotRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`bind\\b|bin\\b|bi\\b`, Keyword, Push(\"bind\")},\n-\t\t\t{`exit\\b|exi\\b|ex\\b|quit\\b|qui\\b|qu\\b|q\\b`, Keyword, Push(\"quit\")},\n-\t\t\t{`fit\\b|fi\\b|f\\b`, Keyword, Push(\"fit\")},\n-\t\t\t{`(if)(\\s*)(\\()`, ByGroups(Keyword, Text, Punctuation), Push(\"if\")},\n-\t\t\t{`else\\b`, Keyword, nil},\n-\t\t\t{`pause\\b|paus\\b|pau\\b|pa\\b`, Keyword, Push(\"pause\")},\n-\t\t\t{`plot\\b|plo\\b|pl\\b|p\\b|replot\\b|replo\\b|repl\\b|rep\\b|splot\\b|splo\\b|spl\\b|sp\\b`, Keyword, Push(\"plot\")},\n-\t\t\t{`save\\b|sav\\b|sa\\b`, Keyword, Push(\"save\")},\n-\t\t\t{`set\\b|se\\b`, Keyword, Push(\"genericargs\", \"optionarg\")},\n-\t\t\t{`show\\b|sho\\b|sh\\b|unset\\b|unse\\b|uns\\b`, Keyword, Push(\"noargs\", \"optionarg\")},\n-\t\t\t{`lower\\b|lowe\\b|low\\b|raise\\b|rais\\b|rai\\b|ra\\b|call\\b|cal\\b|ca\\b|cd\\b|clear\\b|clea\\b|cle\\b|cl\\b|help\\b|hel\\b|he\\b|h\\b|\\?\\b|history\\b|histor\\b|histo\\b|hist\\b|his\\b|hi\\b|load\\b|loa\\b|lo\\b|l\\b|print\\b|prin\\b|pri\\b|pr\\b|pwd\\b|reread\\b|rerea\\b|rere\\b|rer\\b|re\\b|reset\\b|rese\\b|res\\b|screendump\\b|screendum\\b|screendu\\b|screend\\b|screen\\b|scree\\b|scre\\b|scr\\b|shell\\b|shel\\b|she\\b|system\\b|syste\\b|syst\\b|sys\\b|sy\\b|update\\b|updat\\b|upda\\b|upd\\b|up\\b`, Keyword, Push(\"genericargs\")},\n-\t\t\t{`pwd\\b|reread\\b|rerea\\b|rere\\b|rer\\b|re\\b|reset\\b|rese\\b|res\\b|screendump\\b|screendum\\b|screendu\\b|screend\\b|screen\\b|scree\\b|scre\\b|scr\\b|shell\\b|shel\\b|she\\b|test\\b`, Keyword, Push(\"noargs\")},\n-\t\t\t{`([a-zA-Z_]\\w*)(\\s*)(=)`, ByGroups(NameVariable, Text, Operator), Push(\"genericargs\")},\n-\t\t\t{`([a-zA-Z_]\\w*)(\\s*\\(.*?\\)\\s*)(=)`, ByGroups(NameFunction, Text, Operator), Push(\"genericargs\")},\n-\t\t\t{`@[a-zA-Z_]\\w*`, NameConstant, nil},\n-\t\t\t{`;`, Keyword, nil},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`[^\\\\\\n]`, Comment, nil},\n-\t\t\t{`\\\\\\n`, Comment, nil},\n-\t\t\t{`\\\\`, Comment, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"whitespace\": {\n-\t\t\t{`#`, Comment, Push(\"comment\")},\n-\t\t\t{`[ \\t\\v\\f]+`, Text, nil},\n-\t\t},\n-\t\t\"noargs\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`;`, Punctuation, Pop(1)},\n-\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t},\n-\t\t\"dqstring\": {\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`\\\\([\\\\abfnrtv\"\\']|x[a-fA-F0-9]{2,4}|[0-7]{1,3})`, LiteralStringEscape, nil},\n-\t\t\t{`[^\\\\\"\\n]+`, LiteralString, nil},\n-\t\t\t{`\\\\\\n`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralString, nil},\n-\t\t\t{`\\n`, LiteralString, Pop(1)},\n-\t\t},\n-\t\t\"sqstring\": {\n-\t\t\t{`''`, LiteralString, nil},\n-\t\t\t{`'`, LiteralString, Pop(1)},\n-\t\t\t{`[^\\\\'\\n]+`, LiteralString, nil},\n-\t\t\t{`\\\\\\n`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralString, nil},\n-\t\t\t{`\\n`, LiteralString, Pop(1)},\n-\t\t},\n-\t\t\"genericargs\": {\n-\t\t\tInclude(\"noargs\"),\n-\t\t\t{`\"`, LiteralString, Push(\"dqstring\")},\n-\t\t\t{`'`, LiteralString, Push(\"sqstring\")},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+)[eE][+-]?\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+)`, LiteralNumberFloat, nil},\n-\t\t\t{`-?\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`[,.~!%^&*+=|?:<>/-]`, Operator, nil},\n-\t\t\t{`[{}()\\[\\]]`, Punctuation, nil},\n-\t\t\t{`(eq|ne)\\b`, OperatorWord, nil},\n-\t\t\t{`([a-zA-Z_]\\w*)(\\s*)(\\()`, ByGroups(NameFunction, Text, Punctuation), nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t\t{`@[a-zA-Z_]\\w*`, NameConstant, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t},\n-\t\t\"optionarg\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`all\\b|al\\b|a\\b|angles\\b|angle\\b|angl\\b|ang\\b|an\\b|arrow\\b|arro\\b|arr\\b|ar\\b|autoscale\\b|autoscal\\b|autosca\\b|autosc\\b|autos\\b|auto\\b|aut\\b|au\\b|bars\\b|bar\\b|ba\\b|b\\b|border\\b|borde\\b|bord\\b|bor\\b|boxwidth\\b|boxwidt\\b|boxwid\\b|boxwi\\b|boxw\\b|box\\b|clabel\\b|clabe\\b|clab\\b|cla\\b|cl\\b|clip\\b|cli\\b|cl\\b|c\\b|cntrparam\\b|cntrpara\\b|cntrpar\\b|cntrpa\\b|cntrp\\b|cntr\\b|cnt\\b|cn\\b|contour\\b|contou\\b|conto\\b|cont\\b|con\\b|co\\b|data\\b|dat\\b|da\\b|datafile\\b|datafil\\b|datafi\\b|dataf\\b|data\\b|dgrid3d\\b|dgrid3\\b|dgrid\\b|dgri\\b|dgr\\b|dg\\b|dummy\\b|dumm\\b|dum\\b|du\\b|encoding\\b|encodin\\b|encodi\\b|encod\\b|enco\\b|enc\\b|decimalsign\\b|decimalsig\\b|decimalsi\\b|decimals\\b|decimal\\b|decima\\b|decim\\b|deci\\b|dec\\b|fit\\b|fontpath\\b|fontpat\\b|fontpa\\b|fontp\\b|font\\b|format\\b|forma\\b|form\\b|for\\b|fo\\b|function\\b|functio\\b|functi\\b|funct\\b|func\\b|fun\\b|fu\\b|functions\\b|function\\b|functio\\b|functi\\b|funct\\b|func\\b|fun\\b|fu\\b|grid\\b|gri\\b|gr\\b|g\\b|hidden3d\\b|hidden3\\b|hidden\\b|hidde\\b|hidd\\b|hid\\b|historysize\\b|historysiz\\b|historysi\\b|historys\\b|history\\b|histor\\b|histo\\b|hist\\b|his\\b|isosamples\\b|isosample\\b|isosampl\\b|isosamp\\b|isosam\\b|isosa\\b|isos\\b|iso\\b|is\\b|key\\b|ke\\b|k\\b|keytitle\\b|keytitl\\b|keytit\\b|keyti\\b|keyt\\b|label\\b|labe\\b|lab\\b|la\\b|linestyle\\b|linestyl\\b|linesty\\b|linest\\b|lines\\b|line\\b|lin\\b|li\\b|ls\\b|loadpath\\b|loadpat\\b|loadpa\\b|loadp\\b|load\\b|loa\\b|locale\\b|local\\b|loca\\b|loc\\b|logscale\\b|logscal\\b|logsca\\b|logsc\\b|logs\\b|log\\b|macros\\b|macro\\b|macr\\b|mac\\b|mapping\\b|mappin\\b|mappi\\b|mapp\\b|map\\b|mapping3d\\b|mapping3\\b|mapping\\b|mappin\\b|mappi\\b|mapp\\b|map\\b|margin\\b|margi\\b|marg\\b|mar\\b|lmargin\\b|lmargi\\b|lmarg\\b|lmar\\b|rmargin\\b|rmargi\\b|rmarg\\b|rmar\\b|tmargin\\b|tmargi\\b|tmarg\\b|tmar\\b|bmargin\\b|bmargi\\b|bmarg\\b|bmar\\b|mouse\\b|mous\\b|mou\\b|mo\\b|multiplot\\b|multiplo\\b|multipl\\b|multip\\b|multi\\b|mxtics\\b|mxtic\\b|mxti\\b|mxt\\b|nomxtics\\b|nomxtic\\b|nomxti\\b|nomxt\\b|mx2tics\\b|mx2tic\\b|mx2ti\\b|mx2t\\b|nomx2tics\\b|nomx2tic\\b|nomx2ti\\b|nomx2t\\b|mytics\\b|mytic\\b|myti\\b|myt\\b|nomytics\\b|nomytic\\b|nomyti\\b|nomyt\\b|my2tics\\b|my2tic\\b|my2ti\\b|my2t\\b|nomy2tics\\b|nomy2tic\\b|nomy2ti\\b|nomy2t\\b|mztics\\b|mztic\\b|mzti\\b|mzt\\b|nomztics\\b|nomztic\\b|nomzti\\b|nomzt\\b|mcbtics\\b|mcbtic\\b|mcbti\\b|mcbt\\b|nomcbtics\\b|nomcbtic\\b|nomcbti\\b|nomcbt\\b|offsets\\b|offset\\b|offse\\b|offs\\b|off\\b|of\\b|origin\\b|origi\\b|orig\\b|ori\\b|or\\b|output\\b|outpu\\b|outp\\b|out\\b|ou\\b|o\\b|parametric\\b|parametri\\b|parametr\\b|paramet\\b|parame\\b|param\\b|para\\b|par\\b|pa\\b|pm3d\\b|pm3\\b|pm\\b|palette\\b|palett\\b|palet\\b|pale\\b|pal\\b|colorbox\\b|colorbo\\b|colorb\\b|plot\\b|plo\\b|pl\\b|p\\b|pointsize\\b|pointsiz\\b|pointsi\\b|points\\b|point\\b|poin\\b|poi\\b|polar\\b|pola\\b|pol\\b|print\\b|prin\\b|pri\\b|pr\\b|object\\b|objec\\b|obje\\b|obj\\b|samples\\b|sample\\b|sampl\\b|samp\\b|sam\\b|sa\\b|size\\b|siz\\b|si\\b|style\\b|styl\\b|sty\\b|st\\b|surface\\b|surfac\\b|surfa\\b|surf\\b|sur\\b|su\\b|table\\b|terminal\\b|termina\\b|termin\\b|termi\\b|term\\b|ter\\b|te\\b|t\\b|termoptions\\b|termoption\\b|termoptio\\b|termopti\\b|termopt\\b|termop\\b|termo\\b|tics\\b|tic\\b|ti\\b|ticscale\\b|ticscal\\b|ticsca\\b|ticsc\\b|ticslevel\\b|ticsleve\\b|ticslev\\b|ticsle\\b|ticsl\\b|timefmt\\b|timefm\\b|timef\\b|timestamp\\b|timestam\\b|timesta\\b|timest\\b|times\\b|time\\b|tim\\b|title\\b|titl\\b|tit\\b|variables\\b|variable\\b|variabl\\b|variab\\b|varia\\b|vari\\b|var\\b|va\\b|v\\b|version\\b|versio\\b|versi\\b|vers\\b|ver\\b|ve\\b|view\\b|vie\\b|vi\\b|xyplane\\b|xyplan\\b|xypla\\b|xypl\\b|xyp\\b|xdata\\b|xdat\\b|xda\\b|x2data\\b|x2dat\\b|x2da\\b|ydata\\b|ydat\\b|yda\\b|y2data\\b|y2dat\\b|y2da\\b|zdata\\b|zdat\\b|zda\\b|cbdata\\b|cbdat\\b|cbda\\b|xlabel\\b|xlabe\\b|xlab\\b|xla\\b|xl\\b|x2label\\b|x2labe\\b|x2lab\\b|x2la\\b|x2l\\b|ylabel\\b|ylabe\\b|ylab\\b|yla\\b|yl\\b|y2label\\b|y2labe\\b|y2lab\\b|y2la\\b|y2l\\b|zlabel\\b|zlabe\\b|zlab\\b|zla\\b|zl\\b|cblabel\\b|cblabe\\b|cblab\\b|cbla\\b|cbl\\b|xtics\\b|xtic\\b|xti\\b|noxtics\\b|noxtic\\b|noxti\\b|x2tics\\b|x2tic\\b|x2ti\\b|nox2tics\\b|nox2tic\\b|nox2ti\\b|ytics\\b|ytic\\b|yti\\b|noytics\\b|noytic\\b|noyti\\b|y2tics\\b|y2tic\\b|y2ti\\b|noy2tics\\b|noy2tic\\b|noy2ti\\b|ztics\\b|ztic\\b|zti\\b|noztics\\b|noztic\\b|nozti\\b|cbtics\\b|cbtic\\b|cbti\\b|nocbtics\\b|nocbtic\\b|nocbti\\b|xdtics\\b|xdtic\\b|xdti\\b|noxdtics\\b|noxdtic\\b|noxdti\\b|x2dtics\\b|x2dtic\\b|x2dti\\b|nox2dtics\\b|nox2dtic\\b|nox2dti\\b|ydtics\\b|ydtic\\b|ydti\\b|noydtics\\b|noydtic\\b|noydti\\b|y2dtics\\b|y2dtic\\b|y2dti\\b|noy2dtics\\b|noy2dtic\\b|noy2dti\\b|zdtics\\b|zdtic\\b|zdti\\b|nozdtics\\b|nozdtic\\b|nozdti\\b|cbdtics\\b|cbdtic\\b|cbdti\\b|nocbdtics\\b|nocbdtic\\b|nocbdti\\b|xmtics\\b|xmtic\\b|xmti\\b|noxmtics\\b|noxmtic\\b|noxmti\\b|x2mtics\\b|x2mtic\\b|x2mti\\b|nox2mtics\\b|nox2mtic\\b|nox2mti\\b|ymtics\\b|ymtic\\b|ymti\\b|noymtics\\b|noymtic\\b|noymti\\b|y2mtics\\b|y2mtic\\b|y2mti\\b|noy2mtics\\b|noy2mtic\\b|noy2mti\\b|zmtics\\b|zmtic\\b|zmti\\b|nozmtics\\b|nozmtic\\b|nozmti\\b|cbmtics\\b|cbmtic\\b|cbmti\\b|nocbmtics\\b|nocbmtic\\b|nocbmti\\b|xrange\\b|xrang\\b|xran\\b|xra\\b|xr\\b|x2range\\b|x2rang\\b|x2ran\\b|x2ra\\b|x2r\\b|yrange\\b|yrang\\b|yran\\b|yra\\b|yr\\b|y2range\\b|y2rang\\b|y2ran\\b|y2ra\\b|y2r\\b|zrange\\b|zrang\\b|zran\\b|zra\\b|zr\\b|cbrange\\b|cbrang\\b|cbran\\b|cbra\\b|cbr\\b|rrange\\b|rrang\\b|rran\\b|rra\\b|rr\\b|trange\\b|trang\\b|tran\\b|tra\\b|tr\\b|urange\\b|urang\\b|uran\\b|ura\\b|ur\\b|vrange\\b|vrang\\b|vran\\b|vra\\b|vr\\b|xzeroaxis\\b|xzeroaxi\\b|xzeroax\\b|xzeroa\\b|x2zeroaxis\\b|x2zeroaxi\\b|x2zeroax\\b|x2zeroa\\b|yzeroaxis\\b|yzeroaxi\\b|yzeroax\\b|yzeroa\\b|y2zeroaxis\\b|y2zeroaxi\\b|y2zeroax\\b|y2zeroa\\b|zzeroaxis\\b|zzeroaxi\\b|zzeroax\\b|zzeroa\\b|zeroaxis\\b|zeroaxi\\b|zeroax\\b|zeroa\\b|zero\\b|zer\\b|ze\\b|z\\b`, NameBuiltin, Pop(1)},\n-\t\t},\n-\t\t\"bind\": {\n-\t\t\t{`!`, Keyword, Pop(1)},\n-\t\t\t{`allwindows\\b|allwindow\\b|allwindo\\b|allwind\\b|allwin\\b|allwi\\b|allw\\b|all\\b`, NameBuiltin, nil},\n-\t\t\tInclude(\"genericargs\"),\n-\t\t},\n-\t\t\"quit\": {\n-\t\t\t{`gnuplot\\b`, Keyword, nil},\n-\t\t\tInclude(\"noargs\"),\n-\t\t},\n-\t\t\"fit\": {\n-\t\t\t{`via\\b`, NameBuiltin, nil},\n-\t\t\tInclude(\"plot\"),\n-\t\t},\n-\t\t\"if\": {\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t\tInclude(\"genericargs\"),\n-\t\t},\n-\t\t\"pause\": {\n-\t\t\t{`(mouse|any|button1|button2|button3)\\b`, NameBuiltin, nil},\n-\t\t\t{`keypress\\b|keypres\\b|keypre\\b|keypr\\b|keyp\\b|key\\b`, NameBuiltin, nil},\n-\t\t\tInclude(\"genericargs\"),\n-\t\t},\n-\t\t\"plot\": {\n-\t\t\t{`axes\\b|axe\\b|ax\\b|axis\\b|axi\\b|binary\\b|binar\\b|bina\\b|bin\\b|every\\b|ever\\b|eve\\b|ev\\b|index\\b|inde\\b|ind\\b|in\\b|i\\b|matrix\\b|matri\\b|matr\\b|mat\\b|smooth\\b|smoot\\b|smoo\\b|smo\\b|sm\\b|s\\b|thru\\b|title\\b|titl\\b|tit\\b|ti\\b|t\\b|notitle\\b|notitl\\b|notit\\b|noti\\b|not\\b|using\\b|usin\\b|usi\\b|us\\b|u\\b|with\\b|wit\\b|wi\\b|w\\b`, NameBuiltin, nil},\n-\t\t\tInclude(\"genericargs\"),\n-\t\t},\n-\t\t\"save\": {\n-\t\t\t{`functions\\b|function\\b|functio\\b|functi\\b|funct\\b|func\\b|fun\\b|fu\\b|f\\b|set\\b|se\\b|s\\b|terminal\\b|termina\\b|termin\\b|termi\\b|term\\b|ter\\b|te\\b|t\\b|variables\\b|variable\\b|variabl\\b|variab\\b|varia\\b|vari\\b|var\\b|va\\b|v\\b`, NameBuiltin, nil},\n-\t\t\tInclude(\"genericargs\"),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "7d465cd4c17947031b4189e74eb2de465069777b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/g/graphql.go",
      "status": "removed",
      "additions": 0,
      "deletions": 49,
      "changes": 49,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgraphql.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgraphql.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgraphql.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,49 +0,0 @@\n-package g\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Go lexer.\n-var Graphql = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"GraphQL\",\n-\t\tAliases:   []string{\"graphql\", \"graphqls\", \"gql\"},\n-\t\tFilenames: []string{\"*.graphql\", \"*.graphqls\"},\n-\t},\n-\tgraphqlRules,\n-))\n-\n-func graphqlRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`(query|mutation|subscription|fragment|scalar|implements|interface|union|enum|input|type)`, KeywordDeclaration, Push(\"type\")},\n-\t\t\t{`(on|extend|schema|directive|\\.\\.\\.)`, KeywordDeclaration, nil},\n-\t\t\t{`(QUERY|MUTATION|SUBSCRIPTION|FIELD|FRAGMENT_DEFINITION|FRAGMENT_SPREAD|INLINE_FRAGMENT|SCHEMA|SCALAR|OBJECT|FIELD_DEFINITION|ARGUMENT_DEFINITION|INTERFACE|UNION|ENUM|ENUM_VALUE|INPUT_OBJECT|INPUT_FIELD_DEFINITION)\\b`, KeywordConstant, nil},\n-\t\t\t{`[^\\W\\d]\\w*`, NameProperty, nil},\n-\t\t\t{`\\@\\w+`, NameDecorator, nil},\n-\t\t\t{`:`, Punctuation, Push(\"type\")},\n-\t\t\t{`[\\(\\)\\{\\}\\[\\],!\\|=]`, Punctuation, nil},\n-\t\t\t{`\\$\\w+`, NameVariable, nil},\n-\t\t\t{`\\d+i`, LiteralNumber, nil},\n-\t\t\t{`\\d+\\.\\d*([Ee][-+]\\d+)?i`, LiteralNumber, nil},\n-\t\t\t{`\\.\\d+([Ee][-+]\\d+)?i`, LiteralNumber, nil},\n-\t\t\t{`\\d+[Ee][-+]\\d+i`, LiteralNumber, nil},\n-\t\t\t{`\\d+(\\.\\d+[eE][+\\-]?\\d+|\\.\\d*|[eE][+\\-]?\\d+)`, LiteralNumberFloat, nil},\n-\t\t\t{`\\.\\d+([eE][+\\-]?\\d+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`(0|[1-9][0-9]*)`, LiteralNumberInteger, nil},\n-\t\t\t{`\"\"\"[\\x00-\\x7F]*?\"\"\"`, LiteralString, nil},\n-\t\t\t{`\"(\\\\[\"\\\\abfnrtv]|\\\\x[0-9a-fA-F]{2}|\\\\[0-7]{1,3}|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}|[^\\\\])\"`, LiteralStringChar, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`\"(true|false|null)*\"`, Literal, nil},\n-\t\t\t{`[\\r\\n\\s]+`, Whitespace, nil},\n-\t\t\t{`#[^\\r\\n]*`, Comment, nil},\n-\t\t},\n-\t\t// Treats the next word as a class, default rules it would be a property\n-\t\t\"type\": {\n-\t\t\t{`[^\\W\\d]\\w*`, NameClass, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "65a70934f21076760aff3bd1623a6b25a5d93a54",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/g/groff.go",
      "status": "removed",
      "additions": 0,
      "deletions": 47,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgroff.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgroff.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgroff.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,47 +0,0 @@\n-package g\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Groff lexer.\n-var Groff = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Groff\",\n-\t\tAliases:   []string{\"groff\", \"nroff\", \"man\"},\n-\t\tFilenames: []string{\"*.[1-9]\", \"*.1p\", \"*.3pm\", \"*.man\"},\n-\t\tMimeTypes: []string{\"application/x-troff\", \"text/troff\"},\n-\t},\n-\tfunc() Rules {\n-\t\treturn Rules{\n-\t\t\t\"root\": {\n-\t\t\t\t{`(\\.)(\\w+)`, ByGroups(Text, Keyword), Push(\"request\")},\n-\t\t\t\t{`\\.`, Punctuation, Push(\"request\")},\n-\t\t\t\t{`[^\\\\\\n]+`, Text, Push(\"textline\")},\n-\t\t\t\tDefault(Push(\"textline\")),\n-\t\t\t},\n-\t\t\t\"textline\": {\n-\t\t\t\tInclude(\"escapes\"),\n-\t\t\t\t{`[^\\\\\\n]+`, Text, nil},\n-\t\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t\t},\n-\t\t\t\"escapes\": {\n-\t\t\t\t{`\\\\\"[^\\n]*`, Comment, nil},\n-\t\t\t\t{`\\\\[fn]\\w`, LiteralStringEscape, nil},\n-\t\t\t\t{`\\\\\\(.{2}`, LiteralStringEscape, nil},\n-\t\t\t\t{`\\\\.\\[.*\\]`, LiteralStringEscape, nil},\n-\t\t\t\t{`\\\\.`, LiteralStringEscape, nil},\n-\t\t\t\t{`\\\\\\n`, Text, Push(\"request\")},\n-\t\t\t},\n-\t\t\t\"request\": {\n-\t\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t\t\tInclude(\"escapes\"),\n-\t\t\t\t{`\"[^\\n\"]+\"`, LiteralStringDouble, nil},\n-\t\t\t\t{`\\d+`, LiteralNumber, nil},\n-\t\t\t\t{`\\S+`, LiteralString, nil},\n-\t\t\t\t{`\\s+`, Text, nil},\n-\t\t\t},\n-\t\t}\n-\t},\n-))"
    },
    {
      "sha": "8d37bd87ed77794095749b873098d5edaf112f8e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/g/groovy.go",
      "status": "removed",
      "additions": 0,
      "deletions": 62,
      "changes": 62,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgroovy.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgroovy.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fg%2Fgroovy.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,62 +0,0 @@\n-package g\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Groovy lexer.\n-var Groovy = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Groovy\",\n-\t\tAliases:   []string{\"groovy\"},\n-\t\tFilenames: []string{\"*.groovy\", \"*.gradle\"},\n-\t\tMimeTypes: []string{\"text/x-groovy\"},\n-\t\tDotAll:    true,\n-\t},\n-\tgroovyRules,\n-))\n-\n-func groovyRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`#!(.*?)$`, CommentPreproc, Push(\"base\")},\n-\t\t\tDefault(Push(\"base\")),\n-\t\t},\n-\t\t\"base\": {\n-\t\t\t{`^(\\s*(?:[a-zA-Z_][\\w.\\[\\]]*\\s+)+?)([a-zA-Z_]\\w*)(\\s*)(\\()`, ByGroups(UsingSelf(\"root\"), NameFunction, Text, Operator), nil},\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n-\t\t\t{`@[a-zA-Z_][\\w.]*`, NameDecorator, nil},\n-\t\t\t{`(as|assert|break|case|catch|continue|default|do|else|finally|for|if|in|goto|instanceof|new|return|switch|this|throw|try|while|in|as)\\b`, Keyword, nil},\n-\t\t\t{`(abstract|const|enum|extends|final|implements|native|private|protected|public|static|strictfp|super|synchronized|throws|transient|volatile)\\b`, KeywordDeclaration, nil},\n-\t\t\t{`(def|boolean|byte|char|double|float|int|long|short|void)\\b`, KeywordType, nil},\n-\t\t\t{`(package)(\\s+)`, ByGroups(KeywordNamespace, Text), nil},\n-\t\t\t{`(true|false|null)\\b`, KeywordConstant, nil},\n-\t\t\t{`(class|interface)(\\s+)`, ByGroups(KeywordDeclaration, Text), Push(\"class\")},\n-\t\t\t{`(import)(\\s+)`, ByGroups(KeywordNamespace, Text), Push(\"import\")},\n-\t\t\t{`\"\"\".*?\"\"\"`, LiteralStringDouble, nil},\n-\t\t\t{`'''.*?'''`, LiteralStringSingle, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t\t{`\\$/((?!/\\$).)*/\\$`, LiteralString, nil},\n-\t\t\t{`/(\\\\\\\\|\\\\\"|[^/])*/`, LiteralString, nil},\n-\t\t\t{`'\\\\.'|'[^\\\\]'|'\\\\u[0-9a-fA-F]{4}'`, LiteralStringChar, nil},\n-\t\t\t{`(\\.)([a-zA-Z_]\\w*)`, ByGroups(Operator, NameAttribute), nil},\n-\t\t\t{`[a-zA-Z_]\\w*:`, NameLabel, nil},\n-\t\t\t{`[a-zA-Z_$]\\w*`, Name, nil},\n-\t\t\t{`[~^*!%&\\[\\](){}<>|+=:;,./?-]`, Operator, nil},\n-\t\t\t{`[0-9][0-9]*\\.[0-9]+([eE][0-9]+)?[fd]?`, LiteralNumberFloat, nil},\n-\t\t\t{`0x[0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`[0-9]+L?`, LiteralNumberInteger, nil},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t},\n-\t\t\"class\": {\n-\t\t\t{`[a-zA-Z_]\\w*`, NameClass, Pop(1)},\n-\t\t},\n-\t\t\"import\": {\n-\t\t\t{`[\\w.]+\\*?`, NameNamespace, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "d34ef3a98fbe2d10142504891b5297fb761b0a7c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/h/handlebars.go",
      "status": "removed",
      "additions": 0,
      "deletions": 60,
      "changes": 60,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fh%2Fhandlebars.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fh%2Fhandlebars.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fh%2Fhandlebars.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,60 +0,0 @@\n-package h\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Handlebars lexer.\n-var Handlebars = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Handlebars\",\n-\t\tAliases:   []string{\"handlebars\", \"hbs\"},\n-\t\tFilenames: []string{\"*.handlebars\", \"*.hbs\"},\n-\t\tMimeTypes: []string{},\n-\t},\n-\thandlebarsRules,\n-))\n-\n-func handlebarsRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[^{]+`, Other, nil},\n-\t\t\t{`\\{\\{!.*\\}\\}`, Comment, nil},\n-\t\t\t{`(\\{\\{\\{)(\\s*)`, ByGroups(CommentSpecial, Text), Push(\"tag\")},\n-\t\t\t{`(\\{\\{)(\\s*)`, ByGroups(CommentPreproc, Text), Push(\"tag\")},\n-\t\t},\n-\t\t\"tag\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\}\\}\\}`, CommentSpecial, Pop(1)},\n-\t\t\t{`\\}\\}`, CommentPreproc, Pop(1)},\n-\t\t\t{`([#/]*)(each|if|unless|else|with|log|in(?:line)?)`, ByGroups(Keyword, Keyword), nil},\n-\t\t\t{`#\\*inline`, Keyword, nil},\n-\t\t\t{`([#/])([\\w-]+)`, ByGroups(NameFunction, NameFunction), nil},\n-\t\t\t{`([\\w-]+)(=)`, ByGroups(NameAttribute, Operator), nil},\n-\t\t\t{`(>)(\\s*)(@partial-block)`, ByGroups(Keyword, Text, Keyword), nil},\n-\t\t\t{`(#?>)(\\s*)([\\w-]+)`, ByGroups(Keyword, Text, NameVariable), nil},\n-\t\t\t{`(>)(\\s*)(\\()`, ByGroups(Keyword, Text, Punctuation), Push(\"dynamic-partial\")},\n-\t\t\tInclude(\"generic\"),\n-\t\t},\n-\t\t\"dynamic-partial\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t\t{`(lookup)(\\s+)(\\.|this)(\\s+)`, ByGroups(Keyword, Text, NameVariable, Text), nil},\n-\t\t\t{`(lookup)(\\s+)(\\S+)`, ByGroups(Keyword, Text, UsingSelf(\"variable\")), nil},\n-\t\t\t{`[\\w-]+`, NameFunction, nil},\n-\t\t\tInclude(\"generic\"),\n-\t\t},\n-\t\t\"variable\": {\n-\t\t\t{`[a-zA-Z][\\w-]*`, NameVariable, nil},\n-\t\t\t{`\\.[\\w-]+`, NameVariable, nil},\n-\t\t\t{`(this\\/|\\.\\/|(\\.\\.\\/)+)[\\w-]+`, NameVariable, nil},\n-\t\t},\n-\t\t\"generic\": {\n-\t\t\tInclude(\"variable\"),\n-\t\t\t{`:?\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`:?'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t\t{`[0-9](\\.[0-9]*)?(eE[+-][0-9])?[flFLdD]?|0[xX][0-9a-fA-F]+[Ll]?`, LiteralNumber, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "e34f03ef16cda4b0541c15bbb65fa3d86e6d15dd",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/h/haskell.go",
      "status": "removed",
      "additions": 0,
      "deletions": 103,
      "changes": 103,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fh%2Fhaskell.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fh%2Fhaskell.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fh%2Fhaskell.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,103 +0,0 @@\n-package h\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Haskell lexer.\n-var Haskell = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Haskell\",\n-\t\tAliases:   []string{\"haskell\", \"hs\"},\n-\t\tFilenames: []string{\"*.hs\"},\n-\t\tMimeTypes: []string{\"text/x-haskell\"},\n-\t},\n-\thaskellRules,\n-))\n-\n-func haskellRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`--(?![!#$%&*+./<=>?@^|_~:\\\\]).*?$`, CommentSingle, nil},\n-\t\t\t{`\\{-`, CommentMultiline, Push(\"comment\")},\n-\t\t\t{`\\bimport\\b`, KeywordReserved, Push(\"import\")},\n-\t\t\t{`\\bmodule\\b`, KeywordReserved, Push(\"module\")},\n-\t\t\t{`\\berror\\b`, NameException, nil},\n-\t\t\t{`\\b(case|class|data|default|deriving|do|else|family|if|in|infix[lr]?|instance|let|newtype|of|then|type|where|_)(?!\\')\\b`, KeywordReserved, nil},\n-\t\t\t{`'[^\\\\]'`, LiteralStringChar, nil},\n-\t\t\t{`^[_\\p{Ll}][\\w\\']*`, NameFunction, nil},\n-\t\t\t{`'?[_\\p{Ll}][\\w']*`, Name, nil},\n-\t\t\t{`('')?[\\p{Lu}][\\w\\']*`, KeywordType, nil},\n-\t\t\t{`(')[\\p{Lu}][\\w\\']*`, KeywordType, nil},\n-\t\t\t{`(')\\[[^\\]]*\\]`, KeywordType, nil},\n-\t\t\t{`(')\\([^)]*\\)`, KeywordType, nil},\n-\t\t\t{`\\\\(?![:!#$%&*+.\\\\/<=>?@^|~-]+)`, NameFunction, nil},\n-\t\t\t{`(<-|::|->|=>|=)(?![:!#$%&*+.\\\\/<=>?@^|~-]+)`, OperatorWord, nil},\n-\t\t\t{`:[:!#$%&*+.\\\\/<=>?@^|~-]*`, KeywordType, nil},\n-\t\t\t{`[:!#$%&*+.\\\\/<=>?@^|~-]+`, Operator, nil},\n-\t\t\t{`\\d+[eE][+-]?\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+\\.\\d+([eE][+-]?\\d+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`0[oO][0-7]+`, LiteralNumberOct, nil},\n-\t\t\t{`0[xX][\\da-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`'`, LiteralStringChar, Push(\"character\")},\n-\t\t\t{`\"`, LiteralString, Push(\"string\")},\n-\t\t\t{`\\[\\]`, KeywordType, nil},\n-\t\t\t{`\\(\\)`, NameBuiltin, nil},\n-\t\t\t{\"[][(),;`{}]\", Punctuation, nil},\n-\t\t},\n-\t\t\"import\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\"`, LiteralString, Push(\"string\")},\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t\t{`qualified\\b`, Keyword, nil},\n-\t\t\t{`([\\p{Lu}][\\w.]*)(\\s+)(as)(\\s+)([\\p{Lu}][\\w.]*)`, ByGroups(NameNamespace, Text, Keyword, Text, Name), Pop(1)},\n-\t\t\t{`([\\p{Lu}][\\w.]*)(\\s+)(hiding)(\\s+)(\\()`, ByGroups(NameNamespace, Text, Keyword, Text, Punctuation), Push(\"funclist\")},\n-\t\t\t{`([\\p{Lu}][\\w.]*)(\\s+)(\\()`, ByGroups(NameNamespace, Text, Punctuation), Push(\"funclist\")},\n-\t\t\t{`[\\w.]+`, NameNamespace, Pop(1)},\n-\t\t},\n-\t\t\"module\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`([\\p{Lu}][\\w.]*)(\\s+)(\\()`, ByGroups(NameNamespace, Text, Punctuation), Push(\"funclist\")},\n-\t\t\t{`[\\p{Lu}][\\w.]*`, NameNamespace, Pop(1)},\n-\t\t},\n-\t\t\"funclist\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`[\\p{Lu}]\\w*`, KeywordType, nil},\n-\t\t\t{`(_[\\w\\']+|[\\p{Ll}][\\w\\']*)`, NameFunction, nil},\n-\t\t\t{`--(?![!#$%&*+./<=>?@^|_~:\\\\]).*?$`, CommentSingle, nil},\n-\t\t\t{`\\{-`, CommentMultiline, Push(\"comment\")},\n-\t\t\t{`,`, Punctuation, nil},\n-\t\t\t{`[:!#$%&*+.\\\\/<=>?@^|~-]+`, Operator, nil},\n-\t\t\t{`\\(`, Punctuation, Push(\"funclist\", \"funclist\")},\n-\t\t\t{`\\)`, Punctuation, Pop(2)},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`[^-{}]+`, CommentMultiline, nil},\n-\t\t\t{`\\{-`, CommentMultiline, Push()},\n-\t\t\t{`-\\}`, CommentMultiline, Pop(1)},\n-\t\t\t{`[-{}]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"character\": {\n-\t\t\t{`[^\\\\']'`, LiteralStringChar, Pop(1)},\n-\t\t\t{`\\\\`, LiteralStringEscape, Push(\"escape\")},\n-\t\t\t{`'`, LiteralStringChar, Pop(1)},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`[^\\\\\"]+`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralStringEscape, Push(\"escape\")},\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t},\n-\t\t\"escape\": {\n-\t\t\t{`[abfnrtv\"\\'&\\\\]`, LiteralStringEscape, Pop(1)},\n-\t\t\t{`\\^[][\\p{Lu}@^_]`, LiteralStringEscape, Pop(1)},\n-\t\t\t{`NUL|SOH|[SE]TX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|S[OI]|DLE|DC[1-4]|NAK|SYN|ETB|CAN|EM|SUB|ESC|[FGRU]S|SP|DEL`, LiteralStringEscape, Pop(1)},\n-\t\t\t{`o[0-7]+`, LiteralStringEscape, Pop(1)},\n-\t\t\t{`x[\\da-fA-F]+`, LiteralStringEscape, Pop(1)},\n-\t\t\t{`\\d+`, LiteralStringEscape, Pop(1)},\n-\t\t\t{`\\s+\\\\`, LiteralStringEscape, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "7206fba0868e5687a1fbf29f40e43fee0372834d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/h/hcl.go",
      "status": "removed",
      "additions": 0,
      "deletions": 73,
      "changes": 73,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fh%2Fhcl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fh%2Fhcl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fh%2Fhcl.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,73 +0,0 @@\n-package h\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// HCL lexer.\n-var HCL = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"HCL\",\n-\t\tAliases:   []string{\"hcl\"},\n-\t\tFilenames: []string{\"*.hcl\"},\n-\t\tMimeTypes: []string{\"application/x-hcl\"},\n-\t},\n-\thclRules,\n-))\n-\n-func hclRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"string\"),\n-\t\t\tInclude(\"punctuation\"),\n-\t\t\tInclude(\"curly\"),\n-\t\t\tInclude(\"basic\"),\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`[0-9]+`, LiteralNumber, nil},\n-\t\t},\n-\t\t\"basic\": {\n-\t\t\t{Words(`\\b`, `\\b`, `true`, `false`), KeywordType, nil},\n-\t\t\t{`\\s*/\\*`, CommentMultiline, Push(\"comment\")},\n-\t\t\t{`\\s*#.*\\n`, CommentSingle, nil},\n-\t\t\t{`(.*?)(\\s*)(=)`, ByGroups(Name, Text, Operator), nil},\n-\t\t\t{`\\d+`, Number, nil},\n-\t\t\t{`\\b\\w+\\b`, Keyword, nil},\n-\t\t\t{`\\$\\{`, LiteralStringInterpol, Push(\"var_builtin\")},\n-\t\t},\n-\t\t\"function\": {\n-\t\t\t{`(\\s+)(\".*\")(\\s+)`, ByGroups(Text, LiteralString, Text), nil},\n-\t\t\tInclude(\"punctuation\"),\n-\t\t\tInclude(\"curly\"),\n-\t\t},\n-\t\t\"var_builtin\": {\n-\t\t\t{`\\$\\{`, LiteralStringInterpol, Push()},\n-\t\t\t{Words(`\\b`, `\\b`, `concat`, `file`, `join`, `lookup`, `element`), NameBuiltin, nil},\n-\t\t\tInclude(\"string\"),\n-\t\t\tInclude(\"punctuation\"),\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\}`, LiteralStringInterpol, Pop(1)},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`(\".*\")`, ByGroups(LiteralStringDouble), nil},\n-\t\t},\n-\t\t\"punctuation\": {\n-\t\t\t{`[\\[\\](),.]`, Punctuation, nil},\n-\t\t},\n-\t\t\"curly\": {\n-\t\t\t{`\\{`, TextPunctuation, nil},\n-\t\t\t{`\\}`, TextPunctuation, nil},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`[^*/]`, CommentMultiline, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push()},\n-\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n-\t\t\t{`[*/]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"whitespace\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "089353749622be59ef3af2dd62b9da4d9f88e548",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/h/hexdump.go",
      "status": "removed",
      "additions": 0,
      "deletions": 71,
      "changes": 71,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fh%2Fhexdump.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fh%2Fhexdump.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fh%2Fhexdump.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,71 +0,0 @@\n-package h\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Hexdump lexer.\n-var Hexdump = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Hexdump\",\n-\t\tAliases:   []string{\"hexdump\"},\n-\t\tFilenames: []string{},\n-\t\tMimeTypes: []string{},\n-\t},\n-\thexdumpRules,\n-))\n-\n-func hexdumpRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\tInclude(\"offset\"),\n-\t\t\t{`([0-9A-Ha-h]{2})(\\-)([0-9A-Ha-h]{2})`, ByGroups(LiteralNumberHex, Punctuation, LiteralNumberHex), nil},\n-\t\t\t{`[0-9A-Ha-h]{2}`, LiteralNumberHex, nil},\n-\t\t\t{`(\\s{2,3})(\\>)(.{16})(\\<)$`, ByGroups(Text, Punctuation, LiteralString, Punctuation), Push(\"bracket-strings\")},\n-\t\t\t{`(\\s{2,3})(\\|)(.{16})(\\|)$`, ByGroups(Text, Punctuation, LiteralString, Punctuation), Push(\"piped-strings\")},\n-\t\t\t{`(\\s{2,3})(\\>)(.{1,15})(\\<)$`, ByGroups(Text, Punctuation, LiteralString, Punctuation), nil},\n-\t\t\t{`(\\s{2,3})(\\|)(.{1,15})(\\|)$`, ByGroups(Text, Punctuation, LiteralString, Punctuation), nil},\n-\t\t\t{`(\\s{2,3})(.{1,15})$`, ByGroups(Text, LiteralString), nil},\n-\t\t\t{`(\\s{2,3})(.{16}|.{20})$`, ByGroups(Text, LiteralString), Push(\"nonpiped-strings\")},\n-\t\t\t{`\\s`, Text, nil},\n-\t\t\t{`^\\*`, Punctuation, nil},\n-\t\t},\n-\t\t\"offset\": {\n-\t\t\t{`^([0-9A-Ha-h]+)(:)`, ByGroups(NameLabel, Punctuation), Push(\"offset-mode\")},\n-\t\t\t{`^[0-9A-Ha-h]+`, NameLabel, nil},\n-\t\t},\n-\t\t\"offset-mode\": {\n-\t\t\t{`\\s`, Text, Pop(1)},\n-\t\t\t{`[0-9A-Ha-h]+`, NameLabel, nil},\n-\t\t\t{`:`, Punctuation, nil},\n-\t\t},\n-\t\t\"piped-strings\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\tInclude(\"offset\"),\n-\t\t\t{`[0-9A-Ha-h]{2}`, LiteralNumberHex, nil},\n-\t\t\t{`(\\s{2,3})(\\|)(.{1,16})(\\|)$`, ByGroups(Text, Punctuation, LiteralString, Punctuation), nil},\n-\t\t\t{`\\s`, Text, nil},\n-\t\t\t{`^\\*`, Punctuation, nil},\n-\t\t},\n-\t\t\"bracket-strings\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\tInclude(\"offset\"),\n-\t\t\t{`[0-9A-Ha-h]{2}`, LiteralNumberHex, nil},\n-\t\t\t{`(\\s{2,3})(\\>)(.{1,16})(\\<)$`, ByGroups(Text, Punctuation, LiteralString, Punctuation), nil},\n-\t\t\t{`\\s`, Text, nil},\n-\t\t\t{`^\\*`, Punctuation, nil},\n-\t\t},\n-\t\t\"nonpiped-strings\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\tInclude(\"offset\"),\n-\t\t\t{`([0-9A-Ha-h]{2})(\\-)([0-9A-Ha-h]{2})`, ByGroups(LiteralNumberHex, Punctuation, LiteralNumberHex), nil},\n-\t\t\t{`[0-9A-Ha-h]{2}`, LiteralNumberHex, nil},\n-\t\t\t{`(\\s{19,})(.{1,20}?)$`, ByGroups(Text, LiteralString), nil},\n-\t\t\t{`(\\s{2,3})(.{1,20})$`, ByGroups(Text, LiteralString), nil},\n-\t\t\t{`\\s`, Text, nil},\n-\t\t\t{`^\\*`, Punctuation, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "6c5f6377157554d2fc429e462bd56dbeda0e4941",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/h/hlb.go",
      "status": "removed",
      "additions": 0,
      "deletions": 58,
      "changes": 58,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fh%2Fhlb.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fh%2Fhlb.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fh%2Fhlb.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,58 +0,0 @@\n-package h\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// HLB lexer.\n-var HLB = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"HLB\",\n-\t\tAliases:   []string{\"hlb\"},\n-\t\tFilenames: []string{\"*.hlb\"},\n-\t\tMimeTypes: []string{},\n-\t},\n-\thlbRules,\n-))\n-\n-func hlbRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`(#.*)`, ByGroups(CommentSingle), nil},\n-\t\t\t{`((\\b(0(b|B|o|O|x|X)[a-fA-F0-9]+)\\b)|(\\b(0|[1-9][0-9]*)\\b))`, ByGroups(LiteralNumber), nil},\n-\t\t\t{`((\\b(true|false)\\b))`, ByGroups(NameBuiltin), nil},\n-\t\t\t{`(\\bstring\\b|\\bint\\b|\\bbool\\b|\\bfs\\b|\\boption\\b)`, ByGroups(KeywordType), nil},\n-\t\t\t{`(\\b[a-zA-Z_][a-zA-Z0-9]*\\b)(\\()`, ByGroups(NameFunction, Punctuation), Push(\"params\")},\n-\t\t\t{`(\\{)`, ByGroups(Punctuation), Push(\"block\")},\n-\t\t\t{`(\\n|\\r|\\r\\n)`, Text, nil},\n-\t\t\t{`.`, Text, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`\\\\\"`, LiteralString, nil},\n-\t\t\t{`[^\\\\\"]+`, LiteralString, nil},\n-\t\t},\n-\t\t\"block\": {\n-\t\t\t{`(\\})`, ByGroups(Punctuation), Pop(1)},\n-\t\t\t{`(#.*)`, ByGroups(CommentSingle), nil},\n-\t\t\t{`((\\b(0(b|B|o|O|x|X)[a-fA-F0-9]+)\\b)|(\\b(0|[1-9][0-9]*)\\b))`, ByGroups(LiteralNumber), nil},\n-\t\t\t{`((\\b(true|false)\\b))`, ByGroups(KeywordConstant), nil},\n-\t\t\t{`\"`, LiteralString, Push(\"string\")},\n-\t\t\t{`(with)`, ByGroups(KeywordReserved), nil},\n-\t\t\t{`(as)([\\t ]+)(\\b[a-zA-Z_][a-zA-Z0-9]*\\b)`, ByGroups(KeywordReserved, Text, NameFunction), nil},\n-\t\t\t{`(\\bstring\\b|\\bint\\b|\\bbool\\b|\\bfs\\b|\\boption\\b)([\\t ]+)(\\{)`, ByGroups(KeywordType, Text, Punctuation), Push(\"block\")},\n-\t\t\t{`(?!\\b(?:scratch|image|resolve|http|checksum|chmod|filename|git|keepGitDir|local|includePatterns|excludePatterns|followPaths|generate|frontendInput|shell|run|readonlyRootfs|env|dir|user|network|security|host|ssh|secret|mount|target|localPath|uid|gid|mode|readonly|tmpfs|sourcePath|cache|mkdir|createParents|chown|createdTime|mkfile|rm|allowNotFound|allowWildcards|copy|followSymlinks|contentsOnly|unpack|createDestPath)\\b)(\\b[a-zA-Z_][a-zA-Z0-9]*\\b)`, ByGroups(NameOther), nil},\n-\t\t\t{`(\\n|\\r|\\r\\n)`, Text, nil},\n-\t\t\t{`.`, Text, nil},\n-\t\t},\n-\t\t\"params\": {\n-\t\t\t{`(\\))`, ByGroups(Punctuation), Pop(1)},\n-\t\t\t{`(variadic)`, ByGroups(Keyword), nil},\n-\t\t\t{`(\\bstring\\b|\\bint\\b|\\bbool\\b|\\bfs\\b|\\boption\\b)`, ByGroups(KeywordType), nil},\n-\t\t\t{`(\\b[a-zA-Z_][a-zA-Z0-9]*\\b)`, ByGroups(NameOther), nil},\n-\t\t\t{`(\\n|\\r|\\r\\n)`, Text, nil},\n-\t\t\t{`.`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "7a078979938f7fdbb168276dcf0afd9c57326efc",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/h/hy.go",
      "status": "removed",
      "additions": 0,
      "deletions": 55,
      "changes": 55,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fh%2Fhy.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fh%2Fhy.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fh%2Fhy.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,55 +0,0 @@\n-package h\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Hy lexer.\n-var Hy = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Hy\",\n-\t\tAliases:   []string{\"hylang\"},\n-\t\tFilenames: []string{\"*.hy\"},\n-\t\tMimeTypes: []string{\"text/x-hy\", \"application/x-hy\"},\n-\t},\n-\thyRules,\n-))\n-\n-func hyRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`;.*$`, CommentSingle, nil},\n-\t\t\t{`[,\\s]+`, Text, nil},\n-\t\t\t{`-?\\d+\\.\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`-?\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`0[0-7]+j?`, LiteralNumberOct, nil},\n-\t\t\t{`0[xX][a-fA-F0-9]+`, LiteralNumberHex, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`'(?!#)[\\w!$%*+<=>?/.#-]+`, LiteralStringSymbol, nil},\n-\t\t\t{`\\\\(.|[a-z]+)`, LiteralStringChar, nil},\n-\t\t\t{`^(\\s*)([rRuU]{,2}\"\"\"(?:.|\\n)*?\"\"\")`, ByGroups(Text, LiteralStringDoc), nil},\n-\t\t\t{`^(\\s*)([rRuU]{,2}'''(?:.|\\n)*?''')`, ByGroups(Text, LiteralStringDoc), nil},\n-\t\t\t{`::?(?!#)[\\w!$%*+<=>?/.#-]+`, LiteralStringSymbol, nil},\n-\t\t\t{\"~@|[`\\\\'#^~&@]\", Operator, nil},\n-\t\t\tInclude(\"py-keywords\"),\n-\t\t\tInclude(\"py-builtins\"),\n-\t\t\t{Words(``, ` `, `cond`, `for`, `->`, `->>`, `car`, `cdr`, `first`, `rest`, `let`, `when`, `unless`, `import`, `do`, `progn`, `get`, `slice`, `assoc`, `with-decorator`, `,`, `list_comp`, `kwapply`, `~`, `is`, `in`, `is-not`, `not-in`, `quasiquote`, `unquote`, `unquote-splice`, `quote`, `|`, `<<=`, `>>=`, `foreach`, `while`, `eval-and-compile`, `eval-when-compile`), Keyword, nil},\n-\t\t\t{Words(``, ` `, `def`, `defn`, `defun`, `defmacro`, `defclass`, `lambda`, `fn`, `setv`), KeywordDeclaration, nil},\n-\t\t\t{Words(``, ` `, `cycle`, `dec`, `distinct`, `drop`, `even?`, `filter`, `inc`, `instance?`, `iterable?`, `iterate`, `iterator?`, `neg?`, `none?`, `nth`, `numeric?`, `odd?`, `pos?`, `remove`, `repeat`, `repeatedly`, `take`, `take_nth`, `take_while`, `zero?`), NameBuiltin, nil},\n-\t\t\t{`(?<=\\()(?!#)[\\w!$%*+<=>?/.#-]+`, NameFunction, nil},\n-\t\t\t{`(?!#)[\\w!$%*+<=>?/.#-]+`, NameVariable, nil},\n-\t\t\t{`(\\[|\\])`, Punctuation, nil},\n-\t\t\t{`(\\{|\\})`, Punctuation, nil},\n-\t\t\t{`(\\(|\\))`, Punctuation, nil},\n-\t\t},\n-\t\t\"py-keywords\": {\n-\t\t\t{Words(``, `\\b`, `assert`, `break`, `continue`, `del`, `elif`, `else`, `except`, `exec`, `finally`, `for`, `global`, `if`, `lambda`, `pass`, `print`, `raise`, `return`, `try`, `while`, `yield`, `yield from`, `as`, `with`), Keyword, nil},\n-\t\t},\n-\t\t\"py-builtins\": {\n-\t\t\t{Words(`(?<!\\.)`, `\\b`, `__import__`, `abs`, `all`, `any`, `apply`, `basestring`, `bin`, `bool`, `buffer`, `bytearray`, `bytes`, `callable`, `chr`, `classmethod`, `cmp`, `coerce`, `compile`, `complex`, `delattr`, `dict`, `dir`, `divmod`, `enumerate`, `eval`, `execfile`, `exit`, `file`, `filter`, `float`, `frozenset`, `getattr`, `globals`, `hasattr`, `hash`, `hex`, `id`, `input`, `int`, `intern`, `isinstance`, `issubclass`, `iter`, `len`, `list`, `locals`, `long`, `map`, `max`, `min`, `next`, `object`, `oct`, `open`, `ord`, `pow`, `property`, `range`, `raw_input`, `reduce`, `reload`, `repr`, `reversed`, `round`, `set`, `setattr`, `slice`, `sorted`, `staticmethod`, `str`, `sum`, `super`, `tuple`, `type`, `unichr`, `unicode`, `vars`, `xrange`, `zip`), NameBuiltin, nil},\n-\t\t\t{`(?<!\\.)(self|None|Ellipsis|NotImplemented|False|True|cls)\\b`, NameBuiltinPseudo, nil},\n-\t\t\t{Words(`(?<!\\.)`, `\\b`, `ArithmeticError`, `AssertionError`, `AttributeError`, `BaseException`, `DeprecationWarning`, `EOFError`, `EnvironmentError`, `Exception`, `FloatingPointError`, `FutureWarning`, `GeneratorExit`, `IOError`, `ImportError`, `ImportWarning`, `IndentationError`, `IndexError`, `KeyError`, `KeyboardInterrupt`, `LookupError`, `MemoryError`, `NameError`, `NotImplemented`, `NotImplementedError`, `OSError`, `OverflowError`, `OverflowWarning`, `PendingDeprecationWarning`, `ReferenceError`, `RuntimeError`, `RuntimeWarning`, `StandardError`, `StopIteration`, `SyntaxError`, `SyntaxWarning`, `SystemError`, `SystemExit`, `TabError`, `TypeError`, `UnboundLocalError`, `UnicodeDecodeError`, `UnicodeEncodeError`, `UnicodeError`, `UnicodeTranslateError`, `UnicodeWarning`, `UserWarning`, `ValueError`, `VMSError`, `Warning`, `WindowsError`, `ZeroDivisionError`), NameException, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "fb5378e35bd8269299386a1ea5336a8e4e0c5cc6",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/i/idris.go",
      "status": "removed",
      "additions": 0,
      "deletions": 84,
      "changes": 84,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fi%2Fidris.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fi%2Fidris.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fi%2Fidris.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,84 +0,0 @@\n-package i\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Idris lexer.\n-var Idris = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Idris\",\n-\t\tAliases:   []string{\"idris\", \"idr\"},\n-\t\tFilenames: []string{\"*.idr\"},\n-\t\tMimeTypes: []string{\"text/x-idris\"},\n-\t},\n-\tidrisRules,\n-))\n-\n-func idrisRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`^(\\s*)(%lib|link|flag|include|hide|freeze|access|default|logging|dynamic|name|error_handlers|language)`, ByGroups(Text, KeywordReserved), nil},\n-\t\t\t{`(\\s*)(--(?![!#$%&*+./<=>?@^|_~:\\\\]).*?)$`, ByGroups(Text, CommentSingle), nil},\n-\t\t\t{`(\\s*)(\\|{3}.*?)$`, ByGroups(Text, CommentSingle), nil},\n-\t\t\t{`(\\s*)(\\{-)`, ByGroups(Text, CommentMultiline), Push(\"comment\")},\n-\t\t\t{`^(\\s*)([^\\s(){}]+)(\\s*)(:)(\\s*)`, ByGroups(Text, NameFunction, Text, OperatorWord, Text), nil},\n-\t\t\t{`\\b(case|class|data|default|using|do|else|if|in|infix[lr]?|instance|rewrite|auto|namespace|codata|mutual|private|public|abstract|total|partial|let|proof|of|then|static|where|_|with|pattern|term|syntax|prefix|postulate|parameters|record|dsl|impossible|implicit|tactics|intros|intro|compute|refine|exact|trivial)(?!\\')\\b`, KeywordReserved, nil},\n-\t\t\t{`(import|module)(\\s+)`, ByGroups(KeywordReserved, Text), Push(\"module\")},\n-\t\t\t{`('')?[A-Z][\\w\\']*`, KeywordType, nil},\n-\t\t\t{`[a-z][\\w\\']*`, Text, nil},\n-\t\t\t{`(<-|::|->|=>|=)`, OperatorWord, nil},\n-\t\t\t{`([(){}\\[\\]:!#$%&*+.\\\\/<=>?@^|~-]+)`, OperatorWord, nil},\n-\t\t\t{`\\d+[eE][+-]?\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+\\.\\d+([eE][+-]?\\d+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`0[xX][\\da-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`'`, LiteralStringChar, Push(\"character\")},\n-\t\t\t{`\"`, LiteralString, Push(\"string\")},\n-\t\t\t{`[^\\s(){}]+`, Text, nil},\n-\t\t\t{`\\s+?`, Text, nil},\n-\t\t},\n-\t\t\"module\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`([A-Z][\\w.]*)(\\s+)(\\()`, ByGroups(NameNamespace, Text, Punctuation), Push(\"funclist\")},\n-\t\t\t{`[A-Z][\\w.]*`, NameNamespace, Pop(1)},\n-\t\t},\n-\t\t\"funclist\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`[A-Z]\\w*`, KeywordType, nil},\n-\t\t\t{`(_[\\w\\']+|[a-z][\\w\\']*)`, NameFunction, nil},\n-\t\t\t{`--.*$`, CommentSingle, nil},\n-\t\t\t{`\\{-`, CommentMultiline, Push(\"comment\")},\n-\t\t\t{`,`, Punctuation, nil},\n-\t\t\t{`[:!#$%&*+.\\\\/<=>?@^|~-]+`, Operator, nil},\n-\t\t\t{`\\(`, Punctuation, Push(\"funclist\", \"funclist\")},\n-\t\t\t{`\\)`, Punctuation, Pop(2)},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`[^-{}]+`, CommentMultiline, nil},\n-\t\t\t{`\\{-`, CommentMultiline, Push()},\n-\t\t\t{`-\\}`, CommentMultiline, Pop(1)},\n-\t\t\t{`[-{}]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"character\": {\n-\t\t\t{`[^\\\\']`, LiteralStringChar, nil},\n-\t\t\t{`\\\\`, LiteralStringEscape, Push(\"escape\")},\n-\t\t\t{`'`, LiteralStringChar, Pop(1)},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`[^\\\\\"]+`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralStringEscape, Push(\"escape\")},\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t},\n-\t\t\"escape\": {\n-\t\t\t{`[abfnrtv\"\\'&\\\\]`, LiteralStringEscape, Pop(1)},\n-\t\t\t{`\\^[][A-Z@^_]`, LiteralStringEscape, Pop(1)},\n-\t\t\t{`NUL|SOH|[SE]TX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|S[OI]|DLE|DC[1-4]|NAK|SYN|ETB|CAN|EM|SUB|ESC|[FGRU]S|SP|DEL`, LiteralStringEscape, Pop(1)},\n-\t\t\t{`o[0-7]+`, LiteralStringEscape, Pop(1)},\n-\t\t\t{`x[\\da-fA-F]+`, LiteralStringEscape, Pop(1)},\n-\t\t\t{`\\d+`, LiteralStringEscape, Pop(1)},\n-\t\t\t{`\\s+\\\\`, LiteralStringEscape, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "bbb1d7230bf6a6ef697d596fce8d50180b36f9be",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/i/igor.go",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fi%2Figor.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fi%2Figor.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fi%2Figor.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,36 +0,0 @@\n-package i\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Igor lexer.\n-var Igor = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"Igor\",\n-\t\tAliases:         []string{\"igor\", \"igorpro\"},\n-\t\tFilenames:       []string{\"*.ipf\"},\n-\t\tMimeTypes:       []string{\"text/ipf\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tigorRules,\n-))\n-\n-func igorRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`//.*$`, CommentSingle, nil},\n-\t\t\t{`\"([^\"\\\\]|\\\\.)*\"`, LiteralString, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `if`, `else`, `elseif`, `endif`, `for`, `endfor`, `strswitch`, `switch`, `case`, `default`, `endswitch`, `do`, `while`, `try`, `catch`, `endtry`, `break`, `continue`, `return`, `AbortOnRTE`, `AbortOnValue`), Keyword, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `variable`, `string`, `constant`, `strconstant`, `NVAR`, `SVAR`, `WAVE`, `STRUCT`, `dfref`, `funcref`, `char`, `uchar`, `int16`, `uint16`, `int32`, `uint32`, `int64`, `uint64`, `float`, `double`), KeywordType, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `override`, `ThreadSafe`, `MultiThread`, `static`, `Proc`, `Picture`, `Prompt`, `DoPrompt`, `macro`, `window`, `function`, `end`, `Structure`, `EndStructure`, `EndMacro`, `Menu`, `SubMenu`), KeywordReserved, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `Abort`, `AddFIFOData`, `AddFIFOVectData`, `AddMovieAudio`, `AddMovieFrame`, `AddWavesToBoxPlot`, `AddWavesToViolinPlot`, `AdoptFiles`, `APMath`, `Append`, `AppendBoxPlot`, `AppendImage`, `AppendLayoutObject`, `AppendMatrixContour`, `AppendText`, `AppendToGizmo`, `AppendToGraph`, `AppendToLayout`, `AppendToTable`, `AppendViolinPlot`, `AppendXYZContour`, `AutoPositionWindow`, `AxonTelegraphFindServers`, `BackgroundInfo`, `Beep`, `BoundingBall`, `BoxSmooth`, `BrowseURL`, `BuildMenu`, `Button`, `cd`, `Chart`, `CheckBox`, `CheckDisplayed`, `ChooseColor`, `Close`, `CloseHelp`, `CloseMovie`, `CloseProc`, `ColorScale`, `ColorTab2Wave`, `Concatenate`, `ControlBar`, `ControlInfo`, `ControlUpdate`, `ConvertGlobalStringTextEncoding`, `ConvexHull`, `Convolve`, `CopyDimLabels`, `CopyFile`, `CopyFolder`, `CopyScales`, `Correlate`, `CreateAliasShortcut`, `CreateBrowser`, `Cross`, `CtrlBackground`, `CtrlFIFO`, `CtrlNamedBackground`, `Cursor`, `CurveFit`, `CustomControl`, `CWT`, `DAQmx_AI_SetupReader`, `DAQmx_AO_SetOutputs`, `DAQmx_CTR_CountEdges`, `DAQmx_CTR_OutputPulse`, `DAQmx_CTR_Period`, `DAQmx_CTR_PulseWidth`, `DAQmx_DIO_Config`, `DAQmx_DIO_WriteNewData`, `DAQmx_Scan`, `DAQmx_WaveformGen`, `Debugger`, `DebuggerOptions`, `DefaultFont`, `DefaultGuiControls`, `DefaultGuiFont`, `DefaultTextEncoding`, `DefineGuide`, `DelayUpdate`, `DeleteAnnotations`, `DeleteFile`, `DeleteFolder`, `DeletePoints`, `Differentiate`, `dir`, `Display`, `DisplayHelpTopic`, `DisplayProcedure`, `DoAlert`, `DoIgorMenu`, `DoUpdate`, `DoWindow`, `DoXOPIdle`, `DPSS`, `DrawAction`, `DrawArc`, `DrawBezier`, `DrawLine`, `DrawOval`, `DrawPICT`, `DrawPoly`, `DrawRect`, `DrawRRect`, `DrawText`, `DrawUserShape`, `DSPDetrend`, `DSPPeriodogram`, `Duplicate`, `DuplicateDataFolder`, `DWT`, `EdgeStats`, `Edit`, `ErrorBars`, `EstimatePeakSizes`, `Execute`, `ExecuteScriptText`, `ExperimentInfo`, `ExperimentModified`, `ExportGizmo`, `Extract`, `FastGaussTransform`, `FastOp`, `FBinRead`, `FBinWrite`, `FFT`, `FGetPos`, `FIFOStatus`, `FIFO2Wave`, `FilterFIR`, `FilterIIR`, `FindAPeak`, `FindContour`, `FindDuplicates`, `FindLevel`, `FindLevels`, `FindPeak`, `FindPointsInPoly`, `FindRoots`, `FindSequence`, `FindValue`, `FMaxFlat`, `FPClustering`, `fprintf`, `FReadLine`, `FSetPos`, `FStatus`, `FTPCreateDirectory`, `FTPDelete`, `FTPDownload`, `FTPUpload`, `FuncFit`, `FuncFitMD`, `GBLoadWave`, `GetAxis`, `GetCamera`, `GetFileFolderInfo`, `GetGizmo`, `GetLastUserMenuInfo`, `GetMarquee`, `GetMouse`, `GetSelection`, `GetWindow`, `GISCreateVectorLayer`, `GISGetRasterInfo`, `GISGetRegisteredFileInfo`, `GISGetVectorLayerInfo`, `GISLoadRasterData`, `GISLoadVectorData`, `GISRasterizeVectorData`, `GISRegisterFile`, `GISTransformCoords`, `GISUnRegisterFile`, `GISWriteFieldData`, `GISWriteGeometryData`, `GISWriteRaster`, `GPIBReadBinaryWave2`, `GPIBReadBinary2`, `GPIBReadWave2`, `GPIBRead2`, `GPIBWriteBinaryWave2`, `GPIBWriteBinary2`, `GPIBWriteWave2`, `GPIBWrite2`, `GPIB2`, `GraphNormal`, `GraphWaveDraw`, `GraphWaveEdit`, `Grep`, `GroupBox`, `Hanning`, `HDFInfo`, `HDFReadImage`, `HDFReadSDS`, `HDFReadVset`, `HDF5CloseFile`, `HDF5CloseGroup`, `HDF5ConvertColors`, `HDF5CreateFile`, `HDF5CreateGroup`, `HDF5CreateLink`, `HDF5Dump`, `HDF5DumpErrors`, `HDF5DumpState`, `HDF5FlushFile`, `HDF5ListAttributes`, `HDF5ListGroup`, `HDF5LoadData`, `HDF5LoadGroup`, `HDF5LoadImage`, `HDF5OpenFile`, `HDF5OpenGroup`, `HDF5SaveData`, `HDF5SaveGroup`, `HDF5SaveImage`, `HDF5TestOperation`, `HDF5UnlinkObject`, `HideIgorMenus`, `HideInfo`, `HideProcedures`, `HideTools`, `HilbertTransform`, `Histogram`, `ICA`, `IFFT`, `ImageAnalyzeParticles`, `ImageBlend`, `ImageBoundaryToMask`, `ImageComposite`, `ImageEdgeDetection`, `ImageFileInfo`, `ImageFilter`, `ImageFocus`, `ImageFromXYZ`, `ImageGenerateROIMask`, `ImageGLCM`, `ImageHistModification`, `ImageHistogram`, `ImageInterpolate`, `ImageLineProfile`, `ImageLoad`, `ImageMorphology`, `ImageRegistration`, `ImageRemoveBackground`, `ImageRestore`, `ImageRotate`, `ImageSave`, `ImageSeedFill`, `ImageSkeleton3d`, `ImageSnake`, `ImageStats`, `ImageThreshold`, `ImageTransform`, `ImageUnwrapPhase`, `ImageWindow`, `IndexSort`, `InsertPoints`, `Integrate`, `IntegrateODE`, `Integrate2D`, `Interpolate2`, `Interpolate3D`, `Interp3DPath`, `ITCCloseAll2`, `ITCCloseDevice2`, `ITCConfigAllChannels2`, `ITCConfigChannelReset2`, `ITCConfigChannelUpload2`, `ITCConfigChannel2`, `ITCFIFOAvailableAll2`, `ITCFIFOAvailable2`, `ITCGetAllChannelsConfig2`, `ITCGetChannelConfig2`, `ITCGetCurrentDevice2`, `ITCGetDeviceInfo2`, `ITCGetDevices2`, `ITCGetErrorString2`, `ITCGetSerialNumber2`, `ITCGetState2`, `ITCGetVersions2`, `ITCInitialize2`, `ITCOpenDevice2`, `ITCReadADC2`, `ITCReadDigital2`, `ITCReadTimer2`, `ITCSelectDevice2`, `ITCSetDAC2`, `ITCSetGlobals2`, `ITCSetModes2`, `ITCSetState2`, `ITCStartAcq2`, `ITCStopAcq2`, `ITCUpdateFIFOPositionAll2`, `ITCUpdateFIFOPosition2`, `ITCWriteDigital2`, `JCAMPLoadWave`, `JointHistogram`, `KillBackground`, `KillControl`, `KillDataFolder`, `KillFIFO`, `KillFreeAxis`, `KillPath`, `KillPICTs`, `KillStrings`, `KillVariables`, `KillWaves`, `KillWindow`, `KMeans`, `Label`, `Layout`, `LayoutPageAction`, `LayoutSlideShow`, `Legend`, `LinearFeedbackShiftRegister`, `ListBox`, `LoadData`, `LoadPackagePreferences`, `LoadPICT`, `LoadWave`, `Loess`, `LombPeriodogram`, `Make`, `MakeIndex`, `MarkPerfTestTime`, `MatrixConvolve`, `MatrixCorr`, `MatrixEigenV`, `MatrixFilter`, `MatrixGaussJ`, `MatrixGLM`, `MatrixInverse`, `MatrixLinearSolve`, `MatrixLinearSolveTD`, `MatrixLLS`, `MatrixLUBkSub`, `MatrixLUD`, `MatrixLUDTD`, `MatrixMultiply`, `MatrixOP`, `MatrixSchur`, `MatrixSolve`, `MatrixSVBkSub`, `MatrixSVD`, `MatrixTranspose`, `MCC_FindServers`, `MeasureStyledText`, `MFR_CheckForNewBricklets`, `MFR_CloseResultFile`, `MFR_CreateOverviewTable`, `MFR_GetBrickletCount`, `MFR_GetBrickletData`, `MFR_GetBrickletDeployData`, `MFR_GetBrickletMetaData`, `MFR_GetBrickletRawData`, `MFR_GetReportTemplate`, `MFR_GetResultFileMetaData`, `MFR_GetResultFileName`, `MFR_GetVernissageVersion`, `MFR_GetVersion`, `MFR_GetXOPErrorMessage`, `MFR_OpenResultFile`, `MLLoadWave`, `Modify`, `ModifyBoxPlot`, `ModifyBrowser`, `ModifyCamera`, `ModifyContour`, `ModifyControl`, `ModifyControlList`, `ModifyFreeAxis`, `ModifyGizmo`, `ModifyGraph`, `ModifyImage`, `ModifyLayout`, `ModifyPanel`, `ModifyTable`, `ModifyViolinPlot`, `ModifyWaterfall`, `MoveDataFolder`, `MoveFile`, `MoveFolder`, `MoveString`, `MoveSubwindow`, `MoveVariable`, `MoveWave`, `MoveWindow`, `MultiTaperPSD`, `MultiThreadingControl`, `NC_CloseFile`, `NC_DumpErrors`, `NC_Inquire`, `NC_ListAttributes`, `NC_ListObjects`, `NC_LoadData`, `NC_OpenFile`, `NeuralNetworkRun`, `NeuralNetworkTrain`, `NewCamera`, `NewDataFolder`, `NewFIFO`, `NewFIFOChan`, `NewFreeAxis`, `NewGizmo`, `NewImage`, `NewLayout`, `NewMovie`, `NewNotebook`, `NewPanel`, `NewPath`, `NewWaterfall`, `NILoadWave`, `NI4882`, `Note`, `Notebook`, `NotebookAction`, `Open`, `OpenHelp`, `OpenNotebook`, `Optimize`, `ParseOperationTemplate`, `PathInfo`, `PauseForUser`, `PauseUpdate`, `PCA`, `PlayMovie`, `PlayMovieAction`, `PlaySound`, `PopupContextualMenu`, `PopupMenu`, `Preferences`, `PrimeFactors`, `Print`, `printf`, `PrintGraphs`, `PrintLayout`, `PrintNotebook`, `PrintSettings`, `PrintTable`, `Project`, `PulseStats`, `PutScrapText`, `pwd`, `Quit`, `RatioFromNumber`, `Redimension`, `Remez`, `Remove`, `RemoveContour`, `RemoveFromGizmo`, `RemoveFromGraph`, `RemoveFromLayout`, `RemoveFromTable`, `RemoveImage`, `RemoveLayoutObjects`, `RemovePath`, `Rename`, `RenameDataFolder`, `RenamePath`, `RenamePICT`, `RenameWindow`, `ReorderImages`, `ReorderTraces`, `ReplaceText`, `ReplaceWave`, `Resample`, `ResumeUpdate`, `Reverse`, `Rotate`, `Save`, `SaveData`, `SaveExperiment`, `SaveGizmoCopy`, `SaveGraphCopy`, `SaveNotebook`, `SavePackagePreferences`, `SavePICT`, `SaveTableCopy`, `SetActiveSubwindow`, `SetAxis`, `SetBackground`, `SetDashPattern`, `SetDataFolder`, `SetDimLabel`, `SetDrawEnv`, `SetDrawLayer`, `SetFileFolderInfo`, `SetFormula`, `SetIdlePeriod`, `SetIgorHook`, `SetIgorMenuMode`, `SetIgorOption`, `SetMarquee`, `SetProcessSleep`, `SetRandomSeed`, `SetScale`, `SetVariable`, `SetWaveLock`, `SetWaveTextEncoding`, `SetWindow`, `ShowIgorMenus`, `ShowInfo`, `ShowTools`, `Silent`, `Sleep`, `Slider`, `Smooth`, `SmoothCustom`, `Sort`, `SortColumns`, `SoundInRecord`, `SoundInSet`, `SoundInStartChart`, `SoundInStatus`, `SoundInStopChart`, `SoundLoadWave`, `SoundSaveWave`, `SphericalInterpolate`, `SphericalTriangulate`, `SplitString`, `SplitWave`, `sprintf`, `SQLHighLevelOp`, `sscanf`, `Stack`, `StackWindows`, `StatsAngularDistanceTest`, `StatsANOVA1Test`, `StatsANOVA2NRTest`, `StatsANOVA2RMTest`, `StatsANOVA2Test`, `StatsChiTest`, `StatsCircularCorrelationTest`, `StatsCircularMeans`, `StatsCircularMoments`, `StatsCircularTwoSampleTest`, `StatsCochranTest`, `StatsContingencyTable`, `StatsDIPTest`, `StatsDunnettTest`, `StatsFriedmanTest`, `StatsFTest`, `StatsHodgesAjneTest`, `StatsJBTest`, `StatsKDE`, `StatsKendallTauTest`, `StatsKSTest`, `StatsKWTest`, `StatsLinearCorrelationTest`, `StatsLinearRegression`, `StatsMultiCorrelationTest`, `StatsNPMCTest`, `StatsNPNominalSRTest`, `StatsQuantiles`, `StatsRankCorrelationTest`, `StatsResample`, `StatsSample`, `StatsScheffeTest`, `StatsShapiroWilkTest`, `StatsSignTest`, `StatsSRTest`, `StatsTTest`, `StatsTukeyTest`, `StatsVariancesTest`, `StatsWatsonUSquaredTest`, `StatsWatsonWilliamsTest`, `StatsWheelerWatsonTest`, `StatsWilcoxonRankTest`, `StatsWRCorrelationTest`, `STFT`, `String`, `StructFill`, `StructGet`, `StructPut`, `SumDimension`, `SumSeries`, `TabControl`, `Tag`, `TDMLoadData`, `TDMSaveData`, `TextBox`, `ThreadGroupPutDF`, `ThreadStart`, `TickWavesFromAxis`, `Tile`, `TileWindows`, `TitleBox`, `ToCommandLine`, `ToolsGrid`, `Triangulate3d`, `Unwrap`, `URLRequest`, `ValDisplay`, `Variable`, `VDTClosePort2`, `VDTGetPortList2`, `VDTGetStatus2`, `VDTOpenPort2`, `VDTOperationsPort2`, `VDTReadBinaryWave2`, `VDTReadBinary2`, `VDTReadHexWave2`, `VDTReadHex2`, `VDTReadWave2`, `VDTRead2`, `VDTTerminalPort2`, `VDTWriteBinaryWave2`, `VDTWriteBinary2`, `VDTWriteHexWave2`, `VDTWriteHex2`, `VDTWriteWave2`, `VDTWrite2`, `VDT2`, `VISAControl`, `VISARead`, `VISAReadBinary`, `VISAReadBinaryWave`, `VISAReadWave`, `VISAWrite`, `VISAWriteBinary`, `VISAWriteBinaryWave`, `VISAWriteWave`, `WaveMeanStdv`, `WaveStats`, `WaveTransform`, `wfprintf`, `WignerTransform`, `WindowFunction`, `XLLoadWave`), NameClass, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `abs`, `acos`, `acosh`, `AddListItem`, `AiryA`, `AiryAD`, `AiryB`, `AiryBD`, `alog`, `AnnotationInfo`, `AnnotationList`, `area`, `areaXY`, `asin`, `asinh`, `atan`, `atanh`, `atan2`, `AxisInfo`, `AxisList`, `AxisValFromPixel`, `AxonTelegraphAGetDataNum`, `AxonTelegraphAGetDataString`, `AxonTelegraphAGetDataStruct`, `AxonTelegraphGetDataNum`, `AxonTelegraphGetDataString`, `AxonTelegraphGetDataStruct`, `AxonTelegraphGetTimeoutMs`, `AxonTelegraphSetTimeoutMs`, `Base64Decode`, `Base64Encode`, `Besseli`, `Besselj`, `Besselk`, `Bessely`, `beta`, `betai`, `BinarySearch`, `BinarySearchInterp`, `binomial`, `binomialln`, `binomialNoise`, `cabs`, `CaptureHistory`, `CaptureHistoryStart`, `ceil`, `cequal`, `char2num`, `chebyshev`, `chebyshevU`, `CheckName`, `ChildWindowList`, `CleanupName`, `cmplx`, `cmpstr`, `conj`, `ContourInfo`, `ContourNameList`, `ContourNameToWaveRef`, `ContourZ`, `ControlNameList`, `ConvertTextEncoding`, `cos`, `cosh`, `cosIntegral`, `cot`, `coth`, `CountObjects`, `CountObjectsDFR`, `cpowi`, `CreationDate`, `csc`, `csch`, `CsrInfo`, `CsrWave`, `CsrWaveRef`, `CsrXWave`, `CsrXWaveRef`, `CTabList`, `DataFolderDir`, `DataFolderExists`, `DataFolderRefsEqual`, `DataFolderRefStatus`, `date`, `datetime`, `DateToJulian`, `date2secs`, `Dawson`, `defined`, `deltax`, `digamma`, `dilogarithm`, `DimDelta`, `DimOffset`, `DimSize`, `ei`, `enoise`, `equalWaves`, `erf`, `erfc`, `erfcw`, `exists`, `exp`, `expInt`, `expIntegralE1`, `expNoise`, `factorial`, `Faddeeva`, `fakedata`, `faverage`, `faverageXY`, `fDAQmx_AI_GetReader`, `fDAQmx_AO_UpdateOutputs`, `fDAQmx_ConnectTerminals`, `fDAQmx_CTR_Finished`, `fDAQmx_CTR_IsFinished`, `fDAQmx_CTR_IsPulseFinished`, `fDAQmx_CTR_ReadCounter`, `fDAQmx_CTR_ReadWithOptions`, `fDAQmx_CTR_SetPulseFrequency`, `fDAQmx_CTR_Start`, `fDAQmx_DeviceNames`, `fDAQmx_DIO_Finished`, `fDAQmx_DIO_PortWidth`, `fDAQmx_DIO_Read`, `fDAQmx_DIO_Write`, `fDAQmx_DisconnectTerminals`, `fDAQmx_ErrorString`, `fDAQmx_ExternalCalDate`, `fDAQmx_NumAnalogInputs`, `fDAQmx_NumAnalogOutputs`, `fDAQmx_NumCounters`, `fDAQmx_NumDIOPorts`, `fDAQmx_ReadChan`, `fDAQmx_ReadNamedChan`, `fDAQmx_ResetDevice`, `fDAQmx_ScanGetAvailable`, `fDAQmx_ScanGetNextIndex`, `fDAQmx_ScanStart`, `fDAQmx_ScanStop`, `fDAQmx_ScanWait`, `fDAQmx_ScanWaitWithTimeout`, `fDAQmx_SelfCalDate`, `fDAQmx_SelfCalibration`, `fDAQmx_WaveformStart`, `fDAQmx_WaveformStop`, `fDAQmx_WF_IsFinished`, `fDAQmx_WF_WaitUntilFinished`, `fDAQmx_WriteChan`, `FetchURL`, `FindDimLabel`, `FindListItem`, `floor`, `FontList`, `FontSizeHeight`, `FontSizeStringWidth`, `FresnelCos`, `FresnelSin`, `FuncRefInfo`, `FunctionInfo`, `FunctionList`, `FunctionPath`, `gamma`, `gammaEuler`, `gammaInc`, `gammaNoise`, `gammln`, `gammp`, `gammq`, `Gauss`, `Gauss1D`, `Gauss2D`, `gcd`, `GetBrowserLine`, `GetBrowserSelection`, `GetDataFolder`, `GetDataFolderDFR`, `GetDefaultFont`, `GetDefaultFontSize`, `GetDefaultFontStyle`, `GetDimLabel`, `GetEnvironmentVariable`, `GetErrMessage`, `GetFormula`, `GetIndependentModuleName`, `GetIndexedObjName`, `GetIndexedObjNameDFR`, `GetKeyState`, `GetRTErrMessage`, `GetRTError`, `GetRTLocation`, `GetRTLocInfo`, `GetRTStackInfo`, `GetScrapText`, `GetUserData`, `GetWavesDataFolder`, `GetWavesDataFolderDFR`, `GISGetAllFileFormats`, `GISSRefsAreEqual`, `GizmoInfo`, `GizmoScale`, `gnoise`, `GrepList`, `GrepString`, `GuideInfo`, `GuideNameList`, `Hash`, `hcsr`, `HDF5AttributeInfo`, `HDF5DatasetInfo`, `HDF5LibraryInfo`, `HDF5TypeInfo`, `hermite`, `hermiteGauss`, `HyperGNoise`, `HyperGPFQ`, `HyperG0F1`, `HyperG1F1`, `HyperG2F1`, `IgorInfo`, `IgorVersion`, `imag`, `ImageInfo`, `ImageNameList`, `ImageNameToWaveRef`, `IndependentModuleList`, `IndexedDir`, `IndexedFile`, `IndexToScale`, `Inf`, `Integrate1D`, `interp`, `Interp2D`, `Interp3D`, `inverseERF`, `inverseERFC`, `ItemsInList`, `JacobiCn`, `JacobiSn`, `JulianToDate`, `Laguerre`, `LaguerreA`, `LaguerreGauss`, `LambertW`, `LayoutInfo`, `leftx`, `LegendreA`, `limit`, `ListMatch`, `ListToTextWave`, `ListToWaveRefWave`, `ln`, `log`, `logNormalNoise`, `lorentzianNoise`, `LowerStr`, `MacroList`, `magsqr`, `MandelbrotPoint`, `MarcumQ`, `MatrixCondition`, `MatrixDet`, `MatrixDot`, `MatrixRank`, `MatrixTrace`, `max`, `MCC_AutoBridgeBal`, `MCC_AutoFastComp`, `MCC_AutoPipetteOffset`, `MCC_AutoSlowComp`, `MCC_AutoWholeCellComp`, `MCC_GetBridgeBalEnable`, `MCC_GetBridgeBalResist`, `MCC_GetFastCompCap`, `MCC_GetFastCompTau`, `MCC_GetHolding`, `MCC_GetHoldingEnable`, `MCC_GetMode`, `MCC_GetNeutralizationCap`, `MCC_GetNeutralizationEnable`, `MCC_GetOscKillerEnable`, `MCC_GetPipetteOffset`, `MCC_GetPrimarySignalGain`, `MCC_GetPrimarySignalHPF`, `MCC_GetPrimarySignalLPF`, `MCC_GetRsCompBandwidth`, `MCC_GetRsCompCorrection`, `MCC_GetRsCompEnable`, `MCC_GetRsCompPrediction`, `MCC_GetSecondarySignalGain`, `MCC_GetSecondarySignalLPF`, `MCC_GetSlowCompCap`, `MCC_GetSlowCompTau`, `MCC_GetSlowCompTauX20Enable`, `MCC_GetSlowCurrentInjEnable`, `MCC_GetSlowCurrentInjLevel`, `MCC_GetSlowCurrentInjSetlTime`, `MCC_GetWholeCellCompCap`, `MCC_GetWholeCellCompEnable`, `MCC_GetWholeCellCompResist`, `MCC_SelectMultiClamp700B`, `MCC_SetBridgeBalEnable`, `MCC_SetBridgeBalResist`, `MCC_SetFastCompCap`, `MCC_SetFastCompTau`, `MCC_SetHolding`, `MCC_SetHoldingEnable`, `MCC_SetMode`, `MCC_SetNeutralizationCap`, `MCC_SetNeutralizationEnable`, `MCC_SetOscKillerEnable`, `MCC_SetPipetteOffset`, `MCC_SetPrimarySignalGain`, `MCC_SetPrimarySignalHPF`, `MCC_SetPrimarySignalLPF`, `MCC_SetRsCompBandwidth`, `MCC_SetRsCompCorrection`, `MCC_SetRsCompEnable`, `MCC_SetRsCompPrediction`, `MCC_SetSecondarySignalGain`, `MCC_SetSecondarySignalLPF`, `MCC_SetSlowCompCap`, `MCC_SetSlowCompTau`, `MCC_SetSlowCompTauX20Enable`, `MCC_SetSlowCurrentInjEnable`, `MCC_SetSlowCurrentInjLevel`, `MCC_SetSlowCurrentInjSetlTime`, `MCC_SetTimeoutMs`, `MCC_SetWholeCellCompCap`, `MCC_SetWholeCellCompEnable`, `MCC_SetWholeCellCompResist`, `mean`, `median`, `min`, `mod`, `ModDate`, `MPFXEMGPeak`, `MPFXExpConvExpPeak`, `MPFXGaussPeak`, `MPFXLorenzianPeak`, `MPFXVoigtPeak`, `NameOfWave`, `NaN`, `NewFreeDataFolder`, `NewFreeWave`, `norm`, `NormalizeUnicode`, `note`, `NumberByKey`, `numpnts`, `numtype`, `NumVarOrDefault`, `num2char`, `num2istr`, `num2str`, `NVAR_Exists`, `OperationList`, `PadString`, `PanelResolution`, `ParamIsDefault`, `ParseFilePath`, `PathList`, `pcsr`, `Pi`, `PICTInfo`, `PICTList`, `PixelFromAxisVal`, `pnt2x`, `poissonNoise`, `poly`, `PolygonArea`, `poly2D`, `PossiblyQuoteName`, `ProcedureText`, `p2rect`, `qcsr`, `real`, `RemoveByKey`, `RemoveEnding`, `RemoveFromList`, `RemoveListItem`, `ReplaceNumberByKey`, `ReplaceString`, `ReplaceStringByKey`, `rightx`, `round`, `r2polar`, `sawtooth`, `scaleToIndex`, `ScreenResolution`, `sec`, `sech`, `Secs2Date`, `Secs2Time`, `SelectNumber`, `SelectString`, `SetEnvironmentVariable`, `sign`, `sin`, `sinc`, `sinh`, `sinIntegral`, `SortList`, `SpecialCharacterInfo`, `SpecialCharacterList`, `SpecialDirPath`, `SphericalBessJ`, `SphericalBessJD`, `SphericalBessY`, `SphericalBessYD`, `SphericalHarmonics`, `SQLAllocHandle`, `SQLAllocStmt`, `SQLBinaryWavesToTextWave`, `SQLBindCol`, `SQLBindParameter`, `SQLBrowseConnect`, `SQLBulkOperations`, `SQLCancel`, `SQLCloseCursor`, `SQLColAttributeNum`, `SQLColAttributeStr`, `SQLColumnPrivileges`, `SQLColumns`, `SQLConnect`, `SQLDataSources`, `SQLDescribeCol`, `SQLDescribeParam`, `SQLDisconnect`, `SQLDriverConnect`, `SQLDrivers`, `SQLEndTran`, `SQLError`, `SQLExecDirect`, `SQLExecute`, `SQLFetch`, `SQLFetchScroll`, `SQLForeignKeys`, `SQLFreeConnect`, `SQLFreeEnv`, `SQLFreeHandle`, `SQLFreeStmt`, `SQLGetConnectAttrNum`, `SQLGetConnectAttrStr`, `SQLGetCursorName`, `SQLGetDataNum`, `SQLGetDataStr`, `SQLGetDescFieldNum`, `SQLGetDescFieldStr`, `SQLGetDescRec`, `SQLGetDiagFieldNum`, `SQLGetDiagFieldStr`, `SQLGetDiagRec`, `SQLGetEnvAttrNum`, `SQLGetEnvAttrStr`, `SQLGetFunctions`, `SQLGetInfoNum`, `SQLGetInfoStr`, `SQLGetStmtAttrNum`, `SQLGetStmtAttrStr`, `SQLGetTypeInfo`, `SQLMoreResults`, `SQLNativeSql`, `SQLNumParams`, `SQLNumResultCols`, `SQLNumResultRowsIfKnown`, `SQLNumRowsFetched`, `SQLParamData`, `SQLPrepare`, `SQLPrimaryKeys`, `SQLProcedureColumns`, `SQLProcedures`, `SQLPutData`, `SQLReinitialize`, `SQLRowCount`, `SQLSetConnectAttrNum`, `SQLSetConnectAttrStr`, `SQLSetCursorName`, `SQLSetDescFieldNum`, `SQLSetDescFieldStr`, `SQLSetDescRec`, `SQLSetEnvAttrNum`, `SQLSetEnvAttrStr`, `SQLSetPos`, `SQLSetStmtAttrNum`, `SQLSetStmtAttrStr`, `SQLSpecialColumns`, `SQLStatistics`, `SQLTablePrivileges`, `SQLTables`, `SQLTextWaveToBinaryWaves`, `SQLTextWaveTo2DBinaryWave`, `SQLUpdateBoundValues`, `SQLXOPCheckState`, `SQL2DBinaryWaveToTextWave`, `sqrt`, `StartMSTimer`, `StatsBetaCDF`, `StatsBetaPDF`, `StatsBinomialCDF`, `StatsBinomialPDF`, `StatsCauchyCDF`, `StatsCauchyPDF`, `StatsChiCDF`, `StatsChiPDF`, `StatsCMSSDCDF`, `StatsCorrelation`, `StatsDExpCDF`, `StatsDExpPDF`, `StatsErlangCDF`, `StatsErlangPDF`, `StatsErrorPDF`, `StatsEValueCDF`, `StatsEValuePDF`, `StatsExpCDF`, `StatsExpPDF`, `StatsFCDF`, `StatsFPDF`, `StatsFriedmanCDF`, `StatsGammaCDF`, `StatsGammaPDF`, `StatsGeometricCDF`, `StatsGeometricPDF`, `StatsGEVCDF`, `StatsGEVPDF`, `StatsHyperGCDF`, `StatsHyperGPDF`, `StatsInvBetaCDF`, `StatsInvBinomialCDF`, `StatsInvCauchyCDF`, `StatsInvChiCDF`, `StatsInvCMSSDCDF`, `StatsInvDExpCDF`, `StatsInvEValueCDF`, `StatsInvExpCDF`, `StatsInvFCDF`, `StatsInvFriedmanCDF`, `StatsInvGammaCDF`, `StatsInvGeometricCDF`, `StatsInvKuiperCDF`, `StatsInvLogisticCDF`, `StatsInvLogNormalCDF`, `StatsInvMaxwellCDF`, `StatsInvMooreCDF`, `StatsInvNBinomialCDF`, `StatsInvNCChiCDF`, `StatsInvNCFCDF`, `StatsInvNormalCDF`, `StatsInvParetoCDF`, `StatsInvPoissonCDF`, `StatsInvPowerCDF`, `StatsInvQCDF`, `StatsInvQpCDF`, `StatsInvRayleighCDF`, `StatsInvRectangularCDF`, `StatsInvSpearmanCDF`, `StatsInvStudentCDF`, `StatsInvTopDownCDF`, `StatsInvTriangularCDF`, `StatsInvUsquaredCDF`, `StatsInvVonMisesCDF`, `StatsInvWeibullCDF`, `StatsKuiperCDF`, `StatsLogisticCDF`, `StatsLogisticPDF`, `StatsLogNormalCDF`, `StatsLogNormalPDF`, `StatsMaxwellCDF`, `StatsMaxwellPDF`, `StatsMedian`, `StatsMooreCDF`, `StatsNBinomialCDF`, `StatsNBinomialPDF`, `StatsNCChiCDF`, `StatsNCChiPDF`, `StatsNCFCDF`, `StatsNCFPDF`, `StatsNCTCDF`, `StatsNCTPDF`, `StatsNormalCDF`, `StatsNormalPDF`, `StatsParetoCDF`, `StatsParetoPDF`, `StatsPermute`, `StatsPoissonCDF`, `StatsPoissonPDF`, `StatsPowerCDF`, `StatsPowerNoise`, `StatsPowerPDF`, `StatsQCDF`, `StatsQpCDF`, `StatsRayleighCDF`, `StatsRayleighPDF`, `StatsRectangularCDF`, `StatsRectangularPDF`, `StatsRunsCDF`, `StatsSpearmanRhoCDF`, `StatsStudentCDF`, `StatsStudentPDF`, `StatsTopDownCDF`, `StatsTriangularCDF`, `StatsTriangularPDF`, `StatsTrimmedMean`, `StatsUSquaredCDF`, `StatsVonMisesCDF`, `StatsVonMisesNoise`, `StatsVonMisesPDF`, `StatsWaldCDF`, `StatsWaldPDF`, `StatsWeibullCDF`, `StatsWeibullPDF`, `StopMSTimer`, `StringByKey`, `stringCRC`, `StringFromList`, `StringList`, `stringmatch`, `strlen`, `strsearch`, `StrVarOrDefault`, `str2num`, `StudentA`, `StudentT`, `sum`, `SVAR_Exists`, `TableInfo`, `TagVal`, `TagWaveRef`, `tan`, `tango_close_device`, `tango_command_inout`, `tango_compute_image_proj`, `tango_get_dev_attr_list`, `tango_get_dev_black_box`, `tango_get_dev_cmd_list`, `tango_get_dev_status`, `tango_get_dev_timeout`, `tango_get_error_stack`, `tango_open_device`, `tango_ping_device`, `tango_read_attribute`, `tango_read_attributes`, `tango_reload_dev_interface`, `tango_resume_attr_monitor`, `tango_set_attr_monitor_period`, `tango_set_dev_timeout`, `tango_start_attr_monitor`, `tango_stop_attr_monitor`, `tango_suspend_attr_monitor`, `tango_write_attribute`, `tango_write_attributes`, `tanh`, `TDMAddChannel`, `TDMAddGroup`, `TDMAppendDataValues`, `TDMAppendDataValuesTime`, `TDMChannelPropertyExists`, `TDMCloseChannel`, `TDMCloseFile`, `TDMCloseGroup`, `TDMCreateChannelProperty`, `TDMCreateFile`, `TDMCreateFileProperty`, `TDMCreateGroupProperty`, `TDMFilePropertyExists`, `TDMGetChannelPropertyNames`, `TDMGetChannelPropertyNum`, `TDMGetChannelPropertyStr`, `TDMGetChannelPropertyTime`, `TDMGetChannelPropertyType`, `TDMGetChannels`, `TDMGetChannelStringPropertyLen`, `TDMGetDataType`, `TDMGetDataValues`, `TDMGetDataValuesTime`, `TDMGetFilePropertyNames`, `TDMGetFilePropertyNum`, `TDMGetFilePropertyStr`, `TDMGetFilePropertyTime`, `TDMGetFilePropertyType`, `TDMGetFileStringPropertyLen`, `TDMGetGroupPropertyNames`, `TDMGetGroupPropertyNum`, `TDMGetGroupPropertyStr`, `TDMGetGroupPropertyTime`, `TDMGetGroupPropertyType`, `TDMGetGroups`, `TDMGetGroupStringPropertyLen`, `TDMGetLibraryErrorDescription`, `TDMGetNumChannelProperties`, `TDMGetNumChannels`, `TDMGetNumDataValues`, `TDMGetNumFileProperties`, `TDMGetNumGroupProperties`, `TDMGetNumGroups`, `TDMGroupPropertyExists`, `TDMOpenFile`, `TDMOpenFileEx`, `TDMRemoveChannel`, `TDMRemoveGroup`, `TDMReplaceDataValues`, `TDMReplaceDataValuesTime`, `TDMSaveFile`, `TDMSetChannelPropertyNum`, `TDMSetChannelPropertyStr`, `TDMSetChannelPropertyTime`, `TDMSetDataValues`, `TDMSetDataValuesTime`, `TDMSetFilePropertyNum`, `TDMSetFilePropertyStr`, `TDMSetFilePropertyTime`, `TDMSetGroupPropertyNum`, `TDMSetGroupPropertyStr`, `TDMSetGroupPropertyTime`, `TextEncodingCode`, `TextEncodingName`, `TextFile`, `ThreadGroupCreate`, `ThreadGroupGetDF`, `ThreadGroupGetDFR`, `ThreadGroupRelease`, `ThreadGroupWait`, `ThreadProcessorCount`, `ThreadReturnValue`, `ticks`, `time`, `TraceFromPixel`, `TraceInfo`, `TraceNameList`, `TraceNameToWaveRef`, `TrimString`, `trunc`, `UniqueName`, `UnPadString`, `UnsetEnvironmentVariable`, `UpperStr`, `URLDecode`, `URLEncode`, `VariableList`, `Variance`, `vcsr`, `viAssertIntrSignal`, `viAssertTrigger`, `viAssertUtilSignal`, `viClear`, `viClose`, `viDisableEvent`, `viDiscardEvents`, `viEnableEvent`, `viFindNext`, `viFindRsrc`, `viGetAttribute`, `viGetAttributeString`, `viGpibCommand`, `viGpibControlATN`, `viGpibControlREN`, `viGpibPassControl`, `viGpibSendIFC`, `viIn8`, `viIn16`, `viIn32`, `viLock`, `viMapAddress`, `viMapTrigger`, `viMemAlloc`, `viMemFree`, `viMoveIn8`, `viMoveIn16`, `viMoveIn32`, `viMoveOut8`, `viMoveOut16`, `viMoveOut32`, `viOpen`, `viOpenDefaultRM`, `viOut8`, `viOut16`, `viOut32`, `viPeek8`, `viPeek16`, `viPeek32`, `viPoke8`, `viPoke16`, `viPoke32`, `viRead`, `viReadSTB`, `viSetAttribute`, `viSetAttributeString`, `viStatusDesc`, `viTerminate`, `viUnlock`, `viUnmapAddress`, `viUnmapTrigger`, `viUsbControlIn`, `viUsbControlOut`, `viVxiCommandQuery`, `viWaitOnEvent`, `viWrite`, `VoigtFunc`, `VoigtPeak`, `WaveCRC`, `WaveDims`, `WaveExists`, `WaveHash`, `WaveInfo`, `WaveList`, `WaveMax`, `WaveMin`, `WaveName`, `WaveRefIndexed`, `WaveRefIndexedDFR`, `WaveRefsEqual`, `WaveRefWaveToList`, `WaveTextEncoding`, `WaveType`, `WaveUnits`, `WhichListItem`, `WinList`, `WinName`, `WinRecreation`, `WinType`, `wnoise`, `xcsr`, `XWaveName`, `XWaveRefFromTrace`, `x2pnt`, `zcsr`, `ZernikeR`, `zeromq_client_connect`, `zeromq_client_connect`, `zeromq_client_recv`, `zeromq_client_recv`, `zeromq_client_send`, `zeromq_client_send`, `zeromq_handler_start`, `zeromq_handler_start`, `zeromq_handler_stop`, `zeromq_handler_stop`, `zeromq_server_bind`, `zeromq_server_bind`, `zeromq_server_recv`, `zeromq_server_recv`, `zeromq_server_send`, `zeromq_server_send`, `zeromq_set`, `zeromq_set`, `zeromq_stop`, `zeromq_stop`, `zeromq_test_callfunction`, `zeromq_test_callfunction`, `zeromq_test_serializeWave`, `zeromq_test_serializeWave`, `zeta`), NameFunction, nil},\n-\t\t\t{`^#(include|pragma|define|undef|ifdef|ifndef|if|elif|else|endif)`, NameDecorator, nil},\n-\t\t\t{`[^a-z\"/]+$`, Text, nil},\n-\t\t\t{`.`, Text, nil},\n-\t\t\t{`\\n|\\r`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "46b2ce23855035aacde8bedfeb7219c99ed5428d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/i/ini.go",
      "status": "removed",
      "additions": 0,
      "deletions": 29,
      "changes": 29,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fi%2Fini.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fi%2Fini.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fi%2Fini.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,29 +0,0 @@\n-package i\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Ini lexer.\n-var Ini = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"INI\",\n-\t\tAliases:   []string{\"ini\", \"cfg\", \"dosini\"},\n-\t\tFilenames: []string{\"*.ini\", \"*.cfg\", \"*.inf\", \".gitconfig\", \".editorconfig\"},\n-\t\tMimeTypes: []string{\"text/x-ini\", \"text/inf\"},\n-\t},\n-\tiniRules,\n-))\n-\n-func iniRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`[;#].*`, CommentSingle, nil},\n-\t\t\t{`\\[.*?\\]$`, Keyword, nil},\n-\t\t\t{`(.*?)([ \\t]*)(=)([ \\t]*)(.*(?:\\n[ \\t].+)*)`, ByGroups(NameAttribute, Text, Operator, Text, LiteralString), nil},\n-\t\t\t{`(.+?)$`, NameAttribute, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "8b2e53a0742df2afa1630b9afa03fa55a06bf863",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/i/io.go",
      "status": "removed",
      "additions": 0,
      "deletions": 44,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fi%2Fio.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fi%2Fio.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fi%2Fio.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,44 +0,0 @@\n-package i\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Io lexer.\n-var Io = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Io\",\n-\t\tAliases:   []string{\"io\"},\n-\t\tFilenames: []string{\"*.io\"},\n-\t\tMimeTypes: []string{\"text/x-iosrc\"},\n-\t},\n-\tioRules,\n-))\n-\n-func ioRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`//(.*?)\\n`, CommentSingle, nil},\n-\t\t\t{`#(.*?)\\n`, CommentSingle, nil},\n-\t\t\t{`/(\\\\\\n)?[*](.|\\n)*?[*](\\\\\\n)?/`, CommentMultiline, nil},\n-\t\t\t{`/\\+`, CommentMultiline, Push(\"nestedcomment\")},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`::=|:=|=|\\(|\\)|;|,|\\*|-|\\+|>|<|@|!|/|\\||\\^|\\.|%|&|\\[|\\]|\\{|\\}`, Operator, nil},\n-\t\t\t{`(clone|do|doFile|doString|method|for|if|else|elseif|then)\\b`, Keyword, nil},\n-\t\t\t{`(nil|false|true)\\b`, NameConstant, nil},\n-\t\t\t{`(Object|list|List|Map|args|Sequence|Coroutine|File)\\b`, NameBuiltin, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t\t{`(\\d+\\.?\\d*|\\d*\\.\\d+)([eE][+-]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n-\t\t},\n-\t\t\"nestedcomment\": {\n-\t\t\t{`[^+/]+`, CommentMultiline, nil},\n-\t\t\t{`/\\+`, CommentMultiline, Push()},\n-\t\t\t{`\\+/`, CommentMultiline, Pop(1)},\n-\t\t\t{`[+/]`, CommentMultiline, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "9a2a4e3c044da2f9be376b7a4376e169d839378c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/j/j.go",
      "status": "removed",
      "additions": 0,
      "deletions": 77,
      "changes": 77,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fj.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fj.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fj.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,77 +0,0 @@\n-package j\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// J lexer.\n-var J = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"J\",\n-\t\tAliases:   []string{\"j\"},\n-\t\tFilenames: []string{\"*.ijs\"},\n-\t\tMimeTypes: []string{\"text/x-j\"},\n-\t},\n-\tjRules,\n-))\n-\n-func jRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`#!.*$`, CommentPreproc, nil},\n-\t\t\t{`NB\\..*`, CommentSingle, nil},\n-\t\t\t{`\\n+\\s*Note`, CommentMultiline, Push(\"comment\")},\n-\t\t\t{`\\s*Note.*`, CommentSingle, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`'`, LiteralString, Push(\"singlequote\")},\n-\t\t\t{`0\\s+:\\s*0|noun\\s+define\\s*$`, NameEntity, Push(\"nounDefinition\")},\n-\t\t\t{`(([1-4]|13)\\s+:\\s*0|(adverb|conjunction|dyad|monad|verb)\\s+define)\\b`, NameFunction, Push(\"explicitDefinition\")},\n-\t\t\t{Words(``, `\\b[a-zA-Z]\\w*\\.`, `for_`, `goto_`, `label_`), NameLabel, nil},\n-\t\t\t{Words(``, `\\.`, `assert`, `break`, `case`, `catch`, `catchd`, `catcht`, `continue`, `do`, `else`, `elseif`, `end`, `fcase`, `for`, `if`, `return`, `select`, `throw`, `try`, `while`, `whilst`), NameLabel, nil},\n-\t\t\t{`\\b[a-zA-Z]\\w*`, NameVariable, nil},\n-\t\t\t{Words(``, ``, `ARGV`, `CR`, `CRLF`, `DEL`, `Debug`, `EAV`, `EMPTY`, `FF`, `JVERSION`, `LF`, `LF2`, `Note`, `TAB`, `alpha17`, `alpha27`, `apply`, `bind`, `boxopen`, `boxxopen`, `bx`, `clear`, `cutLF`, `cutopen`, `datatype`, `def`, `dfh`, `drop`, `each`, `echo`, `empty`, `erase`, `every`, `evtloop`, `exit`, `expand`, `fetch`, `file2url`, `fixdotdot`, `fliprgb`, `getargs`, `getenv`, `hfd`, `inv`, `inverse`, `iospath`, `isatty`, `isutf8`, `items`, `leaf`, `list`, `nameclass`, `namelist`, `names`, `nc`, `nl`, `on`, `pick`, `rows`, `script`, `scriptd`, `sign`, `sminfo`, `smoutput`, `sort`, `split`, `stderr`, `stdin`, `stdout`, `table`, `take`, `timespacex`, `timex`, `tmoutput`, `toCRLF`, `toHOST`, `toJ`, `tolower`, `toupper`, `type`, `ucp`, `ucpcount`, `usleep`, `utf8`, `uucp`), NameFunction, nil},\n-\t\t\t{`=[.:]`, Operator, nil},\n-\t\t\t{\"[-=+*#$%@!~`^&\\\";:.,<>{}\\\\[\\\\]\\\\\\\\|/]\", Operator, nil},\n-\t\t\t{`[abCdDeEfHiIjLMoprtT]\\.`, KeywordReserved, nil},\n-\t\t\t{`[aDiLpqsStux]\\:`, KeywordReserved, nil},\n-\t\t\t{`(_[0-9])\\:`, KeywordConstant, nil},\n-\t\t\t{`\\(`, Punctuation, Push(\"parentheses\")},\n-\t\t\tInclude(\"numbers\"),\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`[^)]`, CommentMultiline, nil},\n-\t\t\t{`^\\)`, CommentMultiline, Pop(1)},\n-\t\t\t{`[)]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"explicitDefinition\": {\n-\t\t\t{`\\b[nmuvxy]\\b`, NameDecorator, nil},\n-\t\t\tInclude(\"root\"),\n-\t\t\t{`[^)]`, Name, nil},\n-\t\t\t{`^\\)`, NameLabel, Pop(1)},\n-\t\t\t{`[)]`, Name, nil},\n-\t\t},\n-\t\t\"numbers\": {\n-\t\t\t{`\\b_{1,2}\\b`, LiteralNumber, nil},\n-\t\t\t{`_?\\d+(\\.\\d+)?(\\s*[ejr]\\s*)_?\\d+(\\.?=\\d+)?`, LiteralNumber, nil},\n-\t\t\t{`_?\\d+\\.(?=\\d+)`, LiteralNumberFloat, nil},\n-\t\t\t{`_?\\d+x`, LiteralNumberIntegerLong, nil},\n-\t\t\t{`_?\\d+`, LiteralNumberInteger, nil},\n-\t\t},\n-\t\t\"nounDefinition\": {\n-\t\t\t{`[^)]`, LiteralString, nil},\n-\t\t\t{`^\\)`, NameLabel, Pop(1)},\n-\t\t\t{`[)]`, LiteralString, nil},\n-\t\t},\n-\t\t\"parentheses\": {\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t\tInclude(\"explicitDefinition\"),\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"singlequote\": {\n-\t\t\t{`[^']`, LiteralString, nil},\n-\t\t\t{`''`, LiteralString, nil},\n-\t\t\t{`'`, LiteralString, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "48a9d9fee84129338b71efd449d40b1b42a3fe6c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/j/java.go",
      "status": "removed",
      "additions": 0,
      "deletions": 56,
      "changes": 56,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fjava.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fjava.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fjava.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,56 +0,0 @@\n-package j\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Java lexer.\n-var Java = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Java\",\n-\t\tAliases:   []string{\"java\"},\n-\t\tFilenames: []string{\"*.java\"},\n-\t\tMimeTypes: []string{\"text/x-java\"},\n-\t\tDotAll:    true,\n-\t\tEnsureNL:  true,\n-\t},\n-\tjavaRules,\n-))\n-\n-func javaRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n-\t\t\t{`(assert|break|case|catch|continue|default|do|else|finally|for|if|goto|instanceof|new|return|switch|this|throw|try|while)\\b`, Keyword, nil},\n-\t\t\t{`((?:(?:[^\\W\\d]|\\$)[\\w.\\[\\]$<>]*\\s+)+?)((?:[^\\W\\d]|\\$)[\\w$]*)(\\s*)(\\()`, ByGroups(UsingSelf(\"root\"), NameFunction, Text, Operator), nil},\n-\t\t\t{`@[^\\W\\d][\\w.]*`, NameDecorator, nil},\n-\t\t\t{`(abstract|const|enum|extends|final|implements|native|private|protected|public|static|strictfp|super|synchronized|throws|transient|volatile)\\b`, KeywordDeclaration, nil},\n-\t\t\t{`(boolean|byte|char|double|float|int|long|short|void)\\b`, KeywordType, nil},\n-\t\t\t{`(package)(\\s+)`, ByGroups(KeywordNamespace, Text), Push(\"import\")},\n-\t\t\t{`(true|false|null)\\b`, KeywordConstant, nil},\n-\t\t\t{`(class|interface)(\\s+)`, ByGroups(KeywordDeclaration, Text), Push(\"class\")},\n-\t\t\t{`(import(?:\\s+static)?)(\\s+)`, ByGroups(KeywordNamespace, Text), Push(\"import\")},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`'\\\\.'|'[^\\\\]'|'\\\\u[0-9a-fA-F]{4}'`, LiteralStringChar, nil},\n-\t\t\t{`(\\.)((?:[^\\W\\d]|\\$)[\\w$]*)`, ByGroups(Operator, NameAttribute), nil},\n-\t\t\t{`^\\s*([^\\W\\d]|\\$)[\\w$]*:`, NameLabel, nil},\n-\t\t\t{`([^\\W\\d]|\\$)[\\w$]*`, Name, nil},\n-\t\t\t{`([0-9][0-9_]*\\.([0-9][0-9_]*)?|\\.[0-9][0-9_]*)([eE][+\\-]?[0-9][0-9_]*)?[fFdD]?|[0-9][eE][+\\-]?[0-9][0-9_]*[fFdD]?|[0-9]([eE][+\\-]?[0-9][0-9_]*)?[fFdD]|0[xX]([0-9a-fA-F][0-9a-fA-F_]*\\.?|([0-9a-fA-F][0-9a-fA-F_]*)?\\.[0-9a-fA-F][0-9a-fA-F_]*)[pP][+\\-]?[0-9][0-9_]*[fFdD]?`, LiteralNumberFloat, nil},\n-\t\t\t{`0[xX][0-9a-fA-F][0-9a-fA-F_]*[lL]?`, LiteralNumberHex, nil},\n-\t\t\t{`0[bB][01][01_]*[lL]?`, LiteralNumberBin, nil},\n-\t\t\t{`0[0-7_]+[lL]?`, LiteralNumberOct, nil},\n-\t\t\t{`0|[1-9][0-9_]*[lL]?`, LiteralNumberInteger, nil},\n-\t\t\t{`[~^*!%&\\[\\](){}<>|+=:;,./?-]`, Operator, nil},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t},\n-\t\t\"class\": {\n-\t\t\t{`([^\\W\\d]|\\$)[\\w$]*`, NameClass, Pop(1)},\n-\t\t},\n-\t\t\"import\": {\n-\t\t\t{`[\\w.]+\\*?`, NameNamespace, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "5c6b9379418b639bbe2432c432654f524803adfb",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/j/javascript.go",
      "status": "removed",
      "additions": 0,
      "deletions": 74,
      "changes": 74,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fjavascript.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fjavascript.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fjavascript.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,74 +0,0 @@\n-package j\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Javascript lexer.\n-var JavascriptRules = Rules{\n-\t\"commentsandwhitespace\": {\n-\t\t{`\\s+`, Text, nil},\n-\t\t{`<!--`, Comment, nil},\n-\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n-\t},\n-\t\"slashstartsregex\": {\n-\t\tInclude(\"commentsandwhitespace\"),\n-\t\t{`/(\\\\.|[^[/\\\\\\n]|\\[(\\\\.|[^\\]\\\\\\n])*])+/([gimuy]+\\b|\\B)`, LiteralStringRegex, Pop(1)},\n-\t\t{`(?=/)`, Text, Push(\"#pop\", \"badregex\")},\n-\t\tDefault(Pop(1)),\n-\t},\n-\t\"badregex\": {\n-\t\t{`\\n`, Text, Pop(1)},\n-\t},\n-\t\"root\": {\n-\t\t{`\\A#! ?/.*?\\n`, CommentHashbang, nil},\n-\t\t{`^(?=\\s|/|<!--)`, Text, Push(\"slashstartsregex\")},\n-\t\tInclude(\"commentsandwhitespace\"),\n-\t\t{`\\d+(\\.\\d*|[eE][+\\-]?\\d+)`, LiteralNumberFloat, nil},\n-\t\t{`0[bB][01]+`, LiteralNumberBin, nil},\n-\t\t{`0[oO][0-7]+`, LiteralNumberOct, nil},\n-\t\t{`0[xX][0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t{`[0-9][0-9_]*`, LiteralNumberInteger, nil},\n-\t\t{`\\.\\.\\.|=>`, Punctuation, nil},\n-\t\t{`\\+\\+|--|~|&&|\\?|:|\\|\\||\\\\(?=\\n)|(<<|>>>?|==?|!=?|[-<>+*%&|^/])=?`, Operator, Push(\"slashstartsregex\")},\n-\t\t{`[{(\\[;,]`, Punctuation, Push(\"slashstartsregex\")},\n-\t\t{`[})\\].]`, Punctuation, nil},\n-\t\t{`(for|in|while|do|break|return|continue|switch|case|default|if|else|throw|try|catch|finally|new|delete|typeof|instanceof|void|yield|this|of)\\b`, Keyword, Push(\"slashstartsregex\")},\n-\t\t{`(var|let|with|function)\\b`, KeywordDeclaration, Push(\"slashstartsregex\")},\n-\t\t{`(abstract|async|await|boolean|byte|char|class|const|debugger|double|enum|export|extends|final|float|goto|implements|import|int|interface|long|native|package|private|protected|public|short|static|super|synchronized|throws|transient|volatile)\\b`, KeywordReserved, nil},\n-\t\t{`(true|false|null|NaN|Infinity|undefined)\\b`, KeywordConstant, nil},\n-\t\t{`(Array|Boolean|Date|Error|Function|Math|netscape|Number|Object|Packages|RegExp|String|Promise|Proxy|sun|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|Error|eval|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|document|this|window)\\b`, NameBuiltin, nil},\n-\t\t{`(?:[$_\\p{L}\\p{N}]|\\\\u[a-fA-F0-9]{4})(?:(?:[$\\p{L}\\p{N}]|\\\\u[a-fA-F0-9]{4}))*`, NameOther, nil},\n-\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t{\"`\", LiteralStringBacktick, Push(\"interp\")},\n-\t},\n-\t\"interp\": {\n-\t\t{\"`\", LiteralStringBacktick, Pop(1)},\n-\t\t{`\\\\\\\\`, LiteralStringBacktick, nil},\n-\t\t{\"\\\\\\\\`\", LiteralStringBacktick, nil},\n-\t\t{\"\\\\\\\\[^`\\\\\\\\]\", LiteralStringBacktick, nil},\n-\t\t{`\\$\\{`, LiteralStringInterpol, Push(\"interp-inside\")},\n-\t\t{`\\$`, LiteralStringBacktick, nil},\n-\t\t{\"[^`\\\\\\\\$]+\", LiteralStringBacktick, nil},\n-\t},\n-\t\"interp-inside\": {\n-\t\t{`\\}`, LiteralStringInterpol, Pop(1)},\n-\t\tInclude(\"root\"),\n-\t},\n-}\n-\n-// Javascript lexer.\n-var Javascript = internal.Register(MustNewLexer( // nolint: forbidigo\n-\t&Config{\n-\t\tName:      \"JavaScript\",\n-\t\tAliases:   []string{\"js\", \"javascript\"},\n-\t\tFilenames: []string{\"*.js\", \"*.jsm\", \"*.mjs\"},\n-\t\tMimeTypes: []string{\"application/javascript\", \"application/x-javascript\", \"text/x-javascript\", \"text/javascript\"},\n-\t\tDotAll:    true,\n-\t\tEnsureNL:  true,\n-\t},\n-\tJavascriptRules,\n-))"
    },
    {
      "sha": "daf6dc3105736c24552871917a96f7aaac162572",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/j/json.go",
      "status": "removed",
      "additions": 0,
      "deletions": 65,
      "changes": 65,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fjson.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fjson.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fjson.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,65 +0,0 @@\n-package j\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// JSON lexer.\n-var JSON = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:         \"JSON\",\n-\t\tAliases:      []string{\"json\"},\n-\t\tFilenames:    []string{\"*.json\"},\n-\t\tMimeTypes:    []string{\"application/json\"},\n-\t\tNotMultiline: true,\n-\t\tDotAll:       true,\n-\t},\n-\tjsonRules,\n-))\n-\n-func jsonRules() Rules {\n-\treturn Rules{\n-\t\t\"whitespace\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t},\n-\t\t\"simplevalue\": {\n-\t\t\t{`(true|false|null)\\b`, KeywordConstant, nil},\n-\t\t\t{`-?(0|[1-9]\\d*)(\\.\\d+[eE](\\+|-)?\\d+|[eE](\\+|-)?\\d+|\\.\\d+)`, LiteralNumberFloat, nil},\n-\t\t\t{`-?(0|[1-9]\\d*)`, LiteralNumberInteger, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t},\n-\t\t\"objectattribute\": {\n-\t\t\tInclude(\"value\"),\n-\t\t\t{`:`, Punctuation, nil},\n-\t\t\t{`,`, Punctuation, Pop(1)},\n-\t\t\t{`\\}`, Punctuation, Pop(2)},\n-\t\t},\n-\t\t\"objectvalue\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"comment\"),\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, NameTag, Push(\"objectattribute\")},\n-\t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"arrayvalue\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"value\"),\n-\t\t\tInclude(\"comment\"),\n-\t\t\t{`,`, Punctuation, nil},\n-\t\t\t{`\\]`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"value\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"simplevalue\"),\n-\t\t\tInclude(\"comment\"),\n-\t\t\t{`\\{`, Punctuation, Push(\"objectvalue\")},\n-\t\t\t{`\\[`, Punctuation, Push(\"arrayvalue\")},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\tInclude(\"value\"),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "e98526b89be31883f1780e05f3052e4be0921e0e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/j/jsx.go",
      "status": "removed",
      "additions": 0,
      "deletions": 99,
      "changes": 99,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fjsx.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fjsx.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fjsx.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,99 +0,0 @@\n-package j\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// JSX lexer.\n-//\n-// This was generated from https://github.com/fcurella/jsx-lexer\n-var JSX = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"react\",\n-\t\tAliases:   []string{\"jsx\", \"react\"},\n-\t\tFilenames: []string{\"*.jsx\", \"*.react\"},\n-\t\tMimeTypes: []string{\"text/jsx\", \"text/typescript-jsx\"},\n-\t\tDotAll:    true,\n-\t},\n-\tjsxRules,\n-))\n-\n-func jsxRules() Rules {\n-\treturn Rules{\n-\t\t\"commentsandwhitespace\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`<!--`, Comment, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"slashstartsregex\": {\n-\t\t\tInclude(\"commentsandwhitespace\"),\n-\t\t\t{`/(\\\\.|[^[/\\\\\\n]|\\[(\\\\.|[^\\]\\\\\\n])*])+/([gimuy]+\\b|\\B)`, LiteralStringRegex, Pop(1)},\n-\t\t\t{`(?=/)`, Text, Push(\"#pop\", \"badregex\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"badregex\": {\n-\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\tInclude(\"jsx\"),\n-\t\t\t{`\\A#! ?/.*?\\n`, CommentHashbang, nil},\n-\t\t\t{`^(?=\\s|/|<!--)`, Text, Push(\"slashstartsregex\")},\n-\t\t\tInclude(\"commentsandwhitespace\"),\n-\t\t\t{`(\\.\\d+|[0-9]+\\.[0-9]*)([eE][-+]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`0[bB][01]+`, LiteralNumberBin, nil},\n-\t\t\t{`0[oO][0-7]+`, LiteralNumberOct, nil},\n-\t\t\t{`0[xX][0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`\\.\\.\\.|=>`, Punctuation, nil},\n-\t\t\t{`\\+\\+|--|~|&&|\\?|:|\\|\\||\\\\(?=\\n)|(<<|>>>?|==?|!=?|[-<>+*%&|^/])=?`, Operator, Push(\"slashstartsregex\")},\n-\t\t\t{`[{(\\[;,]`, Punctuation, Push(\"slashstartsregex\")},\n-\t\t\t{`[})\\].]`, Punctuation, nil},\n-\t\t\t{`(for|in|while|do|break|return|continue|switch|case|default|if|else|throw|try|catch|finally|new|delete|typeof|instanceof|void|yield|this|of)\\b`, Keyword, Push(\"slashstartsregex\")},\n-\t\t\t{`(var|let|with|function)\\b`, KeywordDeclaration, Push(\"slashstartsregex\")},\n-\t\t\t{`(abstract|async|await|boolean|byte|char|class|const|debugger|double|enum|export|extends|final|float|goto|implements|import|int|interface|long|native|package|private|protected|public|short|static|super|synchronized|throws|transient|volatile)\\b`, KeywordReserved, nil},\n-\t\t\t{`(true|false|null|NaN|Infinity|undefined)\\b`, KeywordConstant, nil},\n-\t\t\t{`(Array|Boolean|Date|Error|Function|Math|netscape|Number|Object|Packages|RegExp|String|Promise|Proxy|sun|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|Error|eval|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|document|this|window)\\b`, NameBuiltin, nil},\n-\t\t\t{`(?:[$_\\p{L}\\p{N}]|\\\\u[a-fA-F0-9]{4})(?:(?:[$\\p{L}\\p{N}]|\\\\u[a-fA-F0-9]{4}))*`, NameOther, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t\t{\"`\", LiteralStringBacktick, Push(\"interp\")},\n-\t\t},\n-\t\t\"interp\": {\n-\t\t\t{\"`\", LiteralStringBacktick, Pop(1)},\n-\t\t\t{`\\\\\\\\`, LiteralStringBacktick, nil},\n-\t\t\t{\"\\\\\\\\`\", LiteralStringBacktick, nil},\n-\t\t\t{`\\$\\{`, LiteralStringInterpol, Push(\"interp-inside\")},\n-\t\t\t{`\\$`, LiteralStringBacktick, nil},\n-\t\t\t{\"[^`\\\\\\\\$]+\", LiteralStringBacktick, nil},\n-\t\t},\n-\t\t\"interp-inside\": {\n-\t\t\t{`\\}`, LiteralStringInterpol, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"jsx\": {\n-\t\t\t{`(<)(/?)(>)`, ByGroups(Punctuation, Punctuation, Punctuation), nil},\n-\t\t\t{`(<)([\\w\\.]+)`, ByGroups(Punctuation, NameTag), Push(\"tag\")},\n-\t\t\t{`(<)(/)([\\w\\.]+)(>)`, ByGroups(Punctuation, Punctuation, NameTag, Punctuation), nil},\n-\t\t},\n-\t\t\"tag\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`([\\w]+\\s*)(=)(\\s*)`, ByGroups(NameAttribute, Operator, Text), Push(\"attr\")},\n-\t\t\t{`[{}]+`, Punctuation, nil},\n-\t\t\t{`[\\w\\.]+`, NameAttribute, nil},\n-\t\t\t{`(/?)(\\s*)(>)`, ByGroups(Punctuation, Text, Punctuation), Pop(1)},\n-\t\t},\n-\t\t\"attr\": {\n-\t\t\t{`{`, Punctuation, Push(\"expression\")},\n-\t\t\t{`\".*?\"`, LiteralString, Pop(1)},\n-\t\t\t{`'.*?'`, LiteralString, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"expression\": {\n-\t\t\t{`{`, Punctuation, Push()},\n-\t\t\t{`}`, Punctuation, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "6ea954e4fed2258fa5e9ee452015a32af88d513e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/j/julia.go",
      "status": "removed",
      "additions": 0,
      "deletions": 134,
      "changes": 134,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fjulia.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fjulia.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fjulia.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,134 +0,0 @@\n-package j\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Julia lexer.\n-var Julia = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Julia\",\n-\t\tAliases:   []string{\"julia\", \"jl\"},\n-\t\tFilenames: []string{\"*.jl\"},\n-\t\tMimeTypes: []string{\"text/x-julia\", \"application/x-julia\"},\n-\t},\n-\tjuliaRules,\n-))\n-\n-func juliaRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`#=`, CommentMultiline, Push(\"blockcomment\")},\n-\t\t\t{`#.*$`, Comment, nil},\n-\t\t\t{`[\\[\\](),;]`, Punctuation, nil},\n-\t\t\t{`((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))(\\s*)(:)((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))`, ByGroups(Name, Text, Operator, Name), nil},\n-\t\t\t{`(?<![\\]):<>\\d.])(:(?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))`, LiteralStringSymbol, nil},\n-\t\t\t{`(?<=::)(\\s*)((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))\\b(?![(\\[])`, ByGroups(Text, KeywordType), nil},\n-\t\t\t{`((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))(\\s*)([<>]:)(\\s*)((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))\\b(?![(\\[])`, ByGroups(KeywordType, Text, Operator, Text, KeywordType), nil},\n-\t\t\t{`([<>]:)(\\s*)((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))\\b(?![(\\[])`, ByGroups(Operator, Text, KeywordType), nil},\n-\t\t\t{`\\b((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))(\\s*)([<>]:)`, ByGroups(KeywordType, Text, Operator), nil},\n-\t\t\t{Words(``, `[²³¹ʰʲʳʷʸˡˢˣᴬᴮᴰᴱᴳᴴᴵᴶᴷᴸᴹᴺᴼᴾᴿᵀᵁᵂᵃᵇᵈᵉᵍᵏᵐᵒᵖᵗᵘᵛᵝᵞᵟᵠᵡᵢᵣᵤᵥᵦᵧᵨᵩᵪᶜᶠᶥᶦᶫᶰᶸᶻᶿ′″‴‵‶‷⁗⁰ⁱ⁴⁵⁶⁷⁸⁹⁺⁻⁼⁽⁾ⁿ₀₁₂₃₄₅₆₇₈₉₊₋₌₍₎ₐₑₒₓₕₖₗₘₙₚₛₜⱼⱽ]*`, `->`, `:=`, `$=`, `?`, `||`, `&&`, `:`, `$`, `::`, `=`, `+=`, `-=`, `*=`, `/=`, `//=`, `\\=`, `^=`, `÷=`, `%=`, `<<=`, `>>=`, `>>>=`, `|=`, `&=`, `⊻=`, `≔`, `⩴`, `≕'`, `~`, `=>`, `→`, `↔`, `↚`, `↛`, `↞`, `↠`, `↢`, `↣`, `↦`, `↤`, `↮`, `⇎`, `⇍`, `⇏`, `⇐`, `⇒`, `⇔`, `⇴`, `⇶`, `⇷`, `⇸`, `⇹`, `⇺`, `⇻`, `⇼`, `⇽`, `⇾`, `⇿`, `⟵`, `⟶`, `⟷`, `⟹`, `⟺`, `⟻`, `⟼`, `⟽`, `⟾`, `⟿`, `⤀`, `⤁`, `⤂`, `⤃`, `⤄`, `⤅`, `⤆`, `⤇`, `⤌`, `⤍`, `⤎`, `⤏`, `⤐`, `⤑`, `⤔`, `⤕`, `⤖`, `⤗`, `⤘`, `⤝`, `⤞`, `⤟`, `⤠`, `⥄`, `⥅`, `⥆`, `⥇`, `⥈`, `⥊`, `⥋`, `⥎`, `⥐`, `⥒`, `⥓`, `⥖`, `⥗`, `⥚`, `⥛`, `⥞`, `⥟`, `⥢`, `⥤`, `⥦`, `⥧`, `⥨`, `⥩`, `⥪`, `⥫`, `⥬`, `⥭`, `⥰`, `⧴`, `⬱`, `⬰`, `⬲`, `⬳`, `⬴`, `⬵`, `⬶`, `⬷`, `⬸`, `⬹`, `⬺`, `⬻`, `⬼`, `⬽`, `⬾`, `⬿`, `⭀`, `⭁`, `⭂`, `⭃`, `⭄`, `⭇`, `⭈`, `⭉`, `⭊`, `⭋`, `⭌`, `￩`, `￫`, `⇜`, `⇝`, `↜`, `↝`, `↩`, `↪`, `↫`, `↬`, `↼`, `↽`, `⇀`, `⇁`, `⇄`, `⇆`, `⇇`, `⇉`, `⇋`, `⇌`, `⇚`, `⇛`, `⇠`, `⇢`, `↷`, `↶`, `↺`, `↻`, `-->`, `<--`, `<-->`, `>`, `<`, `>=`, `≥`, `<=`, `≤`, `==`, `===`, `≡`, `!=`, `≠`, `!==`, `≢`, `∈`, `∉`, `∋`, `∌`, `⊆`, `⊈`, `⊂`, `⊄`, `⊊`, `∝`, `∊`, `∍`, `∥`, `∦`, `∷`, `∺`, `∻`, `∽`, `∾`, `≁`, `≃`, `≂`, `≄`, `≅`, `≆`, `≇`, `≈`, `≉`, `≊`, `≋`, `≌`, `≍`, `≎`, `≐`, `≑`, `≒`, `≓`, `≖`, `≗`, `≘`, `≙`, `≚`, `≛`, `≜`, `≝`, `≞`, `≟`, `≣`, `≦`, `≧`, `≨`, `≩`, `≪`, `≫`, `≬`, `≭`, `≮`, `≯`, `≰`, `≱`, `≲`, `≳`, `≴`, `≵`, `≶`, `≷`, `≸`, `≹`, `≺`, `≻`, `≼`, `≽`, `≾`, `≿`, `⊀`, `⊁`, `⊃`, `⊅`, `⊇`, `⊉`, `⊋`, `⊏`, `⊐`, `⊑`, `⊒`, `⊜`, `⊩`, `⊬`, `⊮`, `⊰`, `⊱`, `⊲`, `⊳`, `⊴`, `⊵`, `⊶`, `⊷`, `⋍`, `⋐`, `⋑`, `⋕`, `⋖`, `⋗`, `⋘`, `⋙`, `⋚`, `⋛`, `⋜`, `⋝`, `⋞`, `⋟`, `⋠`, `⋡`, `⋢`, `⋣`, `⋤`, `⋥`, `⋦`, `⋧`, `⋨`, `⋩`, `⋪`, `⋫`, `⋬`, `⋭`, `⋲`, `⋳`, `⋴`, `⋵`, `⋶`, `⋷`, `⋸`, `⋹`, `⋺`, `⋻`, `⋼`, `⋽`, `⋾`, `⋿`, `⟈`, `⟉`, `⟒`, `⦷`, `⧀`, `⧁`, `⧡`, `⧣`, `⧤`, `⧥`, `⩦`, `⩧`, `⩪`, `⩫`, `⩬`, `⩭`, `⩮`, `⩯`, `⩰`, `⩱`, `⩲`, `⩳`, `⩵`, `⩶`, `⩷`, `⩸`, `⩹`, `⩺`, `⩻`, `⩼`, `⩽`, `⩾`, `⩿`, `⪀`, `⪁`, `⪂`, `⪃`, `⪄`, `⪅`, `⪆`, `⪇`, `⪈`, `⪉`, `⪊`, `⪋`, `⪌`, `⪍`, `⪎`, `⪏`, `⪐`, `⪑`, `⪒`, `⪓`, `⪔`, `⪕`, `⪖`, `⪗`, `⪘`, `⪙`, `⪚`, `⪛`, `⪜`, `⪝`, `⪞`, `⪟`, `⪠`, `⪡`, `⪢`, `⪣`, `⪤`, `⪥`, `⪦`, `⪧`, `⪨`, `⪩`, `⪪`, `⪫`, `⪬`, `⪭`, `⪮`, `⪯`, `⪰`, `⪱`, `⪲`, `⪳`, `⪴`, `⪵`, `⪶`, `⪷`, `⪸`, `⪹`, `⪺`, `⪻`, `⪼`, `⪽`, `⪾`, `⪿`, `⫀`, `⫁`, `⫂`, `⫃`, `⫄`, `⫅`, `⫆`, `⫇`, `⫈`, `⫉`, `⫊`, `⫋`, `⫌`, `⫍`, `⫎`, `⫏`, `⫐`, `⫑`, `⫒`, `⫓`, `⫔`, `⫕`, `⫖`, `⫗`, `⫘`, `⫙`, `⫷`, `⫸`, `⫹`, `⫺`, `⊢`, `⊣`, `⟂`, `<:`, `>:`, `<|`, `|>`, `…`, `⁝`, `⋮`, `⋱`, `⋰`, `⋯`, `+`, `-`, `¦`, `|`, `⊕`, `⊖`, `⊞`, `⊟`, `++`, `∪`, `∨`, `⊔`, `±`, `∓`, `∔`, `∸`, `≏`, `⊎`, `⊻`, `⊽`, `⋎`, `⋓`, `⧺`, `⧻`, `⨈`, `⨢`, `⨣`, `⨤`, `⨥`, `⨦`, `⨧`, `⨨`, `⨩`, `⨪`, `⨫`, `⨬`, `⨭`, `⨮`, `⨹`, `⨺`, `⩁`, `⩂`, `⩅`, `⩊`, `⩌`, `⩏`, `⩐`, `⩒`, `⩔`, `⩖`, `⩗`, `⩛`, `⩝`, `⩡`, `⩢`, `⩣`, `*`, `/`, `⌿`, `÷`, `%`, `&`, `⋅`, `∘`, `×`, `\\`, `∩`, `∧`, `⊗`, `⊘`, `⊙`, `⊚`, `⊛`, `⊠`, `⊡`, `⊓`, `∗`, `∙`, `∤`, `⅋`, `≀`, `⊼`, `⋄`, `⋆`, `⋇`, `⋉`, `⋊`, `⋋`, `⋌`, `⋏`, `⋒`, `⟑`, `⦸`, `⦼`, `⦾`, `⦿`, `⧶`, `⧷`, `⨇`, `⨰`, `⨱`, `⨲`, `⨳`, `⨴`, `⨵`, `⨶`, `⨷`, `⨸`, `⨻`, `⨼`, `⨽`, `⩀`, `⩃`, `⩄`, `⩋`, `⩍`, `⩎`, `⩑`, `⩓`, `⩕`, `⩘`, `⩚`, `⩜`, `⩞`, `⩟`, `⩠`, `⫛`, `⊍`, `▷`, `⨝`, `⟕`, `⟖`, `⟗`, `⨟`, `//`, `>>`, `<<`, `>>>`, `^`, `↑`, `↓`, `⇵`, `⟰`, `⟱`, `⤈`, `⤉`, `⤊`, `⤋`, `⤒`, `⤓`, `⥉`, `⥌`, `⥍`, `⥏`, `⥑`, `⥔`, `⥕`, `⥘`, `⥙`, `⥜`, `⥝`, `⥠`, `⥡`, `⥣`, `⥥`, `⥮`, `⥯`, `￪`, `￬`, `!`, `¬`, `√`, `∛`, `∜`), Operator, nil},\n-\t\t\t{Words(``, `[²³¹ʰʲʳʷʸˡˢˣᴬᴮᴰᴱᴳᴴᴵᴶᴷᴸᴹᴺᴼᴾᴿᵀᵁᵂᵃᵇᵈᵉᵍᵏᵐᵒᵖᵗᵘᵛᵝᵞᵟᵠᵡᵢᵣᵤᵥᵦᵧᵨᵩᵪᶜᶠᶥᶦᶫᶰᶸᶻᶿ′″‴‵‶‷⁗⁰ⁱ⁴⁵⁶⁷⁸⁹⁺⁻⁼⁽⁾ⁿ₀₁₂₃₄₅₆₇₈₉₊₋₌₍₎ₐₑₒₓₕₖₗₘₙₚₛₜⱼⱽ]*`, `.=`, `.+=`, `.-=`, `.*=`, `./=`, `.//=`, `.\\=`, `.^=`, `.÷=`, `.%=`, `.<<=`, `.>>=`, `.>>>=`, `.|=`, `.&=`, `.⊻=`, `.≔`, `.⩴`, `.≕'`, `.~`, `.=>`, `.→`, `.↔`, `.↚`, `.↛`, `.↞`, `.↠`, `.↢`, `.↣`, `.↦`, `.↤`, `.↮`, `.⇎`, `.⇍`, `.⇏`, `.⇐`, `.⇒`, `.⇔`, `.⇴`, `.⇶`, `.⇷`, `.⇸`, `.⇹`, `.⇺`, `.⇻`, `.⇼`, `.⇽`, `.⇾`, `.⇿`, `.⟵`, `.⟶`, `.⟷`, `.⟹`, `.⟺`, `.⟻`, `.⟼`, `.⟽`, `.⟾`, `.⟿`, `.⤀`, `.⤁`, `.⤂`, `.⤃`, `.⤄`, `.⤅`, `.⤆`, `.⤇`, `.⤌`, `.⤍`, `.⤎`, `.⤏`, `.⤐`, `.⤑`, `.⤔`, `.⤕`, `.⤖`, `.⤗`, `.⤘`, `.⤝`, `.⤞`, `.⤟`, `.⤠`, `.⥄`, `.⥅`, `.⥆`, `.⥇`, `.⥈`, `.⥊`, `.⥋`, `.⥎`, `.⥐`, `.⥒`, `.⥓`, `.⥖`, `.⥗`, `.⥚`, `.⥛`, `.⥞`, `.⥟`, `.⥢`, `.⥤`, `.⥦`, `.⥧`, `.⥨`, `.⥩`, `.⥪`, `.⥫`, `.⥬`, `.⥭`, `.⥰`, `.⧴`, `.⬱`, `.⬰`, `.⬲`, `.⬳`, `.⬴`, `.⬵`, `.⬶`, `.⬷`, `.⬸`, `.⬹`, `.⬺`, `.⬻`, `.⬼`, `.⬽`, `.⬾`, `.⬿`, `.⭀`, `.⭁`, `.⭂`, `.⭃`, `.⭄`, `.⭇`, `.⭈`, `.⭉`, `.⭊`, `.⭋`, `.⭌`, `.￩`, `.￫`, `.⇜`, `.⇝`, `.↜`, `.↝`, `.↩`, `.↪`, `.↫`, `.↬`, `.↼`, `.↽`, `.⇀`, `.⇁`, `.⇄`, `.⇆`, `.⇇`, `.⇉`, `.⇋`, `.⇌`, `.⇚`, `.⇛`, `.⇠`, `.⇢`, `.↷`, `.↶`, `.↺`, `.↻`, `.-->`, `.<--`, `.<-->`, `.>`, `.<`, `.>=`, `.≥`, `.<=`, `.≤`, `.==`, `.===`, `.≡`, `.!=`, `.≠`, `.!==`, `.≢`, `.∈`, `.∉`, `.∋`, `.∌`, `.⊆`, `.⊈`, `.⊂`, `.⊄`, `.⊊`, `.∝`, `.∊`, `.∍`, `.∥`, `.∦`, `.∷`, `.∺`, `.∻`, `.∽`, `.∾`, `.≁`, `.≃`, `.≂`, `.≄`, `.≅`, `.≆`, `.≇`, `.≈`, `.≉`, `.≊`, `.≋`, `.≌`, `.≍`, `.≎`, `.≐`, `.≑`, `.≒`, `.≓`, `.≖`, `.≗`, `.≘`, `.≙`, `.≚`, `.≛`, `.≜`, `.≝`, `.≞`, `.≟`, `.≣`, `.≦`, `.≧`, `.≨`, `.≩`, `.≪`, `.≫`, `.≬`, `.≭`, `.≮`, `.≯`, `.≰`, `.≱`, `.≲`, `.≳`, `.≴`, `.≵`, `.≶`, `.≷`, `.≸`, `.≹`, `.≺`, `.≻`, `.≼`, `.≽`, `.≾`, `.≿`, `.⊀`, `.⊁`, `.⊃`, `.⊅`, `.⊇`, `.⊉`, `.⊋`, `.⊏`, `.⊐`, `.⊑`, `.⊒`, `.⊜`, `.⊩`, `.⊬`, `.⊮`, `.⊰`, `.⊱`, `.⊲`, `.⊳`, `.⊴`, `.⊵`, `.⊶`, `.⊷`, `.⋍`, `.⋐`, `.⋑`, `.⋕`, `.⋖`, `.⋗`, `.⋘`, `.⋙`, `.⋚`, `.⋛`, `.⋜`, `.⋝`, `.⋞`, `.⋟`, `.⋠`, `.⋡`, `.⋢`, `.⋣`, `.⋤`, `.⋥`, `.⋦`, `.⋧`, `.⋨`, `.⋩`, `.⋪`, `.⋫`, `.⋬`, `.⋭`, `.⋲`, `.⋳`, `.⋴`, `.⋵`, `.⋶`, `.⋷`, `.⋸`, `.⋹`, `.⋺`, `.⋻`, `.⋼`, `.⋽`, `.⋾`, `.⋿`, `.⟈`, `.⟉`, `.⟒`, `.⦷`, `.⧀`, `.⧁`, `.⧡`, `.⧣`, `.⧤`, `.⧥`, `.⩦`, `.⩧`, `.⩪`, `.⩫`, `.⩬`, `.⩭`, `.⩮`, `.⩯`, `.⩰`, `.⩱`, `.⩲`, `.⩳`, `.⩵`, `.⩶`, `.⩷`, `.⩸`, `.⩹`, `.⩺`, `.⩻`, `.⩼`, `.⩽`, `.⩾`, `.⩿`, `.⪀`, `.⪁`, `.⪂`, `.⪃`, `.⪄`, `.⪅`, `.⪆`, `.⪇`, `.⪈`, `.⪉`, `.⪊`, `.⪋`, `.⪌`, `.⪍`, `.⪎`, `.⪏`, `.⪐`, `.⪑`, `.⪒`, `.⪓`, `.⪔`, `.⪕`, `.⪖`, `.⪗`, `.⪘`, `.⪙`, `.⪚`, `.⪛`, `.⪜`, `.⪝`, `.⪞`, `.⪟`, `.⪠`, `.⪡`, `.⪢`, `.⪣`, `.⪤`, `.⪥`, `.⪦`, `.⪧`, `.⪨`, `.⪩`, `.⪪`, `.⪫`, `.⪬`, `.⪭`, `.⪮`, `.⪯`, `.⪰`, `.⪱`, `.⪲`, `.⪳`, `.⪴`, `.⪵`, `.⪶`, `.⪷`, `.⪸`, `.⪹`, `.⪺`, `.⪻`, `.⪼`, `.⪽`, `.⪾`, `.⪿`, `.⫀`, `.⫁`, `.⫂`, `.⫃`, `.⫄`, `.⫅`, `.⫆`, `.⫇`, `.⫈`, `.⫉`, `.⫊`, `.⫋`, `.⫌`, `.⫍`, `.⫎`, `.⫏`, `.⫐`, `.⫑`, `.⫒`, `.⫓`, `.⫔`, `.⫕`, `.⫖`, `.⫗`, `.⫘`, `.⫙`, `.⫷`, `.⫸`, `.⫹`, `.⫺`, `.⊢`, `.⊣`, `.⟂`, `.<:`, `.>:`, `.<|`, `.|>`, `.…`, `.⁝`, `.⋮`, `.⋱`, `.⋰`, `.⋯`, `.+`, `.-`, `.¦`, `.|`, `.⊕`, `.⊖`, `.⊞`, `.⊟`, `.++`, `.∪`, `.∨`, `.⊔`, `.±`, `.∓`, `.∔`, `.∸`, `.≏`, `.⊎`, `.⊻`, `.⊽`, `.⋎`, `.⋓`, `.⧺`, `.⧻`, `.⨈`, `.⨢`, `.⨣`, `.⨤`, `.⨥`, `.⨦`, `.⨧`, `.⨨`, `.⨩`, `.⨪`, `.⨫`, `.⨬`, `.⨭`, `.⨮`, `.⨹`, `.⨺`, `.⩁`, `.⩂`, `.⩅`, `.⩊`, `.⩌`, `.⩏`, `.⩐`, `.⩒`, `.⩔`, `.⩖`, `.⩗`, `.⩛`, `.⩝`, `.⩡`, `.⩢`, `.⩣`, `.*`, `./`, `.⌿`, `.÷`, `.%`, `.&`, `.⋅`, `.∘`, `.×`, `.\\`, `.∩`, `.∧`, `.⊗`, `.⊘`, `.⊙`, `.⊚`, `.⊛`, `.⊠`, `.⊡`, `.⊓`, `.∗`, `.∙`, `.∤`, `.⅋`, `.≀`, `.⊼`, `.⋄`, `.⋆`, `.⋇`, `.⋉`, `.⋊`, `.⋋`, `.⋌`, `.⋏`, `.⋒`, `.⟑`, `.⦸`, `.⦼`, `.⦾`, `.⦿`, `.⧶`, `.⧷`, `.⨇`, `.⨰`, `.⨱`, `.⨲`, `.⨳`, `.⨴`, `.⨵`, `.⨶`, `.⨷`, `.⨸`, `.⨻`, `.⨼`, `.⨽`, `.⩀`, `.⩃`, `.⩄`, `.⩋`, `.⩍`, `.⩎`, `.⩑`, `.⩓`, `.⩕`, `.⩘`, `.⩚`, `.⩜`, `.⩞`, `.⩟`, `.⩠`, `.⫛`, `.⊍`, `.▷`, `.⨝`, `.⟕`, `.⟖`, `.⟗`, `.⨟`, `.//`, `.>>`, `.<<`, `.>>>`, `.^`, `.↑`, `.↓`, `.⇵`, `.⟰`, `.⟱`, `.⤈`, `.⤉`, `.⤊`, `.⤋`, `.⤒`, `.⤓`, `.⥉`, `.⥌`, `.⥍`, `.⥏`, `.⥑`, `.⥔`, `.⥕`, `.⥘`, `.⥙`, `.⥜`, `.⥝`, `.⥠`, `.⥡`, `.⥣`, `.⥥`, `.⥮`, `.⥯`, `.￪`, `.￬`, `.!`, `.¬`, `.√`, `.∛`, `.∜`), Operator, nil},\n-\t\t\t{Words(``, ``, `...`, `..`), Operator, nil},\n-\t\t\t{`'(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-fA-F0-9]{1,3}|\\\\u[a-fA-F0-9]{1,4}|\\\\U[a-fA-F0-9]{1,6}|[^\\\\\\'\\n])'`, LiteralStringChar, nil},\n-\t\t\t{`(?<=[.\\w)\\]])(\\'[²³¹ʰʲʳʷʸˡˢˣᴬᴮᴰᴱᴳᴴᴵᴶᴷᴸᴹᴺᴼᴾᴿᵀᵁᵂᵃᵇᵈᵉᵍᵏᵐᵒᵖᵗᵘᵛᵝᵞᵟᵠᵡᵢᵣᵤᵥᵦᵧᵨᵩᵪᶜᶠᶥᶦᶫᶰᶸᶻᶿ′″‴‵‶‷⁗⁰ⁱ⁴⁵⁶⁷⁸⁹⁺⁻⁼⁽⁾ⁿ₀₁₂₃₄₅₆₇₈₉₊₋₌₍₎ₐₑₒₓₕₖₗₘₙₚₛₜⱼⱽ]*)+`, Operator, nil},\n-\t\t\t{`(raw)(\"\"\")`, ByGroups(LiteralStringAffix, LiteralString), Push(\"tqrawstring\")},\n-\t\t\t{`(raw)(\")`, ByGroups(LiteralStringAffix, LiteralString), Push(\"rawstring\")},\n-\t\t\t{`(r)(\"\"\")`, ByGroups(LiteralStringAffix, LiteralStringRegex), Push(\"tqregex\")},\n-\t\t\t{`(r)(\")`, ByGroups(LiteralStringAffix, LiteralStringRegex), Push(\"regex\")},\n-\t\t\t{`((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))?(\"\"\")`, ByGroups(LiteralStringAffix, LiteralString), Push(\"tqstring\")},\n-\t\t\t{`((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))?(\")`, ByGroups(LiteralStringAffix, LiteralString), Push(\"string\")},\n-\t\t\t{\"((?:[a-zA-Z_\\u00a1-\\U0010ffff][a-zA-Z_0-9!\\u00a1-\\U0010ffff]*))?(```)\", ByGroups(LiteralStringAffix, LiteralStringBacktick), Push(\"tqcommand\")},\n-\t\t\t{\"((?:[a-zA-Z_\\u00a1-\\U0010ffff][a-zA-Z_0-9!\\u00a1-\\U0010ffff]*))?(`)\", ByGroups(LiteralStringAffix, LiteralStringBacktick), Push(\"command\")},\n-\t\t\t{`((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))(\\{)`, ByGroups(KeywordType, Punctuation), Push(\"curly\")},\n-\t\t\t{`(where)(\\s+)((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))`, ByGroups(Keyword, Text, KeywordType), nil},\n-\t\t\t{`(\\{)`, Punctuation, Push(\"curly\")},\n-\t\t\t{`(abstract[ \\t]+type|primitive[ \\t]+type|mutable[ \\t]+struct|struct)([\\s()]+)((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*))`, ByGroups(Keyword, Text, KeywordType), nil},\n-\t\t\t{`@(?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*)`, NameDecorator, nil},\n-\t\t\t{Words(`@`, `[²³¹ʰʲʳʷʸˡˢˣᴬᴮᴰᴱᴳᴴᴵᴶᴷᴸᴹᴺᴼᴾᴿᵀᵁᵂᵃᵇᵈᵉᵍᵏᵐᵒᵖᵗᵘᵛᵝᵞᵟᵠᵡᵢᵣᵤᵥᵦᵧᵨᵩᵪᶜᶠᶥᶦᶫᶰᶸᶻᶿ′″‴‵‶‷⁗⁰ⁱ⁴⁵⁶⁷⁸⁹⁺⁻⁼⁽⁾ⁿ₀₁₂₃₄₅₆₇₈₉₊₋₌₍₎ₐₑₒₓₕₖₗₘₙₚₛₜⱼⱽ]*`, `->`, `:=`, `$=`, `?`, `||`, `&&`, `:`, `$`, `::`, `..`, `.`, `=`, `+=`, `-=`, `*=`, `/=`, `//=`, `\\=`, `^=`, `÷=`, `%=`, `<<=`, `>>=`, `>>>=`, `|=`, `&=`, `⊻=`, `≔`, `⩴`, `≕'`, `~`, `=>`, `→`, `↔`, `↚`, `↛`, `↞`, `↠`, `↢`, `↣`, `↦`, `↤`, `↮`, `⇎`, `⇍`, `⇏`, `⇐`, `⇒`, `⇔`, `⇴`, `⇶`, `⇷`, `⇸`, `⇹`, `⇺`, `⇻`, `⇼`, `⇽`, `⇾`, `⇿`, `⟵`, `⟶`, `⟷`, `⟹`, `⟺`, `⟻`, `⟼`, `⟽`, `⟾`, `⟿`, `⤀`, `⤁`, `⤂`, `⤃`, `⤄`, `⤅`, `⤆`, `⤇`, `⤌`, `⤍`, `⤎`, `⤏`, `⤐`, `⤑`, `⤔`, `⤕`, `⤖`, `⤗`, `⤘`, `⤝`, `⤞`, `⤟`, `⤠`, `⥄`, `⥅`, `⥆`, `⥇`, `⥈`, `⥊`, `⥋`, `⥎`, `⥐`, `⥒`, `⥓`, `⥖`, `⥗`, `⥚`, `⥛`, `⥞`, `⥟`, `⥢`, `⥤`, `⥦`, `⥧`, `⥨`, `⥩`, `⥪`, `⥫`, `⥬`, `⥭`, `⥰`, `⧴`, `⬱`, `⬰`, `⬲`, `⬳`, `⬴`, `⬵`, `⬶`, `⬷`, `⬸`, `⬹`, `⬺`, `⬻`, `⬼`, `⬽`, `⬾`, `⬿`, `⭀`, `⭁`, `⭂`, `⭃`, `⭄`, `⭇`, `⭈`, `⭉`, `⭊`, `⭋`, `⭌`, `￩`, `￫`, `⇜`, `⇝`, `↜`, `↝`, `↩`, `↪`, `↫`, `↬`, `↼`, `↽`, `⇀`, `⇁`, `⇄`, `⇆`, `⇇`, `⇉`, `⇋`, `⇌`, `⇚`, `⇛`, `⇠`, `⇢`, `↷`, `↶`, `↺`, `↻`, `-->`, `<--`, `<-->`, `>`, `<`, `>=`, `≥`, `<=`, `≤`, `==`, `===`, `≡`, `!=`, `≠`, `!==`, `≢`, `∈`, `∉`, `∋`, `∌`, `⊆`, `⊈`, `⊂`, `⊄`, `⊊`, `∝`, `∊`, `∍`, `∥`, `∦`, `∷`, `∺`, `∻`, `∽`, `∾`, `≁`, `≃`, `≂`, `≄`, `≅`, `≆`, `≇`, `≈`, `≉`, `≊`, `≋`, `≌`, `≍`, `≎`, `≐`, `≑`, `≒`, `≓`, `≖`, `≗`, `≘`, `≙`, `≚`, `≛`, `≜`, `≝`, `≞`, `≟`, `≣`, `≦`, `≧`, `≨`, `≩`, `≪`, `≫`, `≬`, `≭`, `≮`, `≯`, `≰`, `≱`, `≲`, `≳`, `≴`, `≵`, `≶`, `≷`, `≸`, `≹`, `≺`, `≻`, `≼`, `≽`, `≾`, `≿`, `⊀`, `⊁`, `⊃`, `⊅`, `⊇`, `⊉`, `⊋`, `⊏`, `⊐`, `⊑`, `⊒`, `⊜`, `⊩`, `⊬`, `⊮`, `⊰`, `⊱`, `⊲`, `⊳`, `⊴`, `⊵`, `⊶`, `⊷`, `⋍`, `⋐`, `⋑`, `⋕`, `⋖`, `⋗`, `⋘`, `⋙`, `⋚`, `⋛`, `⋜`, `⋝`, `⋞`, `⋟`, `⋠`, `⋡`, `⋢`, `⋣`, `⋤`, `⋥`, `⋦`, `⋧`, `⋨`, `⋩`, `⋪`, `⋫`, `⋬`, `⋭`, `⋲`, `⋳`, `⋴`, `⋵`, `⋶`, `⋷`, `⋸`, `⋹`, `⋺`, `⋻`, `⋼`, `⋽`, `⋾`, `⋿`, `⟈`, `⟉`, `⟒`, `⦷`, `⧀`, `⧁`, `⧡`, `⧣`, `⧤`, `⧥`, `⩦`, `⩧`, `⩪`, `⩫`, `⩬`, `⩭`, `⩮`, `⩯`, `⩰`, `⩱`, `⩲`, `⩳`, `⩵`, `⩶`, `⩷`, `⩸`, `⩹`, `⩺`, `⩻`, `⩼`, `⩽`, `⩾`, `⩿`, `⪀`, `⪁`, `⪂`, `⪃`, `⪄`, `⪅`, `⪆`, `⪇`, `⪈`, `⪉`, `⪊`, `⪋`, `⪌`, `⪍`, `⪎`, `⪏`, `⪐`, `⪑`, `⪒`, `⪓`, `⪔`, `⪕`, `⪖`, `⪗`, `⪘`, `⪙`, `⪚`, `⪛`, `⪜`, `⪝`, `⪞`, `⪟`, `⪠`, `⪡`, `⪢`, `⪣`, `⪤`, `⪥`, `⪦`, `⪧`, `⪨`, `⪩`, `⪪`, `⪫`, `⪬`, `⪭`, `⪮`, `⪯`, `⪰`, `⪱`, `⪲`, `⪳`, `⪴`, `⪵`, `⪶`, `⪷`, `⪸`, `⪹`, `⪺`, `⪻`, `⪼`, `⪽`, `⪾`, `⪿`, `⫀`, `⫁`, `⫂`, `⫃`, `⫄`, `⫅`, `⫆`, `⫇`, `⫈`, `⫉`, `⫊`, `⫋`, `⫌`, `⫍`, `⫎`, `⫏`, `⫐`, `⫑`, `⫒`, `⫓`, `⫔`, `⫕`, `⫖`, `⫗`, `⫘`, `⫙`, `⫷`, `⫸`, `⫹`, `⫺`, `⊢`, `⊣`, `⟂`, `<:`, `>:`, `<|`, `|>`, `…`, `⁝`, `⋮`, `⋱`, `⋰`, `⋯`, `+`, `-`, `¦`, `|`, `⊕`, `⊖`, `⊞`, `⊟`, `++`, `∪`, `∨`, `⊔`, `±`, `∓`, `∔`, `∸`, `≏`, `⊎`, `⊻`, `⊽`, `⋎`, `⋓`, `⧺`, `⧻`, `⨈`, `⨢`, `⨣`, `⨤`, `⨥`, `⨦`, `⨧`, `⨨`, `⨩`, `⨪`, `⨫`, `⨬`, `⨭`, `⨮`, `⨹`, `⨺`, `⩁`, `⩂`, `⩅`, `⩊`, `⩌`, `⩏`, `⩐`, `⩒`, `⩔`, `⩖`, `⩗`, `⩛`, `⩝`, `⩡`, `⩢`, `⩣`, `*`, `/`, `⌿`, `÷`, `%`, `&`, `⋅`, `∘`, `×`, `\\`, `∩`, `∧`, `⊗`, `⊘`, `⊙`, `⊚`, `⊛`, `⊠`, `⊡`, `⊓`, `∗`, `∙`, `∤`, `⅋`, `≀`, `⊼`, `⋄`, `⋆`, `⋇`, `⋉`, `⋊`, `⋋`, `⋌`, `⋏`, `⋒`, `⟑`, `⦸`, `⦼`, `⦾`, `⦿`, `⧶`, `⧷`, `⨇`, `⨰`, `⨱`, `⨲`, `⨳`, `⨴`, `⨵`, `⨶`, `⨷`, `⨸`, `⨻`, `⨼`, `⨽`, `⩀`, `⩃`, `⩄`, `⩋`, `⩍`, `⩎`, `⩑`, `⩓`, `⩕`, `⩘`, `⩚`, `⩜`, `⩞`, `⩟`, `⩠`, `⫛`, `⊍`, `▷`, `⨝`, `⟕`, `⟖`, `⟗`, `⨟`, `//`, `>>`, `<<`, `>>>`, `^`, `↑`, `↓`, `⇵`, `⟰`, `⟱`, `⤈`, `⤉`, `⤊`, `⤋`, `⤒`, `⤓`, `⥉`, `⥌`, `⥍`, `⥏`, `⥑`, `⥔`, `⥕`, `⥘`, `⥙`, `⥜`, `⥝`, `⥠`, `⥡`, `⥣`, `⥥`, `⥮`, `⥯`, `￪`, `￬`, `!`, `¬`, `√`, `∛`, `∜`), NameDecorator, nil},\n-\t\t\t{Words(``, `\\b`, `baremodule`, `begin`, `break`, `catch`, `ccall`, `const`, `continue`, `do`, `else`, `elseif`, `end`, `export`, `finally`, `for`, `function`, `global`, `if`, `import`, `in`, `isa`, `let`, `local`, `macro`, `module`, `quote`, `return`, `try`, `using`, `where`, `while`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `AbstractArray`, `AbstractChannel`, `AbstractChar`, `AbstractDict`, `AbstractDisplay`, `AbstractFloat`, `AbstractIrrational`, `AbstractMatch`, `AbstractMatrix`, `AbstractPattern`, `AbstractRange`, `AbstractSet`, `AbstractString`, `AbstractUnitRange`, `AbstractVecOrMat`, `AbstractVector`, `Any`, `ArgumentError`, `Array`, `AssertionError`, `BigFloat`, `BigInt`, `BitArray`, `BitMatrix`, `BitSet`, `BitVector`, `Bool`, `BoundsError`, `CapturedException`, `CartesianIndex`, `CartesianIndices`, `Cchar`, `Cdouble`, `Cfloat`, `Channel`, `Char`, `Cint`, `Cintmax_t`, `Clong`, `Clonglong`, `Cmd`, `Colon`, `Complex`, `ComplexF16`, `ComplexF32`, `ComplexF64`, `ComposedFunction`, `CompositeException`, `Condition`, `Cptrdiff_t`, `Cshort`, `Csize_t`, `Cssize_t`, `Cstring`, `Cuchar`, `Cuint`, `Cuintmax_t`, `Culong`, `Culonglong`, `Cushort`, `Cvoid`, `Cwchar_t`, `Cwstring`, `DataType`, `DenseArray`, `DenseMatrix`, `DenseVecOrMat`, `DenseVector`, `Dict`, `DimensionMismatch`, `Dims`, `DivideError`, `DomainError`, `EOFError`, `Enum`, `ErrorException`, `Exception`, `ExponentialBackOff`, `Expr`, `Float16`, `Float32`, `Float64`, `Function`, `GlobalRef`, `HTML`, `IO`, `IOBuffer`, `IOContext`, `IOStream`, `IdDict`, `IndexCartesian`, `IndexLinear`, `IndexStyle`, `InexactError`, `InitError`, `Int`, `Int128`, `Int16`, `Int32`, `Int64`, `Int8`, `Integer`, `InterruptException`, `InvalidStateException`, `Irrational`, `KeyError`, `LinRange`, `LineNumberNode`, `LinearIndices`, `LoadError`, `MIME`, `Matrix`, `Method`, `MethodError`, `Missing`, `MissingException`, `Module`, `NTuple`, `NamedTuple`, `Nothing`, `Number`, `OrdinalRange`, `OutOfMemoryError`, `OverflowError`, `Pair`, `PartialQuickSort`, `PermutedDimsArray`, `Pipe`, `ProcessFailedException`, `Ptr`, `QuoteNode`, `Rational`, `RawFD`, `ReadOnlyMemoryError`, `Real`, `ReentrantLock`, `Ref`, `Regex`, `RegexMatch`, `RoundingMode`, `SegmentationFault`, `Set`, `Signed`, `Some`, `StackOverflowError`, `StepRange`, `StepRangeLen`, `StridedArray`, `StridedMatrix`, `StridedVecOrMat`, `StridedVector`, `String`, `StringIndexError`, `SubArray`, `SubString`, `SubstitutionString`, `Symbol`, `SystemError`, `Task`, `TaskFailedException`, `Text`, `TextDisplay`, `Timer`, `Tuple`, `Type`, `TypeError`, `TypeVar`, `UInt`, `UInt128`, `UInt16`, `UInt32`, `UInt64`, `UInt8`, `UndefInitializer`, `UndefKeywordError`, `UndefRefError`, `UndefVarError`, `Union`, `UnionAll`, `UnitRange`, `Unsigned`, `Val`, `Vararg`, `VecElement`, `VecOrMat`, `Vector`, `VersionNumber`, `WeakKeyDict`, `WeakRef`), KeywordType, nil},\n-\t\t\t{Words(``, `\\b`, `ARGS`, `C_NULL`, `DEPOT_PATH`, `ENDIAN_BOM`, `ENV`, `Inf`, `Inf16`, `Inf32`, `Inf64`, `InsertionSort`, `LOAD_PATH`, `MergeSort`, `NaN`, `NaN16`, `NaN32`, `NaN64`, `PROGRAM_FILE`, `QuickSort`, `RoundDown`, `RoundFromZero`, `RoundNearest`, `RoundNearestTiesAway`, `RoundNearestTiesUp`, `RoundToZero`, `RoundUp`, `VERSION`, `devnull`, `false`, `im`, `missing`, `nothing`, `pi`, `stderr`, `stdin`, `stdout`, `true`, `undef`, `π`, `ℯ`), NameBuiltin, nil},\n-\t\t\t{`(?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*)`, Name, nil},\n-\t\t\t{`(\\d+((_\\d+)+)?\\.(?!\\.)(\\d+((_\\d+)+)?)?|\\.\\d+((_\\d+)+)?)([eEf][+-]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+((_\\d+)+)?[eEf][+-]?[0-9]+`, LiteralNumberFloat, nil},\n-\t\t\t{`0x[a-fA-F0-9]+((_[a-fA-F0-9]+)+)?(\\.([a-fA-F0-9]+((_[a-fA-F0-9]+)+)?)?)?p[+-]?\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`0b[01]+((_[01]+)+)?`, LiteralNumberBin, nil},\n-\t\t\t{`0o[0-7]+((_[0-7]+)+)?`, LiteralNumberOct, nil},\n-\t\t\t{`0x[a-fA-F0-9]+((_[a-fA-F0-9]+)+)?`, LiteralNumberHex, nil},\n-\t\t\t{`\\d+((_\\d+)+)?`, LiteralNumberInteger, nil},\n-\t\t\t{Words(``, ``, `.`), Operator, nil},\n-\t\t},\n-\t\t\"blockcomment\": {\n-\t\t\t{`[^=#]`, CommentMultiline, nil},\n-\t\t\t{`#=`, CommentMultiline, Push()},\n-\t\t\t{`=#`, CommentMultiline, Pop(1)},\n-\t\t\t{`[=#]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"curly\": {\n-\t\t\t{`\\{`, Punctuation, Push()},\n-\t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t\t{`(?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*)`, KeywordType, nil},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"tqrawstring\": {\n-\t\t\t{`\"\"\"`, LiteralString, Pop(1)},\n-\t\t\t{`([^\"]|\"[^\"][^\"])+`, LiteralString, nil},\n-\t\t},\n-\t\t\"rawstring\": {\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`\\\\\"`, LiteralStringEscape, nil},\n-\t\t\t{`([^\"\\\\]|\\\\[^\"])+`, LiteralString, nil},\n-\t\t},\n-\t\t\"interp\": {\n-\t\t\t{`\\$(?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*)`, LiteralStringInterpol, nil},\n-\t\t\t{`(\\$)(\\()`, ByGroups(LiteralStringInterpol, Punctuation), Push(\"in-intp\")},\n-\t\t},\n-\t\t\"in-intp\": {\n-\t\t\t{`\\(`, Punctuation, Push()},\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`(\")((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*)|\\d+)?`, ByGroups(LiteralString, LiteralStringAffix), Pop(1)},\n-\t\t\t{`\\\\([\\\\\"\\'$nrbtfav]|(x|u|U)[a-fA-F0-9]+|\\d+)`, LiteralStringEscape, nil},\n-\t\t\tInclude(\"interp\"),\n-\t\t\t{`%[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsux%]`, LiteralStringInterpol, nil},\n-\t\t\t{`[^\"$%\\\\]+`, LiteralString, nil},\n-\t\t\t{`.`, LiteralString, nil},\n-\t\t},\n-\t\t\"tqstring\": {\n-\t\t\t{`(\"\"\")((?:[a-zA-Z_¡-􏿿][a-zA-Z_0-9!¡-􏿿]*)|\\d+)?`, ByGroups(LiteralString, LiteralStringAffix), Pop(1)},\n-\t\t\t{`\\\\([\\\\\"\\'$nrbtfav]|(x|u|U)[a-fA-F0-9]+|\\d+)`, LiteralStringEscape, nil},\n-\t\t\tInclude(\"interp\"),\n-\t\t\t{`[^\"$%\\\\]+`, LiteralString, nil},\n-\t\t\t{`.`, LiteralString, nil},\n-\t\t},\n-\t\t\"regex\": {\n-\t\t\t{`(\")([imsxa]*)?`, ByGroups(LiteralStringRegex, LiteralStringAffix), Pop(1)},\n-\t\t\t{`\\\\\"`, LiteralStringRegex, nil},\n-\t\t\t{`[^\\\\\"]+`, LiteralStringRegex, nil},\n-\t\t},\n-\t\t\"tqregex\": {\n-\t\t\t{`(\"\"\")([imsxa]*)?`, ByGroups(LiteralStringRegex, LiteralStringAffix), Pop(1)},\n-\t\t\t{`[^\"]+`, LiteralStringRegex, nil},\n-\t\t},\n-\t\t\"command\": {\n-\t\t\t{\"(`)((?:[a-zA-Z_\\u00a1-\\U0010ffff][a-zA-Z_0-9!\\u00a1-\\U0010ffff]*)|\\\\d+)?\", ByGroups(LiteralStringBacktick, LiteralStringAffix), Pop(1)},\n-\t\t\t{\"\\\\\\\\[`$]\", LiteralStringEscape, nil},\n-\t\t\tInclude(\"interp\"),\n-\t\t\t{\"[^\\\\\\\\`$]+\", LiteralStringBacktick, nil},\n-\t\t\t{`.`, LiteralStringBacktick, nil},\n-\t\t},\n-\t\t\"tqcommand\": {\n-\t\t\t{\"(```)((?:[a-zA-Z_\\u00a1-\\U0010ffff][a-zA-Z_0-9!\\u00a1-\\U0010ffff]*)|\\\\d+)?\", ByGroups(LiteralStringBacktick, LiteralStringAffix), Pop(1)},\n-\t\t\t{`\\\\\\$`, LiteralStringEscape, nil},\n-\t\t\tInclude(\"interp\"),\n-\t\t\t{\"[^\\\\\\\\`$]+\", LiteralStringBacktick, nil},\n-\t\t\t{`.`, LiteralStringBacktick, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "5dbda9fbad69a2bd4d1a2120a667c95aa5033314",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/j/jungle.go",
      "status": "removed",
      "additions": 0,
      "deletions": 54,
      "changes": 54,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fjungle.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fjungle.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fj%2Fjungle.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,54 +0,0 @@\n-package j\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-var Jungle = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Jungle\",\n-\t\tAliases:   []string{\"jungle\"},\n-\t\tFilenames: []string{\"*.jungle\"},\n-\t\tMimeTypes: []string{\"text/x-jungle\"},\n-\t},\n-\tjungleRules,\n-))\n-\n-func jungleRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`#(\\n|[\\w\\W]*?[^#]\\n)`, CommentSingle, nil},\n-\t\t\t{`^(?=\\S)`, None, Push(\"instruction\")},\n-\t\t\t{`[\\.;\\[\\]\\(\\)\\$]`, Punctuation, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t},\n-\t\t\"instruction\": {\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`=`, Operator, Push(\"value\")},\n-\t\t\t{`(?=\\S)`, None, Push(\"var\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"value\": {\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`\\$\\(`, Punctuation, Push(\"var\")},\n-\t\t\t{`[;\\[\\]\\(\\)\\$]`, Punctuation, nil},\n-\t\t\t{`#(\\n|[\\w\\W]*?[^#]\\n)`, CommentSingle, nil},\n-\t\t\t{`[\\w_\\-\\.\\/\\\\]+`, Text, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"var\": {\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`\\b(((re)?source|barrel)Path|excludeAnnotations|annotations|lang)\\b`, NameBuiltin, nil},\n-\t\t\t{`\\bbase\\b`, NameConstant, nil},\n-\t\t\t{`\\b(ind|zsm|hrv|ces|dan|dut|eng|fin|fre|deu|gre|hun|ita|nob|po[lr]|rus|sl[ov]|spa|swe|ara|heb|zh[st]|jpn|kor|tha|vie|bul|tur)`, NameConstant, nil},\n-\t\t\t{`\\b((semi)?round|rectangle)(-\\d+x\\d+)?\\b`, NameConstant, nil},\n-\t\t\t{`[\\.;\\[\\]\\(\\$]`, Punctuation, nil},\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "deb182e9b702aa1a6466c2c60b457818da4eb8bd",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/k/kotlin.go",
      "status": "removed",
      "additions": 0,
      "deletions": 98,
      "changes": 98,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fk%2Fkotlin.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fk%2Fkotlin.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fk%2Fkotlin.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,98 +0,0 @@\n-package k\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Kotlin lexer.\n-var Kotlin = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Kotlin\",\n-\t\tAliases:   []string{\"kotlin\"},\n-\t\tFilenames: []string{\"*.kt\"},\n-\t\tMimeTypes: []string{\"text/x-kotlin\"},\n-\t\tDotAll:    true,\n-\t},\n-\tkotlinRules,\n-))\n-\n-func kotlinRules() Rules {\n-\tconst kotlinIdentifier = \"(?:[_\\\\p{L}][\\\\p{L}\\\\p{N}]*|`@?[_\\\\p{L}][\\\\p{L}\\\\p{N}]+`)\"\n-\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`^\\s*\\[.*?\\]`, NameAttribute, nil},\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`//[^\\n]*\\n?`, CommentSingle, nil},\n-\t\t\t{`/[*].*?[*]/`, CommentMultiline, nil},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`!==|!in|!is|===`, Operator, nil},\n-\t\t\t{`%=|&&|\\*=|\\+\\+|\\+=|--|-=|->|\\.\\.|\\/=|::|<=|==|>=|!!|!=|\\|\\||\\?[:.]`, Operator, nil},\n-\t\t\t{`[~!%^&*()+=|\\[\\]:;,.<>\\/?-]`, Punctuation, nil},\n-\t\t\t{`[{}]`, Punctuation, nil},\n-\t\t\t{`\"\"\"`, LiteralString, Push(\"rawstring\")},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n-\t\t\t{`(')(\\\\u[0-9a-fA-F]{4})(')`, ByGroups(LiteralStringChar, LiteralStringEscape, LiteralStringChar), nil},\n-\t\t\t{`'\\\\.'|'[^\\\\]'`, LiteralStringChar, nil},\n-\t\t\t{`0[xX][0-9a-fA-F]+[Uu]?[Ll]?|[0-9]+(\\.[0-9]*)?([eE][+-][0-9]+)?[fF]?[Uu]?[Ll]?`, LiteralNumber, nil},\n-\t\t\t{`(companion)(\\s+)(object)`, ByGroups(Keyword, Text, Keyword), nil},\n-\t\t\t{`(class|interface|object)(\\s+)`, ByGroups(Keyword, Text), Push(\"class\")},\n-\t\t\t{`(package|import)(\\s+)`, ByGroups(Keyword, Text), Push(\"package\")},\n-\t\t\t{`(val|var)(\\s+)`, ByGroups(Keyword, Text), Push(\"property\")},\n-\t\t\t{`(fun)(\\s+)`, ByGroups(Keyword, Text), Push(\"function\")},\n-\t\t\t{`(abstract|actual|annotation|as|as\\?|break|by|catch|class|companion|const|constructor|continue|crossinline|data|delegate|do|dynamic|else|enum|expect|external|false|field|file|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|it|lateinit|noinline|null|object|open|operator|out|override|package|param|private|property|protected|public|receiver|reified|return|sealed|set|setparam|super|suspend|tailrec|this|throw|true|try|typealias|typeof|val|var|vararg|when|where|while)\\b`, Keyword, nil},\n-\t\t\t{`@` + kotlinIdentifier, NameDecorator, nil},\n-\t\t\t{kotlinIdentifier, Name, nil},\n-\t\t},\n-\t\t\"package\": {\n-\t\t\t{`\\S+`, NameNamespace, Pop(1)},\n-\t\t},\n-\t\t\"class\": {\n-\t\t\t// \\x60 is the back tick character (`)\n-\t\t\t{`\\x60[^\\x60]+?\\x60`, NameClass, Pop(1)},\n-\t\t\t{kotlinIdentifier, NameClass, Pop(1)},\n-\t\t},\n-\t\t\"property\": {\n-\t\t\t{`\\x60[^\\x60]+?\\x60`, NameProperty, Pop(1)},\n-\t\t\t{kotlinIdentifier, NameProperty, Pop(1)},\n-\t\t},\n-\t\t\"generics-specification\": {\n-\t\t\t{`<`, Punctuation, Push(\"generics-specification\")}, // required for generics inside generics e.g. <T : List<Int> >\n-\t\t\t{`>`, Punctuation, Pop(1)},\n-\t\t\t{`[,:*?]`, Punctuation, nil},\n-\t\t\t{`(in|out|reified)`, Keyword, nil},\n-\t\t\t{`\\x60[^\\x60]+?\\x60`, NameClass, nil},\n-\t\t\t{kotlinIdentifier, NameClass, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t\t\"function\": {\n-\t\t\t{`<`, Punctuation, Push(\"generics-specification\")},\n-\t\t\t{`\\x60[^\\x60]+?\\x60`, NameFunction, Pop(1)},\n-\t\t\t{kotlinIdentifier, NameFunction, Pop(1)},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t\t\"rawstring\": {\n-\t\t\t// raw strings don't allow character escaping\n-\t\t\t{`\"\"\"`, LiteralString, Pop(1)},\n-\t\t\t{`(?:[^$\"]+|\\\"{1,2}[^\"])+`, LiteralString, nil},\n-\t\t\tInclude(\"string-interpol\"),\n-\t\t\t// remaining dollar signs are just a string\n-\t\t\t{`\\$`, LiteralString, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\\\\[tbnr'\"\\\\\\$]`, LiteralStringEscape, nil},\n-\t\t\t{`\\\\u[0-9a-fA-F]{4}`, LiteralStringEscape, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t\tInclude(\"string-interpol\"),\n-\t\t\t{`[^\\n\\\\\"$]+`, LiteralStringDouble, nil},\n-\t\t\t// remaining dollar signs are just a string\n-\t\t\t{`\\$`, LiteralStringDouble, nil},\n-\t\t},\n-\t\t\"string-interpol\": {\n-\t\t\t{`\\$` + kotlinIdentifier, LiteralStringInterpol, nil},\n-\t\t\t{`\\${[^}\\n]*}`, LiteralStringInterpol, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "6d83298b663b344868f1a7b67b52785eccf5789a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/l/lighttpd.go",
      "status": "removed",
      "additions": 0,
      "deletions": 34,
      "changes": 34,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fl%2Flighttpd.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fl%2Flighttpd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fl%2Flighttpd.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,34 +0,0 @@\n-package l\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Lighttpd Configuration File lexer.\n-var Lighttpd = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Lighttpd configuration file\",\n-\t\tAliases:   []string{\"lighty\", \"lighttpd\"},\n-\t\tFilenames: []string{},\n-\t\tMimeTypes: []string{\"text/x-lighttpd-conf\"},\n-\t},\n-\tlighttpdRules,\n-))\n-\n-func lighttpdRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`#.*\\n`, CommentSingle, nil},\n-\t\t\t{`/\\S*`, Name, nil},\n-\t\t\t{`[a-zA-Z._-]+`, Keyword, nil},\n-\t\t\t{`\\d+\\.\\d+\\.\\d+\\.\\d+(?:/\\d+)?`, LiteralNumber, nil},\n-\t\t\t{`[0-9]+`, LiteralNumber, nil},\n-\t\t\t{`=>|=~|\\+=|==|=|\\+`, Operator, nil},\n-\t\t\t{`\\$[A-Z]+`, NameBuiltin, nil},\n-\t\t\t{`[(){}\\[\\],]`, Punctuation, nil},\n-\t\t\t{`\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"`, LiteralStringDouble, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "e9ea319e3ca5ddb92849d4b254f67dd1da4c1cf1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/l/llvm.go",
      "status": "removed",
      "additions": 0,
      "deletions": 47,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fl%2Fllvm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fl%2Fllvm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fl%2Fllvm.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,47 +0,0 @@\n-package l\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Llvm lexer.\n-var Llvm = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"LLVM\",\n-\t\tAliases:   []string{\"llvm\"},\n-\t\tFilenames: []string{\"*.ll\"},\n-\t\tMimeTypes: []string{\"text/x-llvm\"},\n-\t},\n-\tllvmRules,\n-))\n-\n-func llvmRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`([-a-zA-Z$._][\\w\\-$.]*|\"[^\"]*?\")\\s*:`, NameLabel, nil},\n-\t\t\tInclude(\"keyword\"),\n-\t\t\t{`%([-a-zA-Z$._][\\w\\-$.]*|\"[^\"]*?\")`, NameVariable, nil},\n-\t\t\t{`@([-a-zA-Z$._][\\w\\-$.]*|\"[^\"]*?\")`, NameVariableGlobal, nil},\n-\t\t\t{`%\\d+`, NameVariableAnonymous, nil},\n-\t\t\t{`@\\d+`, NameVariableGlobal, nil},\n-\t\t\t{`#\\d+`, NameVariableGlobal, nil},\n-\t\t\t{`!([-a-zA-Z$._][\\w\\-$.]*|\"[^\"]*?\")`, NameVariable, nil},\n-\t\t\t{`!\\d+`, NameVariableAnonymous, nil},\n-\t\t\t{`c?\"[^\"]*?\"`, LiteralString, nil},\n-\t\t\t{`0[xX][a-fA-F0-9]+`, LiteralNumber, nil},\n-\t\t\t{`-?\\d+(?:[.]\\d+)?(?:[eE][-+]?\\d+(?:[.]\\d+)?)?`, LiteralNumber, nil},\n-\t\t\t{`[=<>{}\\[\\]()*.,!]|x\\b`, Punctuation, nil},\n-\t\t},\n-\t\t\"whitespace\": {\n-\t\t\t{`(\\n|\\s)+`, Text, nil},\n-\t\t\t{`;.*?\\n`, Comment, nil},\n-\t\t},\n-\t\t\"keyword\": {\n-\t\t\t{Words(``, `\\b`, `begin`, `end`, `true`, `false`, `declare`, `define`, `global`, `constant`, `private`, `linker_private`, `internal`, `available_externally`, `linkonce`, `linkonce_odr`, `weak`, `weak_odr`, `appending`, `dllimport`, `dllexport`, `common`, `default`, `hidden`, `protected`, `extern_weak`, `external`, `thread_local`, `zeroinitializer`, `undef`, `null`, `to`, `tail`, `target`, `triple`, `datalayout`, `volatile`, `nuw`, `nsw`, `nnan`, `ninf`, `nsz`, `arcp`, `fast`, `exact`, `inbounds`, `align`, `addrspace`, `section`, `alias`, `module`, `asm`, `sideeffect`, `gc`, `dbg`, `linker_private_weak`, `attributes`, `blockaddress`, `initialexec`, `localdynamic`, `localexec`, `prefix`, `unnamed_addr`, `ccc`, `fastcc`, `coldcc`, `x86_stdcallcc`, `x86_fastcallcc`, `arm_apcscc`, `arm_aapcscc`, `arm_aapcs_vfpcc`, `ptx_device`, `ptx_kernel`, `intel_ocl_bicc`, `msp430_intrcc`, `spir_func`, `spir_kernel`, `x86_64_sysvcc`, `x86_64_win64cc`, `x86_thiscallcc`, `cc`, `c`, `signext`, `zeroext`, `inreg`, `sret`, `nounwind`, `noreturn`, `noalias`, `nocapture`, `byval`, `nest`, `readnone`, `readonly`, `inlinehint`, `noinline`, `alwaysinline`, `optsize`, `ssp`, `sspreq`, `noredzone`, `noimplicitfloat`, `naked`, `builtin`, `cold`, `nobuiltin`, `noduplicate`, `nonlazybind`, `optnone`, `returns_twice`, `sanitize_address`, `sanitize_memory`, `sanitize_thread`, `sspstrong`, `uwtable`, `returned`, `type`, `opaque`, `eq`, `ne`, `slt`, `sgt`, `sle`, `sge`, `ult`, `ugt`, `ule`, `uge`, `oeq`, `one`, `olt`, `ogt`, `ole`, `oge`, `ord`, `uno`, `ueq`, `une`, `x`, `acq_rel`, `acquire`, `alignstack`, `atomic`, `catch`, `cleanup`, `filter`, `inteldialect`, `max`, `min`, `monotonic`, `nand`, `personality`, `release`, `seq_cst`, `singlethread`, `umax`, `umin`, `unordered`, `xchg`, `add`, `fadd`, `sub`, `fsub`, `mul`, `fmul`, `udiv`, `sdiv`, `fdiv`, `urem`, `srem`, `frem`, `shl`, `lshr`, `ashr`, `and`, `or`, `xor`, `icmp`, `fcmp`, `phi`, `call`, `trunc`, `zext`, `sext`, `fptrunc`, `fpext`, `uitofp`, `sitofp`, `fptoui`, `fptosi`, `inttoptr`, `ptrtoint`, `bitcast`, `addrspacecast`, `select`, `va_arg`, `ret`, `br`, `switch`, `invoke`, `unwind`, `unreachable`, `indirectbr`, `landingpad`, `resume`, `malloc`, `alloca`, `free`, `load`, `store`, `getelementptr`, `extractelement`, `insertelement`, `shufflevector`, `getresult`, `extractvalue`, `insertvalue`, `atomicrmw`, `cmpxchg`, `fence`, `allocsize`, `amdgpu_cs`, `amdgpu_gs`, `amdgpu_kernel`, `amdgpu_ps`, `amdgpu_vs`, `any`, `anyregcc`, `argmemonly`, `avr_intrcc`, `avr_signalcc`, `caller`, `catchpad`, `catchret`, `catchswitch`, `cleanuppad`, `cleanupret`, `comdat`, `convergent`, `cxx_fast_tlscc`, `deplibs`, `dereferenceable`, `dereferenceable_or_null`, `distinct`, `exactmatch`, `externally_initialized`, `from`, `ghccc`, `hhvm_ccc`, `hhvmcc`, `ifunc`, `inaccessiblemem_or_argmemonly`, `inaccessiblememonly`, `inalloca`, `jumptable`, `largest`, `local_unnamed_addr`, `minsize`, `musttail`, `noduplicates`, `none`, `nonnull`, `norecurse`, `notail`, `preserve_allcc`, `preserve_mostcc`, `prologue`, `safestack`, `samesize`, `source_filename`, `swiftcc`, `swifterror`, `swiftself`, `webkit_jscc`, `within`, `writeonly`, `x86_intrcc`, `x86_vectorcallcc`), Keyword, nil},\n-\t\t\t{Words(``, ``, `void`, `half`, `float`, `double`, `x86_fp80`, `fp128`, `ppc_fp128`, `label`, `metadata`, `token`), KeywordType, nil},\n-\t\t\t{`i[1-9]\\d*`, Keyword, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "db574a1b9a8827ff304d57dd8fdcfef1ec7e0729",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/l/lua.go",
      "status": "removed",
      "additions": 0,
      "deletions": 79,
      "changes": 79,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fl%2Flua.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fl%2Flua.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fl%2Flua.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,79 +0,0 @@\n-package l\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Lua lexer.\n-var Lua = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Lua\",\n-\t\tAliases:   []string{\"lua\"},\n-\t\tFilenames: []string{\"*.lua\", \"*.wlua\"},\n-\t\tMimeTypes: []string{\"text/x-lua\", \"application/x-lua\"},\n-\t},\n-\tluaRules,\n-))\n-\n-func luaRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`#!.*`, CommentPreproc, nil},\n-\t\t\tDefault(Push(\"base\")),\n-\t\t},\n-\t\t\"ws\": {\n-\t\t\t{`(?:--\\[(=*)\\[[\\w\\W]*?\\](\\1)\\])`, CommentMultiline, nil},\n-\t\t\t{`(?:--.*$)`, CommentSingle, nil},\n-\t\t\t{`(?:\\s+)`, Text, nil},\n-\t\t},\n-\t\t\"base\": {\n-\t\t\tInclude(\"ws\"),\n-\t\t\t{`(?i)0x[\\da-f]*(\\.[\\da-f]*)?(p[+-]?\\d+)?`, LiteralNumberHex, nil},\n-\t\t\t{`(?i)(\\d*\\.\\d+|\\d+\\.\\d*)(e[+-]?\\d+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`(?i)\\d+e[+-]?\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`(?s)\\[(=*)\\[.*?\\]\\1\\]`, LiteralString, nil},\n-\t\t\t{`::`, Punctuation, Push(\"label\")},\n-\t\t\t{`\\.{3}`, Punctuation, nil},\n-\t\t\t{`[=<>|~&+\\-*/%#^]+|\\.\\.`, Operator, nil},\n-\t\t\t{`[\\[\\]{}().,:;]`, Punctuation, nil},\n-\t\t\t{`(and|or|not)\\b`, OperatorWord, nil},\n-\t\t\t{`(break|do|else|elseif|end|for|if|in|repeat|return|then|until|while)\\b`, KeywordReserved, nil},\n-\t\t\t{`goto\\b`, KeywordReserved, Push(\"goto\")},\n-\t\t\t{`(local)\\b`, KeywordDeclaration, nil},\n-\t\t\t{`(true|false|nil)\\b`, KeywordConstant, nil},\n-\t\t\t{`(function)\\b`, KeywordReserved, Push(\"funcname\")},\n-\t\t\t{`[A-Za-z_]\\w*(\\.[A-Za-z_]\\w*)?`, Name, nil},\n-\t\t\t{`'`, LiteralStringSingle, Combined(\"stringescape\", \"sqs\")},\n-\t\t\t{`\"`, LiteralStringDouble, Combined(\"stringescape\", \"dqs\")},\n-\t\t},\n-\t\t\"funcname\": {\n-\t\t\tInclude(\"ws\"),\n-\t\t\t{`[.:]`, Punctuation, nil},\n-\t\t\t{`(?:[^\\W\\d]\\w*)(?=(?:(?:--\\[(=*)\\[[\\w\\W]*?\\](\\2)\\])|(?:--.*$)|(?:\\s+))*[.:])`, NameClass, nil},\n-\t\t\t{`(?:[^\\W\\d]\\w*)`, NameFunction, Pop(1)},\n-\t\t\t{`\\(`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"goto\": {\n-\t\t\tInclude(\"ws\"),\n-\t\t\t{`(?:[^\\W\\d]\\w*)`, NameLabel, Pop(1)},\n-\t\t},\n-\t\t\"label\": {\n-\t\t\tInclude(\"ws\"),\n-\t\t\t{`::`, Punctuation, Pop(1)},\n-\t\t\t{`(?:[^\\W\\d]\\w*)`, NameLabel, nil},\n-\t\t},\n-\t\t\"stringescape\": {\n-\t\t\t{`\\\\([abfnrtv\\\\\"\\']|[\\r\\n]{1,2}|z\\s*|x[0-9a-fA-F]{2}|\\d{1,3}|u\\{[0-9a-fA-F]+\\})`, LiteralStringEscape, nil},\n-\t\t},\n-\t\t\"sqs\": {\n-\t\t\t{`'`, LiteralStringSingle, Pop(1)},\n-\t\t\t{`[^\\\\']+`, LiteralStringSingle, nil},\n-\t\t},\n-\t\t\"dqs\": {\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t\t{`[^\\\\\"]+`, LiteralStringDouble, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "2b429212e5f033d4a6062eb4a8584580d30183e7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/lexers.go",
      "status": "removed",
      "additions": 0,
      "deletions": 60,
      "changes": 60,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Flexers.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Flexers.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Flexers.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,60 +0,0 @@\n-// Package lexers contains the registry of all lexers.\n-//\n-// Sub-packages contain lexer implementations.\n-package lexers\n-\n-// nolint\n-import (\n-\t\"github.com/alecthomas/chroma\"\n-\t_ \"github.com/alecthomas/chroma/lexers/a\"\n-\t_ \"github.com/alecthomas/chroma/lexers/b\"\n-\t_ \"github.com/alecthomas/chroma/lexers/c\"\n-\t_ \"github.com/alecthomas/chroma/lexers/circular\"\n-\t_ \"github.com/alecthomas/chroma/lexers/d\"\n-\t_ \"github.com/alecthomas/chroma/lexers/e\"\n-\t_ \"github.com/alecthomas/chroma/lexers/f\"\n-\t_ \"github.com/alecthomas/chroma/lexers/g\"\n-\t_ \"github.com/alecthomas/chroma/lexers/h\"\n-\t_ \"github.com/alecthomas/chroma/lexers/i\"\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-\t_ \"github.com/alecthomas/chroma/lexers/j\"\n-\t_ \"github.com/alecthomas/chroma/lexers/k\"\n-\t_ \"github.com/alecthomas/chroma/lexers/l\"\n-\t_ \"github.com/alecthomas/chroma/lexers/m\"\n-\t_ \"github.com/alecthomas/chroma/lexers/n\"\n-\t_ \"github.com/alecthomas/chroma/lexers/o\"\n-\t_ \"github.com/alecthomas/chroma/lexers/p\"\n-\t_ \"github.com/alecthomas/chroma/lexers/q\"\n-\t_ \"github.com/alecthomas/chroma/lexers/r\"\n-\t_ \"github.com/alecthomas/chroma/lexers/s\"\n-\t_ \"github.com/alecthomas/chroma/lexers/t\"\n-\t_ \"github.com/alecthomas/chroma/lexers/v\"\n-\t_ \"github.com/alecthomas/chroma/lexers/w\"\n-\t_ \"github.com/alecthomas/chroma/lexers/x\"\n-\t_ \"github.com/alecthomas/chroma/lexers/y\"\n-\t_ \"github.com/alecthomas/chroma/lexers/z\"\n-)\n-\n-// Registry of Lexers.\n-var Registry = internal.Registry\n-\n-// Names of all lexers, optionally including aliases.\n-func Names(withAliases bool) []string { return internal.Names(withAliases) }\n-\n-// Get a Lexer by name, alias or file extension.\n-func Get(name string) chroma.Lexer { return internal.Get(name) }\n-\n-// MatchMimeType attempts to find a lexer for the given MIME type.\n-func MatchMimeType(mimeType string) chroma.Lexer { return internal.MatchMimeType(mimeType) }\n-\n-// Match returns the first lexer matching filename.\n-func Match(filename string) chroma.Lexer { return internal.Match(filename) }\n-\n-// Analyse text content and return the \"best\" lexer..\n-func Analyse(text string) chroma.Lexer { return internal.Analyse(text) }\n-\n-// Register a Lexer with the global registry.\n-func Register(lexer chroma.Lexer) chroma.Lexer { return internal.Register(lexer) }\n-\n-// Fallback lexer if no other is found.\n-var Fallback = internal.Fallback"
    },
    {
      "sha": "ed1ea24be628c00bf0c43cc8ab0d246ffb6bd1b5",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/mathematica.go",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmathematica.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmathematica.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmathematica.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,36 +0,0 @@\n-package m\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Mathematica lexer.\n-var Mathematica = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Mathematica\",\n-\t\tAliases:   []string{\"mathematica\", \"mma\", \"nb\"},\n-\t\tFilenames: []string{\"*.nb\", \"*.cdf\", \"*.nbp\", \"*.ma\"},\n-\t\tMimeTypes: []string{\"application/mathematica\", \"application/vnd.wolfram.mathematica\", \"application/vnd.wolfram.mathematica.package\", \"application/vnd.wolfram.cdf\"},\n-\t},\n-\tmathematicaRules,\n-))\n-\n-func mathematicaRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`(?s)\\(\\*.*?\\*\\)`, Comment, nil},\n-\t\t\t{\"([a-zA-Z]+[A-Za-z0-9]*`)\", NameNamespace, nil},\n-\t\t\t{`([A-Za-z0-9]*_+[A-Za-z0-9]*)`, NameVariable, nil},\n-\t\t\t{`#\\d*`, NameVariable, nil},\n-\t\t\t{`([a-zA-Z]+[a-zA-Z0-9]*)`, Name, nil},\n-\t\t\t{`-?\\d+\\.\\d*`, LiteralNumberFloat, nil},\n-\t\t\t{`-?\\d*\\.\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`-?\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{Words(``, ``, `;;`, `=`, `=.`, `!===`, `:=`, `->`, `:>`, `/.`, `+`, `-`, `*`, `/`, `^`, `&&`, `||`, `!`, `<>`, `|`, `/;`, `?`, `@`, `//`, `/@`, `@@`, `@@@`, `~~`, `===`, `&`, `<`, `>`, `<=`, `>=`), Operator, nil},\n-\t\t\t{Words(``, ``, `,`, `;`, `(`, `)`, `[`, `]`, `{`, `}`), Punctuation, nil},\n-\t\t\t{`\".*?\"`, LiteralString, nil},\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "4e98d69776f8d4feb275b2e49b2ad31059cfec62",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/matlab.go",
      "status": "removed",
      "additions": 0,
      "deletions": 55,
      "changes": 55,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmatlab.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmatlab.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmatlab.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,55 +0,0 @@\n-package m\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Matlab lexer.\n-var Matlab = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Matlab\",\n-\t\tAliases:   []string{\"matlab\"},\n-\t\tFilenames: []string{\"*.m\"},\n-\t\tMimeTypes: []string{\"text/matlab\"},\n-\t},\n-\tmatlabRules,\n-))\n-\n-func matlabRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`^!.*`, LiteralStringOther, nil},\n-\t\t\t{`%\\{\\s*\\n`, CommentMultiline, Push(\"blockcomment\")},\n-\t\t\t{`%.*$`, Comment, nil},\n-\t\t\t{`^\\s*function`, Keyword, Push(\"deffunc\")},\n-\t\t\t{Words(``, `\\b`, `break`, `case`, `catch`, `classdef`, `continue`, `else`, `elseif`, `end`, `enumerated`, `events`, `for`, `function`, `global`, `if`, `methods`, `otherwise`, `parfor`, `persistent`, `properties`, `return`, `spmd`, `switch`, `try`, `while`), Keyword, nil},\n-\t\t\t{`(sin|sind|sinh|asin|asind|asinh|cos|cosd|cosh|acos|acosd|acosh|tan|tand|tanh|atan|atand|atan2|atanh|sec|secd|sech|asec|asecd|asech|csc|cscd|csch|acsc|acscd|acsch|cot|cotd|coth|acot|acotd|acoth|hypot|exp|expm1|log|log1p|log10|log2|pow2|realpow|reallog|realsqrt|sqrt|nthroot|nextpow2|abs|angle|complex|conj|imag|real|unwrap|isreal|cplxpair|fix|floor|ceil|round|mod|rem|sign|airy|besselj|bessely|besselh|besseli|besselk|beta|betainc|betaln|ellipj|ellipke|erf|erfc|erfcx|erfinv|expint|gamma|gammainc|gammaln|psi|legendre|cross|dot|factor|isprime|primes|gcd|lcm|rat|rats|perms|nchoosek|factorial|cart2sph|cart2pol|pol2cart|sph2cart|hsv2rgb|rgb2hsv|zeros|ones|eye|repmat|rand|randn|linspace|logspace|freqspace|meshgrid|accumarray|size|length|ndims|numel|disp|isempty|isequal|isequalwithequalnans|cat|reshape|diag|blkdiag|tril|triu|fliplr|flipud|flipdim|rot90|find|end|sub2ind|ind2sub|bsxfun|ndgrid|permute|ipermute|shiftdim|circshift|squeeze|isscalar|isvector|ans|eps|realmax|realmin|pi|i|inf|nan|isnan|isinf|isfinite|j|why|compan|gallery|hadamard|hankel|hilb|invhilb|magic|pascal|rosser|toeplitz|vander|wilkinson)\\b`, NameBuiltin, nil},\n-\t\t\t{`\\.\\.\\..*$`, Comment, nil},\n-\t\t\t{`-|==|~=|<|>|<=|>=|&&|&|~|\\|\\|?`, Operator, nil},\n-\t\t\t{`\\.\\*|\\*|\\+|\\.\\^|\\.\\\\|\\.\\/|\\/|\\\\`, Operator, nil},\n-\t\t\t{`\\[|\\]|\\(|\\)|\\{|\\}|:|@|\\.|,`, Punctuation, nil},\n-\t\t\t{`=|:|;`, Punctuation, nil},\n-\t\t\t{`(?<=[\\w)\\].])\\'+`, Operator, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\d*\\.\\d+)([eEf][+-]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+[eEf][+-]?[0-9]+`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`(?<![\\w)\\].])\\'`, LiteralString, Push(\"string\")},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t\t{`.`, Text, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`[^\\']*\\'`, LiteralString, Pop(1)},\n-\t\t},\n-\t\t\"blockcomment\": {\n-\t\t\t{`^\\s*%\\}`, CommentMultiline, Pop(1)},\n-\t\t\t{`^.*\\n`, CommentMultiline, nil},\n-\t\t\t{`.`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"deffunc\": {\n-\t\t\t{`(\\s*)(?:(.+)(\\s*)(=)(\\s*))?(.+)(\\()(.*)(\\))(\\s*)`, ByGroups(TextWhitespace, Text, TextWhitespace, Punctuation, TextWhitespace, NameFunction, Punctuation, Text, Punctuation, TextWhitespace), Pop(1)},\n-\t\t\t{`(\\s*)([a-zA-Z_]\\w*)`, ByGroups(Text, NameFunction), Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "7baec6d614b5760a837dbb1c72b0a4b1d889f17f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/mcfunction.go",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmcfunction.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmcfunction.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmcfunction.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,109 +0,0 @@\n-package m\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// mcfunction lexer.\n-var MCFunction = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:         \"mcfunction\",\n-\t\tAliases:      []string{\"mcfunction\"},\n-\t\tFilenames:    []string{\"*.mcfunction\"},\n-\t\tMimeTypes:    []string{},\n-\t\tNotMultiline: true,\n-\t\tDotAll:       true,\n-\t},\n-\tfunc() Rules {\n-\t\treturn Rules{\n-\t\t\t\"simplevalue\": {\n-\t\t\t\t{`(true|false)`, KeywordConstant, nil},\n-\t\t\t\t{`[01]b`, LiteralNumber, nil},\n-\t\t\t\t{`-?(0|[1-9]\\d*)(\\.\\d+[eE](\\+|-)?\\d+|[eE](\\+|-)?\\d+|\\.\\d+)`, LiteralNumberFloat, nil},\n-\t\t\t\t{`(-?\\d+)(\\.\\.)(-?\\d+)`, ByGroups(LiteralNumberInteger, Punctuation, LiteralNumberInteger), nil},\n-\t\t\t\t{`-?(0|[1-9]\\d*)`, LiteralNumberInteger, nil},\n-\t\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t\t{`'[^']+'`, LiteralStringSingle, nil},\n-\t\t\t\t{`([!#]?)(\\w+)`, ByGroups(Punctuation, Text), nil},\n-\t\t\t},\n-\t\t\t\"nbtobjectattribute\": {\n-\t\t\t\tInclude(\"nbtvalue\"),\n-\t\t\t\t{`:`, Punctuation, nil},\n-\t\t\t\t{`,`, Punctuation, Pop(1)},\n-\t\t\t\t{`\\}`, Punctuation, Pop(2)},\n-\t\t\t},\n-\t\t\t\"nbtobjectvalue\": {\n-\t\t\t\t{`(\"(\\\\\\\\|\\\\\"|[^\"])*\"|[a-zA-Z0-9_]+)`, NameTag, Push(\"nbtobjectattribute\")},\n-\t\t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t\t},\n-\t\t\t\"nbtarrayvalue\": {\n-\t\t\t\tInclude(\"nbtvalue\"),\n-\t\t\t\t{`,`, Punctuation, nil},\n-\t\t\t\t{`\\]`, Punctuation, Pop(1)},\n-\t\t\t},\n-\t\t\t\"nbtvalue\": {\n-\t\t\t\tInclude(\"simplevalue\"),\n-\t\t\t\t{`\\{`, Punctuation, Push(\"nbtobjectvalue\")},\n-\t\t\t\t{`\\[`, Punctuation, Push(\"nbtarrayvalue\")},\n-\t\t\t},\n-\t\t\t\"argumentvalue\": {\n-\t\t\t\tInclude(\"simplevalue\"),\n-\t\t\t\t{`,`, Punctuation, Pop(1)},\n-\t\t\t\t{`[}\\]]`, Punctuation, Pop(2)},\n-\t\t\t},\n-\t\t\t\"argumentlist\": {\n-\t\t\t\t{`(nbt)(={)`, ByGroups(NameAttribute, Punctuation), Push(\"nbtobjectvalue\")},\n-\t\t\t\t{`([A-Za-z0-9/_!]+)(={)`, ByGroups(NameAttribute, Punctuation), Push(\"argumentlist\")},\n-\t\t\t\t{`([A-Za-z0-9/_!]+)(=)`, ByGroups(NameAttribute, Punctuation), Push(\"argumentvalue\")},\n-\t\t\t\tInclude(\"simplevalue\"),\n-\t\t\t\t{`,`, Punctuation, nil},\n-\t\t\t\t{`[}\\]]`, Punctuation, Pop(1)},\n-\t\t\t},\n-\t\t\t\"root\": {\n-\t\t\t\t{`#.*?\\n`, CommentSingle, nil},\n-\t\t\t\t{Words(`/?`, `\\b`, `ability`, `attributes`, `advancement`,\n-\t\t\t\t\t`ban`, `ban-ip`, `banlist`, `bossbar`,\n-\t\t\t\t\t`camerashake`, `classroommode`, `clear`,\n-\t\t\t\t\t`clearspawnpoint`, `clone`, `code`, `collect`,\n-\t\t\t\t\t`createagent`, `data`, `datapack`, `debug`,\n-\t\t\t\t\t`defaultgamemode`, `deop`, `destroy`, `detect`,\n-\t\t\t\t\t`detectredstone`, `difficulty`, `dropall`,\n-\t\t\t\t\t`effect`, `enchant`, `event`, `execute`,\n-\t\t\t\t\t`experience`, `fill`, `flog`, `forceload`,\n-\t\t\t\t\t`function`, `gamemode`, `gamerule`,\n-\t\t\t\t\t`geteduclientinfo`, `give`, `help`, `item`,\n-\t\t\t\t\t`immutableworld`, `kick`, `kill`, `list`,\n-\t\t\t\t\t`locate`, `locatebiome`, `loot`, `me`, `mixer`,\n-\t\t\t\t\t`mobevent`, `move`, `msg`, `music`, `op`,\n-\t\t\t\t\t`pardon`, `particle`, `playanimation`,\n-\t\t\t\t\t`playsound`, `position`, `publish`,\n-\t\t\t\t\t`raytracefog`, `recipe`, `reload`, `remove`,\n-\t\t\t\t\t`replaceitem`, `ride`, `save`, `save-all`,\n-\t\t\t\t\t`save-off`, `save-on`, `say`, `schedule`,\n-\t\t\t\t\t`scoreboard`, `seed`, `setblock`,\n-\t\t\t\t\t`setidletimeout`, `setmaxplayers`,\n-\t\t\t\t\t`setworldspawn`, `spawnpoint`, `spectate`,\n-\t\t\t\t\t`spreadplayers`, `stop`, `stopsound`,\n-\t\t\t\t\t`structure`, `summon`, `tag`, `team`, `teammsg`,\n-\t\t\t\t\t`teleport`, `tell`, `tellraw`, `testfor`,\n-\t\t\t\t\t`testforblock`, `testforblocks`, `tickingarea`,\n-\t\t\t\t\t`time`, `title`, `toggledownfall`, `tp`,\n-\t\t\t\t\t`tpagent`, `transfer`, `transferserver`,\n-\t\t\t\t\t`trigger`, `turn`, `w`, `weather`, `whitelist`,\n-\t\t\t\t\t`worldborder`, `worldbuilder`, `wsserver`, `xp`,\n-\t\t\t\t), KeywordReserved, nil},\n-\t\t\t\t{Words(``, ``, `@p`, `@r`, `@a`, `@e`, `@s`, `@c`, `@v`),\n-\t\t\t\t\tKeywordConstant, nil},\n-\t\t\t\t{`\\[`, Punctuation, Push(\"argumentlist\")},\n-\t\t\t\t{`{`, Punctuation, Push(\"nbtobjectvalue\")},\n-\t\t\t\t{`~`, NameBuiltin, nil},\n-\t\t\t\t{`([a-zA-Z_]+:)?[a-zA-Z_]+\\b`, Text, nil},\n-\t\t\t\t{`([a-z]+)(\\.)([0-9]+)\\b`, ByGroups(Text, Punctuation, LiteralNumber), nil},\n-\t\t\t\t{`([<>=]|<=|>=)`, Punctuation, nil},\n-\t\t\t\tInclude(\"simplevalue\"),\n-\t\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t\t},\n-\t\t}\n-\t},\n-))"
    },
    {
      "sha": "2a6a22f898ed6f062f676a85c953875e0bb66596",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/meson.go",
      "status": "removed",
      "additions": 0,
      "deletions": 51,
      "changes": 51,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmeson.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmeson.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmeson.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,51 +0,0 @@\n-package m\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Meson lexer.\n-var Meson = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Meson\",\n-\t\tAliases:   []string{\"meson\", \"meson.build\"},\n-\t\tFilenames: []string{\"meson.build\", \"meson_options.txt\"},\n-\t\tMimeTypes: []string{\"text/x-meson\"},\n-\t},\n-\tfunc() Rules {\n-\t\treturn Rules{\n-\t\t\t\"root\": {\n-\t\t\t\t{`#.*?$`, Comment, nil},\n-\t\t\t\t{`'''.*'''`, LiteralStringSingle, nil},\n-\t\t\t\t{`[1-9][0-9]*`, LiteralNumberInteger, nil},\n-\t\t\t\t{`0o[0-7]+`, LiteralNumberOct, nil},\n-\t\t\t\t{`0x[a-fA-F0-9]+`, LiteralNumberHex, nil},\n-\t\t\t\tInclude(\"string\"),\n-\t\t\t\tInclude(\"keywords\"),\n-\t\t\t\tInclude(\"expr\"),\n-\t\t\t\t{`[a-zA-Z_][a-zA-Z_0-9]*`, Name, nil},\n-\t\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t\t},\n-\t\t\t\"string\": {\n-\t\t\t\t{`[']{3}([']{0,2}([^\\\\']|\\\\(.|\\n)))*[']{3}`, LiteralString, nil},\n-\t\t\t\t{`'.*?(?<!\\\\)(\\\\\\\\)*?'`, LiteralString, nil},\n-\t\t\t},\n-\t\t\t\"keywords\": {\n-\t\t\t\t{Words(``, `\\b`, `if`, `elif`, `else`, `endif`, `foreach`, `endforeach`, `break`, `continue`), Keyword, nil},\n-\t\t\t},\n-\t\t\t\"expr\": {\n-\t\t\t\t{`(in|and|or|not)\\b`, OperatorWord, nil},\n-\t\t\t\t{`(\\*=|/=|%=|\\+]=|-=|==|!=|\\+|-|=)`, Operator, nil},\n-\t\t\t\t{`[\\[\\]{}:().,?]`, Punctuation, nil},\n-\t\t\t\t{Words(``, `\\b`, `true`, `false`), KeywordConstant, nil},\n-\t\t\t\tInclude(\"builtins\"),\n-\t\t\t\t{Words(``, `\\b`, `meson`, `build_machine`, `host_machine`, `target_machine`), NameVariableMagic, nil},\n-\t\t\t},\n-\t\t\t\"builtins\": {\n-\t\t\t\t{Words(`(?<!\\.)`, `\\b`, `add_global_arguments`, `add_global_link_arguments`, `add_languages`, `add_project_arguments`, `add_project_link_arguments`, `add_test_setup`, `assert`, `benchmark`, `both_libraries`, `build_target`, `configuration_data`, `configure_file`, `custom_target`, `declare_dependency`, `dependency`, `disabler`, `environment`, `error`, `executable`, `files`, `find_library`, `find_program`, `generator`, `get_option`, `get_variable`, `include_directories`, `install_data`, `install_headers`, `install_man`, `install_subdir`, `is_disabler`, `is_variable`, `jar`, `join_paths`, `library`, `message`, `project`, `range`, `run_command`, `set_variable`, `shared_library`, `shared_module`, `static_library`, `subdir`, `subdir_done`, `subproject`, `summary`, `test`, `vcs_tag`, `warning`), NameBuiltin, nil},\n-\t\t\t\t{`(?<!\\.)import\\b`, NameNamespace, nil},\n-\t\t\t},\n-\t\t}\n-\t},\n-))"
    },
    {
      "sha": "4a9ba2b78e610ee0557b626bcf4b6bc81f914ae7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/metal.go",
      "status": "removed",
      "additions": 0,
      "deletions": 101,
      "changes": 101,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmetal.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmetal.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmetal.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,101 +0,0 @@\n-package m\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Metal lexer.\n-var Metal = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Metal\",\n-\t\tAliases:   []string{\"metal\"},\n-\t\tFilenames: []string{\"*.metal\"},\n-\t\tMimeTypes: []string{\"text/x-metal\"},\n-\t\tEnsureNL:  true,\n-\t},\n-\tmetalRules,\n-))\n-\n-func metalRules() Rules {\n-\treturn Rules{\n-\t\t\"statements\": {\n-\t\t\t{Words(``, `\\b`, `namespace`, `operator`, `template`, `this`, `using`, `constexpr`), Keyword, nil},\n-\t\t\t{`(enum)\\b(\\s+)(class)\\b(\\s*)`, ByGroups(Keyword, Text, Keyword, Text), Push(\"classname\")},\n-\t\t\t{`(class|struct|enum|union)\\b(\\s*)`, ByGroups(Keyword, Text), Push(\"classname\")},\n-\t\t\t{`\\[\\[.+\\]\\]`, NameAttribute, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+)[eE][+-]?\\d+[LlUu]*`, LiteralNumberFloat, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+[fF])[fF]?`, LiteralNumberFloat, nil},\n-\t\t\t{`0[xX]([0-9A-Fa-f]('?[0-9A-Fa-f]+)*)[LlUu]*`, LiteralNumberHex, nil},\n-\t\t\t{`0('?[0-7]+)+[LlUu]*`, LiteralNumberOct, nil},\n-\t\t\t{`0[Bb][01]('?[01]+)*[LlUu]*`, LiteralNumberBin, nil},\n-\t\t\t{`[0-9]('?[0-9]+)*[LlUu]*`, LiteralNumberInteger, nil},\n-\t\t\t{`\\*/`, Error, nil},\n-\t\t\t{`[~!%^&*+=|?:<>/-]`, Operator, nil},\n-\t\t\t{`[()\\[\\],.]`, Punctuation, nil},\n-\t\t\t{Words(``, `\\b`, `break`, `case`, `const`, `continue`, `do`, `else`, `enum`, `extern`, `for`, `if`, `return`, `sizeof`, `static`, `struct`, `switch`, `typedef`, `union`, `while`), Keyword, nil},\n-\t\t\t{`(bool|float|half|long|ptrdiff_t|size_t|unsigned|u?char|u?int((8|16|32|64)_t)?|u?short)\\b`, KeywordType, nil},\n-\t\t\t{`(bool|float|half|u?(char|int|long|short))(2|3|4)\\b`, KeywordType, nil},\n-\t\t\t{`packed_(float|half|long|u?(char|int|short))(2|3|4)\\b`, KeywordType, nil},\n-\t\t\t{`(float|half)(2|3|4)x(2|3|4)\\b`, KeywordType, nil},\n-\t\t\t{`atomic_u?int\\b`, KeywordType, nil},\n-\t\t\t{`(rg?(8|16)(u|s)norm|rgba(8|16)(u|s)norm|srgba8unorm|rgb10a2|rg11b10f|rgb9e5)\\b`, KeywordType, nil},\n-\t\t\t{`(array|depth(2d|cube)(_array)?|depth2d_ms(_array)?|sampler|texture_buffer|texture(1|2)d(_array)?|texture2d_ms(_array)?|texture3d|texturecube(_array)?|uniform|visible_function_table)\\b`, KeywordType, nil},\n-\t\t\t{`(true|false|NULL)\\b`, NameBuiltin, nil},\n-\t\t\t{Words(``, `\\b`, `device`, `constant`, `ray_data`, `thread`, `threadgroup`, `threadgroup_imageblock`), Keyword, nil},\n-\t\t\t{`([a-zA-Z_]\\w*)(\\s*)(:)(?!:)`, ByGroups(NameLabel, Text, Punctuation), nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`(fragment|kernel|vertex)?((?:[\\w*\\s])+?(?:\\s|[*]))([a-zA-Z_]\\w*)(\\s*\\([^;]*?\\))([^;{]*)(\\{)`, ByGroups(Keyword, UsingSelf(\"root\"), NameFunction, UsingSelf(\"root\"), UsingSelf(\"root\"), Punctuation), Push(\"function\")},\n-\t\t\t{`(fragment|kernel|vertex)?((?:[\\w*\\s])+?(?:\\s|[*]))([a-zA-Z_]\\w*)(\\s*\\([^;]*?\\))([^;]*)(;)`, ByGroups(Keyword, UsingSelf(\"root\"), NameFunction, UsingSelf(\"root\"), UsingSelf(\"root\"), Punctuation), nil},\n-\t\t\tDefault(Push(\"statement\")),\n-\t\t},\n-\t\t\"classname\": {\n-\t\t\t{`(\\[\\[.+\\]\\])(\\s*)`, ByGroups(NameAttribute, Text), nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, NameClass, Pop(1)},\n-\t\t\t{`\\s*(?=[>{])`, Text, Pop(1)},\n-\t\t},\n-\t\t\"whitespace\": {\n-\t\t\t{`^#if\\s+0`, CommentPreproc, Push(\"if0\")},\n-\t\t\t{`^#`, CommentPreproc, Push(\"macro\")},\n-\t\t\t{`^(\\s*(?:/[*].*?[*]/\\s*)?)(#if\\s+0)`, ByGroups(UsingSelf(\"root\"), CommentPreproc), Push(\"if0\")},\n-\t\t\t{`^(\\s*(?:/[*].*?[*]/\\s*)?)(#)`, ByGroups(UsingSelf(\"root\"), CommentPreproc), Push(\"macro\")},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`//(\\n|[\\w\\W]*?[^\\\\]\\n)`, CommentSingle, nil},\n-\t\t\t{`/(\\\\\\n)?[*][\\w\\W]*?[*](\\\\\\n)?/`, CommentMultiline, nil},\n-\t\t\t{`/(\\\\\\n)?[*][\\w\\W]*`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"statement\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"statements\"),\n-\t\t\t{`[{]`, Punctuation, Push(\"root\")},\n-\t\t\t{`[;}]`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"function\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"statements\"),\n-\t\t\t{`;`, Punctuation, nil},\n-\t\t\t{`\\{`, Punctuation, Push()},\n-\t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"macro\": {\n-\t\t\t{`(include)(\\s*(?:/[*].*?[*]/\\s*)?)([^\\n]+)`, ByGroups(CommentPreproc, Text, CommentPreprocFile), nil},\n-\t\t\t{`[^/\\n]+`, CommentPreproc, nil},\n-\t\t\t{`/[*](.|\\n)*?[*]/`, CommentMultiline, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, Pop(1)},\n-\t\t\t{`/`, CommentPreproc, nil},\n-\t\t\t{`(?<=\\\\)\\n`, CommentPreproc, nil},\n-\t\t\t{`\\n`, CommentPreproc, Pop(1)},\n-\t\t},\n-\t\t\"if0\": {\n-\t\t\t{`^\\s*#if.*?(?<!\\\\)\\n`, CommentPreproc, Push()},\n-\t\t\t{`^\\s*#el(?:se|if).*\\n`, CommentPreproc, Pop(1)},\n-\t\t\t{`^\\s*#endif.*?(?<!\\\\)\\n`, CommentPreproc, Pop(1)},\n-\t\t\t{`.*?\\n`, Comment, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "63d59ed033e892e3d9b530f62f197f1367e37e50",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/minizinc.go",
      "status": "removed",
      "additions": 0,
      "deletions": 45,
      "changes": 45,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fminizinc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fminizinc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fminizinc.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,45 +0,0 @@\n-package m\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// MiniZinc lexer.\n-var MZN = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"MiniZinc\",\n-\t\tAliases:   []string{\"minizinc\", \"MZN\", \"mzn\"},\n-\t\tFilenames: []string{\"*.mzn\", \"*.dzn\", \"*.fzn\"},\n-\t\tMimeTypes: []string{\"text/minizinc\"},\n-\t},\n-\tmznRules,\n-))\n-\n-func mznRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`\\%(.*?)\\n`, CommentSingle, nil},\n-\t\t\t{`/(\\\\\\n)?[*](.|\\n)*?[*](\\\\\\n)?/`, CommentMultiline, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `ann`, `annotation`, `any`, `constraint`, `function`, `include`, `list`, `of`, `op`, `output`, `minimize`, `maximize`, `par`, `predicate`, `record`, `satisfy`, `solve`, `test`, `type`, `var`), Keyword, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `array`, `set`, `bool`, `enum`, `float`, `int`, `string`, `tuple`), KeywordType, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `for`, `forall`, `if`, `then`, `else`, `endif`, `where`), Keyword, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `abort`, `abs`, `acosh`, `array_intersect`, `array_union`, `array1d`, `array2d`, `array3d`, `array4d`, `array5d`, `array6d`, `asin`, `assert`, `atan`, `bool2int`, `card`, `ceil`, `concat`, `cos`, `cosh`, `dom`, `dom_array`, `dom_size`, `fix`, `exp`, `floor`, `index_set`, `index_set_1of2`, `index_set_2of2`, `index_set_1of3`, `index_set_2of3`, `index_set_3of3`, `int2float`, `is_fixed`, `join`, `lb`, `lb_array`, `length`, `ln`, `log`, `log2`, `log10`, `min`, `max`, `pow`, `product`, `round`, `set2array`, `show`, `show_int`, `show_float`, `sin`, `sinh`, `sqrt`, `sum`, `tan`, `tanh`, `trace`, `ub`, `ub_array`), NameBuiltin, nil},\n-\t\t\t{`(not|<->|->|<-|\\\\/|xor|/\\\\)`, Operator, nil},\n-\t\t\t{`(<|>|<=|>=|==|=|!=)`, Operator, nil},\n-\t\t\t{`(\\+|-|\\*|/|div|mod)`, Operator, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `in`, `subset`, `superset`, `union`, `diff`, `symdiff`, `intersect`), Operator, nil},\n-\t\t\t{`(\\\\|\\.\\.|\\+\\+)`, Operator, nil},\n-\t\t\t{`[|()\\[\\]{},:;]`, Punctuation, nil},\n-\t\t\t{`(true|false)\\b`, KeywordConstant, nil},\n-\t\t\t{`([+-]?)\\d+(\\.(?!\\.)\\d*)?([eE][-+]?\\d+)?`, LiteralNumber, nil},\n-\t\t\t{`::\\s*([^\\W\\d]\\w*)(\\s*\\([^\\)]*\\))?`, NameDecorator, nil},\n-\t\t\t{`\\b([^\\W\\d]\\w*)\\b(\\()`, ByGroups(NameFunction, Punctuation), nil},\n-\t\t\t{`[^\\W\\d]\\w*`, NameOther, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "112a1c3a61bdfbae014c4661f5563d92726eec8a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/mlir.go",
      "status": "removed",
      "additions": 0,
      "deletions": 47,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmlir.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmlir.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmlir.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,47 +0,0 @@\n-package m\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// MLIR lexer.\n-var Mlir = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"MLIR\",\n-\t\tAliases:   []string{\"mlir\"},\n-\t\tFilenames: []string{\"*.mlir\"},\n-\t\tMimeTypes: []string{\"text/x-mlir\"},\n-\t},\n-\tmlirRules,\n-))\n-\n-func mlirRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`c?\"[^\"]*?\"`, LiteralString, nil},\n-\t\t\t{`\\^([-a-zA-Z$._][\\w\\-$.0-9]*)\\s*`, NameLabel, nil},\n-\t\t\t{`([\\w\\d_$.]+)\\s*=`, NameLabel, nil},\n-\t\t\tInclude(\"keyword\"),\n-\t\t\t{`->`, Punctuation, nil},\n-\t\t\t{`@([\\w_][\\w\\d_$.]*)`, NameFunction, nil},\n-\t\t\t{`[%#][\\w\\d_$.]+`, NameVariable, nil},\n-\t\t\t{`([1-9?][\\d?]*\\s*x)+`, LiteralNumber, nil},\n-\t\t\t{`0[xX][a-fA-F0-9]+`, LiteralNumber, nil},\n-\t\t\t{`-?\\d+(?:[.]\\d+)?(?:[eE][-+]?\\d+(?:[.]\\d+)?)?`, LiteralNumber, nil},\n-\t\t\t{`[=<>{}\\[\\]()*.,!:]|x\\b`, Punctuation, nil},\n-\t\t\t{`[\\w\\d]+`, Text, nil},\n-\t\t},\n-\t\t\"whitespace\": {\n-\t\t\t{`(\\n|\\s)+`, Text, nil},\n-\t\t\t{`//.*?\\n`, Comment, nil},\n-\t\t},\n-\t\t\"keyword\": {\n-\t\t\t{Words(``, ``, `constant`, `return`), KeywordType, nil},\n-\t\t\t{Words(``, ``, `func`, `loc`, `memref`, `tensor`, `vector`), KeywordType, nil},\n-\t\t\t{`bf16|f16|f32|f64|index`, Keyword, nil},\n-\t\t\t{`i[1-9]\\d*`, Keyword, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "6ab05c9ed3d204c8dba5d0e047fe3d2581fba853",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/modula2.go",
      "status": "removed",
      "additions": 0,
      "deletions": 119,
      "changes": 119,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmodula2.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmodula2.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmodula2.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,119 +0,0 @@\n-package m\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Modula-2 lexer.\n-var Modula2 = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Modula-2\",\n-\t\tAliases:   []string{\"modula2\", \"m2\"},\n-\t\tFilenames: []string{\"*.def\", \"*.mod\"},\n-\t\tMimeTypes: []string{\"text/x-modula2\"},\n-\t\tDotAll:    true,\n-\t},\n-\tmodula2Rules,\n-))\n-\n-func modula2Rules() Rules {\n-\treturn Rules{\n-\t\t\"whitespace\": {\n-\t\t\t{`\\n+`, Text, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t\t\"dialecttags\": {\n-\t\t\t{`\\(\\*!m2pim\\*\\)`, CommentSpecial, nil},\n-\t\t\t{`\\(\\*!m2iso\\*\\)`, CommentSpecial, nil},\n-\t\t\t{`\\(\\*!m2r10\\*\\)`, CommentSpecial, nil},\n-\t\t\t{`\\(\\*!objm2\\*\\)`, CommentSpecial, nil},\n-\t\t\t{`\\(\\*!m2iso\\+aglet\\*\\)`, CommentSpecial, nil},\n-\t\t\t{`\\(\\*!m2pim\\+gm2\\*\\)`, CommentSpecial, nil},\n-\t\t\t{`\\(\\*!m2iso\\+p1\\*\\)`, CommentSpecial, nil},\n-\t\t\t{`\\(\\*!m2iso\\+xds\\*\\)`, CommentSpecial, nil},\n-\t\t},\n-\t\t\"identifiers\": {\n-\t\t\t{`([a-zA-Z_$][\\w$]*)`, Name, nil},\n-\t\t},\n-\t\t\"prefixed_number_literals\": {\n-\t\t\t{`0b[01]+(\\'[01]+)*`, LiteralNumberBin, nil},\n-\t\t\t{`0[ux][0-9A-F]+(\\'[0-9A-F]+)*`, LiteralNumberHex, nil},\n-\t\t},\n-\t\t\"plain_number_literals\": {\n-\t\t\t{`[0-9]+(\\'[0-9]+)*\\.[0-9]+(\\'[0-9]+)*[eE][+-]?[0-9]+(\\'[0-9]+)*`, LiteralNumberFloat, nil},\n-\t\t\t{`[0-9]+(\\'[0-9]+)*\\.[0-9]+(\\'[0-9]+)*`, LiteralNumberFloat, nil},\n-\t\t\t{`[0-9]+(\\'[0-9]+)*`, LiteralNumberInteger, nil},\n-\t\t},\n-\t\t\"suffixed_number_literals\": {\n-\t\t\t{`[0-7]+B`, LiteralNumberOct, nil},\n-\t\t\t{`[0-7]+C`, LiteralNumberOct, nil},\n-\t\t\t{`[0-9A-F]+H`, LiteralNumberHex, nil},\n-\t\t},\n-\t\t\"string_literals\": {\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralString, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t},\n-\t\t\"digraph_operators\": {\n-\t\t\t{`\\*\\.`, Operator, nil},\n-\t\t\t{`\\+>`, Operator, nil},\n-\t\t\t{`<>`, Operator, nil},\n-\t\t\t{`<=`, Operator, nil},\n-\t\t\t{`>=`, Operator, nil},\n-\t\t\t{`==`, Operator, nil},\n-\t\t\t{`::`, Operator, nil},\n-\t\t\t{`:=`, Operator, nil},\n-\t\t\t{`\\+\\+`, Operator, nil},\n-\t\t\t{`--`, Operator, nil},\n-\t\t},\n-\t\t\"unigraph_operators\": {\n-\t\t\t{`[+-]`, Operator, nil},\n-\t\t\t{`[*/]`, Operator, nil},\n-\t\t\t{`\\\\`, Operator, nil},\n-\t\t\t{`[=#<>]`, Operator, nil},\n-\t\t\t{`\\^`, Operator, nil},\n-\t\t\t{`@`, Operator, nil},\n-\t\t\t{`&`, Operator, nil},\n-\t\t\t{`~`, Operator, nil},\n-\t\t\t{\"`\", Operator, nil},\n-\t\t},\n-\t\t\"digraph_punctuation\": {\n-\t\t\t{`\\.\\.`, Punctuation, nil},\n-\t\t\t{`<<`, Punctuation, nil},\n-\t\t\t{`>>`, Punctuation, nil},\n-\t\t\t{`->`, Punctuation, nil},\n-\t\t\t{`\\|#`, Punctuation, nil},\n-\t\t\t{`##`, Punctuation, nil},\n-\t\t\t{`\\|\\*`, Punctuation, nil},\n-\t\t},\n-\t\t\"unigraph_punctuation\": {\n-\t\t\t{`[()\\[\\]{},.:;|]`, Punctuation, nil},\n-\t\t\t{`!`, Punctuation, nil},\n-\t\t\t{`\\?`, Punctuation, nil},\n-\t\t},\n-\t\t\"comments\": {\n-\t\t\t{`^//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`\\(\\*([^$].*?)\\*\\)`, CommentMultiline, nil},\n-\t\t\t{`/\\*(.*?)\\*/`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"pragmas\": {\n-\t\t\t{`<\\*.*?\\*>`, CommentPreproc, nil},\n-\t\t\t{`\\(\\*\\$.*?\\*\\)`, CommentPreproc, nil},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"dialecttags\"),\n-\t\t\tInclude(\"pragmas\"),\n-\t\t\tInclude(\"comments\"),\n-\t\t\tInclude(\"identifiers\"),\n-\t\t\tInclude(\"suffixed_number_literals\"),\n-\t\t\tInclude(\"prefixed_number_literals\"),\n-\t\t\tInclude(\"plain_number_literals\"),\n-\t\t\tInclude(\"string_literals\"),\n-\t\t\tInclude(\"digraph_punctuation\"),\n-\t\t\tInclude(\"digraph_operators\"),\n-\t\t\tInclude(\"unigraph_punctuation\"),\n-\t\t\tInclude(\"unigraph_operators\"),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "8ad81cc0866169af2134ef8c400fe749852b81e6",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/monkeyc.go",
      "status": "removed",
      "additions": 0,
      "deletions": 66,
      "changes": 66,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmonkeyc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmonkeyc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmonkeyc.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,66 +0,0 @@\n-package m\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-var MonkeyC = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"MonkeyC\",\n-\t\tAliases:   []string{\"monkeyc\"},\n-\t\tFilenames: []string{\"*.mc\"},\n-\t\tMimeTypes: []string{\"text/x-monkeyc\"},\n-\t},\n-\tmonkeyCRules,\n-))\n-\n-func monkeyCRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`//(\\n|[\\w\\W]*?[^\\\\]\\n)`, CommentSingle, nil},\n-\t\t\t{`/(\\\\\\n)?[*][\\w\\W]*?[*](\\\\\\n)?/`, CommentMultiline, nil},\n-\t\t\t{`/(\\\\\\n)?[*][\\w\\W]*`, CommentMultiline, nil},\n-\t\t\t{`:[a-zA-Z_][\\w_\\.]*`, StringSymbol, nil},\n-\t\t\t{`[{}\\[\\]\\(\\),;:\\.]`, Punctuation, nil},\n-\t\t\t{`[&~\\|\\^!+\\-*\\/%=?]`, Operator, nil},\n-\t\t\t{`=>|[+-]=|&&|\\|\\||>>|<<|[<>]=?|[!=]=`, Operator, nil},\n-\t\t\t{`\\b(and|or|instanceof|has|extends|new)`, OperatorWord, nil},\n-\t\t\t{Words(``, `\\b`, `NaN`, `null`, `true`, `false`), KeywordConstant, nil},\n-\t\t\t{`(using)((?:\\s|\\\\\\\\s)+)`, ByGroups(KeywordNamespace, Text), Push(\"import\")},\n-\t\t\t{`(class)((?:\\s|\\\\\\\\s)+)`, ByGroups(KeywordDeclaration, Text), Push(\"class\")},\n-\t\t\t{`(function)((?:\\s|\\\\\\\\s)+)`, ByGroups(KeywordDeclaration, Text), Push(\"function\")},\n-\t\t\t{`(module)((?:\\s|\\\\\\\\s)+)`, ByGroups(KeywordDeclaration, Text), Push(\"module\")},\n-\t\t\t{`\\b(if|else|for|switch|case|while|break|continue|default|do|try|catch|finally|return|throw|extends|function)\\b`, Keyword, nil},\n-\t\t\t{`\\b(const|enum|hidden|public|protected|private|static)\\b`, KeywordType, nil},\n-\t\t\t{`\\bvar\\b`, KeywordDeclaration, nil},\n-\t\t\t{`\\b(Activity(Monitor|Recording)?|Ant(Plus)?|Application|Attention|Background|Communications|Cryptography|FitContributor|Graphics|Gregorian|Lang|Math|Media|Persisted(Content|Locations)|Position|Properties|Sensor(History|Logging)?|Storage|StringUtil|System|Test|Time(r)?|Toybox|UserProfile|WatchUi|Rez|Drawables|Strings|Fonts|method)\\b`, NameBuiltin, nil},\n-\t\t\t{`\\b(me|self|\\$)\\b`, NameBuiltinPseudo, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^''])*'`, LiteralStringSingle, nil},\n-\t\t\t{`-?(0x[0-9a-fA-F]+l?)`, NumberHex, nil},\n-\t\t\t{`-?([0-9]+(\\.[0-9]+[df]?|[df]))\\b`, NumberFloat, nil},\n-\t\t\t{`-?([0-9]+l?)`, NumberInteger, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t},\n-\t\t\"import\": {\n-\t\t\t{`([a-zA-Z_][\\w_\\.]*)(?:(\\s+)(as)(\\s+)([a-zA-Z_][\\w_]*))?`, ByGroups(NameNamespace, Text, KeywordNamespace, Text, NameNamespace), nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"class\": {\n-\t\t\t{`([a-zA-Z_][\\w_\\.]*)(?:(\\s+)(extends)(\\s+)([a-zA-Z_][\\w_\\.]*))?`, ByGroups(NameClass, Text, KeywordDeclaration, Text, NameClass), nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"function\": {\n-\t\t\t{`initialize`, NameFunctionMagic, nil},\n-\t\t\t{`[a-zA-Z_][\\w_\\.]*`, NameFunction, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"module\": {\n-\t\t\t{`[a-zA-Z_][\\w_\\.]*`, NameNamespace, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "0ba0ba97c315ba13458494d64aaee6a1608d8e1a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/mwscript.go",
      "status": "removed",
      "additions": 0,
      "deletions": 57,
      "changes": 57,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmwscript.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmwscript.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmwscript.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,57 +0,0 @@\n-package m\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// MorrowindScript lexer.\n-var MorrowindScript = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"MorrowindScript\",\n-\t\tAliases:   []string{\"morrowind\", \"mwscript\"},\n-\t\tFilenames: []string{},\n-\t\tMimeTypes: []string{},\n-\t},\n-\tmorrowindScriptRules,\n-))\n-\n-func morrowindScriptRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`;.*$`, Comment, nil},\n-\t\t\t{`([\"'])(?:(?=(\\\\?))\\2.)*?\\1`, LiteralString, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`[0-9]+\\.[0-9]*(?!\\.)`, LiteralNumberFloat, nil},\n-\t\t\tInclude(\"keywords\"),\n-\t\t\tInclude(\"types\"),\n-\t\t\tInclude(\"builtins\"),\n-\t\t\tInclude(\"punct\"),\n-\t\t\tInclude(\"operators\"),\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`\\S+\\s+`, Text, nil},\n-\t\t\t{`[a-zA-Z0-9_]\\w*`, Name, nil},\n-\t\t},\n-\t\t\"keywords\": {\n-\t\t\t{`(?i)(begin|if|else|elseif|endif|while|endwhile|return|to)\\b`, Keyword, nil},\n-\t\t\t{`(?i)(end)\\b`, Keyword, nil},\n-\t\t\t{`(?i)(end)\\w+.*$`, Text, nil},\n-\t\t\t{`[\\w+]->[\\w+]`, Operator, nil},\n-\t\t},\n-\t\t\"builtins\": {\n-\t\t\t{`(?i)(Activate|AddItem|AddSoulGem|AddSpell|AddToLevCreature|AddToLevItem|AddTopic|AIActivate|AIEscort|AIEscortCell|AIFollow|AiFollowCell|AITravel|AIWander|BecomeWerewolf|Cast|ChangeWeather|Choice|ClearForceJump|ClearForceMoveJump|ClearForceRun|ClearForceSneak|ClearInfoActor|Disable|DisableLevitation|DisablePlayerControls|DisablePlayerFighting|DisablePlayerJumping|DisablePlayerLooking|DisablePlayerMagic|DisablePlayerViewSwitch|DisableTeleporting|DisableVanityMode|DontSaveObject|Drop|Enable|EnableBirthMenu|EnableClassMenu|EnableInventoryMenu|EnableLevelUpMenu|EnableLevitation|EnableMagicMenu|EnableMapMenu|EnableNameMenu|EnablePlayerControls|EnablePlayerFighting|EnablePlayerJumping|EnablePlayerLooking|EnablePlayerMagic|EnablePlayerViewSwitch|EnableRaceMenu|EnableRest|EnableStatsMenu|EnableTeleporting|EnableVanityMode|Equip|ExplodeSpell|Face|FadeIn|FadeOut|FadeTo|Fall|ForceGreeting|ForceJump|ForceRun|ForceSneak|Flee|GotoJail|HurtCollidingActor|HurtStandingActor|Journal|Lock|LoopGroup|LowerRank|MenuTest|MessageBox|ModAcrobatics|ModAgility|ModAlarm|ModAlchemy|ModAlteration|ModArmorBonus|ModArmorer|ModAthletics|ModAttackBonus|ModAxe|ModBlock|ModBluntWeapon|ModCastPenalty|ModChameleon|ModConjuration|ModCurrentFatigue|ModCurrentHealth|ModCurrentMagicka|ModDefendBonus|ModDestruction|ModDisposition|ModEnchant|ModEndurance|ModFactionReaction|ModFatigue|ModFight|ModFlee|ModFlying|ModHandToHand|ModHealth|ModHeavyArmor|ModIllusion|ModIntelligence|ModInvisible|ModLightArmor|ModLongBlade|ModLuck|ModMagicka|ModMarksman|ModMediumArmor|ModMercantile|ModMysticism|ModParalysis|ModPCCrimeLevel|ModPCFacRep|ModPersonality|ModRegion|ModReputation|ModResistBlight|ModResistCorprus|ModResistDisease|ModResistFire|ModResistFrost|ModResistMagicka|ModResistNormalWeapons|ModResistParalysis|ModResistPoison|ModResistShock|ModRestoration|ModScale|ModSecurity|ModShortBlade|ModSilence|ModSneak|ModSpear|ModSpeechcraft|ModSpeed|ModStrength|ModSuperJump|ModSwimSpeed|ModUnarmored|ModWaterBreathing|ModWaterLevel|ModWaterWalking|ModWillpower|Move|MoveWorld|PayFine|PayFineThief|PCClearExpelled|PCExpell|PCForce1stPerson|PCForce3rdPerson|PCJoinFaction|PCLowerRank|PCRaiseRank|PlaceAtMe|PlaceAtPC|PlaceItem|PlaceItemCell|PlayBink|PlayGroup|PlayLoopSound3D|PlayLoopSound3DVP|PlaySound|PlaySound3D|PlaySound3DVP|PlaySoundVP|Position|PositionCell|RaiseRank|RemoveEffects|RemoveFromLevCreature|RemoveFromLevItem|RemoveItem|RemoveSoulgem|RemoveSpell|RemoveSpellEffects|ResetActors|Resurrect|Rotate|RotateWorld|Say|StartScript|[S|s]et|SetAcrobatics|SetAgility|SetAlarm|SetAlchemy|SetAlteration|SetAngle|SetArmorBonus|SetArmorer|SetAthletics|SetAtStart|SetAttackBonus|SetAxe|SetBlock|SetBluntWeapon|SetCastPenalty|SetChameleon|SetConjuration|SetDelete|SetDefendBonus|SetDestruction|SetDisposition|SetEnchant|SetEndurance|SetFactionReaction|SetFatigue|SetFight|SetFlee|SetFlying|SetHandToHand|SetHealth|SetHeavyArmor|SetIllusion|SetIntelligence|SetInvisible|SetJournalIndex|SetLightArmor|SetLevel|SetLongBlade|SetLuck|SetMagicka|SetMarksman|SetMediumArmor|SetMercantile|SetMysticism|SetParalysis|SetPCCCrimeLevel|SetPCFacRep|SetPersonality|SetPos|SetReputation|SetResistBlight|SetResistCorprus|SetResistDisease|SetResistFire|SetResistFrost|SetResistMagicka|SetResistNormalWeapons|SetResistParalysis|SetResistPoison|SetResistShock|SetRestoration|SetScale|SetSecurity|SetShortBlade|SetSilence|SetSneak|SetSpear|SetSpeechcraft|SetSpeed|SetStrength|SetSuperJump|SetSwimSpeed|SetUnarmored|SetWaterBreathing|SetWaterlevel|SetWaterWalking|SetWerewolfAcrobatics|SetWillpower|ShowMap|ShowRestMenu|SkipAnim|StartCombat|StopCombat|StopScript|StopSound|StreamMusic|TurnMoonRed|TurnMoonWhite|UndoWerewolf|Unlock|WakeUpPC|CenterOnCell|CenterOnExterior|FillMap|FixMe|ToggleAI|ToggleCollision|ToggleFogOfWar|ToggleGodMode|ToggleMenus|ToggleSky|ToggleWorld|ToggleVanityMode|CellChanged|GetAcrobatics|GetAgility|GetAIPackageDone|GetAlarm|GetAlchemy|GetAlteration|GetAngle|GetArmorBonus|GetArmorer|GetAthletics|GetAttackBonus|GetAttacked|GetArmorType,|GetAxe|GetBlightDisease|GetBlock|GetBluntWeapon|GetButtonPressed|GetCastPenalty|GetChameleon|GetCollidingActor|GetCollidingPC|GetCommonDisease|GetConjuration|GetCurrentAIPackage|GetCurrentTime|GetCurrentWeather|GetDeadCount|GetDefendBonus|GetDestruction|GetDetected|GetDisabled|GetDisposition|GetDistance|GetEffect|GetEnchant|GetEndurance|GetFatigue|GetFight|GetFlee|GetFlying|GetForceJump|GetForceRun|GetForceSneak|GetHandToHand|GetHealth|GetHealthGetRatio|GetHeavyArmor|GetIllusion|GetIntelligence|GetInterior|GetInvisible|GetItemCount|GetJournalIndex|GetLightArmor|GetLineOfSight|GetLOS|GetLevel|GetLocked|GetLongBlade|GetLuck|GetMagicka|GetMarksman|GetMasserPhase|GetSecundaPhase|GetMediumArmor|GetMercantile|GetMysticism|GetParalysis|GetPCCell|GetPCCrimeLevel|GetPCinJail|GetPCJumping|GetPCRank|GetPCRunning|GetPCSleep|GetPCSneaking|GetPCTraveling|GetPersonality|GetPlayerControlsDisabled|GetPlayerFightingDisabled|GetPlayerJumpingDisabled|GetPlayerLookingDisabled|GetPlayerMagicDisabled|GetPos|GetRace|GetReputation|GetResistBlight|GetResistCorprus|GetResistDisease|GetResistFire|GetResistFrost|GetResistMagicka|GetResistNormalWeapons|GetResistParalysis|GetResistPoison|GetResistShock|GetRestoration|GetScale|GetSecondsPassed|GetSecurity|GetShortBlade|GetSilence|GetSneak|GetSoundPlaying|GetSpear|GetSpeechcraft|GetSpeed|GetSpell|GetSpellEffects|GetSpellReadied|GetSquareRoot|GetStandingActor|GetStandingPC|GetStrength|GetSuperJump|GetSwimSpeed|GetTarget|GetUnarmored|GetVanityModeDisabled|GetWaterBreathing|GetWaterLevel|GetWaterWalking|GetWeaponDrawn|GetWeaponType|GetWerewolfKills|GetWillpower|GetWindSpeed|HasItemEquipped|HasSoulgem|HitAttemptOnMe|HitOnMe|IsWerewolf|MenuMode|OnActivate|OnDeath|OnKnockout|OnMurder|PCExpelled|PCGet3rdPerson|PCKnownWerewolf|Random|RepairedOnMe|SameFaction|SayDone|ScriptRunning|AllowWereWolfForceGreeting|Companion|MinimumProfit|NoFlee|NoHello|NoIdle|NoLore|OnPCAdd|OnPCDrop|OnPCEquip|OnPCHitMe|OnPCRepair|PCSkipEquip|OnPCSoulGemUse|StayOutside|CrimeGoldDiscount|CrimeGoldTurnIn|Day|DaysPassed|GameHour|Month|NPCVoiceDistance|PCRace|PCWerewolf|PCVampire|TimeScale|VampClan|Year)\\b`, NameBuiltin, nil},\n-\t\t\t{`(?i)(sEffectWaterBreathing|sEffectSwiftSwim|sEffectWaterWalking|sEffectShield|sEffectFireShield|sEffectLightningShield|sEffectFrostShield|sEffectBurden|sEffectFeather|sEffectJump|sEffectLevitate|sEffectSlowFall|sEffectLock|sEffectOpen|sEffectFireDamage|sEffectShockDamage|sEffectFrostDamage|sEffectDrainAttribute|sEffectDrainHealth|sEffectDrainSpellpoints|sEffectDrainFatigue|sEffectDrainSkill|sEffectDamageAttribute|sEffectDamageHealth|sEffectDamageMagicka|sEffectDamageFatigue|sEffectDamageSkill|sEffectPoison|sEffectWeaknessToFire|sEffectWeaknessToFrost|sEffectWeaknessToShock|sEffectWeaknessToMagicka|sEffectWeaknessToCommonDisease|sEffectWeaknessToBlightDisease|sEffectWeaknessToCorprusDisease|sEffectWeaknessToPoison|sEffectWeaknessToNormalWeapons|sEffectDisintegrateWeapon|sEffectDisintegrateArmor|sEffectInvisibility|sEffectChameleon|sEffectLight|sEffectSanctuary|sEffectNightEye|sEffectCharm|sEffectParalyze|sEffectSilence|sEffectBlind|sEffectSound|sEffectCalmHumanoid|sEffectCalmCreature|sEffectFrenzyHumanoid|sEffectFrenzyCreature|sEffectDemoralizeHumanoid|sEffectDemoralizeCreature|sEffectRallyHumanoid|sEffectRallyCreature|sEffectDispel|sEffectSoultrap|sEffectTelekinesis|sEffectMark|sEffectRecall|sEffectDivineIntervention|sEffectAlmsiviIntervention|sEffectDetectAnimal|sEffectDetectEnchantment|sEffectDetectKey|sEffectSpellAbsorption|sEffectReflect|sEffectCureCommonDisease|sEffectCureBlightDisease|sEffectCureCorprusDisease|sEffectCurePoison|sEffectCureParalyzation|sEffectRestoreAttribute|sEffectRestoreHealth|sEffectRestoreSpellPoints|sEffectRestoreFatigue|sEffectRestoreSkill|sEffectFortifyAttribute|sEffectFortifyHealth|sEffectFortifySpellpoints|sEffectFortifyFatigue|sEffectFortifySkill|sEffectFortifyMagickaMultiplier|sEffectAbsorbAttribute|sEffectAbsorbHealth|sEffectAbsorbSpellPoints|sEffectAbsorbFatigue|sEffectAbsorbSkill|sEffectResistFire|sEffectResistFrost|sEffectResistShock|sEffectResistMagicka|sEffectResistCommonDisease|sEffectResistBlightDisease|sEffectResistCorprusDisease|sEffectResistPoison|sEffectResistNormalWeapons|sEffectResistParalysis|sEffectRemoveCurse|sEffectTurnUndead|sEffectSummonScamp|sEffectSummonClannfear|sEffectSummonDaedroth|sEffectSummonDremora|sEffectSummonAncestralGhost|sEffectSummonSkeletalMinion|sEffectSummonLeastBonewalker|sEffectSummonGreaterBonewalker|sEffectSummonBonelord|sEffectSummonWingedTwilight|sEffectSummonHunger|sEffectSummonGoldensaint|sEffectSummonFlameAtronach|sEffectSummonFrostAtronach|sEffectSummonStormAtronach|sEffectFortifyAttackBonus|sEffectCommandCreatures|sEffectCommandHumanoids|sEffectBoundDagger|sEffectBoundLongsword|sEffectBoundMace|sEffectBoundBattleAxe|sEffectBoundSpear|sEffectBoundLongbow|sEffectExtraSpell|sEffectBoundCuirass|sEffectBoundHelm|sEffectBoundBoots|sEffectBoundShield|sEffectBoundGloves|sEffectCorpus|sEffectVampirism|sEffectSummonCenturionSphere|sEffectSunDamage|sEffectStuntedMagicka)`, NameBuiltin, nil},\n-\t\t},\n-\t\t\"types\": {\n-\t\t\t{`(?i)(short|long|float)\\b`, KeywordType, nil},\n-\t\t},\n-\t\t\"punct\": {\n-\t\t\t{`[()]`, Punctuation, nil},\n-\t\t},\n-\t\t\"operators\": {\n-\t\t\t{`[#=,./%+\\-?]`, Operator, nil},\n-\t\t\t{`(==|<=|<|>=|>|!=)`, Operator, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "2738628bf28d12e026293edb3bdd81043de5a635",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/m/mysql.go",
      "status": "removed",
      "additions": 0,
      "deletions": 83,
      "changes": 83,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmysql.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmysql.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fm%2Fmysql.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,83 +0,0 @@\n-package m\n-\n-import (\n-\t\"regexp\"\n-\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-var (\n-\tmysqlAnalyserNameBetweenBacktickRe = regexp.MustCompile(\"`[a-zA-Z_]\\\\w*`\")\n-\tmysqlAnalyserNameBetweenBracketRe  = regexp.MustCompile(`\\[[a-zA-Z_]\\w*\\]`)\n-)\n-\n-// MySQL lexer.\n-var MySQL = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"MySQL\",\n-\t\tAliases:         []string{\"mysql\"},\n-\t\tFilenames:       []string{\"*.sql\"},\n-\t\tMimeTypes:       []string{\"text/x-mysql\"},\n-\t\tNotMultiline:    true,\n-\t\tCaseInsensitive: true,\n-\t},\n-\tmySQLRules,\n-).SetAnalyser(func(text string) float32 {\n-\tnameBetweenBacktickCount := len(mysqlAnalyserNameBetweenBacktickRe.FindAllString(text, -1))\n-\tnameBetweenBracketCount := len(mysqlAnalyserNameBetweenBracketRe.FindAllString(text, -1))\n-\n-\tvar result float32\n-\n-\t// Same logic as above in the TSQL analysis.\n-\tdialectNameCount := nameBetweenBacktickCount + nameBetweenBracketCount\n-\tif dialectNameCount >= 1 && nameBetweenBacktickCount >= (2*nameBetweenBracketCount) {\n-\t\t// Found at least twice as many `name` as [name].\n-\t\tresult += 0.5\n-\t} else if nameBetweenBacktickCount > nameBetweenBracketCount {\n-\t\tresult += 0.2\n-\t} else if nameBetweenBacktickCount > 0 {\n-\t\tresult += 0.1\n-\t}\n-\n-\treturn result\n-}))\n-\n-func mySQLRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t\t{`(#|--\\s+).*\\n?`, CommentSingle, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"multiline-comments\")},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`[0-9]*\\.[0-9]+(e[+-][0-9]+)`, LiteralNumberFloat, nil},\n-\t\t\t{`((?:_[a-z0-9]+)?)(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Push(\"string\")},\n-\t\t\t{`((?:_[a-z0-9]+)?)(\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Push(\"double-string\")},\n-\t\t\t{\"[+*/<>=~!@#%^&|`?-]\", Operator, nil},\n-\t\t\t{`\\b(tinyint|smallint|mediumint|int|integer|bigint|date|datetime|time|bit|bool|tinytext|mediumtext|longtext|text|tinyblob|mediumblob|longblob|blob|float|double|double\\s+precision|real|numeric|dec|decimal|timestamp|year|char|varchar|varbinary|varcharacter|enum|set)(\\b\\s*)(\\()?`, ByGroups(KeywordType, TextWhitespace, Punctuation), nil},\n-\t\t\t{`\\b(add|all|alter|analyze|and|as|asc|asensitive|before|between|bigint|binary|blob|both|by|call|cascade|case|change|char|character|check|collate|column|condition|constraint|continue|convert|create|cross|current_date|current_time|current_timestamp|current_user|cursor|database|databases|day_hour|day_microsecond|day_minute|day_second|dec|decimal|declare|default|delayed|delete|desc|describe|deterministic|distinct|distinctrow|div|double|drop|dual|each|else|elseif|enclosed|escaped|exists|exit|explain|fetch|flush|float|float4|float8|for|force|foreign|from|fulltext|grant|group|having|high_priority|hour_microsecond|hour_minute|hour_second|identified|if|ignore|in|index|infile|inner|inout|insensitive|insert|int|int1|int2|int3|int4|int8|integer|interval|into|is|iterate|join|key|keys|kill|leading|leave|left|like|limit|lines|load|localtime|localtimestamp|lock|long|loop|low_priority|match|minute_microsecond|minute_second|mod|modifies|natural|no_write_to_binlog|not|numeric|on|optimize|option|optionally|or|order|out|outer|outfile|precision|primary|privileges|procedure|purge|raid0|read|reads|real|references|regexp|release|rename|repeat|replace|require|restrict|return|revoke|right|rlike|schema|schemas|second_microsecond|select|sensitive|separator|set|show|smallint|soname|spatial|specific|sql|sql_big_result|sql_calc_found_rows|sql_small_result|sqlexception|sqlstate|sqlwarning|ssl|starting|straight_join|table|terminated|then|to|trailing|trigger|undo|union|unique|unlock|unsigned|update|usage|use|user|using|utc_date|utc_time|utc_timestamp|values|varying|when|where|while|with|write|x509|xor|year_month|zerofill)\\b`, Keyword, nil},\n-\t\t\t{`\\b(auto_increment|engine|charset|tables)\\b`, KeywordPseudo, nil},\n-\t\t\t{`(true|false|null)`, NameConstant, nil},\n-\t\t\t{`([a-z_]\\w*)(\\s*)(\\()`, ByGroups(NameFunction, TextWhitespace, Punctuation), nil},\n-\t\t\t{`[a-z_]\\w*`, Name, nil},\n-\t\t\t{`@[a-z0-9]*[._]*[a-z0-9]*`, NameVariable, nil},\n-\t\t\t{`[;:()\\[\\],.]`, Punctuation, nil},\n-\t\t},\n-\t\t\"multiline-comments\": {\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"multiline-comments\")},\n-\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n-\t\t\t{`[^/*]+`, CommentMultiline, nil},\n-\t\t\t{`[/*]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`[^']+`, LiteralStringSingle, nil},\n-\t\t\t{`''`, LiteralStringSingle, nil},\n-\t\t\t{`'`, LiteralStringSingle, Pop(1)},\n-\t\t},\n-\t\t\"double-string\": {\n-\t\t\t{`[^\"]+`, LiteralStringDouble, nil},\n-\t\t\t{`\"\"`, LiteralStringDouble, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "de6734e8659ec6f350f0f3978cf7f3138be8eaf7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/n/nasm.go",
      "status": "removed",
      "additions": 0,
      "deletions": 63,
      "changes": 63,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fn%2Fnasm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fn%2Fnasm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fn%2Fnasm.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,63 +0,0 @@\n-package n\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Nasm lexer.\n-var Nasm = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"NASM\",\n-\t\tAliases:         []string{\"nasm\"},\n-\t\tFilenames:       []string{\"*.asm\", \"*.ASM\"},\n-\t\tMimeTypes:       []string{\"text/x-nasm\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tnasmRules,\n-))\n-\n-func nasmRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`^\\s*%`, CommentPreproc, Push(\"preproc\")},\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`[a-z$._?][\\w$.?#@~]*:`, NameLabel, nil},\n-\t\t\t{`([a-z$._?][\\w$.?#@~]*)(\\s+)(equ)`, ByGroups(NameConstant, KeywordDeclaration, KeywordDeclaration), Push(\"instruction-args\")},\n-\t\t\t{`BITS|USE16|USE32|SECTION|SEGMENT|ABSOLUTE|EXTERN|GLOBAL|ORG|ALIGN|STRUC|ENDSTRUC|COMMON|CPU|GROUP|UPPERCASE|IMPORT|EXPORT|LIBRARY|MODULE`, Keyword, Push(\"instruction-args\")},\n-\t\t\t{`(?:res|d)[bwdqt]|times`, KeywordDeclaration, Push(\"instruction-args\")},\n-\t\t\t{`[a-z$._?][\\w$.?#@~]*`, NameFunction, Push(\"instruction-args\")},\n-\t\t\t{`[\\r\\n]+`, Text, nil},\n-\t\t},\n-\t\t\"instruction-args\": {\n-\t\t\t{\"\\\"(\\\\\\\\\\\"|[^\\\"\\\\n])*\\\"|'(\\\\\\\\'|[^'\\\\n])*'|`(\\\\\\\\`|[^`\\\\n])*`\", LiteralString, nil},\n-\t\t\t{`(?:0x[0-9a-f]+|$0[0-9a-f]*|[0-9]+[0-9a-f]*h)`, LiteralNumberHex, nil},\n-\t\t\t{`[0-7]+q`, LiteralNumberOct, nil},\n-\t\t\t{`[01]+b`, LiteralNumberBin, nil},\n-\t\t\t{`[0-9]+\\.e?[0-9]+`, LiteralNumberFloat, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\tInclude(\"punctuation\"),\n-\t\t\t{`r[0-9][0-5]?[bwd]|[a-d][lh]|[er]?[a-d]x|[er]?[sb]p|[er]?[sd]i|[c-gs]s|st[0-7]|mm[0-7]|cr[0-4]|dr[0-367]|tr[3-7]`, NameBuiltin, nil},\n-\t\t\t{`[a-z$._?][\\w$.?#@~]*`, NameVariable, nil},\n-\t\t\t{`[\\r\\n]+`, Text, Pop(1)},\n-\t\t\tInclude(\"whitespace\"),\n-\t\t},\n-\t\t\"preproc\": {\n-\t\t\t{`[^;\\n]+`, CommentPreproc, nil},\n-\t\t\t{`;.*?\\n`, CommentSingle, Pop(1)},\n-\t\t\t{`\\n`, CommentPreproc, Pop(1)},\n-\t\t},\n-\t\t\"whitespace\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`[ \\t]+`, Text, nil},\n-\t\t\t{`;.*`, CommentSingle, nil},\n-\t\t},\n-\t\t\"punctuation\": {\n-\t\t\t{`[,():\\[\\]]+`, Punctuation, nil},\n-\t\t\t{`[&|^<>+*/%~-]+`, Operator, nil},\n-\t\t\t{`[$]+`, KeywordConstant, nil},\n-\t\t\t{`seg|wrt|strict`, OperatorWord, nil},\n-\t\t\t{`byte|[dq]?word`, KeywordType, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "c9d3ae032b3d986ba470b72d9ac1ad142240a861",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/n/newspeak.go",
      "status": "removed",
      "additions": 0,
      "deletions": 59,
      "changes": 59,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fn%2Fnewspeak.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fn%2Fnewspeak.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fn%2Fnewspeak.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,59 +0,0 @@\n-package n\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Newspeak lexer.\n-var Newspeak = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Newspeak\",\n-\t\tAliases:   []string{\"newspeak\"},\n-\t\tFilenames: []string{\"*.ns2\"},\n-\t\tMimeTypes: []string{\"text/x-newspeak\"},\n-\t},\n-\tnewspeakRules,\n-))\n-\n-func newspeakRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\b(Newsqueak2)\\b`, KeywordDeclaration, nil},\n-\t\t\t{`'[^']*'`, LiteralString, nil},\n-\t\t\t{`\\b(class)(\\s+)(\\w+)(\\s*)`, ByGroups(KeywordDeclaration, Text, NameClass, Text), nil},\n-\t\t\t{`\\b(mixin|self|super|private|public|protected|nil|true|false)\\b`, Keyword, nil},\n-\t\t\t{`(\\w+\\:)(\\s*)([a-zA-Z_]\\w+)`, ByGroups(NameFunction, Text, NameVariable), nil},\n-\t\t\t{`(\\w+)(\\s*)(=)`, ByGroups(NameAttribute, Text, Operator), nil},\n-\t\t\t{`<\\w+>`, CommentSpecial, nil},\n-\t\t\tInclude(\"expressionstat\"),\n-\t\t\tInclude(\"whitespace\"),\n-\t\t},\n-\t\t\"expressionstat\": {\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+[fF])[fF]?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`:\\w+`, NameVariable, nil},\n-\t\t\t{`(\\w+)(::)`, ByGroups(NameVariable, Operator), nil},\n-\t\t\t{`\\w+:`, NameFunction, nil},\n-\t\t\t{`\\w+`, NameVariable, nil},\n-\t\t\t{`\\(|\\)`, Punctuation, nil},\n-\t\t\t{`\\[|\\]`, Punctuation, nil},\n-\t\t\t{`\\{|\\}`, Punctuation, nil},\n-\t\t\t{`(\\^|\\+|\\/|~|\\*|<|>|=|@|%|\\||&|\\?|!|,|-|:)`, Operator, nil},\n-\t\t\t{`\\.|;`, Punctuation, nil},\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"literals\"),\n-\t\t},\n-\t\t\"literals\": {\n-\t\t\t{`\\$.`, LiteralString, nil},\n-\t\t\t{`'[^']*'`, LiteralString, nil},\n-\t\t\t{`#'[^']*'`, LiteralStringSymbol, nil},\n-\t\t\t{`#\\w+:?`, LiteralStringSymbol, nil},\n-\t\t\t{`#(\\+|\\/|~|\\*|<|>|=|@|%|\\||&|\\?|!|,|-)+`, LiteralStringSymbol, nil},\n-\t\t},\n-\t\t\"whitespace\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\"[^\"]*\"`, Comment, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "6d80523ec781e41a971a18701cf7115ab081ce37",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/n/nginx.go",
      "status": "removed",
      "additions": 0,
      "deletions": 51,
      "changes": 51,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fn%2Fnginx.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fn%2Fnginx.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fn%2Fnginx.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,51 +0,0 @@\n-package n\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Nginx Configuration File lexer.\n-var Nginx = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Nginx configuration file\",\n-\t\tAliases:   []string{\"nginx\"},\n-\t\tFilenames: []string{\"nginx.conf\"},\n-\t\tMimeTypes: []string{\"text/x-nginx-conf\"},\n-\t},\n-\tnginxRules,\n-))\n-\n-func nginxRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`(include)(\\s+)([^\\s;]+)`, ByGroups(Keyword, Text, Name), nil},\n-\t\t\t{`[^\\s;#]+`, Keyword, Push(\"stmt\")},\n-\t\t\tInclude(\"base\"),\n-\t\t},\n-\t\t\"block\": {\n-\t\t\t{`\\}`, Punctuation, Pop(2)},\n-\t\t\t{`[^\\s;#]+`, KeywordNamespace, Push(\"stmt\")},\n-\t\t\tInclude(\"base\"),\n-\t\t},\n-\t\t\"stmt\": {\n-\t\t\t{`\\{`, Punctuation, Push(\"block\")},\n-\t\t\t{`;`, Punctuation, Pop(1)},\n-\t\t\tInclude(\"base\"),\n-\t\t},\n-\t\t\"base\": {\n-\t\t\t{`#.*\\n`, CommentSingle, nil},\n-\t\t\t{`on|off`, NameConstant, nil},\n-\t\t\t{`\\$[^\\s;#()]+`, NameVariable, nil},\n-\t\t\t{`([a-z0-9.-]+)(:)([0-9]+)`, ByGroups(Name, Punctuation, LiteralNumberInteger), nil},\n-\t\t\t{`[a-z-]+/[a-z-+]+`, LiteralString, nil},\n-\t\t\t{`[0-9]+[km]?\\b`, LiteralNumberInteger, nil},\n-\t\t\t{`(~)(\\s*)([^\\s{]+)`, ByGroups(Punctuation, Text, LiteralStringRegex), nil},\n-\t\t\t{`[:=~]`, Punctuation, nil},\n-\t\t\t{`[^\\s;#{}$]+`, LiteralString, nil},\n-\t\t\t{`/[^\\s;#]*`, Name, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`[$;]`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "3f98086b45f02ce5c0d8a3c0f17f482058ea7593",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/n/nim.go",
      "status": "removed",
      "additions": 0,
      "deletions": 97,
      "changes": 97,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fn%2Fnim.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fn%2Fnim.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fn%2Fnim.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,97 +0,0 @@\n-package n\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Nim lexer.\n-var Nim = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"Nim\",\n-\t\tAliases:         []string{\"nim\", \"nimrod\"},\n-\t\tFilenames:       []string{\"*.nim\", \"*.nimrod\"},\n-\t\tMimeTypes:       []string{\"text/x-nim\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tnimRules,\n-))\n-\n-func nimRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`#\\[[\\s\\S]*?\\]#`, CommentMultiline, nil},\n-\t\t\t{`##.*$`, LiteralStringDoc, nil},\n-\t\t\t{`#.*$`, Comment, nil},\n-\t\t\t{`[*=><+\\-/@$~&%!?|\\\\\\[\\]]`, Operator, nil},\n-\t\t\t{\"\\\\.\\\\.|\\\\.|,|\\\\[\\\\.|\\\\.\\\\]|\\\\{\\\\.|\\\\.\\\\}|\\\\(\\\\.|\\\\.\\\\)|\\\\{|\\\\}|\\\\(|\\\\)|:|\\\\^|`|;\", Punctuation, nil},\n-\t\t\t{`(?:[\\w]+)\"`, LiteralString, Push(\"rdqs\")},\n-\t\t\t{`\"\"\"`, LiteralString, Push(\"tdqs\")},\n-\t\t\t{`\"`, LiteralString, Push(\"dqs\")},\n-\t\t\t{`'`, LiteralStringChar, Push(\"chars\")},\n-\t\t\t{`(a_?n_?d_?|o_?r_?|n_?o_?t_?|x_?o_?r_?|s_?h_?l_?|s_?h_?r_?|d_?i_?v_?|m_?o_?d_?|i_?n_?|n_?o_?t_?i_?n_?|i_?s_?|i_?s_?n_?o_?t_?)\\b`, OperatorWord, nil},\n-\t\t\t{`(p_?r_?o_?c_?\\s)(?![(\\[\\]])`, Keyword, Push(\"funcname\")},\n-\t\t\t{`(a_?d_?d_?r_?|a_?n_?d_?|a_?s_?|a_?s_?m_?|a_?t_?o_?m_?i_?c_?|b_?i_?n_?d_?|b_?l_?o_?c_?k_?|b_?r_?e_?a_?k_?|c_?a_?s_?e_?|c_?a_?s_?t_?|c_?o_?n_?c_?e_?p_?t_?|c_?o_?n_?s_?t_?|c_?o_?n_?t_?i_?n_?u_?e_?|c_?o_?n_?v_?e_?r_?t_?e_?r_?|d_?e_?f_?e_?r_?|d_?i_?s_?c_?a_?r_?d_?|d_?i_?s_?t_?i_?n_?c_?t_?|d_?i_?v_?|d_?o_?|e_?l_?i_?f_?|e_?l_?s_?e_?|e_?n_?d_?|e_?n_?u_?m_?|e_?x_?c_?e_?p_?t_?|e_?x_?p_?o_?r_?t_?|f_?i_?n_?a_?l_?l_?y_?|f_?o_?r_?|f_?u_?n_?c_?|i_?f_?|i_?n_?|y_?i_?e_?l_?d_?|i_?n_?t_?e_?r_?f_?a_?c_?e_?|i_?s_?|i_?s_?n_?o_?t_?|i_?t_?e_?r_?a_?t_?o_?r_?|l_?e_?t_?|m_?a_?c_?r_?o_?|m_?e_?t_?h_?o_?d_?|m_?i_?x_?i_?n_?|m_?o_?d_?|n_?o_?t_?|n_?o_?t_?i_?n_?|o_?b_?j_?e_?c_?t_?|o_?f_?|o_?r_?|o_?u_?t_?|p_?r_?o_?c_?|p_?t_?r_?|r_?a_?i_?s_?e_?|r_?e_?f_?|r_?e_?t_?u_?r_?n_?|s_?h_?a_?r_?e_?d_?|s_?h_?l_?|s_?h_?r_?|s_?t_?a_?t_?i_?c_?|t_?e_?m_?p_?l_?a_?t_?e_?|t_?r_?y_?|t_?u_?p_?l_?e_?|t_?y_?p_?e_?|w_?h_?e_?n_?|w_?h_?i_?l_?e_?|w_?i_?t_?h_?|w_?i_?t_?h_?o_?u_?t_?|x_?o_?r_?)\\b`, Keyword, nil},\n-\t\t\t{`(f_?r_?o_?m_?|i_?m_?p_?o_?r_?t_?|i_?n_?c_?l_?u_?d_?e_?)\\b`, KeywordNamespace, nil},\n-\t\t\t{`(v_?a_?r)\\b`, KeywordDeclaration, nil},\n-\t\t\t{`(i_?n_?t_?|i_?n_?t_?8_?|i_?n_?t_?1_?6_?|i_?n_?t_?3_?2_?|i_?n_?t_?6_?4_?|f_?l_?o_?a_?t_?|f_?l_?o_?a_?t_?3_?2_?|f_?l_?o_?a_?t_?6_?4_?|b_?o_?o_?l_?|c_?h_?a_?r_?|r_?a_?n_?g_?e_?|a_?r_?r_?a_?y_?|s_?e_?q_?|s_?e_?t_?|s_?t_?r_?i_?n_?g_?)\\b`, KeywordType, nil},\n-\t\t\t{`(n_?i_?l_?|t_?r_?u_?e_?|f_?a_?l_?s_?e_?)\\b`, KeywordPseudo, nil},\n-\t\t\t{`\\b_\\b`, Name, nil}, // Standalone _ used as discardable variable identifier\n-\t\t\t{`\\b((?![_\\d])\\w)(((?!_)\\w)|(_(?!_)\\w))*`, Name, nil},\n-\t\t\t{`[0-9][0-9_]*(?=([e.]|\\'f(32|64)))`, LiteralNumberFloat, Push(\"float-suffix\", \"float-number\")},\n-\t\t\t{`0x[a-f0-9][a-f0-9_]*`, LiteralNumberHex, Push(\"int-suffix\")},\n-\t\t\t{`0b[01][01_]*`, LiteralNumberBin, Push(\"int-suffix\")},\n-\t\t\t{`0o[0-7][0-7_]*`, LiteralNumberOct, Push(\"int-suffix\")},\n-\t\t\t{`[0-9][0-9_]*`, LiteralNumberInteger, Push(\"int-suffix\")},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`.+$`, Error, nil},\n-\t\t},\n-\t\t\"chars\": {\n-\t\t\t{`\\\\([\\\\abcefnrtvl\"\\']|x[a-f0-9]{2}|[0-9]{1,3})`, LiteralStringEscape, nil},\n-\t\t\t{`'`, LiteralStringChar, Pop(1)},\n-\t\t\t{`.`, LiteralStringChar, nil},\n-\t\t},\n-\t\t\"strings\": {\n-\t\t\t{`(?<!\\$)\\$(\\d+|#|\\w+)+`, LiteralStringInterpol, nil},\n-\t\t\t{`[^\\\\\\'\"$\\n]+`, LiteralString, nil},\n-\t\t\t{`[\\'\"\\\\]`, LiteralString, nil},\n-\t\t\t{`\\$`, LiteralString, nil},\n-\t\t},\n-\t\t\"dqs\": {\n-\t\t\t{`\\\\([\\\\abcefnrtvl\"\\']|\\n|x[a-f0-9]{2}|[0-9]{1,3})`, LiteralStringEscape, nil},\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\tInclude(\"strings\"),\n-\t\t},\n-\t\t\"rdqs\": {\n-\t\t\t{`\"(?!\")`, LiteralString, Pop(1)},\n-\t\t\t{`\"\"`, LiteralStringEscape, nil},\n-\t\t\tInclude(\"strings\"),\n-\t\t},\n-\t\t\"tdqs\": {\n-\t\t\t{`\"\"\"(?!\")`, LiteralString, Pop(1)},\n-\t\t\tInclude(\"strings\"),\n-\t\t\tInclude(\"nl\"),\n-\t\t},\n-\t\t\"funcname\": {\n-\t\t\t{`((?![\\d_])\\w)(((?!_)\\w)|(_(?!_)\\w))*`, NameFunction, Pop(1)},\n-\t\t\t{\"`.+`\", NameFunction, Pop(1)},\n-\t\t},\n-\t\t\"nl\": {\n-\t\t\t{`\\n`, LiteralString, nil},\n-\t\t},\n-\t\t\"float-number\": {\n-\t\t\t{`\\.(?!\\.)[0-9_]*`, LiteralNumberFloat, nil},\n-\t\t\t{`e[+-]?[0-9][0-9_]*`, LiteralNumberFloat, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"float-suffix\": {\n-\t\t\t{`\\'f(32|64)`, LiteralNumberFloat, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"int-suffix\": {\n-\t\t\t{`\\'i(32|64)`, LiteralNumberIntegerLong, nil},\n-\t\t\t{`\\'i(8|16)`, LiteralNumberInteger, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "874560a565ffba4cf48ad4941cfd54ba1ecec81d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/n/nix.go",
      "status": "removed",
      "additions": 0,
      "deletions": 126,
      "changes": 126,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fn%2Fnix.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fn%2Fnix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fn%2Fnix.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,126 +0,0 @@\n-package n\n-\n-import (\n-\t\"strings\"\n-\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Nix lexer.\n-var Nix = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Nix\",\n-\t\tAliases:   []string{\"nixos\", \"nix\"},\n-\t\tFilenames: []string{\"*.nix\"},\n-\t\tMimeTypes: []string{\"text/x-nix\"},\n-\t},\n-\tnixRules,\n-))\n-\n-func nixRules() Rules {\n-\t// nixb matches right boundary of a nix word. Use it instead of \\b.\n-\tconst nixb = `(?![a-zA-Z0-9_'-])`\n-\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"keywords\"),\n-\t\t\tInclude(\"builtins\"),\n-\t\t\t// \"./path\" and \".float\" literals have to be above \".\" operator\n-\t\t\tInclude(\"literals\"),\n-\t\t\tInclude(\"operators\"),\n-\t\t\t{`#.*$`, CommentSingle, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"comment\")},\n-\t\t\t{`\\(`, Punctuation, Push(\"paren\")},\n-\t\t\t{`\\[`, Punctuation, Push(\"list\")},\n-\t\t\t{`\"`, StringDouble, Push(\"qstring\")},\n-\t\t\t{`''`, StringSingle, Push(\"istring\")},\n-\t\t\t{`{`, Punctuation, Push(\"scope\")},\n-\t\t\t{`let` + nixb, Keyword, Push(\"scope\")},\n-\t\t\tInclude(\"id\"),\n-\t\t\tInclude(\"space\"),\n-\t\t},\n-\t\t\"keywords\": {\n-\t\t\t{`import` + nixb, KeywordNamespace, nil},\n-\t\t\t{Words(``, nixb, strings.Fields(\"rec inherit with if then else assert\")...), Keyword, nil},\n-\t\t},\n-\t\t\"builtins\": {\n-\t\t\t{`throw` + nixb, NameException, nil},\n-\t\t\t{Words(``, nixb, strings.Fields(\"abort baseNameOf builtins currentTime dependencyClosure derivation dirOf fetchTarball filterSource getAttr getEnv hasAttr isNull map removeAttrs toString toXML\")...), NameBuiltin, nil},\n-\t\t},\n-\t\t\"literals\": {\n-\t\t\t{Words(``, nixb, strings.Fields(\"true false null\")...), NameConstant, nil},\n-\t\t\tInclude(\"uri\"),\n-\t\t\tInclude(\"path\"),\n-\t\t\tInclude(\"int\"),\n-\t\t\tInclude(\"float\"),\n-\t\t},\n-\t\t\"operators\": {\n-\t\t\t{` [/-] `, Operator, nil},\n-\t\t\t{`(\\.)(\\${)`, ByGroups(Operator, StringInterpol), Push(\"interpol\")},\n-\t\t\t{`(\\?)(\\s*)(\\${)`, ByGroups(Operator, Text, StringInterpol), Push(\"interpol\")},\n-\t\t\t{Words(``, ``, strings.Fields(\"@ . ? ++ + != ! // == && || -> <= < >= > *\")...), Operator, nil},\n-\t\t\t{`[;:]`, Punctuation, nil},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n-\t\t\t{`.|\\n`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"paren\": {\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"list\": {\n-\t\t\t{`\\]`, Punctuation, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"qstring\": {\n-\t\t\t{`\"`, StringDouble, Pop(1)},\n-\t\t\t{`\\${`, StringInterpol, Push(\"interpol\")},\n-\t\t\t{`\\\\.`, StringEscape, nil},\n-\t\t\t{`.|\\n`, StringDouble, nil},\n-\t\t},\n-\t\t\"istring\": {\n-\t\t\t{`''\\$`, StringEscape, nil},  // \"$\"\n-\t\t\t{`'''`, StringEscape, nil},   // \"''\"\n-\t\t\t{`''\\\\.`, StringEscape, nil}, // \"\\.\"\n-\t\t\t{`''`, StringSingle, Pop(1)},\n-\t\t\t{`\\${`, StringInterpol, Push(\"interpol\")},\n-\t\t\t// The next rule is important: \"$\" escapes any symbol except \"{\"!\n-\t\t\t{`\\$.`, StringSingle, nil}, // \"$.\"\n-\t\t\t{`.|\\n`, StringSingle, nil},\n-\t\t},\n-\t\t\"scope\": {\n-\t\t\t{`}:`, Punctuation, Pop(1)},\n-\t\t\t{`}`, Punctuation, Pop(1)},\n-\t\t\t{`in` + nixb, Keyword, Pop(1)},\n-\t\t\t{`\\${`, StringInterpol, Push(\"interpol\")},\n-\t\t\tInclude(\"root\"), // \"==\" has to be above \"=\"\n-\t\t\t{Words(``, ``, strings.Fields(\"= ? ,\")...), Operator, nil},\n-\t\t},\n-\t\t\"interpol\": {\n-\t\t\t{`}`, StringInterpol, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"id\": {\n-\t\t\t{`[a-zA-Z_][a-zA-Z0-9_'-]*`, Name, nil},\n-\t\t},\n-\t\t\"uri\": {\n-\t\t\t{`[a-zA-Z][a-zA-Z0-9+.-]*:[a-zA-Z0-9%/?:@&=+$,_.!~*'-]+`, StringDoc, nil},\n-\t\t},\n-\t\t\"path\": {\n-\t\t\t{`[a-zA-Z0-9._+-]*(/[a-zA-Z0-9._+-]+)+`, StringRegex, nil},\n-\t\t\t{`~(/[a-zA-Z0-9._+-]+)+/?`, StringRegex, nil},\n-\t\t\t{`<[a-zA-Z0-9._+-]+(/[a-zA-Z0-9._+-]+)*>`, StringRegex, nil},\n-\t\t},\n-\t\t\"int\": {\n-\t\t\t{`-?[0-9]+` + nixb, NumberInteger, nil},\n-\t\t},\n-\t\t\"float\": {\n-\t\t\t{`-?(([1-9][0-9]*\\.[0-9]*)|(0?\\.[0-9]+))([Ee][+-]?[0-9]+)?` + nixb, NumberFloat, nil},\n-\t\t},\n-\t\t\"space\": {\n-\t\t\t{`[ \\t\\r\\n]+`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "0ae30296094384cdcbb0d02c19100009b33d0510",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/o/objectivec.go",
      "status": "removed",
      "additions": 0,
      "deletions": 169,
      "changes": 169,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fo%2Fobjectivec.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fo%2Fobjectivec.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fo%2Fobjectivec.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,169 +0,0 @@\n-package o\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Objective-C lexer.\n-var ObjectiveC = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Objective-C\",\n-\t\tAliases:   []string{\"objective-c\", \"objectivec\", \"obj-c\", \"objc\"},\n-\t\tFilenames: []string{\"*.m\", \"*.h\"},\n-\t\tMimeTypes: []string{\"text/x-objective-c\"},\n-\t},\n-\tobjectiveCRules,\n-))\n-\n-func objectiveCRules() Rules {\n-\treturn Rules{\n-\t\t\"statements\": {\n-\t\t\t{`@\"`, LiteralString, Push(\"string\")},\n-\t\t\t{`@(YES|NO)`, LiteralNumber, nil},\n-\t\t\t{`@'(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-fA-F0-9]{1,2}|[^\\\\\\'\\n])'`, LiteralStringChar, nil},\n-\t\t\t{`@(\\d+\\.\\d*|\\.\\d+|\\d+)[eE][+-]?\\d+[lL]?`, LiteralNumberFloat, nil},\n-\t\t\t{`@(\\d+\\.\\d*|\\.\\d+|\\d+[fF])[fF]?`, LiteralNumberFloat, nil},\n-\t\t\t{`@0x[0-9a-fA-F]+[Ll]?`, LiteralNumberHex, nil},\n-\t\t\t{`@0[0-7]+[Ll]?`, LiteralNumberOct, nil},\n-\t\t\t{`@\\d+[Ll]?`, LiteralNumberInteger, nil},\n-\t\t\t{`@\\(`, Literal, Push(\"literal_number\")},\n-\t\t\t{`@\\[`, Literal, Push(\"literal_array\")},\n-\t\t\t{`@\\{`, Literal, Push(\"literal_dictionary\")},\n-\t\t\t{Words(``, `\\b`, `@selector`, `@private`, `@protected`, `@public`, `@encode`, `@synchronized`, `@try`, `@throw`, `@catch`, `@finally`, `@end`, `@property`, `@synthesize`, `__bridge`, `__bridge_transfer`, `__autoreleasing`, `__block`, `__weak`, `__strong`, `weak`, `strong`, `copy`, `retain`, `assign`, `unsafe_unretained`, `atomic`, `nonatomic`, `readonly`, `readwrite`, `setter`, `getter`, `typeof`, `in`, `out`, `inout`, `release`, `class`, `@dynamic`, `@optional`, `@required`, `@autoreleasepool`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `id`, `instancetype`, `Class`, `IMP`, `SEL`, `BOOL`, `IBOutlet`, `IBAction`, `unichar`), KeywordType, nil},\n-\t\t\t{`@(true|false|YES|NO)\\n`, NameBuiltin, nil},\n-\t\t\t{`(YES|NO|nil|self|super)\\b`, NameBuiltin, nil},\n-\t\t\t{`(Boolean|UInt8|SInt8|UInt16|SInt16|UInt32|SInt32)\\b`, KeywordType, nil},\n-\t\t\t{`(TRUE|FALSE)\\b`, NameBuiltin, nil},\n-\t\t\t{`(@interface|@implementation)(\\s+)`, ByGroups(Keyword, Text), Push(\"#pop\", \"oc_classname\")},\n-\t\t\t{`(@class|@protocol)(\\s+)`, ByGroups(Keyword, Text), Push(\"#pop\", \"oc_forward_classname\")},\n-\t\t\t{`@`, Punctuation, nil},\n-\t\t\t{`(L?)(\")`, ByGroups(LiteralStringAffix, LiteralString), Push(\"string\")},\n-\t\t\t{`(L?)(')(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-fA-F0-9]{1,2}|[^\\\\\\'\\n])(')`, ByGroups(LiteralStringAffix, LiteralStringChar, LiteralStringChar, LiteralStringChar), nil},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+)[eE][+-]?\\d+[LlUu]*`, LiteralNumberFloat, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+[fF])[fF]?`, LiteralNumberFloat, nil},\n-\t\t\t{`0x[0-9a-fA-F]+[LlUu]*`, LiteralNumberHex, nil},\n-\t\t\t{`0[0-7]+[LlUu]*`, LiteralNumberOct, nil},\n-\t\t\t{`\\d+[LlUu]*`, LiteralNumberInteger, nil},\n-\t\t\t{`\\*/`, Error, nil},\n-\t\t\t{`[~!%^&*+=|?:<>/-]`, Operator, nil},\n-\t\t\t{`[()\\[\\],.]`, Punctuation, nil},\n-\t\t\t{Words(``, `\\b`, `asm`, `auto`, `break`, `case`, `const`, `continue`, `default`, `do`, `else`, `enum`, `extern`, `for`, `goto`, `if`, `register`, `restricted`, `return`, `sizeof`, `static`, `struct`, `switch`, `typedef`, `union`, `volatile`, `while`), Keyword, nil},\n-\t\t\t{`(bool|int|long|float|short|double|char|unsigned|signed|void)\\b`, KeywordType, nil},\n-\t\t\t{Words(``, `\\b`, `inline`, `_inline`, `__inline`, `naked`, `restrict`, `thread`, `typename`), KeywordReserved, nil},\n-\t\t\t{`(__m(128i|128d|128|64))\\b`, KeywordReserved, nil},\n-\t\t\t{Words(`__`, `\\b`, `asm`, `int8`, `based`, `except`, `int16`, `stdcall`, `cdecl`, `fastcall`, `int32`, `declspec`, `finally`, `int64`, `try`, `leave`, `wchar_t`, `w64`, `unaligned`, `raise`, `noop`, `identifier`, `forceinline`, `assume`), KeywordReserved, nil},\n-\t\t\t{`(true|false|NULL)\\b`, NameBuiltin, nil},\n-\t\t\t{`([a-zA-Z_]\\w*)(\\s*)(:)(?!:)`, ByGroups(NameLabel, Text, Punctuation), nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t},\n-\t\t\"oc_classname\": {\n-\t\t\t{`([a-zA-Z$_][\\w$]*)(\\s*:\\s*)([a-zA-Z$_][\\w$]*)?(\\s*)(\\{)`, ByGroups(NameClass, Text, NameClass, Text, Punctuation), Push(\"#pop\", \"oc_ivars\")},\n-\t\t\t{`([a-zA-Z$_][\\w$]*)(\\s*:\\s*)([a-zA-Z$_][\\w$]*)?`, ByGroups(NameClass, Text, NameClass), Pop(1)},\n-\t\t\t{`([a-zA-Z$_][\\w$]*)(\\s*)(\\([a-zA-Z$_][\\w$]*\\))(\\s*)(\\{)`, ByGroups(NameClass, Text, NameLabel, Text, Punctuation), Push(\"#pop\", \"oc_ivars\")},\n-\t\t\t{`([a-zA-Z$_][\\w$]*)(\\s*)(\\([a-zA-Z$_][\\w$]*\\))`, ByGroups(NameClass, Text, NameLabel), Pop(1)},\n-\t\t\t{`([a-zA-Z$_][\\w$]*)(\\s*)(\\{)`, ByGroups(NameClass, Text, Punctuation), Push(\"#pop\", \"oc_ivars\")},\n-\t\t\t{`([a-zA-Z$_][\\w$]*)`, NameClass, Pop(1)},\n-\t\t},\n-\t\t\"oc_forward_classname\": {\n-\t\t\t{`([a-zA-Z$_][\\w$]*)(\\s*,\\s*)`, ByGroups(NameClass, Text), Push(\"oc_forward_classname\")},\n-\t\t\t{`([a-zA-Z$_][\\w$]*)(\\s*;?)`, ByGroups(NameClass, Text), Pop(1)},\n-\t\t},\n-\t\t\"oc_ivars\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"statements\"),\n-\t\t\t{`;`, Punctuation, nil},\n-\t\t\t{`\\{`, Punctuation, Push()},\n-\t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\t{`^([-+])(\\s*)(\\(.*?\\))?(\\s*)([a-zA-Z$_][\\w$]*:?)`, ByGroups(Punctuation, Text, UsingSelf(\"root\"), Text, NameFunction), Push(\"method\")},\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`((?:[\\w*\\s])+?(?:\\s|[*]))([a-zA-Z_]\\w*)(\\s*\\([^;]*?\\))([^;{]*)(\\{)`, ByGroups(UsingSelf(\"root\"), NameFunction, UsingSelf(\"root\"), UsingSelf(\"root\"), Punctuation), Push(\"function\")},\n-\t\t\t{`((?:[\\w*\\s])+?(?:\\s|[*]))([a-zA-Z_]\\w*)(\\s*\\([^;]*?\\))([^;]*)(;)`, ByGroups(UsingSelf(\"root\"), NameFunction, UsingSelf(\"root\"), UsingSelf(\"root\"), Punctuation), nil},\n-\t\t\tDefault(Push(\"statement\")),\n-\t\t},\n-\t\t\"method\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`,`, Punctuation, nil},\n-\t\t\t{`\\.\\.\\.`, Punctuation, nil},\n-\t\t\t{`(\\(.*?\\))(\\s*)([a-zA-Z$_][\\w$]*)`, ByGroups(UsingSelf(\"root\"), Text, NameVariable), nil},\n-\t\t\t{`[a-zA-Z$_][\\w$]*:`, NameFunction, nil},\n-\t\t\t{`;`, Punctuation, Pop(1)},\n-\t\t\t{`\\{`, Punctuation, Push(\"function\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"literal_number\": {\n-\t\t\t{`\\(`, Punctuation, Push(\"literal_number_inner\")},\n-\t\t\t{`\\)`, Literal, Pop(1)},\n-\t\t\tInclude(\"statement\"),\n-\t\t},\n-\t\t\"literal_number_inner\": {\n-\t\t\t{`\\(`, Punctuation, Push()},\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t\tInclude(\"statement\"),\n-\t\t},\n-\t\t\"literal_array\": {\n-\t\t\t{`\\[`, Punctuation, Push(\"literal_array_inner\")},\n-\t\t\t{`\\]`, Literal, Pop(1)},\n-\t\t\tInclude(\"statement\"),\n-\t\t},\n-\t\t\"literal_array_inner\": {\n-\t\t\t{`\\[`, Punctuation, Push()},\n-\t\t\t{`\\]`, Punctuation, Pop(1)},\n-\t\t\tInclude(\"statement\"),\n-\t\t},\n-\t\t\"literal_dictionary\": {\n-\t\t\t{`\\}`, Literal, Pop(1)},\n-\t\t\tInclude(\"statement\"),\n-\t\t},\n-\t\t\"whitespace\": {\n-\t\t\t{`^#if\\s+0`, CommentPreproc, Push(\"if0\")},\n-\t\t\t{`^#`, CommentPreproc, Push(\"macro\")},\n-\t\t\t{`^(\\s*(?:/[*].*?[*]/\\s*)?)(#if\\s+0)`, ByGroups(UsingSelf(\"root\"), CommentPreproc), Push(\"if0\")},\n-\t\t\t{`^(\\s*(?:/[*].*?[*]/\\s*)?)(#)`, ByGroups(UsingSelf(\"root\"), CommentPreproc), Push(\"macro\")},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`//(\\n|[\\w\\W]*?[^\\\\]\\n)`, CommentSingle, nil},\n-\t\t\t{`/(\\\\\\n)?[*][\\w\\W]*?[*](\\\\\\n)?/`, CommentMultiline, nil},\n-\t\t\t{`/(\\\\\\n)?[*][\\w\\W]*`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"statement\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"statements\"),\n-\t\t\t{`[{}]`, Punctuation, nil},\n-\t\t\t{`;`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"function\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"statements\"),\n-\t\t\t{`;`, Punctuation, nil},\n-\t\t\t{`\\{`, Punctuation, Push()},\n-\t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`\\\\([\\\\abfnrtv\"\\']|x[a-fA-F0-9]{2,4}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8}|[0-7]{1,3})`, LiteralStringEscape, nil},\n-\t\t\t{`[^\\\\\"\\n]+`, LiteralString, nil},\n-\t\t\t{`\\\\\\n`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralString, nil},\n-\t\t},\n-\t\t\"macro\": {\n-\t\t\t{`(include)(\\s*(?:/[*].*?[*]/\\s*)?)([^\\n]+)`, ByGroups(CommentPreproc, Text, CommentPreprocFile), nil},\n-\t\t\t{`[^/\\n]+`, CommentPreproc, nil},\n-\t\t\t{`/[*](.|\\n)*?[*]/`, CommentMultiline, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, Pop(1)},\n-\t\t\t{`/`, CommentPreproc, nil},\n-\t\t\t{`(?<=\\\\)\\n`, CommentPreproc, nil},\n-\t\t\t{`\\n`, CommentPreproc, Pop(1)},\n-\t\t},\n-\t\t\"if0\": {\n-\t\t\t{`^\\s*#if.*?(?<!\\\\)\\n`, CommentPreproc, Push()},\n-\t\t\t{`^\\s*#el(?:se|if).*\\n`, CommentPreproc, Pop(1)},\n-\t\t\t{`^\\s*#endif.*?(?<!\\\\)\\n`, CommentPreproc, Pop(1)},\n-\t\t\t{`.*?\\n`, Comment, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "07fcff99563bc76c522f1eafecb974cdffbf30a6",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/o/ocaml.go",
      "status": "removed",
      "additions": 0,
      "deletions": 70,
      "changes": 70,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fo%2Focaml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fo%2Focaml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fo%2Focaml.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,70 +0,0 @@\n-package o\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Ocaml lexer.\n-var Ocaml = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"OCaml\",\n-\t\tAliases:   []string{\"ocaml\"},\n-\t\tFilenames: []string{\"*.ml\", \"*.mli\", \"*.mll\", \"*.mly\"},\n-\t\tMimeTypes: []string{\"text/x-ocaml\"},\n-\t},\n-\tocamlRules,\n-))\n-\n-func ocamlRules() Rules {\n-\treturn Rules{\n-\t\t\"escape-sequence\": {\n-\t\t\t{`\\\\[\\\\\"\\'ntbr]`, LiteralStringEscape, nil},\n-\t\t\t{`\\\\[0-9]{3}`, LiteralStringEscape, nil},\n-\t\t\t{`\\\\x[0-9a-fA-F]{2}`, LiteralStringEscape, nil},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`false|true|\\(\\)|\\[\\]`, NameBuiltinPseudo, nil},\n-\t\t\t{`\\b([A-Z][\\w\\']*)(?=\\s*\\.)`, NameNamespace, Push(\"dotted\")},\n-\t\t\t{`\\b([A-Z][\\w\\']*)`, NameClass, nil},\n-\t\t\t{`\\(\\*(?![)])`, Comment, Push(\"comment\")},\n-\t\t\t{`\\b(as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|false|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|private|raise|rec|sig|struct|then|to|true|try|type|value|val|virtual|when|while|with)\\b`, Keyword, nil},\n-\t\t\t{\"(~|\\\\}|\\\\|]|\\\\||\\\\{<|\\\\{|`|_|]|\\\\[\\\\||\\\\[>|\\\\[<|\\\\[|\\\\?\\\\?|\\\\?|>\\\\}|>]|>|=|<-|<|;;|;|:>|:=|::|:|\\\\.\\\\.|\\\\.|->|-\\\\.|-|,|\\\\+|\\\\*|\\\\)|\\\\(|&&|&|#|!=)\", Operator, nil},\n-\t\t\t{`([=<>@^|&+\\*/$%-]|[!?~])?[!$%&*+\\./:<=>?@^|~-]`, Operator, nil},\n-\t\t\t{`\\b(and|asr|land|lor|lsl|lxor|mod|or)\\b`, OperatorWord, nil},\n-\t\t\t{`\\b(unit|int|float|bool|string|char|list|array)\\b`, KeywordType, nil},\n-\t\t\t{`[^\\W\\d][\\w']*`, Name, nil},\n-\t\t\t{`-?\\d[\\d_]*(.[\\d_]*)?([eE][+\\-]?\\d[\\d_]*)`, LiteralNumberFloat, nil},\n-\t\t\t{`0[xX][\\da-fA-F][\\da-fA-F_]*`, LiteralNumberHex, nil},\n-\t\t\t{`0[oO][0-7][0-7_]*`, LiteralNumberOct, nil},\n-\t\t\t{`0[bB][01][01_]*`, LiteralNumberBin, nil},\n-\t\t\t{`\\d[\\d_]*`, LiteralNumberInteger, nil},\n-\t\t\t{`'(?:(\\\\[\\\\\\\"'ntbr ])|(\\\\[0-9]{3})|(\\\\x[0-9a-fA-F]{2}))'`, LiteralStringChar, nil},\n-\t\t\t{`'.'`, LiteralStringChar, nil},\n-\t\t\t{`'`, Keyword, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n-\t\t\t{`[~?][a-z][\\w\\']*:`, NameVariable, nil},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`[^(*)]+`, Comment, nil},\n-\t\t\t{`\\(\\*`, Comment, Push()},\n-\t\t\t{`\\*\\)`, Comment, Pop(1)},\n-\t\t\t{`[(*)]`, Comment, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`[^\\\\\"]+`, LiteralStringDouble, nil},\n-\t\t\tInclude(\"escape-sequence\"),\n-\t\t\t{`\\\\\\n`, LiteralStringDouble, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t},\n-\t\t\"dotted\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\.`, Punctuation, nil},\n-\t\t\t{`[A-Z][\\w\\']*(?=\\s*\\.)`, NameNamespace, nil},\n-\t\t\t{`[A-Z][\\w\\']*`, NameClass, Pop(1)},\n-\t\t\t{`[a-z_][\\w\\']*`, Name, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "99fe298c7aeaae279f38d0c0b07984e41217ba9c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/o/octave.go",
      "status": "removed",
      "additions": 0,
      "deletions": 50,
      "changes": 50,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fo%2Foctave.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fo%2Foctave.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fo%2Foctave.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,50 +0,0 @@\n-package o\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Octave lexer.\n-var Octave = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Octave\",\n-\t\tAliases:   []string{\"octave\"},\n-\t\tFilenames: []string{\"*.m\"},\n-\t\tMimeTypes: []string{\"text/octave\"},\n-\t},\n-\toctaveRules,\n-))\n-\n-func octaveRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[%#].*$`, Comment, nil},\n-\t\t\t{`^\\s*function`, Keyword, Push(\"deffunc\")},\n-\t\t\t{Words(``, `\\b`, `__FILE__`, `__LINE__`, `break`, `case`, `catch`, `classdef`, `continue`, `do`, `else`, `elseif`, `end`, `end_try_catch`, `end_unwind_protect`, `endclassdef`, `endevents`, `endfor`, `endfunction`, `endif`, `endmethods`, `endproperties`, `endswitch`, `endwhile`, `events`, `for`, `function`, `get`, `global`, `if`, `methods`, `otherwise`, `persistent`, `properties`, `return`, `set`, `static`, `switch`, `try`, `until`, `unwind_protect`, `unwind_protect_cleanup`, `while`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `addlistener`, `addpath`, `addproperty`, `all`, `and`, `any`, `argnames`, `argv`, `assignin`, `atexit`, `autoload`, `available_graphics_toolkits`, `beep_on_error`, `bitand`, `bitmax`, `bitor`, `bitshift`, `bitxor`, `cat`, `cell`, `cellstr`, `char`, `class`, `clc`, `columns`, `command_line_path`, `completion_append_char`, `completion_matches`, `complex`, `confirm_recursive_rmdir`, `cputime`, `crash_dumps_octave_core`, `ctranspose`, `cumprod`, `cumsum`, `debug_on_error`, `debug_on_interrupt`, `debug_on_warning`, `default_save_options`, `dellistener`, `diag`, `diff`, `disp`, `doc_cache_file`, `do_string_escapes`, `double`, `drawnow`, `e`, `echo_executing_commands`, `eps`, `eq`, `errno`, `errno_list`, `error`, `eval`, `evalin`, `exec`, `exist`, `exit`, `eye`, `false`, `fclear`, `fclose`, `fcntl`, `fdisp`, `feof`, `ferror`, `feval`, `fflush`, `fgetl`, `fgets`, `fieldnames`, `file_in_loadpath`, `file_in_path`, `filemarker`, `filesep`, `find_dir_in_path`, `fixed_point_format`, `fnmatch`, `fopen`, `fork`, `formula`, `fprintf`, `fputs`, `fread`, `freport`, `frewind`, `fscanf`, `fseek`, `fskipl`, `ftell`, `functions`, `fwrite`, `ge`, `genpath`, `get`, `getegid`, `getenv`, `geteuid`, `getgid`, `getpgrp`, `getpid`, `getppid`, `getuid`, `glob`, `gt`, `gui_mode`, `history_control`, `history_file`, `history_size`, `history_timestamp_format_string`, `home`, `horzcat`, `hypot`, `ifelse`, `ignore_function_time_stamp`, `inferiorto`, `info_file`, `info_program`, `inline`, `input`, `intmax`, `intmin`, `ipermute`, `is_absolute_filename`, `isargout`, `isbool`, `iscell`, `iscellstr`, `ischar`, `iscomplex`, `isempty`, `isfield`, `isfloat`, `isglobal`, `ishandle`, `isieee`, `isindex`, `isinteger`, `islogical`, `ismatrix`, `ismethod`, `isnull`, `isnumeric`, `isobject`, `isreal`, `is_rooted_relative_filename`, `issorted`, `isstruct`, `isvarname`, `kbhit`, `keyboard`, `kill`, `lasterr`, `lasterror`, `lastwarn`, `ldivide`, `le`, `length`, `link`, `linspace`, `logical`, `lstat`, `lt`, `make_absolute_filename`, `makeinfo_program`, `max_recursion_depth`, `merge`, `methods`, `mfilename`, `minus`, `mislocked`, `mkdir`, `mkfifo`, `mkstemp`, `mldivide`, `mlock`, `mouse_wheel_zoom`, `mpower`, `mrdivide`, `mtimes`, `munlock`, `nargin`, `nargout`, `native_float_format`, `ndims`, `ne`, `nfields`, `nnz`, `norm`, `not`, `numel`, `nzmax`, `octave_config_info`, `octave_core_file_limit`, `octave_core_file_name`, `octave_core_file_options`, `ones`, `or`, `output_max_field_width`, `output_precision`, `page_output_immediately`, `page_screen_output`, `path`, `pathsep`, `pause`, `pclose`, `permute`, `pi`, `pipe`, `plus`, `popen`, `power`, `print_empty_dimensions`, `printf`, `print_struct_array_contents`, `prod`, `program_invocation_name`, `program_name`, `putenv`, `puts`, `pwd`, `quit`, `rats`, `rdivide`, `readdir`, `readlink`, `read_readline_init_file`, `realmax`, `realmin`, `rehash`, `rename`, `repelems`, `re_read_readline_init_file`, `reset`, `reshape`, `resize`, `restoredefaultpath`, `rethrow`, `rmdir`, `rmfield`, `rmpath`, `rows`, `save_header_format_string`, `save_precision`, `saving_history`, `scanf`, `set`, `setenv`, `shell_cmd`, `sighup_dumps_octave_core`, `sigterm_dumps_octave_core`, `silent_functions`, `single`, `size`, `size_equal`, `sizemax`, `sizeof`, `sleep`, `source`, `sparse_auto_mutate`, `split_long_rows`, `sprintf`, `squeeze`, `sscanf`, `stat`, `stderr`, `stdin`, `stdout`, `strcmp`, `strcmpi`, `string_fill_char`, `strncmp`, `strncmpi`, `struct`, `struct_levels_to_print`, `strvcat`, `subsasgn`, `subsref`, `sum`, `sumsq`, `superiorto`, `suppress_verbose_help_message`, `symlink`, `system`, `tic`, `tilde_expand`, `times`, `tmpfile`, `tmpnam`, `toc`, `toupper`, `transpose`, `true`, `typeinfo`, `umask`, `uminus`, `uname`, `undo_string_escapes`, `unlink`, `uplus`, `upper`, `usage`, `usleep`, `vec`, `vectorize`, `vertcat`, `waitpid`, `warning`, `warranty`, `whos_line_format`, `yes_or_no`, `zeros`, `inf`, `Inf`, `nan`, `NaN`, `close`, `load`, `who`, `whos`, `accumarray`, `accumdim`, `acosd`, `acotd`, `acscd`, `addtodate`, `allchild`, `ancestor`, `anova`, `arch_fit`, `arch_rnd`, `arch_test`, `area`, `arma_rnd`, `arrayfun`, `ascii`, `asctime`, `asecd`, `asind`, `assert`, `atand`, `autoreg_matrix`, `autumn`, `axes`, `axis`, `bar`, `barh`, `bartlett`, `bartlett_test`, `beep`, `betacdf`, `betainv`, `betapdf`, `betarnd`, `bicgstab`, `bicubic`, `binary`, `binocdf`, `binoinv`, `binopdf`, `binornd`, `bitcmp`, `bitget`, `bitset`, `blackman`, `blanks`, `blkdiag`, `bone`, `box`, `brighten`, `calendar`, `cast`, `cauchy_cdf`, `cauchy_inv`, `cauchy_pdf`, `cauchy_rnd`, `caxis`, `celldisp`, `center`, `cgs`, `chisquare_test_homogeneity`, `chisquare_test_independence`, `circshift`, `cla`, `clabel`, `clf`, `clock`, `cloglog`, `closereq`, `colon`, `colorbar`, `colormap`, `colperm`, `comet`, `common_size`, `commutation_matrix`, `compan`, `compare_versions`, `compass`, `computer`, `cond`, `condest`, `contour`, `contourc`, `contourf`, `contrast`, `conv`, `convhull`, `cool`, `copper`, `copyfile`, `cor`, `corrcoef`, `cor_test`, `cosd`, `cotd`, `cov`, `cplxpair`, `cross`, `cscd`, `cstrcat`, `csvread`, `csvwrite`, `ctime`, `cumtrapz`, `curl`, `cut`, `cylinder`, `date`, `datenum`, `datestr`, `datetick`, `datevec`, `dblquad`, `deal`, `deblank`, `deconv`, `delaunay`, `delaunayn`, `delete`, `demo`, `detrend`, `diffpara`, `diffuse`, `dir`, `discrete_cdf`, `discrete_inv`, `discrete_pdf`, `discrete_rnd`, `display`, `divergence`, `dlmwrite`, `dos`, `dsearch`, `dsearchn`, `duplication_matrix`, `durbinlevinson`, `ellipsoid`, `empirical_cdf`, `empirical_inv`, `empirical_pdf`, `empirical_rnd`, `eomday`, `errorbar`, `etime`, `etreeplot`, `example`, `expcdf`, `expinv`, `expm`, `exppdf`, `exprnd`, `ezcontour`, `ezcontourf`, `ezmesh`, `ezmeshc`, `ezplot`, `ezpolar`, `ezsurf`, `ezsurfc`, `factor`, `factorial`, `fail`, `fcdf`, `feather`, `fftconv`, `fftfilt`, `fftshift`, `figure`, `fileattrib`, `fileparts`, `fill`, `findall`, `findobj`, `findstr`, `finv`, `flag`, `flipdim`, `fliplr`, `flipud`, `fpdf`, `fplot`, `fractdiff`, `freqz`, `freqz_plot`, `frnd`, `fsolve`, `f_test_regression`, `ftp`, `fullfile`, `fzero`, `gamcdf`, `gaminv`, `gampdf`, `gamrnd`, `gca`, `gcbf`, `gcbo`, `gcf`, `genvarname`, `geocdf`, `geoinv`, `geopdf`, `geornd`, `getfield`, `ginput`, `glpk`, `gls`, `gplot`, `gradient`, `graphics_toolkit`, `gray`, `grid`, `griddata`, `griddatan`, `gtext`, `gunzip`, `gzip`, `hadamard`, `hamming`, `hankel`, `hanning`, `hggroup`, `hidden`, `hilb`, `hist`, `histc`, `hold`, `hot`, `hotelling_test`, `housh`, `hsv`, `hurst`, `hygecdf`, `hygeinv`, `hygepdf`, `hygernd`, `idivide`, `ifftshift`, `image`, `imagesc`, `imfinfo`, `imread`, `imshow`, `imwrite`, `index`, `info`, `inpolygon`, `inputname`, `interpft`, `interpn`, `intersect`, `invhilb`, `iqr`, `isa`, `isdefinite`, `isdir`, `is_duplicate_entry`, `isequal`, `isequalwithequalnans`, `isfigure`, `ishermitian`, `ishghandle`, `is_leap_year`, `isletter`, `ismac`, `ismember`, `ispc`, `isprime`, `isprop`, `isscalar`, `issquare`, `isstrprop`, `issymmetric`, `isunix`, `is_valid_file_id`, `isvector`, `jet`, `kendall`, `kolmogorov_smirnov_cdf`, `kolmogorov_smirnov_test`, `kruskal_wallis_test`, `krylov`, `kurtosis`, `laplace_cdf`, `laplace_inv`, `laplace_pdf`, `laplace_rnd`, `legend`, `legendre`, `license`, `line`, `linkprop`, `list_primes`, `loadaudio`, `loadobj`, `logistic_cdf`, `logistic_inv`, `logistic_pdf`, `logistic_rnd`, `logit`, `loglog`, `loglogerr`, `logm`, `logncdf`, `logninv`, `lognpdf`, `lognrnd`, `logspace`, `lookfor`, `ls_command`, `lsqnonneg`, `magic`, `mahalanobis`, `manova`, `matlabroot`, `mcnemar_test`, `mean`, `meansq`, `median`, `menu`, `mesh`, `meshc`, `meshgrid`, `meshz`, `mexext`, `mget`, `mkpp`, `mode`, `moment`, `movefile`, `mpoles`, `mput`, `namelengthmax`, `nargchk`, `nargoutchk`, `nbincdf`, `nbininv`, `nbinpdf`, `nbinrnd`, `nchoosek`, `ndgrid`, `newplot`, `news`, `nonzeros`, `normcdf`, `normest`, `norminv`, `normpdf`, `normrnd`, `now`, `nthroot`, `null`, `ocean`, `ols`, `onenormest`, `optimget`, `optimset`, `orderfields`, `orient`, `orth`, `pack`, `pareto`, `parseparams`, `pascal`, `patch`, `pathdef`, `pcg`, `pchip`, `pcolor`, `pcr`, `peaks`, `periodogram`, `perl`, `perms`, `pie`, `pink`, `planerot`, `playaudio`, `plot`, `plotmatrix`, `plotyy`, `poisscdf`, `poissinv`, `poisspdf`, `poissrnd`, `polar`, `poly`, `polyaffine`, `polyarea`, `polyderiv`, `polyfit`, `polygcd`, `polyint`, `polyout`, `polyreduce`, `polyval`, `polyvalm`, `postpad`, `powerset`, `ppder`, `ppint`, `ppjumps`, `ppplot`, `ppval`, `pqpnonneg`, `prepad`, `primes`, `print`, `print_usage`, `prism`, `probit`, `qp`, `qqplot`, `quadcc`, `quadgk`, `quadl`, `quadv`, `quiver`, `qzhess`, `rainbow`, `randi`, `range`, `rank`, `ranks`, `rat`, `reallog`, `realpow`, `realsqrt`, `record`, `rectangle_lw`, `rectangle_sw`, `rectint`, `refresh`, `refreshdata`, `regexptranslate`, `repmat`, `residue`, `ribbon`, `rindex`, `roots`, `rose`, `rosser`, `rotdim`, `rref`, `run`, `run_count`, `rundemos`, `run_test`, `runtests`, `saveas`, `saveaudio`, `saveobj`, `savepath`, `scatter`, `secd`, `semilogx`, `semilogxerr`, `semilogy`, `semilogyerr`, `setaudio`, `setdiff`, `setfield`, `setxor`, `shading`, `shift`, `shiftdim`, `sign_test`, `sinc`, `sind`, `sinetone`, `sinewave`, `skewness`, `slice`, `sombrero`, `sortrows`, `spaugment`, `spconvert`, `spdiags`, `spearman`, `spectral_adf`, `spectral_xdf`, `specular`, `speed`, `spencer`, `speye`, `spfun`, `sphere`, `spinmap`, `spline`, `spones`, `sprand`, `sprandn`, `sprandsym`, `spring`, `spstats`, `spy`, `sqp`, `stairs`, `statistics`, `std`, `stdnormal_cdf`, `stdnormal_inv`, `stdnormal_pdf`, `stdnormal_rnd`, `stem`, `stft`, `strcat`, `strchr`, `strjust`, `strmatch`, `strread`, `strsplit`, `strtok`, `strtrim`, `strtrunc`, `structfun`, `studentize`, `subplot`, `subsindex`, `subspace`, `substr`, `substruct`, `summer`, `surf`, `surface`, `surfc`, `surfl`, `surfnorm`, `svds`, `swapbytes`, `sylvester_matrix`, `symvar`, `synthesis`, `table`, `tand`, `tar`, `tcdf`, `tempdir`, `tempname`, `test`, `text`, `textread`, `textscan`, `tinv`, `title`, `toeplitz`, `tpdf`, `trace`, `trapz`, `treelayout`, `treeplot`, `triangle_lw`, `triangle_sw`, `tril`, `trimesh`, `triplequad`, `triplot`, `trisurf`, `triu`, `trnd`, `tsearchn`, `t_test`, `t_test_regression`, `type`, `unidcdf`, `unidinv`, `unidpdf`, `unidrnd`, `unifcdf`, `unifinv`, `unifpdf`, `unifrnd`, `union`, `unique`, `unix`, `unmkpp`, `unpack`, `untabify`, `untar`, `unwrap`, `unzip`, `u_test`, `validatestring`, `vander`, `var`, `var_test`, `vech`, `ver`, `version`, `view`, `voronoi`, `voronoin`, `waitforbuttonpress`, `wavread`, `wavwrite`, `wblcdf`, `wblinv`, `wblpdf`, `wblrnd`, `weekday`, `welch_test`, `what`, `white`, `whitebg`, `wienrnd`, `wilcoxon_test`, `wilkinson`, `winter`, `xlabel`, `xlim`, `ylabel`, `yulewalker`, `zip`, `zlabel`, `z_test`, `airy`, `amd`, `balance`, `besselh`, `besseli`, `besselj`, `besselk`, `bessely`, `bitpack`, `bsxfun`, `builtin`, `ccolamd`, `cellfun`, `cellslices`, `chol`, `choldelete`, `cholinsert`, `cholinv`, `cholshift`, `cholupdate`, `colamd`, `colloc`, `convhulln`, `convn`, `csymamd`, `cummax`, `cummin`, `daspk`, `daspk_options`, `dasrt`, `dasrt_options`, `dassl`, `dassl_options`, `dbclear`, `dbdown`, `dbstack`, `dbstatus`, `dbstop`, `dbtype`, `dbup`, `dbwhere`, `det`, `dlmread`, `dmperm`, `dot`, `eig`, `eigs`, `endgrent`, `endpwent`, `etree`, `fft`, `fftn`, `fftw`, `filter`, `find`, `full`, `gcd`, `getgrent`, `getgrgid`, `getgrnam`, `getpwent`, `getpwnam`, `getpwuid`, `getrusage`, `givens`, `gmtime`, `gnuplot_binary`, `hess`, `ifft`, `ifftn`, `inv`, `isdebugmode`, `issparse`, `kron`, `localtime`, `lookup`, `lsode`, `lsode_options`, `lu`, `luinc`, `luupdate`, `matrix_type`, `max`, `min`, `mktime`, `pinv`, `qr`, `qrdelete`, `qrinsert`, `qrshift`, `qrupdate`, `quad`, `quad_options`, `qz`, `rand`, `rande`, `randg`, `randn`, `randp`, `randperm`, `rcond`, `regexp`, `regexpi`, `regexprep`, `schur`, `setgrent`, `setpwent`, `sort`, `spalloc`, `sparse`, `spparms`, `sprank`, `sqrtm`, `strfind`, `strftime`, `strptime`, `strrep`, `svd`, `svd_driver`, `syl`, `symamd`, `symbfact`, `symrcm`, `time`, `tsearch`, `typecast`, `urlread`, `urlwrite`, `abs`, `acos`, `acosh`, `acot`, `acoth`, `acsc`, `acsch`, `angle`, `arg`, `asec`, `asech`, `asin`, `asinh`, `atan`, `atanh`, `beta`, `betainc`, `betaln`, `bincoeff`, `cbrt`, `ceil`, `conj`, `cos`, `cosh`, `cot`, `coth`, `csc`, `csch`, `erf`, `erfc`, `erfcx`, `erfinv`, `exp`, `finite`, `fix`, `floor`, `fmod`, `gamma`, `gammainc`, `gammaln`, `imag`, `isalnum`, `isalpha`, `isascii`, `iscntrl`, `isdigit`, `isfinite`, `isgraph`, `isinf`, `islower`, `isna`, `isnan`, `isprint`, `ispunct`, `isspace`, `isupper`, `isxdigit`, `lcm`, `lgamma`, `log`, `lower`, `mod`, `real`, `rem`, `round`, `roundb`, `sec`, `sech`, `sign`, `sin`, `sinh`, `sqrt`, `tan`, `tanh`, `toascii`, `tolower`, `xor`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\b`, `EDITOR`, `EXEC_PATH`, `I`, `IMAGE_PATH`, `NA`, `OCTAVE_HOME`, `OCTAVE_VERSION`, `PAGER`, `PAGER_FLAGS`, `SEEK_CUR`, `SEEK_END`, `SEEK_SET`, `SIG`, `S_ISBLK`, `S_ISCHR`, `S_ISDIR`, `S_ISFIFO`, `S_ISLNK`, `S_ISREG`, `S_ISSOCK`, `WCONTINUE`, `WCOREDUMP`, `WEXITSTATUS`, `WIFCONTINUED`, `WIFEXITED`, `WIFSIGNALED`, `WIFSTOPPED`, `WNOHANG`, `WSTOPSIG`, `WTERMSIG`, `WUNTRACED`), NameConstant, nil},\n-\t\t\t{`-=|!=|!|/=|--`, Operator, nil},\n-\t\t\t{`-|==|~=|<|>|<=|>=|&&|&|~|\\|\\|?`, Operator, nil},\n-\t\t\t{`\\*=|\\+=|\\^=|\\/=|\\\\=|\\*\\*|\\+\\+|\\.\\*\\*`, Operator, nil},\n-\t\t\t{`\\.\\*|\\*|\\+|\\.\\^|\\.\\\\|\\.\\/|\\/|\\\\`, Operator, nil},\n-\t\t\t{`[\\[\\](){}:@.,]`, Punctuation, nil},\n-\t\t\t{`=|:|;`, Punctuation, nil},\n-\t\t\t{`\"[^\"]*\"`, LiteralString, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\d*\\.\\d+)([eEf][+-]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+[eEf][+-]?[0-9]+`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`(?<=[\\w)\\].])\\'+`, Operator, nil},\n-\t\t\t{`(?<![\\w)\\].])\\'`, LiteralString, Push(\"string\")},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t\t{`.`, Text, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`[^']*'`, LiteralString, Pop(1)},\n-\t\t},\n-\t\t\"deffunc\": {\n-\t\t\t{`(\\s*)(?:(.+)(\\s*)(=)(\\s*))?(.+)(\\()(.*)(\\))(\\s*)`, ByGroups(TextWhitespace, Text, TextWhitespace, Punctuation, TextWhitespace, NameFunction, Punctuation, Text, Punctuation, TextWhitespace), Pop(1)},\n-\t\t\t{`(\\s*)([a-zA-Z_]\\w*)`, ByGroups(Text, NameFunction), Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "cb51b715b5d56eeba1d7552c4106e94f5ef8734a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/o/onesenterprise.go",
      "status": "removed",
      "additions": 0,
      "deletions": 50,
      "changes": 50,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fo%2Fonesenterprise.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fo%2Fonesenterprise.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fo%2Fonesenterprise.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,50 +0,0 @@\n-package o\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// 1S:Enterprise lexer.\n-var OnesEnterprise = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"OnesEnterprise\",\n-\t\tAliases:         []string{\"ones\", \"onesenterprise\", \"1S\", \"1S:Enterprise\"},\n-\t\tFilenames:       []string{\"*.EPF\", \"*.epf\", \"*.ERF\", \"*.erf\"},\n-\t\tMimeTypes:       []string{\"application/octet-stream\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tonesRules,\n-))\n-\n-func onesRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`//(.*?)\\n`, Comment, nil},\n-\t\t\t{`(#область|#region|#конецобласти|#endregion|#если|#if|#иначе|#else|#конецесли|#endif).*`, CommentPreproc, nil},\n-\t\t\t{`(&наклиенте|&atclient|&насервере|&atserver|&насерверебезконтекста|&atservernocontext|&наклиентенасерверебезконтекста|&atclientatservernocontext).*`, CommentPreproc, nil},\n-\t\t\t{`(>=|<=|<>|\\+|-|=|>|<|\\*|/|%)`, Operator, nil},\n-\t\t\t{`(;|,|\\)|\\(|\\.)`, Punctuation, nil},\n-\t\t\t{Words(``, `\\b`, `истина`, `true`, `ложь`, `false`, `и`, `and`, `или`, `or`, `не`, `not`), Operator, nil},\n-\t\t\t{Words(``, `\\b`, `если`, `if`, `тогда`, `then`, `иначе`, `else`, `иначеесли`, `elsif`, `конецесли`, `endif`), Operator, nil},\n-\t\t\t{Words(``, `\\b`, `для`, `for`, `каждого`, `each`, `из`, `in`, `цикл`, `do`, `пока`, `while`, `конеццикла`, `enddo`, `по`, `to`), Operator, nil},\n-\t\t\t{Words(``, `\\b`, `прервать`, `break`, `продолжить`, `continue`, `возврат`, `return`, `перейти`, `goto`), Operator, nil},\n-\t\t\t{Words(``, `\\b`, `процедура`, `procedure`, `конецпроцедуры`, `endprocedure`, `функция`, `function`, `конецфункции`, `endfunction`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `новый`, `new`, `знач`, `val`, `экспорт`, `export`, `перем`, `var`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `попытка`, `try`, `исключение`, `except`, `вызватьисключение`, `raise`, `конецпопытки`, `endtry`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `выполнить`, `execute`, `вычислить`, `eval`), Keyword, nil},\n-\t\t\t{`\"`, LiteralString, Push(\"string\")},\n-\t\t\t{`[_а-яА-Я0-9][а-яА-Я0-9]*`, Name, nil},\n-\t\t\t{`[_\\w][\\w]*`, Name, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\"\"`, LiteralString, nil},\n-\t\t\t{`\"C?`, LiteralString, Pop(1)},\n-\t\t\t{`[^\"]+`, LiteralString, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "d18b9caab4c9bec9cf428a3a503fd87c3c540e2f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/o/openscad.go",
      "status": "removed",
      "additions": 0,
      "deletions": 47,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fo%2Fopenscad.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fo%2Fopenscad.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fo%2Fopenscad.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,47 +0,0 @@\n-package o\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-var OpenSCAD = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"OpenSCAD\",\n-\t\tAliases:   []string{\"openscad\"},\n-\t\tFilenames: []string{\"*.scad\"},\n-\t\tMimeTypes: []string{\"text/x-scad\"},\n-\t},\n-\topenSCADRules,\n-))\n-\n-func openSCADRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`//(\\n|[\\w\\W]*?[^\\\\]\\n)`, CommentSingle, nil},\n-\t\t\t{`/(\\\\\\n)?[*][\\w\\W]*?[*](\\\\\\n)?/`, CommentMultiline, nil},\n-\t\t\t{`/(\\\\\\n)?[*][\\w\\W]*`, CommentMultiline, nil},\n-\t\t\t{`[{}\\[\\]\\(\\),;:]`, Punctuation, nil},\n-\t\t\t{`[*!#%\\-+=?/]`, Operator, nil},\n-\t\t\t{`<|<=|==|!=|>=|>|&&|\\|\\|`, Operator, nil},\n-\t\t\t{`\\$(f[asn]|t|vp[rtd]|children)`, NameVariableMagic, nil},\n-\t\t\t{Words(``, `\\b`, `PI`, `undef`), KeywordConstant, nil},\n-\t\t\t{`(use|include)((?:\\s|\\\\\\\\s)+)`, ByGroups(KeywordNamespace, Text), Push(\"includes\")},\n-\t\t\t{`(module)(\\s*)([^\\s\\(]+)`, ByGroups(KeywordNamespace, Text, NameNamespace), nil},\n-\t\t\t{`(function)(\\s*)([^\\s\\(]+)`, ByGroups(KeywordDeclaration, Text, NameFunction), nil},\n-\t\t\t{`\\b(true|false)\\b`, Literal, nil},\n-\t\t\t{`\\b(function|module|include|use|for|intersection_for|if|else|return)\\b`, Keyword, nil},\n-\t\t\t{`\\b(circle|square|polygon|text|sphere|cube|cylinder|polyhedron|translate|rotate|scale|resize|mirror|multmatrix|color|offset|hull|minkowski|union|difference|intersection|abs|sign|sin|cos|tan|acos|asin|atan|atan2|floor|round|ceil|ln|log|pow|sqrt|exp|rands|min|max|concat|lookup|str|chr|search|version|version_num|norm|cross|parent_module|echo|import|import_dxf|dxf_linear_extrude|linear_extrude|rotate_extrude|surface|projection|render|dxf_cross|dxf_dim|let|assign|len)\\b`, NameBuiltin, nil},\n-\t\t\t{`\\bchildren\\b`, NameBuiltinPseudo, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`-?\\d+(\\.\\d+)?(e[+-]?\\d+)?`, Number, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t},\n-\t\t\"includes\": {\n-\t\t\t{\"(<)([^>]*)(>)\", ByGroups(Punctuation, CommentPreprocFile, Punctuation), nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "00c6255af6f50baa96b2d3e04c5b48b84d0a3b73",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/pacman.go",
      "status": "removed",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpacman.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpacman.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpacman.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,30 +0,0 @@\n-package p\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Pacmanconf lexer.\n-var Pacmanconf = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"PacmanConf\",\n-\t\tAliases:   []string{\"pacmanconf\"},\n-\t\tFilenames: []string{\"pacman.conf\"},\n-\t\tMimeTypes: []string{},\n-\t},\n-\tpacmanconfRules,\n-))\n-\n-func pacmanconfRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`#.*$`, CommentSingle, nil},\n-\t\t\t{`^\\s*\\[.*?\\]\\s*$`, Keyword, nil},\n-\t\t\t{`(\\w+)(\\s*)(=)`, ByGroups(NameAttribute, Text, Operator), nil},\n-\t\t\t{`^(\\s*)(\\w+)(\\s*)$`, ByGroups(Text, NameAttribute, Text), nil},\n-\t\t\t{Words(``, `\\b`, `$repo`, `$arch`, `%o`, `%u`), NameVariable, nil},\n-\t\t\t{`.`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "6aa338ad116b7ef8e214fa06563d7fe06159c922",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/perl.go",
      "status": "removed",
      "additions": 0,
      "deletions": 142,
      "changes": 142,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fperl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fperl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fperl.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,142 +0,0 @@\n-package p\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Perl lexer.\n-var Perl = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Perl\",\n-\t\tAliases:   []string{\"perl\", \"pl\"},\n-\t\tFilenames: []string{\"*.pl\", \"*.pm\", \"*.t\"},\n-\t\tMimeTypes: []string{\"text/x-perl\", \"application/x-perl\"},\n-\t\tDotAll:    true,\n-\t},\n-\tperlRules,\n-))\n-\n-func perlRules() Rules {\n-\treturn Rules{\n-\t\t\"balanced-regex\": {\n-\t\t\t{`/(\\\\\\\\|\\\\[^\\\\]|[^\\\\/])*/[egimosx]*`, LiteralStringRegex, Pop(1)},\n-\t\t\t{`!(\\\\\\\\|\\\\[^\\\\]|[^\\\\!])*![egimosx]*`, LiteralStringRegex, Pop(1)},\n-\t\t\t{`\\\\(\\\\\\\\|[^\\\\])*\\\\[egimosx]*`, LiteralStringRegex, Pop(1)},\n-\t\t\t{`\\{(\\\\\\\\|\\\\[^\\\\]|[^\\\\}])*\\}[egimosx]*`, LiteralStringRegex, Pop(1)},\n-\t\t\t{`<(\\\\\\\\|\\\\[^\\\\]|[^\\\\>])*>[egimosx]*`, LiteralStringRegex, Pop(1)},\n-\t\t\t{`\\[(\\\\\\\\|\\\\[^\\\\]|[^\\\\\\]])*\\][egimosx]*`, LiteralStringRegex, Pop(1)},\n-\t\t\t{`\\((\\\\\\\\|\\\\[^\\\\]|[^\\\\)])*\\)[egimosx]*`, LiteralStringRegex, Pop(1)},\n-\t\t\t{`@(\\\\\\\\|\\\\[^\\\\]|[^\\\\@])*@[egimosx]*`, LiteralStringRegex, Pop(1)},\n-\t\t\t{`%(\\\\\\\\|\\\\[^\\\\]|[^\\\\%])*%[egimosx]*`, LiteralStringRegex, Pop(1)},\n-\t\t\t{`\\$(\\\\\\\\|\\\\[^\\\\]|[^\\\\$])*\\$[egimosx]*`, LiteralStringRegex, Pop(1)},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\t{`\\A\\#!.+?$`, CommentHashbang, nil},\n-\t\t\t{`\\#.*?$`, CommentSingle, nil},\n-\t\t\t{`^=[a-zA-Z0-9]+\\s+.*?\\n=cut`, CommentMultiline, nil},\n-\t\t\t{Words(``, `\\b`, `case`, `continue`, `do`, `else`, `elsif`, `for`, `foreach`, `if`, `last`, `my`, `next`, `our`, `redo`, `reset`, `then`, `unless`, `until`, `while`, `print`, `new`, `BEGIN`, `CHECK`, `INIT`, `END`, `return`), Keyword, nil},\n-\t\t\t{`(format)(\\s+)(\\w+)(\\s*)(=)(\\s*\\n)`, ByGroups(Keyword, Text, Name, Text, Punctuation, Text), Push(\"format\")},\n-\t\t\t{`(eq|lt|gt|le|ge|ne|not|and|or|cmp)\\b`, OperatorWord, nil},\n-\t\t\t{`s/(\\\\\\\\|\\\\[^\\\\]|[^\\\\/])*/(\\\\\\\\|\\\\[^\\\\]|[^\\\\/])*/[egimosx]*`, LiteralStringRegex, nil},\n-\t\t\t{`s!(\\\\\\\\|\\\\!|[^!])*!(\\\\\\\\|\\\\!|[^!])*![egimosx]*`, LiteralStringRegex, nil},\n-\t\t\t{`s\\\\(\\\\\\\\|[^\\\\])*\\\\(\\\\\\\\|[^\\\\])*\\\\[egimosx]*`, LiteralStringRegex, nil},\n-\t\t\t{`s@(\\\\\\\\|\\\\[^\\\\]|[^\\\\@])*@(\\\\\\\\|\\\\[^\\\\]|[^\\\\@])*@[egimosx]*`, LiteralStringRegex, nil},\n-\t\t\t{`s%(\\\\\\\\|\\\\[^\\\\]|[^\\\\%])*%(\\\\\\\\|\\\\[^\\\\]|[^\\\\%])*%[egimosx]*`, LiteralStringRegex, nil},\n-\t\t\t{`s\\{(\\\\\\\\|\\\\[^\\\\]|[^\\\\}])*\\}\\s*`, LiteralStringRegex, Push(\"balanced-regex\")},\n-\t\t\t{`s<(\\\\\\\\|\\\\[^\\\\]|[^\\\\>])*>\\s*`, LiteralStringRegex, Push(\"balanced-regex\")},\n-\t\t\t{`s\\[(\\\\\\\\|\\\\[^\\\\]|[^\\\\\\]])*\\]\\s*`, LiteralStringRegex, Push(\"balanced-regex\")},\n-\t\t\t{`s\\((\\\\\\\\|\\\\[^\\\\]|[^\\\\)])*\\)\\s*`, LiteralStringRegex, Push(\"balanced-regex\")},\n-\t\t\t{`m?/(\\\\\\\\|\\\\[^\\\\]|[^\\\\/\\n])*/[gcimosx]*`, LiteralStringRegex, nil},\n-\t\t\t{`m(?=[/!\\\\{<\\[(@%$])`, LiteralStringRegex, Push(\"balanced-regex\")},\n-\t\t\t{`((?<==~)|(?<=\\())\\s*/(\\\\\\\\|\\\\[^\\\\]|[^\\\\/])*/[gcimosx]*`, LiteralStringRegex, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{Words(``, `\\b`, `abs`, `accept`, `alarm`, `atan2`, `bind`, `binmode`, `bless`, `caller`, `chdir`, `chmod`, `chomp`, `chop`, `chown`, `chr`, `chroot`, `close`, `closedir`, `connect`, `continue`, `cos`, `crypt`, `dbmclose`, `dbmopen`, `defined`, `delete`, `die`, `dump`, `each`, `endgrent`, `endhostent`, `endnetent`, `endprotoent`, `endpwent`, `endservent`, `eof`, `eval`, `exec`, `exists`, `exit`, `exp`, `fcntl`, `fileno`, `flock`, `fork`, `format`, `formline`, `getc`, `getgrent`, `getgrgid`, `getgrnam`, `gethostbyaddr`, `gethostbyname`, `gethostent`, `getlogin`, `getnetbyaddr`, `getnetbyname`, `getnetent`, `getpeername`, `getpgrp`, `getppid`, `getpriority`, `getprotobyname`, `getprotobynumber`, `getprotoent`, `getpwent`, `getpwnam`, `getpwuid`, `getservbyname`, `getservbyport`, `getservent`, `getsockname`, `getsockopt`, `glob`, `gmtime`, `goto`, `grep`, `hex`, `import`, `index`, `int`, `ioctl`, `join`, `keys`, `kill`, `last`, `lc`, `lcfirst`, `length`, `link`, `listen`, `local`, `localtime`, `log`, `lstat`, `map`, `mkdir`, `msgctl`, `msgget`, `msgrcv`, `msgsnd`, `my`, `next`, `oct`, `open`, `opendir`, `ord`, `our`, `pack`, `pipe`, `pop`, `pos`, `printf`, `prototype`, `push`, `quotemeta`, `rand`, `read`, `readdir`, `readline`, `readlink`, `readpipe`, `recv`, `redo`, `ref`, `rename`, `reverse`, `rewinddir`, `rindex`, `rmdir`, `scalar`, `seek`, `seekdir`, `select`, `semctl`, `semget`, `semop`, `send`, `setgrent`, `sethostent`, `setnetent`, `setpgrp`, `setpriority`, `setprotoent`, `setpwent`, `setservent`, `setsockopt`, `shift`, `shmctl`, `shmget`, `shmread`, `shmwrite`, `shutdown`, `sin`, `sleep`, `socket`, `socketpair`, `sort`, `splice`, `split`, `sprintf`, `sqrt`, `srand`, `stat`, `study`, `substr`, `symlink`, `syscall`, `sysopen`, `sysread`, `sysseek`, `system`, `syswrite`, `tell`, `telldir`, `tie`, `tied`, `time`, `times`, `tr`, `truncate`, `uc`, `ucfirst`, `umask`, `undef`, `unlink`, `unpack`, `unshift`, `untie`, `utime`, `values`, `vec`, `wait`, `waitpid`, `wantarray`, `warn`, `write`), NameBuiltin, nil},\n-\t\t\t{`((__(DATA|DIE|WARN)__)|(STD(IN|OUT|ERR)))\\b`, NameBuiltinPseudo, nil},\n-\t\t\t{`(<<)([\\'\"]?)([a-zA-Z_]\\w*)(\\2;?\\n.*?\\n)(\\3)(\\n)`, ByGroups(LiteralString, LiteralString, LiteralStringDelimiter, LiteralString, LiteralStringDelimiter, Text), nil},\n-\t\t\t{`__END__`, CommentPreproc, Push(\"end-part\")},\n-\t\t\t{`\\$\\^[ADEFHILMOPSTWX]`, NameVariableGlobal, nil},\n-\t\t\t{\"\\\\$[\\\\\\\\\\\\\\\"\\\\[\\\\]'&`+*.,;=%~?@$!<>(^|/-](?!\\\\w)\", NameVariableGlobal, nil},\n-\t\t\t{`[$@%#]+`, NameVariable, Push(\"varname\")},\n-\t\t\t{`0_?[0-7]+(_[0-7]+)*`, LiteralNumberOct, nil},\n-\t\t\t{`0x[0-9A-Fa-f]+(_[0-9A-Fa-f]+)*`, LiteralNumberHex, nil},\n-\t\t\t{`0b[01]+(_[01]+)*`, LiteralNumberBin, nil},\n-\t\t\t{`(?i)(\\d*(_\\d*)*\\.\\d+(_\\d*)*|\\d+(_\\d*)*\\.\\d+(_\\d*)*)(e[+-]?\\d+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`(?i)\\d+(_\\d*)*e[+-]?\\d+(_\\d*)*`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+(_\\d+)*`, LiteralNumberInteger, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\[^\\\\]|[^'\\\\])*'`, LiteralString, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\[^\\\\]|[^\"\\\\])*\"`, LiteralString, nil},\n-\t\t\t{\"`(\\\\\\\\\\\\\\\\|\\\\\\\\[^\\\\\\\\]|[^`\\\\\\\\])*`\", LiteralStringBacktick, nil},\n-\t\t\t{`<([^\\s>]+)>`, LiteralStringRegex, nil},\n-\t\t\t{`(q|qq|qw|qr|qx)\\{`, LiteralStringOther, Push(\"cb-string\")},\n-\t\t\t{`(q|qq|qw|qr|qx)\\(`, LiteralStringOther, Push(\"rb-string\")},\n-\t\t\t{`(q|qq|qw|qr|qx)\\[`, LiteralStringOther, Push(\"sb-string\")},\n-\t\t\t{`(q|qq|qw|qr|qx)\\<`, LiteralStringOther, Push(\"lt-string\")},\n-\t\t\t{`(q|qq|qw|qr|qx)([\\W_])(.|\\n)*?\\2`, LiteralStringOther, nil},\n-\t\t\t{`(package)(\\s+)([a-zA-Z_]\\w*(?:::[a-zA-Z_]\\w*)*)`, ByGroups(Keyword, Text, NameNamespace), nil},\n-\t\t\t{`(use|require|no)(\\s+)([a-zA-Z_]\\w*(?:::[a-zA-Z_]\\w*)*)`, ByGroups(Keyword, Text, NameNamespace), nil},\n-\t\t\t{`(sub)(\\s+)`, ByGroups(Keyword, Text), Push(\"funcname\")},\n-\t\t\t{Words(``, `\\b`, `no`, `package`, `require`, `use`), Keyword, nil},\n-\t\t\t{`(\\[\\]|\\*\\*|::|<<|>>|>=|<=>|<=|={3}|!=|=~|!~|&&?|\\|\\||\\.{1,3})`, Operator, nil},\n-\t\t\t{`[-+/*%=<>&^|!\\\\~]=?`, Operator, nil},\n-\t\t\t{`[()\\[\\]:;,<>/?{}]`, Punctuation, nil},\n-\t\t\t{`(?=\\w)`, Name, Push(\"name\")},\n-\t\t},\n-\t\t\"format\": {\n-\t\t\t{`\\.\\n`, LiteralStringInterpol, Pop(1)},\n-\t\t\t{`[^\\n]*\\n`, LiteralStringInterpol, nil},\n-\t\t},\n-\t\t\"varname\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\{`, Punctuation, Pop(1)},\n-\t\t\t{`\\)|,`, Punctuation, Pop(1)},\n-\t\t\t{`\\w+::`, NameNamespace, nil},\n-\t\t\t{`[\\w:]+`, NameVariable, Pop(1)},\n-\t\t},\n-\t\t\"name\": {\n-\t\t\t{`[a-zA-Z_]\\w*(::[a-zA-Z_]\\w*)*(::)?(?=\\s*->)`, NameNamespace, Pop(1)},\n-\t\t\t{`[a-zA-Z_]\\w*(::[a-zA-Z_]\\w*)*::`, NameNamespace, Pop(1)},\n-\t\t\t{`[\\w:]+`, Name, Pop(1)},\n-\t\t\t{`[A-Z_]+(?=\\W)`, NameConstant, Pop(1)},\n-\t\t\t{`(?=\\W)`, Text, Pop(1)},\n-\t\t},\n-\t\t\"funcname\": {\n-\t\t\t{`[a-zA-Z_]\\w*[!?]?`, NameFunction, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`(\\([$@%]*\\))(\\s*)`, ByGroups(Punctuation, Text), nil},\n-\t\t\t{`;`, Punctuation, Pop(1)},\n-\t\t\t{`.*?\\{`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"cb-string\": {\n-\t\t\t{`\\\\[{}\\\\]`, LiteralStringOther, nil},\n-\t\t\t{`\\\\`, LiteralStringOther, nil},\n-\t\t\t{`\\{`, LiteralStringOther, Push(\"cb-string\")},\n-\t\t\t{`\\}`, LiteralStringOther, Pop(1)},\n-\t\t\t{`[^{}\\\\]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"rb-string\": {\n-\t\t\t{`\\\\[()\\\\]`, LiteralStringOther, nil},\n-\t\t\t{`\\\\`, LiteralStringOther, nil},\n-\t\t\t{`\\(`, LiteralStringOther, Push(\"rb-string\")},\n-\t\t\t{`\\)`, LiteralStringOther, Pop(1)},\n-\t\t\t{`[^()]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"sb-string\": {\n-\t\t\t{`\\\\[\\[\\]\\\\]`, LiteralStringOther, nil},\n-\t\t\t{`\\\\`, LiteralStringOther, nil},\n-\t\t\t{`\\[`, LiteralStringOther, Push(\"sb-string\")},\n-\t\t\t{`\\]`, LiteralStringOther, Pop(1)},\n-\t\t\t{`[^\\[\\]]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"lt-string\": {\n-\t\t\t{`\\\\[<>\\\\]`, LiteralStringOther, nil},\n-\t\t\t{`\\\\`, LiteralStringOther, nil},\n-\t\t\t{`\\<`, LiteralStringOther, Push(\"lt-string\")},\n-\t\t\t{`\\>`, LiteralStringOther, Pop(1)},\n-\t\t\t{`[^<>]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"end-part\": {\n-\t\t\t{`.+`, CommentPreproc, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "f2852c18ae9ecd2b6bf719026d29be7be2c02e43",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/pig.go",
      "status": "removed",
      "additions": 0,
      "deletions": 61,
      "changes": 61,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpig.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpig.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpig.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,61 +0,0 @@\n-package p\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Pig lexer.\n-var Pig = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"Pig\",\n-\t\tAliases:         []string{\"pig\"},\n-\t\tFilenames:       []string{\"*.pig\"},\n-\t\tMimeTypes:       []string{\"text/x-pig\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tpigRules,\n-))\n-\n-func pigRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`--.*`, Comment, nil},\n-\t\t\t{`/\\*[\\w\\W]*?\\*/`, CommentMultiline, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`\\\\`, Text, nil},\n-\t\t\t{`\\'(?:\\\\[ntbrf\\\\\\']|\\\\u[0-9a-f]{4}|[^\\'\\\\\\n\\r])*\\'`, LiteralString, nil},\n-\t\t\tInclude(\"keywords\"),\n-\t\t\tInclude(\"types\"),\n-\t\t\tInclude(\"builtins\"),\n-\t\t\tInclude(\"punct\"),\n-\t\t\tInclude(\"operators\"),\n-\t\t\t{`[0-9]*\\.[0-9]+(e[0-9]+)?[fd]?`, LiteralNumberFloat, nil},\n-\t\t\t{`0x[0-9a-f]+`, LiteralNumberHex, nil},\n-\t\t\t{`[0-9]+L?`, LiteralNumberInteger, nil},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`([a-z_]\\w*)(\\s*)(\\()`, ByGroups(NameFunction, Text, Punctuation), nil},\n-\t\t\t{`[()#:]`, Text, nil},\n-\t\t\t{`[^(:#\\'\")\\s]+`, Text, nil},\n-\t\t\t{`\\S+\\s+`, Text, nil},\n-\t\t},\n-\t\t\"keywords\": {\n-\t\t\t{`(assert|and|any|all|arrange|as|asc|bag|by|cache|CASE|cat|cd|cp|%declare|%default|define|dense|desc|describe|distinct|du|dump|eval|exex|explain|filter|flatten|foreach|full|generate|group|help|if|illustrate|import|inner|input|into|is|join|kill|left|limit|load|ls|map|matches|mkdir|mv|not|null|onschema|or|order|outer|output|parallel|pig|pwd|quit|register|returns|right|rm|rmf|rollup|run|sample|set|ship|split|stderr|stdin|stdout|store|stream|through|union|using|void)\\b`, Keyword, nil},\n-\t\t},\n-\t\t\"builtins\": {\n-\t\t\t{`(AVG|BinStorage|cogroup|CONCAT|copyFromLocal|copyToLocal|COUNT|cross|DIFF|MAX|MIN|PigDump|PigStorage|SIZE|SUM|TextLoader|TOKENIZE)\\b`, NameBuiltin, nil},\n-\t\t},\n-\t\t\"types\": {\n-\t\t\t{`(bytearray|BIGINTEGER|BIGDECIMAL|chararray|datetime|double|float|int|long|tuple)\\b`, KeywordType, nil},\n-\t\t},\n-\t\t\"punct\": {\n-\t\t\t{`[;(){}\\[\\]]`, Punctuation, nil},\n-\t\t},\n-\t\t\"operators\": {\n-\t\t\t{`[#=,./%+\\-?]`, Operator, nil},\n-\t\t\t{`(eq|gt|lt|gte|lte|neq|matches)\\b`, Operator, nil},\n-\t\t\t{`(==|<=|<|>=|>|!=)`, Operator, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "9e024107f70fc9213733bc2966d4776a976f0408",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/pkgconfig.go",
      "status": "removed",
      "additions": 0,
      "deletions": 45,
      "changes": 45,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpkgconfig.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpkgconfig.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpkgconfig.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,45 +0,0 @@\n-package p\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Pkgconfig lexer.\n-var Pkgconfig = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"PkgConfig\",\n-\t\tAliases:   []string{\"pkgconfig\"},\n-\t\tFilenames: []string{\"*.pc\"},\n-\t\tMimeTypes: []string{},\n-\t},\n-\tpkgconfigRules,\n-))\n-\n-func pkgconfigRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`#.*$`, CommentSingle, nil},\n-\t\t\t{`^(\\w+)(=)`, ByGroups(NameAttribute, Operator), nil},\n-\t\t\t{`^([\\w.]+)(:)`, ByGroups(NameTag, Punctuation), Push(\"spvalue\")},\n-\t\t\tInclude(\"interp\"),\n-\t\t\t{`[^${}#=:\\n.]+`, Text, nil},\n-\t\t\t{`.`, Text, nil},\n-\t\t},\n-\t\t\"interp\": {\n-\t\t\t{`\\$\\$`, Text, nil},\n-\t\t\t{`\\$\\{`, LiteralStringInterpol, Push(\"curly\")},\n-\t\t},\n-\t\t\"curly\": {\n-\t\t\t{`\\}`, LiteralStringInterpol, Pop(1)},\n-\t\t\t{`\\w+`, NameAttribute, nil},\n-\t\t},\n-\t\t\"spvalue\": {\n-\t\t\tInclude(\"interp\"),\n-\t\t\t{`#.*$`, CommentSingle, Pop(1)},\n-\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t\t{`[^${}#\\n]+`, Text, nil},\n-\t\t\t{`.`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "058c02a89fec62889f3045cea7b28395282c3dce",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/plaintext.go",
      "status": "removed",
      "additions": 0,
      "deletions": 17,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fplaintext.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fplaintext.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fplaintext.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,17 +0,0 @@\n-package p\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-var Plaintext = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"plaintext\",\n-\t\tAliases:   []string{\"text\", \"plain\", \"no-highlight\"},\n-\t\tFilenames: []string{\"*.txt\"},\n-\t\tMimeTypes: []string{\"text/plain\"},\n-\t\tPriority:  0.1,\n-\t},\n-\tinternal.PlaintextRules,\n-))"
    },
    {
      "sha": "324d3feb2aee5faa82b92db0b2d26a8a7d6141f9",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/plsql.go",
      "status": "removed",
      "additions": 0,
      "deletions": 62,
      "changes": 62,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fplsql.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fplsql.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fplsql.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,62 +0,0 @@\n-package p\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Pl/Pgsql lexer.\n-var PLpgSQL = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"PL/pgSQL\",\n-\t\tAliases:         []string{\"plpgsql\"},\n-\t\tFilenames:       []string{},\n-\t\tMimeTypes:       []string{\"text/x-plpgsql\"},\n-\t\tNotMultiline:    true,\n-\t\tCaseInsensitive: true,\n-\t},\n-\tplpgSQLRules,\n-))\n-\n-func plpgSQLRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\%[a-z]\\w*\\b`, NameBuiltin, nil},\n-\t\t\t{`:=`, Operator, nil},\n-\t\t\t{`\\<\\<[a-z]\\w*\\>\\>`, NameLabel, nil},\n-\t\t\t{`\\#[a-z]\\w*\\b`, KeywordPseudo, nil},\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t\t{`--.*\\n?`, CommentSingle, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"multiline-comments\")},\n-\t\t\t{`(bigint|bigserial|bit|bit\\s+varying|bool|boolean|box|bytea|char|character|character\\s+varying|cidr|circle|date|decimal|double\\s+precision|float4|float8|inet|int|int2|int4|int8|integer|interval|json|jsonb|line|lseg|macaddr|money|numeric|path|pg_lsn|point|polygon|real|serial|serial2|serial4|serial8|smallint|smallserial|text|time|timestamp|timestamptz|timetz|tsquery|tsvector|txid_snapshot|uuid|varbit|varchar|with\\s+time\\s+zone|without\\s+time\\s+zone|xml|anyarray|anyelement|anyenum|anynonarray|anyrange|cstring|fdw_handler|internal|language_handler|opaque|record|void)\\b`, NameBuiltin, nil},\n-\t\t\t{Words(``, `\\b`, `ABORT`, `ABSOLUTE`, `ACCESS`, `ACTION`, `ADD`, `ADMIN`, `AFTER`, `AGGREGATE`, `ALL`, `ALSO`, `ALTER`, `ALWAYS`, `ANALYSE`, `ANALYZE`, `AND`, `ANY`, `ARRAY`, `AS`, `ASC`, `ASSERTION`, `ASSIGNMENT`, `ASYMMETRIC`, `AT`, `ATTRIBUTE`, `AUTHORIZATION`, `BACKWARD`, `BEFORE`, `BEGIN`, `BETWEEN`, `BIGINT`, `BINARY`, `BIT`, `BOOLEAN`, `BOTH`, `BY`, `CACHE`, `CALLED`, `CASCADE`, `CASCADED`, `CASE`, `CAST`, `CATALOG`, `CHAIN`, `CHAR`, `CHARACTER`, `CHARACTERISTICS`, `CHECK`, `CHECKPOINT`, `CLASS`, `CLOSE`, `CLUSTER`, `COALESCE`, `COLLATE`, `COLLATION`, `COLUMN`, `COMMENT`, `COMMENTS`, `COMMIT`, `COMMITTED`, `CONCURRENTLY`, `CONFIGURATION`, `CONNECTION`, `CONSTRAINT`, `CONSTRAINTS`, `CONTENT`, `CONTINUE`, `CONVERSION`, `COPY`, `COST`, `CREATE`, `CROSS`, `CSV`, `CURRENT`, `CURRENT_CATALOG`, `CURRENT_DATE`, `CURRENT_ROLE`, `CURRENT_SCHEMA`, `CURRENT_TIME`, `CURRENT_TIMESTAMP`, `CURRENT_USER`, `CURSOR`, `CYCLE`, `DATA`, `DATABASE`, `DAY`, `DEALLOCATE`, `DEC`, `DECIMAL`, `DECLARE`, `DEFAULT`, `DEFAULTS`, `DEFERRABLE`, `DEFERRED`, `DEFINER`, `DELETE`, `DELIMITER`, `DELIMITERS`, `DESC`, `DICTIONARY`, `DISABLE`, `DISCARD`, `DISTINCT`, `DO`, `DOCUMENT`, `DOMAIN`, `DOUBLE`, `DROP`, `EACH`, `ELSE`, `ENABLE`, `ENCODING`, `ENCRYPTED`, `END`, `ENUM`, `ESCAPE`, `EVENT`, `EXCEPT`, `EXCLUDE`, `EXCLUDING`, `EXCLUSIVE`, `EXECUTE`, `EXISTS`, `EXPLAIN`, `EXTENSION`, `EXTERNAL`, `EXTRACT`, `FALSE`, `FAMILY`, `FETCH`, `FILTER`, `FIRST`, `FLOAT`, `FOLLOWING`, `FOR`, `FORCE`, `FOREIGN`, `FORWARD`, `FREEZE`, `FROM`, `FULL`, `FUNCTION`, `FUNCTIONS`, `GLOBAL`, `GRANT`, `GRANTED`, `GREATEST`, `GROUP`, `HANDLER`, `HAVING`, `HEADER`, `HOLD`, `HOUR`, `IDENTITY`, `IF`, `ILIKE`, `IMMEDIATE`, `IMMUTABLE`, `IMPLICIT`, `IN`, `INCLUDING`, `INCREMENT`, `INDEX`, `INDEXES`, `INHERIT`, `INHERITS`, `INITIALLY`, `INLINE`, `INNER`, `INOUT`, `INPUT`, `INSENSITIVE`, `INSERT`, `INSTEAD`, `INT`, `INTEGER`, `INTERSECT`, `INTERVAL`, `INTO`, `INVOKER`, `IS`, `ISNULL`, `ISOLATION`, `JOIN`, `KEY`, `LABEL`, `LANGUAGE`, `LARGE`, `LAST`, `LATERAL`, `LC_COLLATE`, `LC_CTYPE`, `LEADING`, `LEAKPROOF`, `LEAST`, `LEFT`, `LEVEL`, `LIKE`, `LIMIT`, `LISTEN`, `LOAD`, `LOCAL`, `LOCALTIME`, `LOCALTIMESTAMP`, `LOCATION`, `LOCK`, `MAPPING`, `MATCH`, `MATERIALIZED`, `MAXVALUE`, `MINUTE`, `MINVALUE`, `MODE`, `MONTH`, `MOVE`, `NAME`, `NAMES`, `NATIONAL`, `NATURAL`, `NCHAR`, `NEXT`, `NO`, `NONE`, `NOT`, `NOTHING`, `NOTIFY`, `NOTNULL`, `NOWAIT`, `NULL`, `NULLIF`, `NULLS`, `NUMERIC`, `OBJECT`, `OF`, `OFF`, `OFFSET`, `OIDS`, `ON`, `ONLY`, `OPERATOR`, `OPTION`, `OPTIONS`, `OR`, `ORDER`, `ORDINALITY`, `OUT`, `OUTER`, `OVER`, `OVERLAPS`, `OVERLAY`, `OWNED`, `OWNER`, `PARSER`, `PARTIAL`, `PARTITION`, `PASSING`, `PASSWORD`, `PLACING`, `PLANS`, `POLICY`, `POSITION`, `PRECEDING`, `PRECISION`, `PREPARE`, `PREPARED`, `PRESERVE`, `PRIMARY`, `PRIOR`, `PRIVILEGES`, `PROCEDURAL`, `PROCEDURE`, `PROGRAM`, `QUOTE`, `RANGE`, `READ`, `REAL`, `REASSIGN`, `RECHECK`, `RECURSIVE`, `REF`, `REFERENCES`, `REFRESH`, `REINDEX`, `RELATIVE`, `RELEASE`, `RENAME`, `REPEATABLE`, `REPLACE`, `REPLICA`, `RESET`, `RESTART`, `RESTRICT`, `RETURNING`, `RETURNS`, `REVOKE`, `RIGHT`, `ROLE`, `ROLLBACK`, `ROW`, `ROWS`, `RULE`, `SAVEPOINT`, `SCHEMA`, `SCROLL`, `SEARCH`, `SECOND`, `SECURITY`, `SELECT`, `SEQUENCE`, `SEQUENCES`, `SERIALIZABLE`, `SERVER`, `SESSION`, `SESSION_USER`, `SET`, `SETOF`, `SHARE`, `SHOW`, `SIMILAR`, `SIMPLE`, `SMALLINT`, `SNAPSHOT`, `SOME`, `STABLE`, `STANDALONE`, `START`, `STATEMENT`, `STATISTICS`, `STDIN`, `STDOUT`, `STORAGE`, `STRICT`, `STRIP`, `SUBSTRING`, `SYMMETRIC`, `SYSID`, `SYSTEM`, `TABLE`, `TABLES`, `TABLESPACE`, `TEMP`, `TEMPLATE`, `TEMPORARY`, `TEXT`, `THEN`, `TIME`, `TIMESTAMP`, `TO`, `TRAILING`, `TRANSACTION`, `TREAT`, `TRIGGER`, `TRIM`, `TRUE`, `TRUNCATE`, `TRUSTED`, `TYPE`, `TYPES`, `UNBOUNDED`, `UNCOMMITTED`, `UNENCRYPTED`, `UNION`, `UNIQUE`, `UNKNOWN`, `UNLISTEN`, `UNLOGGED`, `UNTIL`, `UPDATE`, `USER`, `USING`, `VACUUM`, `VALID`, `VALIDATE`, `VALIDATOR`, `VALUE`, `VALUES`, `VARCHAR`, `VARIADIC`, `VARYING`, `VERBOSE`, `VERSION`, `VIEW`, `VIEWS`, `VOLATILE`, `WHEN`, `WHERE`, `WHITESPACE`, `WINDOW`, `WITH`, `WITHIN`, `WITHOUT`, `WORK`, `WRAPPER`, `WRITE`, `XML`, `XMLATTRIBUTES`, `XMLCONCAT`, `XMLELEMENT`, `XMLEXISTS`, `XMLFOREST`, `XMLPARSE`, `XMLPI`, `XMLROOT`, `XMLSERIALIZE`, `YEAR`, `YES`, `ZONE`, `ALIAS`, `CONSTANT`, `DIAGNOSTICS`, `ELSIF`, `EXCEPTION`, `EXIT`, `FOREACH`, `GET`, `LOOP`, `NOTICE`, `OPEN`, `PERFORM`, `QUERY`, `RAISE`, `RETURN`, `REVERSE`, `SQLSTATE`, `WHILE`), Keyword, nil},\n-\t\t\t{\"[+*/<>=~!@#%^&|`?-]+\", Operator, nil},\n-\t\t\t{`::`, Operator, nil},\n-\t\t\t{`\\$\\d+`, NameVariable, nil},\n-\t\t\t{`([0-9]*\\.[0-9]*|[0-9]+)(e[+-]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`((?:E|U&)?)(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Push(\"string\")},\n-\t\t\t{`((?:U&)?)(\")`, ByGroups(LiteralStringAffix, LiteralStringName), Push(\"quoted-ident\")},\n-\t\t\t// { `(?s)(\\$)([^$]*)(\\$)(.*?)(\\$)(\\2)(\\$)`, ?? <function language_callback at 0x108964400> ??, nil },\n-\t\t\t{`[a-z_]\\w*`, Name, nil},\n-\t\t\t{`:(['\"]?)[a-z]\\w*\\b\\1`, NameVariable, nil},\n-\t\t\t{`[;:()\\[\\]{},.]`, Punctuation, nil},\n-\t\t},\n-\t\t\"multiline-comments\": {\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"multiline-comments\")},\n-\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n-\t\t\t{`[^/*]+`, CommentMultiline, nil},\n-\t\t\t{`[/*]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`[^']+`, LiteralStringSingle, nil},\n-\t\t\t{`''`, LiteralStringSingle, nil},\n-\t\t\t{`'`, LiteralStringSingle, Pop(1)},\n-\t\t},\n-\t\t\"quoted-ident\": {\n-\t\t\t{`[^\"]+`, LiteralStringName, nil},\n-\t\t\t{`\"\"`, LiteralStringName, nil},\n-\t\t\t{`\"`, LiteralStringName, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "b2ad4e108a5d0d978cbf14a3c9e3c0d3f0a0bdd1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/plutus_core.go",
      "status": "removed",
      "additions": 0,
      "deletions": 76,
      "changes": 76,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fplutus_core.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fplutus_core.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fplutus_core.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,76 +0,0 @@\n-package p\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// nolint\n-\n-// Lexer for the Plutus Core Languages (version 2.1)\n-//\n-// including both Typed- and Untyped- versions\n-// based on “Formal Specification of the Plutus Core Language (version 2.1)”, published 6th April 2021:\n-// https://hydra.iohk.io/build/8205579/download/1/plutus-core-specification.pdf\n-\n-var PlutusCoreLang = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Plutus Core\",\n-\t\tAliases:   []string{\"plutus-core\", \"plc\"},\n-\t\tFilenames: []string{\"*.plc\"},\n-\t\tMimeTypes: []string{\"text/x-plutus-core\", \"application/x-plutus-core\"},\n-\t},\n-\tplutusCoreRules,\n-))\n-\n-func plutusCoreRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`(\\(|\\))`, Punctuation, nil},\n-\t\t\t{`(\\[|\\])`, Punctuation, nil},\n-\t\t\t{`({|})`, Punctuation, nil},\n-\n-\t\t\t// Constants. Figure 1.\n-\t\t\t// For version, see handling of (program ...) below.\n-\t\t\t{`([+-]?\\d+)`, LiteralNumberInteger, nil},\n-\t\t\t{`(#([a-fA-F0-9][a-fA-F0-9])+)`, LiteralString, nil},\n-\t\t\t{`(\\(\\))`, NameConstant, nil},\n-\t\t\t{`(True|False)`, NameConstant, nil},\n-\n-\t\t\t// Keywords. Figures 2 and 15.\n-\t\t\t// Special handling for program because it is followed by a version.\n-\t\t\t{`(con |abs |iwrap |unwrap |lam |builtin |delay |force |error)`, Keyword, nil},\n-\t\t\t{`(fun |all |ifix |lam |con )`, Keyword, nil},\n-\t\t\t{`(type|fun )`, Keyword, nil},\n-\t\t\t{`(program )(\\S+)`, ByGroups(Keyword, LiteralString), nil},\n-\n-\t\t\t// Built-in Types. Figure 12.\n-\t\t\t{`(unit|bool|integer|bytestring|string)`, KeywordType, nil},\n-\n-\t\t\t// Built-ins Functions. Figure 14 but, more importantly, implementation:\n-\t\t\t// https://github.com/input-output-hk/plutus/blob/6d759c4/plutus-core/plutus-core/src/PlutusCore/Default/Builtins.hs#L42-L111\n-\t\t\t{`(addInteger |subtractInteger |multiplyInteger |divideInteger |quotientInteger |remainderInteger |modInteger |equalsInteger |lessThanInteger |lessThanEqualsInteger )`, NameBuiltin, nil},\n-\t\t\t{`(appendByteString |consByteString |sliceByteString |lengthOfByteString |indexByteString |equalsByteString |lessThanByteString |lessThanEqualsByteString )`, NameBuiltin, nil},\n-\t\t\t{`(sha2_256 |sha3_256 |blake2b_256 |verifySignature )`, NameBuiltin, nil},\n-\t\t\t{`(appendString |equalsString |encodeUtf8 |decodeUtf8 )`, NameBuiltin, nil},\n-\t\t\t{`(ifThenElse )`, NameBuiltin, nil},\n-\t\t\t{`(chooseUnit )`, NameBuiltin, nil},\n-\t\t\t{`(trace )`, NameBuiltin, nil},\n-\t\t\t{`(fstPair |sndPair )`, NameBuiltin, nil},\n-\t\t\t{`(chooseList |mkCons |headList |tailList |nullList )`, NameBuiltin, nil},\n-\t\t\t{`(chooseData |constrData |mapData |listData |iData |bData |unConstrData |unMapData |unListData |unIData |unBData |equalsData )`, NameBuiltin, nil},\n-\t\t\t{`(mkPairData |mkNilData |mkNilPairData )`, NameBuiltin, nil},\n-\n-\t\t\t// Name. Figure 1.\n-\t\t\t{`([a-zA-Z][a-zA-Z0-9_']*)`, Name, nil},\n-\n-\t\t\t// Unicode String. Not in the specification.\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`[^\\\\\"]+`, LiteralStringDouble, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "41d568289a342fc8cce13e24c9c8b01dc0dea186",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/pony.go",
      "status": "removed",
      "additions": 0,
      "deletions": 63,
      "changes": 63,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpony.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpony.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpony.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,63 +0,0 @@\n-package p\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Pony lexer.\n-var Pony = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Pony\",\n-\t\tAliases:   []string{\"pony\"},\n-\t\tFilenames: []string{\"*.pony\"},\n-\t\tMimeTypes: []string{},\n-\t},\n-\tponyRules,\n-))\n-\n-func ponyRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`//.*\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"nested_comment\")},\n-\t\t\t{`\"\"\"(?:.|\\n)*?\"\"\"`, LiteralStringDoc, nil},\n-\t\t\t{`\"`, LiteralString, Push(\"string\")},\n-\t\t\t{`\\'.*\\'`, LiteralStringChar, nil},\n-\t\t\t{`=>|[]{}:().~;,|&!^?[]`, Punctuation, nil},\n-\t\t\t{Words(``, `\\b`, `addressof`, `and`, `as`, `consume`, `digestof`, `is`, `isnt`, `not`, `or`), OperatorWord, nil},\n-\t\t\t{`!=|==|<<|>>|[-+/*%=<>]`, Operator, nil},\n-\t\t\t{Words(``, `\\b`, `box`, `break`, `compile_error`, `compile_intrinsic`, `continue`, `do`, `else`, `elseif`, `embed`, `end`, `error`, `for`, `if`, `ifdef`, `in`, `iso`, `lambda`, `let`, `match`, `object`, `recover`, `ref`, `repeat`, `return`, `tag`, `then`, `this`, `trn`, `try`, `until`, `use`, `var`, `val`, `where`, `while`, `with`, `#any`, `#read`, `#send`, `#share`), Keyword, nil},\n-\t\t\t{`(actor|class|struct|primitive|interface|trait|type)((?:\\s)+)`, ByGroups(Keyword, Text), Push(\"typename\")},\n-\t\t\t{`(new|fun|be)((?:\\s)+)`, ByGroups(Keyword, Text), Push(\"methodname\")},\n-\t\t\t{Words(``, `\\b`, `U8`, `U16`, `U32`, `U64`, `ULong`, `USize`, `U128`, `Unsigned`, `Stringable`, `String`, `StringBytes`, `StringRunes`, `InputNotify`, `InputStream`, `Stdin`, `ByteSeq`, `ByteSeqIter`, `OutStream`, `StdStream`, `SourceLoc`, `I8`, `I16`, `I32`, `I64`, `ILong`, `ISize`, `I128`, `Signed`, `Seq`, `RuntimeOptions`, `Real`, `Integer`, `SignedInteger`, `UnsignedInteger`, `FloatingPoint`, `Number`, `Int`, `ReadSeq`, `ReadElement`, `Pointer`, `Platform`, `NullablePointer`, `None`, `Iterator`, `F32`, `F64`, `Float`, `Env`, `DoNotOptimise`, `DisposableActor`, `Less`, `Equal`, `Greater`, `Compare`, `HasEq`, `Equatable`, `Comparable`, `Bool`, `AsioEventID`, `AsioEventNotify`, `AsioEvent`, `Array`, `ArrayKeys`, `ArrayValues`, `ArrayPairs`, `Any`, `AmbientAuth`), KeywordType, nil},\n-\t\t\t{`_?[A-Z]\\w*`, NameClass, nil},\n-\t\t\t{`string\\(\\)`, NameOther, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+)[eE][+-]?\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`0x[0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`(true|false)\\b`, Keyword, nil},\n-\t\t\t{`_\\d*`, Name, nil},\n-\t\t\t{`_?[a-z][\\w\\'_]*`, Name, nil},\n-\t\t},\n-\t\t\"typename\": {\n-\t\t\t{`(iso|trn|ref|val|box|tag)?((?:\\s)*)(_?[A-Z]\\w*)`, ByGroups(Keyword, Text, NameClass), Pop(1)},\n-\t\t},\n-\t\t\"methodname\": {\n-\t\t\t{`(iso|trn|ref|val|box|tag)?((?:\\s)*)(_?[a-z]\\w*)`, ByGroups(Keyword, Text, NameFunction), Pop(1)},\n-\t\t},\n-\t\t\"nested_comment\": {\n-\t\t\t{`[^*/]+`, CommentMultiline, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push()},\n-\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n-\t\t\t{`[*/]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`\\\\\"`, LiteralString, nil},\n-\t\t\t{`[^\\\\\"]+`, LiteralString, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "0b51ba5ef3944a180f29e2ba3c95c5a9c6c2d743",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/postscript.go",
      "status": "removed",
      "additions": 0,
      "deletions": 50,
      "changes": 50,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpostscript.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpostscript.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpostscript.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,50 +0,0 @@\n-package p\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Postscript lexer.\n-var Postscript = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"PostScript\",\n-\t\tAliases:   []string{\"postscript\", \"postscr\"},\n-\t\tFilenames: []string{\"*.ps\", \"*.eps\"},\n-\t\tMimeTypes: []string{\"application/postscript\"},\n-\t},\n-\tpostscriptRules,\n-))\n-\n-func postscriptRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`^%!.+\\n`, CommentPreproc, nil},\n-\t\t\t{`%%.*\\n`, CommentSpecial, nil},\n-\t\t\t{`(^%.*\\n){2,}`, CommentMultiline, nil},\n-\t\t\t{`%.*\\n`, CommentSingle, nil},\n-\t\t\t{`\\(`, LiteralString, Push(\"stringliteral\")},\n-\t\t\t{`[{}<>\\[\\]]`, Punctuation, nil},\n-\t\t\t{`<[0-9A-Fa-f]+>(?=[()<>\\[\\]{}/%\\s])`, LiteralNumberHex, nil},\n-\t\t\t{`[0-9]+\\#(\\-|\\+)?([0-9]+\\.?|[0-9]*\\.[0-9]+|[0-9]+\\.[0-9]*)((e|E)[0-9]+)?(?=[()<>\\[\\]{}/%\\s])`, LiteralNumberOct, nil},\n-\t\t\t{`(\\-|\\+)?([0-9]+\\.?|[0-9]*\\.[0-9]+|[0-9]+\\.[0-9]*)((e|E)[0-9]+)?(?=[()<>\\[\\]{}/%\\s])`, LiteralNumberFloat, nil},\n-\t\t\t{`(\\-|\\+)?[0-9]+(?=[()<>\\[\\]{}/%\\s])`, LiteralNumberInteger, nil},\n-\t\t\t{`\\/[^()<>\\[\\]{}/%\\s]+(?=[()<>\\[\\]{}/%\\s])`, NameVariable, nil},\n-\t\t\t{`[^()<>\\[\\]{}/%\\s]+(?=[()<>\\[\\]{}/%\\s])`, NameFunction, nil},\n-\t\t\t{`(false|true)(?=[()<>\\[\\]{}/%\\s])`, KeywordConstant, nil},\n-\t\t\t{`(eq|ne|g[et]|l[et]|and|or|not|if(?:else)?|for(?:all)?)(?=[()<>\\[\\]{}/%\\s])`, KeywordReserved, nil},\n-\t\t\t{Words(``, `(?=[()<>\\[\\]{}/%\\s])`, `abs`, `add`, `aload`, `arc`, `arcn`, `array`, `atan`, `begin`, `bind`, `ceiling`, `charpath`, `clip`, `closepath`, `concat`, `concatmatrix`, `copy`, `cos`, `currentlinewidth`, `currentmatrix`, `currentpoint`, `curveto`, `cvi`, `cvs`, `def`, `defaultmatrix`, `dict`, `dictstackoverflow`, `div`, `dtransform`, `dup`, `end`, `exch`, `exec`, `exit`, `exp`, `fill`, `findfont`, `floor`, `get`, `getinterval`, `grestore`, `gsave`, `gt`, `identmatrix`, `idiv`, `idtransform`, `index`, `invertmatrix`, `itransform`, `length`, `lineto`, `ln`, `load`, `log`, `loop`, `matrix`, `mod`, `moveto`, `mul`, `neg`, `newpath`, `pathforall`, `pathbbox`, `pop`, `print`, `pstack`, `put`, `quit`, `rand`, `rangecheck`, `rcurveto`, `repeat`, `restore`, `rlineto`, `rmoveto`, `roll`, `rotate`, `round`, `run`, `save`, `scale`, `scalefont`, `setdash`, `setfont`, `setgray`, `setlinecap`, `setlinejoin`, `setlinewidth`, `setmatrix`, `setrgbcolor`, `shfill`, `show`, `showpage`, `sin`, `sqrt`, `stack`, `stringwidth`, `stroke`, `strokepath`, `sub`, `syntaxerror`, `transform`, `translate`, `truncate`, `typecheck`, `undefined`, `undefinedfilename`, `undefinedresult`), NameBuiltin, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t\t\"stringliteral\": {\n-\t\t\t{`[^()\\\\]+`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralStringEscape, Push(\"escape\")},\n-\t\t\t{`\\(`, LiteralString, Push()},\n-\t\t\t{`\\)`, LiteralString, Pop(1)},\n-\t\t},\n-\t\t\"escape\": {\n-\t\t\t{`[0-8]{3}|n|r|t|b|f|\\\\|\\(|\\)`, LiteralStringEscape, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "2d870f1063a3bec38b68387f58b76ed7fef0bea7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/povray.go",
      "status": "removed",
      "additions": 0,
      "deletions": 39,
      "changes": 39,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpovray.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpovray.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpovray.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,39 +0,0 @@\n-package p\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Povray lexer.\n-var Povray = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"POVRay\",\n-\t\tAliases:   []string{\"pov\"},\n-\t\tFilenames: []string{\"*.pov\", \"*.inc\"},\n-\t\tMimeTypes: []string{\"text/x-povray\"},\n-\t},\n-\tpovrayRules,\n-))\n-\n-func povrayRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`/\\*[\\w\\W]*?\\*/`, CommentMultiline, nil},\n-\t\t\t{`//.*\\n`, CommentSingle, nil},\n-\t\t\t{`(?s)\"(?:\\\\.|[^\"\\\\])+\"`, LiteralStringDouble, nil},\n-\t\t\t{Words(`#`, `\\b`, `break`, `case`, `debug`, `declare`, `default`, `define`, `else`, `elseif`, `end`, `error`, `fclose`, `fopen`, `for`, `if`, `ifdef`, `ifndef`, `include`, `local`, `macro`, `range`, `read`, `render`, `statistics`, `switch`, `undef`, `version`, `warning`, `while`, `write`), CommentPreproc, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `aa_level`, `aa_threshold`, `abs`, `acos`, `acosh`, `adaptive`, `adc_bailout`, `agate`, `agate_turb`, `all`, `alpha`, `ambient`, `ambient_light`, `angle`, `aperture`, `arc_angle`, `area_light`, `asc`, `asin`, `asinh`, `assumed_gamma`, `atan`, `atan2`, `atanh`, `atmosphere`, `atmospheric_attenuation`, `attenuating`, `average`, `background`, `black_hole`, `blue`, `blur_samples`, `bounded_by`, `box_mapping`, `bozo`, `break`, `brick`, `brick_size`, `brightness`, `brilliance`, `bumps`, `bumpy1`, `bumpy2`, `bumpy3`, `bump_map`, `bump_size`, `case`, `caustics`, `ceil`, `checker`, `chr`, `clipped_by`, `clock`, `color`, `color_map`, `colour`, `colour_map`, `component`, `composite`, `concat`, `confidence`, `conic_sweep`, `constant`, `control0`, `control1`, `cos`, `cosh`, `count`, `crackle`, `crand`, `cube`, `cubic_spline`, `cylindrical_mapping`, `debug`, `declare`, `default`, `degrees`, `dents`, `diffuse`, `direction`, `distance`, `distance_maximum`, `div`, `dust`, `dust_type`, `eccentricity`, `else`, `emitting`, `end`, `error`, `error_bound`, `exp`, `exponent`, `fade_distance`, `fade_power`, `falloff`, `falloff_angle`, `false`, `file_exists`, `filter`, `finish`, `fisheye`, `flatness`, `flip`, `floor`, `focal_point`, `fog`, `fog_alt`, `fog_offset`, `fog_type`, `frequency`, `gif`, `global_settings`, `glowing`, `gradient`, `granite`, `gray_threshold`, `green`, `halo`, `hexagon`, `hf_gray_16`, `hierarchy`, `hollow`, `hypercomplex`, `if`, `ifdef`, `iff`, `image_map`, `incidence`, `include`, `int`, `interpolate`, `inverse`, `ior`, `irid`, `irid_wavelength`, `jitter`, `lambda`, `leopard`, `linear`, `linear_spline`, `linear_sweep`, `location`, `log`, `looks_like`, `look_at`, `low_error_factor`, `mandel`, `map_type`, `marble`, `material_map`, `matrix`, `max`, `max_intersections`, `max_iteration`, `max_trace_level`, `max_value`, `metallic`, `min`, `minimum_reuse`, `mod`, `mortar`, `nearest_count`, `no`, `normal`, `normal_map`, `no_shadow`, `number_of_waves`, `octaves`, `off`, `offset`, `omega`, `omnimax`, `on`, `once`, `onion`, `open`, `orthographic`, `panoramic`, `pattern1`, `pattern2`, `pattern3`, `perspective`, `pgm`, `phase`, `phong`, `phong_size`, `pi`, `pigment`, `pigment_map`, `planar_mapping`, `png`, `point_at`, `pot`, `pow`, `ppm`, `precision`, `pwr`, `quadratic_spline`, `quaternion`, `quick_color`, `quick_colour`, `quilted`, `radial`, `radians`, `radiosity`, `radius`, `rainbow`, `ramp_wave`, `rand`, `range`, `reciprocal`, `recursion_limit`, `red`, `reflection`, `refraction`, `render`, `repeat`, `rgb`, `rgbf`, `rgbft`, `rgbt`, `right`, `ripples`, `rotate`, `roughness`, `samples`, `scale`, `scallop_wave`, `scattering`, `seed`, `shadowless`, `sin`, `sine_wave`, `sinh`, `sky`, `sky_sphere`, `slice`, `slope_map`, `smooth`, `specular`, `spherical_mapping`, `spiral`, `spiral1`, `spiral2`, `spotlight`, `spotted`, `sqr`, `sqrt`, `statistics`, `str`, `strcmp`, `strength`, `strlen`, `strlwr`, `strupr`, `sturm`, `substr`, `switch`, `sys`, `t`, `tan`, `tanh`, `test_camera_1`, `test_camera_2`, `test_camera_3`, `test_camera_4`, `texture`, `texture_map`, `tga`, `thickness`, `threshold`, `tightness`, `tile2`, `tiles`, `track`, `transform`, `translate`, `transmit`, `triangle_wave`, `true`, `ttf`, `turbulence`, `turb_depth`, `type`, `ultra_wide_angle`, `up`, `use_color`, `use_colour`, `use_index`, `u_steps`, `val`, `variance`, `vaxis_rotate`, `vcross`, `vdot`, `version`, `vlength`, `vnormalize`, `volume_object`, `volume_rendered`, `vol_with_light`, `vrotate`, `v_steps`, `warning`, `warp`, `water_level`, `waves`, `while`, `width`, `wood`, `wrinkles`, `yes`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `bicubic_patch`, `blob`, `box`, `camera`, `cone`, `cubic`, `cylinder`, `difference`, `disc`, `height_field`, `intersection`, `julia_fractal`, `lathe`, `light_source`, `merge`, `mesh`, `object`, `plane`, `poly`, `polygon`, `prism`, `quadric`, `quartic`, `smooth_triangle`, `sor`, `sphere`, `superellipsoid`, `text`, `torus`, `triangle`, `union`), NameBuiltin, nil},\n-\t\t\t{`[\\[\\](){}<>;,]`, Punctuation, nil},\n-\t\t\t{`[-+*/=]`, Operator, nil},\n-\t\t\t{`\\b(x|y|z|u|v)\\b`, NameBuiltinPseudo, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t\t{`[0-9]+\\.[0-9]*`, LiteralNumberFloat, nil},\n-\t\t\t{`\\.[0-9]+`, LiteralNumberFloat, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "0302420ea94a0aa5f4a536746464babfb913c213",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/powerquery.go",
      "status": "removed",
      "additions": 0,
      "deletions": 38,
      "changes": 38,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpowerquery.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpowerquery.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpowerquery.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,38 +0,0 @@\n-package p\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// PowerQuery lexer.\n-var PowerQuery = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"PowerQuery\",\n-\t\tAliases:         []string{\"powerquery\", \"pq\"},\n-\t\tFilenames:       []string{\"*.pq\"},\n-\t\tMimeTypes:       []string{\"text/x-powerquery\"},\n-\t\tDotAll:          true,\n-\t\tCaseInsensitive: true,\n-\t},\n-\tpowerqueryRules,\n-))\n-\n-func powerqueryRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`(and|as|each|else|error|false|if|in|is|let|meta|not|null|or|otherwise|section|shared|then|true|try|type)\\b`, Keyword, nil},\n-\t\t\t{`(#binary|#date|#datetime|#datetimezone|#duration|#infinity|#nan|#sections|#shared|#table|#time)\\b`, KeywordType, nil},\n-\t\t\t{`(([a-zA-Z]|_)[\\w|._]*|#\"[^\"]+\")`, Name, nil},\n-\t\t\t{`0[xX][0-9a-fA-F][0-9a-fA-F_]*[lL]?`, LiteralNumberHex, nil},\n-\t\t\t{`([0-9]+\\.[0-9]+|\\.[0-9]+)([eE][0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`[\\(\\)\\[\\]\\{\\}]`, Punctuation, nil},\n-\t\t\t{`\\.\\.|\\.\\.\\.|=>|<=|>=|<>|[@!?,;=<>\\+\\-\\*\\/&]`, Operator, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "9b7b56ee020850c01b64ae9642994c80d89b0553",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/powershell.go",
      "status": "removed",
      "additions": 0,
      "deletions": 70,
      "changes": 70,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpowershell.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpowershell.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpowershell.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,70 +0,0 @@\n-package p\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Powershell lexer.\n-var Powershell = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"PowerShell\",\n-\t\tAliases:         []string{\"powershell\", \"posh\", \"ps1\", \"psm1\", \"psd1\"},\n-\t\tFilenames:       []string{\"*.ps1\", \"*.psm1\", \"*.psd1\"},\n-\t\tMimeTypes:       []string{\"text/x-powershell\"},\n-\t\tDotAll:          true,\n-\t\tCaseInsensitive: true,\n-\t},\n-\tpowershellRules,\n-))\n-\n-func powershellRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\(`, Punctuation, Push(\"child\")},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`^(\\s*#[#\\s]*)(\\.(?:component|description|example|externalhelp|forwardhelpcategory|forwardhelptargetname|functionality|inputs|link|notes|outputs|parameter|remotehelprunspace|role|synopsis))([^\\n]*$)`, ByGroups(Comment, LiteralStringDoc, Comment), nil},\n-\t\t\t{`#[^\\n]*?$`, Comment, nil},\n-\t\t\t{`(&lt;|<)#`, CommentMultiline, Push(\"multline\")},\n-\t\t\t{`(?i)([A-Z]:)`, Name, nil},\n-\t\t\t{`@\"\\n`, LiteralStringHeredoc, Push(\"heredoc-double\")},\n-\t\t\t{`@'\\n.*?\\n'@`, LiteralStringHeredoc, nil},\n-\t\t\t{\"`[\\\\'\\\"$@-]\", Punctuation, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n-\t\t\t{`'([^']|'')*'`, LiteralStringSingle, nil},\n-\t\t\t{`(\\$|@@|@)((global|script|private|env):)?\\w+`, NameVariable, nil},\n-\t\t\t{`[a-z]\\w*-[a-z]\\w*\\b`, NameBuiltin, nil},\n-\t\t\t{`(while|validateset|validaterange|validatepattern|validatelength|validatecount|until|trap|switch|return|ref|process|param|parameter|in|if|global:|function|foreach|for|finally|filter|end|elseif|else|dynamicparam|do|default|continue|cmdletbinding|break|begin|alias|\\?|%|#script|#private|#local|#global|mandatory|parametersetname|position|valuefrompipeline|valuefrompipelinebypropertyname|valuefromremainingarguments|helpmessage|try|catch|throw)\\b`, Keyword, nil},\n-\t\t\t{`-(and|as|band|bnot|bor|bxor|casesensitive|ccontains|ceq|cge|cgt|cle|clike|clt|cmatch|cne|cnotcontains|cnotlike|cnotmatch|contains|creplace|eq|exact|f|file|ge|gt|icontains|ieq|ige|igt|ile|ilike|ilt|imatch|ine|inotcontains|inotlike|inotmatch|ireplace|is|isnot|le|like|lt|match|ne|not|notcontains|notlike|notmatch|or|regex|replace|wildcard)\\b`, Operator, nil},\n-\t\t\t{`(ac|asnp|cat|cd|cfs|chdir|clc|clear|clhy|cli|clp|cls|clv|cnsn|compare|copy|cp|cpi|cpp|curl|cvpa|dbp|del|diff|dir|dnsn|ebp|echo|epal|epcsv|epsn|erase|etsn|exsn|fc|fhx|fl|foreach|ft|fw|gal|gbp|gc|gci|gcm|gcs|gdr|ghy|gi|gjb|gl|gm|gmo|gp|gps|gpv|group|gsn|gsnp|gsv|gu|gv|gwmi|h|history|icm|iex|ihy|ii|ipal|ipcsv|ipmo|ipsn|irm|ise|iwmi|iwr|kill|lp|ls|man|md|measure|mi|mount|move|mp|mv|nal|ndr|ni|nmo|npssc|nsn|nv|ogv|oh|popd|ps|pushd|pwd|r|rbp|rcjb|rcsn|rd|rdr|ren|ri|rjb|rm|rmdir|rmo|rni|rnp|rp|rsn|rsnp|rujb|rv|rvpa|rwmi|sajb|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spjb|spps|spsv|start|sujb|sv|swmi|tee|trcm|type|wget|where|wjb|write)\\s`, NameBuiltin, nil},\n-\t\t\t{\"\\\\[[a-z_\\\\[][\\\\w. `,\\\\[\\\\]]*\\\\]\", NameConstant, nil},\n-\t\t\t{`-[a-z_]\\w*`, Name, nil},\n-\t\t\t{`\\w+`, Name, nil},\n-\t\t\t{\"[.,;@{}\\\\[\\\\]$()=+*/\\\\\\\\&%!~?^`|<>-]|::\", Punctuation, nil},\n-\t\t},\n-\t\t\"child\": {\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"multline\": {\n-\t\t\t{`[^#&.]+`, CommentMultiline, nil},\n-\t\t\t{`#(>|&gt;)`, CommentMultiline, Pop(1)},\n-\t\t\t{`\\.(component|description|example|externalhelp|forwardhelpcategory|forwardhelptargetname|functionality|inputs|link|notes|outputs|parameter|remotehelprunspace|role|synopsis)`, LiteralStringDoc, nil},\n-\t\t\t{`[#&.]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{\"`[0abfnrtv'\\\\\\\"$`]\", LiteralStringEscape, nil},\n-\t\t\t{\"[^$`\\\"]+\", LiteralStringDouble, nil},\n-\t\t\t{`\\$\\(`, Punctuation, Push(\"child\")},\n-\t\t\t{`\"\"`, LiteralStringDouble, nil},\n-\t\t\t{\"[`$]\", LiteralStringDouble, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t},\n-\t\t\"heredoc-double\": {\n-\t\t\t{`\\n\"@`, LiteralStringHeredoc, Pop(1)},\n-\t\t\t{`\\$\\(`, Punctuation, Push(\"child\")},\n-\t\t\t{`[^@\\n]+\"]`, LiteralStringHeredoc, nil},\n-\t\t\t{`.`, LiteralStringHeredoc, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "a2f346b6263f45de9dc27d1fcef79f59c72688d1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/prolog.go",
      "status": "removed",
      "additions": 0,
      "deletions": 54,
      "changes": 54,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fprolog.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fprolog.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fprolog.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,54 +0,0 @@\n-package p\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Prolog lexer.\n-var Prolog = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Prolog\",\n-\t\tAliases:   []string{\"prolog\"},\n-\t\tFilenames: []string{\"*.ecl\", \"*.prolog\", \"*.pro\", \"*.pl\"},\n-\t\tMimeTypes: []string{\"text/x-prolog\"},\n-\t},\n-\tprologRules,\n-))\n-\n-func prologRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"nested-comment\")},\n-\t\t\t{`%.*`, CommentSingle, nil},\n-\t\t\t{`0\\'.`, LiteralStringChar, nil},\n-\t\t\t{`0b[01]+`, LiteralNumberBin, nil},\n-\t\t\t{`0o[0-7]+`, LiteralNumberOct, nil},\n-\t\t\t{`0x[0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`\\d\\d?\\'[a-zA-Z0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\d*\\.\\d+)([eE][+-]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`[\\[\\](){}|.,;!]`, Punctuation, nil},\n-\t\t\t{`:-|-->`, Punctuation, nil},\n-\t\t\t{`\"(?:\\\\x[0-9a-fA-F]+\\\\|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}|\\\\[0-7]+\\\\|\\\\[\"\\nabcefnrstv]|[^\\\\\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`'(?:''|[^'])*'`, LiteralStringAtom, nil},\n-\t\t\t{`is\\b`, Operator, nil},\n-\t\t\t{`(<|>|=<|>=|==|=:=|=|/|//|\\*|\\+|-)(?=\\s|[a-zA-Z0-9\\[])`, Operator, nil},\n-\t\t\t{`(mod|div|not)\\b`, Operator, nil},\n-\t\t\t{`_`, Keyword, nil},\n-\t\t\t{`([a-z]+)(:)`, ByGroups(NameNamespace, Punctuation), nil},\n-\t\t\t{`([a-zÀ-῿぀-퟿-￯][\\w$À-῿぀-퟿-￯]*)(\\s*)(:-|-->)`, ByGroups(NameFunction, Text, Operator), nil},\n-\t\t\t{`([a-zÀ-῿぀-퟿-￯][\\w$À-῿぀-퟿-￯]*)(\\s*)(\\()`, ByGroups(NameFunction, Text, Punctuation), nil},\n-\t\t\t{`[a-zÀ-῿぀-퟿-￯][\\w$À-῿぀-퟿-￯]*`, LiteralStringAtom, nil},\n-\t\t\t{`[#&*+\\-./:<=>?@\\\\^~¡-¿‐-〿]+`, LiteralStringAtom, nil},\n-\t\t\t{`[A-Z_]\\w*`, NameVariable, nil},\n-\t\t\t{`\\s+|[ -‏￰-￾￯]`, Text, nil},\n-\t\t},\n-\t\t\"nested-comment\": {\n-\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n-\t\t\t{`/\\*`, CommentMultiline, Push()},\n-\t\t\t{`[^*/]+`, CommentMultiline, nil},\n-\t\t\t{`[*/]`, CommentMultiline, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "e80b926c2edb0887ddd46a8b1d43984ea50c7363",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/promql.go",
      "status": "removed",
      "additions": 0,
      "deletions": 59,
      "changes": 59,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpromql.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpromql.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpromql.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,59 +0,0 @@\n-package p\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Promql lexer.\n-var Promql = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"PromQL\",\n-\t\tAliases:   []string{\"promql\"},\n-\t\tFilenames: []string{\"*.promql\"},\n-\t\tMimeTypes: []string{},\n-\t},\n-\tpromqlRules,\n-))\n-\n-func promqlRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, TextWhitespace, nil},\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t\t{`,`, Punctuation, nil},\n-\t\t\t{Words(``, `\\b`, `bool`, `by`, `group_left`, `group_right`, `ignoring`, `offset`, `on`, `without`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `sum`, `min`, `max`, `avg`, `group`, `stddev`, `stdvar`, `count`, `count_values`, `bottomk`, `topk`, `quantile`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `abs`, `absent`, `absent_over_time`, `avg_over_time`, `ceil`, `changes`, `clamp_max`, `clamp_min`, `count_over_time`, `day_of_month`, `day_of_week`, `days_in_month`, `delta`, `deriv`, `exp`, `floor`, `histogram_quantile`, `holt_winters`, `hour`, `idelta`, `increase`, `irate`, `label_join`, `label_replace`, `ln`, `log10`, `log2`, `max_over_time`, `min_over_time`, `minute`, `month`, `predict_linear`, `quantile_over_time`, `rate`, `resets`, `round`, `scalar`, `sort`, `sort_desc`, `sqrt`, `stddev_over_time`, `stdvar_over_time`, `sum_over_time`, `time`, `timestamp`, `vector`, `year`), KeywordReserved, nil},\n-\t\t\t{`[1-9][0-9]*[smhdwy]`, LiteralString, nil},\n-\t\t\t{`-?[0-9]+\\.[0-9]+`, LiteralNumberFloat, nil},\n-\t\t\t{`-?[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`#.*?$`, CommentSingle, nil},\n-\t\t\t{`(\\+|\\-|\\*|\\/|\\%|\\^)`, Operator, nil},\n-\t\t\t{`==|!=|>=|<=|<|>`, Operator, nil},\n-\t\t\t{`and|or|unless`, OperatorWord, nil},\n-\t\t\t{`[_a-zA-Z][a-zA-Z0-9_]+`, NameVariable, nil},\n-\t\t\t{`([\"\\'])(.*?)([\"\\'])`, ByGroups(Punctuation, LiteralString, Punctuation), nil},\n-\t\t\t{`\\(`, Operator, Push(\"function\")},\n-\t\t\t{`\\)`, Operator, nil},\n-\t\t\t{`\\{`, Punctuation, Push(\"labels\")},\n-\t\t\t{`\\[`, Punctuation, Push(\"range\")},\n-\t\t},\n-\t\t\"labels\": {\n-\t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t\t{`\\n`, TextWhitespace, nil},\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t\t{`,`, Punctuation, nil},\n-\t\t\t{`([_a-zA-Z][a-zA-Z0-9_]*?)(\\s*?)(=~|!=|=|!~)(\\s*?)(\"|')(.*?)(\"|')`, ByGroups(NameLabel, TextWhitespace, Operator, TextWhitespace, Punctuation, LiteralString, Punctuation), nil},\n-\t\t},\n-\t\t\"range\": {\n-\t\t\t{`\\]`, Punctuation, Pop(1)},\n-\t\t\t{`[1-9][0-9]*[smhdwy]`, LiteralString, nil},\n-\t\t},\n-\t\t\"function\": {\n-\t\t\t{`\\)`, Operator, Pop(1)},\n-\t\t\t{`\\(`, Operator, Push()},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "76576cb3501df57abbaaa4dad2acda6ce1d2a32b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/protobuf.go",
      "status": "removed",
      "additions": 0,
      "deletions": 57,
      "changes": 57,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fprotobuf.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fprotobuf.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fprotobuf.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,57 +0,0 @@\n-package p\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// ProtocolBuffer lexer.\n-var ProtocolBuffer = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Protocol Buffer\",\n-\t\tAliases:   []string{\"protobuf\", \"proto\"},\n-\t\tFilenames: []string{\"*.proto\"},\n-\t\tMimeTypes: []string{},\n-\t},\n-\tprotocolBufferRules,\n-))\n-\n-func protocolBufferRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[ \\t]+`, Text, nil},\n-\t\t\t{`[,;{}\\[\\]()<>]`, Punctuation, nil},\n-\t\t\t{`/(\\\\\\n)?/(\\n|(.|\\n)*?[^\\\\]\\n)`, CommentSingle, nil},\n-\t\t\t{`/(\\\\\\n)?\\*(.|\\n)*?\\*(\\\\\\n)?/`, CommentMultiline, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `import`, `option`, `optional`, `required`, `repeated`, `default`, `packed`, `ctype`, `extensions`, `to`, `max`, `rpc`, `returns`, `oneof`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `int32`, `int64`, `uint32`, `uint64`, `sint32`, `sint64`, `fixed32`, `fixed64`, `sfixed32`, `sfixed64`, `float`, `double`, `bool`, `string`, `bytes`), KeywordType, nil},\n-\t\t\t{`(true|false)\\b`, KeywordConstant, nil},\n-\t\t\t{`(package)(\\s+)`, ByGroups(KeywordNamespace, Text), Push(\"package\")},\n-\t\t\t{`(message|extend)(\\s+)`, ByGroups(KeywordDeclaration, Text), Push(\"message\")},\n-\t\t\t{`(enum|group|service)(\\s+)`, ByGroups(KeywordDeclaration, Text), Push(\"type\")},\n-\t\t\t{`\\\".*?\\\"`, LiteralString, nil},\n-\t\t\t{`\\'.*?\\'`, LiteralString, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+)[eE][+-]?\\d+[LlUu]*`, LiteralNumberFloat, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+[fF])[fF]?`, LiteralNumberFloat, nil},\n-\t\t\t{`(\\-?(inf|nan))\\b`, LiteralNumberFloat, nil},\n-\t\t\t{`0x[0-9a-fA-F]+[LlUu]*`, LiteralNumberHex, nil},\n-\t\t\t{`0[0-7]+[LlUu]*`, LiteralNumberOct, nil},\n-\t\t\t{`\\d+[LlUu]*`, LiteralNumberInteger, nil},\n-\t\t\t{`[+-=]`, Operator, nil},\n-\t\t\t{`([a-zA-Z_][\\w.]*)([ \\t]*)(=)`, ByGroups(Name, Text, Operator), nil},\n-\t\t\t{`[a-zA-Z_][\\w.]*`, Name, nil},\n-\t\t},\n-\t\t\"package\": {\n-\t\t\t{`[a-zA-Z_]\\w*`, NameNamespace, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"message\": {\n-\t\t\t{`[a-zA-Z_]\\w*`, NameClass, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"type\": {\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "b32caed09be9f070857898baef0e264e1225eaee",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/puppet.go",
      "status": "removed",
      "additions": 0,
      "deletions": 60,
      "changes": 60,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpuppet.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpuppet.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpuppet.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,60 +0,0 @@\n-package p\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Puppet lexer.\n-var Puppet = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Puppet\",\n-\t\tAliases:   []string{\"puppet\"},\n-\t\tFilenames: []string{\"*.pp\"},\n-\t\tMimeTypes: []string{},\n-\t},\n-\tpuppetRules,\n-))\n-\n-func puppetRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"comments\"),\n-\t\t\tInclude(\"keywords\"),\n-\t\t\tInclude(\"names\"),\n-\t\t\tInclude(\"numbers\"),\n-\t\t\tInclude(\"operators\"),\n-\t\t\tInclude(\"strings\"),\n-\t\t\t{`[]{}:(),;[]`, Punctuation, nil},\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t},\n-\t\t\"comments\": {\n-\t\t\t{`\\s*#.*$`, Comment, nil},\n-\t\t\t{`/(\\\\\\n)?[*](.|\\n)*?[*](\\\\\\n)?/`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"operators\": {\n-\t\t\t{`(=>|\\?|<|>|=|\\+|-|/|\\*|~|!|\\|)`, Operator, nil},\n-\t\t\t{`(in|and|or|not)\\b`, OperatorWord, nil},\n-\t\t},\n-\t\t\"names\": {\n-\t\t\t{`[a-zA-Z_]\\w*`, NameAttribute, nil},\n-\t\t\t{`(\\$\\S+)(\\[)(\\S+)(\\])`, ByGroups(NameVariable, Punctuation, LiteralString, Punctuation), nil},\n-\t\t\t{`\\$\\S+`, NameVariable, nil},\n-\t\t},\n-\t\t\"numbers\": {\n-\t\t\t{`(\\d+\\.\\d*|\\d*\\.\\d+)([eE][+-]?[0-9]+)?j?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+[eE][+-]?[0-9]+j?`, LiteralNumberFloat, nil},\n-\t\t\t{`0[0-7]+j?`, LiteralNumberOct, nil},\n-\t\t\t{`0[xX][a-fA-F0-9]+`, LiteralNumberHex, nil},\n-\t\t\t{`\\d+L`, LiteralNumberIntegerLong, nil},\n-\t\t\t{`\\d+j?`, LiteralNumberInteger, nil},\n-\t\t},\n-\t\t\"keywords\": {\n-\t\t\t{Words(`(?i)`, `\\b`, `absent`, `alert`, `alias`, `audit`, `augeas`, `before`, `case`, `check`, `class`, `computer`, `configured`, `contained`, `create_resources`, `crit`, `cron`, `debug`, `default`, `define`, `defined`, `directory`, `else`, `elsif`, `emerg`, `err`, `exec`, `extlookup`, `fail`, `false`, `file`, `filebucket`, `fqdn_rand`, `generate`, `host`, `if`, `import`, `include`, `info`, `inherits`, `inline_template`, `installed`, `interface`, `k5login`, `latest`, `link`, `loglevel`, `macauthorization`, `mailalias`, `maillist`, `mcx`, `md5`, `mount`, `mounted`, `nagios_command`, `nagios_contact`, `nagios_contactgroup`, `nagios_host`, `nagios_hostdependency`, `nagios_hostescalation`, `nagios_hostextinfo`, `nagios_hostgroup`, `nagios_service`, `nagios_servicedependency`, `nagios_serviceescalation`, `nagios_serviceextinfo`, `nagios_servicegroup`, `nagios_timeperiod`, `node`, `noop`, `notice`, `notify`, `package`, `present`, `purged`, `realize`, `regsubst`, `resources`, `role`, `router`, `running`, `schedule`, `scheduled_task`, `search`, `selboolean`, `selmodule`, `service`, `sha1`, `shellquote`, `split`, `sprintf`, `ssh_authorized_key`, `sshkey`, `stage`, `stopped`, `subscribe`, `tag`, `tagged`, `template`, `tidy`, `true`, `undef`, `unmounted`, `user`, `versioncmp`, `vlan`, `warning`, `yumrepo`, `zfs`, `zone`, `zpool`), Keyword, nil},\n-\t\t},\n-\t\t\"strings\": {\n-\t\t\t{`\"([^\"])*\"`, LiteralString, nil},\n-\t\t\t{`'(\\\\'|[^'])*'`, LiteralString, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "ad10a322ed04afca2f75edbf99e7ae274f2e8841",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/python.go",
      "status": "removed",
      "additions": 0,
      "deletions": 211,
      "changes": 211,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpython.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpython.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpython.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,211 +0,0 @@\n-package p\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Python lexer.\n-var Python = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Python\",\n-\t\tAliases:   []string{\"python\", \"py\", \"sage\", \"python3\", \"py3\"},\n-\t\tFilenames: []string{\"*.py\", \"*.pyi\", \"*.pyw\", \"*.jy\", \"*.sage\", \"*.sc\", \"SConstruct\", \"SConscript\", \"*.bzl\", \"BUCK\", \"BUILD\", \"BUILD.bazel\", \"WORKSPACE\", \"*.tac\"},\n-\t\tMimeTypes: []string{\"text/x-python\", \"application/x-python\", \"text/x-python3\", \"application/x-python3\"},\n-\t},\n-\tpythonRules,\n-))\n-\n-func pythonRules() Rules {\n-\tconst pythonIdentifier = `[_\\p{L}][_\\p{L}\\p{N}]*`\n-\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`^(\\s*)([rRuUbB]{,2})(\"\"\"(?:.|\\n)*?\"\"\")`, ByGroups(Text, LiteralStringAffix, LiteralStringDoc), nil},\n-\t\t\t{`^(\\s*)([rRuUbB]{,2})('''(?:.|\\n)*?''')`, ByGroups(Text, LiteralStringAffix, LiteralStringDoc), nil},\n-\t\t\t{`\\A#!.+$`, CommentHashbang, nil},\n-\t\t\t{`#.*$`, CommentSingle, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`\\\\`, Text, nil},\n-\t\t\tInclude(\"keywords\"),\n-\t\t\t{`(def)((?:\\s|\\\\\\s)+)`, ByGroups(Keyword, Text), Push(\"funcname\")},\n-\t\t\t{`(class)((?:\\s|\\\\\\s)+)`, ByGroups(Keyword, Text), Push(\"classname\")},\n-\t\t\t{`(from)((?:\\s|\\\\\\s)+)`, ByGroups(KeywordNamespace, Text), Push(\"fromimport\")},\n-\t\t\t{`(import)((?:\\s|\\\\\\s)+)`, ByGroups(KeywordNamespace, Text), Push(\"import\")},\n-\t\t\tInclude(\"expr\"),\n-\t\t},\n-\t\t\"expr\": {\n-\t\t\t{`(?i)(rf|fr)(\"\"\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"rfstringescape\", \"tdqf\")},\n-\t\t\t{`(?i)(rf|fr)(''')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"rfstringescape\", \"tsqf\")},\n-\t\t\t{`(?i)(rf|fr)(\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"rfstringescape\", \"dqf\")},\n-\t\t\t{`(?i)(rf|fr)(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"rfstringescape\", \"sqf\")},\n-\t\t\t{`([fF])(\"\"\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"fstringescape\", \"tdqf\")},\n-\t\t\t{`([fF])(''')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"fstringescape\", \"tsqf\")},\n-\t\t\t{`([fF])(\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"fstringescape\", \"dqf\")},\n-\t\t\t{`([fF])(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"fstringescape\", \"sqf\")},\n-\t\t\t{`(?i)(rb|br|r)(\"\"\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Push(\"tdqs\")},\n-\t\t\t{`(?i)(rb|br|r)(''')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Push(\"tsqs\")},\n-\t\t\t{`(?i)(rb|br|r)(\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Push(\"dqs\")},\n-\t\t\t{`(?i)(rb|br|r)(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Push(\"sqs\")},\n-\t\t\t{`([uUbB]?)(\"\"\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"stringescape\", \"tdqs\")},\n-\t\t\t{`([uUbB]?)(''')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"stringescape\", \"tsqs\")},\n-\t\t\t{`([uUbB]?)(\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"stringescape\", \"dqs\")},\n-\t\t\t{`([uUbB]?)(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"stringescape\", \"sqs\")},\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\tInclude(\"numbers\"),\n-\t\t\t{`!=|==|<<|>>|:=|[-~+/*%=<>&^|.]`, Operator, nil},\n-\t\t\t{`[]{}:(),;[]`, Punctuation, nil},\n-\t\t\t{`(in|is|and|or|not)\\b`, OperatorWord, nil},\n-\t\t\tInclude(\"expr-keywords\"),\n-\t\t\tInclude(\"builtins\"),\n-\t\t\tInclude(\"magicfuncs\"),\n-\t\t\tInclude(\"magicvars\"),\n-\t\t\tInclude(\"name\"),\n-\t\t},\n-\t\t\"expr-inside-fstring\": {\n-\t\t\t{`[{([]`, Punctuation, Push(\"expr-inside-fstring-inner\")},\n-\t\t\t{`(=\\s*)?(\\![sraf])?\\}`, LiteralStringInterpol, Pop(1)},\n-\t\t\t{`(=\\s*)?(\\![sraf])?:`, LiteralStringInterpol, Pop(1)},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\tInclude(\"expr\"),\n-\t\t},\n-\t\t\"expr-inside-fstring-inner\": {\n-\t\t\t{`[{([]`, Punctuation, Push(\"expr-inside-fstring-inner\")},\n-\t\t\t{`[])}]`, Punctuation, Pop(1)},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\tInclude(\"expr\"),\n-\t\t},\n-\t\t\"expr-keywords\": {\n-\t\t\t{Words(``, `\\b`, `async for`, `await`, `else`, `for`, `if`, `lambda`, `yield`, `yield from`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `True`, `False`, `None`), KeywordConstant, nil},\n-\t\t},\n-\t\t\"keywords\": {\n-\t\t\t{Words(``, `\\b`, `assert`, `async`, `await`, `break`, `continue`, `del`, `elif`, `else`, `except`, `finally`, `for`, `global`, `if`, `lambda`, `pass`, `raise`, `nonlocal`, `return`, `try`, `while`, `yield`, `yield from`, `as`, `with`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `True`, `False`, `None`), KeywordConstant, nil},\n-\t\t},\n-\t\t\"builtins\": {\n-\t\t\t{Words(`(?<!\\.)`, `\\b`, `__import__`, `abs`, `all`, `any`, `bin`, `bool`, `bytearray`, `bytes`, `chr`, `classmethod`, `compile`, `complex`, `delattr`, `dict`, `dir`, `divmod`, `enumerate`, `eval`, `filter`, `float`, `format`, `frozenset`, `getattr`, `globals`, `hasattr`, `hash`, `hex`, `id`, `input`, `int`, `isinstance`, `issubclass`, `iter`, `len`, `list`, `locals`, `map`, `max`, `memoryview`, `min`, `next`, `object`, `oct`, `open`, `ord`, `pow`, `print`, `property`, `range`, `repr`, `reversed`, `round`, `set`, `setattr`, `slice`, `sorted`, `staticmethod`, `str`, `sum`, `super`, `tuple`, `type`, `vars`, `zip`), NameBuiltin, nil},\n-\t\t\t{`(?<!\\.)(self|Ellipsis|NotImplemented|cls)\\b`, NameBuiltinPseudo, nil},\n-\t\t\t{Words(`(?<!\\.)`, `\\b`, `ArithmeticError`, `AssertionError`, `AttributeError`, `BaseException`, `BufferError`, `BytesWarning`, `DeprecationWarning`, `EOFError`, `EnvironmentError`, `Exception`, `FloatingPointError`, `FutureWarning`, `GeneratorExit`, `IOError`, `ImportError`, `ImportWarning`, `IndentationError`, `IndexError`, `KeyError`, `KeyboardInterrupt`, `LookupError`, `MemoryError`, `NameError`, `NotImplementedError`, `OSError`, `OverflowError`, `PendingDeprecationWarning`, `ReferenceError`, `ResourceWarning`, `RuntimeError`, `RuntimeWarning`, `StopIteration`, `SyntaxError`, `SyntaxWarning`, `SystemError`, `SystemExit`, `TabError`, `TypeError`, `UnboundLocalError`, `UnicodeDecodeError`, `UnicodeEncodeError`, `UnicodeError`, `UnicodeTranslateError`, `UnicodeWarning`, `UserWarning`, `ValueError`, `VMSError`, `Warning`, `WindowsError`, `ZeroDivisionError`, `BlockingIOError`, `ChildProcessError`, `ConnectionError`, `BrokenPipeError`, `ConnectionAbortedError`, `ConnectionRefusedError`, `ConnectionResetError`, `FileExistsError`, `FileNotFoundError`, `InterruptedError`, `IsADirectoryError`, `NotADirectoryError`, `PermissionError`, `ProcessLookupError`, `TimeoutError`, `StopAsyncIteration`, `ModuleNotFoundError`, `RecursionError`), NameException, nil},\n-\t\t},\n-\t\t\"magicfuncs\": {\n-\t\t\t{Words(``, `\\b`, `__abs__`, `__add__`, `__aenter__`, `__aexit__`, `__aiter__`, `__and__`, `__anext__`, `__await__`, `__bool__`, `__bytes__`, `__call__`, `__complex__`, `__contains__`, `__del__`, `__delattr__`, `__delete__`, `__delitem__`, `__dir__`, `__divmod__`, `__enter__`, `__eq__`, `__exit__`, `__float__`, `__floordiv__`, `__format__`, `__ge__`, `__get__`, `__getattr__`, `__getattribute__`, `__getitem__`, `__gt__`, `__hash__`, `__iadd__`, `__iand__`, `__ifloordiv__`, `__ilshift__`, `__imatmul__`, `__imod__`, `__imul__`, `__index__`, `__init__`, `__instancecheck__`, `__int__`, `__invert__`, `__ior__`, `__ipow__`, `__irshift__`, `__isub__`, `__iter__`, `__itruediv__`, `__ixor__`, `__le__`, `__len__`, `__length_hint__`, `__lshift__`, `__lt__`, `__matmul__`, `__missing__`, `__mod__`, `__mul__`, `__ne__`, `__neg__`, `__new__`, `__next__`, `__or__`, `__pos__`, `__pow__`, `__prepare__`, `__radd__`, `__rand__`, `__rdivmod__`, `__repr__`, `__reversed__`, `__rfloordiv__`, `__rlshift__`, `__rmatmul__`, `__rmod__`, `__rmul__`, `__ror__`, `__round__`, `__rpow__`, `__rrshift__`, `__rshift__`, `__rsub__`, `__rtruediv__`, `__rxor__`, `__set__`, `__setattr__`, `__setitem__`, `__str__`, `__sub__`, `__subclasscheck__`, `__truediv__`, `__xor__`), NameFunctionMagic, nil},\n-\t\t},\n-\t\t\"magicvars\": {\n-\t\t\t{Words(``, `\\b`, `__annotations__`, `__bases__`, `__class__`, `__closure__`, `__code__`, `__defaults__`, `__dict__`, `__doc__`, `__file__`, `__func__`, `__globals__`, `__kwdefaults__`, `__module__`, `__mro__`, `__name__`, `__objclass__`, `__qualname__`, `__self__`, `__slots__`, `__weakref__`), NameVariableMagic, nil},\n-\t\t},\n-\t\t\"numbers\": {\n-\t\t\t{`(\\d(?:_?\\d)*\\.(?:\\d(?:_?\\d)*)?|(?:\\d(?:_?\\d)*)?\\.\\d(?:_?\\d)*)([eE][+-]?\\d(?:_?\\d)*)?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d(?:_?\\d)*[eE][+-]?\\d(?:_?\\d)*j?`, LiteralNumberFloat, nil},\n-\t\t\t{`0[oO](?:_?[0-7])+`, LiteralNumberOct, nil},\n-\t\t\t{`0[bB](?:_?[01])+`, LiteralNumberBin, nil},\n-\t\t\t{`0[xX](?:_?[a-fA-F0-9])+`, LiteralNumberHex, nil},\n-\t\t\t{`\\d(?:_?\\d)*`, LiteralNumberInteger, nil},\n-\t\t},\n-\t\t\"name\": {\n-\t\t\t{`@` + pythonIdentifier, NameDecorator, nil},\n-\t\t\t{`@`, Operator, nil},\n-\t\t\t{pythonIdentifier, Name, nil},\n-\t\t},\n-\t\t\"funcname\": {\n-\t\t\tInclude(\"magicfuncs\"),\n-\t\t\t{pythonIdentifier, NameFunction, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"classname\": {\n-\t\t\t{pythonIdentifier, NameClass, Pop(1)},\n-\t\t},\n-\t\t\"import\": {\n-\t\t\t{`(\\s+)(as)(\\s+)`, ByGroups(Text, Keyword, Text), nil},\n-\t\t\t{`\\.`, NameNamespace, nil},\n-\t\t\t{pythonIdentifier, NameNamespace, nil},\n-\t\t\t{`(\\s*)(,)(\\s*)`, ByGroups(Text, Operator, Text), nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"fromimport\": {\n-\t\t\t{`(\\s+)(import)\\b`, ByGroups(Text, KeywordNamespace), Pop(1)},\n-\t\t\t{`\\.`, NameNamespace, nil},\n-\t\t\t{`None\\b`, NameBuiltinPseudo, Pop(1)},\n-\t\t\t{pythonIdentifier, NameNamespace, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"rfstringescape\": {\n-\t\t\t{`\\{\\{`, LiteralStringEscape, nil},\n-\t\t\t{`\\}\\}`, LiteralStringEscape, nil},\n-\t\t},\n-\t\t\"fstringescape\": {\n-\t\t\tInclude(\"rfstringescape\"),\n-\t\t\tInclude(\"stringescape\"),\n-\t\t},\n-\t\t\"stringescape\": {\n-\t\t\t{`\\\\([\\\\abfnrtv\"\\']|\\n|N\\{.*?\\}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8}|x[a-fA-F0-9]{2}|[0-7]{1,3})`, LiteralStringEscape, nil},\n-\t\t},\n-\t\t\"fstrings-single\": {\n-\t\t\t{`\\}`, LiteralStringInterpol, nil},\n-\t\t\t{`\\{`, LiteralStringInterpol, Push(\"expr-inside-fstring\")},\n-\t\t\t{`[^\\\\\\'\"{}\\n]+`, LiteralStringSingle, nil},\n-\t\t\t{`[\\'\"\\\\]`, LiteralStringSingle, nil},\n-\t\t},\n-\t\t\"fstrings-double\": {\n-\t\t\t{`\\}`, LiteralStringInterpol, nil},\n-\t\t\t{`\\{`, LiteralStringInterpol, Push(\"expr-inside-fstring\")},\n-\t\t\t{`[^\\\\\\'\"{}\\n]+`, LiteralStringDouble, nil},\n-\t\t\t{`[\\'\"\\\\]`, LiteralStringDouble, nil},\n-\t\t},\n-\t\t\"strings-single\": {\n-\t\t\t{`%(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsaux%]`, LiteralStringInterpol, nil},\n-\t\t\t{`\\{((\\w+)((\\.\\w+)|(\\[[^\\]]+\\]))*)?(\\![sra])?(\\:(.?[<>=\\^])?[-+ ]?#?0?(\\d+)?,?(\\.\\d+)?[E-GXb-gnosx%]?)?\\}`, LiteralStringInterpol, nil},\n-\t\t\t{`[^\\\\\\'\"%{\\n]+`, LiteralStringSingle, nil},\n-\t\t\t{`[\\'\"\\\\]`, LiteralStringSingle, nil},\n-\t\t\t{`%|(\\{{1,2})`, LiteralStringSingle, nil},\n-\t\t},\n-\t\t\"strings-double\": {\n-\t\t\t{`%(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsaux%]`, LiteralStringInterpol, nil},\n-\t\t\t{`\\{((\\w+)((\\.\\w+)|(\\[[^\\]]+\\]))*)?(\\![sra])?(\\:(.?[<>=\\^])?[-+ ]?#?0?(\\d+)?,?(\\.\\d+)?[E-GXb-gnosx%]?)?\\}`, LiteralStringInterpol, nil},\n-\t\t\t{`[^\\\\\\'\"%{\\n]+`, LiteralStringDouble, nil},\n-\t\t\t{`[\\'\"\\\\]`, LiteralStringDouble, nil},\n-\t\t\t{`%|(\\{{1,2})`, LiteralStringDouble, nil},\n-\t\t},\n-\t\t\"dqf\": {\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t\t{`\\\\\\\\|\\\\\"|\\\\\\n`, LiteralStringEscape, nil},\n-\t\t\tInclude(\"fstrings-double\"),\n-\t\t},\n-\t\t\"sqf\": {\n-\t\t\t{`'`, LiteralStringSingle, Pop(1)},\n-\t\t\t{`\\\\\\\\|\\\\'|\\\\\\n`, LiteralStringEscape, nil},\n-\t\t\tInclude(\"fstrings-single\"),\n-\t\t},\n-\t\t\"dqs\": {\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t\t{`\\\\\\\\|\\\\\"|\\\\\\n`, LiteralStringEscape, nil},\n-\t\t\tInclude(\"strings-double\"),\n-\t\t},\n-\t\t\"sqs\": {\n-\t\t\t{`'`, LiteralStringSingle, Pop(1)},\n-\t\t\t{`\\\\\\\\|\\\\'|\\\\\\n`, LiteralStringEscape, nil},\n-\t\t\tInclude(\"strings-single\"),\n-\t\t},\n-\t\t\"tdqf\": {\n-\t\t\t{`\"\"\"`, LiteralStringDouble, Pop(1)},\n-\t\t\tInclude(\"fstrings-double\"),\n-\t\t\t{`\\n`, LiteralStringDouble, nil},\n-\t\t},\n-\t\t\"tsqf\": {\n-\t\t\t{`'''`, LiteralStringSingle, Pop(1)},\n-\t\t\tInclude(\"fstrings-single\"),\n-\t\t\t{`\\n`, LiteralStringSingle, nil},\n-\t\t},\n-\t\t\"tdqs\": {\n-\t\t\t{`\"\"\"`, LiteralStringDouble, Pop(1)},\n-\t\t\tInclude(\"strings-double\"),\n-\t\t\t{`\\n`, LiteralStringDouble, nil},\n-\t\t},\n-\t\t\"tsqs\": {\n-\t\t\t{`'''`, LiteralStringSingle, Pop(1)},\n-\t\t\tInclude(\"strings-single\"),\n-\t\t\t{`\\n`, LiteralStringSingle, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "f1f60360b2781a6b3ba0106ae9ed97a914184009",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/p/python2.go",
      "status": "removed",
      "additions": 0,
      "deletions": 141,
      "changes": 141,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpython2.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpython2.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fp%2Fpython2.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,141 +0,0 @@\n-package p\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Python2 lexer.\n-var Python2 = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Python 2\",\n-\t\tAliases:   []string{\"python2\", \"py2\"},\n-\t\tFilenames: []string{},\n-\t\tMimeTypes: []string{\"text/x-python2\", \"application/x-python2\"},\n-\t},\n-\tpython2Rules,\n-))\n-\n-func python2Rules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`^(\\s*)([rRuUbB]{,2})(\"\"\"(?:.|\\n)*?\"\"\")`, ByGroups(Text, LiteralStringAffix, LiteralStringDoc), nil},\n-\t\t\t{`^(\\s*)([rRuUbB]{,2})('''(?:.|\\n)*?''')`, ByGroups(Text, LiteralStringAffix, LiteralStringDoc), nil},\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`\\A#!.+$`, CommentHashbang, nil},\n-\t\t\t{`#.*$`, CommentSingle, nil},\n-\t\t\t{`[]{}:(),;[]`, Punctuation, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`\\\\`, Text, nil},\n-\t\t\t{`(in|is|and|or|not)\\b`, OperatorWord, nil},\n-\t\t\t{`!=|==|<<|>>|[-~+/*%=<>&^|.]`, Operator, nil},\n-\t\t\tInclude(\"keywords\"),\n-\t\t\t{`(def)((?:\\s|\\\\\\s)+)`, ByGroups(Keyword, Text), Push(\"funcname\")},\n-\t\t\t{`(class)((?:\\s|\\\\\\s)+)`, ByGroups(Keyword, Text), Push(\"classname\")},\n-\t\t\t{`(from)((?:\\s|\\\\\\s)+)`, ByGroups(KeywordNamespace, Text), Push(\"fromimport\")},\n-\t\t\t{`(import)((?:\\s|\\\\\\s)+)`, ByGroups(KeywordNamespace, Text), Push(\"import\")},\n-\t\t\tInclude(\"builtins\"),\n-\t\t\tInclude(\"magicfuncs\"),\n-\t\t\tInclude(\"magicvars\"),\n-\t\t\tInclude(\"backtick\"),\n-\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(\"\"\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Push(\"tdqs\")},\n-\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(''')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Push(\"tsqs\")},\n-\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Push(\"dqs\")},\n-\t\t\t{`([rR]|[uUbB][rR]|[rR][uUbB])(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Push(\"sqs\")},\n-\t\t\t{`([uUbB]?)(\"\"\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"stringescape\", \"tdqs\")},\n-\t\t\t{`([uUbB]?)(''')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"stringescape\", \"tsqs\")},\n-\t\t\t{`([uUbB]?)(\")`, ByGroups(LiteralStringAffix, LiteralStringDouble), Combined(\"stringescape\", \"dqs\")},\n-\t\t\t{`([uUbB]?)(')`, ByGroups(LiteralStringAffix, LiteralStringSingle), Combined(\"stringescape\", \"sqs\")},\n-\t\t\tInclude(\"name\"),\n-\t\t\tInclude(\"numbers\"),\n-\t\t},\n-\t\t\"keywords\": {\n-\t\t\t{Words(``, `\\b`, `assert`, `break`, `continue`, `del`, `elif`, `else`, `except`, `exec`, `finally`, `for`, `global`, `if`, `lambda`, `pass`, `print`, `raise`, `return`, `try`, `while`, `yield`, `yield from`, `as`, `with`), Keyword, nil},\n-\t\t},\n-\t\t\"builtins\": {\n-\t\t\t{Words(`(?<!\\.)`, `\\b`, `__import__`, `abs`, `all`, `any`, `apply`, `basestring`, `bin`, `bool`, `buffer`, `bytearray`, `bytes`, `callable`, `chr`, `classmethod`, `cmp`, `coerce`, `compile`, `complex`, `delattr`, `dict`, `dir`, `divmod`, `enumerate`, `eval`, `execfile`, `exit`, `file`, `filter`, `float`, `frozenset`, `getattr`, `globals`, `hasattr`, `hash`, `hex`, `id`, `input`, `int`, `intern`, `isinstance`, `issubclass`, `iter`, `len`, `list`, `locals`, `long`, `map`, `max`, `min`, `next`, `object`, `oct`, `open`, `ord`, `pow`, `property`, `range`, `raw_input`, `reduce`, `reload`, `repr`, `reversed`, `round`, `set`, `setattr`, `slice`, `sorted`, `staticmethod`, `str`, `sum`, `super`, `tuple`, `type`, `unichr`, `unicode`, `vars`, `xrange`, `zip`), NameBuiltin, nil},\n-\t\t\t{`(?<!\\.)(self|None|Ellipsis|NotImplemented|False|True|cls)\\b`, NameBuiltinPseudo, nil},\n-\t\t\t{Words(`(?<!\\.)`, `\\b`, `ArithmeticError`, `AssertionError`, `AttributeError`, `BaseException`, `DeprecationWarning`, `EOFError`, `EnvironmentError`, `Exception`, `FloatingPointError`, `FutureWarning`, `GeneratorExit`, `IOError`, `ImportError`, `ImportWarning`, `IndentationError`, `IndexError`, `KeyError`, `KeyboardInterrupt`, `LookupError`, `MemoryError`, `NameError`, `NotImplementedError`, `OSError`, `OverflowError`, `OverflowWarning`, `PendingDeprecationWarning`, `ReferenceError`, `RuntimeError`, `RuntimeWarning`, `StandardError`, `StopIteration`, `SyntaxError`, `SyntaxWarning`, `SystemError`, `SystemExit`, `TabError`, `TypeError`, `UnboundLocalError`, `UnicodeDecodeError`, `UnicodeEncodeError`, `UnicodeError`, `UnicodeTranslateError`, `UnicodeWarning`, `UserWarning`, `ValueError`, `VMSError`, `Warning`, `WindowsError`, `ZeroDivisionError`), NameException, nil},\n-\t\t},\n-\t\t\"magicfuncs\": {\n-\t\t\t{Words(``, `\\b`, `__abs__`, `__add__`, `__and__`, `__call__`, `__cmp__`, `__coerce__`, `__complex__`, `__contains__`, `__del__`, `__delattr__`, `__delete__`, `__delitem__`, `__delslice__`, `__div__`, `__divmod__`, `__enter__`, `__eq__`, `__exit__`, `__float__`, `__floordiv__`, `__ge__`, `__get__`, `__getattr__`, `__getattribute__`, `__getitem__`, `__getslice__`, `__gt__`, `__hash__`, `__hex__`, `__iadd__`, `__iand__`, `__idiv__`, `__ifloordiv__`, `__ilshift__`, `__imod__`, `__imul__`, `__index__`, `__init__`, `__instancecheck__`, `__int__`, `__invert__`, `__iop__`, `__ior__`, `__ipow__`, `__irshift__`, `__isub__`, `__iter__`, `__itruediv__`, `__ixor__`, `__le__`, `__len__`, `__long__`, `__lshift__`, `__lt__`, `__missing__`, `__mod__`, `__mul__`, `__ne__`, `__neg__`, `__new__`, `__nonzero__`, `__oct__`, `__op__`, `__or__`, `__pos__`, `__pow__`, `__radd__`, `__rand__`, `__rcmp__`, `__rdiv__`, `__rdivmod__`, `__repr__`, `__reversed__`, `__rfloordiv__`, `__rlshift__`, `__rmod__`, `__rmul__`, `__rop__`, `__ror__`, `__rpow__`, `__rrshift__`, `__rshift__`, `__rsub__`, `__rtruediv__`, `__rxor__`, `__set__`, `__setattr__`, `__setitem__`, `__setslice__`, `__str__`, `__sub__`, `__subclasscheck__`, `__truediv__`, `__unicode__`, `__xor__`), NameFunctionMagic, nil},\n-\t\t},\n-\t\t\"magicvars\": {\n-\t\t\t{Words(``, `\\b`, `__bases__`, `__class__`, `__closure__`, `__code__`, `__defaults__`, `__dict__`, `__doc__`, `__file__`, `__func__`, `__globals__`, `__metaclass__`, `__module__`, `__mro__`, `__name__`, `__self__`, `__slots__`, `__weakref__`), NameVariableMagic, nil},\n-\t\t},\n-\t\t\"numbers\": {\n-\t\t\t{`(\\d+\\.\\d*|\\d*\\.\\d+)([eE][+-]?[0-9]+)?j?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+[eE][+-]?[0-9]+j?`, LiteralNumberFloat, nil},\n-\t\t\t{`0[0-7]+j?`, LiteralNumberOct, nil},\n-\t\t\t{`0[bB][01]+`, LiteralNumberBin, nil},\n-\t\t\t{`0[xX][a-fA-F0-9]+`, LiteralNumberHex, nil},\n-\t\t\t{`\\d+L`, LiteralNumberIntegerLong, nil},\n-\t\t\t{`\\d+j?`, LiteralNumberInteger, nil},\n-\t\t},\n-\t\t\"backtick\": {\n-\t\t\t{\"`.*?`\", LiteralStringBacktick, nil},\n-\t\t},\n-\t\t\"name\": {\n-\t\t\t{`@[\\w.]+`, NameDecorator, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t},\n-\t\t\"funcname\": {\n-\t\t\tInclude(\"magicfuncs\"),\n-\t\t\t{`[a-zA-Z_]\\w*`, NameFunction, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"classname\": {\n-\t\t\t{`[a-zA-Z_]\\w*`, NameClass, Pop(1)},\n-\t\t},\n-\t\t\"import\": {\n-\t\t\t{`(?:[ \\t]|\\\\\\n)+`, Text, nil},\n-\t\t\t{`as\\b`, KeywordNamespace, nil},\n-\t\t\t{`,`, Operator, nil},\n-\t\t\t{`[a-zA-Z_][\\w.]*`, NameNamespace, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"fromimport\": {\n-\t\t\t{`(?:[ \\t]|\\\\\\n)+`, Text, nil},\n-\t\t\t{`import\\b`, KeywordNamespace, Pop(1)},\n-\t\t\t{`None\\b`, NameBuiltinPseudo, Pop(1)},\n-\t\t\t{`[a-zA-Z_.][\\w.]*`, NameNamespace, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"stringescape\": {\n-\t\t\t{`\\\\([\\\\abfnrtv\"\\']|\\n|N\\{.*?\\}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8}|x[a-fA-F0-9]{2}|[0-7]{1,3})`, LiteralStringEscape, nil},\n-\t\t},\n-\t\t\"strings-single\": {\n-\t\t\t{`%(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsux%]`, LiteralStringInterpol, nil},\n-\t\t\t{`[^\\\\\\'\"%\\n]+`, LiteralStringSingle, nil},\n-\t\t\t{`[\\'\"\\\\]`, LiteralStringSingle, nil},\n-\t\t\t{`%`, LiteralStringSingle, nil},\n-\t\t},\n-\t\t\"strings-double\": {\n-\t\t\t{`%(\\(\\w+\\))?[-#0 +]*([0-9]+|[*])?(\\.([0-9]+|[*]))?[hlL]?[E-GXc-giorsux%]`, LiteralStringInterpol, nil},\n-\t\t\t{`[^\\\\\\'\"%\\n]+`, LiteralStringDouble, nil},\n-\t\t\t{`[\\'\"\\\\]`, LiteralStringDouble, nil},\n-\t\t\t{`%`, LiteralStringDouble, nil},\n-\t\t},\n-\t\t\"dqs\": {\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t\t{`\\\\\\\\|\\\\\"|\\\\\\n`, LiteralStringEscape, nil},\n-\t\t\tInclude(\"strings-double\"),\n-\t\t},\n-\t\t\"sqs\": {\n-\t\t\t{`'`, LiteralStringSingle, Pop(1)},\n-\t\t\t{`\\\\\\\\|\\\\'|\\\\\\n`, LiteralStringEscape, nil},\n-\t\t\tInclude(\"strings-single\"),\n-\t\t},\n-\t\t\"tdqs\": {\n-\t\t\t{`\"\"\"`, LiteralStringDouble, Pop(1)},\n-\t\t\tInclude(\"strings-double\"),\n-\t\t\t{`\\n`, LiteralStringDouble, nil},\n-\t\t},\n-\t\t\"tsqs\": {\n-\t\t\t{`'''`, LiteralStringSingle, Pop(1)},\n-\t\t\tInclude(\"strings-single\"),\n-\t\t\t{`\\n`, LiteralStringSingle, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "1e36f86570b6b2da393cc58dee9ead4b6f3b1bd9",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/q/qbasic.go",
      "status": "removed",
      "additions": 0,
      "deletions": 71,
      "changes": 71,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fq%2Fqbasic.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fq%2Fqbasic.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fq%2Fqbasic.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,71 +0,0 @@\n-package q\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Qbasic lexer.\n-var Qbasic = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"QBasic\",\n-\t\tAliases:   []string{\"qbasic\", \"basic\"},\n-\t\tFilenames: []string{\"*.BAS\", \"*.bas\"},\n-\t\tMimeTypes: []string{\"text/basic\"},\n-\t},\n-\tqbasicRules,\n-))\n-\n-func qbasicRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n+`, Text, nil},\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t\t{`^(\\s*)(\\d*)(\\s*)(REM .*)$`, ByGroups(TextWhitespace, NameLabel, TextWhitespace, CommentSingle), nil},\n-\t\t\t{`^(\\s*)(\\d+)(\\s*)`, ByGroups(TextWhitespace, NameLabel, TextWhitespace), nil},\n-\t\t\t{`(?=[\\s]*)(\\w+)(?=[\\s]*=)`, NameVariableGlobal, nil},\n-\t\t\t{`(?=[^\"]*)\\'.*$`, CommentSingle, nil},\n-\t\t\t{`\"[^\\n\"]*\"`, LiteralStringDouble, nil},\n-\t\t\t{`(END)(\\s+)(FUNCTION|IF|SELECT|SUB)`, ByGroups(KeywordReserved, TextWhitespace, KeywordReserved), nil},\n-\t\t\t{`(DECLARE)(\\s+)([A-Z]+)(\\s+)(\\S+)`, ByGroups(KeywordDeclaration, TextWhitespace, NameVariable, TextWhitespace, Name), nil},\n-\t\t\t{`(DIM)(\\s+)(SHARED)(\\s+)([^\\s(]+)`, ByGroups(KeywordDeclaration, TextWhitespace, NameVariable, TextWhitespace, NameVariableGlobal), nil},\n-\t\t\t{`(DIM)(\\s+)([^\\s(]+)`, ByGroups(KeywordDeclaration, TextWhitespace, NameVariableGlobal), nil},\n-\t\t\t{`^(\\s*)([a-zA-Z_]+)(\\s*)(\\=)`, ByGroups(TextWhitespace, NameVariableGlobal, TextWhitespace, Operator), nil},\n-\t\t\t{`(GOTO|GOSUB)(\\s+)(\\w+\\:?)`, ByGroups(KeywordReserved, TextWhitespace, NameLabel), nil},\n-\t\t\t{`(SUB)(\\s+)(\\w+\\:?)`, ByGroups(KeywordReserved, TextWhitespace, NameLabel), nil},\n-\t\t\tInclude(\"declarations\"),\n-\t\t\tInclude(\"functions\"),\n-\t\t\tInclude(\"metacommands\"),\n-\t\t\tInclude(\"operators\"),\n-\t\t\tInclude(\"statements\"),\n-\t\t\tInclude(\"keywords\"),\n-\t\t\t{`[a-zA-Z_]\\w*[$@#&!]`, NameVariableGlobal, nil},\n-\t\t\t{`[a-zA-Z_]\\w*\\:`, NameLabel, nil},\n-\t\t\t{`\\-?\\d*\\.\\d+[@|#]?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\-?\\d+[@|#]`, LiteralNumberFloat, nil},\n-\t\t\t{`\\-?\\d+#?`, LiteralNumberIntegerLong, nil},\n-\t\t\t{`\\-?\\d+#?`, LiteralNumberInteger, nil},\n-\t\t\t{`!=|==|:=|\\.=|<<|>>|[-~+/\\\\*%=<>&^|?:!.]`, Operator, nil},\n-\t\t\t{`[\\[\\]{}(),;]`, Punctuation, nil},\n-\t\t\t{`[\\w]+`, NameVariableGlobal, nil},\n-\t\t},\n-\t\t\"declarations\": {\n-\t\t\t{`\\b(DATA|LET)(?=\\(|\\b)`, KeywordDeclaration, nil},\n-\t\t},\n-\t\t\"functions\": {\n-\t\t\t{`\\b(ABS|ASC|ATN|CDBL|CHR\\$|CINT|CLNG|COMMAND\\$|COS|CSNG|CSRLIN|CVD|CVDMBF|CVI|CVL|CVS|CVSMBF|DATE\\$|ENVIRON\\$|EOF|ERDEV|ERDEV\\$|ERL|ERR|EXP|FILEATTR|FIX|FRE|FREEFILE|HEX\\$|INKEY\\$|INP|INPUT\\$|INSTR|INT|IOCTL\\$|LBOUND|LCASE\\$|LEFT\\$|LEN|LOC|LOF|LOG|LPOS|LTRIM\\$|MID\\$|MKD\\$|MKDMBF\\$|MKI\\$|MKL\\$|MKS\\$|MKSMBF\\$|OCT\\$|PEEK|PEN|PLAY|PMAP|POINT|POS|RIGHT\\$|RND|RTRIM\\$|SADD|SCREEN|SEEK|SETMEM|SGN|SIN|SPACE\\$|SPC|SQR|STICK|STR\\$|STRIG|STRING\\$|TAB|TAN|TIME\\$|TIMER|UBOUND|UCASE\\$|VAL|VARPTR|VARPTR\\$|VARSEG)(?=\\(|\\b)`, KeywordReserved, nil},\n-\t\t},\n-\t\t\"metacommands\": {\n-\t\t\t{`\\b(\\$DYNAMIC|\\$INCLUDE|\\$STATIC)(?=\\(|\\b)`, KeywordConstant, nil},\n-\t\t},\n-\t\t\"operators\": {\n-\t\t\t{`\\b(AND|EQV|IMP|NOT|OR|XOR)(?=\\(|\\b)`, OperatorWord, nil},\n-\t\t},\n-\t\t\"statements\": {\n-\t\t\t{`\\b(BEEP|BLOAD|BSAVE|CALL|CALL\\ ABSOLUTE|CALL\\ INTERRUPT|CALLS|CHAIN|CHDIR|CIRCLE|CLEAR|CLOSE|CLS|COLOR|COM|COMMON|CONST|DATA|DATE\\$|DECLARE|DEF\\ FN|DEF\\ SEG|DEFDBL|DEFINT|DEFLNG|DEFSNG|DEFSTR|DEF|DIM|DO|LOOP|DRAW|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|NEXT|FUNCTION|GET|GOSUB|GOTO|IF|THEN|INPUT|INPUT\\ \\#|IOCTL|KEY|KEY|KILL|LET|LINE|LINE\\ INPUT|LINE\\ INPUT\\ \\#|LOCATE|LOCK|UNLOCK|LPRINT|LSET|MID\\$|MKDIR|NAME|ON\\ COM|ON\\ ERROR|ON\\ KEY|ON\\ PEN|ON\\ PLAY|ON\\ STRIG|ON\\ TIMER|ON\\ UEVENT|ON|OPEN|OPEN\\ COM|OPTION\\ BASE|OUT|PAINT|PALETTE|PCOPY|PEN|PLAY|POKE|PRESET|PRINT|PRINT\\ \\#|PRINT\\ USING|PSET|PUT|PUT|RANDOMIZE|READ|REDIM|REM|RESET|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SCREEN|SEEK|SELECT\\ CASE|SHARED|SHELL|SLEEP|SOUND|STATIC|STOP|STRIG|SUB|SWAP|SYSTEM|TIME\\$|TIMER|TROFF|TRON|TYPE|UEVENT|UNLOCK|VIEW|WAIT|WHILE|WEND|WIDTH|WINDOW|WRITE)\\b`, KeywordReserved, nil},\n-\t\t},\n-\t\t\"keywords\": {\n-\t\t\t{`\\b(ACCESS|ALIAS|ANY|APPEND|AS|BASE|BINARY|BYVAL|CASE|CDECL|DOUBLE|ELSE|ELSEIF|ENDIF|INTEGER|IS|LIST|LOCAL|LONG|LOOP|MOD|NEXT|OFF|ON|OUTPUT|RANDOM|SIGNAL|SINGLE|STEP|STRING|THEN|TO|UNTIL|USING|WEND)\\b`, Keyword, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "dfd3c75374b33f1b04f40ac2a61f5051793c3611",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/q/qml.go",
      "status": "removed",
      "additions": 0,
      "deletions": 58,
      "changes": 58,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fq%2Fqml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fq%2Fqml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fq%2Fqml.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,58 +0,0 @@\n-package q\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Qml lexer.\n-var Qml = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"QML\",\n-\t\tAliases:   []string{\"qml\", \"qbs\"},\n-\t\tFilenames: []string{\"*.qml\", \"*.qbs\"},\n-\t\tMimeTypes: []string{\"application/x-qml\", \"application/x-qt.qbs+qml\"},\n-\t\tDotAll:    true,\n-\t},\n-\tqmlRules,\n-))\n-\n-func qmlRules() Rules {\n-\treturn Rules{\n-\t\t\"commentsandwhitespace\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`<!--`, Comment, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"slashstartsregex\": {\n-\t\t\tInclude(\"commentsandwhitespace\"),\n-\t\t\t{`/(\\\\.|[^[/\\\\\\n]|\\[(\\\\.|[^\\]\\\\\\n])*])+/([gim]+\\b|\\B)`, LiteralStringRegex, Pop(1)},\n-\t\t\t{`(?=/)`, Text, Push(\"#pop\", \"badregex\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"badregex\": {\n-\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\t{`^(?=\\s|/|<!--)`, Text, Push(\"slashstartsregex\")},\n-\t\t\tInclude(\"commentsandwhitespace\"),\n-\t\t\t{`\\+\\+|--|~|&&|\\?|:|\\|\\||\\\\(?=\\n)|(<<|>>>?|==?|!=?|[-<>+*%&|^/])=?`, Operator, Push(\"slashstartsregex\")},\n-\t\t\t{`[{(\\[;,]`, Punctuation, Push(\"slashstartsregex\")},\n-\t\t\t{`[})\\].]`, Punctuation, nil},\n-\t\t\t{`\\bid\\s*:\\s*[A-Za-z][\\w.]*`, KeywordDeclaration, Push(\"slashstartsregex\")},\n-\t\t\t{`\\b[A-Za-z][\\w.]*\\s*:`, Keyword, Push(\"slashstartsregex\")},\n-\t\t\t{`(for|in|while|do|break|return|continue|switch|case|default|if|else|throw|try|catch|finally|new|delete|typeof|instanceof|void|this)\\b`, Keyword, Push(\"slashstartsregex\")},\n-\t\t\t{`(var|let|with|function)\\b`, KeywordDeclaration, Push(\"slashstartsregex\")},\n-\t\t\t{`(abstract|boolean|byte|char|class|const|debugger|double|enum|export|extends|final|float|goto|implements|import|int|interface|long|native|package|private|protected|public|short|static|super|synchronized|throws|transient|volatile)\\b`, KeywordReserved, nil},\n-\t\t\t{`(true|false|null|NaN|Infinity|undefined)\\b`, KeywordConstant, nil},\n-\t\t\t{`(Array|Boolean|Date|Error|Function|Math|netscape|Number|Object|Packages|RegExp|String|sun|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|Error|eval|isFinite|isNaN|parseFloat|parseInt|document|this|window)\\b`, NameBuiltin, nil},\n-\t\t\t{`[$a-zA-Z_]\\w*`, NameOther, nil},\n-\t\t\t{`[0-9][0-9]*\\.[0-9]+([eE][0-9]+)?[fd]?`, LiteralNumberFloat, nil},\n-\t\t\t{`0x[0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "7f56dcec7114ee0955dfdc2e917c666b27833e01",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/r/r.go",
      "status": "removed",
      "additions": 0,
      "deletions": 70,
      "changes": 70,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Fr.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Fr.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Fr.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,70 +0,0 @@\n-package r\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// R/S lexer.\n-var R = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"R\",\n-\t\tAliases:   []string{\"splus\", \"s\", \"r\"},\n-\t\tFilenames: []string{\"*.S\", \"*.R\", \"*.r\", \".Rhistory\", \".Rprofile\", \".Renviron\"},\n-\t\tMimeTypes: []string{\"text/S-plus\", \"text/S\", \"text/x-r-source\", \"text/x-r\", \"text/x-R\", \"text/x-r-history\", \"text/x-r-profile\"},\n-\t},\n-\trRules,\n-))\n-\n-func rRules() Rules {\n-\treturn Rules{\n-\t\t\"comments\": {\n-\t\t\t{`#.*$`, CommentSingle, nil},\n-\t\t},\n-\t\t\"valid_name\": {\n-\t\t\t{\"(?:`[^`\\\\\\\\]*(?:\\\\\\\\.[^`\\\\\\\\]*)*`)|(?:(?:[a-zA-z]|[_.][^0-9])[\\\\w_.]*)\", Name, nil},\n-\t\t},\n-\t\t\"punctuation\": {\n-\t\t\t{`\\[{1,2}|\\]{1,2}|\\(|\\)|;|,`, Punctuation, nil},\n-\t\t},\n-\t\t\"keywords\": {\n-\t\t\t{`(if|else|for|while|repeat|in|next|break|return|switch|function)(?![\\w.])`, KeywordReserved, nil},\n-\t\t},\n-\t\t\"operators\": {\n-\t\t\t{`<<?-|->>?|-|==|<=|>=|<|>|&&?|!=|\\|\\|?|\\?`, Operator, nil},\n-\t\t\t{`\\*|\\+|\\^|/|!|%[^%]*%|=|~|\\$|@|:{1,3}`, Operator, nil},\n-\t\t},\n-\t\t\"builtin_symbols\": {\n-\t\t\t{`(NULL|NA(_(integer|real|complex|character)_)?|letters|LETTERS|Inf|TRUE|FALSE|NaN|pi|\\.\\.(\\.|[0-9]+))(?![\\w.])`, KeywordConstant, nil},\n-\t\t\t{`(T|F)\\b`, NameBuiltinPseudo, nil},\n-\t\t},\n-\t\t\"numbers\": {\n-\t\t\t{`0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?`, LiteralNumberHex, nil},\n-\t\t\t{`[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+|\\.)([eE][+-]?[0-9]+)?[Li]?`, LiteralNumber, nil},\n-\t\t},\n-\t\t\"statements\": {\n-\t\t\tInclude(\"comments\"),\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\'`, LiteralString, Push(\"string_squote\")},\n-\t\t\t{`\\\"`, LiteralString, Push(\"string_dquote\")},\n-\t\t\tInclude(\"builtin_symbols\"),\n-\t\t\tInclude(\"valid_name\"),\n-\t\t\tInclude(\"numbers\"),\n-\t\t\tInclude(\"keywords\"),\n-\t\t\tInclude(\"punctuation\"),\n-\t\t\tInclude(\"operators\"),\n-\t\t},\n-\t\t\"root\": {\n-\t\t\t{\"((?:`[^`\\\\\\\\]*(?:\\\\\\\\.[^`\\\\\\\\]*)*`)|(?:(?:[a-zA-z]|[_.][^0-9])[\\\\w_.]*))\\\\s*(?=\\\\()\", NameFunction, nil},\n-\t\t\tInclude(\"statements\"),\n-\t\t\t{`\\{|\\}`, Punctuation, nil},\n-\t\t\t{`.`, Text, nil},\n-\t\t},\n-\t\t\"string_squote\": {\n-\t\t\t{`([^\\'\\\\]|\\\\.)*\\'`, LiteralString, Pop(1)},\n-\t\t},\n-\t\t\"string_dquote\": {\n-\t\t\t{`([^\"\\\\]|\\\\.)*\"`, LiteralString, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "3f4182747b9e6cacaf1083b1f8988f0feb104954",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/r/racket.go",
      "status": "removed",
      "additions": 0,
      "deletions": 106,
      "changes": 106,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Fracket.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Fracket.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Fracket.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,106 +0,0 @@\n-package r\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Racket lexer.\n-var Racket = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Racket\",\n-\t\tAliases:   []string{\"racket\", \"rkt\"},\n-\t\tFilenames: []string{\"*.rkt\", \"*.rktd\", \"*.rktl\"},\n-\t\tMimeTypes: []string{\"text/x-racket\", \"application/x-racket\"},\n-\t},\n-\tracketRules,\n-))\n-\n-func racketRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[)\\]}]`, Error, nil},\n-\t\t\t{`(?!\\Z)`, Text, Push(\"unquoted-datum\")},\n-\t\t},\n-\t\t\"datum\": {\n-\t\t\t{`(?s)#;|#![ /]([^\\\\\\n]|\\\\.)*`, Comment, nil},\n-\t\t\t{`;[^\\n\\r  ]*`, CommentSingle, nil},\n-\t\t\t{`#\\|`, CommentMultiline, Push(\"block-comment\")},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{\"(?i)(?:#e)?(?:#d)?(?:#e)?[-+]?\\\\d+(?=[()[\\\\]{}\\\",\\\\'`;\\\\s])\", LiteralNumberInteger, Pop(1)},\n-\t\t\t{\"(?i)(?:#e)?(?:#d)?(?:#e)?[-+]?(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([deflst][-+]?\\\\d+)?(?=[()[\\\\]{}\\\",\\\\'`;\\\\s])\", LiteralNumberFloat, Pop(1)},\n-\t\t\t{\"(?i)(?:#e)?(?:#d)?(?:#e)?[-+]?((?:(?:\\\\d+(?:/\\\\d+|\\\\.\\\\d*)?|\\\\.\\\\d+)(?:[defls][-+]?\\\\d+)?)([-+](?:(?:\\\\d+(?:/\\\\d+|\\\\.\\\\d*)?|\\\\.\\\\d+)(?:[defls][-+]?\\\\d+)?)?i)?|[-+](?:(?:\\\\d+(?:/\\\\d+|\\\\.\\\\d*)?|\\\\.\\\\d+)(?:[defls][-+]?\\\\d+)?)?i)(?=[()[\\\\]{}\\\",\\\\'`;\\\\s])\", LiteralNumber, Pop(1)},\n-\t\t\t{\"(?i)(#d)?((?:[-+]?(?:(?:(?:\\\\d+(?:/\\\\d+|\\\\.\\\\d*)?|\\\\.\\\\d+)|(?:\\\\d+#+(?:\\\\.#*|/\\\\d+#*)?|\\\\.\\\\d+#+|\\\\d+(?:\\\\.\\\\d*#+|/\\\\d+#+)))(?:[defls][-+]?\\\\d+)?)|[-+](?:(?:inf|nan)\\\\.[0f]))([-+](?:(?:(?:(?:\\\\d+(?:/\\\\d+|\\\\.\\\\d*)?|\\\\.\\\\d+)|(?:\\\\d+#+(?:\\\\.#*|/\\\\d+#*)?|\\\\.\\\\d+#+|\\\\d+(?:\\\\.\\\\d*#+|/\\\\d+#+)))(?:[defls][-+]?\\\\d+)?)|(?:(?:inf|nan)\\\\.[0f]))?i)?|[-+](?:(?:(?:(?:\\\\d+(?:/\\\\d+|\\\\.\\\\d*)?|\\\\.\\\\d+)|(?:\\\\d+#+(?:\\\\.#*|/\\\\d+#*)?|\\\\.\\\\d+#+|\\\\d+(?:\\\\.\\\\d*#+|/\\\\d+#+)))(?:[defls][-+]?\\\\d+)?)|(?:(?:inf|nan)\\\\.[0f]))?i|(?:[-+]?(?:(?:(?:\\\\d+(?:/\\\\d+|\\\\.\\\\d*)?|\\\\.\\\\d+)|(?:\\\\d+#+(?:\\\\.#*|/\\\\d+#*)?|\\\\.\\\\d+#+|\\\\d+(?:\\\\.\\\\d*#+|/\\\\d+#+)))(?:[defls][-+]?\\\\d+)?)|[-+](?:(?:inf|nan)\\\\.[0f]))@(?:[-+]?(?:(?:(?:\\\\d+(?:/\\\\d+|\\\\.\\\\d*)?|\\\\.\\\\d+)|(?:\\\\d+#+(?:\\\\.#*|/\\\\d+#*)?|\\\\.\\\\d+#+|\\\\d+(?:\\\\.\\\\d*#+|/\\\\d+#+)))(?:[defls][-+]?\\\\d+)?)|[-+](?:(?:inf|nan)\\\\.[0f])))(?=[()[\\\\]{}\\\",\\\\'`;\\\\s])\", LiteralNumberFloat, Pop(1)},\n-\t\t\t{\"(?i)(([-+]?(?:(?:\\\\d+(?:/\\\\d+|\\\\.\\\\d*)?|\\\\.\\\\d+)|(?:\\\\d+#+(?:\\\\.#*|/\\\\d+#*)?|\\\\.\\\\d+#+|\\\\d+(?:\\\\.\\\\d*#+|/\\\\d+#+)))t[-+]?\\\\d+)|[-+](inf|nan)\\\\.t)(?=[()[\\\\]{}\\\",\\\\'`;\\\\s])\", LiteralNumberFloat, Pop(1)},\n-\t\t\t{\"(?i)(#[ei])?#b(?:\\\\|[^|]*\\\\||\\\\\\\\[\\\\w\\\\W]|[^|\\\\\\\\()[\\\\]{}\\\",\\\\'`;\\\\s]+)+\", LiteralNumberBin, Pop(1)},\n-\t\t\t{\"(?i)(#[ei])?#o(?:\\\\|[^|]*\\\\||\\\\\\\\[\\\\w\\\\W]|[^|\\\\\\\\()[\\\\]{}\\\",\\\\'`;\\\\s]+)+\", LiteralNumberOct, Pop(1)},\n-\t\t\t{\"(?i)(#[ei])?#x(?:\\\\|[^|]*\\\\||\\\\\\\\[\\\\w\\\\W]|[^|\\\\\\\\()[\\\\]{}\\\",\\\\'`;\\\\s]+)+\", LiteralNumberHex, Pop(1)},\n-\t\t\t{\"(?i)(#d)?#i(?:\\\\|[^|]*\\\\||\\\\\\\\[\\\\w\\\\W]|[^|\\\\\\\\()[\\\\]{}\\\",\\\\'`;\\\\s]+)+\", LiteralNumberFloat, Pop(1)},\n-\t\t\t{`#?\"`, LiteralStringDouble, Push(\"#pop\", \"string\")},\n-\t\t\t{`#<<(.+)\\n(^(?!\\1$).*$\\n)*^\\1$`, LiteralStringHeredoc, Pop(1)},\n-\t\t\t{`#\\\\(u[\\da-fA-F]{1,4}|U[\\da-fA-F]{1,8})`, LiteralStringChar, Pop(1)},\n-\t\t\t{`(?is)#\\\\([0-7]{3}|[a-z]+|.)`, LiteralStringChar, Pop(1)},\n-\t\t\t{`(?s)#[pr]x#?\"(\\\\?.)*?\"`, LiteralStringRegex, Pop(1)},\n-\t\t\t{`#(true|false|[tTfF])`, NameConstant, Pop(1)},\n-\t\t\t{\"#:(?:\\\\|[^|]*\\\\||\\\\\\\\[\\\\w\\\\W]|[^|\\\\\\\\()[\\\\]{}\\\",\\\\'`;\\\\s]+)+\", KeywordDeclaration, Pop(1)},\n-\t\t\t{`(#lang |#!)(\\S+)`, ByGroups(KeywordNamespace, NameNamespace), nil},\n-\t\t\t{`#reader`, KeywordNamespace, Push(\"quoted-datum\")},\n-\t\t\t{\"(?i)\\\\.(?=[()[\\\\]{}\\\",\\\\'`;\\\\s])|#c[is]|#['`]|#,@?\", Operator, nil},\n-\t\t\t{`'|#[s&]|#hash(eqv?)?|#\\d*(?=[([{])`, Operator, Push(\"#pop\", \"quoted-datum\")},\n-\t\t},\n-\t\t\"datum*\": {\n-\t\t\t{\"`|,@?\", Operator, nil},\n-\t\t\t{\"(?:\\\\|[^|]*\\\\||\\\\\\\\[\\\\w\\\\W]|[^|\\\\\\\\()[\\\\]{}\\\",\\\\'`;\\\\s]+)+\", LiteralStringSymbol, Pop(1)},\n-\t\t\t{`[|\\\\]`, Error, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"list\": {\n-\t\t\t{`[)\\]}]`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"unquoted-datum\": {\n-\t\t\tInclude(\"datum\"),\n-\t\t\t{\"quote(?=[()[\\\\]{}\\\",\\\\'`;\\\\s])\", Keyword, Push(\"#pop\", \"quoted-datum\")},\n-\t\t\t{\"`\", Operator, Push(\"#pop\", \"quasiquoted-datum\")},\n-\t\t\t{\"quasiquote(?=[()[\\\\]{}\\\",\\\\'`;\\\\s])\", Keyword, Push(\"#pop\", \"quasiquoted-datum\")},\n-\t\t\t{`[([{]`, Punctuation, Push(\"#pop\", \"unquoted-list\")},\n-\t\t\t{Words(``, \"(?=[()[\\\\]{}\\\",\\\\'`;\\\\s])\", `#%app`, `#%datum`, `#%declare`, `#%expression`, `#%module-begin`, `#%plain-app`, `#%plain-lambda`, `#%plain-module-begin`, `#%printing-module-begin`, `#%provide`, `#%require`, `#%stratified-body`, `#%top`, `#%top-interaction`, `#%variable-reference`, `->`, `->*`, `->*m`, `->d`, `->dm`, `->i`, `->m`, `...`, `:do-in`, `==`, `=>`, `_`, `absent`, `abstract`, `all-defined-out`, `all-from-out`, `and`, `any`, `augment`, `augment*`, `augment-final`, `augment-final*`, `augride`, `augride*`, `begin`, `begin-for-syntax`, `begin0`, `case`, `case->`, `case->m`, `case-lambda`, `class`, `class*`, `class-field-accessor`, `class-field-mutator`, `class/c`, `class/derived`, `combine-in`, `combine-out`, `command-line`, `compound-unit`, `compound-unit/infer`, `cond`, `cons/dc`, `contract`, `contract-out`, `contract-struct`, `contracted`, `define`, `define-compound-unit`, `define-compound-unit/infer`, `define-contract-struct`, `define-custom-hash-types`, `define-custom-set-types`, `define-for-syntax`, `define-local-member-name`, `define-logger`, `define-match-expander`, `define-member-name`, `define-module-boundary-contract`, `define-namespace-anchor`, `define-opt/c`, `define-sequence-syntax`, `define-serializable-class`, `define-serializable-class*`, `define-signature`, `define-signature-form`, `define-struct`, `define-struct/contract`, `define-struct/derived`, `define-syntax`, `define-syntax-rule`, `define-syntaxes`, `define-unit`, `define-unit-binding`, `define-unit-from-context`, `define-unit/contract`, `define-unit/new-import-export`, `define-unit/s`, `define-values`, `define-values-for-export`, `define-values-for-syntax`, `define-values/invoke-unit`, `define-values/invoke-unit/infer`, `define/augment`, `define/augment-final`, `define/augride`, `define/contract`, `define/final-prop`, `define/match`, `define/overment`, `define/override`, `define/override-final`, `define/private`, `define/public`, `define/public-final`, `define/pubment`, `define/subexpression-pos-prop`, `define/subexpression-pos-prop/name`, `delay`, `delay/idle`, `delay/name`, `delay/strict`, `delay/sync`, `delay/thread`, `do`, `else`, `except`, `except-in`, `except-out`, `export`, `extends`, `failure-cont`, `false`, `false/c`, `field`, `field-bound?`, `file`, `flat-murec-contract`, `flat-rec-contract`, `for`, `for*`, `for*/and`, `for*/async`, `for*/first`, `for*/fold`, `for*/fold/derived`, `for*/hash`, `for*/hasheq`, `for*/hasheqv`, `for*/last`, `for*/list`, `for*/lists`, `for*/mutable-set`, `for*/mutable-seteq`, `for*/mutable-seteqv`, `for*/or`, `for*/product`, `for*/set`, `for*/seteq`, `for*/seteqv`, `for*/stream`, `for*/sum`, `for*/vector`, `for*/weak-set`, `for*/weak-seteq`, `for*/weak-seteqv`, `for-label`, `for-meta`, `for-syntax`, `for-template`, `for/and`, `for/async`, `for/first`, `for/fold`, `for/fold/derived`, `for/hash`, `for/hasheq`, `for/hasheqv`, `for/last`, `for/list`, `for/lists`, `for/mutable-set`, `for/mutable-seteq`, `for/mutable-seteqv`, `for/or`, `for/product`, `for/set`, `for/seteq`, `for/seteqv`, `for/stream`, `for/sum`, `for/vector`, `for/weak-set`, `for/weak-seteq`, `for/weak-seteqv`, `gen:custom-write`, `gen:dict`, `gen:equal+hash`, `gen:set`, `gen:stream`, `generic`, `get-field`, `hash/dc`, `if`, `implies`, `import`, `include`, `include-at/relative-to`, `include-at/relative-to/reader`, `include/reader`, `inherit`, `inherit-field`, `inherit/inner`, `inherit/super`, `init`, `init-depend`, `init-field`, `init-rest`, `inner`, `inspect`, `instantiate`, `interface`, `interface*`, `invariant-assertion`, `invoke-unit`, `invoke-unit/infer`, `lambda`, `lazy`, `let`, `let*`, `let*-values`, `let-syntax`, `let-syntaxes`, `let-values`, `let/cc`, `let/ec`, `letrec`, `letrec-syntax`, `letrec-syntaxes`, `letrec-syntaxes+values`, `letrec-values`, `lib`, `link`, `local`, `local-require`, `log-debug`, `log-error`, `log-fatal`, `log-info`, `log-warning`, `match`, `match*`, `match*/derived`, `match-define`, `match-define-values`, `match-lambda`, `match-lambda*`, `match-lambda**`, `match-let`, `match-let*`, `match-let*-values`, `match-let-values`, `match-letrec`, `match-letrec-values`, `match/derived`, `match/values`, `member-name-key`, `mixin`, `module`, `module*`, `module+`, `nand`, `new`, `nor`, `object-contract`, `object/c`, `only`, `only-in`, `only-meta-in`, `open`, `opt/c`, `or`, `overment`, `overment*`, `override`, `override*`, `override-final`, `override-final*`, `parameterize`, `parameterize*`, `parameterize-break`, `parametric->/c`, `place`, `place*`, `place/context`, `planet`, `prefix`, `prefix-in`, `prefix-out`, `private`, `private*`, `prompt-tag/c`, `protect-out`, `provide`, `provide-signature-elements`, `provide/contract`, `public`, `public*`, `public-final`, `public-final*`, `pubment`, `pubment*`, `quasiquote`, `quasisyntax`, `quasisyntax/loc`, `quote`, `quote-syntax`, `quote-syntax/prune`, `recontract-out`, `recursive-contract`, `relative-in`, `rename`, `rename-in`, `rename-inner`, `rename-out`, `rename-super`, `require`, `send`, `send*`, `send+`, `send-generic`, `send/apply`, `send/keyword-apply`, `set!`, `set!-values`, `set-field!`, `shared`, `stream`, `stream*`, `stream-cons`, `struct`, `struct*`, `struct-copy`, `struct-field-index`, `struct-out`, `struct/c`, `struct/ctc`, `struct/dc`, `submod`, `super`, `super-instantiate`, `super-make-object`, `super-new`, `syntax`, `syntax-case`, `syntax-case*`, `syntax-id-rules`, `syntax-rules`, `syntax/loc`, `tag`, `this`, `this%`, `thunk`, `thunk*`, `time`, `unconstrained-domain->`, `unit`, `unit-from-context`, `unit/c`, `unit/new-import-export`, `unit/s`, `unless`, `unquote`, `unquote-splicing`, `unsyntax`, `unsyntax-splicing`, `values/drop`, `when`, `with-continuation-mark`, `with-contract`, `with-contract-continuation-mark`, `with-handlers`, `with-handlers*`, `with-method`, `with-syntax`, `λ`), Keyword, Pop(1)},\n-\t\t\t{Words(``, \"(?=[()[\\\\]{}\\\",\\\\'`;\\\\s])\", `*`, `*list/c`, `+`, `-`, `/`, `<`, `</c`, `<=`, `<=/c`, `=`, `=/c`, `>`, `>/c`, `>=`, `>=/c`, `abort-current-continuation`, `abs`, `absolute-path?`, `acos`, `add-between`, `add1`, `alarm-evt`, `always-evt`, `and/c`, `andmap`, `angle`, `any/c`, `append`, `append*`, `append-map`, `apply`, `argmax`, `argmin`, `arithmetic-shift`, `arity-at-least`, `arity-at-least-value`, `arity-at-least?`, `arity-checking-wrapper`, `arity-includes?`, `arity=?`, `arrow-contract-info`, `arrow-contract-info-accepts-arglist`, `arrow-contract-info-chaperone-procedure`, `arrow-contract-info-check-first-order`, `arrow-contract-info?`, `asin`, `assf`, `assoc`, `assq`, `assv`, `atan`, `bad-number-of-results`, `banner`, `base->-doms/c`, `base->-rngs/c`, `base->?`, `between/c`, `bitwise-and`, `bitwise-bit-field`, `bitwise-bit-set?`, `bitwise-ior`, `bitwise-not`, `bitwise-xor`, `blame-add-car-context`, `blame-add-cdr-context`, `blame-add-context`, `blame-add-missing-party`, `blame-add-nth-arg-context`, `blame-add-range-context`, `blame-add-unknown-context`, `blame-context`, `blame-contract`, `blame-fmt->-string`, `blame-missing-party?`, `blame-negative`, `blame-original?`, `blame-positive`, `blame-replace-negative`, `blame-source`, `blame-swap`, `blame-swapped?`, `blame-update`, `blame-value`, `blame?`, `boolean=?`, `boolean?`, `bound-identifier=?`, `box`, `box-cas!`, `box-immutable`, `box-immutable/c`, `box/c`, `box?`, `break-enabled`, `break-parameterization?`, `break-thread`, `build-chaperone-contract-property`, `build-compound-type-name`, `build-contract-property`, `build-flat-contract-property`, `build-list`, `build-path`, `build-path/convention-type`, `build-string`, `build-vector`, `byte-pregexp`, `byte-pregexp?`, `byte-ready?`, `byte-regexp`, `byte-regexp?`, `byte?`, `bytes`, `bytes->immutable-bytes`, `bytes->list`, `bytes->path`, `bytes->path-element`, `bytes->string/latin-1`, `bytes->string/locale`, `bytes->string/utf-8`, `bytes-append`, `bytes-append*`, `bytes-close-converter`, `bytes-convert`, `bytes-convert-end`, `bytes-converter?`, `bytes-copy`, `bytes-copy!`, `bytes-environment-variable-name?`, `bytes-fill!`, `bytes-join`, `bytes-length`, `bytes-no-nuls?`, `bytes-open-converter`, `bytes-ref`, `bytes-set!`, `bytes-utf-8-index`, `bytes-utf-8-length`, `bytes-utf-8-ref`, `bytes<?`, `bytes=?`, `bytes>?`, `bytes?`, `caaaar`, `caaadr`, `caaar`, `caadar`, `caaddr`, `caadr`, `caar`, `cadaar`, `cadadr`, `cadar`, `caddar`, `cadddr`, `caddr`, `cadr`, `call-in-nested-thread`, `call-with-atomic-output-file`, `call-with-break-parameterization`, `call-with-composable-continuation`, `call-with-continuation-barrier`, `call-with-continuation-prompt`, `call-with-current-continuation`, `call-with-default-reading-parameterization`, `call-with-escape-continuation`, `call-with-exception-handler`, `call-with-file-lock/timeout`, `call-with-immediate-continuation-mark`, `call-with-input-bytes`, `call-with-input-file`, `call-with-input-file*`, `call-with-input-string`, `call-with-output-bytes`, `call-with-output-file`, `call-with-output-file*`, `call-with-output-string`, `call-with-parameterization`, `call-with-semaphore`, `call-with-semaphore/enable-break`, `call-with-values`, `call/cc`, `call/ec`, `car`, `cartesian-product`, `cdaaar`, `cdaadr`, `cdaar`, `cdadar`, `cdaddr`, `cdadr`, `cdar`, `cddaar`, `cddadr`, `cddar`, `cdddar`, `cddddr`, `cdddr`, `cddr`, `cdr`, `ceiling`, `channel-get`, `channel-put`, `channel-put-evt`, `channel-put-evt?`, `channel-try-get`, `channel/c`, `channel?`, `chaperone-box`, `chaperone-channel`, `chaperone-continuation-mark-key`, `chaperone-contract-property?`, `chaperone-contract?`, `chaperone-evt`, `chaperone-hash`, `chaperone-hash-set`, `chaperone-of?`, `chaperone-procedure`, `chaperone-procedure*`, `chaperone-prompt-tag`, `chaperone-struct`, `chaperone-struct-type`, `chaperone-vector`, `chaperone?`, `char->integer`, `char-alphabetic?`, `char-blank?`, `char-ci<=?`, `char-ci<?`, `char-ci=?`, `char-ci>=?`, `char-ci>?`, `char-downcase`, `char-foldcase`, `char-general-category`, `char-graphic?`, `char-in`, `char-in/c`, `char-iso-control?`, `char-lower-case?`, `char-numeric?`, `char-punctuation?`, `char-ready?`, `char-symbolic?`, `char-title-case?`, `char-titlecase`, `char-upcase`, `char-upper-case?`, `char-utf-8-length`, `char-whitespace?`, `char<=?`, `char<?`, `char=?`, `char>=?`, `char>?`, `char?`, `check-duplicate-identifier`, `check-duplicates`, `checked-procedure-check-and-extract`, `choice-evt`, `class->interface`, `class-info`, `class-seal`, `class-unseal`, `class?`, `cleanse-path`, `close-input-port`, `close-output-port`, `coerce-chaperone-contract`, `coerce-chaperone-contracts`, `coerce-contract`, `coerce-contract/f`, `coerce-contracts`, `coerce-flat-contract`, `coerce-flat-contracts`, `collect-garbage`, `collection-file-path`, `collection-path`, `combinations`, `compile`, `compile-allow-set!-undefined`, `compile-context-preservation-enabled`, `compile-enforce-module-constants`, `compile-syntax`, `compiled-expression-recompile`, `compiled-expression?`, `compiled-module-expression?`, `complete-path?`, `complex?`, `compose`, `compose1`, `conjoin`, `conjugate`, `cons`, `cons/c`, `cons?`, `const`, `continuation-mark-key/c`, `continuation-mark-key?`, `continuation-mark-set->context`, `continuation-mark-set->list`, `continuation-mark-set->list*`, `continuation-mark-set-first`, `continuation-mark-set?`, `continuation-marks`, `continuation-prompt-available?`, `continuation-prompt-tag?`, `continuation?`, `contract-continuation-mark-key`, `contract-custom-write-property-proc`, `contract-exercise`, `contract-first-order`, `contract-first-order-passes?`, `contract-late-neg-projection`, `contract-name`, `contract-proc`, `contract-projection`, `contract-property?`, `contract-random-generate`, `contract-random-generate-fail`, `contract-random-generate-fail?`, `contract-random-generate-get-current-environment`, `contract-random-generate-stash`, `contract-random-generate/choose`, `contract-stronger?`, `contract-struct-exercise`, `contract-struct-generate`, `contract-struct-late-neg-projection`, `contract-struct-list-contract?`, `contract-val-first-projection`, `contract?`, `convert-stream`, `copy-directory/files`, `copy-file`, `copy-port`, `cos`, `cosh`, `count`, `current-blame-format`, `current-break-parameterization`, `current-code-inspector`, `current-command-line-arguments`, `current-compile`, `current-compiled-file-roots`, `current-continuation-marks`, `current-contract-region`, `current-custodian`, `current-directory`, `current-directory-for-user`, `current-drive`, `current-environment-variables`, `current-error-port`, `current-eval`, `current-evt-pseudo-random-generator`, `current-force-delete-permissions`, `current-future`, `current-gc-milliseconds`, `current-get-interaction-input-port`, `current-inexact-milliseconds`, `current-input-port`, `current-inspector`, `current-library-collection-links`, `current-library-collection-paths`, `current-load`, `current-load-extension`, `current-load-relative-directory`, `current-load/use-compiled`, `current-locale`, `current-logger`, `current-memory-use`, `current-milliseconds`, `current-module-declare-name`, `current-module-declare-source`, `current-module-name-resolver`, `current-module-path-for-load`, `current-namespace`, `current-output-port`, `current-parameterization`, `current-plumber`, `current-preserved-thread-cell-values`, `current-print`, `current-process-milliseconds`, `current-prompt-read`, `current-pseudo-random-generator`, `current-read-interaction`, `current-reader-guard`, `current-readtable`, `current-seconds`, `current-security-guard`, `current-subprocess-custodian-mode`, `current-thread`, `current-thread-group`, `current-thread-initial-stack-size`, `current-write-relative-directory`, `curry`, `curryr`, `custodian-box-value`, `custodian-box?`, `custodian-limit-memory`, `custodian-managed-list`, `custodian-memory-accounting-available?`, `custodian-require-memory`, `custodian-shutdown-all`, `custodian?`, `custom-print-quotable-accessor`, `custom-print-quotable?`, `custom-write-accessor`, `custom-write-property-proc`, `custom-write?`, `date`, `date*`, `date*-nanosecond`, `date*-time-zone-name`, `date*?`, `date-day`, `date-dst?`, `date-hour`, `date-minute`, `date-month`, `date-second`, `date-time-zone-offset`, `date-week-day`, `date-year`, `date-year-day`, `date?`, `datum->syntax`, `datum-intern-literal`, `default-continuation-prompt-tag`, `degrees->radians`, `delete-directory`, `delete-directory/files`, `delete-file`, `denominator`, `dict->list`, `dict-can-functional-set?`, `dict-can-remove-keys?`, `dict-clear`, `dict-clear!`, `dict-copy`, `dict-count`, `dict-empty?`, `dict-for-each`, `dict-has-key?`, `dict-implements/c`, `dict-implements?`, `dict-iter-contract`, `dict-iterate-first`, `dict-iterate-key`, `dict-iterate-next`, `dict-iterate-value`, `dict-key-contract`, `dict-keys`, `dict-map`, `dict-mutable?`, `dict-ref`, `dict-ref!`, `dict-remove`, `dict-remove!`, `dict-set`, `dict-set!`, `dict-set*`, `dict-set*!`, `dict-update`, `dict-update!`, `dict-value-contract`, `dict-values`, `dict?`, `directory-exists?`, `directory-list`, `disjoin`, `display`, `display-lines`, `display-lines-to-file`, `display-to-file`, `displayln`, `double-flonum?`, `drop`, `drop-common-prefix`, `drop-right`, `dropf`, `dropf-right`, `dump-memory-stats`, `dup-input-port`, `dup-output-port`, `dynamic->*`, `dynamic-get-field`, `dynamic-object/c`, `dynamic-place`, `dynamic-place*`, `dynamic-require`, `dynamic-require-for-syntax`, `dynamic-send`, `dynamic-set-field!`, `dynamic-wind`, `eighth`, `empty`, `empty-sequence`, `empty-stream`, `empty?`, `environment-variables-copy`, `environment-variables-names`, `environment-variables-ref`, `environment-variables-set!`, `environment-variables?`, `eof`, `eof-evt`, `eof-object?`, `ephemeron-value`, `ephemeron?`, `eprintf`, `eq-contract-val`, `eq-contract?`, `eq-hash-code`, `eq?`, `equal-contract-val`, `equal-contract?`, `equal-hash-code`, `equal-secondary-hash-code`, `equal<%>`, `equal?`, `equal?/recur`, `eqv-hash-code`, `eqv?`, `error`, `error-display-handler`, `error-escape-handler`, `error-print-context-length`, `error-print-source-location`, `error-print-width`, `error-value->string-handler`, `eval`, `eval-jit-enabled`, `eval-syntax`, `even?`, `evt/c`, `evt?`, `exact->inexact`, `exact-ceiling`, `exact-floor`, `exact-integer?`, `exact-nonnegative-integer?`, `exact-positive-integer?`, `exact-round`, `exact-truncate`, `exact?`, `executable-yield-handler`, `exit`, `exit-handler`, `exn`, `exn-continuation-marks`, `exn-message`, `exn:break`, `exn:break-continuation`, `exn:break:hang-up`, `exn:break:hang-up?`, `exn:break:terminate`, `exn:break:terminate?`, `exn:break?`, `exn:fail`, `exn:fail:contract`, `exn:fail:contract:arity`, `exn:fail:contract:arity?`, `exn:fail:contract:blame`, `exn:fail:contract:blame-object`, `exn:fail:contract:blame?`, `exn:fail:contract:continuation`, `exn:fail:contract:continuation?`, `exn:fail:contract:divide-by-zero`, `exn:fail:contract:divide-by-zero?`, `exn:fail:contract:non-fixnum-result`, `exn:fail:contract:non-fixnum-result?`, `exn:fail:contract:variable`, `exn:fail:contract:variable-id`, `exn:fail:contract:variable?`, `exn:fail:contract?`, `exn:fail:filesystem`, `exn:fail:filesystem:errno`, `exn:fail:filesystem:errno-errno`, `exn:fail:filesystem:errno?`, `exn:fail:filesystem:exists`, `exn:fail:filesystem:exists?`, `exn:fail:filesystem:missing-module`, `exn:fail:filesystem:missing-module-path`, `exn:fail:filesystem:missing-module?`, `exn:fail:filesystem:version`, `exn:fail:filesystem:version?`, `exn:fail:filesystem?`, `exn:fail:network`, `exn:fail:network:errno`, `exn:fail:network:errno-errno`, `exn:fail:network:errno?`, `exn:fail:network?`, `exn:fail:object`, `exn:fail:object?`, `exn:fail:out-of-memory`, `exn:fail:out-of-memory?`, `exn:fail:read`, `exn:fail:read-srclocs`, `exn:fail:read:eof`, `exn:fail:read:eof?`, `exn:fail:read:non-char`, `exn:fail:read:non-char?`, `exn:fail:read?`, `exn:fail:syntax`, `exn:fail:syntax-exprs`, `exn:fail:syntax:missing-module`, `exn:fail:syntax:missing-module-path`, `exn:fail:syntax:missing-module?`, `exn:fail:syntax:unbound`, `exn:fail:syntax:unbound?`, `exn:fail:syntax?`, `exn:fail:unsupported`, `exn:fail:unsupported?`, `exn:fail:user`, `exn:fail:user?`, `exn:fail?`, `exn:misc:match?`, `exn:missing-module-accessor`, `exn:missing-module?`, `exn:srclocs-accessor`, `exn:srclocs?`, `exn?`, `exp`, `expand`, `expand-once`, `expand-syntax`, `expand-syntax-once`, `expand-syntax-to-top-form`, `expand-to-top-form`, `expand-user-path`, `explode-path`, `expt`, `externalizable<%>`, `failure-result/c`, `false?`, `field-names`, `fifth`, `file->bytes`, `file->bytes-lines`, `file->lines`, `file->list`, `file->string`, `file->value`, `file-exists?`, `file-name-from-path`, `file-or-directory-identity`, `file-or-directory-modify-seconds`, `file-or-directory-permissions`, `file-position`, `file-position*`, `file-size`, `file-stream-buffer-mode`, `file-stream-port?`, `file-truncate`, `filename-extension`, `filesystem-change-evt`, `filesystem-change-evt-cancel`, `filesystem-change-evt?`, `filesystem-root-list`, `filter`, `filter-map`, `filter-not`, `filter-read-input-port`, `find-executable-path`, `find-files`, `find-library-collection-links`, `find-library-collection-paths`, `find-relative-path`, `find-system-path`, `findf`, `first`, `first-or/c`, `fixnum?`, `flat-contract`, `flat-contract-predicate`, `flat-contract-property?`, `flat-contract?`, `flat-named-contract`, `flatten`, `floating-point-bytes->real`, `flonum?`, `floor`, `flush-output`, `fold-files`, `foldl`, `foldr`, `for-each`, `force`, `format`, `fourth`, `fprintf`, `free-identifier=?`, `free-label-identifier=?`, `free-template-identifier=?`, `free-transformer-identifier=?`, `fsemaphore-count`, `fsemaphore-post`, `fsemaphore-try-wait?`, `fsemaphore-wait`, `fsemaphore?`, `future`, `future?`, `futures-enabled?`, `gcd`, `generate-member-key`, `generate-temporaries`, `generic-set?`, `generic?`, `gensym`, `get-output-bytes`, `get-output-string`, `get-preference`, `get/build-late-neg-projection`, `get/build-val-first-projection`, `getenv`, `global-port-print-handler`, `group-by`, `group-execute-bit`, `group-read-bit`, `group-write-bit`, `guard-evt`, `handle-evt`, `handle-evt?`, `has-blame?`, `has-contract?`, `hash`, `hash->list`, `hash-clear`, `hash-clear!`, `hash-copy`, `hash-copy-clear`, `hash-count`, `hash-empty?`, `hash-eq?`, `hash-equal?`, `hash-eqv?`, `hash-for-each`, `hash-has-key?`, `hash-iterate-first`, `hash-iterate-key`, `hash-iterate-key+value`, `hash-iterate-next`, `hash-iterate-pair`, `hash-iterate-value`, `hash-keys`, `hash-map`, `hash-placeholder?`, `hash-ref`, `hash-ref!`, `hash-remove`, `hash-remove!`, `hash-set`, `hash-set!`, `hash-set*`, `hash-set*!`, `hash-update`, `hash-update!`, `hash-values`, `hash-weak?`, `hash/c`, `hash?`, `hasheq`, `hasheqv`, `identifier-binding`, `identifier-binding-symbol`, `identifier-label-binding`, `identifier-prune-lexical-context`, `identifier-prune-to-source-module`, `identifier-remove-from-definition-context`, `identifier-template-binding`, `identifier-transformer-binding`, `identifier?`, `identity`, `if/c`, `imag-part`, `immutable?`, `impersonate-box`, `impersonate-channel`, `impersonate-continuation-mark-key`, `impersonate-hash`, `impersonate-hash-set`, `impersonate-procedure`, `impersonate-procedure*`, `impersonate-prompt-tag`, `impersonate-struct`, `impersonate-vector`, `impersonator-contract?`, `impersonator-ephemeron`, `impersonator-of?`, `impersonator-prop:application-mark`, `impersonator-prop:blame`, `impersonator-prop:contracted`, `impersonator-property-accessor-procedure?`, `impersonator-property?`, `impersonator?`, `implementation?`, `implementation?/c`, `in-bytes`, `in-bytes-lines`, `in-combinations`, `in-cycle`, `in-dict`, `in-dict-keys`, `in-dict-pairs`, `in-dict-values`, `in-directory`, `in-hash`, `in-hash-keys`, `in-hash-pairs`, `in-hash-values`, `in-immutable-hash`, `in-immutable-hash-keys`, `in-immutable-hash-pairs`, `in-immutable-hash-values`, `in-immutable-set`, `in-indexed`, `in-input-port-bytes`, `in-input-port-chars`, `in-lines`, `in-list`, `in-mlist`, `in-mutable-hash`, `in-mutable-hash-keys`, `in-mutable-hash-pairs`, `in-mutable-hash-values`, `in-mutable-set`, `in-naturals`, `in-parallel`, `in-permutations`, `in-port`, `in-producer`, `in-range`, `in-sequences`, `in-set`, `in-slice`, `in-stream`, `in-string`, `in-syntax`, `in-value`, `in-values*-sequence`, `in-values-sequence`, `in-vector`, `in-weak-hash`, `in-weak-hash-keys`, `in-weak-hash-pairs`, `in-weak-hash-values`, `in-weak-set`, `inexact->exact`, `inexact-real?`, `inexact?`, `infinite?`, `input-port-append`, `input-port?`, `inspector?`, `instanceof/c`, `integer->char`, `integer->integer-bytes`, `integer-bytes->integer`, `integer-in`, `integer-length`, `integer-sqrt`, `integer-sqrt/remainder`, `integer?`, `interface->method-names`, `interface-extension?`, `interface?`, `internal-definition-context-binding-identifiers`, `internal-definition-context-introduce`, `internal-definition-context-seal`, `internal-definition-context?`, `is-a?`, `is-a?/c`, `keyword->string`, `keyword-apply`, `keyword<?`, `keyword?`, `keywords-match`, `kill-thread`, `last`, `last-pair`, `lcm`, `length`, `liberal-define-context?`, `link-exists?`, `list`, `list*`, `list*of`, `list->bytes`, `list->mutable-set`, `list->mutable-seteq`, `list->mutable-seteqv`, `list->set`, `list->seteq`, `list->seteqv`, `list->string`, `list->vector`, `list->weak-set`, `list->weak-seteq`, `list->weak-seteqv`, `list-contract?`, `list-prefix?`, `list-ref`, `list-set`, `list-tail`, `list-update`, `list/c`, `list?`, `listen-port-number?`, `listof`, `load`, `load-extension`, `load-on-demand-enabled`, `load-relative`, `load-relative-extension`, `load/cd`, `load/use-compiled`, `local-expand`, `local-expand/capture-lifts`, `local-transformer-expand`, `local-transformer-expand/capture-lifts`, `locale-string-encoding`, `log`, `log-all-levels`, `log-level-evt`, `log-level?`, `log-max-level`, `log-message`, `log-receiver?`, `logger-name`, `logger?`, `magnitude`, `make-arity-at-least`, `make-base-empty-namespace`, `make-base-namespace`, `make-bytes`, `make-channel`, `make-chaperone-contract`, `make-continuation-mark-key`, `make-continuation-prompt-tag`, `make-contract`, `make-custodian`, `make-custodian-box`, `make-custom-hash`, `make-custom-hash-types`, `make-custom-set`, `make-custom-set-types`, `make-date`, `make-date*`, `make-derived-parameter`, `make-directory`, `make-directory*`, `make-do-sequence`, `make-empty-namespace`, `make-environment-variables`, `make-ephemeron`, `make-exn`, `make-exn:break`, `make-exn:break:hang-up`, `make-exn:break:terminate`, `make-exn:fail`, `make-exn:fail:contract`, `make-exn:fail:contract:arity`, `make-exn:fail:contract:blame`, `make-exn:fail:contract:continuation`, `make-exn:fail:contract:divide-by-zero`, `make-exn:fail:contract:non-fixnum-result`, `make-exn:fail:contract:variable`, `make-exn:fail:filesystem`, `make-exn:fail:filesystem:errno`, `make-exn:fail:filesystem:exists`, `make-exn:fail:filesystem:missing-module`, `make-exn:fail:filesystem:version`, `make-exn:fail:network`, `make-exn:fail:network:errno`, `make-exn:fail:object`, `make-exn:fail:out-of-memory`, `make-exn:fail:read`, `make-exn:fail:read:eof`, `make-exn:fail:read:non-char`, `make-exn:fail:syntax`, `make-exn:fail:syntax:missing-module`, `make-exn:fail:syntax:unbound`, `make-exn:fail:unsupported`, `make-exn:fail:user`, `make-file-or-directory-link`, `make-flat-contract`, `make-fsemaphore`, `make-generic`, `make-handle-get-preference-locked`, `make-hash`, `make-hash-placeholder`, `make-hasheq`, `make-hasheq-placeholder`, `make-hasheqv`, `make-hasheqv-placeholder`, `make-immutable-custom-hash`, `make-immutable-hash`, `make-immutable-hasheq`, `make-immutable-hasheqv`, `make-impersonator-property`, `make-input-port`, `make-input-port/read-to-peek`, `make-inspector`, `make-keyword-procedure`, `make-known-char-range-list`, `make-limited-input-port`, `make-list`, `make-lock-file-name`, `make-log-receiver`, `make-logger`, `make-mixin-contract`, `make-mutable-custom-set`, `make-none/c`, `make-object`, `make-output-port`, `make-parameter`, `make-parent-directory*`, `make-phantom-bytes`, `make-pipe`, `make-pipe-with-specials`, `make-placeholder`, `make-plumber`, `make-polar`, `make-prefab-struct`, `make-primitive-class`, `make-proj-contract`, `make-pseudo-random-generator`, `make-reader-graph`, `make-readtable`, `make-rectangular`, `make-rename-transformer`, `make-resolved-module-path`, `make-security-guard`, `make-semaphore`, `make-set!-transformer`, `make-shared-bytes`, `make-sibling-inspector`, `make-special-comment`, `make-srcloc`, `make-string`, `make-struct-field-accessor`, `make-struct-field-mutator`, `make-struct-type`, `make-struct-type-property`, `make-syntax-delta-introducer`, `make-syntax-introducer`, `make-temporary-file`, `make-tentative-pretty-print-output-port`, `make-thread-cell`, `make-thread-group`, `make-vector`, `make-weak-box`, `make-weak-custom-hash`, `make-weak-custom-set`, `make-weak-hash`, `make-weak-hasheq`, `make-weak-hasheqv`, `make-will-executor`, `map`, `match-equality-test`, `matches-arity-exactly?`, `max`, `mcar`, `mcdr`, `mcons`, `member`, `member-name-key-hash-code`, `member-name-key=?`, `member-name-key?`, `memf`, `memq`, `memv`, `merge-input`, `method-in-interface?`, `min`, `mixin-contract`, `module->exports`, `module->imports`, `module->language-info`, `module->namespace`, `module-compiled-cross-phase-persistent?`, `module-compiled-exports`, `module-compiled-imports`, `module-compiled-language-info`, `module-compiled-name`, `module-compiled-submodules`, `module-declared?`, `module-path-index-join`, `module-path-index-resolve`, `module-path-index-split`, `module-path-index-submodule`, `module-path-index?`, `module-path?`, `module-predefined?`, `module-provide-protected?`, `modulo`, `mpair?`, `mutable-set`, `mutable-seteq`, `mutable-seteqv`, `n->th`, `nack-guard-evt`, `namespace-anchor->empty-namespace`, `namespace-anchor->namespace`, `namespace-anchor?`, `namespace-attach-module`, `namespace-attach-module-declaration`, `namespace-base-phase`, `namespace-mapped-symbols`, `namespace-module-identifier`, `namespace-module-registry`, `namespace-require`, `namespace-require/constant`, `namespace-require/copy`, `namespace-require/expansion-time`, `namespace-set-variable-value!`, `namespace-symbol->identifier`, `namespace-syntax-introduce`, `namespace-undefine-variable!`, `namespace-unprotect-module`, `namespace-variable-value`, `namespace?`, `nan?`, `natural-number/c`, `negate`, `negative?`, `never-evt`, `new-∀/c`, `new-∃/c`, `newline`, `ninth`, `non-empty-listof`, `non-empty-string?`, `none/c`, `normal-case-path`, `normalize-arity`, `normalize-path`, `normalized-arity?`, `not`, `not/c`, `null`, `null?`, `number->string`, `number?`, `numerator`, `object%`, `object->vector`, `object-info`, `object-interface`, `object-method-arity-includes?`, `object-name`, `object-or-false=?`, `object=?`, `object?`, `odd?`, `one-of/c`, `open-input-bytes`, `open-input-file`, `open-input-output-file`, `open-input-string`, `open-output-bytes`, `open-output-file`, `open-output-nowhere`, `open-output-string`, `or/c`, `order-of-magnitude`, `ormap`, `other-execute-bit`, `other-read-bit`, `other-write-bit`, `output-port?`, `pair?`, `parameter-procedure=?`, `parameter/c`, `parameter?`, `parameterization?`, `parse-command-line`, `partition`, `path->bytes`, `path->complete-path`, `path->directory-path`, `path->string`, `path-add-suffix`, `path-convention-type`, `path-element->bytes`, `path-element->string`, `path-element?`, `path-for-some-system?`, `path-list-string->path-list`, `path-only`, `path-replace-suffix`, `path-string?`, `path<?`, `path?`, `pathlist-closure`, `peek-byte`, `peek-byte-or-special`, `peek-bytes`, `peek-bytes!`, `peek-bytes!-evt`, `peek-bytes-avail!`, `peek-bytes-avail!*`, `peek-bytes-avail!-evt`, `peek-bytes-avail!/enable-break`, `peek-bytes-evt`, `peek-char`, `peek-char-or-special`, `peek-string`, `peek-string!`, `peek-string!-evt`, `peek-string-evt`, `peeking-input-port`, `permutations`, `phantom-bytes?`, `pi`, `pi.f`, `pipe-content-length`, `place-break`, `place-channel`, `place-channel-get`, `place-channel-put`, `place-channel-put/get`, `place-channel?`, `place-dead-evt`, `place-enabled?`, `place-kill`, `place-location?`, `place-message-allowed?`, `place-sleep`, `place-wait`, `place?`, `placeholder-get`, `placeholder-set!`, `placeholder?`, `plumber-add-flush!`, `plumber-flush-all`, `plumber-flush-handle-remove!`, `plumber-flush-handle?`, `plumber?`, `poll-guard-evt`, `port->bytes`, `port->bytes-lines`, `port->lines`, `port->list`, `port->string`, `port-closed-evt`, `port-closed?`, `port-commit-peeked`, `port-count-lines!`, `port-count-lines-enabled`, `port-counts-lines?`, `port-display-handler`, `port-file-identity`, `port-file-unlock`, `port-next-location`, `port-number?`, `port-print-handler`, `port-progress-evt`, `port-provides-progress-evts?`, `port-read-handler`, `port-try-file-lock?`, `port-write-handler`, `port-writes-atomic?`, `port-writes-special?`, `port?`, `positive?`, `predicate/c`, `prefab-key->struct-type`, `prefab-key?`, `prefab-struct-key`, `preferences-lock-file-mode`, `pregexp`, `pregexp?`, `pretty-display`, `pretty-format`, `pretty-print`, `pretty-print-.-symbol-without-bars`, `pretty-print-abbreviate-read-macros`, `pretty-print-columns`, `pretty-print-current-style-table`, `pretty-print-depth`, `pretty-print-exact-as-decimal`, `pretty-print-extend-style-table`, `pretty-print-handler`, `pretty-print-newline`, `pretty-print-post-print-hook`, `pretty-print-pre-print-hook`, `pretty-print-print-hook`, `pretty-print-print-line`, `pretty-print-remap-stylable`, `pretty-print-show-inexactness`, `pretty-print-size-hook`, `pretty-print-style-table?`, `pretty-printing`, `pretty-write`, `primitive-closure?`, `primitive-result-arity`, `primitive?`, `print`, `print-as-expression`, `print-boolean-long-form`, `print-box`, `print-graph`, `print-hash-table`, `print-mpair-curly-braces`, `print-pair-curly-braces`, `print-reader-abbreviations`, `print-struct`, `print-syntax-width`, `print-unreadable`, `print-vector-length`, `printable/c`, `printable<%>`, `printf`, `println`, `procedure->method`, `procedure-arity`, `procedure-arity-includes/c`, `procedure-arity-includes?`, `procedure-arity?`, `procedure-closure-contents-eq?`, `procedure-extract-target`, `procedure-keywords`, `procedure-reduce-arity`, `procedure-reduce-keyword-arity`, `procedure-rename`, `procedure-result-arity`, `procedure-specialize`, `procedure-struct-type?`, `procedure?`, `process`, `process*`, `process*/ports`, `process/ports`, `processor-count`, `progress-evt?`, `promise-forced?`, `promise-running?`, `promise/c`, `promise/name?`, `promise?`, `prop:arity-string`, `prop:arrow-contract`, `prop:arrow-contract-get-info`, `prop:arrow-contract?`, `prop:blame`, `prop:chaperone-contract`, `prop:checked-procedure`, `prop:contract`, `prop:contracted`, `prop:custom-print-quotable`, `prop:custom-write`, `prop:dict`, `prop:dict/contract`, `prop:equal+hash`, `prop:evt`, `prop:exn:missing-module`, `prop:exn:srclocs`, `prop:expansion-contexts`, `prop:flat-contract`, `prop:impersonator-of`, `prop:input-port`, `prop:liberal-define-context`, `prop:object-name`, `prop:opt-chaperone-contract`, `prop:opt-chaperone-contract-get-test`, `prop:opt-chaperone-contract?`, `prop:orc-contract`, `prop:orc-contract-get-subcontracts`, `prop:orc-contract?`, `prop:output-port`, `prop:place-location`, `prop:procedure`, `prop:recursive-contract`, `prop:recursive-contract-unroll`, `prop:recursive-contract?`, `prop:rename-transformer`, `prop:sequence`, `prop:set!-transformer`, `prop:stream`, `proper-subset?`, `pseudo-random-generator->vector`, `pseudo-random-generator-vector?`, `pseudo-random-generator?`, `put-preferences`, `putenv`, `quotient`, `quotient/remainder`, `radians->degrees`, `raise`, `raise-argument-error`, `raise-arguments-error`, `raise-arity-error`, `raise-blame-error`, `raise-contract-error`, `raise-mismatch-error`, `raise-not-cons-blame-error`, `raise-range-error`, `raise-result-error`, `raise-syntax-error`, `raise-type-error`, `raise-user-error`, `random`, `random-seed`, `range`, `rational?`, `rationalize`, `read`, `read-accept-bar-quote`, `read-accept-box`, `read-accept-compiled`, `read-accept-dot`, `read-accept-graph`, `read-accept-infix-dot`, `read-accept-lang`, `read-accept-quasiquote`, `read-accept-reader`, `read-byte`, `read-byte-or-special`, `read-bytes`, `read-bytes!`, `read-bytes!-evt`, `read-bytes-avail!`, `read-bytes-avail!*`, `read-bytes-avail!-evt`, `read-bytes-avail!/enable-break`, `read-bytes-evt`, `read-bytes-line`, `read-bytes-line-evt`, `read-case-sensitive`, `read-cdot`, `read-char`, `read-char-or-special`, `read-curly-brace-as-paren`, `read-curly-brace-with-tag`, `read-decimal-as-inexact`, `read-eval-print-loop`, `read-language`, `read-line`, `read-line-evt`, `read-on-demand-source`, `read-square-bracket-as-paren`, `read-square-bracket-with-tag`, `read-string`, `read-string!`, `read-string!-evt`, `read-string-evt`, `read-syntax`, `read-syntax/recursive`, `read/recursive`, `readtable-mapping`, `readtable?`, `real->decimal-string`, `real->double-flonum`, `real->floating-point-bytes`, `real->single-flonum`, `real-in`, `real-part`, `real?`, `reencode-input-port`, `reencode-output-port`, `regexp`, `regexp-match`, `regexp-match*`, `regexp-match-evt`, `regexp-match-exact?`, `regexp-match-peek`, `regexp-match-peek-immediate`, `regexp-match-peek-positions`, `regexp-match-peek-positions*`, `regexp-match-peek-positions-immediate`, `regexp-match-peek-positions-immediate/end`, `regexp-match-peek-positions/end`, `regexp-match-positions`, `regexp-match-positions*`, `regexp-match-positions/end`, `regexp-match/end`, `regexp-match?`, `regexp-max-lookbehind`, `regexp-quote`, `regexp-replace`, `regexp-replace*`, `regexp-replace-quote`, `regexp-replaces`, `regexp-split`, `regexp-try-match`, `regexp?`, `relative-path?`, `relocate-input-port`, `relocate-output-port`, `remainder`, `remf`, `remf*`, `remove`, `remove*`, `remove-duplicates`, `remq`, `remq*`, `remv`, `remv*`, `rename-contract`, `rename-file-or-directory`, `rename-transformer-target`, `rename-transformer?`, `replace-evt`, `reroot-path`, `resolve-path`, `resolved-module-path-name`, `resolved-module-path?`, `rest`, `reverse`, `round`, `second`, `seconds->date`, `security-guard?`, `semaphore-peek-evt`, `semaphore-peek-evt?`, `semaphore-post`, `semaphore-try-wait?`, `semaphore-wait`, `semaphore-wait/enable-break`, `semaphore?`, `sequence->list`, `sequence->stream`, `sequence-add-between`, `sequence-andmap`, `sequence-append`, `sequence-count`, `sequence-filter`, `sequence-fold`, `sequence-for-each`, `sequence-generate`, `sequence-generate*`, `sequence-length`, `sequence-map`, `sequence-ormap`, `sequence-ref`, `sequence-tail`, `sequence/c`, `sequence?`, `set`, `set!-transformer-procedure`, `set!-transformer?`, `set->list`, `set->stream`, `set-add`, `set-add!`, `set-box!`, `set-clear`, `set-clear!`, `set-copy`, `set-copy-clear`, `set-count`, `set-empty?`, `set-eq?`, `set-equal?`, `set-eqv?`, `set-first`, `set-for-each`, `set-implements/c`, `set-implements?`, `set-intersect`, `set-intersect!`, `set-map`, `set-mcar!`, `set-mcdr!`, `set-member?`, `set-mutable?`, `set-phantom-bytes!`, `set-port-next-location!`, `set-remove`, `set-remove!`, `set-rest`, `set-some-basic-contracts!`, `set-subtract`, `set-subtract!`, `set-symmetric-difference`, `set-symmetric-difference!`, `set-union`, `set-union!`, `set-weak?`, `set/c`, `set=?`, `set?`, `seteq`, `seteqv`, `seventh`, `sgn`, `shared-bytes`, `shell-execute`, `shrink-path-wrt`, `shuffle`, `simple-form-path`, `simplify-path`, `sin`, `single-flonum?`, `sinh`, `sixth`, `skip-projection-wrapper?`, `sleep`, `some-system-path->string`, `sort`, `special-comment-value`, `special-comment?`, `special-filter-input-port`, `split-at`, `split-at-right`, `split-common-prefix`, `split-path`, `splitf-at`, `splitf-at-right`, `sqr`, `sqrt`, `srcloc`, `srcloc->string`, `srcloc-column`, `srcloc-line`, `srcloc-position`, `srcloc-source`, `srcloc-span`, `srcloc?`, `stop-after`, `stop-before`, `stream->list`, `stream-add-between`, `stream-andmap`, `stream-append`, `stream-count`, `stream-empty?`, `stream-filter`, `stream-first`, `stream-fold`, `stream-for-each`, `stream-length`, `stream-map`, `stream-ormap`, `stream-ref`, `stream-rest`, `stream-tail`, `stream/c`, `stream?`, `string`, `string->bytes/latin-1`, `string->bytes/locale`, `string->bytes/utf-8`, `string->immutable-string`, `string->keyword`, `string->list`, `string->number`, `string->path`, `string->path-element`, `string->some-system-path`, `string->symbol`, `string->uninterned-symbol`, `string->unreadable-symbol`, `string-append`, `string-append*`, `string-ci<=?`, `string-ci<?`, `string-ci=?`, `string-ci>=?`, `string-ci>?`, `string-contains?`, `string-copy`, `string-copy!`, `string-downcase`, `string-environment-variable-name?`, `string-fill!`, `string-foldcase`, `string-join`, `string-len/c`, `string-length`, `string-locale-ci<?`, `string-locale-ci=?`, `string-locale-ci>?`, `string-locale-downcase`, `string-locale-upcase`, `string-locale<?`, `string-locale=?`, `string-locale>?`, `string-no-nuls?`, `string-normalize-nfc`, `string-normalize-nfd`, `string-normalize-nfkc`, `string-normalize-nfkd`, `string-normalize-spaces`, `string-port?`, `string-prefix?`, `string-ref`, `string-replace`, `string-set!`, `string-split`, `string-suffix?`, `string-titlecase`, `string-trim`, `string-upcase`, `string-utf-8-length`, `string<=?`, `string<?`, `string=?`, `string>=?`, `string>?`, `string?`, `struct->vector`, `struct-accessor-procedure?`, `struct-constructor-procedure?`, `struct-info`, `struct-mutator-procedure?`, `struct-predicate-procedure?`, `struct-type-info`, `struct-type-make-constructor`, `struct-type-make-predicate`, `struct-type-property-accessor-procedure?`, `struct-type-property/c`, `struct-type-property?`, `struct-type?`, `struct:arity-at-least`, `struct:arrow-contract-info`, `struct:date`, `struct:date*`, `struct:exn`, `struct:exn:break`, `struct:exn:break:hang-up`, `struct:exn:break:terminate`, `struct:exn:fail`, `struct:exn:fail:contract`, `struct:exn:fail:contract:arity`, `struct:exn:fail:contract:blame`, `struct:exn:fail:contract:continuation`, `struct:exn:fail:contract:divide-by-zero`, `struct:exn:fail:contract:non-fixnum-result`, `struct:exn:fail:contract:variable`, `struct:exn:fail:filesystem`, `struct:exn:fail:filesystem:errno`, `struct:exn:fail:filesystem:exists`, `struct:exn:fail:filesystem:missing-module`, `struct:exn:fail:filesystem:version`, `struct:exn:fail:network`, `struct:exn:fail:network:errno`, `struct:exn:fail:object`, `struct:exn:fail:out-of-memory`, `struct:exn:fail:read`, `struct:exn:fail:read:eof`, `struct:exn:fail:read:non-char`, `struct:exn:fail:syntax`, `struct:exn:fail:syntax:missing-module`, `struct:exn:fail:syntax:unbound`, `struct:exn:fail:unsupported`, `struct:exn:fail:user`, `struct:srcloc`, `struct:wrapped-extra-arg-arrow`, `struct?`, `sub1`, `subbytes`, `subclass?`, `subclass?/c`, `subprocess`, `subprocess-group-enabled`, `subprocess-kill`, `subprocess-pid`, `subprocess-status`, `subprocess-wait`, `subprocess?`, `subset?`, `substring`, `suggest/c`, `symbol->string`, `symbol-interned?`, `symbol-unreadable?`, `symbol<?`, `symbol=?`, `symbol?`, `symbols`, `sync`, `sync/enable-break`, `sync/timeout`, `sync/timeout/enable-break`, `syntax->datum`, `syntax->list`, `syntax-arm`, `syntax-column`, `syntax-debug-info`, `syntax-disarm`, `syntax-e`, `syntax-line`, `syntax-local-bind-syntaxes`, `syntax-local-certifier`, `syntax-local-context`, `syntax-local-expand-expression`, `syntax-local-get-shadower`, `syntax-local-identifier-as-binding`, `syntax-local-introduce`, `syntax-local-lift-context`, `syntax-local-lift-expression`, `syntax-local-lift-module`, `syntax-local-lift-module-end-declaration`, `syntax-local-lift-provide`, `syntax-local-lift-require`, `syntax-local-lift-values-expression`, `syntax-local-make-definition-context`, `syntax-local-make-delta-introducer`, `syntax-local-module-defined-identifiers`, `syntax-local-module-exports`, `syntax-local-module-required-identifiers`, `syntax-local-name`, `syntax-local-phase-level`, `syntax-local-submodules`, `syntax-local-transforming-module-provides?`, `syntax-local-value`, `syntax-local-value/immediate`, `syntax-original?`, `syntax-position`, `syntax-property`, `syntax-property-preserved?`, `syntax-property-symbol-keys`, `syntax-protect`, `syntax-rearm`, `syntax-recertify`, `syntax-shift-phase-level`, `syntax-source`, `syntax-source-module`, `syntax-span`, `syntax-taint`, `syntax-tainted?`, `syntax-track-origin`, `syntax-transforming-module-expression?`, `syntax-transforming-with-lifts?`, `syntax-transforming?`, `syntax/c`, `syntax?`, `system`, `system*`, `system*/exit-code`, `system-big-endian?`, `system-idle-evt`, `system-language+country`, `system-library-subpath`, `system-path-convention-type`, `system-type`, `system/exit-code`, `tail-marks-match?`, `take`, `take-common-prefix`, `take-right`, `takef`, `takef-right`, `tan`, `tanh`, `tcp-abandon-port`, `tcp-accept`, `tcp-accept-evt`, `tcp-accept-ready?`, `tcp-accept/enable-break`, `tcp-addresses`, `tcp-close`, `tcp-connect`, `tcp-connect/enable-break`, `tcp-listen`, `tcp-listener?`, `tcp-port?`, `tentative-pretty-print-port-cancel`, `tentative-pretty-print-port-transfer`, `tenth`, `terminal-port?`, `the-unsupplied-arg`, `third`, `thread`, `thread-cell-ref`, `thread-cell-set!`, `thread-cell-values?`, `thread-cell?`, `thread-dead-evt`, `thread-dead?`, `thread-group?`, `thread-receive`, `thread-receive-evt`, `thread-resume`, `thread-resume-evt`, `thread-rewind-receive`, `thread-running?`, `thread-send`, `thread-suspend`, `thread-suspend-evt`, `thread-try-receive`, `thread-wait`, `thread/suspend-to-kill`, `thread?`, `time-apply`, `touch`, `transplant-input-port`, `transplant-output-port`, `true`, `truncate`, `udp-addresses`, `udp-bind!`, `udp-bound?`, `udp-close`, `udp-connect!`, `udp-connected?`, `udp-multicast-interface`, `udp-multicast-join-group!`, `udp-multicast-leave-group!`, `udp-multicast-loopback?`, `udp-multicast-set-interface!`, `udp-multicast-set-loopback!`, `udp-multicast-set-ttl!`, `udp-multicast-ttl`, `udp-open-socket`, `udp-receive!`, `udp-receive!*`, `udp-receive!-evt`, `udp-receive!/enable-break`, `udp-receive-ready-evt`, `udp-send`, `udp-send*`, `udp-send-evt`, `udp-send-ready-evt`, `udp-send-to`, `udp-send-to*`, `udp-send-to-evt`, `udp-send-to/enable-break`, `udp-send/enable-break`, `udp?`, `unbox`, `uncaught-exception-handler`, `unit?`, `unspecified-dom`, `unsupplied-arg?`, `use-collection-link-paths`, `use-compiled-file-paths`, `use-user-specific-search-paths`, `user-execute-bit`, `user-read-bit`, `user-write-bit`, `value-blame`, `value-contract`, `values`, `variable-reference->empty-namespace`, `variable-reference->module-base-phase`, `variable-reference->module-declaration-inspector`, `variable-reference->module-path-index`, `variable-reference->module-source`, `variable-reference->namespace`, `variable-reference->phase`, `variable-reference->resolved-module-path`, `variable-reference-constant?`, `variable-reference?`, `vector`, `vector->immutable-vector`, `vector->list`, `vector->pseudo-random-generator`, `vector->pseudo-random-generator!`, `vector->values`, `vector-append`, `vector-argmax`, `vector-argmin`, `vector-copy`, `vector-copy!`, `vector-count`, `vector-drop`, `vector-drop-right`, `vector-fill!`, `vector-filter`, `vector-filter-not`, `vector-immutable`, `vector-immutable/c`, `vector-immutableof`, `vector-length`, `vector-map`, `vector-map!`, `vector-member`, `vector-memq`, `vector-memv`, `vector-ref`, `vector-set!`, `vector-set*!`, `vector-set-performance-stats!`, `vector-split-at`, `vector-split-at-right`, `vector-take`, `vector-take-right`, `vector/c`, `vector?`, `vectorof`, `version`, `void`, `void?`, `weak-box-value`, `weak-box?`, `weak-set`, `weak-seteq`, `weak-seteqv`, `will-execute`, `will-executor?`, `will-register`, `will-try-execute`, `with-input-from-bytes`, `with-input-from-file`, `with-input-from-string`, `with-output-to-bytes`, `with-output-to-file`, `with-output-to-string`, `would-be-future`, `wrap-evt`, `wrapped-extra-arg-arrow`, `wrapped-extra-arg-arrow-extra-neg-party-argument`, `wrapped-extra-arg-arrow-real-func`, `wrapped-extra-arg-arrow?`, `writable<%>`, `write`, `write-byte`, `write-bytes`, `write-bytes-avail`, `write-bytes-avail*`, `write-bytes-avail-evt`, `write-bytes-avail/enable-break`, `write-char`, `write-special`, `write-special-avail*`, `write-special-evt`, `write-string`, `write-to-file`, `writeln`, `xor`, `zero?`, `~.a`, `~.s`, `~.v`, `~a`, `~e`, `~r`, `~s`, `~v`), NameBuiltin, Pop(1)},\n-\t\t\t{\"(?:\\\\|[^|]*\\\\||\\\\\\\\[\\\\w\\\\W]|[^|\\\\\\\\()[\\\\]{}\\\",\\\\'`;\\\\s]+)+\", Name, Pop(1)},\n-\t\t\tInclude(\"datum*\"),\n-\t\t},\n-\t\t\"unquoted-list\": {\n-\t\t\tInclude(\"list\"),\n-\t\t\t{`(?!\\Z)`, Text, Push(\"unquoted-datum\")},\n-\t\t},\n-\t\t\"quasiquoted-datum\": {\n-\t\t\tInclude(\"datum\"),\n-\t\t\t{`,@?`, Operator, Push(\"#pop\", \"unquoted-datum\")},\n-\t\t\t{\"unquote(-splicing)?(?=[()[\\\\]{}\\\",\\\\'`;\\\\s])\", Keyword, Push(\"#pop\", \"unquoted-datum\")},\n-\t\t\t{`[([{]`, Punctuation, Push(\"#pop\", \"quasiquoted-list\")},\n-\t\t\tInclude(\"datum*\"),\n-\t\t},\n-\t\t\"quasiquoted-list\": {\n-\t\t\tInclude(\"list\"),\n-\t\t\t{`(?!\\Z)`, Text, Push(\"quasiquoted-datum\")},\n-\t\t},\n-\t\t\"quoted-datum\": {\n-\t\t\tInclude(\"datum\"),\n-\t\t\t{`[([{]`, Punctuation, Push(\"#pop\", \"quoted-list\")},\n-\t\t\tInclude(\"datum*\"),\n-\t\t},\n-\t\t\"quoted-list\": {\n-\t\t\tInclude(\"list\"),\n-\t\t\t{`(?!\\Z)`, Text, Push(\"quoted-datum\")},\n-\t\t},\n-\t\t\"block-comment\": {\n-\t\t\t{`#\\|`, CommentMultiline, Push()},\n-\t\t\t{`\\|#`, CommentMultiline, Pop(1)},\n-\t\t\t{`[^#|]+|.`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t\t{`(?s)\\\\([0-7]{1,3}|x[\\da-fA-F]{1,2}|u[\\da-fA-F]{1,4}|U[\\da-fA-F]{1,8}|.)`, LiteralStringEscape, nil},\n-\t\t\t{`[^\\\\\"]+`, LiteralStringDouble, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "ab6a4fbbe79a81d24e449b84d5b56f56228db785",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/r/ragel.go",
      "status": "removed",
      "additions": 0,
      "deletions": 80,
      "changes": 80,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Fragel.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Fragel.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Fragel.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,80 +0,0 @@\n-package r\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Ragel lexer.\n-var Ragel = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Ragel\",\n-\t\tAliases:   []string{\"ragel\"},\n-\t\tFilenames: []string{},\n-\t\tMimeTypes: []string{},\n-\t},\n-\tragelRules,\n-))\n-\n-func ragelRules() Rules {\n-\treturn Rules{\n-\t\t\"whitespace\": {\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t},\n-\t\t\"comments\": {\n-\t\t\t{`\\#.*$`, Comment, nil},\n-\t\t},\n-\t\t\"keywords\": {\n-\t\t\t{`(access|action|alphtype)\\b`, Keyword, nil},\n-\t\t\t{`(getkey|write|machine|include)\\b`, Keyword, nil},\n-\t\t\t{`(any|ascii|extend|alpha|digit|alnum|lower|upper)\\b`, Keyword, nil},\n-\t\t\t{`(xdigit|cntrl|graph|print|punct|space|zlen|empty)\\b`, Keyword, nil},\n-\t\t},\n-\t\t\"numbers\": {\n-\t\t\t{`0x[0-9A-Fa-f]+`, LiteralNumberHex, nil},\n-\t\t\t{`[+-]?[0-9]+`, LiteralNumberInteger, nil},\n-\t\t},\n-\t\t\"literals\": {\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralString, nil},\n-\t\t\t{`\\[(\\\\\\\\|\\\\\\]|[^\\]])*\\]`, LiteralString, nil},\n-\t\t\t{`/(?!\\*)(\\\\\\\\|\\\\/|[^/])*/`, LiteralStringRegex, nil},\n-\t\t},\n-\t\t\"identifiers\": {\n-\t\t\t{`[a-zA-Z_]\\w*`, NameVariable, nil},\n-\t\t},\n-\t\t\"operators\": {\n-\t\t\t{`,`, Operator, nil},\n-\t\t\t{`\\||&|--?`, Operator, nil},\n-\t\t\t{`\\.|<:|:>>?`, Operator, nil},\n-\t\t\t{`:`, Operator, nil},\n-\t\t\t{`->`, Operator, nil},\n-\t\t\t{`(>|\\$|%|<|@|<>)(/|eof\\b)`, Operator, nil},\n-\t\t\t{`(>|\\$|%|<|@|<>)(!|err\\b)`, Operator, nil},\n-\t\t\t{`(>|\\$|%|<|@|<>)(\\^|lerr\\b)`, Operator, nil},\n-\t\t\t{`(>|\\$|%|<|@|<>)(~|to\\b)`, Operator, nil},\n-\t\t\t{`(>|\\$|%|<|@|<>)(\\*|from\\b)`, Operator, nil},\n-\t\t\t{`>|@|\\$|%`, Operator, nil},\n-\t\t\t{`\\*|\\?|\\+|\\{[0-9]*,[0-9]*\\}`, Operator, nil},\n-\t\t\t{`!|\\^`, Operator, nil},\n-\t\t\t{`\\(|\\)`, Operator, nil},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\tInclude(\"literals\"),\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"comments\"),\n-\t\t\tInclude(\"keywords\"),\n-\t\t\tInclude(\"numbers\"),\n-\t\t\tInclude(\"identifiers\"),\n-\t\t\tInclude(\"operators\"),\n-\t\t\t{`\\{`, Punctuation, Push(\"host\")},\n-\t\t\t{`=`, Operator, nil},\n-\t\t\t{`;`, Punctuation, nil},\n-\t\t},\n-\t\t\"host\": {\n-\t\t\t{`([^{}\\'\"/#]+|[^\\\\]\\\\[{}]|\"(\\\\\\\\|\\\\\"|[^\"])*\"|'(\\\\\\\\|\\\\'|[^'])*'|//.*$\\n?|/\\*(.|\\n)*?\\*/|\\#.*$\\n?|/(?!\\*)(\\\\\\\\|\\\\/|[^/])*/|/)+`, Other, nil},\n-\t\t\t{`\\{`, Punctuation, Push()},\n-\t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "0ade5691d0009abd7ecb4ed2beb233cf01cafa90",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/r/reasonml.go",
      "status": "removed",
      "additions": 0,
      "deletions": 71,
      "changes": 71,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Freasonml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Freasonml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Freasonml.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,71 +0,0 @@\n-package r\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Reasonml lexer.\n-var Reasonml = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"ReasonML\",\n-\t\tAliases:   []string{\"reason\", \"reasonml\"},\n-\t\tFilenames: []string{\"*.re\", \"*.rei\"},\n-\t\tMimeTypes: []string{\"text/x-reasonml\"},\n-\t},\n-\treasonmlRules,\n-))\n-\n-func reasonmlRules() Rules {\n-\treturn Rules{\n-\t\t\"escape-sequence\": {\n-\t\t\t{`\\\\[\\\\\"\\'ntbr]`, LiteralStringEscape, nil},\n-\t\t\t{`\\\\[0-9]{3}`, LiteralStringEscape, nil},\n-\t\t\t{`\\\\x[0-9a-fA-F]{2}`, LiteralStringEscape, nil},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`false|true|\\(\\)|\\[\\]`, NameBuiltinPseudo, nil},\n-\t\t\t{`\\b([A-Z][\\w\\']*)(?=\\s*\\.)`, NameNamespace, Push(\"dotted\")},\n-\t\t\t{`\\b([A-Z][\\w\\']*)`, NameClass, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`\\/\\*(?![\\/])`, CommentMultiline, Push(\"comment\")},\n-\t\t\t{`\\b(as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|false|for|fun|esfun|function|functor|if|in|include|inherit|initializer|lazy|let|switch|module|pub|mutable|new|nonrec|object|of|open|pri|rec|sig|struct|then|to|true|try|type|val|virtual|when|while|with)\\b`, Keyword, nil},\n-\t\t\t{\"(~|\\\\}|\\\\|]|\\\\||\\\\|\\\\||\\\\{<|\\\\{|`|_|]|\\\\[\\\\||\\\\[>|\\\\[<|\\\\[|\\\\?\\\\?|\\\\?|>\\\\}|>]|>|=|<-|<|;;|;|:>|:=|::|:|\\\\.\\\\.\\\\.|\\\\.\\\\.|\\\\.|=>|-\\\\.|-|,|\\\\+|\\\\*|\\\\)|\\\\(|&&|&|#|!=)\", OperatorWord, nil},\n-\t\t\t{`([=<>@^|&+\\*/$%-]|[!?~])?[!$%&*+\\./:<=>?@^|~-]`, Operator, nil},\n-\t\t\t{`\\b(and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b`, OperatorWord, nil},\n-\t\t\t{`\\b(unit|int|float|bool|string|char|list|array)\\b`, KeywordType, nil},\n-\t\t\t{`[^\\W\\d][\\w']*`, Name, nil},\n-\t\t\t{`-?\\d[\\d_]*(.[\\d_]*)?([eE][+\\-]?\\d[\\d_]*)`, LiteralNumberFloat, nil},\n-\t\t\t{`0[xX][\\da-fA-F][\\da-fA-F_]*`, LiteralNumberHex, nil},\n-\t\t\t{`0[oO][0-7][0-7_]*`, LiteralNumberOct, nil},\n-\t\t\t{`0[bB][01][01_]*`, LiteralNumberBin, nil},\n-\t\t\t{`\\d[\\d_]*`, LiteralNumberInteger, nil},\n-\t\t\t{`'(?:(\\\\[\\\\\\\"'ntbr ])|(\\\\[0-9]{3})|(\\\\x[0-9a-fA-F]{2}))'`, LiteralStringChar, nil},\n-\t\t\t{`'.'`, LiteralStringChar, nil},\n-\t\t\t{`'`, Keyword, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n-\t\t\t{`[~?][a-z][\\w\\']*:`, NameVariable, nil},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`[^\\/*]+`, CommentMultiline, nil},\n-\t\t\t{`\\/\\*`, CommentMultiline, Push()},\n-\t\t\t{`\\*\\/`, CommentMultiline, Pop(1)},\n-\t\t\t{`[\\*]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`[^\\\\\"]+`, LiteralStringDouble, nil},\n-\t\t\tInclude(\"escape-sequence\"),\n-\t\t\t{`\\\\\\n`, LiteralStringDouble, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t},\n-\t\t\"dotted\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\.`, Punctuation, nil},\n-\t\t\t{`[A-Z][\\w\\']*(?=\\s*\\.)`, NameNamespace, nil},\n-\t\t\t{`[A-Z][\\w\\']*`, NameClass, Pop(1)},\n-\t\t\t{`[a-z_][\\w\\']*`, Name, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "6177234571e373574bfb54c2056b59dea6fbea07",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/r/regedit.go",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Fregedit.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Fregedit.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Fregedit.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,36 +0,0 @@\n-package r\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Reg lexer.\n-var Reg = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"reg\",\n-\t\tAliases:   []string{\"registry\"},\n-\t\tFilenames: []string{\"*.reg\"},\n-\t\tMimeTypes: []string{\"text/x-windows-registry\"},\n-\t},\n-\tregRules,\n-))\n-\n-func regRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`Windows Registry Editor.*`, Text, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`[;#].*`, CommentSingle, nil},\n-\t\t\t{`(\\[)(-?)(HKEY_[A-Z_]+)(.*?\\])$`, ByGroups(Keyword, Operator, NameBuiltin, Keyword), nil},\n-\t\t\t{`(\"(?:\\\\\"|\\\\\\\\|[^\"])+\")([ \\t]*)(=)([ \\t]*)`, ByGroups(NameAttribute, Text, Operator, Text), Push(\"value\")},\n-\t\t\t{`(.*?)([ \\t]*)(=)([ \\t]*)`, ByGroups(NameAttribute, Text, Operator, Text), Push(\"value\")},\n-\t\t},\n-\t\t\"value\": {\n-\t\t\t{`-`, Operator, Pop(1)},\n-\t\t\t{`(dword|hex(?:\\([0-9a-fA-F]\\))?)(:)([0-9a-fA-F,]+)`, ByGroups(NameVariable, Punctuation, LiteralNumber), Pop(1)},\n-\t\t\t{`.+`, LiteralString, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "38ca768d0ba1c34348bac0ee1e5f216259e85b3a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/r/rexx.go",
      "status": "removed",
      "additions": 0,
      "deletions": 63,
      "changes": 63,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Frexx.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Frexx.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Frexx.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,63 +0,0 @@\n-package r\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Rexx lexer.\n-var Rexx = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"Rexx\",\n-\t\tAliases:         []string{\"rexx\", \"arexx\"},\n-\t\tFilenames:       []string{\"*.rexx\", \"*.rex\", \"*.rx\", \"*.arexx\"},\n-\t\tMimeTypes:       []string{\"text/x-rexx\"},\n-\t\tNotMultiline:    true,\n-\t\tCaseInsensitive: true,\n-\t},\n-\trexxRules,\n-))\n-\n-func rexxRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s`, TextWhitespace, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"comment\")},\n-\t\t\t{`\"`, LiteralString, Push(\"string_double\")},\n-\t\t\t{`'`, LiteralString, Push(\"string_single\")},\n-\t\t\t{`[0-9]+(\\.[0-9]+)?(e[+-]?[0-9])?`, LiteralNumber, nil},\n-\t\t\t{`([a-z_]\\w*)(\\s*)(:)(\\s*)(procedure)\\b`, ByGroups(NameFunction, TextWhitespace, Operator, TextWhitespace, KeywordDeclaration), nil},\n-\t\t\t{`([a-z_]\\w*)(\\s*)(:)`, ByGroups(NameLabel, TextWhitespace, Operator), nil},\n-\t\t\tInclude(\"function\"),\n-\t\t\tInclude(\"keyword\"),\n-\t\t\tInclude(\"operator\"),\n-\t\t\t{`[a-z_]\\w*`, Text, nil},\n-\t\t},\n-\t\t\"function\": {\n-\t\t\t{Words(``, `(\\s*)(\\()`, `abbrev`, `abs`, `address`, `arg`, `b2x`, `bitand`, `bitor`, `bitxor`, `c2d`, `c2x`, `center`, `charin`, `charout`, `chars`, `compare`, `condition`, `copies`, `d2c`, `d2x`, `datatype`, `date`, `delstr`, `delword`, `digits`, `errortext`, `form`, `format`, `fuzz`, `insert`, `lastpos`, `left`, `length`, `linein`, `lineout`, `lines`, `max`, `min`, `overlay`, `pos`, `queued`, `random`, `reverse`, `right`, `sign`, `sourceline`, `space`, `stream`, `strip`, `substr`, `subword`, `symbol`, `time`, `trace`, `translate`, `trunc`, `value`, `verify`, `word`, `wordindex`, `wordlength`, `wordpos`, `words`, `x2b`, `x2c`, `x2d`, `xrange`), ByGroups(NameBuiltin, TextWhitespace, Operator), nil},\n-\t\t},\n-\t\t\"keyword\": {\n-\t\t\t{`(address|arg|by|call|do|drop|else|end|exit|for|forever|if|interpret|iterate|leave|nop|numeric|off|on|options|parse|pull|push|queue|return|say|select|signal|to|then|trace|until|while)\\b`, KeywordReserved, nil},\n-\t\t},\n-\t\t\"operator\": {\n-\t\t\t{`(-|//|/|\\(|\\)|\\*\\*|\\*|\\\\<<|\\\\<|\\\\==|\\\\=|\\\\>>|\\\\>|\\\\|\\|\\||\\||&&|&|%|\\+|<<=|<<|<=|<>|<|==|=|><|>=|>>=|>>|>|¬<<|¬<|¬==|¬=|¬>>|¬>|¬|\\.|,)`, Operator, nil},\n-\t\t},\n-\t\t\"string_double\": {\n-\t\t\t{`[^\"\\n]+`, LiteralString, nil},\n-\t\t\t{`\"\"`, LiteralString, nil},\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t},\n-\t\t\"string_single\": {\n-\t\t\t{`[^\\'\\n]`, LiteralString, nil},\n-\t\t\t{`\\'\\'`, LiteralString, nil},\n-\t\t\t{`\\'`, LiteralString, Pop(1)},\n-\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`[^*]+`, CommentMultiline, nil},\n-\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n-\t\t\t{`\\*`, CommentMultiline, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "296cae9c01107b75c5524725534a592ec6a6a107",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/r/ruby.go",
      "status": "removed",
      "additions": 0,
      "deletions": 254,
      "changes": 254,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Fruby.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Fruby.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Fruby.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,254 +0,0 @@\n-package r\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Ruby lexer.\n-var Ruby = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Ruby\",\n-\t\tAliases:   []string{\"rb\", \"ruby\", \"duby\"},\n-\t\tFilenames: []string{\"*.rb\", \"*.rbw\", \"Rakefile\", \"*.rake\", \"*.gemspec\", \"*.rbx\", \"*.duby\", \"Gemfile\"},\n-\t\tMimeTypes: []string{\"text/x-ruby\", \"application/x-ruby\"},\n-\t\tDotAll:    true,\n-\t},\n-\trubyRules,\n-))\n-\n-func rubyRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\A#!.+?$`, CommentHashbang, nil},\n-\t\t\t{`#.*?$`, CommentSingle, nil},\n-\t\t\t{`=begin\\s.*?\\n=end.*?$`, CommentMultiline, nil},\n-\t\t\t{Words(``, `\\b`, `BEGIN`, `END`, `alias`, `begin`, `break`, `case`, `defined?`, `do`, `else`, `elsif`, `end`, `ensure`, `for`, `if`, `in`, `next`, `redo`, `rescue`, `raise`, `retry`, `return`, `super`, `then`, `undef`, `unless`, `until`, `when`, `while`, `yield`), Keyword, nil},\n-\t\t\t{`(module)(\\s+)([a-zA-Z_]\\w*(?:::[a-zA-Z_]\\w*)*)`, ByGroups(Keyword, Text, NameNamespace), nil},\n-\t\t\t{`(def)(\\s+)`, ByGroups(Keyword, Text), Push(\"funcname\")},\n-\t\t\t{\"def(?=[*%&^`~+-/\\\\[<>=])\", Keyword, Push(\"funcname\")},\n-\t\t\t{`(class)(\\s+)`, ByGroups(Keyword, Text), Push(\"classname\")},\n-\t\t\t{Words(``, `\\b`, `initialize`, `new`, `loop`, `include`, `extend`, `raise`, `attr_reader`, `attr_writer`, `attr_accessor`, `attr`, `catch`, `throw`, `private`, `module_function`, `public`, `protected`, `true`, `false`, `nil`), KeywordPseudo, nil},\n-\t\t\t{`(not|and|or)\\b`, OperatorWord, nil},\n-\t\t\t{Words(``, `\\?`, `autoload`, `block_given`, `const_defined`, `eql`, `equal`, `frozen`, `include`, `instance_of`, `is_a`, `iterator`, `kind_of`, `method_defined`, `nil`, `private_method_defined`, `protected_method_defined`, `public_method_defined`, `respond_to`, `tainted`), NameBuiltin, nil},\n-\t\t\t{`(chomp|chop|exit|gsub|sub)!`, NameBuiltin, nil},\n-\t\t\t{Words(`(?<!\\.)`, `\\b`, `Array`, `Float`, `Integer`, `String`, `__id__`, `__send__`, `abort`, `ancestors`, `at_exit`, `autoload`, `binding`, `callcc`, `caller`, `catch`, `chomp`, `chop`, `class_eval`, `class_variables`, `clone`, `const_defined?`, `const_get`, `const_missing`, `const_set`, `constants`, `display`, `dup`, `eval`, `exec`, `exit`, `extend`, `fail`, `fork`, `format`, `freeze`, `getc`, `gets`, `global_variables`, `gsub`, `hash`, `id`, `included_modules`, `inspect`, `instance_eval`, `instance_method`, `instance_methods`, `instance_variable_get`, `instance_variable_set`, `instance_variables`, `lambda`, `load`, `local_variables`, `loop`, `method`, `method_missing`, `methods`, `module_eval`, `name`, `object_id`, `open`, `p`, `print`, `printf`, `private_class_method`, `private_instance_methods`, `private_methods`, `proc`, `protected_instance_methods`, `protected_methods`, `public_class_method`, `public_instance_methods`, `public_methods`, `putc`, `puts`, `raise`, `rand`, `readline`, `readlines`, `require`, `scan`, `select`, `self`, `send`, `set_trace_func`, `singleton_methods`, `sleep`, `split`, `sprintf`, `srand`, `sub`, `syscall`, `system`, `taint`, `test`, `throw`, `to_a`, `to_s`, `trace_var`, `trap`, `untaint`, `untrace_var`, `warn`), NameBuiltin, nil},\n-\t\t\t{`__(FILE|LINE)__\\b`, NameBuiltinPseudo, nil},\n-\t\t\t{\"(?<!\\\\w)(<<-?)([\\\"`\\\\']?)([a-zA-Z_]\\\\w*)(\\\\2)(.*?\\\\n)\", String, nil},\n-\t\t\t{`(<<-?)(\"|\\')()(\\2)(.*?\\n)`, String, nil},\n-\t\t\t{`__END__`, CommentPreproc, Push(\"end-part\")},\n-\t\t\t{`(?:^|(?<=[=<>~!:])|(?<=(?:\\s|;)when\\s)|(?<=(?:\\s|;)or\\s)|(?<=(?:\\s|;)and\\s)|(?<=\\.index\\s)|(?<=\\.scan\\s)|(?<=\\.sub\\s)|(?<=\\.sub!\\s)|(?<=\\.gsub\\s)|(?<=\\.gsub!\\s)|(?<=\\.match\\s)|(?<=(?:\\s|;)if\\s)|(?<=(?:\\s|;)elsif\\s)|(?<=^when\\s)|(?<=^index\\s)|(?<=^scan\\s)|(?<=^sub\\s)|(?<=^gsub\\s)|(?<=^sub!\\s)|(?<=^gsub!\\s)|(?<=^match\\s)|(?<=^if\\s)|(?<=^elsif\\s))(\\s*)(/)`, ByGroups(Text, LiteralStringRegex), Push(\"multiline-regex\")},\n-\t\t\t{`(?<=\\(|,|\\[)/`, LiteralStringRegex, Push(\"multiline-regex\")},\n-\t\t\t{`(\\s+)(/)(?![\\s=])`, ByGroups(Text, LiteralStringRegex), Push(\"multiline-regex\")},\n-\t\t\t{`(0_?[0-7]+(?:_[0-7]+)*)(\\s*)([/?])?`, ByGroups(LiteralNumberOct, Text, Operator), nil},\n-\t\t\t{`(0x[0-9A-Fa-f]+(?:_[0-9A-Fa-f]+)*)(\\s*)([/?])?`, ByGroups(LiteralNumberHex, Text, Operator), nil},\n-\t\t\t{`(0b[01]+(?:_[01]+)*)(\\s*)([/?])?`, ByGroups(LiteralNumberBin, Text, Operator), nil},\n-\t\t\t{`([\\d]+(?:[_e]\\d+)*)(\\s*)([/?])?`, ByGroups(LiteralNumberInteger, Text, Operator), nil},\n-\t\t\t{`@@[a-zA-Z_]\\w*`, NameVariableClass, nil},\n-\t\t\t{`@[a-zA-Z_]\\w*`, NameVariableInstance, nil},\n-\t\t\t{`\\$\\w+`, NameVariableGlobal, nil},\n-\t\t\t{\"\\\\$[!@&`\\\\'+~=/\\\\\\\\,;.<>_*$?:\\\"^-]\", NameVariableGlobal, nil},\n-\t\t\t{`\\$-[0adFiIlpvw]`, NameVariableGlobal, nil},\n-\t\t\t{`::`, Operator, nil},\n-\t\t\tInclude(\"strings\"),\n-\t\t\t{`\\?(\\\\[MC]-)*(\\\\([\\\\abefnrstv#\"\\']|x[a-fA-F0-9]{1,2}|[0-7]{1,3})|\\S)(?!\\w)`, LiteralStringChar, nil},\n-\t\t\t{`[A-Z]\\w+`, NameConstant, nil},\n-\t\t\t{Words(`(\\.|::)`, ``, `*`, `**`, `-`, `+`, `-@`, `+@`, `/`, `%`, `&`, `|`, `^`, \"`\", `~`, `[]`, `[]=`, `<<`, `>>`, `<`, `<>`, `<=>`, `>`, `>=`, `==`, `===`), ByGroups(Operator, NameOperator), nil},\n-\t\t\t{\"(\\\\.|::)([a-zA-Z_]\\\\w*[!?]?|[*%&^`~+\\\\-/\\\\[<>=])\", ByGroups(Operator, Name), nil},\n-\t\t\t{`[a-zA-Z_]\\w*[!?]?`, Name, nil},\n-\t\t\t{`(\\[|\\]|\\*\\*|<<?|>>?|>=|<=|<=>|=~|={3}|!~|&&?|\\|\\||\\.{1,3})`, Operator, nil},\n-\t\t\t{`[-+/*%=<>&!^|~]=?`, Operator, nil},\n-\t\t\t{`[(){};,/?:\\\\]`, Punctuation, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t\t\"funcname\": {\n-\t\t\t{`\\(`, Punctuation, Push(\"defexpr\")},\n-\t\t\t{\"(?:([a-zA-Z_]\\\\w*)(\\\\.))?([a-zA-Z_]\\\\w*[!?]?|\\\\*\\\\*?|[-+]@?|[/%&|^`~]|\\\\[\\\\]=?|<<|>>|<=?>|>=?|===?)\", ByGroups(NameClass, Operator, NameFunction), Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"classname\": {\n-\t\t\t{`\\(`, Punctuation, Push(\"defexpr\")},\n-\t\t\t{`<<`, Operator, Pop(1)},\n-\t\t\t{`[A-Z_]\\w*`, NameClass, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"defexpr\": {\n-\t\t\t{`(\\))(\\.|::)?`, ByGroups(Punctuation, Operator), Pop(1)},\n-\t\t\t{`\\(`, Operator, Push()},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"in-intp\": {\n-\t\t\t{`\\{`, LiteralStringInterpol, Push()},\n-\t\t\t{`\\}`, LiteralStringInterpol, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"string-intp\": {\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"in-intp\")},\n-\t\t\t{`#@@?[a-zA-Z_]\\w*`, LiteralStringInterpol, nil},\n-\t\t\t{`#\\$[a-zA-Z_]\\w*`, LiteralStringInterpol, nil},\n-\t\t},\n-\t\t\"string-intp-escaped\": {\n-\t\t\tInclude(\"string-intp\"),\n-\t\t\t{`\\\\([\\\\abefnrstv#\"\\']|x[a-fA-F0-9]{1,2}|[0-7]{1,3})`, LiteralStringEscape, nil},\n-\t\t},\n-\t\t\"interpolated-regex\": {\n-\t\t\tInclude(\"string-intp\"),\n-\t\t\t{`[\\\\#]`, LiteralStringRegex, nil},\n-\t\t\t{`[^\\\\#]+`, LiteralStringRegex, nil},\n-\t\t},\n-\t\t\"interpolated-string\": {\n-\t\t\tInclude(\"string-intp\"),\n-\t\t\t{`[\\\\#]`, LiteralStringOther, nil},\n-\t\t\t{`[^\\\\#]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"multiline-regex\": {\n-\t\t\tInclude(\"string-intp\"),\n-\t\t\t{`\\\\\\\\`, LiteralStringRegex, nil},\n-\t\t\t{`\\\\/`, LiteralStringRegex, nil},\n-\t\t\t{`[\\\\#]`, LiteralStringRegex, nil},\n-\t\t\t{`[^\\\\/#]+`, LiteralStringRegex, nil},\n-\t\t\t{`/[mixounse]*`, LiteralStringRegex, Pop(1)},\n-\t\t},\n-\t\t\"end-part\": {\n-\t\t\t{`.+`, CommentPreproc, Pop(1)},\n-\t\t},\n-\t\t\"strings\": {\n-\t\t\t{`\\:@{0,2}[a-zA-Z_]\\w*[!?]?`, LiteralStringSymbol, nil},\n-\t\t\t{Words(`\\:@{0,2}`, ``, `*`, `**`, `-`, `+`, `-@`, `+@`, `/`, `%`, `&`, `|`, `^`, \"`\", `~`, `[]`, `[]=`, `<<`, `>>`, `<`, `<>`, `<=>`, `>`, `>=`, `==`, `===`), LiteralStringSymbol, nil},\n-\t\t\t{`:'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSymbol, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t\t{`:\"`, LiteralStringSymbol, Push(\"simple-sym\")},\n-\t\t\t{`([a-zA-Z_]\\w*)(:)(?!:)`, ByGroups(LiteralStringSymbol, Punctuation), nil},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"simple-string\")},\n-\t\t\t{\"(?<!\\\\.)`\", LiteralStringBacktick, Push(\"simple-backtick\")},\n-\t\t\t{`%[QWx]?\\{`, LiteralStringOther, Push(\"cb-intp-string\")},\n-\t\t\t{`%[qsw]\\{`, LiteralStringOther, Push(\"cb-string\")},\n-\t\t\t{`%r\\{`, LiteralStringRegex, Push(\"cb-regex\")},\n-\t\t\t{`%[QWx]?\\[`, LiteralStringOther, Push(\"sb-intp-string\")},\n-\t\t\t{`%[qsw]\\[`, LiteralStringOther, Push(\"sb-string\")},\n-\t\t\t{`%r\\[`, LiteralStringRegex, Push(\"sb-regex\")},\n-\t\t\t{`%[QWx]?\\(`, LiteralStringOther, Push(\"pa-intp-string\")},\n-\t\t\t{`%[qsw]\\(`, LiteralStringOther, Push(\"pa-string\")},\n-\t\t\t{`%r\\(`, LiteralStringRegex, Push(\"pa-regex\")},\n-\t\t\t{`%[QWx]?<`, LiteralStringOther, Push(\"ab-intp-string\")},\n-\t\t\t{`%[qsw]<`, LiteralStringOther, Push(\"ab-string\")},\n-\t\t\t{`%r<`, LiteralStringRegex, Push(\"ab-regex\")},\n-\t\t\t{`(%r([\\W_]))((?:\\\\\\2|(?!\\2).)*)(\\2[mixounse]*)`, String, nil},\n-\t\t\t{`%[qsw]([\\W_])((?:\\\\\\1|(?!\\1).)*)\\1`, LiteralStringOther, nil},\n-\t\t\t{`(%[QWx]([\\W_]))((?:\\\\\\2|(?!\\2).)*)(\\2)`, String, nil},\n-\t\t\t{`(?<=[-+/*%=<>&!^|~,(])(\\s*)(%([\\t ])(?:(?:\\\\\\3|(?!\\3).)*)\\3)`, ByGroups(Text, LiteralStringOther, None), nil},\n-\t\t\t{`^(\\s*)(%([\\t ])(?:(?:\\\\\\3|(?!\\3).)*)\\3)`, ByGroups(Text, LiteralStringOther, None), nil},\n-\t\t\t{`(%([^a-zA-Z0-9\\s]))((?:\\\\\\2|(?!\\2).)*)(\\2)`, String, nil},\n-\t\t},\n-\t\t\"simple-string\": {\n-\t\t\tInclude(\"string-intp-escaped\"),\n-\t\t\t{`[^\\\\\"#]+`, LiteralStringDouble, nil},\n-\t\t\t{`[\\\\#]`, LiteralStringDouble, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t},\n-\t\t\"simple-sym\": {\n-\t\t\tInclude(\"string-intp-escaped\"),\n-\t\t\t{`[^\\\\\"#]+`, LiteralStringSymbol, nil},\n-\t\t\t{`[\\\\#]`, LiteralStringSymbol, nil},\n-\t\t\t{`\"`, LiteralStringSymbol, Pop(1)},\n-\t\t},\n-\t\t\"simple-backtick\": {\n-\t\t\tInclude(\"string-intp-escaped\"),\n-\t\t\t{\"[^\\\\\\\\`#]+\", LiteralStringBacktick, nil},\n-\t\t\t{`[\\\\#]`, LiteralStringBacktick, nil},\n-\t\t\t{\"`\", LiteralStringBacktick, Pop(1)},\n-\t\t},\n-\t\t\"cb-intp-string\": {\n-\t\t\t{`\\\\[\\\\{}]`, LiteralStringOther, nil},\n-\t\t\t{`\\{`, LiteralStringOther, Push()},\n-\t\t\t{`\\}`, LiteralStringOther, Pop(1)},\n-\t\t\tInclude(\"string-intp-escaped\"),\n-\t\t\t{`[\\\\#{}]`, LiteralStringOther, nil},\n-\t\t\t{`[^\\\\#{}]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"cb-string\": {\n-\t\t\t{`\\\\[\\\\{}]`, LiteralStringOther, nil},\n-\t\t\t{`\\{`, LiteralStringOther, Push()},\n-\t\t\t{`\\}`, LiteralStringOther, Pop(1)},\n-\t\t\t{`[\\\\#{}]`, LiteralStringOther, nil},\n-\t\t\t{`[^\\\\#{}]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"cb-regex\": {\n-\t\t\t{`\\\\[\\\\{}]`, LiteralStringRegex, nil},\n-\t\t\t{`\\{`, LiteralStringRegex, Push()},\n-\t\t\t{`\\}[mixounse]*`, LiteralStringRegex, Pop(1)},\n-\t\t\tInclude(\"string-intp\"),\n-\t\t\t{`[\\\\#{}]`, LiteralStringRegex, nil},\n-\t\t\t{`[^\\\\#{}]+`, LiteralStringRegex, nil},\n-\t\t},\n-\t\t\"sb-intp-string\": {\n-\t\t\t{`\\\\[\\\\\\[\\]]`, LiteralStringOther, nil},\n-\t\t\t{`\\[`, LiteralStringOther, Push()},\n-\t\t\t{`\\]`, LiteralStringOther, Pop(1)},\n-\t\t\tInclude(\"string-intp-escaped\"),\n-\t\t\t{`[\\\\#\\[\\]]`, LiteralStringOther, nil},\n-\t\t\t{`[^\\\\#\\[\\]]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"sb-string\": {\n-\t\t\t{`\\\\[\\\\\\[\\]]`, LiteralStringOther, nil},\n-\t\t\t{`\\[`, LiteralStringOther, Push()},\n-\t\t\t{`\\]`, LiteralStringOther, Pop(1)},\n-\t\t\t{`[\\\\#\\[\\]]`, LiteralStringOther, nil},\n-\t\t\t{`[^\\\\#\\[\\]]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"sb-regex\": {\n-\t\t\t{`\\\\[\\\\\\[\\]]`, LiteralStringRegex, nil},\n-\t\t\t{`\\[`, LiteralStringRegex, Push()},\n-\t\t\t{`\\][mixounse]*`, LiteralStringRegex, Pop(1)},\n-\t\t\tInclude(\"string-intp\"),\n-\t\t\t{`[\\\\#\\[\\]]`, LiteralStringRegex, nil},\n-\t\t\t{`[^\\\\#\\[\\]]+`, LiteralStringRegex, nil},\n-\t\t},\n-\t\t\"pa-intp-string\": {\n-\t\t\t{`\\\\[\\\\()]`, LiteralStringOther, nil},\n-\t\t\t{`\\(`, LiteralStringOther, Push()},\n-\t\t\t{`\\)`, LiteralStringOther, Pop(1)},\n-\t\t\tInclude(\"string-intp-escaped\"),\n-\t\t\t{`[\\\\#()]`, LiteralStringOther, nil},\n-\t\t\t{`[^\\\\#()]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"pa-string\": {\n-\t\t\t{`\\\\[\\\\()]`, LiteralStringOther, nil},\n-\t\t\t{`\\(`, LiteralStringOther, Push()},\n-\t\t\t{`\\)`, LiteralStringOther, Pop(1)},\n-\t\t\t{`[\\\\#()]`, LiteralStringOther, nil},\n-\t\t\t{`[^\\\\#()]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"pa-regex\": {\n-\t\t\t{`\\\\[\\\\()]`, LiteralStringRegex, nil},\n-\t\t\t{`\\(`, LiteralStringRegex, Push()},\n-\t\t\t{`\\)[mixounse]*`, LiteralStringRegex, Pop(1)},\n-\t\t\tInclude(\"string-intp\"),\n-\t\t\t{`[\\\\#()]`, LiteralStringRegex, nil},\n-\t\t\t{`[^\\\\#()]+`, LiteralStringRegex, nil},\n-\t\t},\n-\t\t\"ab-intp-string\": {\n-\t\t\t{`\\\\[\\\\<>]`, LiteralStringOther, nil},\n-\t\t\t{`<`, LiteralStringOther, Push()},\n-\t\t\t{`>`, LiteralStringOther, Pop(1)},\n-\t\t\tInclude(\"string-intp-escaped\"),\n-\t\t\t{`[\\\\#<>]`, LiteralStringOther, nil},\n-\t\t\t{`[^\\\\#<>]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"ab-string\": {\n-\t\t\t{`\\\\[\\\\<>]`, LiteralStringOther, nil},\n-\t\t\t{`<`, LiteralStringOther, Push()},\n-\t\t\t{`>`, LiteralStringOther, Pop(1)},\n-\t\t\t{`[\\\\#<>]`, LiteralStringOther, nil},\n-\t\t\t{`[^\\\\#<>]+`, LiteralStringOther, nil},\n-\t\t},\n-\t\t\"ab-regex\": {\n-\t\t\t{`\\\\[\\\\<>]`, LiteralStringRegex, nil},\n-\t\t\t{`<`, LiteralStringRegex, Push()},\n-\t\t\t{`>[mixounse]*`, LiteralStringRegex, Pop(1)},\n-\t\t\tInclude(\"string-intp\"),\n-\t\t\t{`[\\\\#<>]`, LiteralStringRegex, nil},\n-\t\t\t{`[^\\\\#<>]+`, LiteralStringRegex, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "5399c9d7b252fcbc7a5ff45013e2d62744bcc330",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/r/rust.go",
      "status": "removed",
      "additions": 0,
      "deletions": 133,
      "changes": 133,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Frust.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Frust.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fr%2Frust.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,133 +0,0 @@\n-package r\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Rust lexer.\n-var Rust = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Rust\",\n-\t\tAliases:   []string{\"rust\", \"rs\"},\n-\t\tFilenames: []string{\"*.rs\", \"*.rs.in\"},\n-\t\tMimeTypes: []string{\"text/rust\", \"text/x-rust\"},\n-\t\tEnsureNL:  true,\n-\t},\n-\trustRules,\n-))\n-\n-func rustRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`#![^[\\r\\n].*$`, CommentPreproc, nil},\n-\t\t\tDefault(Push(\"base\")),\n-\t\t},\n-\t\t\"base\": {\n-\t\t\t{`\\n`, TextWhitespace, nil},\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t\t{`//!.*?\\n`, LiteralStringDoc, nil},\n-\t\t\t{`///(\\n|[^/].*?\\n)`, LiteralStringDoc, nil},\n-\t\t\t{`//(.*?)\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*\\*(\\n|[^/*])`, LiteralStringDoc, Push(\"doccomment\")},\n-\t\t\t{`/\\*!`, LiteralStringDoc, Push(\"doccomment\")},\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"comment\")},\n-\t\t\t{`r#*\"(?:\\\\.|[^\\\\;])*\"#*`, LiteralString, nil},\n-\t\t\t{`\"(?:\\\\.|[^\\\\\"])*\"`, LiteralString, nil},\n-\t\t\t{`\\$([a-zA-Z_]\\w*|\\(,?|\\),?|,?)`, CommentPreproc, nil},\n-\t\t\t{Words(``, `\\b`, `as`, `async`, `await`, `box`, `const`, `crate`, `dyn`, `else`, `extern`, `for`, `if`, `impl`, `in`, `loop`, `match`, `move`, `mut`, `pub`, `ref`, `return`, `static`, `super`, `trait`, `unsafe`, `use`, `where`, `while`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `abstract`, `become`, `do`, `final`, `macro`, `override`, `priv`, `typeof`, `try`, `unsized`, `virtual`, `yield`), KeywordReserved, nil},\n-\t\t\t{`(true|false)\\b`, KeywordConstant, nil},\n-\t\t\t{`self\\b`, NameBuiltinPseudo, nil},\n-\t\t\t{`mod\\b`, Keyword, Push(\"modname\")},\n-\t\t\t{`let\\b`, KeywordDeclaration, nil},\n-\t\t\t{`fn\\b`, Keyword, Push(\"funcname\")},\n-\t\t\t{`(struct|enum|type|union)\\b`, Keyword, Push(\"typename\")},\n-\t\t\t{`(default)(\\s+)(type|fn)\\b`, ByGroups(Keyword, Text, Keyword), nil},\n-\t\t\t{Words(``, `\\b`, `u8`, `u16`, `u32`, `u64`, `u128`, `i8`, `i16`, `i32`, `i64`, `i128`, `usize`, `isize`, `f32`, `f64`, `char`, `str`, `bool`), KeywordType, nil},\n-\t\t\t{`[sS]elf\\b`, NameBuiltinPseudo, nil},\n-\t\t\t{Words(``, `\\b`, `Copy`, `Send`, `Sized`, `Sync`, `Unpin`, `Drop`, `Fn`, `FnMut`, `FnOnce`, `drop`, `Box`, `ToOwned`, `Clone`, `PartialEq`, `PartialOrd`, `Eq`, `Ord`, `AsRef`, `AsMut`, `Into`, `From`, `Default`, `Iterator`, `Extend`, `IntoIterator`, `DoubleEndedIterator`, `ExactSizeIterator`, `Option`, `Some`, `None`, `Result`, `Ok`, `Err`, `String`, `ToString`, `Vec`), NameBuiltin, nil},\n-\t\t\t{Words(``, `!`, `asm`, `assert`, `assert_eq`, `assert_ne`, `cfg`, `column`, `compile_error`, `concat`, `concat_idents`, `dbg`, `debug_assert`, `debug_assert_eq`, `debug_assert_ne`, `env`, `eprint`, `eprintln`, `file`, `format`, `format_args`, `format_args_nl`, `global_asm`, `include`, `include_bytes`, `include_str`, `is_aarch64_feature_detected`, `is_arm_feature_detected`, `is_mips64_feature_detected`, `is_mips_feature_detected`, `is_powerpc64_feature_detected`, `is_powerpc_feature_detected`, `is_x86_feature_detected`, `line`, `llvm_asm`, `log_syntax`, `macro_rules`, `matches`, `module_path`, `option_env`, `panic`, `print`, `println`, `stringify`, `thread_local`, `todo`, `trace_macros`, `unimplemented`, `unreachable`, `vec`, `write`, `writeln`), NameFunctionMagic, nil},\n-\t\t\t{`::\\b`, Text, nil},\n-\t\t\t{`(?::|->)`, Text, Push(\"typename\")},\n-\t\t\t{`(break|continue)(\\b\\s*)(\\'[A-Za-z_]\\w*)?`, ByGroups(Keyword, TextWhitespace, NameLabel), nil},\n-\t\t\t{`'(\\\\['\"\\\\nrt]|\\\\x[0-7][0-9a-fA-F]|\\\\0|\\\\u\\{[0-9a-fA-F]{1,6}\\}|.)'`, LiteralStringChar, nil},\n-\t\t\t{`b'(\\\\['\"\\\\nrt]|\\\\x[0-9a-fA-F]{2}|\\\\0|\\\\u\\{[0-9a-fA-F]{1,6}\\}|.)'`, LiteralStringChar, nil},\n-\t\t\t{`0b[01_]+`, LiteralNumberBin, Push(\"number_lit\")},\n-\t\t\t{`0o[0-7_]+`, LiteralNumberOct, Push(\"number_lit\")},\n-\t\t\t{`0[xX][0-9a-fA-F_]+`, LiteralNumberHex, Push(\"number_lit\")},\n-\t\t\t{`[0-9][0-9_]*(\\.[0-9_]+[eE][+\\-]?[0-9_]+|\\.[0-9_]*(?!\\.)|[eE][+\\-]?[0-9_]+)`, LiteralNumberFloat, Push(\"number_lit\")},\n-\t\t\t{`[0-9][0-9_]*`, LiteralNumberInteger, Push(\"number_lit\")},\n-\t\t\t{`b\"`, LiteralString, Push(\"bytestring\")},\n-\t\t\t{`(?s)b?r(#*)\".*?\"\\1`, LiteralString, nil},\n-\t\t\t{`'`, Operator, Push(\"lifetime\")},\n-\t\t\t{`\\.\\.=?`, Operator, nil},\n-\t\t\t{`[{}()\\[\\],.;]`, Punctuation, nil},\n-\t\t\t{`[+\\-*/%&|<>^!~@=:?]`, Operator, nil},\n-\t\t\t{`(r#)?[a-zA-Z_]\\w*`, Name, nil},\n-\t\t\t{`r#[a-zA-Z_]\\w*`, Name, nil},\n-\t\t\t{`#!?\\[`, CommentPreproc, Push(\"attribute[\")},\n-\t\t\t{`#`, Text, nil},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`[^*/]+`, CommentMultiline, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push()},\n-\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n-\t\t\t{`[*/]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"doccomment\": {\n-\t\t\t{`[^*/]+`, LiteralStringDoc, nil},\n-\t\t\t{`/\\*`, LiteralStringDoc, Push()},\n-\t\t\t{`\\*/`, LiteralStringDoc, Pop(1)},\n-\t\t\t{`[*/]`, LiteralStringDoc, nil},\n-\t\t},\n-\t\t\"modname\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, NameNamespace, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"funcname\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, NameFunction, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"typename\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`&`, KeywordPseudo, nil},\n-\t\t\t{`'`, Operator, Push(\"lifetime\")},\n-\t\t\t{Words(``, `\\b`, `Copy`, `Send`, `Sized`, `Sync`, `Unpin`, `Drop`, `Fn`, `FnMut`, `FnOnce`, `drop`, `Box`, `ToOwned`, `Clone`, `PartialEq`, `PartialOrd`, `Eq`, `Ord`, `AsRef`, `AsMut`, `Into`, `From`, `Default`, `Iterator`, `Extend`, `IntoIterator`, `DoubleEndedIterator`, `ExactSizeIterator`, `Option`, `Some`, `None`, `Result`, `Ok`, `Err`, `String`, `ToString`, `Vec`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\b`, `u8`, `u16`, `u32`, `u64`, `u128`, `i8`, `i16`, `i32`, `i64`, `i128`, `usize`, `isize`, `f32`, `f64`, `char`, `str`, `bool`), KeywordType, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, NameClass, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"lifetime\": {\n-\t\t\t{`(static|_)`, NameBuiltin, nil},\n-\t\t\t{`[a-zA-Z_]+\\w*`, NameAttribute, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"number_lit\": {\n-\t\t\t{`[ui](8|16|32|64|size)`, Keyword, Pop(1)},\n-\t\t\t{`f(32|64)`, Keyword, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`\\\\['\"\\\\nrt]|\\\\x[0-7][0-9a-fA-F]|\\\\0|\\\\u\\{[0-9a-fA-F]{1,6}\\}`, LiteralStringEscape, nil},\n-\t\t\t{`[^\\\\\"]+`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralString, nil},\n-\t\t},\n-\t\t\"bytestring\": {\n-\t\t\t{`\\\\x[89a-fA-F][0-9a-fA-F]`, LiteralStringEscape, nil},\n-\t\t\tInclude(\"string\"),\n-\t\t},\n-\t\t\"attribute_common\": {\n-\t\t\t{`\"`, LiteralString, Push(\"string\")},\n-\t\t\t{`\\[`, CommentPreproc, Push(\"attribute[\")},\n-\t\t},\n-\t\t\"attribute[\": {\n-\t\t\tInclude(\"attribute_common\"),\n-\t\t\t{`\\]`, CommentPreproc, Pop(1)},\n-\t\t\t{`[^\"\\]\\[]+`, CommentPreproc, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "016a91bbd916a5eac241f7a0920d5b7536a6eacf",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/sas.go",
      "status": "removed",
      "additions": 0,
      "deletions": 98,
      "changes": 98,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsas.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsas.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsas.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,98 +0,0 @@\n-package s\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Sas lexer.\n-var Sas = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"SAS\",\n-\t\tAliases:         []string{\"sas\"},\n-\t\tFilenames:       []string{\"*.SAS\", \"*.sas\"},\n-\t\tMimeTypes:       []string{\"text/x-sas\", \"text/sas\", \"application/x-sas\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tsasRules,\n-))\n-\n-func sasRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"comments\"),\n-\t\t\tInclude(\"proc-data\"),\n-\t\t\tInclude(\"cards-datalines\"),\n-\t\t\tInclude(\"logs\"),\n-\t\t\tInclude(\"general\"),\n-\t\t\t{`.`, Text, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t},\n-\t\t\"comments\": {\n-\t\t\t{`^\\s*\\*.*?;`, Comment, nil},\n-\t\t\t{`/\\*.*?\\*/`, Comment, nil},\n-\t\t\t{`^\\s*\\*(.|\\n)*?;`, CommentMultiline, nil},\n-\t\t\t{`/[*](.|\\n)*?[*]/`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"proc-data\": {\n-\t\t\t{`(^|;)\\s*(proc \\w+|data|run|quit)[\\s;]`, KeywordReserved, nil},\n-\t\t},\n-\t\t\"cards-datalines\": {\n-\t\t\t{`^\\s*(datalines|cards)\\s*;\\s*$`, Keyword, Push(\"data\")},\n-\t\t},\n-\t\t\"data\": {\n-\t\t\t{`(.|\\n)*^\\s*;\\s*$`, Other, Pop(1)},\n-\t\t},\n-\t\t\"logs\": {\n-\t\t\t{`\\n?^\\s*%?put `, Keyword, Push(\"log-messages\")},\n-\t\t},\n-\t\t\"log-messages\": {\n-\t\t\t{`NOTE(:|-).*`, Generic, Pop(1)},\n-\t\t\t{`WARNING(:|-).*`, GenericEmph, Pop(1)},\n-\t\t\t{`ERROR(:|-).*`, GenericError, Pop(1)},\n-\t\t\tInclude(\"general\"),\n-\t\t},\n-\t\t\"general\": {\n-\t\t\tInclude(\"keywords\"),\n-\t\t\tInclude(\"vars-strings\"),\n-\t\t\tInclude(\"special\"),\n-\t\t\tInclude(\"numbers\"),\n-\t\t},\n-\t\t\"keywords\": {\n-\t\t\t{Words(`\\b`, `\\b`, `abort`, `array`, `attrib`, `by`, `call`, `cards`, `cards4`, `catname`, `continue`, `datalines`, `datalines4`, `delete`, `delim`, `delimiter`, `display`, `dm`, `drop`, `endsas`, `error`, `file`, `filename`, `footnote`, `format`, `goto`, `in`, `infile`, `informat`, `input`, `keep`, `label`, `leave`, `length`, `libname`, `link`, `list`, `lostcard`, `merge`, `missing`, `modify`, `options`, `output`, `out`, `page`, `put`, `redirect`, `remove`, `rename`, `replace`, `retain`, `return`, `select`, `set`, `skip`, `startsas`, `stop`, `title`, `update`, `waitsas`, `where`, `window`, `x`, `systask`), Keyword, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `add`, `and`, `alter`, `as`, `cascade`, `check`, `create`, `delete`, `describe`, `distinct`, `drop`, `foreign`, `from`, `group`, `having`, `index`, `insert`, `into`, `in`, `key`, `like`, `message`, `modify`, `msgtype`, `not`, `null`, `on`, `or`, `order`, `primary`, `references`, `reset`, `restrict`, `select`, `set`, `table`, `unique`, `update`, `validate`, `view`, `where`), Keyword, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `do`, `if`, `then`, `else`, `end`, `until`, `while`), Keyword, nil},\n-\t\t\t{Words(`%`, `\\b`, `bquote`, `nrbquote`, `cmpres`, `qcmpres`, `compstor`, `datatyp`, `display`, `do`, `else`, `end`, `eval`, `global`, `goto`, `if`, `index`, `input`, `keydef`, `label`, `left`, `length`, `let`, `local`, `lowcase`, `macro`, `mend`, `nrquote`, `nrstr`, `put`, `qleft`, `qlowcase`, `qscan`, `qsubstr`, `qsysfunc`, `qtrim`, `quote`, `qupcase`, `scan`, `str`, `substr`, `superq`, `syscall`, `sysevalf`, `sysexec`, `sysfunc`, `sysget`, `syslput`, `sysprod`, `sysrc`, `sysrput`, `then`, `to`, `trim`, `unquote`, `until`, `upcase`, `verify`, `while`, `window`), NameBuiltin, nil},\n-\t\t\t{Words(`\\b`, `\\(`, `abs`, `addr`, `airy`, `arcos`, `arsin`, `atan`, `attrc`, `attrn`, `band`, `betainv`, `blshift`, `bnot`, `bor`, `brshift`, `bxor`, `byte`, `cdf`, `ceil`, `cexist`, `cinv`, `close`, `cnonct`, `collate`, `compbl`, `compound`, `compress`, `cos`, `cosh`, `css`, `curobs`, `cv`, `daccdb`, `daccdbsl`, `daccsl`, `daccsyd`, `dacctab`, `dairy`, `date`, `datejul`, `datepart`, `datetime`, `day`, `dclose`, `depdb`, `depdbsl`, `depsl`, `depsyd`, `deptab`, `dequote`, `dhms`, `dif`, `digamma`, `dim`, `dinfo`, `dnum`, `dopen`, `doptname`, `doptnum`, `dread`, `dropnote`, `dsname`, `erf`, `erfc`, `exist`, `exp`, `fappend`, `fclose`, `fcol`, `fdelete`, `fetch`, `fetchobs`, `fexist`, `fget`, `fileexist`, `filename`, `fileref`, `finfo`, `finv`, `fipname`, `fipnamel`, `fipstate`, `floor`, `fnonct`, `fnote`, `fopen`, `foptname`, `foptnum`, `fpoint`, `fpos`, `fput`, `fread`, `frewind`, `frlen`, `fsep`, `fuzz`, `fwrite`, `gaminv`, `gamma`, `getoption`, `getvarc`, `getvarn`, `hbound`, `hms`, `hosthelp`, `hour`, `ibessel`, `index`, `indexc`, `indexw`, `input`, `inputc`, `inputn`, `int`, `intck`, `intnx`, `intrr`, `irr`, `jbessel`, `juldate`, `kurtosis`, `lag`, `lbound`, `left`, `length`, `lgamma`, `libname`, `libref`, `log`, `log10`, `log2`, `logpdf`, `logpmf`, `logsdf`, `lowcase`, `max`, `mdy`, `mean`, `min`, `minute`, `mod`, `month`, `mopen`, `mort`, `n`, `netpv`, `nmiss`, `normal`, `note`, `npv`, `open`, `ordinal`, `pathname`, `pdf`, `peek`, `peekc`, `pmf`, `point`, `poisson`, `poke`, `probbeta`, `probbnml`, `probchi`, `probf`, `probgam`, `probhypr`, `probit`, `probnegb`, `probnorm`, `probt`, `put`, `putc`, `putn`, `qtr`, `quote`, `ranbin`, `rancau`, `ranexp`, `rangam`, `range`, `rank`, `rannor`, `ranpoi`, `rantbl`, `rantri`, `ranuni`, `repeat`, `resolve`, `reverse`, `rewind`, `right`, `round`, `saving`, `scan`, `sdf`, `second`, `sign`, `sin`, `sinh`, `skewness`, `soundex`, `spedis`, `sqrt`, `std`, `stderr`, `stfips`, `stname`, `stnamel`, `substr`, `sum`, `symget`, `sysget`, `sysmsg`, `sysprod`, `sysrc`, `system`, `tan`, `tanh`, `time`, `timepart`, `tinv`, `tnonct`, `today`, `translate`, `tranwrd`, `trigamma`, `trim`, `trimn`, `trunc`, `uniform`, `upcase`, `uss`, `var`, `varfmt`, `varinfmt`, `varlabel`, `varlen`, `varname`, `varnum`, `varray`, `varrayx`, `vartype`, `verify`, `vformat`, `vformatd`, `vformatdx`, `vformatn`, `vformatnx`, `vformatw`, `vformatwx`, `vformatx`, `vinarray`, `vinarrayx`, `vinformat`, `vinformatd`, `vinformatdx`, `vinformatn`, `vinformatnx`, `vinformatw`, `vinformatwx`, `vinformatx`, `vlabel`, `vlabelx`, `vlength`, `vlengthx`, `vname`, `vnamex`, `vtype`, `vtypex`, `weekday`, `year`, `yyq`, `zipfips`, `zipname`, `zipnamel`, `zipstate`), NameBuiltin, nil},\n-\t\t},\n-\t\t\"vars-strings\": {\n-\t\t\t{`&[a-z_]\\w{0,31}\\.?`, NameVariable, nil},\n-\t\t\t{`%[a-z_]\\w{0,31}`, NameFunction, nil},\n-\t\t\t{`\\'`, LiteralString, Push(\"string_squote\")},\n-\t\t\t{`\"`, LiteralString, Push(\"string_dquote\")},\n-\t\t},\n-\t\t\"string_squote\": {\n-\t\t\t{`'`, LiteralString, Pop(1)},\n-\t\t\t{`\\\\\\\\|\\\\\"|\\\\\\n`, LiteralStringEscape, nil},\n-\t\t\t{`[^$\\'\\\\]+`, LiteralString, nil},\n-\t\t\t{`[$\\'\\\\]`, LiteralString, nil},\n-\t\t},\n-\t\t\"string_dquote\": {\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`\\\\\\\\|\\\\\"|\\\\\\n`, LiteralStringEscape, nil},\n-\t\t\t{`&`, NameVariable, Push(\"validvar\")},\n-\t\t\t{`[^$&\"\\\\]+`, LiteralString, nil},\n-\t\t\t{`[$\"\\\\]`, LiteralString, nil},\n-\t\t},\n-\t\t\"validvar\": {\n-\t\t\t{`[a-z_]\\w{0,31}\\.?`, NameVariable, Pop(1)},\n-\t\t},\n-\t\t\"numbers\": {\n-\t\t\t{`\\b[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+|\\.)(E[+-]?[0-9]+)?i?\\b`, LiteralNumber, nil},\n-\t\t},\n-\t\t\"special\": {\n-\t\t\t{`(null|missing|_all_|_automatic_|_character_|_n_|_infile_|_name_|_null_|_numeric_|_user_|_webout_)`, KeywordConstant, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "1b7337798715cd4ed47957bd292a77e6d4d02506",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/sass.go",
      "status": "removed",
      "additions": 0,
      "deletions": 148,
      "changes": 148,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsass.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsass.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsass.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,148 +0,0 @@\n-package s\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Sass lexer.\n-var Sass = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"Sass\",\n-\t\tAliases:         []string{\"sass\"},\n-\t\tFilenames:       []string{\"*.sass\"},\n-\t\tMimeTypes:       []string{\"text/x-sass\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tsassRules,\n-))\n-\n-func sassRules() Rules {\n-\treturn Rules{\n-\t\t// \"root\": {\n-\t\t// },\n-\t\t\"root\": {\n-\t\t\t{`[ \\t]*\\n`, Text, nil},\n-\t\t\t// { `[ \\t]*`, ?? <function _indentation at 0x106932e18> ??, nil },\n-\t\t\t// { `//[^\\n]*`, ?? <function _starts_block.<locals>.callback at 0x106936048> ??, Push(\"root\") },\n-\t\t\t// { `/\\*[^\\n]*`, ?? <function _starts_block.<locals>.callback at 0x1069360d0> ??, Push(\"root\") },\n-\t\t\t{`@import`, Keyword, Push(\"import\")},\n-\t\t\t{`@for`, Keyword, Push(\"for\")},\n-\t\t\t{`@(debug|warn|if|while)`, Keyword, Push(\"value\")},\n-\t\t\t{`(@mixin)( [\\w-]+)`, ByGroups(Keyword, NameFunction), Push(\"value\")},\n-\t\t\t{`(@include)( [\\w-]+)`, ByGroups(Keyword, NameDecorator), Push(\"value\")},\n-\t\t\t{`@extend`, Keyword, Push(\"selector\")},\n-\t\t\t{`@[\\w-]+`, Keyword, Push(\"selector\")},\n-\t\t\t{`=[\\w-]+`, NameFunction, Push(\"value\")},\n-\t\t\t{`\\+[\\w-]+`, NameDecorator, Push(\"value\")},\n-\t\t\t{`([!$][\\w-]\\w*)([ \\t]*(?:(?:\\|\\|)?=|:))`, ByGroups(NameVariable, Operator), Push(\"value\")},\n-\t\t\t{`:`, NameAttribute, Push(\"old-style-attr\")},\n-\t\t\t{`(?=.+?[=:]([^a-z]|$))`, NameAttribute, Push(\"new-style-attr\")},\n-\t\t\tDefault(Push(\"selector\")),\n-\t\t},\n-\t\t\"single-comment\": {\n-\t\t\t{`.+`, CommentSingle, nil},\n-\t\t\t{`\\n`, Text, Push(\"root\")},\n-\t\t},\n-\t\t\"multi-comment\": {\n-\t\t\t{`.+`, CommentMultiline, nil},\n-\t\t\t{`\\n`, Text, Push(\"root\")},\n-\t\t},\n-\t\t\"import\": {\n-\t\t\t{`[ \\t]+`, Text, nil},\n-\t\t\t{`\\S+`, LiteralString, nil},\n-\t\t\t{`\\n`, Text, Push(\"root\")},\n-\t\t},\n-\t\t\"old-style-attr\": {\n-\t\t\t{`[^\\s:=\"\\[]+`, NameAttribute, nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\t{`[ \\t]*=`, Operator, Push(\"value\")},\n-\t\t\tDefault(Push(\"value\")),\n-\t\t},\n-\t\t\"new-style-attr\": {\n-\t\t\t{`[^\\s:=\"\\[]+`, NameAttribute, nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\t{`[ \\t]*[=:]`, Operator, Push(\"value\")},\n-\t\t},\n-\t\t\"inline-comment\": {\n-\t\t\t{`(\\\\#|#(?=[^\\n{])|\\*(?=[^\\n/])|[^\\n#*])+`, CommentMultiline, nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\t{`\\*/`, Comment, Pop(1)},\n-\t\t},\n-\t\t\"value\": {\n-\t\t\t{`[ \\t]+`, Text, nil},\n-\t\t\t{`[!$][\\w-]+`, NameVariable, nil},\n-\t\t\t{`url\\(`, LiteralStringOther, Push(\"string-url\")},\n-\t\t\t{`[a-z_-][\\w-]*(?=\\()`, NameFunction, nil},\n-\t\t\t{Words(``, `\\b`, `align-content`, `align-items`, `align-self`, `alignment-baseline`, `all`, `animation`, `animation-delay`, `animation-direction`, `animation-duration`, `animation-fill-mode`, `animation-iteration-count`, `animation-name`, `animation-play-state`, `animation-timing-function`, `appearance`, `azimuth`, `backface-visibility`, `background`, `background-attachment`, `background-blend-mode`, `background-clip`, `background-color`, `background-image`, `background-origin`, `background-position`, `background-repeat`, `background-size`, `baseline-shift`, `bookmark-label`, `bookmark-level`, `bookmark-state`, `border`, `border-bottom`, `border-bottom-color`, `border-bottom-left-radius`, `border-bottom-right-radius`, `border-bottom-style`, `border-bottom-width`, `border-boundary`, `border-collapse`, `border-color`, `border-image`, `border-image-outset`, `border-image-repeat`, `border-image-slice`, `border-image-source`, `border-image-width`, `border-left`, `border-left-color`, `border-left-style`, `border-left-width`, `border-radius`, `border-right`, `border-right-color`, `border-right-style`, `border-right-width`, `border-spacing`, `border-style`, `border-top`, `border-top-color`, `border-top-left-radius`, `border-top-right-radius`, `border-top-style`, `border-top-width`, `border-width`, `bottom`, `box-decoration-break`, `box-shadow`, `box-sizing`, `box-snap`, `box-suppress`, `break-after`, `break-before`, `break-inside`, `caption-side`, `caret`, `caret-animation`, `caret-color`, `caret-shape`, `chains`, `clear`, `clip`, `clip-path`, `clip-rule`, `color`, `color-interpolation-filters`, `column-count`, `column-fill`, `column-gap`, `column-rule`, `column-rule-color`, `column-rule-style`, `column-rule-width`, `column-span`, `column-width`, `columns`, `content`, `counter-increment`, `counter-reset`, `counter-set`, `crop`, `cue`, `cue-after`, `cue-before`, `cursor`, `direction`, `display`, `dominant-baseline`, `elevation`, `empty-cells`, `filter`, `flex`, `flex-basis`, `flex-direction`, `flex-flow`, `flex-grow`, `flex-shrink`, `flex-wrap`, `float`, `float-defer`, `float-offset`, `float-reference`, `flood-color`, `flood-opacity`, `flow`, `flow-from`, `flow-into`, `font`, `font-family`, `font-feature-settings`, `font-kerning`, `font-language-override`, `font-size`, `font-size-adjust`, `font-stretch`, `font-style`, `font-synthesis`, `font-variant`, `font-variant-alternates`, `font-variant-caps`, `font-variant-east-asian`, `font-variant-ligatures`, `font-variant-numeric`, `font-variant-position`, `font-weight`, `footnote-display`, `footnote-policy`, `glyph-orientation-vertical`, `grid`, `grid-area`, `grid-auto-columns`, `grid-auto-flow`, `grid-auto-rows`, `grid-column`, `grid-column-end`, `grid-column-gap`, `grid-column-start`, `grid-gap`, `grid-row`, `grid-row-end`, `grid-row-gap`, `grid-row-start`, `grid-template`, `grid-template-areas`, `grid-template-columns`, `grid-template-rows`, `hanging-punctuation`, `height`, `hyphenate-character`, `hyphenate-limit-chars`, `hyphenate-limit-last`, `hyphenate-limit-lines`, `hyphenate-limit-zone`, `hyphens`, `image-orientation`, `image-resolution`, `initial-letter`, `initial-letter-align`, `initial-letter-wrap`, `isolation`, `justify-content`, `justify-items`, `justify-self`, `left`, `letter-spacing`, `lighting-color`, `line-break`, `line-grid`, `line-height`, `line-snap`, `list-style`, `list-style-image`, `list-style-position`, `list-style-type`, `margin`, `margin-bottom`, `margin-left`, `margin-right`, `margin-top`, `marker-side`, `marquee-direction`, `marquee-loop`, `marquee-speed`, `marquee-style`, `mask`, `mask-border`, `mask-border-mode`, `mask-border-outset`, `mask-border-repeat`, `mask-border-slice`, `mask-border-source`, `mask-border-width`, `mask-clip`, `mask-composite`, `mask-image`, `mask-mode`, `mask-origin`, `mask-position`, `mask-repeat`, `mask-size`, `mask-type`, `max-height`, `max-lines`, `max-width`, `min-height`, `min-width`, `mix-blend-mode`, `motion`, `motion-offset`, `motion-path`, `motion-rotation`, `move-to`, `nav-down`, `nav-left`, `nav-right`, `nav-up`, `object-fit`, `object-position`, `offset-after`, `offset-before`, `offset-end`, `offset-start`, `opacity`, `order`, `orphans`, `outline`, `outline-color`, `outline-offset`, `outline-style`, `outline-width`, `overflow`, `overflow-style`, `overflow-wrap`, `overflow-x`, `overflow-y`, `padding`, `padding-bottom`, `padding-left`, `padding-right`, `padding-top`, `page`, `page-break-after`, `page-break-before`, `page-break-inside`, `page-policy`, `pause`, `pause-after`, `pause-before`, `perspective`, `perspective-origin`, `pitch`, `pitch-range`, `play-during`, `polar-angle`, `polar-distance`, `position`, `presentation-level`, `quotes`, `region-fragment`, `resize`, `rest`, `rest-after`, `rest-before`, `richness`, `right`, `rotation`, `rotation-point`, `ruby-align`, `ruby-merge`, `ruby-position`, `running`, `scroll-snap-coordinate`, `scroll-snap-destination`, `scroll-snap-points-x`, `scroll-snap-points-y`, `scroll-snap-type`, `shape-image-threshold`, `shape-inside`, `shape-margin`, `shape-outside`, `size`, `speak`, `speak-as`, `speak-header`, `speak-numeral`, `speak-punctuation`, `speech-rate`, `stress`, `string-set`, `tab-size`, `table-layout`, `text-align`, `text-align-last`, `text-combine-upright`, `text-decoration`, `text-decoration-color`, `text-decoration-line`, `text-decoration-skip`, `text-decoration-style`, `text-emphasis`, `text-emphasis-color`, `text-emphasis-position`, `text-emphasis-style`, `text-indent`, `text-justify`, `text-orientation`, `text-overflow`, `text-shadow`, `text-space-collapse`, `text-space-trim`, `text-spacing`, `text-transform`, `text-underline-position`, `text-wrap`, `top`, `transform`, `transform-origin`, `transform-style`, `transition`, `transition-delay`, `transition-duration`, `transition-property`, `transition-timing-function`, `unicode-bidi`, `user-select`, `vertical-align`, `visibility`, `voice-balance`, `voice-duration`, `voice-family`, `voice-pitch`, `voice-range`, `voice-rate`, `voice-stress`, `voice-volume`, `volume`, `white-space`, `widows`, `width`, `will-change`, `word-break`, `word-spacing`, `word-wrap`, `wrap-after`, `wrap-before`, `wrap-flow`, `wrap-inside`, `wrap-through`, `writing-mode`, `z-index`, `above`, `absolute`, `always`, `armenian`, `aural`, `auto`, `avoid`, `baseline`, `behind`, `below`, `bidi-override`, `blink`, `block`, `bold`, `bolder`, `both`, `capitalize`, `center-left`, `center-right`, `center`, `circle`, `cjk-ideographic`, `close-quote`, `collapse`, `condensed`, `continuous`, `crop`, `crosshair`, `cross`, `cursive`, `dashed`, `decimal-leading-zero`, `decimal`, `default`, `digits`, `disc`, `dotted`, `double`, `e-resize`, `embed`, `extra-condensed`, `extra-expanded`, `expanded`, `fantasy`, `far-left`, `far-right`, `faster`, `fast`, `fixed`, `georgian`, `groove`, `hebrew`, `help`, `hidden`, `hide`, `higher`, `high`, `hiragana-iroha`, `hiragana`, `icon`, `inherit`, `inline-table`, `inline`, `inset`, `inside`, `invert`, `italic`, `justify`, `katakana-iroha`, `katakana`, `landscape`, `larger`, `large`, `left-side`, `leftwards`, `level`, `lighter`, `line-through`, `list-item`, `loud`, `lower-alpha`, `lower-greek`, `lower-roman`, `lowercase`, `ltr`, `lower`, `low`, `medium`, `message-box`, `middle`, `mix`, `monospace`, `n-resize`, `narrower`, `ne-resize`, `no-close-quote`, `no-open-quote`, `no-repeat`, `none`, `normal`, `nowrap`, `nw-resize`, `oblique`, `once`, `open-quote`, `outset`, `outside`, `overline`, `pointer`, `portrait`, `px`, `relative`, `repeat-x`, `repeat-y`, `repeat`, `rgb`, `ridge`, `right-side`, `rightwards`, `s-resize`, `sans-serif`, `scroll`, `se-resize`, `semi-condensed`, `semi-expanded`, `separate`, `serif`, `show`, `silent`, `slow`, `slower`, `small-caps`, `small-caption`, `smaller`, `soft`, `solid`, `spell-out`, `square`, `static`, `status-bar`, `super`, `sw-resize`, `table-caption`, `table-cell`, `table-column`, `table-column-group`, `table-footer-group`, `table-header-group`, `table-row`, `table-row-group`, `text`, `text-bottom`, `text-top`, `thick`, `thin`, `transparent`, `ultra-condensed`, `ultra-expanded`, `underline`, `upper-alpha`, `upper-latin`, `upper-roman`, `uppercase`, `url`, `visible`, `w-resize`, `wait`, `wider`, `x-fast`, `x-high`, `x-large`, `x-loud`, `x-low`, `x-small`, `x-soft`, `xx-large`, `xx-small`, `yes`), NameConstant, nil},\n-\t\t\t{Words(``, `\\b`, `aliceblue`, `antiquewhite`, `aqua`, `aquamarine`, `azure`, `beige`, `bisque`, `black`, `blanchedalmond`, `blue`, `blueviolet`, `brown`, `burlywood`, `cadetblue`, `chartreuse`, `chocolate`, `coral`, `cornflowerblue`, `cornsilk`, `crimson`, `cyan`, `darkblue`, `darkcyan`, `darkgoldenrod`, `darkgray`, `darkgreen`, `darkgrey`, `darkkhaki`, `darkmagenta`, `darkolivegreen`, `darkorange`, `darkorchid`, `darkred`, `darksalmon`, `darkseagreen`, `darkslateblue`, `darkslategray`, `darkslategrey`, `darkturquoise`, `darkviolet`, `deeppink`, `deepskyblue`, `dimgray`, `dimgrey`, `dodgerblue`, `firebrick`, `floralwhite`, `forestgreen`, `fuchsia`, `gainsboro`, `ghostwhite`, `gold`, `goldenrod`, `gray`, `green`, `greenyellow`, `grey`, `honeydew`, `hotpink`, `indianred`, `indigo`, `ivory`, `khaki`, `lavender`, `lavenderblush`, `lawngreen`, `lemonchiffon`, `lightblue`, `lightcoral`, `lightcyan`, `lightgoldenrodyellow`, `lightgray`, `lightgreen`, `lightgrey`, `lightpink`, `lightsalmon`, `lightseagreen`, `lightskyblue`, `lightslategray`, `lightslategrey`, `lightsteelblue`, `lightyellow`, `lime`, `limegreen`, `linen`, `magenta`, `maroon`, `mediumaquamarine`, `mediumblue`, `mediumorchid`, `mediumpurple`, `mediumseagreen`, `mediumslateblue`, `mediumspringgreen`, `mediumturquoise`, `mediumvioletred`, `midnightblue`, `mintcream`, `mistyrose`, `moccasin`, `navajowhite`, `navy`, `oldlace`, `olive`, `olivedrab`, `orange`, `orangered`, `orchid`, `palegoldenrod`, `palegreen`, `paleturquoise`, `palevioletred`, `papayawhip`, `peachpuff`, `peru`, `pink`, `plum`, `powderblue`, `purple`, `rebeccapurple`, `red`, `rosybrown`, `royalblue`, `saddlebrown`, `salmon`, `sandybrown`, `seagreen`, `seashell`, `sienna`, `silver`, `skyblue`, `slateblue`, `slategray`, `slategrey`, `snow`, `springgreen`, `steelblue`, `tan`, `teal`, `thistle`, `tomato`, `turquoise`, `violet`, `wheat`, `white`, `whitesmoke`, `yellow`, `yellowgreen`, `transparent`), NameEntity, nil},\n-\t\t\t{Words(``, `\\b`, `black`, `silver`, `gray`, `white`, `maroon`, `red`, `purple`, `fuchsia`, `green`, `lime`, `olive`, `yellow`, `navy`, `blue`, `teal`, `aqua`), NameBuiltin, nil},\n-\t\t\t{`\\!(important|default)`, NameException, nil},\n-\t\t\t{`(true|false)`, NamePseudo, nil},\n-\t\t\t{`(and|or|not)`, OperatorWord, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"inline-comment\")},\n-\t\t\t{`//[^\\n]*`, CommentSingle, nil},\n-\t\t\t{`\\#[a-z0-9]{1,6}`, LiteralNumberHex, nil},\n-\t\t\t{`(-?\\d+)(\\%|[a-z]+)?`, ByGroups(LiteralNumberInteger, KeywordType), nil},\n-\t\t\t{`(-?\\d*\\.\\d+)(\\%|[a-z]+)?`, ByGroups(LiteralNumberFloat, KeywordType), nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\t{`[~^*!&%<>|+=@:,./?-]+`, Operator, nil},\n-\t\t\t{`[\\[\\]()]+`, Punctuation, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string-double\")},\n-\t\t\t{`'`, LiteralStringSingle, Push(\"string-single\")},\n-\t\t\t{`[a-z_-][\\w-]*`, Name, nil},\n-\t\t\t{`\\n`, Text, Push(\"root\")},\n-\t\t},\n-\t\t\"interpolation\": {\n-\t\t\t{`\\}`, LiteralStringInterpol, Pop(1)},\n-\t\t\tInclude(\"value\"),\n-\t\t},\n-\t\t\"selector\": {\n-\t\t\t{`[ \\t]+`, Text, nil},\n-\t\t\t{`\\:`, NameDecorator, Push(\"pseudo-class\")},\n-\t\t\t{`\\.`, NameClass, Push(\"class\")},\n-\t\t\t{`\\#`, NameNamespace, Push(\"id\")},\n-\t\t\t{`[\\w-]+`, NameTag, nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\t{`&`, Keyword, nil},\n-\t\t\t{`[~^*!&\\[\\]()<>|+=@:;,./?-]`, Operator, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string-double\")},\n-\t\t\t{`'`, LiteralStringSingle, Push(\"string-single\")},\n-\t\t\t{`\\n`, Text, Push(\"root\")},\n-\t\t},\n-\t\t\"string-double\": {\n-\t\t\t{`(\\\\.|#(?=[^\\n{])|[^\\n\"#])+`, LiteralStringDouble, nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t},\n-\t\t\"string-single\": {\n-\t\t\t{`(\\\\.|#(?=[^\\n{])|[^\\n'#])+`, LiteralStringSingle, nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\t{`'`, LiteralStringSingle, Pop(1)},\n-\t\t},\n-\t\t\"string-url\": {\n-\t\t\t{`(\\\\#|#(?=[^\\n{])|[^\\n#)])+`, LiteralStringOther, nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\t{`\\)`, LiteralStringOther, Pop(1)},\n-\t\t},\n-\t\t\"pseudo-class\": {\n-\t\t\t{`[\\w-]+`, NameDecorator, nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"class\": {\n-\t\t\t{`[\\w-]+`, NameClass, nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"id\": {\n-\t\t\t{`[\\w-]+`, NameNamespace, nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"for\": {\n-\t\t\t{`(from|to|through)`, OperatorWord, nil},\n-\t\t\tInclude(\"value\"),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "6798c0c6b26065f368e866760b8aca5660b327fa",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/scala.go",
      "status": "removed",
      "additions": 0,
      "deletions": 116,
      "changes": 116,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fscala.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fscala.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fscala.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,116 +0,0 @@\n-package s\n-\n-import (\n-\t\"fmt\"\n-\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Scala lexer.\n-var Scala = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Scala\",\n-\t\tAliases:   []string{\"scala\"},\n-\t\tFilenames: []string{\"*.scala\"},\n-\t\tMimeTypes: []string{\"text/x-scala\"},\n-\t\tDotAll:    true,\n-\t},\n-\tscalaRules,\n-))\n-\n-func scalaRules() Rules {\n-\tvar (\n-\t\tscalaOp     = \"[-~\\\\^\\\\*!%&\\\\\\\\<>\\\\|+=:/?@\\xa6-\\xa7\\xa9\\xac\\xae\\xb0-\\xb1\\xb6\\xd7\\xf7\\u03f6\\u0482\\u0606-\\u0608\\u060e-\\u060f\\u06e9\\u06fd-\\u06fe\\u07f6\\u09fa\\u0b70\\u0bf3-\\u0bf8\\u0bfa\\u0c7f\\u0cf1-\\u0cf2\\u0d79\\u0f01-\\u0f03\\u0f13-\\u0f17\\u0f1a-\\u0f1f\\u0f34\\u0f36\\u0f38\\u0fbe-\\u0fc5\\u0fc7-\\u0fcf\\u109e-\\u109f\\u1360\\u1390-\\u1399\\u1940\\u19e0-\\u19ff\\u1b61-\\u1b6a\\u1b74-\\u1b7c\\u2044\\u2052\\u207a-\\u207c\\u208a-\\u208c\\u2100-\\u2101\\u2103-\\u2106\\u2108-\\u2109\\u2114\\u2116-\\u2118\\u211e-\\u2123\\u2125\\u2127\\u2129\\u212e\\u213a-\\u213b\\u2140-\\u2144\\u214a-\\u214d\\u214f\\u2190-\\u2328\\u232b-\\u244a\\u249c-\\u24e9\\u2500-\\u2767\\u2794-\\u27c4\\u27c7-\\u27e5\\u27f0-\\u2982\\u2999-\\u29d7\\u29dc-\\u29fb\\u29fe-\\u2b54\\u2ce5-\\u2cea\\u2e80-\\u2ffb\\u3004\\u3012-\\u3013\\u3020\\u3036-\\u3037\\u303e-\\u303f\\u3190-\\u3191\\u3196-\\u319f\\u31c0-\\u31e3\\u3200-\\u321e\\u322a-\\u3250\\u3260-\\u327f\\u328a-\\u32b0\\u32c0-\\u33ff\\u4dc0-\\u4dff\\ua490-\\ua4c6\\ua828-\\ua82b\\ufb29\\ufdfd\\ufe62\\ufe64-\\ufe66\\uff0b\\uff1c-\\uff1e\\uff5c\\uff5e\\uffe2\\uffe4\\uffe8-\\uffee\\ufffc-\\ufffd]+\"\n-\t\tscalaUpper  = `[\\\\$_\\p{Lu}]`\n-\t\tscalaLetter = `[\\\\$_\\p{L}]`\n-\t\tscalaIDRest = fmt.Sprintf(`%s(?:%s|[0-9])*(?:(?<=_)%s)?`, scalaLetter, scalaLetter, scalaOp)\n-\t)\n-\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`(class|trait|object)(\\s+)`, ByGroups(Keyword, Text), Push(\"class\")},\n-\t\t\t{`[^\\S\\n]+`, Text, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"comment\")},\n-\t\t\t{`@` + scalaIDRest, NameDecorator, nil},\n-\t\t\t{`(abstract|ca(?:se|tch)|d(?:ef|o)|e(?:lse|xtends)|f(?:inal(?:ly)?|or(?:Some)?)|i(?:f|mplicit)|lazy|match|new|override|pr(?:ivate|otected)|re(?:quires|turn)|s(?:ealed|uper)|t(?:h(?:is|row)|ry)|va[lr]|w(?:hile|ith)|yield)\\b|(<[%:-]|=>|>:|[#=@_⇒←])(\\b|(?=\\s)|$)`, Keyword, nil},\n-\t\t\t{`:(?!` + scalaOp + `%s)`, Keyword, Push(\"type\")},\n-\t\t\t{fmt.Sprintf(\"%s%s\\\\b\", scalaUpper, scalaIDRest), NameClass, nil},\n-\t\t\t{`(true|false|null)\\b`, KeywordConstant, nil},\n-\t\t\t{`(import|package)(\\s+)`, ByGroups(Keyword, Text), Push(\"import\")},\n-\t\t\t{`(type)(\\s+)`, ByGroups(Keyword, Text), Push(\"type\")},\n-\t\t\t{`\"\"\".*?\"\"\"(?!\")`, LiteralString, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`'\\\\.'|'[^\\\\]'|'\\\\u[0-9a-fA-F]{4}'`, LiteralStringChar, nil},\n-\t\t\t{\"'\" + scalaIDRest, TextSymbol, nil},\n-\t\t\t{`[fs]\"\"\"`, LiteralString, Push(\"interptriplestring\")},\n-\t\t\t{`[fs]\"`, LiteralString, Push(\"interpstring\")},\n-\t\t\t{`raw\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{scalaIDRest, Name, nil},\n-\t\t\t{\"`[^`]+`\", Name, nil},\n-\t\t\t{`\\[`, Operator, Push(\"typeparam\")},\n-\t\t\t{`[(){};,.#]`, Operator, nil},\n-\t\t\t{scalaOp, Operator, nil},\n-\t\t\t{`([0-9][0-9]*\\.[0-9]*|\\.[0-9]+)([eE][+-]?[0-9]+)?[fFdD]?`, LiteralNumberFloat, nil},\n-\t\t\t{`0x[0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`[0-9]+L?`, LiteralNumberInteger, nil},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t},\n-\t\t\"class\": {\n-\t\t\t{fmt.Sprintf(\"(%s|%s|`[^`]+`)(\\\\s*)(\\\\[)\", scalaIDRest, scalaOp), ByGroups(NameClass, Text, Operator), Push(\"typeparam\")},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\{`, Operator, Pop(1)},\n-\t\t\t{`\\(`, Operator, Pop(1)},\n-\t\t\t{`//.*?\\n`, CommentSingle, Pop(1)},\n-\t\t\t{fmt.Sprintf(\"%s|%s|`[^`]+`\", scalaIDRest, scalaOp), NameClass, Pop(1)},\n-\t\t},\n-\t\t\"type\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`<[%:]|>:|[#_]|forSome|type`, Keyword, nil},\n-\t\t\t{`([,);}]|=>|=|⇒)(\\s*)`, ByGroups(Operator, Text), Pop(1)},\n-\t\t\t{`[({]`, Operator, Push()},\n-\t\t\t{fmt.Sprintf(\"((?:%s|%s|`[^`]+`)(?:\\\\.(?:%s|%s|`[^`]+`))*)(\\\\s*)(\\\\[)\", scalaIDRest, scalaOp, scalaIDRest, scalaOp), ByGroups(KeywordType, Text, Operator), Push(\"#pop\", \"typeparam\")},\n-\t\t\t{fmt.Sprintf(\"((?:%s|%s|`[^`]+`)(?:\\\\.(?:%s|%s|`[^`]+`))*)(\\\\s*)$\", scalaIDRest, scalaOp, scalaIDRest, scalaOp), ByGroups(KeywordType, Text), Pop(1)},\n-\t\t\t{`//.*?\\n`, CommentSingle, Pop(1)},\n-\t\t\t{fmt.Sprintf(\"\\\\.|%s|%s|`[^`]+`\", scalaIDRest, scalaOp), KeywordType, nil},\n-\t\t},\n-\t\t\"typeparam\": {\n-\t\t\t{`[\\s,]+`, Text, nil},\n-\t\t\t{`<[%:]|=>|>:|[#_⇒]|forSome|type`, Keyword, nil},\n-\t\t\t{`([\\])}])`, Operator, Pop(1)},\n-\t\t\t{`[(\\[{]`, Operator, Push()},\n-\t\t\t{fmt.Sprintf(\"\\\\.|%s|%s|`[^`]+`\", scalaIDRest, scalaOp), KeywordType, nil},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`[^/*]+`, CommentMultiline, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push()},\n-\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n-\t\t\t{`[*/]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"import\": {\n-\t\t\t{fmt.Sprintf(\"(%s|\\\\.)+\", scalaIDRest), NameNamespace, Pop(1)},\n-\t\t},\n-\t\t\"interpstringcommon\": {\n-\t\t\t{`[^\"$\\\\]+`, LiteralString, nil},\n-\t\t\t{`\\$\\$`, LiteralString, nil},\n-\t\t\t{`\\$` + scalaLetter + `(?:` + scalaLetter + `|\\d)*`, LiteralStringInterpol, nil},\n-\t\t\t{`\\$\\{`, LiteralStringInterpol, Push(\"interpbrace\")},\n-\t\t\t{`\\\\.`, LiteralString, nil},\n-\t\t},\n-\t\t\"interptriplestring\": {\n-\t\t\t{`\"\"\"(?!\")`, LiteralString, Pop(1)},\n-\t\t\t{`\"`, LiteralString, nil},\n-\t\t\tInclude(\"interpstringcommon\"),\n-\t\t},\n-\t\t\"interpstring\": {\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\tInclude(\"interpstringcommon\"),\n-\t\t},\n-\t\t\"interpbrace\": {\n-\t\t\t{`\\}`, LiteralStringInterpol, Pop(1)},\n-\t\t\t{`\\{`, LiteralStringInterpol, Push()},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "72a99f60bdbf6c90c401dce7deba7654a5ada254",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/scheme.go",
      "status": "removed",
      "additions": 0,
      "deletions": 57,
      "changes": 57,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fscheme.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fscheme.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fscheme.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,57 +0,0 @@\n-package s\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// nolint\n-\n-// Scheme lexer.\n-var SchemeLang = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Scheme\",\n-\t\tAliases:   []string{\"scheme\", \"scm\"},\n-\t\tFilenames: []string{\"*.scm\", \"*.ss\"},\n-\t\tMimeTypes: []string{\"text/x-scheme\", \"application/x-scheme\"},\n-\t},\n-\tschemeLangRules,\n-))\n-\n-func schemeLangRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`;.*$`, CommentSingle, nil},\n-\t\t\t{`#\\|`, CommentMultiline, Push(\"multiline-comment\")},\n-\t\t\t{`#;\\s*\\(`, Comment, Push(\"commented-form\")},\n-\t\t\t{`#!r6rs`, Comment, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`-?\\d+\\.\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`-?\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`'[\\w!$%&*+,/:<=>?@^~|-]+`, LiteralStringSymbol, nil},\n-\t\t\t{`#\\\\(alarm|backspace|delete|esc|linefeed|newline|page|return|space|tab|vtab|x[0-9a-zA-Z]{1,5}|.)`, LiteralStringChar, nil},\n-\t\t\t{`(#t|#f)`, NameConstant, nil},\n-\t\t\t{\"('|#|`|,@|,|\\\\.)\", Operator, nil},\n-\t\t\t{`(lambda |define |if |else |cond |and |or |case |let |let\\* |letrec |begin |do |delay |set\\! |\\=\\> |quote |quasiquote |unquote |unquote\\-splicing |define\\-syntax |let\\-syntax |letrec\\-syntax |syntax\\-rules )`, Keyword, nil},\n-\t\t\t{`(?<='\\()[\\w!$%&*+,/:<=>?@^~|-]+`, NameVariable, nil},\n-\t\t\t{`(?<=#\\()[\\w!$%&*+,/:<=>?@^~|-]+`, NameVariable, nil},\n-\t\t\t{`(?<=\\()(\\* |\\+ |\\- |\\/ |\\< |\\<\\= |\\= |\\> |\\>\\= |abs |acos |angle |append |apply |asin |assoc |assq |assv |atan |boolean\\? |caaaar |caaadr |caaar |caadar |caaddr |caadr |caar |cadaar |cadadr |cadar |caddar |cadddr |caddr |cadr |call\\-with\\-current\\-continuation |call\\-with\\-input\\-file |call\\-with\\-output\\-file |call\\-with\\-values |call\\/cc |car |cdaaar |cdaadr |cdaar |cdadar |cdaddr |cdadr |cdar |cddaar |cddadr |cddar |cdddar |cddddr |cdddr |cddr |cdr |ceiling |char\\-\\>integer |char\\-alphabetic\\? |char\\-ci\\<\\=\\? |char\\-ci\\<\\? |char\\-ci\\=\\? |char\\-ci\\>\\=\\? |char\\-ci\\>\\? |char\\-downcase |char\\-lower\\-case\\? |char\\-numeric\\? |char\\-ready\\? |char\\-upcase |char\\-upper\\-case\\? |char\\-whitespace\\? |char\\<\\=\\? |char\\<\\? |char\\=\\? |char\\>\\=\\? |char\\>\\? |char\\? |close\\-input\\-port |close\\-output\\-port |complex\\? |cons |cos |current\\-input\\-port |current\\-output\\-port |denominator |display |dynamic\\-wind |eof\\-object\\? |eq\\? |equal\\? |eqv\\? |eval |even\\? |exact\\-\\>inexact |exact\\? |exp |expt |floor |for\\-each |force |gcd |imag\\-part |inexact\\-\\>exact |inexact\\? |input\\-port\\? |integer\\-\\>char |integer\\? |interaction\\-environment |lcm |length |list |list\\-\\>string |list\\-\\>vector |list\\-ref |list\\-tail |list\\? |load |log |magnitude |make\\-polar |make\\-rectangular |make\\-string |make\\-vector |map |max |member |memq |memv |min |modulo |negative\\? |newline |not |null\\-environment |null\\? |number\\-\\>string |number\\? |numerator |odd\\? |open\\-input\\-file |open\\-output\\-file |output\\-port\\? |pair\\? |peek\\-char |port\\? |positive\\? |procedure\\? |quotient |rational\\? |rationalize |read |read\\-char |real\\-part |real\\? |remainder |reverse |round |scheme\\-report\\-environment |set\\-car\\! |set\\-cdr\\! |sin |sqrt |string |string\\-\\>list |string\\-\\>number |string\\-\\>symbol |string\\-append |string\\-ci\\<\\=\\? |string\\-ci\\<\\? |string\\-ci\\=\\? |string\\-ci\\>\\=\\? |string\\-ci\\>\\? |string\\-copy |string\\-fill\\! |string\\-length |string\\-ref |string\\-set\\! |string\\<\\=\\? |string\\<\\? |string\\=\\? |string\\>\\=\\? |string\\>\\? |string\\? |substring |symbol\\-\\>string |symbol\\? |tan |transcript\\-off |transcript\\-on |truncate |values |vector |vector\\-\\>list |vector\\-fill\\! |vector\\-length |vector\\-ref |vector\\-set\\! |vector\\? |with\\-input\\-from\\-file |with\\-output\\-to\\-file |write |write\\-char |zero\\? )`, NameBuiltin, nil},\n-\t\t\t{`(?<=\\()[\\w!$%&*+,/:<=>?@^~|-]+`, NameFunction, nil},\n-\t\t\t{`[\\w!$%&*+,/:<=>?@^~|-]+`, NameVariable, nil},\n-\t\t\t{`(\\(|\\))`, Punctuation, nil},\n-\t\t\t{`(\\[|\\])`, Punctuation, nil},\n-\t\t},\n-\t\t\"multiline-comment\": {\n-\t\t\t{`#\\|`, CommentMultiline, Push()},\n-\t\t\t{`\\|#`, CommentMultiline, Pop(1)},\n-\t\t\t{`[^|#]+`, CommentMultiline, nil},\n-\t\t\t{`[|#]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"commented-form\": {\n-\t\t\t{`\\(`, Comment, Push()},\n-\t\t\t{`\\)`, Comment, Pop(1)},\n-\t\t\t{`[^()]+`, Comment, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "f8164927fb454b137813ae6d11347726f563dfd9",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/scilab.go",
      "status": "removed",
      "additions": 0,
      "deletions": 48,
      "changes": 48,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fscilab.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fscilab.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fscilab.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,48 +0,0 @@\n-package s\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Scilab lexer.\n-var Scilab = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Scilab\",\n-\t\tAliases:   []string{\"scilab\"},\n-\t\tFilenames: []string{\"*.sci\", \"*.sce\", \"*.tst\"},\n-\t\tMimeTypes: []string{\"text/scilab\"},\n-\t},\n-\tscilabRules,\n-))\n-\n-func scilabRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`//.*?$`, CommentSingle, nil},\n-\t\t\t{`^\\s*function`, Keyword, Push(\"deffunc\")},\n-\t\t\t{Words(``, `\\b`, `__FILE__`, `__LINE__`, `break`, `case`, `catch`, `classdef`, `continue`, `do`, `else`, `elseif`, `end`, `end_try_catch`, `end_unwind_protect`, `endclassdef`, `endevents`, `endfor`, `endfunction`, `endif`, `endmethods`, `endproperties`, `endswitch`, `endwhile`, `events`, `for`, `function`, `get`, `global`, `if`, `methods`, `otherwise`, `persistent`, `properties`, `return`, `set`, `static`, `switch`, `try`, `until`, `unwind_protect`, `unwind_protect_cleanup`, `while`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `!!_invoke_`, `%H5Object_e`, `%H5Object_fieldnames`, `%H5Object_p`, `%XMLAttr_6`, `%XMLAttr_e`, `%XMLAttr_i_XMLElem`, `%XMLAttr_length`, `%XMLAttr_p`, `%XMLAttr_size`, `%XMLDoc_6`, `%XMLDoc_e`, `%XMLDoc_i_XMLList`, `%XMLDoc_p`, `%XMLElem_6`, `%XMLElem_e`, `%XMLElem_i_XMLDoc`, `%XMLElem_i_XMLElem`, `%XMLElem_i_XMLList`, `%XMLElem_p`, `%XMLList_6`, `%XMLList_e`, `%XMLList_i_XMLElem`, `%XMLList_i_XMLList`, `%XMLList_length`, `%XMLList_p`, `%XMLList_size`, `%XMLNs_6`, `%XMLNs_e`, `%XMLNs_i_XMLElem`, `%XMLNs_p`, `%XMLSet_6`, `%XMLSet_e`, `%XMLSet_length`, `%XMLSet_p`, `%XMLSet_size`, `%XMLValid_p`, `%_EClass_6`, `%_EClass_e`, `%_EClass_p`, `%_EObj_0`, `%_EObj_1__EObj`, `%_EObj_1_b`, `%_EObj_1_c`, `%_EObj_1_i`, `%_EObj_1_s`, `%_EObj_2__EObj`, `%_EObj_2_b`, `%_EObj_2_c`, `%_EObj_2_i`, `%_EObj_2_s`, `%_EObj_3__EObj`, `%_EObj_3_b`, `%_EObj_3_c`, `%_EObj_3_i`, `%_EObj_3_s`, `%_EObj_4__EObj`, `%_EObj_4_b`, `%_EObj_4_c`, `%_EObj_4_i`, `%_EObj_4_s`, `%_EObj_5`, `%_EObj_6`, `%_EObj_a__EObj`, `%_EObj_a_b`, `%_EObj_a_c`, `%_EObj_a_i`, `%_EObj_a_s`, `%_EObj_d__EObj`, `%_EObj_d_b`, `%_EObj_d_c`, `%_EObj_d_i`, `%_EObj_d_s`, `%_EObj_disp`, `%_EObj_e`, `%_EObj_g__EObj`, `%_EObj_g_b`, `%_EObj_g_c`, `%_EObj_g_i`, `%_EObj_g_s`, `%_EObj_h__EObj`, `%_EObj_h_b`, `%_EObj_h_c`, `%_EObj_h_i`, `%_EObj_h_s`, `%_EObj_i__EObj`, `%_EObj_j__EObj`, `%_EObj_j_b`, `%_EObj_j_c`, `%_EObj_j_i`, `%_EObj_j_s`, `%_EObj_k__EObj`, `%_EObj_k_b`, `%_EObj_k_c`, `%_EObj_k_i`, `%_EObj_k_s`, `%_EObj_l__EObj`, `%_EObj_l_b`, `%_EObj_l_c`, `%_EObj_l_i`, `%_EObj_l_s`, `%_EObj_m__EObj`, `%_EObj_m_b`, `%_EObj_m_c`, `%_EObj_m_i`, `%_EObj_m_s`, `%_EObj_n__EObj`, `%_EObj_n_b`, `%_EObj_n_c`, `%_EObj_n_i`, `%_EObj_n_s`, `%_EObj_o__EObj`, `%_EObj_o_b`, `%_EObj_o_c`, `%_EObj_o_i`, `%_EObj_o_s`, `%_EObj_p`, `%_EObj_p__EObj`, `%_EObj_p_b`, `%_EObj_p_c`, `%_EObj_p_i`, `%_EObj_p_s`, `%_EObj_q__EObj`, `%_EObj_q_b`, `%_EObj_q_c`, `%_EObj_q_i`, `%_EObj_q_s`, `%_EObj_r__EObj`, `%_EObj_r_b`, `%_EObj_r_c`, `%_EObj_r_i`, `%_EObj_r_s`, `%_EObj_s__EObj`, `%_EObj_s_b`, `%_EObj_s_c`, `%_EObj_s_i`, `%_EObj_s_s`, `%_EObj_t`, `%_EObj_x__EObj`, `%_EObj_x_b`, `%_EObj_x_c`, `%_EObj_x_i`, `%_EObj_x_s`, `%_EObj_y__EObj`, `%_EObj_y_b`, `%_EObj_y_c`, `%_EObj_y_i`, `%_EObj_y_s`, `%_EObj_z__EObj`, `%_EObj_z_b`, `%_EObj_z_c`, `%_EObj_z_i`, `%_EObj_z_s`, `%_eigs`, `%_load`, `%b_1__EObj`, `%b_2__EObj`, `%b_3__EObj`, `%b_4__EObj`, `%b_a__EObj`, `%b_d__EObj`, `%b_g__EObj`, `%b_h__EObj`, `%b_i_XMLList`, `%b_i__EObj`, `%b_j__EObj`, `%b_k__EObj`, `%b_l__EObj`, `%b_m__EObj`, `%b_n__EObj`, `%b_o__EObj`, `%b_p__EObj`, `%b_q__EObj`, `%b_r__EObj`, `%b_s__EObj`, `%b_x__EObj`, `%b_y__EObj`, `%b_z__EObj`, `%c_1__EObj`, `%c_2__EObj`, `%c_3__EObj`, `%c_4__EObj`, `%c_a__EObj`, `%c_d__EObj`, `%c_g__EObj`, `%c_h__EObj`, `%c_i_XMLAttr`, `%c_i_XMLDoc`, `%c_i_XMLElem`, `%c_i_XMLList`, `%c_i__EObj`, `%c_j__EObj`, `%c_k__EObj`, `%c_l__EObj`, `%c_m__EObj`, `%c_n__EObj`, `%c_o__EObj`, `%c_p__EObj`, `%c_q__EObj`, `%c_r__EObj`, `%c_s__EObj`, `%c_x__EObj`, `%c_y__EObj`, `%c_z__EObj`, `%ce_i_XMLList`, `%fptr_i_XMLList`, `%h_i_XMLList`, `%hm_i_XMLList`, `%i_1__EObj`, `%i_2__EObj`, `%i_3__EObj`, `%i_4__EObj`, `%i_a__EObj`, `%i_abs`, `%i_cumprod`, `%i_cumsum`, `%i_d__EObj`, `%i_diag`, `%i_g__EObj`, `%i_h__EObj`, `%i_i_XMLList`, `%i_i__EObj`, `%i_j__EObj`, `%i_k__EObj`, `%i_l__EObj`, `%i_m__EObj`, `%i_matrix`, `%i_max`, `%i_maxi`, `%i_min`, `%i_mini`, `%i_mput`, `%i_n__EObj`, `%i_o__EObj`, `%i_p`, `%i_p__EObj`, `%i_prod`, `%i_q__EObj`, `%i_r__EObj`, `%i_s__EObj`, `%i_sum`, `%i_tril`, `%i_triu`, `%i_x__EObj`, `%i_y__EObj`, `%i_z__EObj`, `%ip_i_XMLList`, `%l_i_XMLList`, `%l_i__EObj`, `%lss_i_XMLList`, `%mc_i_XMLList`, `%msp_full`, `%msp_i_XMLList`, `%msp_spget`, `%p_i_XMLList`, `%ptr_i_XMLList`, `%r_i_XMLList`, `%s_1__EObj`, `%s_2__EObj`, `%s_3__EObj`, `%s_4__EObj`, `%s_a__EObj`, `%s_d__EObj`, `%s_g__EObj`, `%s_h__EObj`, `%s_i_XMLList`, `%s_i__EObj`, `%s_j__EObj`, `%s_k__EObj`, `%s_l__EObj`, `%s_m__EObj`, `%s_n__EObj`, `%s_o__EObj`, `%s_p__EObj`, `%s_q__EObj`, `%s_r__EObj`, `%s_s__EObj`, `%s_x__EObj`, `%s_y__EObj`, `%s_z__EObj`, `%sp_i_XMLList`, `%spb_i_XMLList`, `%st_i_XMLList`, `Calendar`, `ClipBoard`, `Matplot`, `Matplot1`, `PlaySound`, `TCL_DeleteInterp`, `TCL_DoOneEvent`, `TCL_EvalFile`, `TCL_EvalStr`, `TCL_ExistArray`, `TCL_ExistInterp`, `TCL_ExistVar`, `TCL_GetVar`, `TCL_GetVersion`, `TCL_SetVar`, `TCL_UnsetVar`, `TCL_UpVar`, `_`, `_code2str`, `_d`, `_str2code`, `about`, `abs`, `acos`, `addModulePreferences`, `addcolor`, `addf`, `addhistory`, `addinter`, `addlocalizationdomain`, `amell`, `and`, `argn`, `arl2_ius`, `ascii`, `asin`, `atan`, `backslash`, `balanc`, `banner`, `base2dec`, `basename`, `bdiag`, `beep`, `besselh`, `besseli`, `besselj`, `besselk`, `bessely`, `beta`, `bezout`, `bfinit`, `blkfc1i`, `blkslvi`, `bool2s`, `browsehistory`, `browsevar`, `bsplin3val`, `buildDoc`, `buildouttb`, `bvode`, `c_link`, `call`, `callblk`, `captions`, `cd`, `cdfbet`, `cdfbin`, `cdfchi`, `cdfchn`, `cdff`, `cdffnc`, `cdfgam`, `cdfnbn`, `cdfnor`, `cdfpoi`, `cdft`, `ceil`, `champ`, `champ1`, `chdir`, `chol`, `clc`, `clean`, `clear`, `clearfun`, `clearglobal`, `closeEditor`, `closeEditvar`, `closeXcos`, `code2str`, `coeff`, `color`, `comp`, `completion`, `conj`, `contour2di`, `contr`, `conv2`, `convstr`, `copy`, `copyfile`, `corr`, `cos`, `coserror`, `createdir`, `cshep2d`, `csvDefault`, `csvIsnum`, `csvRead`, `csvStringToDouble`, `csvTextScan`, `csvWrite`, `ctree2`, `ctree3`, `ctree4`, `cumprod`, `cumsum`, `curblock`, `curblockc`, `daskr`, `dasrt`, `dassl`, `data2sig`, `datatipCreate`, `datatipManagerMode`, `datatipMove`, `datatipRemove`, `datatipSetDisplay`, `datatipSetInterp`, `datatipSetOrientation`, `datatipSetStyle`, `datatipToggle`, `dawson`, `dct`, `debug`, `dec2base`, `deff`, `definedfields`, `degree`, `delbpt`, `delete`, `deletefile`, `delip`, `delmenu`, `det`, `dgettext`, `dhinf`, `diag`, `diary`, `diffobjs`, `disp`, `dispbpt`, `displayhistory`, `disposefftwlibrary`, `dlgamma`, `dnaupd`, `dneupd`, `double`, `drawaxis`, `drawlater`, `drawnow`, `driver`, `dsaupd`, `dsearch`, `dseupd`, `dst`, `duplicate`, `editvar`, `emptystr`, `end_scicosim`, `ereduc`, `erf`, `erfc`, `erfcx`, `erfi`, `errcatch`, `errclear`, `error`, `eval_cshep2d`, `exec`, `execstr`, `exists`, `exit`, `exp`, `expm`, `exportUI`, `export_to_hdf5`, `eye`, `fadj2sp`, `fec`, `feval`, `fft`, `fftw`, `fftw_flags`, `fftw_forget_wisdom`, `fftwlibraryisloaded`, `figure`, `file`, `filebrowser`, `fileext`, `fileinfo`, `fileparts`, `filesep`, `find`, `findBD`, `findfiles`, `fire_closing_finished`, `floor`, `format`, `fort`, `fprintfMat`, `freq`, `frexp`, `fromc`, `fromjava`, `fscanfMat`, `fsolve`, `fstair`, `full`, `fullpath`, `funcprot`, `funptr`, `gamma`, `gammaln`, `geom3d`, `get`, `getURL`, `get_absolute_file_path`, `get_fftw_wisdom`, `getblocklabel`, `getcallbackobject`, `getdate`, `getdebuginfo`, `getdefaultlanguage`, `getdrives`, `getdynlibext`, `getenv`, `getfield`, `gethistory`, `gethistoryfile`, `getinstalledlookandfeels`, `getio`, `getlanguage`, `getlongpathname`, `getlookandfeel`, `getmd5`, `getmemory`, `getmodules`, `getos`, `getpid`, `getrelativefilename`, `getscicosvars`, `getscilabmode`, `getshortpathname`, `gettext`, `getvariablesonstack`, `getversion`, `glist`, `global`, `glue`, `grand`, `graphicfunction`, `grayplot`, `grep`, `gsort`, `gstacksize`, `h5attr`, `h5close`, `h5cp`, `h5dataset`, `h5dump`, `h5exists`, `h5flush`, `h5get`, `h5group`, `h5isArray`, `h5isAttr`, `h5isCompound`, `h5isFile`, `h5isGroup`, `h5isList`, `h5isRef`, `h5isSet`, `h5isSpace`, `h5isType`, `h5isVlen`, `h5label`, `h5ln`, `h5ls`, `h5mount`, `h5mv`, `h5open`, `h5read`, `h5readattr`, `h5rm`, `h5umount`, `h5write`, `h5writeattr`, `havewindow`, `helpbrowser`, `hess`, `hinf`, `historymanager`, `historysize`, `host`, `htmlDump`, `htmlRead`, `htmlReadStr`, `htmlWrite`, `iconvert`, `ieee`, `ilib_verbose`, `imag`, `impl`, `import_from_hdf5`, `imult`, `inpnvi`, `int`, `int16`, `int2d`, `int32`, `int3d`, `int8`, `interp`, `interp2d`, `interp3d`, `intg`, `intppty`, `inttype`, `inv`, `invoke_lu`, `is_handle_valid`, `is_hdf5_file`, `isalphanum`, `isascii`, `isdef`, `isdigit`, `isdir`, `isequal`, `isequalbitwise`, `iserror`, `isfile`, `isglobal`, `isletter`, `isnum`, `isreal`, `iswaitingforinput`, `jallowClassReloading`, `jarray`, `jautoTranspose`, `jautoUnwrap`, `javaclasspath`, `javalibrarypath`, `jcast`, `jcompile`, `jconvMatrixMethod`, `jcreatejar`, `jdeff`, `jdisableTrace`, `jenableTrace`, `jexists`, `jgetclassname`, `jgetfield`, `jgetfields`, `jgetinfo`, `jgetmethods`, `jimport`, `jinvoke`, `jinvoke_db`, `jnewInstance`, `jremove`, `jsetfield`, `junwrap`, `junwraprem`, `jwrap`, `jwrapinfloat`, `kron`, `lasterror`, `ldiv`, `ldivf`, `legendre`, `length`, `lib`, `librarieslist`, `libraryinfo`, `light`, `linear_interpn`, `lines`, `link`, `linmeq`, `list`, `listvar_in_hdf5`, `load`, `loadGui`, `loadScicos`, `loadXcos`, `loadfftwlibrary`, `loadhistory`, `log`, `log1p`, `lsq`, `lsq_splin`, `lsqrsolve`, `lsslist`, `lstcat`, `lstsize`, `ltitr`, `lu`, `ludel`, `lufact`, `luget`, `lusolve`, `macr2lst`, `macr2tree`, `matfile_close`, `matfile_listvar`, `matfile_open`, `matfile_varreadnext`, `matfile_varwrite`, `matrix`, `max`, `maxfiles`, `mclearerr`, `mclose`, `meof`, `merror`, `messagebox`, `mfprintf`, `mfscanf`, `mget`, `mgeti`, `mgetl`, `mgetstr`, `min`, `mlist`, `mode`, `model2blk`, `mopen`, `move`, `movefile`, `mprintf`, `mput`, `mputl`, `mputstr`, `mscanf`, `mseek`, `msprintf`, `msscanf`, `mtell`, `mtlb_mode`, `mtlb_sparse`, `mucomp`, `mulf`, `name2rgb`, `nearfloat`, `newaxes`, `newest`, `newfun`, `nnz`, `norm`, `notify`, `number_properties`, `ode`, `odedc`, `ones`, `openged`, `opentk`, `optim`, `or`, `ordmmd`, `parallel_concurrency`, `parallel_run`, `param3d`, `param3d1`, `part`, `pathconvert`, `pathsep`, `phase_simulation`, `plot2d`, `plot2d1`, `plot2d2`, `plot2d3`, `plot2d4`, `plot3d`, `plot3d1`, `plotbrowser`, `pointer_xproperty`, `poly`, `ppol`, `pppdiv`, `predef`, `preferences`, `print`, `printf`, `printfigure`, `printsetupbox`, `prod`, `progressionbar`, `prompt`, `pwd`, `qld`, `qp_solve`, `qr`, `raise_window`, `rand`, `rankqr`, `rat`, `rcond`, `rdivf`, `read`, `read4b`, `read_csv`, `readb`, `readgateway`, `readmps`, `real`, `realtime`, `realtimeinit`, `regexp`, `relocate_handle`, `remez`, `removeModulePreferences`, `removedir`, `removelinehistory`, `res_with_prec`, `resethistory`, `residu`, `resume`, `return`, `ricc`, `rlist`, `roots`, `rotate_axes`, `round`, `rpem`, `rtitr`, `rubberbox`, `save`, `saveGui`, `saveafterncommands`, `saveconsecutivecommands`, `savehistory`, `schur`, `sci_haltscicos`, `sci_tree2`, `sci_tree3`, `sci_tree4`, `sciargs`, `scicos_debug`, `scicos_debug_count`, `scicos_time`, `scicosim`, `scinotes`, `sctree`, `semidef`, `set`, `set_blockerror`, `set_fftw_wisdom`, `set_xproperty`, `setbpt`, `setdefaultlanguage`, `setenv`, `setfield`, `sethistoryfile`, `setlanguage`, `setlookandfeel`, `setmenu`, `sfact`, `sfinit`, `show_window`, `sident`, `sig2data`, `sign`, `simp`, `simp_mode`, `sin`, `size`, `slash`, `sleep`, `sorder`, `sparse`, `spchol`, `spcompack`, `spec`, `spget`, `splin`, `splin2d`, `splin3d`, `splitURL`, `spones`, `sprintf`, `sqrt`, `stacksize`, `str2code`, `strcat`, `strchr`, `strcmp`, `strcspn`, `strindex`, `string`, `stringbox`, `stripblanks`, `strncpy`, `strrchr`, `strrev`, `strsplit`, `strspn`, `strstr`, `strsubst`, `strtod`, `strtok`, `subf`, `sum`, `svd`, `swap_handles`, `symfcti`, `syredi`, `system_getproperty`, `system_setproperty`, `ta2lpd`, `tan`, `taucs_chdel`, `taucs_chfact`, `taucs_chget`, `taucs_chinfo`, `taucs_chsolve`, `tempname`, `testmatrix`, `timer`, `tlist`, `tohome`, `tokens`, `toolbar`, `toprint`, `tr_zer`, `tril`, `triu`, `type`, `typename`, `uiDisplayTree`, `uicontextmenu`, `uicontrol`, `uigetcolor`, `uigetdir`, `uigetfile`, `uigetfont`, `uimenu`, `uint16`, `uint32`, `uint8`, `uipopup`, `uiputfile`, `uiwait`, `ulink`, `umf_ludel`, `umf_lufact`, `umf_luget`, `umf_luinfo`, `umf_lusolve`, `umfpack`, `unglue`, `unix`, `unsetmenu`, `unzoom`, `updatebrowsevar`, `usecanvas`, `useeditor`, `user`, `var2vec`, `varn`, `vec2var`, `waitbar`, `warnBlockByUID`, `warning`, `what`, `where`, `whereis`, `who`, `winsid`, `with_module`, `writb`, `write`, `write4b`, `write_csv`, `x_choose`, `x_choose_modeless`, `x_dialog`, `x_mdialog`, `xarc`, `xarcs`, `xarrows`, `xchange`, `xchoicesi`, `xclick`, `xcos`, `xcosAddToolsMenu`, `xcosConfigureXmlFile`, `xcosDiagramToScilab`, `xcosPalCategoryAdd`, `xcosPalDelete`, `xcosPalDisable`, `xcosPalEnable`, `xcosPalGenerateIcon`, `xcosPalGet`, `xcosPalLoad`, `xcosPalMove`, `xcosSimulationStarted`, `xcosUpdateBlock`, `xdel`, `xend`, `xfarc`, `xfarcs`, `xfpoly`, `xfpolys`, `xfrect`, `xget`, `xgetmouse`, `xgraduate`, `xgrid`, `xinit`, `xlfont`, `xls_open`, `xls_read`, `xmlAddNs`, `xmlAppend`, `xmlAsNumber`, `xmlAsText`, `xmlDTD`, `xmlDelete`, `xmlDocument`, `xmlDump`, `xmlElement`, `xmlFormat`, `xmlGetNsByHref`, `xmlGetNsByPrefix`, `xmlGetOpenDocs`, `xmlIsValidObject`, `xmlName`, `xmlNs`, `xmlRead`, `xmlReadStr`, `xmlRelaxNG`, `xmlRemove`, `xmlSchema`, `xmlSetAttributes`, `xmlValidate`, `xmlWrite`, `xmlXPath`, `xname`, `xpause`, `xpoly`, `xpolys`, `xrect`, `xrects`, `xs2bmp`, `xs2emf`, `xs2eps`, `xs2gif`, `xs2jpg`, `xs2pdf`, `xs2png`, `xs2ppm`, `xs2ps`, `xs2svg`, `xsegs`, `xset`, `xstring`, `xstringb`, `xtitle`, `zeros`, `znaupd`, `zneupd`, `zoom_rect`, `abort`, `apropos`, `break`, `case`, `catch`, `continue`, `do`, `else`, `elseif`, `end`, `endfunction`, `for`, `function`, `help`, `if`, `pause`, `quit`, `select`, `then`, `try`, `while`, `!_deff_wrapper`, `%0_i_st`, `%3d_i_h`, `%Block_xcosUpdateBlock`, `%TNELDER_p`, `%TNELDER_string`, `%TNMPLOT_p`, `%TNMPLOT_string`, `%TOPTIM_p`, `%TOPTIM_string`, `%TSIMPLEX_p`, `%TSIMPLEX_string`, `%_EVoid_p`, `%_gsort`, `%_listvarinfile`, `%_rlist`, `%_save`, `%_sodload`, `%_strsplit`, `%_unwrap`, `%ar_p`, `%asn`, `%b_a_b`, `%b_a_s`, `%b_c_s`, `%b_c_spb`, `%b_cumprod`, `%b_cumsum`, `%b_d_s`, `%b_diag`, `%b_e`, `%b_f_s`, `%b_f_spb`, `%b_g_s`, `%b_g_spb`, `%b_grand`, `%b_h_s`, `%b_h_spb`, `%b_i_b`, `%b_i_ce`, `%b_i_h`, `%b_i_hm`, `%b_i_s`, `%b_i_sp`, `%b_i_spb`, `%b_i_st`, `%b_iconvert`, `%b_l_b`, `%b_l_s`, `%b_m_b`, `%b_m_s`, `%b_matrix`, `%b_n_hm`, `%b_o_hm`, `%b_p_s`, `%b_prod`, `%b_r_b`, `%b_r_s`, `%b_s_b`, `%b_s_s`, `%b_string`, `%b_sum`, `%b_tril`, `%b_triu`, `%b_x_b`, `%b_x_s`, `%bicg`, `%bicgstab`, `%c_a_c`, `%c_b_c`, `%c_b_s`, `%c_diag`, `%c_dsearch`, `%c_e`, `%c_eye`, `%c_f_s`, `%c_grand`, `%c_i_c`, `%c_i_ce`, `%c_i_h`, `%c_i_hm`, `%c_i_lss`, `%c_i_r`, `%c_i_s`, `%c_i_st`, `%c_matrix`, `%c_n_l`, `%c_n_st`, `%c_o_l`, `%c_o_st`, `%c_ones`, `%c_rand`, `%c_tril`, `%c_triu`, `%cblock_c_cblock`, `%cblock_c_s`, `%cblock_e`, `%cblock_f_cblock`, `%cblock_p`, `%cblock_size`, `%ce_6`, `%ce_c_ce`, `%ce_e`, `%ce_f_ce`, `%ce_i_ce`, `%ce_i_s`, `%ce_i_st`, `%ce_matrix`, `%ce_p`, `%ce_size`, `%ce_string`, `%ce_t`, `%cgs`, `%champdat_i_h`, `%choose`, `%diagram_xcos`, `%dir_p`, `%fptr_i_st`, `%grand_perm`, `%grayplot_i_h`, `%h_i_st`, `%hmS_k_hmS_generic`, `%hm_1_hm`, `%hm_1_s`, `%hm_2_hm`, `%hm_2_s`, `%hm_3_hm`, `%hm_3_s`, `%hm_4_hm`, `%hm_4_s`, `%hm_5`, `%hm_a_hm`, `%hm_a_r`, `%hm_a_s`, `%hm_abs`, `%hm_and`, `%hm_bool2s`, `%hm_c_hm`, `%hm_ceil`, `%hm_conj`, `%hm_cos`, `%hm_cumprod`, `%hm_cumsum`, `%hm_d_hm`, `%hm_d_s`, `%hm_degree`, `%hm_dsearch`, `%hm_e`, `%hm_exp`, `%hm_eye`, `%hm_f_hm`, `%hm_find`, `%hm_floor`, `%hm_g_hm`, `%hm_grand`, `%hm_gsort`, `%hm_h_hm`, `%hm_i_b`, `%hm_i_ce`, `%hm_i_h`, `%hm_i_hm`, `%hm_i_i`, `%hm_i_p`, `%hm_i_r`, `%hm_i_s`, `%hm_i_st`, `%hm_iconvert`, `%hm_imag`, `%hm_int`, `%hm_isnan`, `%hm_isreal`, `%hm_j_hm`, `%hm_j_s`, `%hm_k_hm`, `%hm_k_s`, `%hm_log`, `%hm_m_p`, `%hm_m_r`, `%hm_m_s`, `%hm_matrix`, `%hm_max`, `%hm_mean`, `%hm_median`, `%hm_min`, `%hm_n_b`, `%hm_n_c`, `%hm_n_hm`, `%hm_n_i`, `%hm_n_p`, `%hm_n_s`, `%hm_o_b`, `%hm_o_c`, `%hm_o_hm`, `%hm_o_i`, `%hm_o_p`, `%hm_o_s`, `%hm_ones`, `%hm_or`, `%hm_p`, `%hm_prod`, `%hm_q_hm`, `%hm_r_s`, `%hm_rand`, `%hm_real`, `%hm_round`, `%hm_s`, `%hm_s_hm`, `%hm_s_r`, `%hm_s_s`, `%hm_sign`, `%hm_sin`, `%hm_size`, `%hm_sqrt`, `%hm_stdev`, `%hm_string`, `%hm_sum`, `%hm_x_hm`, `%hm_x_p`, `%hm_x_s`, `%hm_zeros`, `%i_1_s`, `%i_2_s`, `%i_3_s`, `%i_4_s`, `%i_Matplot`, `%i_a_i`, `%i_a_s`, `%i_and`, `%i_ascii`, `%i_b_s`, `%i_bezout`, `%i_champ`, `%i_champ1`, `%i_contour`, `%i_contour2d`, `%i_d_i`, `%i_d_s`, `%i_dsearch`, `%i_e`, `%i_fft`, `%i_g_i`, `%i_gcd`, `%i_grand`, `%i_h_i`, `%i_i_ce`, `%i_i_h`, `%i_i_hm`, `%i_i_i`, `%i_i_s`, `%i_i_st`, `%i_j_i`, `%i_j_s`, `%i_l_s`, `%i_lcm`, `%i_length`, `%i_m_i`, `%i_m_s`, `%i_mfprintf`, `%i_mprintf`, `%i_msprintf`, `%i_n_s`, `%i_o_s`, `%i_or`, `%i_p_i`, `%i_p_s`, `%i_plot2d`, `%i_plot2d1`, `%i_plot2d2`, `%i_q_s`, `%i_r_i`, `%i_r_s`, `%i_round`, `%i_s_i`, `%i_s_s`, `%i_sign`, `%i_string`, `%i_x_i`, `%i_x_s`, `%ip_a_s`, `%ip_i_st`, `%ip_m_s`, `%ip_n_ip`, `%ip_o_ip`, `%ip_p`, `%ip_part`, `%ip_s_s`, `%ip_string`, `%k`, `%l_i_h`, `%l_i_s`, `%l_i_st`, `%l_isequal`, `%l_n_c`, `%l_n_l`, `%l_n_m`, `%l_n_p`, `%l_n_s`, `%l_n_st`, `%l_o_c`, `%l_o_l`, `%l_o_m`, `%l_o_p`, `%l_o_s`, `%l_o_st`, `%lss_a_lss`, `%lss_a_p`, `%lss_a_r`, `%lss_a_s`, `%lss_c_lss`, `%lss_c_p`, `%lss_c_r`, `%lss_c_s`, `%lss_e`, `%lss_eye`, `%lss_f_lss`, `%lss_f_p`, `%lss_f_r`, `%lss_f_s`, `%lss_i_ce`, `%lss_i_lss`, `%lss_i_p`, `%lss_i_r`, `%lss_i_s`, `%lss_i_st`, `%lss_inv`, `%lss_l_lss`, `%lss_l_p`, `%lss_l_r`, `%lss_l_s`, `%lss_m_lss`, `%lss_m_p`, `%lss_m_r`, `%lss_m_s`, `%lss_n_lss`, `%lss_n_p`, `%lss_n_r`, `%lss_n_s`, `%lss_norm`, `%lss_o_lss`, `%lss_o_p`, `%lss_o_r`, `%lss_o_s`, `%lss_ones`, `%lss_r_lss`, `%lss_r_p`, `%lss_r_r`, `%lss_r_s`, `%lss_rand`, `%lss_s`, `%lss_s_lss`, `%lss_s_p`, `%lss_s_r`, `%lss_s_s`, `%lss_size`, `%lss_t`, `%lss_v_lss`, `%lss_v_p`, `%lss_v_r`, `%lss_v_s`, `%lt_i_s`, `%m_n_l`, `%m_o_l`, `%mc_i_h`, `%mc_i_s`, `%mc_i_st`, `%mc_n_st`, `%mc_o_st`, `%mc_string`, `%mps_p`, `%mps_string`, `%msp_a_s`, `%msp_abs`, `%msp_e`, `%msp_find`, `%msp_i_s`, `%msp_i_st`, `%msp_length`, `%msp_m_s`, `%msp_maxi`, `%msp_n_msp`, `%msp_nnz`, `%msp_o_msp`, `%msp_p`, `%msp_sparse`, `%msp_spones`, `%msp_t`, `%p_a_lss`, `%p_a_r`, `%p_c_lss`, `%p_c_r`, `%p_cumprod`, `%p_cumsum`, `%p_d_p`, `%p_d_r`, `%p_d_s`, `%p_det`, `%p_e`, `%p_f_lss`, `%p_f_r`, `%p_grand`, `%p_i_ce`, `%p_i_h`, `%p_i_hm`, `%p_i_lss`, `%p_i_p`, `%p_i_r`, `%p_i_s`, `%p_i_st`, `%p_inv`, `%p_j_s`, `%p_k_p`, `%p_k_r`, `%p_k_s`, `%p_l_lss`, `%p_l_p`, `%p_l_r`, `%p_l_s`, `%p_m_hm`, `%p_m_lss`, `%p_m_r`, `%p_matrix`, `%p_n_l`, `%p_n_lss`, `%p_n_r`, `%p_o_l`, `%p_o_lss`, `%p_o_r`, `%p_o_sp`, `%p_p_s`, `%p_part`, `%p_prod`, `%p_q_p`, `%p_q_r`, `%p_q_s`, `%p_r_lss`, `%p_r_p`, `%p_r_r`, `%p_r_s`, `%p_s_lss`, `%p_s_r`, `%p_simp`, `%p_string`, `%p_sum`, `%p_v_lss`, `%p_v_p`, `%p_v_r`, `%p_v_s`, `%p_x_hm`, `%p_x_r`, `%p_y_p`, `%p_y_r`, `%p_y_s`, `%p_z_p`, `%p_z_r`, `%p_z_s`, `%pcg`, `%plist_p`, `%plist_string`, `%r_0`, `%r_a_hm`, `%r_a_lss`, `%r_a_p`, `%r_a_r`, `%r_a_s`, `%r_c_lss`, `%r_c_p`, `%r_c_r`, `%r_c_s`, `%r_clean`, `%r_cumprod`, `%r_cumsum`, `%r_d_p`, `%r_d_r`, `%r_d_s`, `%r_det`, `%r_diag`, `%r_e`, `%r_eye`, `%r_f_lss`, `%r_f_p`, `%r_f_r`, `%r_f_s`, `%r_i_ce`, `%r_i_hm`, `%r_i_lss`, `%r_i_p`, `%r_i_r`, `%r_i_s`, `%r_i_st`, `%r_inv`, `%r_j_s`, `%r_k_p`, `%r_k_r`, `%r_k_s`, `%r_l_lss`, `%r_l_p`, `%r_l_r`, `%r_l_s`, `%r_m_hm`, `%r_m_lss`, `%r_m_p`, `%r_m_r`, `%r_m_s`, `%r_matrix`, `%r_n_lss`, `%r_n_p`, `%r_n_r`, `%r_n_s`, `%r_norm`, `%r_o_lss`, `%r_o_p`, `%r_o_r`, `%r_o_s`, `%r_ones`, `%r_p`, `%r_p_s`, `%r_prod`, `%r_q_p`, `%r_q_r`, `%r_q_s`, `%r_r_lss`, `%r_r_p`, `%r_r_r`, `%r_r_s`, `%r_rand`, `%r_s`, `%r_s_hm`, `%r_s_lss`, `%r_s_p`, `%r_s_r`, `%r_s_s`, `%r_simp`, `%r_size`, `%r_string`, `%r_sum`, `%r_t`, `%r_tril`, `%r_triu`, `%r_v_lss`, `%r_v_p`, `%r_v_r`, `%r_v_s`, `%r_varn`, `%r_x_p`, `%r_x_r`, `%r_x_s`, `%r_y_p`, `%r_y_r`, `%r_y_s`, `%r_z_p`, `%r_z_r`, `%r_z_s`, `%s_1_hm`, `%s_1_i`, `%s_2_hm`, `%s_2_i`, `%s_3_hm`, `%s_3_i`, `%s_4_hm`, `%s_4_i`, `%s_5`, `%s_a_b`, `%s_a_hm`, `%s_a_i`, `%s_a_ip`, `%s_a_lss`, `%s_a_msp`, `%s_a_r`, `%s_a_sp`, `%s_and`, `%s_b_i`, `%s_b_s`, `%s_bezout`, `%s_c_b`, `%s_c_cblock`, `%s_c_lss`, `%s_c_r`, `%s_c_sp`, `%s_d_b`, `%s_d_i`, `%s_d_p`, `%s_d_r`, `%s_d_sp`, `%s_e`, `%s_f_b`, `%s_f_cblock`, `%s_f_lss`, `%s_f_r`, `%s_f_sp`, `%s_g_b`, `%s_g_s`, `%s_gcd`, `%s_grand`, `%s_h_b`, `%s_h_s`, `%s_i_b`, `%s_i_c`, `%s_i_ce`, `%s_i_h`, `%s_i_hm`, `%s_i_i`, `%s_i_lss`, `%s_i_p`, `%s_i_r`, `%s_i_s`, `%s_i_sp`, `%s_i_spb`, `%s_i_st`, `%s_j_i`, `%s_k_hm`, `%s_k_p`, `%s_k_r`, `%s_k_sp`, `%s_l_b`, `%s_l_hm`, `%s_l_i`, `%s_l_lss`, `%s_l_p`, `%s_l_r`, `%s_l_s`, `%s_l_sp`, `%s_lcm`, `%s_m_b`, `%s_m_hm`, `%s_m_i`, `%s_m_ip`, `%s_m_lss`, `%s_m_msp`, `%s_m_r`, `%s_matrix`, `%s_n_hm`, `%s_n_i`, `%s_n_l`, `%s_n_lss`, `%s_n_r`, `%s_n_st`, `%s_o_hm`, `%s_o_i`, `%s_o_l`, `%s_o_lss`, `%s_o_r`, `%s_o_st`, `%s_or`, `%s_p_b`, `%s_p_i`, `%s_pow`, `%s_q_hm`, `%s_q_i`, `%s_q_p`, `%s_q_r`, `%s_q_sp`, `%s_r_b`, `%s_r_i`, `%s_r_lss`, `%s_r_p`, `%s_r_r`, `%s_r_s`, `%s_r_sp`, `%s_s_b`, `%s_s_hm`, `%s_s_i`, `%s_s_ip`, `%s_s_lss`, `%s_s_r`, `%s_s_sp`, `%s_simp`, `%s_v_lss`, `%s_v_p`, `%s_v_r`, `%s_v_s`, `%s_x_b`, `%s_x_hm`, `%s_x_i`, `%s_x_r`, `%s_y_p`, `%s_y_r`, `%s_y_sp`, `%s_z_p`, `%s_z_r`, `%s_z_sp`, `%sn`, `%sp_a_s`, `%sp_a_sp`, `%sp_and`, `%sp_c_s`, `%sp_ceil`, `%sp_conj`, `%sp_cos`, `%sp_cumprod`, `%sp_cumsum`, `%sp_d_s`, `%sp_d_sp`, `%sp_det`, `%sp_diag`, `%sp_e`, `%sp_exp`, `%sp_f_s`, `%sp_floor`, `%sp_grand`, `%sp_gsort`, `%sp_i_ce`, `%sp_i_h`, `%sp_i_s`, `%sp_i_sp`, `%sp_i_st`, `%sp_int`, `%sp_inv`, `%sp_k_s`, `%sp_k_sp`, `%sp_l_s`, `%sp_l_sp`, `%sp_length`, `%sp_max`, `%sp_min`, `%sp_norm`, `%sp_or`, `%sp_p_s`, `%sp_prod`, `%sp_q_s`, `%sp_q_sp`, `%sp_r_s`, `%sp_r_sp`, `%sp_round`, `%sp_s_s`, `%sp_s_sp`, `%sp_sin`, `%sp_sqrt`, `%sp_string`, `%sp_sum`, `%sp_tril`, `%sp_triu`, `%sp_y_s`, `%sp_y_sp`, `%sp_z_s`, `%sp_z_sp`, `%spb_and`, `%spb_c_b`, `%spb_cumprod`, `%spb_cumsum`, `%spb_diag`, `%spb_e`, `%spb_f_b`, `%spb_g_b`, `%spb_g_spb`, `%spb_h_b`, `%spb_h_spb`, `%spb_i_b`, `%spb_i_ce`, `%spb_i_h`, `%spb_i_st`, `%spb_or`, `%spb_prod`, `%spb_sum`, `%spb_tril`, `%spb_triu`, `%st_6`, `%st_c_st`, `%st_e`, `%st_f_st`, `%st_i_b`, `%st_i_c`, `%st_i_fptr`, `%st_i_h`, `%st_i_i`, `%st_i_ip`, `%st_i_lss`, `%st_i_msp`, `%st_i_p`, `%st_i_r`, `%st_i_s`, `%st_i_sp`, `%st_i_spb`, `%st_i_st`, `%st_matrix`, `%st_n_c`, `%st_n_l`, `%st_n_mc`, `%st_n_p`, `%st_n_s`, `%st_o_c`, `%st_o_l`, `%st_o_mc`, `%st_o_p`, `%st_o_s`, `%st_o_tl`, `%st_p`, `%st_size`, `%st_string`, `%st_t`, `%ticks_i_h`, `%xls_e`, `%xls_p`, `%xlssheet_e`, `%xlssheet_p`, `%xlssheet_size`, `%xlssheet_string`, `DominationRank`, `G_make`, `IsAScalar`, `NDcost`, `OS_Version`, `PlotSparse`, `ReadHBSparse`, `TCL_CreateSlave`, `abcd`, `abinv`, `accept_func_default`, `accept_func_vfsa`, `acf`, `acosd`, `acosh`, `acoshm`, `acosm`, `acot`, `acotd`, `acoth`, `acsc`, `acscd`, `acsch`, `add_demo`, `add_help_chapter`, `add_module_help_chapter`, `add_param`, `add_profiling`, `adj2sp`, `aff2ab`, `ana_style`, `analpf`, `analyze`, `aplat`, `arhnk`, `arl2`, `arma2p`, `arma2ss`, `armac`, `armax`, `armax1`, `arobasestring2strings`, `arsimul`, `ascii2string`, `asciimat`, `asec`, `asecd`, `asech`, `asind`, `asinh`, `asinhm`, `asinm`, `assert_checkalmostequal`, `assert_checkequal`, `assert_checkerror`, `assert_checkfalse`, `assert_checkfilesequal`, `assert_checktrue`, `assert_comparecomplex`, `assert_computedigits`, `assert_cond2reltol`, `assert_cond2reqdigits`, `assert_generror`, `atand`, `atanh`, `atanhm`, `atanm`, `atomsAutoload`, `atomsAutoloadAdd`, `atomsAutoloadDel`, `atomsAutoloadList`, `atomsCategoryList`, `atomsCheckModule`, `atomsDepTreeShow`, `atomsGetConfig`, `atomsGetInstalled`, `atomsGetInstalledPath`, `atomsGetLoaded`, `atomsGetLoadedPath`, `atomsInstall`, `atomsIsInstalled`, `atomsIsLoaded`, `atomsList`, `atomsLoad`, `atomsQuit`, `atomsRemove`, `atomsRepositoryAdd`, `atomsRepositoryDel`, `atomsRepositoryList`, `atomsRestoreConfig`, `atomsSaveConfig`, `atomsSearch`, `atomsSetConfig`, `atomsShow`, `atomsSystemInit`, `atomsSystemUpdate`, `atomsTest`, `atomsUpdate`, `atomsVersion`, `augment`, `auread`, `auwrite`, `balreal`, `bench_run`, `bilin`, `bilt`, `bin2dec`, `binomial`, `bitand`, `bitcmp`, `bitget`, `bitor`, `bitset`, `bitxor`, `black`, `blanks`, `bloc2exp`, `bloc2ss`, `block_parameter_error`, `bode`, `bode_asymp`, `bstap`, `buttmag`, `bvodeS`, `bytecode`, `bytecodewalk`, `cainv`, `calendar`, `calerf`, `calfrq`, `canon`, `casc`, `cat`, `cat_code`, `cb_m2sci_gui`, `ccontrg`, `cell`, `cell2mat`, `cellstr`, `center`, `cepstrum`, `cfspec`, `char`, `chart`, `cheb1mag`, `cheb2mag`, `check_gateways`, `check_modules_xml`, `check_versions`, `chepol`, `chfact`, `chsolve`, `classmarkov`, `clean_help`, `clock`, `cls2dls`, `cmb_lin`, `cmndred`, `cmoment`, `coding_ga_binary`, `coding_ga_identity`, `coff`, `coffg`, `colcomp`, `colcompr`, `colinout`, `colregul`, `companion`, `complex`, `compute_initial_temp`, `cond`, `cond2sp`, `condestsp`, `configure_msifort`, `configure_msvc`, `conjgrad`, `cont_frm`, `cont_mat`, `contrss`, `conv`, `convert_to_float`, `convertindex`, `convol`, `convol2d`, `copfac`, `correl`, `cosd`, `cosh`, `coshm`, `cosm`, `cotd`, `cotg`, `coth`, `cothm`, `cov`, `covar`, `createXConfiguration`, `createfun`, `createstruct`, `cross`, `crossover_ga_binary`, `crossover_ga_default`, `csc`, `cscd`, `csch`, `csgn`, `csim`, `cspect`, `ctr_gram`, `czt`, `dae`, `daeoptions`, `damp`, `datafit`, `date`, `datenum`, `datevec`, `dbphi`, `dcf`, `ddp`, `dec2bin`, `dec2hex`, `dec2oct`, `del_help_chapter`, `del_module_help_chapter`, `demo_begin`, `demo_choose`, `demo_compiler`, `demo_end`, `demo_file_choice`, `demo_folder_choice`, `demo_function_choice`, `demo_gui`, `demo_run`, `demo_viewCode`, `denom`, `derivat`, `derivative`, `des2ss`, `des2tf`, `detectmsifort64tools`, `detectmsvc64tools`, `determ`, `detr`, `detrend`, `devtools_run_builder`, `dhnorm`, `diff`, `diophant`, `dir`, `dirname`, `dispfiles`, `dllinfo`, `dscr`, `dsimul`, `dt_ility`, `dtsi`, `edit`, `edit_error`, `editor`, `eigenmarkov`, `eigs`, `ell1mag`, `enlarge_shape`, `entropy`, `eomday`, `epred`, `eqfir`, `eqiir`, `equil`, `equil1`, `erfinv`, `etime`, `eval`, `evans`, `evstr`, `example_run`, `expression2code`, `extract_help_examples`, `factor`, `factorial`, `factors`, `faurre`, `ffilt`, `fft2`, `fftshift`, `fieldnames`, `filt_sinc`, `filter`, `findABCD`, `findAC`, `findBDK`, `findR`, `find_freq`, `find_links`, `find_scicos_version`, `findm`, `findmsifortcompiler`, `findmsvccompiler`, `findx0BD`, `firstnonsingleton`, `fix`, `fixedpointgcd`, `flipdim`, `flts`, `fminsearch`, `formatBlackTip`, `formatBodeMagTip`, `formatBodePhaseTip`, `formatGainplotTip`, `formatHallModuleTip`, `formatHallPhaseTip`, `formatNicholsGainTip`, `formatNicholsPhaseTip`, `formatNyquistTip`, `formatPhaseplotTip`, `formatSgridDampingTip`, `formatSgridFreqTip`, `formatZgridDampingTip`, `formatZgridFreqTip`, `format_txt`, `fourplan`, `frep2tf`, `freson`, `frfit`, `frmag`, `fseek_origin`, `fsfirlin`, `fspec`, `fspecg`, `fstabst`, `ftest`, `ftuneq`, `fullfile`, `fullrf`, `fullrfk`, `fun2string`, `g_margin`, `gainplot`, `gamitg`, `gcare`, `gcd`, `gencompilationflags_unix`, `generateBlockImage`, `generateBlockImages`, `generic_i_ce`, `generic_i_h`, `generic_i_hm`, `generic_i_s`, `generic_i_st`, `genlib`, `genmarkov`, `geomean`, `getDiagramVersion`, `getModelicaPath`, `getPreferencesValue`, `get_file_path`, `get_function_path`, `get_param`, `get_profile`, `get_scicos_version`, `getd`, `getscilabkeywords`, `getshell`, `gettklib`, `gfare`, `gfrancis`, `givens`, `glever`, `gmres`, `group`, `gschur`, `gspec`, `gtild`, `h2norm`, `h_cl`, `h_inf`, `h_inf_st`, `h_norm`, `hallchart`, `halt`, `hank`, `hankelsv`, `harmean`, `haveacompiler`, `head_comments`, `help_from_sci`, `help_skeleton`, `hermit`, `hex2dec`, `hilb`, `hilbert`, `histc`, `horner`, `householder`, `hrmt`, `htrianr`, `hypermat`, `idct`, `idst`, `ifft`, `ifftshift`, `iir`, `iirgroup`, `iirlp`, `iirmod`, `ilib_build`, `ilib_build_jar`, `ilib_compile`, `ilib_for_link`, `ilib_gen_Make`, `ilib_gen_Make_unix`, `ilib_gen_cleaner`, `ilib_gen_gateway`, `ilib_gen_loader`, `ilib_include_flag`, `ilib_mex_build`, `im_inv`, `importScicosDiagram`, `importScicosPal`, `importXcosDiagram`, `imrep2ss`, `ind2sub`, `inistate`, `init_ga_default`, `init_param`, `initial_scicos_tables`, `input`, `instruction2code`, `intc`, `intdec`, `integrate`, `interp1`, `interpln`, `intersect`, `intl`, `intsplin`, `inttrap`, `inv_coeff`, `invr`, `invrs`, `invsyslin`, `iqr`, `isLeapYear`, `is_absolute_path`, `is_param`, `iscell`, `iscellstr`, `iscolumn`, `isempty`, `isfield`, `isinf`, `ismatrix`, `isnan`, `isrow`, `isscalar`, `issparse`, `issquare`, `isstruct`, `isvector`, `jmat`, `justify`, `kalm`, `karmarkar`, `kernel`, `kpure`, `krac2`, `kroneck`, `lattn`, `lattp`, `launchtest`, `lcf`, `lcm`, `lcmdiag`, `leastsq`, `leqe`, `leqr`, `lev`, `levin`, `lex_sort`, `lft`, `lin`, `lin2mu`, `lincos`, `lindquist`, `linf`, `linfn`, `linsolve`, `linspace`, `list2vec`, `list_param`, `listfiles`, `listfunctions`, `listvarinfile`, `lmisolver`, `lmitool`, `loadXcosLibs`, `loadmatfile`, `loadwave`, `log10`, `log2`, `logm`, `logspace`, `lqe`, `lqg`, `lqg2stan`, `lqg_ltr`, `lqr`, `ls`, `lyap`, `m2sci_gui`, `m_circle`, `macglov`, `macrovar`, `mad`, `makecell`, `manedit`, `mapsound`, `markp2ss`, `matfile2sci`, `mdelete`, `mean`, `meanf`, `median`, `members`, `mese`, `meshgrid`, `mfft`, `mfile2sci`, `minreal`, `minss`, `mkdir`, `modulo`, `moment`, `mrfit`, `msd`, `mstr2sci`, `mtlb`, `mtlb_0`, `mtlb_a`, `mtlb_all`, `mtlb_any`, `mtlb_axes`, `mtlb_axis`, `mtlb_beta`, `mtlb_box`, `mtlb_choices`, `mtlb_close`, `mtlb_colordef`, `mtlb_cond`, `mtlb_cov`, `mtlb_cumprod`, `mtlb_cumsum`, `mtlb_dec2hex`, `mtlb_delete`, `mtlb_diag`, `mtlb_diff`, `mtlb_dir`, `mtlb_double`, `mtlb_e`, `mtlb_echo`, `mtlb_error`, `mtlb_eval`, `mtlb_exist`, `mtlb_eye`, `mtlb_false`, `mtlb_fft`, `mtlb_fftshift`, `mtlb_filter`, `mtlb_find`, `mtlb_findstr`, `mtlb_fliplr`, `mtlb_fopen`, `mtlb_format`, `mtlb_fprintf`, `mtlb_fread`, `mtlb_fscanf`, `mtlb_full`, `mtlb_fwrite`, `mtlb_get`, `mtlb_grid`, `mtlb_hold`, `mtlb_i`, `mtlb_ifft`, `mtlb_image`, `mtlb_imp`, `mtlb_int16`, `mtlb_int32`, `mtlb_int8`, `mtlb_is`, `mtlb_isa`, `mtlb_isfield`, `mtlb_isletter`, `mtlb_isspace`, `mtlb_l`, `mtlb_legendre`, `mtlb_linspace`, `mtlb_logic`, `mtlb_logical`, `mtlb_loglog`, `mtlb_lower`, `mtlb_max`, `mtlb_mean`, `mtlb_median`, `mtlb_mesh`, `mtlb_meshdom`, `mtlb_min`, `mtlb_more`, `mtlb_num2str`, `mtlb_ones`, `mtlb_pcolor`, `mtlb_plot`, `mtlb_prod`, `mtlb_qr`, `mtlb_qz`, `mtlb_rand`, `mtlb_randn`, `mtlb_rcond`, `mtlb_realmax`, `mtlb_realmin`, `mtlb_s`, `mtlb_semilogx`, `mtlb_semilogy`, `mtlb_setstr`, `mtlb_size`, `mtlb_sort`, `mtlb_sortrows`, `mtlb_sprintf`, `mtlb_sscanf`, `mtlb_std`, `mtlb_strcmp`, `mtlb_strcmpi`, `mtlb_strfind`, `mtlb_strrep`, `mtlb_subplot`, `mtlb_sum`, `mtlb_t`, `mtlb_toeplitz`, `mtlb_tril`, `mtlb_triu`, `mtlb_true`, `mtlb_type`, `mtlb_uint16`, `mtlb_uint32`, `mtlb_uint8`, `mtlb_upper`, `mtlb_var`, `mtlb_zeros`, `mu2lin`, `mutation_ga_binary`, `mutation_ga_default`, `mvcorrel`, `mvvacov`, `nancumsum`, `nand2mean`, `nanmax`, `nanmean`, `nanmeanf`, `nanmedian`, `nanmin`, `nanreglin`, `nanstdev`, `nansum`, `narsimul`, `ndgrid`, `ndims`, `nehari`, `neigh_func_csa`, `neigh_func_default`, `neigh_func_fsa`, `neigh_func_vfsa`, `neldermead_cget`, `neldermead_configure`, `neldermead_costf`, `neldermead_defaultoutput`, `neldermead_destroy`, `neldermead_function`, `neldermead_get`, `neldermead_log`, `neldermead_new`, `neldermead_restart`, `neldermead_search`, `neldermead_updatesimp`, `nextpow2`, `nfreq`, `nicholschart`, `nlev`, `nmplot_cget`, `nmplot_configure`, `nmplot_contour`, `nmplot_destroy`, `nmplot_function`, `nmplot_get`, `nmplot_historyplot`, `nmplot_log`, `nmplot_new`, `nmplot_outputcmd`, `nmplot_restart`, `nmplot_search`, `nmplot_simplexhistory`, `noisegen`, `nonreg_test_run`, `now`, `nthroot`, `null`, `num2cell`, `numderivative`, `numdiff`, `numer`, `nyquist`, `nyquistfrequencybounds`, `obs_gram`, `obscont`, `observer`, `obsv_mat`, `obsvss`, `oct2dec`, `odeoptions`, `optim_ga`, `optim_moga`, `optim_nsga`, `optim_nsga2`, `optim_sa`, `optimbase_cget`, `optimbase_checkbounds`, `optimbase_checkcostfun`, `optimbase_checkx0`, `optimbase_configure`, `optimbase_destroy`, `optimbase_function`, `optimbase_get`, `optimbase_hasbounds`, `optimbase_hasconstraints`, `optimbase_hasnlcons`, `optimbase_histget`, `optimbase_histset`, `optimbase_incriter`, `optimbase_isfeasible`, `optimbase_isinbounds`, `optimbase_isinnonlincons`, `optimbase_log`, `optimbase_logshutdown`, `optimbase_logstartup`, `optimbase_new`, `optimbase_outputcmd`, `optimbase_outstruct`, `optimbase_proj2bnds`, `optimbase_set`, `optimbase_stoplog`, `optimbase_terminate`, `optimget`, `optimplotfunccount`, `optimplotfval`, `optimplotx`, `optimset`, `optimsimplex_center`, `optimsimplex_check`, `optimsimplex_compsomefv`, `optimsimplex_computefv`, `optimsimplex_deltafv`, `optimsimplex_deltafvmax`, `optimsimplex_destroy`, `optimsimplex_dirmat`, `optimsimplex_fvmean`, `optimsimplex_fvstdev`, `optimsimplex_fvvariance`, `optimsimplex_getall`, `optimsimplex_getallfv`, `optimsimplex_getallx`, `optimsimplex_getfv`, `optimsimplex_getn`, `optimsimplex_getnbve`, `optimsimplex_getve`, `optimsimplex_getx`, `optimsimplex_gradientfv`, `optimsimplex_log`, `optimsimplex_new`, `optimsimplex_reflect`, `optimsimplex_setall`, `optimsimplex_setallfv`, `optimsimplex_setallx`, `optimsimplex_setfv`, `optimsimplex_setn`, `optimsimplex_setnbve`, `optimsimplex_setve`, `optimsimplex_setx`, `optimsimplex_shrink`, `optimsimplex_size`, `optimsimplex_sort`, `optimsimplex_xbar`, `orth`, `output_ga_default`, `output_moga_default`, `output_nsga2_default`, `output_nsga_default`, `p_margin`, `pack`, `pareto_filter`, `parrot`, `pbig`, `pca`, `pcg`, `pdiv`, `pen2ea`, `pencan`, `pencost`, `penlaur`, `perctl`, `perl`, `perms`, `permute`, `pertrans`, `pfactors`, `pfss`, `phasemag`, `phaseplot`, `phc`, `pinv`, `playsnd`, `plotprofile`, `plzr`, `pmodulo`, `pol2des`, `pol2str`, `polar`, `polfact`, `prbs_a`, `prettyprint`, `primes`, `princomp`, `profile`, `proj`, `projsl`, `projspec`, `psmall`, `pspect`, `qmr`, `qpsolve`, `quart`, `quaskro`, `rafiter`, `randpencil`, `range`, `rank`, `readxls`, `recompilefunction`, `recons`, `reglin`, `regress`, `remezb`, `remove_param`, `remove_profiling`, `repfreq`, `replace_Ix_by_Fx`, `repmat`, `reset_profiling`, `resize_matrix`, `returntoscilab`, `rhs2code`, `ric_desc`, `riccati`, `rmdir`, `routh_t`, `rowcomp`, `rowcompr`, `rowinout`, `rowregul`, `rowshuff`, `rref`, `sample`, `samplef`, `samwr`, `savematfile`, `savewave`, `scanf`, `sci2exp`, `sciGUI_init`, `sci_sparse`, `scicos_getvalue`, `scicos_simulate`, `scicos_workspace_init`, `scisptdemo`, `scitest`, `sdiff`, `sec`, `secd`, `sech`, `selection_ga_elitist`, `selection_ga_random`, `sensi`, `setPreferencesValue`, `set_param`, `setdiff`, `sgrid`, `show_margins`, `show_pca`, `showprofile`, `signm`, `sinc`, `sincd`, `sind`, `sinh`, `sinhm`, `sinm`, `sm2des`, `sm2ss`, `smga`, `smooth`, `solve`, `sound`, `soundsec`, `sp2adj`, `spaninter`, `spanplus`, `spantwo`, `specfact`, `speye`, `sprand`, `spzeros`, `sqroot`, `sqrtm`, `squarewave`, `squeeze`, `srfaur`, `srkf`, `ss2des`, `ss2ss`, `ss2tf`, `sskf`, `ssprint`, `ssrand`, `st_deviation`, `st_i_generic`, `st_ility`, `stabil`, `statgain`, `stdev`, `stdevf`, `steadycos`, `strange`, `strcmpi`, `struct`, `sub2ind`, `sva`, `svplot`, `sylm`, `sylv`, `sysconv`, `sysdiag`, `sysfact`, `syslin`, `syssize`, `system`, `systmat`, `tabul`, `tand`, `tanh`, `tanhm`, `tanm`, `tbx_build_blocks`, `tbx_build_cleaner`, `tbx_build_gateway`, `tbx_build_gateway_clean`, `tbx_build_gateway_loader`, `tbx_build_help`, `tbx_build_help_loader`, `tbx_build_loader`, `tbx_build_localization`, `tbx_build_macros`, `tbx_build_pal_loader`, `tbx_build_src`, `tbx_builder`, `tbx_builder_gateway`, `tbx_builder_gateway_lang`, `tbx_builder_help`, `tbx_builder_help_lang`, `tbx_builder_macros`, `tbx_builder_src`, `tbx_builder_src_lang`, `tbx_generate_pofile`, `temp_law_csa`, `temp_law_default`, `temp_law_fsa`, `temp_law_huang`, `temp_law_vfsa`, `test_clean`, `test_on_columns`, `test_run`, `test_run_level`, `testexamples`, `tf2des`, `tf2ss`, `thrownan`, `tic`, `time_id`, `toc`, `toeplitz`, `tokenpos`, `toolboxes`, `trace`, `trans`, `translatepaths`, `tree2code`, `trfmod`, `trianfml`, `trimmean`, `trisolve`, `trzeros`, `typeof`, `ui_observer`, `union`, `unique`, `unit_test_run`, `unix_g`, `unix_s`, `unix_w`, `unix_x`, `unobs`, `unpack`, `unwrap`, `variance`, `variancef`, `vec2list`, `vectorfind`, `ver`, `warnobsolete`, `wavread`, `wavwrite`, `wcenter`, `weekday`, `wfir`, `wfir_gui`, `whereami`, `who_user`, `whos`, `wiener`, `wigner`, `window`, `winlist`, `with_javasci`, `with_macros_source`, `with_modelica_compiler`, `with_tk`, `xcorr`, `xcosBlockEval`, `xcosBlockInterface`, `xcosCodeGeneration`, `xcosConfigureModelica`, `xcosPal`, `xcosPalAdd`, `xcosPalAddBlock`, `xcosPalExport`, `xcosPalGenerateAllIcons`, `xcosShowBlockWarning`, `xcosValidateBlockSet`, `xcosValidateCompareBlock`, `xcos_compile`, `xcos_debug_gui`, `xcos_run`, `xcos_simulate`, `xcov`, `xmltochm`, `xmltoformat`, `xmltohtml`, `xmltojar`, `xmltopdf`, `xmltops`, `xmltoweb`, `yulewalk`, `zeropen`, `zgrid`, `zpbutt`, `zpch1`, `zpch2`, `zpell`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\b`, `$`, `%F`, `%T`, `%e`, `%eps`, `%f`, `%fftw`, `%gui`, `%i`, `%inf`, `%io`, `%modalWarning`, `%nan`, `%pi`, `%s`, `%t`, `%tk`, `%toolboxes`, `%toolboxes_dir`, `%z`, `PWD`, `SCI`, `SCIHOME`, `TMPDIR`, `arnoldilib`, `assertlib`, `atomslib`, `cacsdlib`, `compatibility_functilib`, `corelib`, `data_structureslib`, `demo_toolslib`, `development_toolslib`, `differential_equationlib`, `dynamic_linklib`, `elementary_functionslib`, `enull`, `evoid`, `external_objectslib`, `fd`, `fileiolib`, `functionslib`, `genetic_algorithmslib`, `helptoolslib`, `home`, `integerlib`, `interpolationlib`, `iolib`, `jnull`, `jvoid`, `linear_algebralib`, `m2scilib`, `matiolib`, `modules_managerlib`, `neldermeadlib`, `optimbaselib`, `optimizationlib`, `optimsimplexlib`, `output_streamlib`, `overloadinglib`, `parameterslib`, `polynomialslib`, `preferenceslib`, `randliblib`, `scicos_autolib`, `scicos_utilslib`, `scinoteslib`, `signal_processinglib`, `simulated_annealinglib`, `soundlib`, `sparselib`, `special_functionslib`, `spreadsheetlib`, `statisticslib`, `stringlib`, `tclscilib`, `timelib`, `umfpacklib`, `xcoslib`), NameConstant, nil},\n-\t\t\t{`-|==|~=|<|>|<=|>=|&&|&|~|\\|\\|?`, Operator, nil},\n-\t\t\t{`\\.\\*|\\*|\\+|\\.\\^|\\.\\\\|\\.\\/|\\/|\\\\`, Operator, nil},\n-\t\t\t{`[\\[\\](){}@.,=:;]`, Punctuation, nil},\n-\t\t\t{`\"[^\"]*\"`, LiteralString, nil},\n-\t\t\t{`(?<=[\\w)\\].])\\'+`, Operator, nil},\n-\t\t\t{`(?<![\\w)\\].])\\'`, LiteralString, Push(\"string\")},\n-\t\t\t{`(\\d+\\.\\d*|\\d*\\.\\d+)([eEf][+-]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+[eEf][+-]?[0-9]+`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t\t{`.`, Text, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`[^']*'`, LiteralString, Pop(1)},\n-\t\t\t{`.`, LiteralString, Pop(1)},\n-\t\t},\n-\t\t\"deffunc\": {\n-\t\t\t{`(\\s*)(?:(.+)(\\s*)(=)(\\s*))?(.+)(\\()(.*)(\\))(\\s*)`, ByGroups(TextWhitespace, Text, TextWhitespace, Punctuation, TextWhitespace, NameFunction, Punctuation, Text, Punctuation, TextWhitespace), Pop(1)},\n-\t\t\t{`(\\s*)([a-zA-Z_]\\w*)`, ByGroups(Text, NameFunction), Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "e489adedfe411c95d018208bb6214a6967a2de80",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/scss.go",
      "status": "removed",
      "additions": 0,
      "deletions": 153,
      "changes": 153,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fscss.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fscss.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fscss.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,153 +0,0 @@\n-package s\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Scss lexer.\n-var Scss = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"SCSS\",\n-\t\tAliases:         []string{\"scss\"},\n-\t\tFilenames:       []string{\"*.scss\"},\n-\t\tMimeTypes:       []string{\"text/x-scss\"},\n-\t\tNotMultiline:    true,\n-\t\tDotAll:          true,\n-\t\tCaseInsensitive: true,\n-\t},\n-\tscssRules,\n-))\n-\n-func scssRules() Rules {\n-\tcssProperties := []string{`src`, `align-content`, `align-items`, `align-self`, `all`, `animation`, `animation-delay`, `animation-direction`, `animation-duration`, `animation-fill-mode`, `animation-iteration-count`, `animation-name`, `animation-play-state`, `animation-timing-function`, `appearance`, `aspect-ratio`, `backface-visibility`, `background`, `background-attachment`, `background-blend-mode`, `background-clip`, `background-color`, `background-image`, `background-origin`, `background-position`, `background-repeat`, `background-size`, `block-size`, `border`, `border-block`, `border-block-color`, `border-block-end`, `border-block-end-color`, `border-block-end-style`, `border-block-end-width`, `border-block-start`, `border-block-start-color`, `border-block-start-style`, `border-block-start-width`, `border-block-style`, `border-block-width`, `border-bottom`, `border-bottom-color`, `border-bottom-left-radius`, `border-bottom-right-radius`, `border-bottom-style`, `border-bottom-width`, `border-collapse`, `border-color`, `border-end-end-radius`, `border-end-start-radius`, `border-image`, `border-image-outset`, `border-image-repeat`, `border-image-slice`, `border-image-source`, `border-image-width`, `border-inline`, `border-inline-color`, `border-inline-end`, `border-inline-end-color`, `border-inline-end-style`, `border-inline-end-width`, `border-inline-start`, `border-inline-start-color`, `border-inline-start-style`, `border-inline-start-width`, `border-inline-style`, `border-inline-width`, `border-left`, `border-left-color`, `border-left-style`, `border-left-width`, `border-radius`, `border-right`, `border-right-color`, `border-right-style`, `border-right-width`, `border-spacing`, `border-start-end-radius`, `border-start-start-radius`, `border-style`, `border-top`, `border-top-color`, `border-top-left-radius`, `border-top-right-radius`, `border-top-style`, `border-top-width`, `border-width`, `bottom`, `box-decoration-break`, `box-shadow`, `box-sizing`, `break-after`, `break-before`, `break-inside`, `caption-side`, `caret-color`, `clear`, `clip`, `clip-path`, `color`, `color-adjust`, `column-count`, `column-fill`, `column-gap`, `column-rule`, `column-rule-color`, `column-rule-style`, `column-rule-width`, `column-span`, `column-width`, `columns`, `content`, `content-visibility`, `counter-increment`, `counter-reset`, `counter-set`, `cursor`, `direction`, `display`, `empty-cells`, `filter`, `flex`, `flex-basis`, `flex-direction`, `flex-flow`, `flex-grow`, `flex-shrink`, `flex-wrap`, `float`, `font`, `font-family`, `font-feature-settings`, `font-kerning`, `font-language-override`, `font-optical-sizing`, `font-size`, `font-size-adjust`, `font-stretch`, `font-style`, `font-synthesis`, `font-variant`, `font-variant-caps`, `font-variant-east-asian`, `font-variant-emoji`, `font-variant-ligatures`, `font-variant-numeric`, `font-variant-position`, `font-weight`, `footnote-display`, `footnote-policy`, `forced-color-adjust`, `gap`, `grid`, `grid-area`, `grid-auto-columns`, `grid-auto-flow`, `grid-auto-rows`, `grid-column`, `grid-column-end`, `grid-column-start`, `grid-row`, `grid-row-end`, `grid-row-start`, `grid-template`, `grid-template-areas`, `grid-template-columns`, `grid-template-rows`, `hanging-punctuation`, `height`, `hyphens`, `image-orientation`, `image-rendering`, `image-resolution`, `initial-letter`, `initial-letter-align`, `initial-letter-wrap`, `inline-size`, `inline-sizing`, `inset`, `inset-block`, `inset-block-end`, `inset-block-start`, `inset-inline`, `inset-inline-end`, `inset-inline-start`, `isolation`, `justify-content`, `justify-items`, `justify-self`, `left`, `letter-spacing`, `lighting-color`, `line-break`, `line-clamp`, `line-grid`, `line-height`, `line-padding`, `line-snap`, `list-style`, `list-style-image`, `list-style-position`, `list-style-type`, `margin`, `margin-block`, `margin-block-end`, `margin-block-start`, `margin-bottom`, `margin-break`, `margin-inline`, `margin-inline-end`, `margin-inline-start`, `margin-left`, `margin-right`, `margin-top`, `margin-trim`, `mask`, `mask-border`, `mask-border-mode`, `mask-border-repeat`, `mask-border-slice`, `mask-border-source`, `mask-border-width`, `mask-clip`, `mask-composite`, `mask-image`, `mask-mode`, `mask-origin`, `mask-position`, `mask-repeat`, `mask-size`, `mask-type`, `max-block-size`, `max-height`, `max-lines`, `max-width`, `min-height`, `min-width`, `mix-blend-mode`, `nav-down`, `nav-left`, `nav-right`, `nav-up`, `object-fit`, `object-position`, `offset`, `offset-anchor`, `offset-distance`, `offset-path`, `offset-position`, `offset-rotate`, `opacity`, `order`, `orphans`, `outline`, `outline-color`, `outline-offset`, `outline-style`, `outline-width`, `overflow`, `overflow-anchor`, `overflow-block`, `overflow-clip-margin`, `overflow-inline`, `overflow-wrap`, `overflow-x`, `overflow-y`, `overscroll-behavior`, `overscroll-behavior-block`, `overscroll-behavior-inline`, `overscroll-behavior-x`, `overscroll-behavior-y`, `padding`, `padding-block`, `padding-block-end`, `padding-block-start`, `padding-bottom`, `padding-inline`, `padding-inline-end`, `padding-inline-start`, `padding-left`, `padding-right`, `padding-top`, `page`, `page-break-after`, `page-break-before`, `page-break-inside`, `page-orientation`, `perspective`, `perspective-origin`, `place-content`, `place-items`, `place-self`, `pointer-events`, `position`, `quotes`, `resize`, `right`, `rotate`, `row-gap`, `scale`, `scroll-behavior`, `scroll-margin`, `scroll-margin-block`, `scroll-margin-block-end`, `scroll-margin-block-start`, `scroll-margin-bottom`, `scroll-margin-inline`, `scroll-margin-inline-end`, `scroll-margin-inline-start`, `scroll-margin-left`, `scroll-margin-right`, `scroll-margin-top`, `scroll-padding`, `scroll-padding-block`, `scroll-padding-block-end`, `scroll-padding-block-start`, `scroll-padding-bottom`, `scroll-padding-inline`, `scroll-padding-inline-end`, `scroll-padding-inline-start`, `scroll-padding-left`, `scroll-padding-right`, `scroll-padding-top`, `scroll-snap-align`, `scroll-snap-stop`, `scroll-snap-type`, `scrollbar-color`, `scrollbar-gutter`, `scrollbar-width`, `shape-image-threshold`, `shape-inside`, `shape-margin`, `shape-outside`, `shape-padding`, `spatial-navigation-action`, `spatial-navigation-contain`, `spatial-navigation-function`, `string-set`, `tab-size`, `table-layout`, `text-align`, `text-align-all`, `text-align-last`, `text-combine-upright`, `text-decoration`, `text-decoration-color`, `text-decoration-line`, `text-decoration-skip`, `text-decoration-style`, `text-decoration-thickness`, `text-emphasis`, `text-emphasis-position`, `text-emphasis-style`, `text-group-align`, `text-indent`, `text-justify`, `text-orientation`, `text-overflow`, `text-rendering`, `text-shadow`, `text-size-adjust`, `text-space-trim`, `text-spacing`, `text-transform`, `text-underline-offset`, `text-underline-position`, `text-wrap`, `top`, `touch-action`, `transform`, `transform-box`, `transform-origin`, `transform-style`, `transition`, `transition-delay`, `transition-duration`, `transition-property`, `transition-timing-function`, `translate`, `unicode-bidi`, `user-select`, `vertical-align`, `visibility`, `white-space`, `widows`, `width`, `will-change`, `word-break`, `word-spacing`, `word-wrap`, `wrap-after`, `wrap-before`, `wrap-flow`, `wrap-inside`, `wrap-through`, `writing-mode`, `z-index`}\n-\n-\tcssPropertyValues := []string{\n-\t\t`stretch`, `flex-start`, `flex-end`, `center`, `space-between`, `space-around`, `normal`, `baseline`, `first`, `last`, `space-evenly`, `start`, `end`, `safe`, `unsafe`, `self-start`, `self-end`, `auto`, `initial`, `inherit`, `unset`, `revert`, `reverse`, `alternate-reverse`, `alternate`, `none`, `forwards`, `both`, `backwards`, `infinite`, `running`, `paused`, `ease`, `linear`, `step-start`, `step-end`, `ease-in`, `ease-out`, `ease-in-out`, `cubic-bezier`, `textfield`, `menulist-button`, `searchfield`, `textarea`, `push-button`, `slider-horizontal`, `checkbox`, `radio`, `square-button`, `menulist`, `listbox`, `meter`, `progress-bar`, `button`, `visible`, `hidden`, `scroll`, `fixed`, `local`, `multiply`, `screen`, `overlay`, `darken`, `lighten`, `color-dodge`, `color-burn`, `hard-light`, `soft-light`, `difference`, `exclusion`, `hue`, `saturation`, `color`, `luminosity`, `border-box`, `padding-box`, `content-box`, `text`, `transparent`, `currentColor`, `url`, `element`, `image`, `image-set`, `cross-fade`, `top`, `bottom`, `left`, `right`, `repeat`, `no-repeat`, `space`, `round`, `repeat-y`, `repeat-x`, `cover`, `contain`, `max-content`, `min-content`, `available`, `fit-content`, `dotted`, `dashed`, `solid`, `double`, `groove`, `ridge`, `inset`, `outset`, `medium`, `thin`, `thick`, `separate`, `collapse`, `slice`, `clone`, `avoid`, `always`, `all`, `avoid-page`, `page`, `recto`, `verso`, `avoid-column`, `column`, `avoid-region`, `region`, `inline-start`, `inline-end`, `rect`, `circle`, `ellipse`, `polygon`, `path`, `margin-box`, `fill-box`, `stroke-box`, `view-box`, `economy`, `exact`, `balance`, `balance-all`, `open-quote`, `close-quote`, `no-open-quote`, `no-close-quote`, `contents`, `attr`, `target-counter`, `target-text`, `leader`, `default`, `context-menu`, `help`, `pointer`, `progress`, `wait`, `cell`, `crosshair`, `vertical-text`, `alias`, `copy`, `move`, `no-drop`, `not-allowed`, `grab`, `grabbing`, `all-scroll`, `col-resize`, `row-resize`, `n-resize`, `s-resize`, `w-resize`, `ne-resize`, `nw-resize`, `se-resize`, `sw-resize`, `ew-resize`, `ns-resize`, `nesw-resize`, `nwse-resize`, `zoom-in`, `zoom-out`, `ltr`, `rtl`, `inline`, `block`, `inline-block`, `inline-table`, `run-in`, `flow`, `flow-root`, `table`, `flex`, `grid`, `ruby`, `list-item`, `table-row-group`, `table-header-group`, `table-footer-group`, `table-row`, `table-cell`, `table-column-group`, `table-column`, `table-caption`, `ruby-base`, `ruby-text`, `ruby-base-container`, `ruby-text-container`, `inline-flex`, `inline-grid`, `show`, `hide`, `url;`, `blur`, `brightness`, `contrast`, `drop-shadow`, `grayscale`, `hue-rotate`, `invert`, `opacity`, `saturate`, `sepia`, `content`, `row`, `row-reverse`, `column-reverse`, `nowrap`, `wrap`, `wrap-reverse`, `block-start`, `block-end`, `caption`, `icon`, `menu`, `message-box`, `small-caption`, `status-bar`, `serif`, `sans-serif`, `cursive`, `fantasy`, `monospace`, `system-ui`, `emoji`, `math`, `fangsong`, `ui-serif`, `ui-sans-serif`, `ui-monospace`, `ui-rounded`, `xx-small`, `x-small`, `small`, `large`, `x-large`, `xx-large`, `xxx-large`, `smaller`, `larger`, `semi-condensed`, `condensed`, `extra-condensed`, `ultra-condensed`, `semi-expanded`, `expanded`, `extra-expanded`, `ultra-expanded`, `italic`, `weight`, `style`, `small-caps`, `all-small-caps`, `petite-caps`, `all-petite-caps`, `unicase`, `titling-caps`, `jis78`, `jis83`, `jis90`, `jis04`, `simplified`, `traditional`, `full-width`, `proportional-width`, `unicode`, `common-ligatures`, `no-common-ligatures`, `discretionary-ligatures`, `no-discretionary-ligatures`, `historical-ligatures`, `no-historical-ligatures`, `contextual`, `no-contextual`, `ordinal`, `slashed-zero`, `lining-nums`, `oldstyle-nums`, `proportional-nums`, `tabular-nums`, `diagonal-fractions`, `stacked-fractions`, `sub`, `super`, `bold`, `lighter`, `bolder`, `line`, `auto‑flow`, `minmax`, `auto;`, `dense`, `subgrid`, `masonry`, `force-end`, `allow-end`, `manual`, `from-image`, `smooth`, `high-quality`, `crisp-edges`, `pixelated`, `snap`, `alphabetic`, `ideographic`, `hebrew`, `hanging`, `isolate`, `legacy`, `white`, `strict`, `loose`, `anywhere`, `match-parent`, `create`, `outside`, `inside`, `disc`, `square`, `decimal`, `symbols`, `cjk-decimal`, `decimal-leading-zero`, `lower-roman`, `upper-roman`, `lower-greek`, `lower-alpha`, `lower-latin`, `upper-alpha`, `upper-latin`, `arabic-indic`, `armenian`, `bengali`, `cambodian`, `cjk-earthly-branch`, `cjk-heavenly-stem`, `cjk-ideographic`, `devanagari`, `ethiopic-numeric`, `georgian`, `gujarati`, `gurmukhi`, `hiragana`, `hiragana-iroha`, `japanese-formal`, `japanese-informal`, `kannada`, `katakana`, `katakana-iroha`, `khmer`, `korean-hangul-formal`, `korean-hanja-formal`, `korean-hanja-informal`, `lao`, `lower-armenian`, `malayalam`, `mongolian`, `myanmar`, `oriya`, `persian`, `simp-chinese-formal`, `simp-chinese-informal`, `tamil`, `telugu`, `thai`, `tibetan`, `trad-chinese-formal`, `trad-chinese-informal`, `upper-armenian`, `disclosure-open`, `disclosure-closed`, `keep`, `discard`, `in-flow`, `alpha`, `luminance`, `no-clip`, `add`, `subtract`, `intersect`, `exclude`, `match-source`, `current`, `fill`, `scale-down`, `ray`, `clip`, `break-word`, `upright`, `rotate-left`, `rotate-right`, `static`, `relative`, `absolute`, `sticky`, `horizontal`, `vertical`, `x`, `y`, `z`, `mandatory`, `proximity`, `dark`, `light`, `stable`, `force`, `outside-shape`, `display`, `focus`, `justify`, `justify-all`, `underline`, `overline`, `line-through`, `blink`, `spelling-error`, `grammar-error`, `wavy`, `from-font`, `over`, `under`, `filled`, `open`, `dot`, `double-circle`, `triangle`, `sesame`, `inter-word`, `inter-character`, `mixed`, `sideways`, `ellipsis`, `optimizeSpeed`, `optimizeLegibility`, `geometricPrecision`, `trim-inner`, `discard-before`, `discard-after`, `trim-start`, `space-start`, `space-first`, `trim-end`, `space-end`, `trim-adjacent`, `space-adjacent`, `no-compress`, `ideograph-alpha`, `ideograph-numeric`, `punctuation`, `capitalize`, `uppercase`, `lowercase`, `full-size-kana`, `pretty`, `pan-x`, `pan-left`, `pan-right`, `pan-y`, `pan-up`, `pan-down`, `manipulation`, `matrix`, `matrix3d`, `translate`, `translateX`, `translateY`, `translate3d`, `translateZ`, `scale`, `scaleX`, `scaleY`, `scaleZ`, `rotate`, `rotate3d`, `rotateX`, `rotateY`, `rotateZ`, `perspective`, `skew`, `skewX`, `skewY`, `flat`, `preserve-3d`, `border-bottom`, `embed`, `bidi-override`, `isolate-override`, `plaintext`, `middle`, `text-top`, `text-bottom`, `pre`, `pre-wrap`, `pre-line`, `scroll-position`, `transform`, `width`, `keep-all`, `break-all`, `avoid-line`, `avoid-flex`, `minimum`, `maximum`, `clear`, `horizontal-tb`, `vertical-rl`, `vertical-lr`, `sideways-rl`, `sideways-lr`,\n-\t}\n-\n-\tcssColorNames := []string{`AliceBlue`, `AntiqueWhite`, `Aqua`, `Aquamarine`, `Azure`, `Beige`, `Bisque`, `Black`, `BlanchedAlmond`, `Blue`, `BlueViolet`, `Brown`, `BurlyWood`, `CadetBlue`, `Chartreuse`, `Chocolate`, `Coral`, `CornflowerBlue`, `Cornsilk`, `Crimson`, `Cyan`, `DarkBlue`, `DarkCyan`, `DarkGoldenRod`, `DarkGray`, `DarkGrey`, `DarkGreen`, `DarkKhaki`, `DarkMagenta`, `DarkOliveGreen`, `DarkOrange`, `DarkOrchid`, `DarkRed`, `DarkSalmon`, `DarkSeaGreen`, `DarkSlateBlue`, `DarkSlateGray`, `DarkSlateGrey`, `DarkTurquoise`, `DarkViolet`, `DeepPink`, `DeepSkyBlue`, `DimGray`, `DimGrey`, `DodgerBlue`, `FireBrick`, `FloralWhite`, `ForestGreen`, `Fuchsia`, `Gainsboro`, `GhostWhite`, `Gold`, `GoldenRod`, `Gray`, `Grey`, `Green`, `GreenYellow`, `HoneyDew`, `HotPink`, `IndianRed`, `Indigo`, `Ivory`, `Khaki`, `Lavender`, `LavenderBlush`, `LawnGreen`, `LemonChiffon`, `LightBlue`, `LightCoral`, `LightCyan`, `LightGoldenRodYellow`, `LightGray`, `LightGrey`, `LightGreen`, `LightPink`, `LightSalmon`, `LightSeaGreen`, `LightSkyBlue`, `LightSlateGray`, `LightSlateGrey`, `LightSteelBlue`, `LightYellow`, `Lime`, `LimeGreen`, `Linen`, `Magenta`, `Maroon`, `MediumAquaMarine`, `MediumBlue`, `MediumOrchid`, `MediumPurple`, `MediumSeaGreen`, `MediumSlateBlue`, `MediumSpringGreen`, `MediumTurquoise`, `MediumVioletRed`, `MidnightBlue`, `MintCream`, `MistyRose`, `Moccasin`, `NavajoWhite`, `Navy`, `OldLace`, `Olive`, `OliveDrab`, `Orange`, `OrangeRed`, `Orchid`, `PaleGoldenRod`, `PaleGreen`, `PaleTurquoise`, `PaleVioletRed`, `PapayaWhip`, `PeachPuff`, `Peru`, `Pink`, `Plum`, `PowderBlue`, `Purple`, `RebeccaPurple`, `Red`, `RosyBrown`, `RoyalBlue`, `SaddleBrown`, `Salmon`, `SandyBrown`, `SeaGreen`, `SeaShell`, `Sienna`, `Silver`, `SkyBlue`, `SlateBlue`, `SlateGray`, `SlateGrey`, `Snow`, `SpringGreen`, `SteelBlue`, `Tan`, `Teal`, `Thistle`, `Tomato`, `Turquoise`, `Violet`, `Wheat`, `White`, `WhiteSmoke`, `Yellow`, `YellowGreen`}\n-\n-\tconst cssPropertyPattern = `(?<!:\\s*)[^ \\t:=\"\\[;(),.]+(?=[ \\t]*:(?:#{|[^{])+?[;,])`\n-\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[{}()]`, Punctuation, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n-\t\t\t{`@import`, Keyword, Push(\"value\")},\n-\t\t\t{\n-\t\t\t\t`(@(?:use|forward))(\\s+)([^\\s;]+)(?:(\\s+)(as)(\\s+)(\\w+|\\*))?(?:(\\s+)(with))?`,\n-\t\t\t\tByGroups(Keyword, Text, UsingSelf(\"selector\"), Text, Keyword, Text, NameNamespace, Text, Keyword),\n-\t\t\t\tPush(\"value\"),\n-\t\t\t},\n-\t\t\t{`@for`, Keyword, Push(\"for\")},\n-\t\t\t{`@each`, Keyword, Push(\"each\")},\n-\t\t\t{`@(debug|warn|else if|if|while|return)`, Keyword, Push(\"value\")},\n-\t\t\t{`(@(?:mixin|function))( [\\w-]+)`, ByGroups(Keyword, NameFunction), Push(\"value\")},\n-\t\t\t{`(@include)( [\\w-]+)`, ByGroups(Keyword, NameDecorator), Push(\"value\")},\n-\t\t\t{`@extend`, Keyword, Push(\"selector\")},\n-\t\t\t{`(@media)(\\s+)`, ByGroups(Keyword, Text), Push(\"value\")},\n-\t\t\t{`@[\\w-]+`, Keyword, Push(\"selector\")},\n-\t\t\t{`(\\$[\\w-]*\\w)([ \\t]*:)`, ByGroups(NameVariable, Operator), Push(\"value\")},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\t{Words(`\\b`, `(?=\\s*:)`, cssProperties...), NameAttribute, Push(\"attr\")},\n-\t\t\t{cssPropertyPattern, NameAttribute, Push(\"attr\")},\n-\t\t\tDefault(Push(\"selector\")),\n-\t\t},\n-\t\t\"attr\": {\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\t{`[ \\t]*:`, Operator, Push(\"value\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"inline-comment\": {\n-\t\t\t{`(\\\\#|#(?=[^{])|\\*(?=[^/])|[^#*])+`, CommentMultiline, nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\t{`\\*/`, Comment, Pop(1)},\n-\t\t},\n-\t\t\"value\": {\n-\t\t\t{`[ \\t]+`, Text, nil},\n-\t\t\t{`!(important|default|global)`, Keyword, nil},\n-\t\t\t{`[!$][\\w-]+`, NameVariable, nil},\n-\t\t\t{`url\\(`, LiteralStringOther, Push(\"string-url\")},\n-\t\t\t{`[a-z_-][\\w-]*(?=\\()`, NameFunction, nil},\n-\t\t\t{Words(`\\b`, `(?=\\s*:)`, cssProperties...), NameAttribute, nil},\n-\t\t\t{cssPropertyPattern, NameAttribute, nil},\n-\t\t\t{Words(`\\b`, `\\b`, cssPropertyValues...), NameEntity, nil},\n-\t\t\t{Words(`(?i)\\b`, `\\b`, cssColorNames...), NameConstant, nil},\n-\t\t\t{`(true|false)`, NamePseudo, nil},\n-\t\t\t{`(and|or|not)`, OperatorWord, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"inline-comment\")},\n-\t\t\t{`//[^\\n]*`, CommentSingle, nil},\n-\t\t\t{`\\#[a-z0-9]{1,6}`, LiteralNumberHex, nil},\n-\t\t\t{`(-)?(\\d+)(\\%|[a-z]+)?`, ByGroups(Operator, LiteralNumberInteger, KeywordType), nil},\n-\t\t\t{`(-?)(\\d*\\.\\d+)(\\%|[a-z]+)?`, ByGroups(Operator, LiteralNumberFloat, KeywordType), nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\t{`[~^*!&%<>|+=@:,./?-]+`, Operator, nil},\n-\t\t\t{`[\\[\\]()]+`, Punctuation, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string-double\")},\n-\t\t\t{`'`, LiteralStringSingle, Push(\"string-single\")},\n-\t\t\t{`[a-z_-][\\w-]*`, Name, nil},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`[;{}]`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"interpolation\": {\n-\t\t\t{`\\}`, LiteralStringInterpol, Pop(1)},\n-\t\t\tInclude(\"value\"),\n-\t\t},\n-\t\t\"selector\": {\n-\t\t\t{`[ \\t]+`, Text, nil},\n-\t\t\t{`\\:`, NameDecorator, Push(\"pseudo-class\")},\n-\t\t\t{`\\.`, NameClass, Push(\"class\")},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\t{`\\#`, NameNamespace, Push(\"id\")},\n-\t\t\t{`&`, Keyword, nil},\n-\t\t\t{`[~^*!&\\[\\]()<>|+=@:,./?-]`, Operator, nil},\n-\t\t\t{`(%)([\\w-]+)`, ByGroups(Operator, NameClass), nil},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string-double\")},\n-\t\t\t{`'`, LiteralStringSingle, Push(\"string-single\")},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`[;{}]`, Punctuation, Pop(1)},\n-\t\t\t{`[\\w-]+`, NameTag, nil},\n-\t\t},\n-\t\t\"string-double\": {\n-\t\t\t{`(\\\\.|#(?=[^\\n{])|[^\\n\"#])+`, LiteralStringDouble, nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t},\n-\t\t\"string-single\": {\n-\t\t\t{`(\\\\.|#(?=[^\\n{])|[^\\n'#])+`, LiteralStringSingle, nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\t{`'`, LiteralStringSingle, Pop(1)},\n-\t\t},\n-\t\t\"string-url\": {\n-\t\t\t{`(\\\\#|#(?=[^\\n{])|[^\\n#)])+`, LiteralStringOther, nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\t{`\\)`, LiteralStringOther, Pop(1)},\n-\t\t},\n-\t\t\"pseudo-class\": {\n-\t\t\t{`[\\w-]+`, NameDecorator, nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"class\": {\n-\t\t\t{`[\\w-]+`, NameClass, nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"id\": {\n-\t\t\t{`[\\w-]+`, NameNamespace, nil},\n-\t\t\t{`#\\{`, LiteralStringInterpol, Push(\"interpolation\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"for\": {\n-\t\t\t{`(from|to|through)`, OperatorWord, nil},\n-\t\t\tInclude(\"value\"),\n-\t\t},\n-\t\t\"each\": {\n-\t\t\t{`in`, OperatorWord, nil},\n-\t\t\tInclude(\"value\"),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "ff5edf93b20c5db36041d16c13bfdd6a785a8f7c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/sieve.go",
      "status": "removed",
      "additions": 0,
      "deletions": 37,
      "changes": 37,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsieve.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsieve.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsieve.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,37 +0,0 @@\n-package s\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Sieve lexer.\n-var Sieve = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Sieve\",\n-\t\tAliases:   []string{\"sieve\"},\n-\t\tFilenames: []string{\"*.siv\", \"*.sieve\"},\n-\t\tMimeTypes: []string{},\n-\t},\n-\tfunc() Rules {\n-\t\treturn Rules{\n-\t\t\t\"root\": {\n-\t\t\t\t{`\\s+`, Text, nil},\n-\t\t\t\t{`[();,{}\\[\\]]`, Punctuation, nil},\n-\t\t\t\t{`(?i)require`, KeywordNamespace, nil},\n-\t\t\t\t{`(?i)(:)(addresses|all|contains|content|create|copy|comparator|count|days|detail|domain|fcc|flags|from|handle|importance|is|localpart|length|lowerfirst|lower|matches|message|mime|options|over|percent|quotewildcard|raw|regex|specialuse|subject|text|under|upperfirst|upper|value)`, ByGroups(NameTag, NameTag), nil},\n-\t\t\t\t{`(?i)(address|addflag|allof|anyof|body|discard|elsif|else|envelope|ereject|exists|false|fileinto|if|hasflag|header|keep|notify_method_capability|notify|not|redirect|reject|removeflag|setflag|size|spamtest|stop|string|true|vacation|virustest)`, NameBuiltin, nil},\n-\t\t\t\t{`(?i)set`, KeywordDeclaration, nil},\n-\t\t\t\t{`([0-9.]+)([kmgKMG])?`, ByGroups(LiteralNumber, LiteralNumber), nil},\n-\t\t\t\t{`#.*$`, CommentSingle, nil},\n-\t\t\t\t{`/\\*.*\\*/`, CommentMultiline, nil},\n-\t\t\t\t{`\"[^\"]*?\"`, LiteralString, nil},\n-\t\t\t\t{`text:`, NameTag, Push(\"text\")},\n-\t\t\t},\n-\t\t\t\"text\": {\n-\t\t\t\t{`[^.].*?\\n`, LiteralString, nil},\n-\t\t\t\t{`^\\.`, Punctuation, Pop(1)},\n-\t\t\t},\n-\t\t}\n-\t},\n-))"
    },
    {
      "sha": "b4143d02fc598c35625524437344394ffb2d6587",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/smalltalk.go",
      "status": "removed",
      "additions": 0,
      "deletions": 103,
      "changes": 103,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsmalltalk.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsmalltalk.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsmalltalk.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,103 +0,0 @@\n-package s\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Smalltalk lexer.\n-var Smalltalk = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Smalltalk\",\n-\t\tAliases:   []string{\"smalltalk\", \"squeak\", \"st\"},\n-\t\tFilenames: []string{\"*.st\"},\n-\t\tMimeTypes: []string{\"text/x-smalltalk\"},\n-\t},\n-\tsmalltalkRules,\n-))\n-\n-func smalltalkRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`(<)(\\w+:)(.*?)(>)`, ByGroups(Text, Keyword, Text, Text), nil},\n-\t\t\tInclude(\"squeak fileout\"),\n-\t\t\tInclude(\"whitespaces\"),\n-\t\t\tInclude(\"method definition\"),\n-\t\t\t{`(\\|)([\\w\\s]*)(\\|)`, ByGroups(Operator, NameVariable, Operator), nil},\n-\t\t\tInclude(\"objects\"),\n-\t\t\t{`\\^|:=|_`, Operator, nil},\n-\t\t\t{`[\\]({}.;!]`, Text, nil},\n-\t\t},\n-\t\t\"method definition\": {\n-\t\t\t{`([a-zA-Z]+\\w*:)(\\s*)(\\w+)`, ByGroups(NameFunction, Text, NameVariable), nil},\n-\t\t\t{`^(\\b[a-zA-Z]+\\w*\\b)(\\s*)$`, ByGroups(NameFunction, Text), nil},\n-\t\t\t{`^([-+*/\\\\~<>=|&!?,@%]+)(\\s*)(\\w+)(\\s*)$`, ByGroups(NameFunction, Text, NameVariable, Text), nil},\n-\t\t},\n-\t\t\"blockvariables\": {\n-\t\t\tInclude(\"whitespaces\"),\n-\t\t\t{`(:)(\\s*)(\\w+)`, ByGroups(Operator, Text, NameVariable), nil},\n-\t\t\t{`\\|`, Operator, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"literals\": {\n-\t\t\t{`'(''|[^'])*'`, LiteralString, Push(\"afterobject\")},\n-\t\t\t{`\\$.`, LiteralStringChar, Push(\"afterobject\")},\n-\t\t\t{`#\\(`, LiteralStringSymbol, Push(\"parenth\")},\n-\t\t\t{`\\)`, Text, Push(\"afterobject\")},\n-\t\t\t{`(\\d+r)?-?\\d+(\\.\\d+)?(e-?\\d+)?`, LiteralNumber, Push(\"afterobject\")},\n-\t\t},\n-\t\t\"_parenth_helper\": {\n-\t\t\tInclude(\"whitespaces\"),\n-\t\t\t{`(\\d+r)?-?\\d+(\\.\\d+)?(e-?\\d+)?`, LiteralNumber, nil},\n-\t\t\t{`[-+*/\\\\~<>=|&#!?,@%\\w:]+`, LiteralStringSymbol, nil},\n-\t\t\t{`'(''|[^'])*'`, LiteralString, nil},\n-\t\t\t{`\\$.`, LiteralStringChar, nil},\n-\t\t\t{`#*\\(`, LiteralStringSymbol, Push(\"inner_parenth\")},\n-\t\t},\n-\t\t\"parenth\": {\n-\t\t\t{`\\)`, LiteralStringSymbol, Push(\"root\", \"afterobject\")},\n-\t\t\tInclude(\"_parenth_helper\"),\n-\t\t},\n-\t\t\"inner_parenth\": {\n-\t\t\t{`\\)`, LiteralStringSymbol, Pop(1)},\n-\t\t\tInclude(\"_parenth_helper\"),\n-\t\t},\n-\t\t\"whitespaces\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\"(\"\"|[^\"])*\"`, Comment, nil},\n-\t\t},\n-\t\t\"objects\": {\n-\t\t\t{`\\[`, Text, Push(\"blockvariables\")},\n-\t\t\t{`\\]`, Text, Push(\"afterobject\")},\n-\t\t\t{`\\b(self|super|true|false|nil|thisContext)\\b`, NameBuiltinPseudo, Push(\"afterobject\")},\n-\t\t\t{`\\b[A-Z]\\w*(?!:)\\b`, NameClass, Push(\"afterobject\")},\n-\t\t\t{`\\b[a-z]\\w*(?!:)\\b`, NameVariable, Push(\"afterobject\")},\n-\t\t\t{`#(\"(\"\"|[^\"])*\"|[-+*/\\\\~<>=|&!?,@%]+|[\\w:]+)`, LiteralStringSymbol, Push(\"afterobject\")},\n-\t\t\tInclude(\"literals\"),\n-\t\t},\n-\t\t\"afterobject\": {\n-\t\t\t{`! !$`, Keyword, Pop(1)},\n-\t\t\tInclude(\"whitespaces\"),\n-\t\t\t{`\\b(ifTrue:|ifFalse:|whileTrue:|whileFalse:|timesRepeat:)`, NameBuiltin, Pop(1)},\n-\t\t\t{`\\b(new\\b(?!:))`, NameBuiltin, nil},\n-\t\t\t{`:=|_`, Operator, Pop(1)},\n-\t\t\t{`\\b[a-zA-Z]+\\w*:`, NameFunction, Pop(1)},\n-\t\t\t{`\\b[a-zA-Z]+\\w*`, NameFunction, nil},\n-\t\t\t{`\\w+:?|[-+*/\\\\~<>=|&!?,@%]+`, NameFunction, Pop(1)},\n-\t\t\t{`\\.`, Punctuation, Pop(1)},\n-\t\t\t{`;`, Punctuation, nil},\n-\t\t\t{`[\\])}]`, Text, nil},\n-\t\t\t{`[\\[({]`, Text, Pop(1)},\n-\t\t},\n-\t\t\"squeak fileout\": {\n-\t\t\t{`^\"(\"\"|[^\"])*\"!`, Keyword, nil},\n-\t\t\t{`^'(''|[^'])*'!`, Keyword, nil},\n-\t\t\t{`^(!)(\\w+)( commentStamp: )(.*?)( prior: .*?!\\n)(.*?)(!)`, ByGroups(Keyword, NameClass, Keyword, LiteralString, Keyword, Text, Keyword), nil},\n-\t\t\t{`^(!)(\\w+(?: class)?)( methodsFor: )('(?:''|[^'])*')(.*?!)`, ByGroups(Keyword, NameClass, Keyword, LiteralString, Keyword), nil},\n-\t\t\t{`^(\\w+)( subclass: )(#\\w+)(\\s+instanceVariableNames: )(.*?)(\\s+classVariableNames: )(.*?)(\\s+poolDictionaries: )(.*?)(\\s+category: )(.*?)(!)`, ByGroups(NameClass, Keyword, LiteralStringSymbol, Keyword, LiteralString, Keyword, LiteralString, Keyword, LiteralString, Keyword, LiteralString, Keyword), nil},\n-\t\t\t{`^(\\w+(?: class)?)(\\s+instanceVariableNames: )(.*?)(!)`, ByGroups(NameClass, Keyword, LiteralString, Keyword), nil},\n-\t\t\t{`(!\\n)(\\].*)(! !)$`, ByGroups(Keyword, Text, Keyword), nil},\n-\t\t\t{`! !$`, Keyword, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "c795ea867e27490b4853cf84627c8ef887fc3226",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/sml.go",
      "status": "removed",
      "additions": 0,
      "deletions": 204,
      "changes": 204,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsml.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,204 +0,0 @@\n-package s\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Standard ML lexer.\n-var StandardML = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Standard ML\",\n-\t\tAliases:   []string{\"sml\"},\n-\t\tFilenames: []string{\"*.sml\", \"*.sig\", \"*.fun\"},\n-\t\tMimeTypes: []string{\"text/x-standardml\", \"application/x-standardml\"},\n-\t},\n-\tstandardMLRules,\n-))\n-\n-func standardMLRules() Rules {\n-\treturn Rules{\n-\t\t\"whitespace\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\(\\*`, CommentMultiline, Push(\"comment\")},\n-\t\t},\n-\t\t\"delimiters\": {\n-\t\t\t{`\\(|\\[|\\{`, Punctuation, Push(\"main\")},\n-\t\t\t{`\\)|\\]|\\}`, Punctuation, Pop(1)},\n-\t\t\t{`\\b(let|if|local)\\b(?!\\')`, KeywordReserved, Push(\"main\", \"main\")},\n-\t\t\t{`\\b(struct|sig|while)\\b(?!\\')`, KeywordReserved, Push(\"main\")},\n-\t\t\t{`\\b(do|else|end|in|then)\\b(?!\\')`, KeywordReserved, Pop(1)},\n-\t\t},\n-\t\t\"core\": {\n-\t\t\t{`(_|\\}|\\{|\\)|;|,|\\[|\\(|\\]|\\.\\.\\.)`, Punctuation, nil},\n-\t\t\t{`#\"`, LiteralStringChar, Push(\"char\")},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n-\t\t\t{`~?0x[0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`0wx[0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`0w\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`~?\\d+\\.\\d+[eE]~?\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`~?\\d+\\.\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`~?\\d+[eE]~?\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`~?\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`#\\s*[1-9][0-9]*`, NameLabel, nil},\n-\t\t\t{`#\\s*([a-zA-Z][\\w']*)`, NameLabel, nil},\n-\t\t\t{\"#\\\\s+([!%&$#+\\\\-/:<=>?@\\\\\\\\~`^|*]+)\", NameLabel, nil},\n-\t\t\t{`\\b(datatype|abstype)\\b(?!\\')`, KeywordReserved, Push(\"dname\")},\n-\t\t\t{`(?=\\b(exception)\\b(?!\\'))`, Text, Push(\"ename\")},\n-\t\t\t{`\\b(functor|include|open|signature|structure)\\b(?!\\')`, KeywordReserved, Push(\"sname\")},\n-\t\t\t{`\\b(type|eqtype)\\b(?!\\')`, KeywordReserved, Push(\"tname\")},\n-\t\t\t{`\\'[\\w\\']*`, NameDecorator, nil},\n-\t\t\t{`([a-zA-Z][\\w']*)(\\.)`, NameNamespace, Push(\"dotted\")},\n-\t\t\t{`\\b(abstype|and|andalso|as|case|datatype|do|else|end|exception|fn|fun|handle|if|in|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|then|type|val|with|withtype|while|eqtype|functor|include|sharing|sig|signature|struct|structure|where)\\b`, KeywordReserved, nil},\n-\t\t\t{`([a-zA-Z][\\w']*)`, Name, nil},\n-\t\t\t{`\\b(:|\\|,=|=>|->|#|:>)\\b`, KeywordReserved, nil},\n-\t\t\t{\"([!%&$#+\\\\-/:<=>?@\\\\\\\\~`^|*]+)\", Name, nil},\n-\t\t},\n-\t\t\"dotted\": {\n-\t\t\t{`([a-zA-Z][\\w']*)(\\.)`, NameNamespace, nil},\n-\t\t\t// ignoring reserved words\n-\t\t\t{`([a-zA-Z][\\w']*)`, Name, Pop(1)},\n-\t\t\t// ignoring reserved words\n-\t\t\t{\"([!%&$#+\\\\-/:<=>?@\\\\\\\\~`^|*]+)\", Name, Pop(1)},\n-\t\t\t{`\\s+`, Error, nil},\n-\t\t\t{`\\S+`, Error, nil},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\tDefault(Push(\"main\")),\n-\t\t},\n-\t\t\"main\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`\\b(val|and)\\b(?!\\')`, KeywordReserved, Push(\"vname\")},\n-\t\t\t{`\\b(fun)\\b(?!\\')`, KeywordReserved, Push(\"#pop\", \"main-fun\", \"fname\")},\n-\t\t\tInclude(\"delimiters\"),\n-\t\t\tInclude(\"core\"),\n-\t\t\t{`\\S+`, Error, nil},\n-\t\t},\n-\t\t\"main-fun\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`\\s`, Text, nil},\n-\t\t\t{`\\(\\*`, CommentMultiline, Push(\"comment\")},\n-\t\t\t{`\\b(fun|and)\\b(?!\\')`, KeywordReserved, Push(\"fname\")},\n-\t\t\t{`\\b(val)\\b(?!\\')`, KeywordReserved, Push(\"#pop\", \"main\", \"vname\")},\n-\t\t\t{`\\|`, Punctuation, Push(\"fname\")},\n-\t\t\t{`\\b(case|handle)\\b(?!\\')`, KeywordReserved, Push(\"#pop\", \"main\")},\n-\t\t\tInclude(\"delimiters\"),\n-\t\t\tInclude(\"core\"),\n-\t\t\t{`\\S+`, Error, nil},\n-\t\t},\n-\t\t\"char\": {\n-\t\t\t{`[^\"\\\\]`, LiteralStringChar, nil},\n-\t\t\t{`\\\\[\\\\\"abtnvfr]`, LiteralStringEscape, nil},\n-\t\t\t{`\\\\\\^[\\x40-\\x5e]`, LiteralStringEscape, nil},\n-\t\t\t{`\\\\[0-9]{3}`, LiteralStringEscape, nil},\n-\t\t\t{`\\\\u[0-9a-fA-F]{4}`, LiteralStringEscape, nil},\n-\t\t\t{`\\\\\\s+\\\\`, LiteralStringInterpol, nil},\n-\t\t\t{`\"`, LiteralStringChar, Pop(1)},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`[^\"\\\\]`, LiteralStringDouble, nil},\n-\t\t\t{`\\\\[\\\\\"abtnvfr]`, LiteralStringEscape, nil},\n-\t\t\t{`\\\\\\^[\\x40-\\x5e]`, LiteralStringEscape, nil},\n-\t\t\t{`\\\\[0-9]{3}`, LiteralStringEscape, nil},\n-\t\t\t{`\\\\u[0-9a-fA-F]{4}`, LiteralStringEscape, nil},\n-\t\t\t{`\\\\\\s+\\\\`, LiteralStringInterpol, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t},\n-\t\t\"breakout\": {\n-\t\t\t{`(?=\\b(where|do|handle|if|sig|op|while|case|as|else|signature|andalso|struct|infixr|functor|in|structure|then|local|rec|end|fun|of|orelse|val|include|fn|with|exception|let|and|infix|sharing|datatype|type|abstype|withtype|eqtype|nonfix|raise|open)\\b(?!\\'))`, Text, Pop(1)},\n-\t\t},\n-\t\t\"sname\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"breakout\"),\n-\t\t\t{`([a-zA-Z][\\w']*)`, NameNamespace, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"fname\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`\\'[\\w\\']*`, NameDecorator, nil},\n-\t\t\t{`\\(`, Punctuation, Push(\"tyvarseq\")},\n-\t\t\t{`([a-zA-Z][\\w']*)`, NameFunction, Pop(1)},\n-\t\t\t{\"([!%&$#+\\\\-/:<=>?@\\\\\\\\~`^|*]+)\", NameFunction, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"vname\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`\\'[\\w\\']*`, NameDecorator, nil},\n-\t\t\t{`\\(`, Punctuation, Push(\"tyvarseq\")},\n-\t\t\t{\"([a-zA-Z][\\\\w']*)(\\\\s*)(=(?![!%&$#+\\\\-/:<=>?@\\\\\\\\~`^|*]+))\", ByGroups(NameVariable, Text, Punctuation), Pop(1)},\n-\t\t\t{\"([!%&$#+\\\\-/:<=>?@\\\\\\\\~`^|*]+)(\\\\s*)(=(?![!%&$#+\\\\-/:<=>?@\\\\\\\\~`^|*]+))\", ByGroups(NameVariable, Text, Punctuation), Pop(1)},\n-\t\t\t{`([a-zA-Z][\\w']*)`, NameVariable, Pop(1)},\n-\t\t\t{\"([!%&$#+\\\\-/:<=>?@\\\\\\\\~`^|*]+)\", NameVariable, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"tname\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"breakout\"),\n-\t\t\t{`\\'[\\w\\']*`, NameDecorator, nil},\n-\t\t\t{`\\(`, Punctuation, Push(\"tyvarseq\")},\n-\t\t\t{\"=(?![!%&$#+\\\\-/:<=>?@\\\\\\\\~`^|*]+)\", Punctuation, Push(\"#pop\", \"typbind\")},\n-\t\t\t{`([a-zA-Z][\\w']*)`, KeywordType, nil},\n-\t\t\t{\"([!%&$#+\\\\-/:<=>?@\\\\\\\\~`^|*]+)\", KeywordType, nil},\n-\t\t\t{`\\S+`, Error, Pop(1)},\n-\t\t},\n-\t\t\"typbind\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`\\b(and)\\b(?!\\')`, KeywordReserved, Push(\"#pop\", \"tname\")},\n-\t\t\tInclude(\"breakout\"),\n-\t\t\tInclude(\"core\"),\n-\t\t\t{`\\S+`, Error, Pop(1)},\n-\t\t},\n-\t\t\"dname\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"breakout\"),\n-\t\t\t{`\\'[\\w\\']*`, NameDecorator, nil},\n-\t\t\t{`\\(`, Punctuation, Push(\"tyvarseq\")},\n-\t\t\t{`(=)(\\s*)(datatype)`, ByGroups(Punctuation, Text, KeywordReserved), Pop(1)},\n-\t\t\t{\"=(?![!%&$#+\\\\-/:<=>?@\\\\\\\\~`^|*]+)\", Punctuation, Push(\"#pop\", \"datbind\", \"datcon\")},\n-\t\t\t{`([a-zA-Z][\\w']*)`, KeywordType, nil},\n-\t\t\t{\"([!%&$#+\\\\-/:<=>?@\\\\\\\\~`^|*]+)\", KeywordType, nil},\n-\t\t\t{`\\S+`, Error, Pop(1)},\n-\t\t},\n-\t\t\"datbind\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`\\b(and)\\b(?!\\')`, KeywordReserved, Push(\"#pop\", \"dname\")},\n-\t\t\t{`\\b(withtype)\\b(?!\\')`, KeywordReserved, Push(\"#pop\", \"tname\")},\n-\t\t\t{`\\b(of)\\b(?!\\')`, KeywordReserved, nil},\n-\t\t\t{`(\\|)(\\s*)([a-zA-Z][\\w']*)`, ByGroups(Punctuation, Text, NameClass), nil},\n-\t\t\t{\"(\\\\|)(\\\\s+)([!%&$#+\\\\-/:<=>?@\\\\\\\\~`^|*]+)\", ByGroups(Punctuation, Text, NameClass), nil},\n-\t\t\tInclude(\"breakout\"),\n-\t\t\tInclude(\"core\"),\n-\t\t\t{`\\S+`, Error, nil},\n-\t\t},\n-\t\t\"ename\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`(exception|and)\\b(\\s+)([a-zA-Z][\\w']*)`, ByGroups(KeywordReserved, Text, NameClass), nil},\n-\t\t\t{\"(exception|and)\\\\b(\\\\s*)([!%&$#+\\\\-/:<=>?@\\\\\\\\~`^|*]+)\", ByGroups(KeywordReserved, Text, NameClass), nil},\n-\t\t\t{`\\b(of)\\b(?!\\')`, KeywordReserved, nil},\n-\t\t\tInclude(\"breakout\"),\n-\t\t\tInclude(\"core\"),\n-\t\t\t{`\\S+`, Error, nil},\n-\t\t},\n-\t\t\"datcon\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`([a-zA-Z][\\w']*)`, NameClass, Pop(1)},\n-\t\t\t{\"([!%&$#+\\\\-/:<=>?@\\\\\\\\~`^|*]+)\", NameClass, Pop(1)},\n-\t\t\t{`\\S+`, Error, Pop(1)},\n-\t\t},\n-\t\t\"tyvarseq\": {\n-\t\t\t{`\\s`, Text, nil},\n-\t\t\t{`\\(\\*`, CommentMultiline, Push(\"comment\")},\n-\t\t\t{`\\'[\\w\\']*`, NameDecorator, nil},\n-\t\t\t{`[a-zA-Z][\\w']*`, Name, nil},\n-\t\t\t{`,`, Punctuation, nil},\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t\t{\"[!%&$#+\\\\-/:<=>?@\\\\\\\\~`^|*]+\", Name, nil},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`[^(*)]`, CommentMultiline, nil},\n-\t\t\t{`\\(\\*`, CommentMultiline, Push()},\n-\t\t\t{`\\*\\)`, CommentMultiline, Pop(1)},\n-\t\t\t{`[(*)]`, CommentMultiline, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "4529034675e34a225f10fe4dd197899279f81e2e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/snobol.go",
      "status": "removed",
      "additions": 0,
      "deletions": 52,
      "changes": 52,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsnobol.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsnobol.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsnobol.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,52 +0,0 @@\n-package s\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Snobol lexer.\n-var Snobol = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Snobol\",\n-\t\tAliases:   []string{\"snobol\"},\n-\t\tFilenames: []string{\"*.snobol\"},\n-\t\tMimeTypes: []string{\"text/x-snobol\"},\n-\t},\n-\tsnobolRules,\n-))\n-\n-func snobolRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\*.*\\n`, Comment, nil},\n-\t\t\t{`[+.] `, Punctuation, Push(\"statement\")},\n-\t\t\t{`-.*\\n`, Comment, nil},\n-\t\t\t{`END\\s*\\n`, NameLabel, Push(\"heredoc\")},\n-\t\t\t{`[A-Za-z$][\\w$]*`, NameLabel, Push(\"statement\")},\n-\t\t\t{`\\s+`, Text, Push(\"statement\")},\n-\t\t},\n-\t\t\"statement\": {\n-\t\t\t{`\\s*\\n`, Text, Pop(1)},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`(?<=[^\\w.])(LT|LE|EQ|NE|GE|GT|INTEGER|IDENT|DIFFER|LGT|SIZE|REPLACE|TRIM|DUPL|REMDR|DATE|TIME|EVAL|APPLY|OPSYN|LOAD|UNLOAD|LEN|SPAN|BREAK|ANY|NOTANY|TAB|RTAB|REM|POS|RPOS|FAIL|FENCE|ABORT|ARB|ARBNO|BAL|SUCCEED|INPUT|OUTPUT|TERMINAL)(?=[^\\w.])`, NameBuiltin, nil},\n-\t\t\t{`[A-Za-z][\\w.]*`, Name, nil},\n-\t\t\t{`\\*\\*|[?$.!%*/#+\\-@|&\\\\=]`, Operator, nil},\n-\t\t\t{`\"[^\"]*\"`, LiteralString, nil},\n-\t\t\t{`'[^']*'`, LiteralString, nil},\n-\t\t\t{`[0-9]+(?=[^.EeDd])`, LiteralNumberInteger, nil},\n-\t\t\t{`[0-9]+(\\.[0-9]*)?([EDed][-+]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`:`, Punctuation, Push(\"goto\")},\n-\t\t\t{`[()<>,;]`, Punctuation, nil},\n-\t\t},\n-\t\t\"goto\": {\n-\t\t\t{`\\s*\\n`, Text, Pop(2)},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`F|S`, Keyword, nil},\n-\t\t\t{`(\\()([A-Za-z][\\w.]*)(\\))`, ByGroups(Punctuation, NameLabel, Punctuation), nil},\n-\t\t},\n-\t\t\"heredoc\": {\n-\t\t\t{`.*\\n`, LiteralStringHeredoc, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "62a3a40a1176ef4e964824f16dbd90741024157f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/solidity.go",
      "status": "removed",
      "additions": 0,
      "deletions": 118,
      "changes": 118,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsolidity.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsolidity.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsolidity.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,118 +0,0 @@\n-package s\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Solidity lexer.\n-var Solidity = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Solidity\",\n-\t\tAliases:   []string{\"sol\", \"solidity\"},\n-\t\tFilenames: []string{\"*.sol\"},\n-\t\tMimeTypes: []string{},\n-\t\tDotAll:    true,\n-\t},\n-\tsolidityRules,\n-))\n-\n-func solidityRules() Rules {\n-\treturn Rules{\n-\t\t\"assembly\": {\n-\t\t\tInclude(\"comments\"),\n-\t\t\tInclude(\"numbers\"),\n-\t\t\tInclude(\"strings\"),\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`\\{`, Punctuation, Push()},\n-\t\t\t{`\\}`, Punctuation, Pop(1)},\n-\t\t\t{`[(),]`, Punctuation, nil},\n-\t\t\t{`:=|=:`, Operator, nil},\n-\t\t\t{`(let)(\\s*)(\\w*\\b)`, ByGroups(OperatorWord, Text, NameVariable), nil},\n-\t\t\t{`(\\w*\\b)(\\:[^=])`, ByGroups(NameLabel, Punctuation), nil},\n-\t\t\t{`(stop|add|mul|sub|div|sdiv|mod|smod|addmod|mulmod|exp|signextend|lt|gt|slt|sgt|eq|iszero|and|or|xor|not|byte|keccak256|sha3|address|balance|origin|caller|callvalue|calldataload|calldatasize|calldatacopy|codesize|codecopy|gasprice|extcodesize|extcodecopy|blockhash|coinbase|timestamp|number|difficulty|gaslimit|pop|mload|mstore|mstore8|sload|sstore|for|switch|jump|jumpi|pc|msize|gas|jumpdest|push1|push2|push32|dup1|dup2|dup16|swap1|swap2|swap16|log0|log1|log4|create|call|callcode|return|delegatecall|suicide|returndatasize|returndatacopy|staticcall|revert|invalid)\\b`, NameFunction, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t},\n-\t\t\"comments\": {\n-\t\t\t{`//([\\w\\W]*?\\n)`, CommentSingle, nil},\n-\t\t\t{`/[*][\\w\\W]*?[*]/`, CommentMultiline, nil},\n-\t\t\t{`/[*][\\w\\W]*`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"keywords-other\": {\n-\t\t\t{Words(``, `\\b`, `for`, `in`, `while`, `do`, `break`, `return`, `returns`, `continue`, `if`, `else`, `try`, `catch`, `throw`, `_`, `new`, `delete`, `is`, `as`, `from`, `memory`, `storage`), Keyword, nil},\n-\t\t\t{`assembly\\b`, Keyword, Push(\"assembly\")},\n-\t\t\t{`(contract|interface|enum|event|struct)(\\s+)([a-zA-Z_]\\w*)`, ByGroups(KeywordDeclaration, Text, NameClass), nil},\n-\t\t\t{`(function|modifier)(\\s+)([a-zA-Z_]\\w*)`, ByGroups(KeywordDeclaration, Text, NameFunction), nil},\n-\t\t\t{Words(``, `\\b`, `contract`, `interface`, `enum`, `event`, `constructor`, `function`, `library`, `mapping`, `modifier`, `struct`, `var`), KeywordDeclaration, nil},\n-\t\t\t{Words(``, `\\b`, `abstract`, `external`, `internal`, `private`, `public`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `anonymous`, `constant`, `immutable`, `indexed`, `override`, `payable`, `pure`, `view`, `virtual`), Keyword, nil},\n-\t\t\t{`(import|using)\\b`, KeywordNamespace, nil},\n-\t\t\t{`pragma (solidity|experimental)\\b`, Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `after`, `alias`, `apply`, `auto`, `case`, `copyof`, `default`, `define`, `final`, `implements`, `inline`, `let`, `macro`, `match`, `mutable`, `null`, `of`, `partial`, `promise`, `reference`, `relocatable`, `sealed`, `sizeof`, `static`, `supports`, `switch`, `typedef`, `typeof`, `unchecked`), KeywordReserved, nil},\n-\t\t\t{`(true|false)\\b`, KeywordConstant, nil},\n-\t\t\t{`(wei|finney|szabo|ether)\\b`, KeywordConstant, nil},\n-\t\t\t{`(seconds|minutes|hours|days|weeks|years)\\b`, KeywordConstant, nil},\n-\t\t},\n-\t\t\"keywords-types\": {\n-\t\t\t{Words(``, `\\b`, `address`, `bool`, `byte`, `bytes`, `int`, `fixed`, `string`, `ufixed`, `uint`), KeywordType, nil},\n-\t\t\t{Words(``, `\\b`, `int8`, `int16`, `int24`, `int32`, `int40`, `int48`, `int56`, `int64`, `int72`, `int80`, `int88`, `int96`, `int104`, `int112`, `int120`, `int128`, `int136`, `int144`, `int152`, `int160`, `int168`, `int176`, `int184`, `int192`, `int200`, `int208`, `int216`, `int224`, `int232`, `int240`, `int248`, `int256`), KeywordType, nil},\n-\t\t\t{Words(``, `\\b`, `uint8`, `uint16`, `uint24`, `uint32`, `uint40`, `uint48`, `uint56`, `uint64`, `uint72`, `uint80`, `uint88`, `uint96`, `uint104`, `uint112`, `uint120`, `uint128`, `uint136`, `uint144`, `uint152`, `uint160`, `uint168`, `uint176`, `uint184`, `uint192`, `uint200`, `uint208`, `uint216`, `uint224`, `uint232`, `uint240`, `uint248`, `uint256`), KeywordType, nil},\n-\t\t\t{Words(``, `\\b`, `bytes1`, `bytes2`, `bytes3`, `bytes4`, `bytes5`, `bytes6`, `bytes7`, `bytes8`, `bytes9`, `bytes10`, `bytes11`, `bytes12`, `bytes13`, `bytes14`, `bytes15`, `bytes16`, `bytes17`, `bytes18`, `bytes19`, `bytes20`, `bytes21`, `bytes22`, `bytes23`, `bytes24`, `bytes25`, `bytes26`, `bytes27`, `bytes28`, `bytes29`, `bytes30`, `bytes31`, `bytes32`), KeywordType, nil},\n-\t\t\t{Words(``, `\\b`, `fixed8x0`, `fixed8x1`, `fixed8x2`, `fixed8x3`, `fixed8x4`, `fixed8x5`, `fixed8x6`, `fixed8x7`, `fixed8x8`, `fixed8x9`, `fixed8x10`, `fixed8x11`, `fixed8x12`, `fixed8x13`, `fixed8x14`, `fixed8x15`, `fixed8x16`, `fixed8x17`, `fixed8x18`, `fixed8x19`, `fixed8x20`, `fixed8x21`, `fixed8x22`, `fixed8x23`, `fixed8x24`, `fixed8x25`, `fixed8x26`, `fixed8x27`, `fixed8x28`, `fixed8x29`, `fixed8x30`, `fixed8x31`, `fixed8x32`, `fixed8x33`, `fixed8x34`, `fixed8x35`, `fixed8x36`, `fixed8x37`, `fixed8x38`, `fixed8x39`, `fixed8x40`, `fixed8x41`, `fixed8x42`, `fixed8x43`, `fixed8x44`, `fixed8x45`, `fixed8x46`, `fixed8x47`, `fixed8x48`, `fixed8x49`, `fixed8x50`, `fixed8x51`, `fixed8x52`, `fixed8x53`, `fixed8x54`, `fixed8x55`, `fixed8x56`, `fixed8x57`, `fixed8x58`, `fixed8x59`, `fixed8x60`, `fixed8x61`, `fixed8x62`, `fixed8x63`, `fixed8x64`, `fixed8x65`, `fixed8x66`, `fixed8x67`, `fixed8x68`, `fixed8x69`, `fixed8x70`, `fixed8x71`, `fixed8x72`, `fixed8x73`, `fixed8x74`, `fixed8x75`, `fixed8x76`, `fixed8x77`, `fixed8x78`, `fixed8x79`, `fixed8x80`, `fixed16x0`, `fixed16x1`, `fixed16x2`, `fixed16x3`, `fixed16x4`, `fixed16x5`, `fixed16x6`, `fixed16x7`, `fixed16x8`, `fixed16x9`, `fixed16x10`, `fixed16x11`, `fixed16x12`, `fixed16x13`, `fixed16x14`, `fixed16x15`, `fixed16x16`, `fixed16x17`, `fixed16x18`, `fixed16x19`, `fixed16x20`, `fixed16x21`, `fixed16x22`, `fixed16x23`, `fixed16x24`, `fixed16x25`, `fixed16x26`, `fixed16x27`, `fixed16x28`, `fixed16x29`, `fixed16x30`, `fixed16x31`, `fixed16x32`, `fixed16x33`, `fixed16x34`, `fixed16x35`, `fixed16x36`, `fixed16x37`, `fixed16x38`, `fixed16x39`, `fixed16x40`, `fixed16x41`, `fixed16x42`, `fixed16x43`, `fixed16x44`, `fixed16x45`, `fixed16x46`, `fixed16x47`, `fixed16x48`, `fixed16x49`, `fixed16x50`, `fixed16x51`, `fixed16x52`, `fixed16x53`, `fixed16x54`, `fixed16x55`, `fixed16x56`, `fixed16x57`, `fixed16x58`, `fixed16x59`, `fixed16x60`, `fixed16x61`, `fixed16x62`, `fixed16x63`, `fixed16x64`, `fixed16x65`, `fixed16x66`, `fixed16x67`, `fixed16x68`, `fixed16x69`, `fixed16x70`, `fixed16x71`, `fixed16x72`, `fixed16x73`, `fixed16x74`, `fixed16x75`, `fixed16x76`, `fixed16x77`, `fixed16x78`, `fixed16x79`, `fixed16x80`, `fixed24x0`, `fixed24x1`, `fixed24x2`, `fixed24x3`, `fixed24x4`, `fixed24x5`, `fixed24x6`, `fixed24x7`, `fixed24x8`, `fixed24x9`, `fixed24x10`, `fixed24x11`, `fixed24x12`, `fixed24x13`, `fixed24x14`, `fixed24x15`, `fixed24x16`, `fixed24x17`, `fixed24x18`, `fixed24x19`, `fixed24x20`, `fixed24x21`, `fixed24x22`, `fixed24x23`, `fixed24x24`, `fixed24x25`, `fixed24x26`, `fixed24x27`, `fixed24x28`, `fixed24x29`, `fixed24x30`, `fixed24x31`, `fixed24x32`, `fixed24x33`, `fixed24x34`, `fixed24x35`, `fixed24x36`, `fixed24x37`, `fixed24x38`, `fixed24x39`, `fixed24x40`, `fixed24x41`, `fixed24x42`, `fixed24x43`, `fixed24x44`, `fixed24x45`, `fixed24x46`, `fixed24x47`, `fixed24x48`, `fixed24x49`, `fixed24x50`, `fixed24x51`, `fixed24x52`, `fixed24x53`, `fixed24x54`, `fixed24x55`, `fixed24x56`, `fixed24x57`, `fixed24x58`, `fixed24x59`, `fixed24x60`, `fixed24x61`, `fixed24x62`, `fixed24x63`, `fixed24x64`, `fixed24x65`, `fixed24x66`, `fixed24x67`, `fixed24x68`, `fixed24x69`, `fixed24x70`, `fixed24x71`, `fixed24x72`, `fixed24x73`, `fixed24x74`, `fixed24x75`, `fixed24x76`, `fixed24x77`, `fixed24x78`, `fixed24x79`, `fixed24x80`, `fixed32x0`, `fixed32x1`, `fixed32x2`, `fixed32x3`, `fixed32x4`, `fixed32x5`, `fixed32x6`, `fixed32x7`, `fixed32x8`, `fixed32x9`, `fixed32x10`, `fixed32x11`, `fixed32x12`, `fixed32x13`, `fixed32x14`, `fixed32x15`, `fixed32x16`, `fixed32x17`, `fixed32x18`, `fixed32x19`, `fixed32x20`, `fixed32x21`, `fixed32x22`, `fixed32x23`, `fixed32x24`, `fixed32x25`, `fixed32x26`, `fixed32x27`, `fixed32x28`, `fixed32x29`, `fixed32x30`, `fixed32x31`, `fixed32x32`, `fixed32x33`, `fixed32x34`, `fixed32x35`, `fixed32x36`, `fixed32x37`, `fixed32x38`, `fixed32x39`, `fixed32x40`, `fixed32x41`, `fixed32x42`, `fixed32x43`, `fixed32x44`, `fixed32x45`, `fixed32x46`, `fixed32x47`, `fixed32x48`, `fixed32x49`, `fixed32x50`, `fixed32x51`, `fixed32x52`, `fixed32x53`, `fixed32x54`, `fixed32x55`, `fixed32x56`, `fixed32x57`, `fixed32x58`, `fixed32x59`, `fixed32x60`, `fixed32x61`, `fixed32x62`, `fixed32x63`, `fixed32x64`, `fixed32x65`, `fixed32x66`, `fixed32x67`, `fixed32x68`, `fixed32x69`, `fixed32x70`, `fixed32x71`, `fixed32x72`, `fixed32x73`, `fixed32x74`, `fixed32x75`, `fixed32x76`, `fixed32x77`, `fixed32x78`, `fixed32x79`, `fixed32x80`, `fixed40x0`, `fixed40x1`, `fixed40x2`, `fixed40x3`, `fixed40x4`, `fixed40x5`, `fixed40x6`, `fixed40x7`, `fixed40x8`, `fixed40x9`, `fixed40x10`, `fixed40x11`, `fixed40x12`, `fixed40x13`, `fixed40x14`, `fixed40x15`, `fixed40x16`, `fixed40x17`, `fixed40x18`, `fixed40x19`, `fixed40x20`, `fixed40x21`, `fixed40x22`, `fixed40x23`, `fixed40x24`, `fixed40x25`, `fixed40x26`, `fixed40x27`, `fixed40x28`, `fixed40x29`, `fixed40x30`, `fixed40x31`, `fixed40x32`, `fixed40x33`, `fixed40x34`, `fixed40x35`, `fixed40x36`, `fixed40x37`, `fixed40x38`, `fixed40x39`, `fixed40x40`, `fixed40x41`, `fixed40x42`, `fixed40x43`, `fixed40x44`, `fixed40x45`, `fixed40x46`, `fixed40x47`, `fixed40x48`, `fixed40x49`, `fixed40x50`, `fixed40x51`, `fixed40x52`, `fixed40x53`, `fixed40x54`, `fixed40x55`, `fixed40x56`, `fixed40x57`, `fixed40x58`, `fixed40x59`, `fixed40x60`, `fixed40x61`, `fixed40x62`, `fixed40x63`, `fixed40x64`, `fixed40x65`, `fixed40x66`, `fixed40x67`, `fixed40x68`, `fixed40x69`, `fixed40x70`, `fixed40x71`, `fixed40x72`, `fixed40x73`, `fixed40x74`, `fixed40x75`, `fixed40x76`, `fixed40x77`, `fixed40x78`, `fixed40x79`, `fixed40x80`, `fixed48x0`, `fixed48x1`, `fixed48x2`, `fixed48x3`, `fixed48x4`, `fixed48x5`, `fixed48x6`, `fixed48x7`, `fixed48x8`, `fixed48x9`, `fixed48x10`, `fixed48x11`, `fixed48x12`, `fixed48x13`, `fixed48x14`, `fixed48x15`, `fixed48x16`, `fixed48x17`, `fixed48x18`, `fixed48x19`, `fixed48x20`, `fixed48x21`, `fixed48x22`, `fixed48x23`, `fixed48x24`, `fixed48x25`, `fixed48x26`, `fixed48x27`, `fixed48x28`, `fixed48x29`, `fixed48x30`, `fixed48x31`, `fixed48x32`, `fixed48x33`, `fixed48x34`, `fixed48x35`, `fixed48x36`, `fixed48x37`, `fixed48x38`, `fixed48x39`, `fixed48x40`, `fixed48x41`, `fixed48x42`, `fixed48x43`, `fixed48x44`, `fixed48x45`, `fixed48x46`, `fixed48x47`, `fixed48x48`, `fixed48x49`, `fixed48x50`, `fixed48x51`, `fixed48x52`, `fixed48x53`, `fixed48x54`, `fixed48x55`, `fixed48x56`, `fixed48x57`, `fixed48x58`, `fixed48x59`, `fixed48x60`, `fixed48x61`, `fixed48x62`, `fixed48x63`, `fixed48x64`, `fixed48x65`, `fixed48x66`, `fixed48x67`, `fixed48x68`, `fixed48x69`, `fixed48x70`, `fixed48x71`, `fixed48x72`, `fixed48x73`, `fixed48x74`, `fixed48x75`, `fixed48x76`, `fixed48x77`, `fixed48x78`, `fixed48x79`, `fixed48x80`, `fixed56x0`, `fixed56x1`, `fixed56x2`, `fixed56x3`, `fixed56x4`, `fixed56x5`, `fixed56x6`, `fixed56x7`, `fixed56x8`, `fixed56x9`, `fixed56x10`, `fixed56x11`, `fixed56x12`, `fixed56x13`, `fixed56x14`, `fixed56x15`, `fixed56x16`, `fixed56x17`, `fixed56x18`, `fixed56x19`, `fixed56x20`, `fixed56x21`, `fixed56x22`, `fixed56x23`, `fixed56x24`, `fixed56x25`, `fixed56x26`, `fixed56x27`, `fixed56x28`, `fixed56x29`, `fixed56x30`, `fixed56x31`, `fixed56x32`, `fixed56x33`, `fixed56x34`, `fixed56x35`, `fixed56x36`, `fixed56x37`, `fixed56x38`, `fixed56x39`, `fixed56x40`, `fixed56x41`, `fixed56x42`, `fixed56x43`, `fixed56x44`, `fixed56x45`, `fixed56x46`, `fixed56x47`, `fixed56x48`, `fixed56x49`, `fixed56x50`, `fixed56x51`, `fixed56x52`, `fixed56x53`, `fixed56x54`, `fixed56x55`, `fixed56x56`, `fixed56x57`, `fixed56x58`, `fixed56x59`, `fixed56x60`, `fixed56x61`, `fixed56x62`, `fixed56x63`, `fixed56x64`, `fixed56x65`, `fixed56x66`, `fixed56x67`, `fixed56x68`, `fixed56x69`, `fixed56x70`, `fixed56x71`, `fixed56x72`, `fixed56x73`, `fixed56x74`, `fixed56x75`, `fixed56x76`, `fixed56x77`, `fixed56x78`, `fixed56x79`, `fixed56x80`, `fixed64x0`, `fixed64x1`, `fixed64x2`, `fixed64x3`, `fixed64x4`, `fixed64x5`, `fixed64x6`, `fixed64x7`, `fixed64x8`, `fixed64x9`, `fixed64x10`, `fixed64x11`, `fixed64x12`, `fixed64x13`, `fixed64x14`, `fixed64x15`, `fixed64x16`, `fixed64x17`, `fixed64x18`, `fixed64x19`, `fixed64x20`, `fixed64x21`, `fixed64x22`, `fixed64x23`, `fixed64x24`, `fixed64x25`, `fixed64x26`, `fixed64x27`, `fixed64x28`, `fixed64x29`, `fixed64x30`, `fixed64x31`, `fixed64x32`, `fixed64x33`, `fixed64x34`, `fixed64x35`, `fixed64x36`, `fixed64x37`, `fixed64x38`, `fixed64x39`, `fixed64x40`, `fixed64x41`, `fixed64x42`, `fixed64x43`, `fixed64x44`, `fixed64x45`, `fixed64x46`, `fixed64x47`, `fixed64x48`, `fixed64x49`, `fixed64x50`, `fixed64x51`, `fixed64x52`, `fixed64x53`, `fixed64x54`, `fixed64x55`, `fixed64x56`, `fixed64x57`, `fixed64x58`, `fixed64x59`, `fixed64x60`, `fixed64x61`, `fixed64x62`, `fixed64x63`, `fixed64x64`, `fixed64x65`, `fixed64x66`, `fixed64x67`, `fixed64x68`, `fixed64x69`, `fixed64x70`, `fixed64x71`, `fixed64x72`, `fixed64x73`, `fixed64x74`, `fixed64x75`, `fixed64x76`, `fixed64x77`, `fixed64x78`, `fixed64x79`, `fixed64x80`, `fixed72x0`, `fixed72x1`, `fixed72x2`, `fixed72x3`, `fixed72x4`, `fixed72x5`, `fixed72x6`, `fixed72x7`, `fixed72x8`, `fixed72x9`, `fixed72x10`, `fixed72x11`, `fixed72x12`, `fixed72x13`, `fixed72x14`, `fixed72x15`, `fixed72x16`, `fixed72x17`, `fixed72x18`, `fixed72x19`, `fixed72x20`, `fixed72x21`, `fixed72x22`, `fixed72x23`, `fixed72x24`, `fixed72x25`, `fixed72x26`, `fixed72x27`, `fixed72x28`, `fixed72x29`, `fixed72x30`, `fixed72x31`, `fixed72x32`, `fixed72x33`, `fixed72x34`, `fixed72x35`, `fixed72x36`, `fixed72x37`, `fixed72x38`, `fixed72x39`, `fixed72x40`, `fixed72x41`, `fixed72x42`, `fixed72x43`, `fixed72x44`, `fixed72x45`, `fixed72x46`, `fixed72x47`, `fixed72x48`, `fixed72x49`, `fixed72x50`, `fixed72x51`, `fixed72x52`, `fixed72x53`, `fixed72x54`, `fixed72x55`, `fixed72x56`, `fixed72x57`, `fixed72x58`, `fixed72x59`, `fixed72x60`, `fixed72x61`, `fixed72x62`, `fixed72x63`, `fixed72x64`, `fixed72x65`, `fixed72x66`, `fixed72x67`, `fixed72x68`, `fixed72x69`, `fixed72x70`, `fixed72x71`, `fixed72x72`, `fixed72x73`, `fixed72x74`, `fixed72x75`, `fixed72x76`, `fixed72x77`, `fixed72x78`, `fixed72x79`, `fixed72x80`, `fixed80x0`, `fixed80x1`, `fixed80x2`, `fixed80x3`, `fixed80x4`, `fixed80x5`, `fixed80x6`, `fixed80x7`, `fixed80x8`, `fixed80x9`, `fixed80x10`, `fixed80x11`, `fixed80x12`, `fixed80x13`, `fixed80x14`, `fixed80x15`, `fixed80x16`, `fixed80x17`, `fixed80x18`, `fixed80x19`, `fixed80x20`, `fixed80x21`, `fixed80x22`, `fixed80x23`, `fixed80x24`, `fixed80x25`, `fixed80x26`, `fixed80x27`, `fixed80x28`, `fixed80x29`, `fixed80x30`, `fixed80x31`, `fixed80x32`, `fixed80x33`, `fixed80x34`, `fixed80x35`, `fixed80x36`, `fixed80x37`, `fixed80x38`, `fixed80x39`, `fixed80x40`, `fixed80x41`, `fixed80x42`, `fixed80x43`, `fixed80x44`, `fixed80x45`, `fixed80x46`, `fixed80x47`, `fixed80x48`, `fixed80x49`, `fixed80x50`, `fixed80x51`, `fixed80x52`, `fixed80x53`, `fixed80x54`, `fixed80x55`, `fixed80x56`, `fixed80x57`, `fixed80x58`, `fixed80x59`, `fixed80x60`, `fixed80x61`, `fixed80x62`, `fixed80x63`, `fixed80x64`, `fixed80x65`, `fixed80x66`, `fixed80x67`, `fixed80x68`, `fixed80x69`, `fixed80x70`, `fixed80x71`, `fixed80x72`, `fixed80x73`, `fixed80x74`, `fixed80x75`, `fixed80x76`, `fixed80x77`, `fixed80x78`, `fixed80x79`, `fixed80x80`, `fixed88x0`, `fixed88x1`, `fixed88x2`, `fixed88x3`, `fixed88x4`, `fixed88x5`, `fixed88x6`, `fixed88x7`, `fixed88x8`, `fixed88x9`, `fixed88x10`, `fixed88x11`, `fixed88x12`, `fixed88x13`, `fixed88x14`, `fixed88x15`, `fixed88x16`, `fixed88x17`, `fixed88x18`, `fixed88x19`, `fixed88x20`, `fixed88x21`, `fixed88x22`, `fixed88x23`, `fixed88x24`, `fixed88x25`, `fixed88x26`, `fixed88x27`, `fixed88x28`, `fixed88x29`, `fixed88x30`, `fixed88x31`, `fixed88x32`, `fixed88x33`, `fixed88x34`, `fixed88x35`, `fixed88x36`, `fixed88x37`, `fixed88x38`, `fixed88x39`, `fixed88x40`, `fixed88x41`, `fixed88x42`, `fixed88x43`, `fixed88x44`, `fixed88x45`, `fixed88x46`, `fixed88x47`, `fixed88x48`, `fixed88x49`, `fixed88x50`, `fixed88x51`, `fixed88x52`, `fixed88x53`, `fixed88x54`, `fixed88x55`, `fixed88x56`, `fixed88x57`, `fixed88x58`, `fixed88x59`, `fixed88x60`, `fixed88x61`, `fixed88x62`, `fixed88x63`, `fixed88x64`, `fixed88x65`, `fixed88x66`, `fixed88x67`, `fixed88x68`, `fixed88x69`, `fixed88x70`, `fixed88x71`, `fixed88x72`, `fixed88x73`, `fixed88x74`, `fixed88x75`, `fixed88x76`, `fixed88x77`, `fixed88x78`, `fixed88x79`, `fixed88x80`, `fixed96x0`, `fixed96x1`, `fixed96x2`, `fixed96x3`, `fixed96x4`, `fixed96x5`, `fixed96x6`, `fixed96x7`, `fixed96x8`, `fixed96x9`, `fixed96x10`, `fixed96x11`, `fixed96x12`, `fixed96x13`, `fixed96x14`, `fixed96x15`, `fixed96x16`, `fixed96x17`, `fixed96x18`, `fixed96x19`, `fixed96x20`, `fixed96x21`, `fixed96x22`, `fixed96x23`, `fixed96x24`, `fixed96x25`, `fixed96x26`, `fixed96x27`, `fixed96x28`, `fixed96x29`, `fixed96x30`, `fixed96x31`, `fixed96x32`, `fixed96x33`, `fixed96x34`, `fixed96x35`, `fixed96x36`, `fixed96x37`, `fixed96x38`, `fixed96x39`, `fixed96x40`, `fixed96x41`, `fixed96x42`, `fixed96x43`, `fixed96x44`, `fixed96x45`, `fixed96x46`, `fixed96x47`, `fixed96x48`, `fixed96x49`, `fixed96x50`, `fixed96x51`, `fixed96x52`, `fixed96x53`, `fixed96x54`, `fixed96x55`, `fixed96x56`, `fixed96x57`, `fixed96x58`, `fixed96x59`, `fixed96x60`, `fixed96x61`, `fixed96x62`, `fixed96x63`, `fixed96x64`, `fixed96x65`, `fixed96x66`, `fixed96x67`, `fixed96x68`, `fixed96x69`, `fixed96x70`, `fixed96x71`, `fixed96x72`, `fixed96x73`, `fixed96x74`, `fixed96x75`, `fixed96x76`, `fixed96x77`, `fixed96x78`, `fixed96x79`, `fixed96x80`, `fixed104x0`, `fixed104x1`, `fixed104x2`, `fixed104x3`, `fixed104x4`, `fixed104x5`, `fixed104x6`, `fixed104x7`, `fixed104x8`, `fixed104x9`, `fixed104x10`, `fixed104x11`, `fixed104x12`, `fixed104x13`, `fixed104x14`, `fixed104x15`, `fixed104x16`, `fixed104x17`, `fixed104x18`, `fixed104x19`, `fixed104x20`, `fixed104x21`, `fixed104x22`, `fixed104x23`, `fixed104x24`, `fixed104x25`, `fixed104x26`, `fixed104x27`, `fixed104x28`, `fixed104x29`, `fixed104x30`, `fixed104x31`, `fixed104x32`, `fixed104x33`, `fixed104x34`, `fixed104x35`, `fixed104x36`, `fixed104x37`, `fixed104x38`, `fixed104x39`, `fixed104x40`, `fixed104x41`, `fixed104x42`, `fixed104x43`, `fixed104x44`, `fixed104x45`, `fixed104x46`, `fixed104x47`, `fixed104x48`, `fixed104x49`, `fixed104x50`, `fixed104x51`, `fixed104x52`, `fixed104x53`, `fixed104x54`, `fixed104x55`, `fixed104x56`, `fixed104x57`, `fixed104x58`, `fixed104x59`, `fixed104x60`, `fixed104x61`, `fixed104x62`, `fixed104x63`, `fixed104x64`, `fixed104x65`, `fixed104x66`, `fixed104x67`, `fixed104x68`, `fixed104x69`, `fixed104x70`, `fixed104x71`, `fixed104x72`, `fixed104x73`, `fixed104x74`, `fixed104x75`, `fixed104x76`, `fixed104x77`, `fixed104x78`, `fixed104x79`, `fixed104x80`, `fixed112x0`, `fixed112x1`, `fixed112x2`, `fixed112x3`, `fixed112x4`, `fixed112x5`, `fixed112x6`, `fixed112x7`, `fixed112x8`, `fixed112x9`, `fixed112x10`, `fixed112x11`, `fixed112x12`, `fixed112x13`, `fixed112x14`, `fixed112x15`, `fixed112x16`, `fixed112x17`, `fixed112x18`, `fixed112x19`, `fixed112x20`, `fixed112x21`, `fixed112x22`, `fixed112x23`, `fixed112x24`, `fixed112x25`, `fixed112x26`, `fixed112x27`, `fixed112x28`, `fixed112x29`, `fixed112x30`, `fixed112x31`, `fixed112x32`, `fixed112x33`, `fixed112x34`, `fixed112x35`, `fixed112x36`, `fixed112x37`, `fixed112x38`, `fixed112x39`, `fixed112x40`, `fixed112x41`, `fixed112x42`, `fixed112x43`, `fixed112x44`, `fixed112x45`, `fixed112x46`, `fixed112x47`, `fixed112x48`, `fixed112x49`, `fixed112x50`, `fixed112x51`, `fixed112x52`, `fixed112x53`, `fixed112x54`, `fixed112x55`, `fixed112x56`, `fixed112x57`, `fixed112x58`, `fixed112x59`, `fixed112x60`, `fixed112x61`, `fixed112x62`, `fixed112x63`, `fixed112x64`, `fixed112x65`, `fixed112x66`, `fixed112x67`, `fixed112x68`, `fixed112x69`, `fixed112x70`, `fixed112x71`, `fixed112x72`, `fixed112x73`, `fixed112x74`, `fixed112x75`, `fixed112x76`, `fixed112x77`, `fixed112x78`, `fixed112x79`, `fixed112x80`, `fixed120x0`, `fixed120x1`, `fixed120x2`, `fixed120x3`, `fixed120x4`, `fixed120x5`, `fixed120x6`, `fixed120x7`, `fixed120x8`, `fixed120x9`, `fixed120x10`, `fixed120x11`, `fixed120x12`, `fixed120x13`, `fixed120x14`, `fixed120x15`, `fixed120x16`, `fixed120x17`, `fixed120x18`, `fixed120x19`, `fixed120x20`, `fixed120x21`, `fixed120x22`, `fixed120x23`, `fixed120x24`, `fixed120x25`, `fixed120x26`, `fixed120x27`, `fixed120x28`, `fixed120x29`, `fixed120x30`, `fixed120x31`, `fixed120x32`, `fixed120x33`, `fixed120x34`, `fixed120x35`, `fixed120x36`, `fixed120x37`, `fixed120x38`, `fixed120x39`, `fixed120x40`, `fixed120x41`, `fixed120x42`, `fixed120x43`, `fixed120x44`, `fixed120x45`, `fixed120x46`, `fixed120x47`, `fixed120x48`, `fixed120x49`, `fixed120x50`, `fixed120x51`, `fixed120x52`, `fixed120x53`, `fixed120x54`, `fixed120x55`, `fixed120x56`, `fixed120x57`, `fixed120x58`, `fixed120x59`, `fixed120x60`, `fixed120x61`, `fixed120x62`, `fixed120x63`, `fixed120x64`, `fixed120x65`, `fixed120x66`, `fixed120x67`, `fixed120x68`, `fixed120x69`, `fixed120x70`, `fixed120x71`, `fixed120x72`, `fixed120x73`, `fixed120x74`, `fixed120x75`, `fixed120x76`, `fixed120x77`, `fixed120x78`, `fixed120x79`, `fixed120x80`, `fixed128x0`, `fixed128x1`, `fixed128x2`, `fixed128x3`, `fixed128x4`, `fixed128x5`, `fixed128x6`, `fixed128x7`, `fixed128x8`, `fixed128x9`, `fixed128x10`, `fixed128x11`, `fixed128x12`, `fixed128x13`, `fixed128x14`, `fixed128x15`, `fixed128x16`, `fixed128x17`, `fixed128x18`, `fixed128x19`, `fixed128x20`, `fixed128x21`, `fixed128x22`, `fixed128x23`, `fixed128x24`, `fixed128x25`, `fixed128x26`, `fixed128x27`, `fixed128x28`, `fixed128x29`, `fixed128x30`, `fixed128x31`, `fixed128x32`, `fixed128x33`, `fixed128x34`, `fixed128x35`, `fixed128x36`, `fixed128x37`, `fixed128x38`, `fixed128x39`, `fixed128x40`, `fixed128x41`, `fixed128x42`, `fixed128x43`, `fixed128x44`, `fixed128x45`, `fixed128x46`, `fixed128x47`, `fixed128x48`, `fixed128x49`, `fixed128x50`, `fixed128x51`, `fixed128x52`, `fixed128x53`, `fixed128x54`, `fixed128x55`, `fixed128x56`, `fixed128x57`, `fixed128x58`, `fixed128x59`, `fixed128x60`, `fixed128x61`, `fixed128x62`, `fixed128x63`, `fixed128x64`, `fixed128x65`, `fixed128x66`, `fixed128x67`, `fixed128x68`, `fixed128x69`, `fixed128x70`, `fixed128x71`, `fixed128x72`, `fixed128x73`, `fixed128x74`, `fixed128x75`, `fixed128x76`, `fixed128x77`, `fixed128x78`, `fixed128x79`, `fixed128x80`, `fixed136x0`, `fixed136x1`, `fixed136x2`, `fixed136x3`, `fixed136x4`, `fixed136x5`, `fixed136x6`, `fixed136x7`, `fixed136x8`, `fixed136x9`, `fixed136x10`, `fixed136x11`, `fixed136x12`, `fixed136x13`, `fixed136x14`, `fixed136x15`, `fixed136x16`, `fixed136x17`, `fixed136x18`, `fixed136x19`, `fixed136x20`, `fixed136x21`, `fixed136x22`, `fixed136x23`, `fixed136x24`, `fixed136x25`, `fixed136x26`, `fixed136x27`, `fixed136x28`, `fixed136x29`, `fixed136x30`, `fixed136x31`, `fixed136x32`, `fixed136x33`, `fixed136x34`, `fixed136x35`, `fixed136x36`, `fixed136x37`, `fixed136x38`, `fixed136x39`, `fixed136x40`, `fixed136x41`, `fixed136x42`, `fixed136x43`, `fixed136x44`, `fixed136x45`, `fixed136x46`, `fixed136x47`, `fixed136x48`, `fixed136x49`, `fixed136x50`, `fixed136x51`, `fixed136x52`, `fixed136x53`, `fixed136x54`, `fixed136x55`, `fixed136x56`, `fixed136x57`, `fixed136x58`, `fixed136x59`, `fixed136x60`, `fixed136x61`, `fixed136x62`, `fixed136x63`, `fixed136x64`, `fixed136x65`, `fixed136x66`, `fixed136x67`, `fixed136x68`, `fixed136x69`, `fixed136x70`, `fixed136x71`, `fixed136x72`, `fixed136x73`, `fixed136x74`, `fixed136x75`, `fixed136x76`, `fixed136x77`, `fixed136x78`, `fixed136x79`, `fixed136x80`, `fixed144x0`, `fixed144x1`, `fixed144x2`, `fixed144x3`, `fixed144x4`, `fixed144x5`, `fixed144x6`, `fixed144x7`, `fixed144x8`, `fixed144x9`, `fixed144x10`, `fixed144x11`, `fixed144x12`, `fixed144x13`, `fixed144x14`, `fixed144x15`, `fixed144x16`, `fixed144x17`, `fixed144x18`, `fixed144x19`, `fixed144x20`, `fixed144x21`, `fixed144x22`, `fixed144x23`, `fixed144x24`, `fixed144x25`, `fixed144x26`, `fixed144x27`, `fixed144x28`, `fixed144x29`, `fixed144x30`, `fixed144x31`, `fixed144x32`, `fixed144x33`, `fixed144x34`, `fixed144x35`, `fixed144x36`, `fixed144x37`, `fixed144x38`, `fixed144x39`, `fixed144x40`, `fixed144x41`, `fixed144x42`, `fixed144x43`, `fixed144x44`, `fixed144x45`, `fixed144x46`, `fixed144x47`, `fixed144x48`, `fixed144x49`, `fixed144x50`, `fixed144x51`, `fixed144x52`, `fixed144x53`, `fixed144x54`, `fixed144x55`, `fixed144x56`, `fixed144x57`, `fixed144x58`, `fixed144x59`, `fixed144x60`, `fixed144x61`, `fixed144x62`, `fixed144x63`, `fixed144x64`, `fixed144x65`, `fixed144x66`, `fixed144x67`, `fixed144x68`, `fixed144x69`, `fixed144x70`, `fixed144x71`, `fixed144x72`, `fixed144x73`, `fixed144x74`, `fixed144x75`, `fixed144x76`, `fixed144x77`, `fixed144x78`, `fixed144x79`, `fixed144x80`, `fixed152x0`, `fixed152x1`, `fixed152x2`, `fixed152x3`, `fixed152x4`, `fixed152x5`, `fixed152x6`, `fixed152x7`, `fixed152x8`, `fixed152x9`, `fixed152x10`, `fixed152x11`, `fixed152x12`, `fixed152x13`, `fixed152x14`, `fixed152x15`, `fixed152x16`, `fixed152x17`, `fixed152x18`, `fixed152x19`, `fixed152x20`, `fixed152x21`, `fixed152x22`, `fixed152x23`, `fixed152x24`, `fixed152x25`, `fixed152x26`, `fixed152x27`, `fixed152x28`, `fixed152x29`, `fixed152x30`, `fixed152x31`, `fixed152x32`, `fixed152x33`, `fixed152x34`, `fixed152x35`, `fixed152x36`, `fixed152x37`, `fixed152x38`, `fixed152x39`, `fixed152x40`, `fixed152x41`, `fixed152x42`, `fixed152x43`, `fixed152x44`, `fixed152x45`, `fixed152x46`, `fixed152x47`, `fixed152x48`, `fixed152x49`, `fixed152x50`, `fixed152x51`, `fixed152x52`, `fixed152x53`, `fixed152x54`, `fixed152x55`, `fixed152x56`, `fixed152x57`, `fixed152x58`, `fixed152x59`, `fixed152x60`, `fixed152x61`, `fixed152x62`, `fixed152x63`, `fixed152x64`, `fixed152x65`, `fixed152x66`, `fixed152x67`, `fixed152x68`, `fixed152x69`, `fixed152x70`, `fixed152x71`, `fixed152x72`, `fixed152x73`, `fixed152x74`, `fixed152x75`, `fixed152x76`, `fixed152x77`, `fixed152x78`, `fixed152x79`, `fixed152x80`, `fixed160x0`, `fixed160x1`, `fixed160x2`, `fixed160x3`, `fixed160x4`, `fixed160x5`, `fixed160x6`, `fixed160x7`, `fixed160x8`, `fixed160x9`, `fixed160x10`, `fixed160x11`, `fixed160x12`, `fixed160x13`, `fixed160x14`, `fixed160x15`, `fixed160x16`, `fixed160x17`, `fixed160x18`, `fixed160x19`, `fixed160x20`, `fixed160x21`, `fixed160x22`, `fixed160x23`, `fixed160x24`, `fixed160x25`, `fixed160x26`, `fixed160x27`, `fixed160x28`, `fixed160x29`, `fixed160x30`, `fixed160x31`, `fixed160x32`, `fixed160x33`, `fixed160x34`, `fixed160x35`, `fixed160x36`, `fixed160x37`, `fixed160x38`, `fixed160x39`, `fixed160x40`, `fixed160x41`, `fixed160x42`, `fixed160x43`, `fixed160x44`, `fixed160x45`, `fixed160x46`, `fixed160x47`, `fixed160x48`, `fixed160x49`, `fixed160x50`, `fixed160x51`, `fixed160x52`, `fixed160x53`, `fixed160x54`, `fixed160x55`, `fixed160x56`, `fixed160x57`, `fixed160x58`, `fixed160x59`, `fixed160x60`, `fixed160x61`, `fixed160x62`, `fixed160x63`, `fixed160x64`, `fixed160x65`, `fixed160x66`, `fixed160x67`, `fixed160x68`, `fixed160x69`, `fixed160x70`, `fixed160x71`, `fixed160x72`, `fixed160x73`, `fixed160x74`, `fixed160x75`, `fixed160x76`, `fixed160x77`, `fixed160x78`, `fixed160x79`, `fixed160x80`, `fixed168x0`, `fixed168x1`, `fixed168x2`, `fixed168x3`, `fixed168x4`, `fixed168x5`, `fixed168x6`, `fixed168x7`, `fixed168x8`, `fixed168x9`, `fixed168x10`, `fixed168x11`, `fixed168x12`, `fixed168x13`, `fixed168x14`, `fixed168x15`, `fixed168x16`, `fixed168x17`, `fixed168x18`, `fixed168x19`, `fixed168x20`, `fixed168x21`, `fixed168x22`, `fixed168x23`, `fixed168x24`, `fixed168x25`, `fixed168x26`, `fixed168x27`, `fixed168x28`, `fixed168x29`, `fixed168x30`, `fixed168x31`, `fixed168x32`, `fixed168x33`, `fixed168x34`, `fixed168x35`, `fixed168x36`, `fixed168x37`, `fixed168x38`, `fixed168x39`, `fixed168x40`, `fixed168x41`, `fixed168x42`, `fixed168x43`, `fixed168x44`, `fixed168x45`, `fixed168x46`, `fixed168x47`, `fixed168x48`, `fixed168x49`, `fixed168x50`, `fixed168x51`, `fixed168x52`, `fixed168x53`, `fixed168x54`, `fixed168x55`, `fixed168x56`, `fixed168x57`, `fixed168x58`, `fixed168x59`, `fixed168x60`, `fixed168x61`, `fixed168x62`, `fixed168x63`, `fixed168x64`, `fixed168x65`, `fixed168x66`, `fixed168x67`, `fixed168x68`, `fixed168x69`, `fixed168x70`, `fixed168x71`, `fixed168x72`, `fixed168x73`, `fixed168x74`, `fixed168x75`, `fixed168x76`, `fixed168x77`, `fixed168x78`, `fixed168x79`, `fixed168x80`, `fixed176x0`, `fixed176x1`, `fixed176x2`, `fixed176x3`, `fixed176x4`, `fixed176x5`, `fixed176x6`, `fixed176x7`, `fixed176x8`, `fixed176x9`, `fixed176x10`, `fixed176x11`, `fixed176x12`, `fixed176x13`, `fixed176x14`, `fixed176x15`, `fixed176x16`, `fixed176x17`, `fixed176x18`, `fixed176x19`, `fixed176x20`, `fixed176x21`, `fixed176x22`, `fixed176x23`, `fixed176x24`, `fixed176x25`, `fixed176x26`, `fixed176x27`, `fixed176x28`, `fixed176x29`, `fixed176x30`, `fixed176x31`, `fixed176x32`, `fixed176x33`, `fixed176x34`, `fixed176x35`, `fixed176x36`, `fixed176x37`, `fixed176x38`, `fixed176x39`, `fixed176x40`, `fixed176x41`, `fixed176x42`, `fixed176x43`, `fixed176x44`, `fixed176x45`, `fixed176x46`, `fixed176x47`, `fixed176x48`, `fixed176x49`, `fixed176x50`, `fixed176x51`, `fixed176x52`, `fixed176x53`, `fixed176x54`, `fixed176x55`, `fixed176x56`, `fixed176x57`, `fixed176x58`, `fixed176x59`, `fixed176x60`, `fixed176x61`, `fixed176x62`, `fixed176x63`, `fixed176x64`, `fixed176x65`, `fixed176x66`, `fixed176x67`, `fixed176x68`, `fixed176x69`, `fixed176x70`, `fixed176x71`, `fixed176x72`, `fixed176x73`, `fixed176x74`, `fixed176x75`, `fixed176x76`, `fixed176x77`, `fixed176x78`, `fixed176x79`, `fixed176x80`, `fixed184x0`, `fixed184x1`, `fixed184x2`, `fixed184x3`, `fixed184x4`, `fixed184x5`, `fixed184x6`, `fixed184x7`, `fixed184x8`, `fixed184x9`, `fixed184x10`, `fixed184x11`, `fixed184x12`, `fixed184x13`, `fixed184x14`, `fixed184x15`, `fixed184x16`, `fixed184x17`, `fixed184x18`, `fixed184x19`, `fixed184x20`, `fixed184x21`, `fixed184x22`, `fixed184x23`, `fixed184x24`, `fixed184x25`, `fixed184x26`, `fixed184x27`, `fixed184x28`, `fixed184x29`, `fixed184x30`, `fixed184x31`, `fixed184x32`, `fixed184x33`, `fixed184x34`, `fixed184x35`, `fixed184x36`, `fixed184x37`, `fixed184x38`, `fixed184x39`, `fixed184x40`, `fixed184x41`, `fixed184x42`, `fixed184x43`, `fixed184x44`, `fixed184x45`, `fixed184x46`, `fixed184x47`, `fixed184x48`, `fixed184x49`, `fixed184x50`, `fixed184x51`, `fixed184x52`, `fixed184x53`, `fixed184x54`, `fixed184x55`, `fixed184x56`, `fixed184x57`, `fixed184x58`, `fixed184x59`, `fixed184x60`, `fixed184x61`, `fixed184x62`, `fixed184x63`, `fixed184x64`, `fixed184x65`, `fixed184x66`, `fixed184x67`, `fixed184x68`, `fixed184x69`, `fixed184x70`, `fixed184x71`, `fixed184x72`, `fixed192x0`, `fixed192x1`, `fixed192x2`, `fixed192x3`, `fixed192x4`, `fixed192x5`, `fixed192x6`, `fixed192x7`, `fixed192x8`, `fixed192x9`, `fixed192x10`, `fixed192x11`, `fixed192x12`, `fixed192x13`, `fixed192x14`, `fixed192x15`, `fixed192x16`, `fixed192x17`, `fixed192x18`, `fixed192x19`, `fixed192x20`, `fixed192x21`, `fixed192x22`, `fixed192x23`, `fixed192x24`, `fixed192x25`, `fixed192x26`, `fixed192x27`, `fixed192x28`, `fixed192x29`, `fixed192x30`, `fixed192x31`, `fixed192x32`, `fixed192x33`, `fixed192x34`, `fixed192x35`, `fixed192x36`, `fixed192x37`, `fixed192x38`, `fixed192x39`, `fixed192x40`, `fixed192x41`, `fixed192x42`, `fixed192x43`, `fixed192x44`, `fixed192x45`, `fixed192x46`, `fixed192x47`, `fixed192x48`, `fixed192x49`, `fixed192x50`, `fixed192x51`, `fixed192x52`, `fixed192x53`, `fixed192x54`, `fixed192x55`, `fixed192x56`, `fixed192x57`, `fixed192x58`, `fixed192x59`, `fixed192x60`, `fixed192x61`, `fixed192x62`, `fixed192x63`, `fixed192x64`, `fixed200x0`, `fixed200x1`, `fixed200x2`, `fixed200x3`, `fixed200x4`, `fixed200x5`, `fixed200x6`, `fixed200x7`, `fixed200x8`, `fixed200x9`, `fixed200x10`, `fixed200x11`, `fixed200x12`, `fixed200x13`, `fixed200x14`, `fixed200x15`, `fixed200x16`, `fixed200x17`, `fixed200x18`, `fixed200x19`, `fixed200x20`, `fixed200x21`, `fixed200x22`, `fixed200x23`, `fixed200x24`, `fixed200x25`, `fixed200x26`, `fixed200x27`, `fixed200x28`, `fixed200x29`, `fixed200x30`, `fixed200x31`, `fixed200x32`, `fixed200x33`, `fixed200x34`, `fixed200x35`, `fixed200x36`, `fixed200x37`, `fixed200x38`, `fixed200x39`, `fixed200x40`, `fixed200x41`, `fixed200x42`, `fixed200x43`, `fixed200x44`, `fixed200x45`, `fixed200x46`, `fixed200x47`, `fixed200x48`, `fixed200x49`, `fixed200x50`, `fixed200x51`, `fixed200x52`, `fixed200x53`, `fixed200x54`, `fixed200x55`, `fixed200x56`, `fixed208x0`, `fixed208x1`, `fixed208x2`, `fixed208x3`, `fixed208x4`, `fixed208x5`, `fixed208x6`, `fixed208x7`, `fixed208x8`, `fixed208x9`, `fixed208x10`, `fixed208x11`, `fixed208x12`, `fixed208x13`, `fixed208x14`, `fixed208x15`, `fixed208x16`, `fixed208x17`, `fixed208x18`, `fixed208x19`, `fixed208x20`, `fixed208x21`, `fixed208x22`, `fixed208x23`, `fixed208x24`, `fixed208x25`, `fixed208x26`, `fixed208x27`, `fixed208x28`, `fixed208x29`, `fixed208x30`, `fixed208x31`, `fixed208x32`, `fixed208x33`, `fixed208x34`, `fixed208x35`, `fixed208x36`, `fixed208x37`, `fixed208x38`, `fixed208x39`, `fixed208x40`, `fixed208x41`, `fixed208x42`, `fixed208x43`, `fixed208x44`, `fixed208x45`, `fixed208x46`, `fixed208x47`, `fixed208x48`, `fixed216x0`, `fixed216x1`, `fixed216x2`, `fixed216x3`, `fixed216x4`, `fixed216x5`, `fixed216x6`, `fixed216x7`, `fixed216x8`, `fixed216x9`, `fixed216x10`, `fixed216x11`, `fixed216x12`, `fixed216x13`, `fixed216x14`, `fixed216x15`, `fixed216x16`, `fixed216x17`, `fixed216x18`, `fixed216x19`, `fixed216x20`, `fixed216x21`, `fixed216x22`, `fixed216x23`, `fixed216x24`, `fixed216x25`, `fixed216x26`, `fixed216x27`, `fixed216x28`, `fixed216x29`, `fixed216x30`, `fixed216x31`, `fixed216x32`, `fixed216x33`, `fixed216x34`, `fixed216x35`, `fixed216x36`, `fixed216x37`, `fixed216x38`, `fixed216x39`, `fixed216x40`, `fixed224x0`, `fixed224x1`, `fixed224x2`, `fixed224x3`, `fixed224x4`, `fixed224x5`, `fixed224x6`, `fixed224x7`, `fixed224x8`, `fixed224x9`, `fixed224x10`, `fixed224x11`, `fixed224x12`, `fixed224x13`, `fixed224x14`, `fixed224x15`, `fixed224x16`, `fixed224x17`, `fixed224x18`, `fixed224x19`, `fixed224x20`, `fixed224x21`, `fixed224x22`, `fixed224x23`, `fixed224x24`, `fixed224x25`, `fixed224x26`, `fixed224x27`, `fixed224x28`, `fixed224x29`, `fixed224x30`, `fixed224x31`, `fixed224x32`, `fixed232x0`, `fixed232x1`, `fixed232x2`, `fixed232x3`, `fixed232x4`, `fixed232x5`, `fixed232x6`, `fixed232x7`, `fixed232x8`, `fixed232x9`, `fixed232x10`, `fixed232x11`, `fixed232x12`, `fixed232x13`, `fixed232x14`, `fixed232x15`, `fixed232x16`, `fixed232x17`, `fixed232x18`, `fixed232x19`, `fixed232x20`, `fixed232x21`, `fixed232x22`, `fixed232x23`, `fixed232x24`, `fixed240x0`, `fixed240x1`, `fixed240x2`, `fixed240x3`, `fixed240x4`, `fixed240x5`, `fixed240x6`, `fixed240x7`, `fixed240x8`, `fixed240x9`, `fixed240x10`, `fixed240x11`, `fixed240x12`, `fixed240x13`, `fixed240x14`, `fixed240x15`, `fixed240x16`, `fixed248x0`, `fixed248x1`, `fixed248x2`, `fixed248x3`, `fixed248x4`, `fixed248x5`, `fixed248x6`, `fixed248x7`, `fixed248x8`, `fixed256x0`), KeywordType, nil},\n-\t\t\t{Words(``, `\\b`, `ufixed8x0`, `ufixed8x1`, `ufixed8x2`, `ufixed8x3`, `ufixed8x4`, `ufixed8x5`, `ufixed8x6`, `ufixed8x7`, `ufixed8x8`, `ufixed8x9`, `ufixed8x10`, `ufixed8x11`, `ufixed8x12`, `ufixed8x13`, `ufixed8x14`, `ufixed8x15`, `ufixed8x16`, `ufixed8x17`, `ufixed8x18`, `ufixed8x19`, `ufixed8x20`, `ufixed8x21`, `ufixed8x22`, `ufixed8x23`, `ufixed8x24`, `ufixed8x25`, `ufixed8x26`, `ufixed8x27`, `ufixed8x28`, `ufixed8x29`, `ufixed8x30`, `ufixed8x31`, `ufixed8x32`, `ufixed8x33`, `ufixed8x34`, `ufixed8x35`, `ufixed8x36`, `ufixed8x37`, `ufixed8x38`, `ufixed8x39`, `ufixed8x40`, `ufixed8x41`, `ufixed8x42`, `ufixed8x43`, `ufixed8x44`, `ufixed8x45`, `ufixed8x46`, `ufixed8x47`, `ufixed8x48`, `ufixed8x49`, `ufixed8x50`, `ufixed8x51`, `ufixed8x52`, `ufixed8x53`, `ufixed8x54`, `ufixed8x55`, `ufixed8x56`, `ufixed8x57`, `ufixed8x58`, `ufixed8x59`, `ufixed8x60`, `ufixed8x61`, `ufixed8x62`, `ufixed8x63`, `ufixed8x64`, `ufixed8x65`, `ufixed8x66`, `ufixed8x67`, `ufixed8x68`, `ufixed8x69`, `ufixed8x70`, `ufixed8x71`, `ufixed8x72`, `ufixed8x73`, `ufixed8x74`, `ufixed8x75`, `ufixed8x76`, `ufixed8x77`, `ufixed8x78`, `ufixed8x79`, `ufixed8x80`, `ufixed16x0`, `ufixed16x1`, `ufixed16x2`, `ufixed16x3`, `ufixed16x4`, `ufixed16x5`, `ufixed16x6`, `ufixed16x7`, `ufixed16x8`, `ufixed16x9`, `ufixed16x10`, `ufixed16x11`, `ufixed16x12`, `ufixed16x13`, `ufixed16x14`, `ufixed16x15`, `ufixed16x16`, `ufixed16x17`, `ufixed16x18`, `ufixed16x19`, `ufixed16x20`, `ufixed16x21`, `ufixed16x22`, `ufixed16x23`, `ufixed16x24`, `ufixed16x25`, `ufixed16x26`, `ufixed16x27`, `ufixed16x28`, `ufixed16x29`, `ufixed16x30`, `ufixed16x31`, `ufixed16x32`, `ufixed16x33`, `ufixed16x34`, `ufixed16x35`, `ufixed16x36`, `ufixed16x37`, `ufixed16x38`, `ufixed16x39`, `ufixed16x40`, `ufixed16x41`, `ufixed16x42`, `ufixed16x43`, `ufixed16x44`, `ufixed16x45`, `ufixed16x46`, `ufixed16x47`, `ufixed16x48`, `ufixed16x49`, `ufixed16x50`, `ufixed16x51`, `ufixed16x52`, `ufixed16x53`, `ufixed16x54`, `ufixed16x55`, `ufixed16x56`, `ufixed16x57`, `ufixed16x58`, `ufixed16x59`, `ufixed16x60`, `ufixed16x61`, `ufixed16x62`, `ufixed16x63`, `ufixed16x64`, `ufixed16x65`, `ufixed16x66`, `ufixed16x67`, `ufixed16x68`, `ufixed16x69`, `ufixed16x70`, `ufixed16x71`, `ufixed16x72`, `ufixed16x73`, `ufixed16x74`, `ufixed16x75`, `ufixed16x76`, `ufixed16x77`, `ufixed16x78`, `ufixed16x79`, `ufixed16x80`, `ufixed24x0`, `ufixed24x1`, `ufixed24x2`, `ufixed24x3`, `ufixed24x4`, `ufixed24x5`, `ufixed24x6`, `ufixed24x7`, `ufixed24x8`, `ufixed24x9`, `ufixed24x10`, `ufixed24x11`, `ufixed24x12`, `ufixed24x13`, `ufixed24x14`, `ufixed24x15`, `ufixed24x16`, `ufixed24x17`, `ufixed24x18`, `ufixed24x19`, `ufixed24x20`, `ufixed24x21`, `ufixed24x22`, `ufixed24x23`, `ufixed24x24`, `ufixed24x25`, `ufixed24x26`, `ufixed24x27`, `ufixed24x28`, `ufixed24x29`, `ufixed24x30`, `ufixed24x31`, `ufixed24x32`, `ufixed24x33`, `ufixed24x34`, `ufixed24x35`, `ufixed24x36`, `ufixed24x37`, `ufixed24x38`, `ufixed24x39`, `ufixed24x40`, `ufixed24x41`, `ufixed24x42`, `ufixed24x43`, `ufixed24x44`, `ufixed24x45`, `ufixed24x46`, `ufixed24x47`, `ufixed24x48`, `ufixed24x49`, `ufixed24x50`, `ufixed24x51`, `ufixed24x52`, `ufixed24x53`, `ufixed24x54`, `ufixed24x55`, `ufixed24x56`, `ufixed24x57`, `ufixed24x58`, `ufixed24x59`, `ufixed24x60`, `ufixed24x61`, `ufixed24x62`, `ufixed24x63`, `ufixed24x64`, `ufixed24x65`, `ufixed24x66`, `ufixed24x67`, `ufixed24x68`, `ufixed24x69`, `ufixed24x70`, `ufixed24x71`, `ufixed24x72`, `ufixed24x73`, `ufixed24x74`, `ufixed24x75`, `ufixed24x76`, `ufixed24x77`, `ufixed24x78`, `ufixed24x79`, `ufixed24x80`, `ufixed32x0`, `ufixed32x1`, `ufixed32x2`, `ufixed32x3`, `ufixed32x4`, `ufixed32x5`, `ufixed32x6`, `ufixed32x7`, `ufixed32x8`, `ufixed32x9`, `ufixed32x10`, `ufixed32x11`, `ufixed32x12`, `ufixed32x13`, `ufixed32x14`, `ufixed32x15`, `ufixed32x16`, `ufixed32x17`, `ufixed32x18`, `ufixed32x19`, `ufixed32x20`, `ufixed32x21`, `ufixed32x22`, `ufixed32x23`, `ufixed32x24`, `ufixed32x25`, `ufixed32x26`, `ufixed32x27`, `ufixed32x28`, `ufixed32x29`, `ufixed32x30`, `ufixed32x31`, `ufixed32x32`, `ufixed32x33`, `ufixed32x34`, `ufixed32x35`, `ufixed32x36`, `ufixed32x37`, `ufixed32x38`, `ufixed32x39`, `ufixed32x40`, `ufixed32x41`, `ufixed32x42`, `ufixed32x43`, `ufixed32x44`, `ufixed32x45`, `ufixed32x46`, `ufixed32x47`, `ufixed32x48`, `ufixed32x49`, `ufixed32x50`, `ufixed32x51`, `ufixed32x52`, `ufixed32x53`, `ufixed32x54`, `ufixed32x55`, `ufixed32x56`, `ufixed32x57`, `ufixed32x58`, `ufixed32x59`, `ufixed32x60`, `ufixed32x61`, `ufixed32x62`, `ufixed32x63`, `ufixed32x64`, `ufixed32x65`, `ufixed32x66`, `ufixed32x67`, `ufixed32x68`, `ufixed32x69`, `ufixed32x70`, `ufixed32x71`, `ufixed32x72`, `ufixed32x73`, `ufixed32x74`, `ufixed32x75`, `ufixed32x76`, `ufixed32x77`, `ufixed32x78`, `ufixed32x79`, `ufixed32x80`, `ufixed40x0`, `ufixed40x1`, `ufixed40x2`, `ufixed40x3`, `ufixed40x4`, `ufixed40x5`, `ufixed40x6`, `ufixed40x7`, `ufixed40x8`, `ufixed40x9`, `ufixed40x10`, `ufixed40x11`, `ufixed40x12`, `ufixed40x13`, `ufixed40x14`, `ufixed40x15`, `ufixed40x16`, `ufixed40x17`, `ufixed40x18`, `ufixed40x19`, `ufixed40x20`, `ufixed40x21`, `ufixed40x22`, `ufixed40x23`, `ufixed40x24`, `ufixed40x25`, `ufixed40x26`, `ufixed40x27`, `ufixed40x28`, `ufixed40x29`, `ufixed40x30`, `ufixed40x31`, `ufixed40x32`, `ufixed40x33`, `ufixed40x34`, `ufixed40x35`, `ufixed40x36`, `ufixed40x37`, `ufixed40x38`, `ufixed40x39`, `ufixed40x40`, `ufixed40x41`, `ufixed40x42`, `ufixed40x43`, `ufixed40x44`, `ufixed40x45`, `ufixed40x46`, `ufixed40x47`, `ufixed40x48`, `ufixed40x49`, `ufixed40x50`, `ufixed40x51`, `ufixed40x52`, `ufixed40x53`, `ufixed40x54`, `ufixed40x55`, `ufixed40x56`, `ufixed40x57`, `ufixed40x58`, `ufixed40x59`, `ufixed40x60`, `ufixed40x61`, `ufixed40x62`, `ufixed40x63`, `ufixed40x64`, `ufixed40x65`, `ufixed40x66`, `ufixed40x67`, `ufixed40x68`, `ufixed40x69`, `ufixed40x70`, `ufixed40x71`, `ufixed40x72`, `ufixed40x73`, `ufixed40x74`, `ufixed40x75`, `ufixed40x76`, `ufixed40x77`, `ufixed40x78`, `ufixed40x79`, `ufixed40x80`, `ufixed48x0`, `ufixed48x1`, `ufixed48x2`, `ufixed48x3`, `ufixed48x4`, `ufixed48x5`, `ufixed48x6`, `ufixed48x7`, `ufixed48x8`, `ufixed48x9`, `ufixed48x10`, `ufixed48x11`, `ufixed48x12`, `ufixed48x13`, `ufixed48x14`, `ufixed48x15`, `ufixed48x16`, `ufixed48x17`, `ufixed48x18`, `ufixed48x19`, `ufixed48x20`, `ufixed48x21`, `ufixed48x22`, `ufixed48x23`, `ufixed48x24`, `ufixed48x25`, `ufixed48x26`, `ufixed48x27`, `ufixed48x28`, `ufixed48x29`, `ufixed48x30`, `ufixed48x31`, `ufixed48x32`, `ufixed48x33`, `ufixed48x34`, `ufixed48x35`, `ufixed48x36`, `ufixed48x37`, `ufixed48x38`, `ufixed48x39`, `ufixed48x40`, `ufixed48x41`, `ufixed48x42`, `ufixed48x43`, `ufixed48x44`, `ufixed48x45`, `ufixed48x46`, `ufixed48x47`, `ufixed48x48`, `ufixed48x49`, `ufixed48x50`, `ufixed48x51`, `ufixed48x52`, `ufixed48x53`, `ufixed48x54`, `ufixed48x55`, `ufixed48x56`, `ufixed48x57`, `ufixed48x58`, `ufixed48x59`, `ufixed48x60`, `ufixed48x61`, `ufixed48x62`, `ufixed48x63`, `ufixed48x64`, `ufixed48x65`, `ufixed48x66`, `ufixed48x67`, `ufixed48x68`, `ufixed48x69`, `ufixed48x70`, `ufixed48x71`, `ufixed48x72`, `ufixed48x73`, `ufixed48x74`, `ufixed48x75`, `ufixed48x76`, `ufixed48x77`, `ufixed48x78`, `ufixed48x79`, `ufixed48x80`, `ufixed56x0`, `ufixed56x1`, `ufixed56x2`, `ufixed56x3`, `ufixed56x4`, `ufixed56x5`, `ufixed56x6`, `ufixed56x7`, `ufixed56x8`, `ufixed56x9`, `ufixed56x10`, `ufixed56x11`, `ufixed56x12`, `ufixed56x13`, `ufixed56x14`, `ufixed56x15`, `ufixed56x16`, `ufixed56x17`, `ufixed56x18`, `ufixed56x19`, `ufixed56x20`, `ufixed56x21`, `ufixed56x22`, `ufixed56x23`, `ufixed56x24`, `ufixed56x25`, `ufixed56x26`, `ufixed56x27`, `ufixed56x28`, `ufixed56x29`, `ufixed56x30`, `ufixed56x31`, `ufixed56x32`, `ufixed56x33`, `ufixed56x34`, `ufixed56x35`, `ufixed56x36`, `ufixed56x37`, `ufixed56x38`, `ufixed56x39`, `ufixed56x40`, `ufixed56x41`, `ufixed56x42`, `ufixed56x43`, `ufixed56x44`, `ufixed56x45`, `ufixed56x46`, `ufixed56x47`, `ufixed56x48`, `ufixed56x49`, `ufixed56x50`, `ufixed56x51`, `ufixed56x52`, `ufixed56x53`, `ufixed56x54`, `ufixed56x55`, `ufixed56x56`, `ufixed56x57`, `ufixed56x58`, `ufixed56x59`, `ufixed56x60`, `ufixed56x61`, `ufixed56x62`, `ufixed56x63`, `ufixed56x64`, `ufixed56x65`, `ufixed56x66`, `ufixed56x67`, `ufixed56x68`, `ufixed56x69`, `ufixed56x70`, `ufixed56x71`, `ufixed56x72`, `ufixed56x73`, `ufixed56x74`, `ufixed56x75`, `ufixed56x76`, `ufixed56x77`, `ufixed56x78`, `ufixed56x79`, `ufixed56x80`, `ufixed64x0`, `ufixed64x1`, `ufixed64x2`, `ufixed64x3`, `ufixed64x4`, `ufixed64x5`, `ufixed64x6`, `ufixed64x7`, `ufixed64x8`, `ufixed64x9`, `ufixed64x10`, `ufixed64x11`, `ufixed64x12`, `ufixed64x13`, `ufixed64x14`, `ufixed64x15`, `ufixed64x16`, `ufixed64x17`, `ufixed64x18`, `ufixed64x19`, `ufixed64x20`, `ufixed64x21`, `ufixed64x22`, `ufixed64x23`, `ufixed64x24`, `ufixed64x25`, `ufixed64x26`, `ufixed64x27`, `ufixed64x28`, `ufixed64x29`, `ufixed64x30`, `ufixed64x31`, `ufixed64x32`, `ufixed64x33`, `ufixed64x34`, `ufixed64x35`, `ufixed64x36`, `ufixed64x37`, `ufixed64x38`, `ufixed64x39`, `ufixed64x40`, `ufixed64x41`, `ufixed64x42`, `ufixed64x43`, `ufixed64x44`, `ufixed64x45`, `ufixed64x46`, `ufixed64x47`, `ufixed64x48`, `ufixed64x49`, `ufixed64x50`, `ufixed64x51`, `ufixed64x52`, `ufixed64x53`, `ufixed64x54`, `ufixed64x55`, `ufixed64x56`, `ufixed64x57`, `ufixed64x58`, `ufixed64x59`, `ufixed64x60`, `ufixed64x61`, `ufixed64x62`, `ufixed64x63`, `ufixed64x64`, `ufixed64x65`, `ufixed64x66`, `ufixed64x67`, `ufixed64x68`, `ufixed64x69`, `ufixed64x70`, `ufixed64x71`, `ufixed64x72`, `ufixed64x73`, `ufixed64x74`, `ufixed64x75`, `ufixed64x76`, `ufixed64x77`, `ufixed64x78`, `ufixed64x79`, `ufixed64x80`, `ufixed72x0`, `ufixed72x1`, `ufixed72x2`, `ufixed72x3`, `ufixed72x4`, `ufixed72x5`, `ufixed72x6`, `ufixed72x7`, `ufixed72x8`, `ufixed72x9`, `ufixed72x10`, `ufixed72x11`, `ufixed72x12`, `ufixed72x13`, `ufixed72x14`, `ufixed72x15`, `ufixed72x16`, `ufixed72x17`, `ufixed72x18`, `ufixed72x19`, `ufixed72x20`, `ufixed72x21`, `ufixed72x22`, `ufixed72x23`, `ufixed72x24`, `ufixed72x25`, `ufixed72x26`, `ufixed72x27`, `ufixed72x28`, `ufixed72x29`, `ufixed72x30`, `ufixed72x31`, `ufixed72x32`, `ufixed72x33`, `ufixed72x34`, `ufixed72x35`, `ufixed72x36`, `ufixed72x37`, `ufixed72x38`, `ufixed72x39`, `ufixed72x40`, `ufixed72x41`, `ufixed72x42`, `ufixed72x43`, `ufixed72x44`, `ufixed72x45`, `ufixed72x46`, `ufixed72x47`, `ufixed72x48`, `ufixed72x49`, `ufixed72x50`, `ufixed72x51`, `ufixed72x52`, `ufixed72x53`, `ufixed72x54`, `ufixed72x55`, `ufixed72x56`, `ufixed72x57`, `ufixed72x58`, `ufixed72x59`, `ufixed72x60`, `ufixed72x61`, `ufixed72x62`, `ufixed72x63`, `ufixed72x64`, `ufixed72x65`, `ufixed72x66`, `ufixed72x67`, `ufixed72x68`, `ufixed72x69`, `ufixed72x70`, `ufixed72x71`, `ufixed72x72`, `ufixed72x73`, `ufixed72x74`, `ufixed72x75`, `ufixed72x76`, `ufixed72x77`, `ufixed72x78`, `ufixed72x79`, `ufixed72x80`, `ufixed80x0`, `ufixed80x1`, `ufixed80x2`, `ufixed80x3`, `ufixed80x4`, `ufixed80x5`, `ufixed80x6`, `ufixed80x7`, `ufixed80x8`, `ufixed80x9`, `ufixed80x10`, `ufixed80x11`, `ufixed80x12`, `ufixed80x13`, `ufixed80x14`, `ufixed80x15`, `ufixed80x16`, `ufixed80x17`, `ufixed80x18`, `ufixed80x19`, `ufixed80x20`, `ufixed80x21`, `ufixed80x22`, `ufixed80x23`, `ufixed80x24`, `ufixed80x25`, `ufixed80x26`, `ufixed80x27`, `ufixed80x28`, `ufixed80x29`, `ufixed80x30`, `ufixed80x31`, `ufixed80x32`, `ufixed80x33`, `ufixed80x34`, `ufixed80x35`, `ufixed80x36`, `ufixed80x37`, `ufixed80x38`, `ufixed80x39`, `ufixed80x40`, `ufixed80x41`, `ufixed80x42`, `ufixed80x43`, `ufixed80x44`, `ufixed80x45`, `ufixed80x46`, `ufixed80x47`, `ufixed80x48`, `ufixed80x49`, `ufixed80x50`, `ufixed80x51`, `ufixed80x52`, `ufixed80x53`, `ufixed80x54`, `ufixed80x55`, `ufixed80x56`, `ufixed80x57`, `ufixed80x58`, `ufixed80x59`, `ufixed80x60`, `ufixed80x61`, `ufixed80x62`, `ufixed80x63`, `ufixed80x64`, `ufixed80x65`, `ufixed80x66`, `ufixed80x67`, `ufixed80x68`, `ufixed80x69`, `ufixed80x70`, `ufixed80x71`, `ufixed80x72`, `ufixed80x73`, `ufixed80x74`, `ufixed80x75`, `ufixed80x76`, `ufixed80x77`, `ufixed80x78`, `ufixed80x79`, `ufixed80x80`, `ufixed88x0`, `ufixed88x1`, `ufixed88x2`, `ufixed88x3`, `ufixed88x4`, `ufixed88x5`, `ufixed88x6`, `ufixed88x7`, `ufixed88x8`, `ufixed88x9`, `ufixed88x10`, `ufixed88x11`, `ufixed88x12`, `ufixed88x13`, `ufixed88x14`, `ufixed88x15`, `ufixed88x16`, `ufixed88x17`, `ufixed88x18`, `ufixed88x19`, `ufixed88x20`, `ufixed88x21`, `ufixed88x22`, `ufixed88x23`, `ufixed88x24`, `ufixed88x25`, `ufixed88x26`, `ufixed88x27`, `ufixed88x28`, `ufixed88x29`, `ufixed88x30`, `ufixed88x31`, `ufixed88x32`, `ufixed88x33`, `ufixed88x34`, `ufixed88x35`, `ufixed88x36`, `ufixed88x37`, `ufixed88x38`, `ufixed88x39`, `ufixed88x40`, `ufixed88x41`, `ufixed88x42`, `ufixed88x43`, `ufixed88x44`, `ufixed88x45`, `ufixed88x46`, `ufixed88x47`, `ufixed88x48`, `ufixed88x49`, `ufixed88x50`, `ufixed88x51`, `ufixed88x52`, `ufixed88x53`, `ufixed88x54`, `ufixed88x55`, `ufixed88x56`, `ufixed88x57`, `ufixed88x58`, `ufixed88x59`, `ufixed88x60`, `ufixed88x61`, `ufixed88x62`, `ufixed88x63`, `ufixed88x64`, `ufixed88x65`, `ufixed88x66`, `ufixed88x67`, `ufixed88x68`, `ufixed88x69`, `ufixed88x70`, `ufixed88x71`, `ufixed88x72`, `ufixed88x73`, `ufixed88x74`, `ufixed88x75`, `ufixed88x76`, `ufixed88x77`, `ufixed88x78`, `ufixed88x79`, `ufixed88x80`, `ufixed96x0`, `ufixed96x1`, `ufixed96x2`, `ufixed96x3`, `ufixed96x4`, `ufixed96x5`, `ufixed96x6`, `ufixed96x7`, `ufixed96x8`, `ufixed96x9`, `ufixed96x10`, `ufixed96x11`, `ufixed96x12`, `ufixed96x13`, `ufixed96x14`, `ufixed96x15`, `ufixed96x16`, `ufixed96x17`, `ufixed96x18`, `ufixed96x19`, `ufixed96x20`, `ufixed96x21`, `ufixed96x22`, `ufixed96x23`, `ufixed96x24`, `ufixed96x25`, `ufixed96x26`, `ufixed96x27`, `ufixed96x28`, `ufixed96x29`, `ufixed96x30`, `ufixed96x31`, `ufixed96x32`, `ufixed96x33`, `ufixed96x34`, `ufixed96x35`, `ufixed96x36`, `ufixed96x37`, `ufixed96x38`, `ufixed96x39`, `ufixed96x40`, `ufixed96x41`, `ufixed96x42`, `ufixed96x43`, `ufixed96x44`, `ufixed96x45`, `ufixed96x46`, `ufixed96x47`, `ufixed96x48`, `ufixed96x49`, `ufixed96x50`, `ufixed96x51`, `ufixed96x52`, `ufixed96x53`, `ufixed96x54`, `ufixed96x55`, `ufixed96x56`, `ufixed96x57`, `ufixed96x58`, `ufixed96x59`, `ufixed96x60`, `ufixed96x61`, `ufixed96x62`, `ufixed96x63`, `ufixed96x64`, `ufixed96x65`, `ufixed96x66`, `ufixed96x67`, `ufixed96x68`, `ufixed96x69`, `ufixed96x70`, `ufixed96x71`, `ufixed96x72`, `ufixed96x73`, `ufixed96x74`, `ufixed96x75`, `ufixed96x76`, `ufixed96x77`, `ufixed96x78`, `ufixed96x79`, `ufixed96x80`, `ufixed104x0`, `ufixed104x1`, `ufixed104x2`, `ufixed104x3`, `ufixed104x4`, `ufixed104x5`, `ufixed104x6`, `ufixed104x7`, `ufixed104x8`, `ufixed104x9`, `ufixed104x10`, `ufixed104x11`, `ufixed104x12`, `ufixed104x13`, `ufixed104x14`, `ufixed104x15`, `ufixed104x16`, `ufixed104x17`, `ufixed104x18`, `ufixed104x19`, `ufixed104x20`, `ufixed104x21`, `ufixed104x22`, `ufixed104x23`, `ufixed104x24`, `ufixed104x25`, `ufixed104x26`, `ufixed104x27`, `ufixed104x28`, `ufixed104x29`, `ufixed104x30`, `ufixed104x31`, `ufixed104x32`, `ufixed104x33`, `ufixed104x34`, `ufixed104x35`, `ufixed104x36`, `ufixed104x37`, `ufixed104x38`, `ufixed104x39`, `ufixed104x40`, `ufixed104x41`, `ufixed104x42`, `ufixed104x43`, `ufixed104x44`, `ufixed104x45`, `ufixed104x46`, `ufixed104x47`, `ufixed104x48`, `ufixed104x49`, `ufixed104x50`, `ufixed104x51`, `ufixed104x52`, `ufixed104x53`, `ufixed104x54`, `ufixed104x55`, `ufixed104x56`, `ufixed104x57`, `ufixed104x58`, `ufixed104x59`, `ufixed104x60`, `ufixed104x61`, `ufixed104x62`, `ufixed104x63`, `ufixed104x64`, `ufixed104x65`, `ufixed104x66`, `ufixed104x67`, `ufixed104x68`, `ufixed104x69`, `ufixed104x70`, `ufixed104x71`, `ufixed104x72`, `ufixed104x73`, `ufixed104x74`, `ufixed104x75`, `ufixed104x76`, `ufixed104x77`, `ufixed104x78`, `ufixed104x79`, `ufixed104x80`, `ufixed112x0`, `ufixed112x1`, `ufixed112x2`, `ufixed112x3`, `ufixed112x4`, `ufixed112x5`, `ufixed112x6`, `ufixed112x7`, `ufixed112x8`, `ufixed112x9`, `ufixed112x10`, `ufixed112x11`, `ufixed112x12`, `ufixed112x13`, `ufixed112x14`, `ufixed112x15`, `ufixed112x16`, `ufixed112x17`, `ufixed112x18`, `ufixed112x19`, `ufixed112x20`, `ufixed112x21`, `ufixed112x22`, `ufixed112x23`, `ufixed112x24`, `ufixed112x25`, `ufixed112x26`, `ufixed112x27`, `ufixed112x28`, `ufixed112x29`, `ufixed112x30`, `ufixed112x31`, `ufixed112x32`, `ufixed112x33`, `ufixed112x34`, `ufixed112x35`, `ufixed112x36`, `ufixed112x37`, `ufixed112x38`, `ufixed112x39`, `ufixed112x40`, `ufixed112x41`, `ufixed112x42`, `ufixed112x43`, `ufixed112x44`, `ufixed112x45`, `ufixed112x46`, `ufixed112x47`, `ufixed112x48`, `ufixed112x49`, `ufixed112x50`, `ufixed112x51`, `ufixed112x52`, `ufixed112x53`, `ufixed112x54`, `ufixed112x55`, `ufixed112x56`, `ufixed112x57`, `ufixed112x58`, `ufixed112x59`, `ufixed112x60`, `ufixed112x61`, `ufixed112x62`, `ufixed112x63`, `ufixed112x64`, `ufixed112x65`, `ufixed112x66`, `ufixed112x67`, `ufixed112x68`, `ufixed112x69`, `ufixed112x70`, `ufixed112x71`, `ufixed112x72`, `ufixed112x73`, `ufixed112x74`, `ufixed112x75`, `ufixed112x76`, `ufixed112x77`, `ufixed112x78`, `ufixed112x79`, `ufixed112x80`, `ufixed120x0`, `ufixed120x1`, `ufixed120x2`, `ufixed120x3`, `ufixed120x4`, `ufixed120x5`, `ufixed120x6`, `ufixed120x7`, `ufixed120x8`, `ufixed120x9`, `ufixed120x10`, `ufixed120x11`, `ufixed120x12`, `ufixed120x13`, `ufixed120x14`, `ufixed120x15`, `ufixed120x16`, `ufixed120x17`, `ufixed120x18`, `ufixed120x19`, `ufixed120x20`, `ufixed120x21`, `ufixed120x22`, `ufixed120x23`, `ufixed120x24`, `ufixed120x25`, `ufixed120x26`, `ufixed120x27`, `ufixed120x28`, `ufixed120x29`, `ufixed120x30`, `ufixed120x31`, `ufixed120x32`, `ufixed120x33`, `ufixed120x34`, `ufixed120x35`, `ufixed120x36`, `ufixed120x37`, `ufixed120x38`, `ufixed120x39`, `ufixed120x40`, `ufixed120x41`, `ufixed120x42`, `ufixed120x43`, `ufixed120x44`, `ufixed120x45`, `ufixed120x46`, `ufixed120x47`, `ufixed120x48`, `ufixed120x49`, `ufixed120x50`, `ufixed120x51`, `ufixed120x52`, `ufixed120x53`, `ufixed120x54`, `ufixed120x55`, `ufixed120x56`, `ufixed120x57`, `ufixed120x58`, `ufixed120x59`, `ufixed120x60`, `ufixed120x61`, `ufixed120x62`, `ufixed120x63`, `ufixed120x64`, `ufixed120x65`, `ufixed120x66`, `ufixed120x67`, `ufixed120x68`, `ufixed120x69`, `ufixed120x70`, `ufixed120x71`, `ufixed120x72`, `ufixed120x73`, `ufixed120x74`, `ufixed120x75`, `ufixed120x76`, `ufixed120x77`, `ufixed120x78`, `ufixed120x79`, `ufixed120x80`, `ufixed128x0`, `ufixed128x1`, `ufixed128x2`, `ufixed128x3`, `ufixed128x4`, `ufixed128x5`, `ufixed128x6`, `ufixed128x7`, `ufixed128x8`, `ufixed128x9`, `ufixed128x10`, `ufixed128x11`, `ufixed128x12`, `ufixed128x13`, `ufixed128x14`, `ufixed128x15`, `ufixed128x16`, `ufixed128x17`, `ufixed128x18`, `ufixed128x19`, `ufixed128x20`, `ufixed128x21`, `ufixed128x22`, `ufixed128x23`, `ufixed128x24`, `ufixed128x25`, `ufixed128x26`, `ufixed128x27`, `ufixed128x28`, `ufixed128x29`, `ufixed128x30`, `ufixed128x31`, `ufixed128x32`, `ufixed128x33`, `ufixed128x34`, `ufixed128x35`, `ufixed128x36`, `ufixed128x37`, `ufixed128x38`, `ufixed128x39`, `ufixed128x40`, `ufixed128x41`, `ufixed128x42`, `ufixed128x43`, `ufixed128x44`, `ufixed128x45`, `ufixed128x46`, `ufixed128x47`, `ufixed128x48`, `ufixed128x49`, `ufixed128x50`, `ufixed128x51`, `ufixed128x52`, `ufixed128x53`, `ufixed128x54`, `ufixed128x55`, `ufixed128x56`, `ufixed128x57`, `ufixed128x58`, `ufixed128x59`, `ufixed128x60`, `ufixed128x61`, `ufixed128x62`, `ufixed128x63`, `ufixed128x64`, `ufixed128x65`, `ufixed128x66`, `ufixed128x67`, `ufixed128x68`, `ufixed128x69`, `ufixed128x70`, `ufixed128x71`, `ufixed128x72`, `ufixed128x73`, `ufixed128x74`, `ufixed128x75`, `ufixed128x76`, `ufixed128x77`, `ufixed128x78`, `ufixed128x79`, `ufixed128x80`, `ufixed136x0`, `ufixed136x1`, `ufixed136x2`, `ufixed136x3`, `ufixed136x4`, `ufixed136x5`, `ufixed136x6`, `ufixed136x7`, `ufixed136x8`, `ufixed136x9`, `ufixed136x10`, `ufixed136x11`, `ufixed136x12`, `ufixed136x13`, `ufixed136x14`, `ufixed136x15`, `ufixed136x16`, `ufixed136x17`, `ufixed136x18`, `ufixed136x19`, `ufixed136x20`, `ufixed136x21`, `ufixed136x22`, `ufixed136x23`, `ufixed136x24`, `ufixed136x25`, `ufixed136x26`, `ufixed136x27`, `ufixed136x28`, `ufixed136x29`, `ufixed136x30`, `ufixed136x31`, `ufixed136x32`, `ufixed136x33`, `ufixed136x34`, `ufixed136x35`, `ufixed136x36`, `ufixed136x37`, `ufixed136x38`, `ufixed136x39`, `ufixed136x40`, `ufixed136x41`, `ufixed136x42`, `ufixed136x43`, `ufixed136x44`, `ufixed136x45`, `ufixed136x46`, `ufixed136x47`, `ufixed136x48`, `ufixed136x49`, `ufixed136x50`, `ufixed136x51`, `ufixed136x52`, `ufixed136x53`, `ufixed136x54`, `ufixed136x55`, `ufixed136x56`, `ufixed136x57`, `ufixed136x58`, `ufixed136x59`, `ufixed136x60`, `ufixed136x61`, `ufixed136x62`, `ufixed136x63`, `ufixed136x64`, `ufixed136x65`, `ufixed136x66`, `ufixed136x67`, `ufixed136x68`, `ufixed136x69`, `ufixed136x70`, `ufixed136x71`, `ufixed136x72`, `ufixed136x73`, `ufixed136x74`, `ufixed136x75`, `ufixed136x76`, `ufixed136x77`, `ufixed136x78`, `ufixed136x79`, `ufixed136x80`, `ufixed144x0`, `ufixed144x1`, `ufixed144x2`, `ufixed144x3`, `ufixed144x4`, `ufixed144x5`, `ufixed144x6`, `ufixed144x7`, `ufixed144x8`, `ufixed144x9`, `ufixed144x10`, `ufixed144x11`, `ufixed144x12`, `ufixed144x13`, `ufixed144x14`, `ufixed144x15`, `ufixed144x16`, `ufixed144x17`, `ufixed144x18`, `ufixed144x19`, `ufixed144x20`, `ufixed144x21`, `ufixed144x22`, `ufixed144x23`, `ufixed144x24`, `ufixed144x25`, `ufixed144x26`, `ufixed144x27`, `ufixed144x28`, `ufixed144x29`, `ufixed144x30`, `ufixed144x31`, `ufixed144x32`, `ufixed144x33`, `ufixed144x34`, `ufixed144x35`, `ufixed144x36`, `ufixed144x37`, `ufixed144x38`, `ufixed144x39`, `ufixed144x40`, `ufixed144x41`, `ufixed144x42`, `ufixed144x43`, `ufixed144x44`, `ufixed144x45`, `ufixed144x46`, `ufixed144x47`, `ufixed144x48`, `ufixed144x49`, `ufixed144x50`, `ufixed144x51`, `ufixed144x52`, `ufixed144x53`, `ufixed144x54`, `ufixed144x55`, `ufixed144x56`, `ufixed144x57`, `ufixed144x58`, `ufixed144x59`, `ufixed144x60`, `ufixed144x61`, `ufixed144x62`, `ufixed144x63`, `ufixed144x64`, `ufixed144x65`, `ufixed144x66`, `ufixed144x67`, `ufixed144x68`, `ufixed144x69`, `ufixed144x70`, `ufixed144x71`, `ufixed144x72`, `ufixed144x73`, `ufixed144x74`, `ufixed144x75`, `ufixed144x76`, `ufixed144x77`, `ufixed144x78`, `ufixed144x79`, `ufixed144x80`, `ufixed152x0`, `ufixed152x1`, `ufixed152x2`, `ufixed152x3`, `ufixed152x4`, `ufixed152x5`, `ufixed152x6`, `ufixed152x7`, `ufixed152x8`, `ufixed152x9`, `ufixed152x10`, `ufixed152x11`, `ufixed152x12`, `ufixed152x13`, `ufixed152x14`, `ufixed152x15`, `ufixed152x16`, `ufixed152x17`, `ufixed152x18`, `ufixed152x19`, `ufixed152x20`, `ufixed152x21`, `ufixed152x22`, `ufixed152x23`, `ufixed152x24`, `ufixed152x25`, `ufixed152x26`, `ufixed152x27`, `ufixed152x28`, `ufixed152x29`, `ufixed152x30`, `ufixed152x31`, `ufixed152x32`, `ufixed152x33`, `ufixed152x34`, `ufixed152x35`, `ufixed152x36`, `ufixed152x37`, `ufixed152x38`, `ufixed152x39`, `ufixed152x40`, `ufixed152x41`, `ufixed152x42`, `ufixed152x43`, `ufixed152x44`, `ufixed152x45`, `ufixed152x46`, `ufixed152x47`, `ufixed152x48`, `ufixed152x49`, `ufixed152x50`, `ufixed152x51`, `ufixed152x52`, `ufixed152x53`, `ufixed152x54`, `ufixed152x55`, `ufixed152x56`, `ufixed152x57`, `ufixed152x58`, `ufixed152x59`, `ufixed152x60`, `ufixed152x61`, `ufixed152x62`, `ufixed152x63`, `ufixed152x64`, `ufixed152x65`, `ufixed152x66`, `ufixed152x67`, `ufixed152x68`, `ufixed152x69`, `ufixed152x70`, `ufixed152x71`, `ufixed152x72`, `ufixed152x73`, `ufixed152x74`, `ufixed152x75`, `ufixed152x76`, `ufixed152x77`, `ufixed152x78`, `ufixed152x79`, `ufixed152x80`, `ufixed160x0`, `ufixed160x1`, `ufixed160x2`, `ufixed160x3`, `ufixed160x4`, `ufixed160x5`, `ufixed160x6`, `ufixed160x7`, `ufixed160x8`, `ufixed160x9`, `ufixed160x10`, `ufixed160x11`, `ufixed160x12`, `ufixed160x13`, `ufixed160x14`, `ufixed160x15`, `ufixed160x16`, `ufixed160x17`, `ufixed160x18`, `ufixed160x19`, `ufixed160x20`, `ufixed160x21`, `ufixed160x22`, `ufixed160x23`, `ufixed160x24`, `ufixed160x25`, `ufixed160x26`, `ufixed160x27`, `ufixed160x28`, `ufixed160x29`, `ufixed160x30`, `ufixed160x31`, `ufixed160x32`, `ufixed160x33`, `ufixed160x34`, `ufixed160x35`, `ufixed160x36`, `ufixed160x37`, `ufixed160x38`, `ufixed160x39`, `ufixed160x40`, `ufixed160x41`, `ufixed160x42`, `ufixed160x43`, `ufixed160x44`, `ufixed160x45`, `ufixed160x46`, `ufixed160x47`, `ufixed160x48`, `ufixed160x49`, `ufixed160x50`, `ufixed160x51`, `ufixed160x52`, `ufixed160x53`, `ufixed160x54`, `ufixed160x55`, `ufixed160x56`, `ufixed160x57`, `ufixed160x58`, `ufixed160x59`, `ufixed160x60`, `ufixed160x61`, `ufixed160x62`, `ufixed160x63`, `ufixed160x64`, `ufixed160x65`, `ufixed160x66`, `ufixed160x67`, `ufixed160x68`, `ufixed160x69`, `ufixed160x70`, `ufixed160x71`, `ufixed160x72`, `ufixed160x73`, `ufixed160x74`, `ufixed160x75`, `ufixed160x76`, `ufixed160x77`, `ufixed160x78`, `ufixed160x79`, `ufixed160x80`, `ufixed168x0`, `ufixed168x1`, `ufixed168x2`, `ufixed168x3`, `ufixed168x4`, `ufixed168x5`, `ufixed168x6`, `ufixed168x7`, `ufixed168x8`, `ufixed168x9`, `ufixed168x10`, `ufixed168x11`, `ufixed168x12`, `ufixed168x13`, `ufixed168x14`, `ufixed168x15`, `ufixed168x16`, `ufixed168x17`, `ufixed168x18`, `ufixed168x19`, `ufixed168x20`, `ufixed168x21`, `ufixed168x22`, `ufixed168x23`, `ufixed168x24`, `ufixed168x25`, `ufixed168x26`, `ufixed168x27`, `ufixed168x28`, `ufixed168x29`, `ufixed168x30`, `ufixed168x31`, `ufixed168x32`, `ufixed168x33`, `ufixed168x34`, `ufixed168x35`, `ufixed168x36`, `ufixed168x37`, `ufixed168x38`, `ufixed168x39`, `ufixed168x40`, `ufixed168x41`, `ufixed168x42`, `ufixed168x43`, `ufixed168x44`, `ufixed168x45`, `ufixed168x46`, `ufixed168x47`, `ufixed168x48`, `ufixed168x49`, `ufixed168x50`, `ufixed168x51`, `ufixed168x52`, `ufixed168x53`, `ufixed168x54`, `ufixed168x55`, `ufixed168x56`, `ufixed168x57`, `ufixed168x58`, `ufixed168x59`, `ufixed168x60`, `ufixed168x61`, `ufixed168x62`, `ufixed168x63`, `ufixed168x64`, `ufixed168x65`, `ufixed168x66`, `ufixed168x67`, `ufixed168x68`, `ufixed168x69`, `ufixed168x70`, `ufixed168x71`, `ufixed168x72`, `ufixed168x73`, `ufixed168x74`, `ufixed168x75`, `ufixed168x76`, `ufixed168x77`, `ufixed168x78`, `ufixed168x79`, `ufixed168x80`, `ufixed176x0`, `ufixed176x1`, `ufixed176x2`, `ufixed176x3`, `ufixed176x4`, `ufixed176x5`, `ufixed176x6`, `ufixed176x7`, `ufixed176x8`, `ufixed176x9`, `ufixed176x10`, `ufixed176x11`, `ufixed176x12`, `ufixed176x13`, `ufixed176x14`, `ufixed176x15`, `ufixed176x16`, `ufixed176x17`, `ufixed176x18`, `ufixed176x19`, `ufixed176x20`, `ufixed176x21`, `ufixed176x22`, `ufixed176x23`, `ufixed176x24`, `ufixed176x25`, `ufixed176x26`, `ufixed176x27`, `ufixed176x28`, `ufixed176x29`, `ufixed176x30`, `ufixed176x31`, `ufixed176x32`, `ufixed176x33`, `ufixed176x34`, `ufixed176x35`, `ufixed176x36`, `ufixed176x37`, `ufixed176x38`, `ufixed176x39`, `ufixed176x40`, `ufixed176x41`, `ufixed176x42`, `ufixed176x43`, `ufixed176x44`, `ufixed176x45`, `ufixed176x46`, `ufixed176x47`, `ufixed176x48`, `ufixed176x49`, `ufixed176x50`, `ufixed176x51`, `ufixed176x52`, `ufixed176x53`, `ufixed176x54`, `ufixed176x55`, `ufixed176x56`, `ufixed176x57`, `ufixed176x58`, `ufixed176x59`, `ufixed176x60`, `ufixed176x61`, `ufixed176x62`, `ufixed176x63`, `ufixed176x64`, `ufixed176x65`, `ufixed176x66`, `ufixed176x67`, `ufixed176x68`, `ufixed176x69`, `ufixed176x70`, `ufixed176x71`, `ufixed176x72`, `ufixed176x73`, `ufixed176x74`, `ufixed176x75`, `ufixed176x76`, `ufixed176x77`, `ufixed176x78`, `ufixed176x79`, `ufixed176x80`, `ufixed184x0`, `ufixed184x1`, `ufixed184x2`, `ufixed184x3`, `ufixed184x4`, `ufixed184x5`, `ufixed184x6`, `ufixed184x7`, `ufixed184x8`, `ufixed184x9`, `ufixed184x10`, `ufixed184x11`, `ufixed184x12`, `ufixed184x13`, `ufixed184x14`, `ufixed184x15`, `ufixed184x16`, `ufixed184x17`, `ufixed184x18`, `ufixed184x19`, `ufixed184x20`, `ufixed184x21`, `ufixed184x22`, `ufixed184x23`, `ufixed184x24`, `ufixed184x25`, `ufixed184x26`, `ufixed184x27`, `ufixed184x28`, `ufixed184x29`, `ufixed184x30`, `ufixed184x31`, `ufixed184x32`, `ufixed184x33`, `ufixed184x34`, `ufixed184x35`, `ufixed184x36`, `ufixed184x37`, `ufixed184x38`, `ufixed184x39`, `ufixed184x40`, `ufixed184x41`, `ufixed184x42`, `ufixed184x43`, `ufixed184x44`, `ufixed184x45`, `ufixed184x46`, `ufixed184x47`, `ufixed184x48`, `ufixed184x49`, `ufixed184x50`, `ufixed184x51`, `ufixed184x52`, `ufixed184x53`, `ufixed184x54`, `ufixed184x55`, `ufixed184x56`, `ufixed184x57`, `ufixed184x58`, `ufixed184x59`, `ufixed184x60`, `ufixed184x61`, `ufixed184x62`, `ufixed184x63`, `ufixed184x64`, `ufixed184x65`, `ufixed184x66`, `ufixed184x67`, `ufixed184x68`, `ufixed184x69`, `ufixed184x70`, `ufixed184x71`, `ufixed184x72`, `ufixed192x0`, `ufixed192x1`, `ufixed192x2`, `ufixed192x3`, `ufixed192x4`, `ufixed192x5`, `ufixed192x6`, `ufixed192x7`, `ufixed192x8`, `ufixed192x9`, `ufixed192x10`, `ufixed192x11`, `ufixed192x12`, `ufixed192x13`, `ufixed192x14`, `ufixed192x15`, `ufixed192x16`, `ufixed192x17`, `ufixed192x18`, `ufixed192x19`, `ufixed192x20`, `ufixed192x21`, `ufixed192x22`, `ufixed192x23`, `ufixed192x24`, `ufixed192x25`, `ufixed192x26`, `ufixed192x27`, `ufixed192x28`, `ufixed192x29`, `ufixed192x30`, `ufixed192x31`, `ufixed192x32`, `ufixed192x33`, `ufixed192x34`, `ufixed192x35`, `ufixed192x36`, `ufixed192x37`, `ufixed192x38`, `ufixed192x39`, `ufixed192x40`, `ufixed192x41`, `ufixed192x42`, `ufixed192x43`, `ufixed192x44`, `ufixed192x45`, `ufixed192x46`, `ufixed192x47`, `ufixed192x48`, `ufixed192x49`, `ufixed192x50`, `ufixed192x51`, `ufixed192x52`, `ufixed192x53`, `ufixed192x54`, `ufixed192x55`, `ufixed192x56`, `ufixed192x57`, `ufixed192x58`, `ufixed192x59`, `ufixed192x60`, `ufixed192x61`, `ufixed192x62`, `ufixed192x63`, `ufixed192x64`, `ufixed200x0`, `ufixed200x1`, `ufixed200x2`, `ufixed200x3`, `ufixed200x4`, `ufixed200x5`, `ufixed200x6`, `ufixed200x7`, `ufixed200x8`, `ufixed200x9`, `ufixed200x10`, `ufixed200x11`, `ufixed200x12`, `ufixed200x13`, `ufixed200x14`, `ufixed200x15`, `ufixed200x16`, `ufixed200x17`, `ufixed200x18`, `ufixed200x19`, `ufixed200x20`, `ufixed200x21`, `ufixed200x22`, `ufixed200x23`, `ufixed200x24`, `ufixed200x25`, `ufixed200x26`, `ufixed200x27`, `ufixed200x28`, `ufixed200x29`, `ufixed200x30`, `ufixed200x31`, `ufixed200x32`, `ufixed200x33`, `ufixed200x34`, `ufixed200x35`, `ufixed200x36`, `ufixed200x37`, `ufixed200x38`, `ufixed200x39`, `ufixed200x40`, `ufixed200x41`, `ufixed200x42`, `ufixed200x43`, `ufixed200x44`, `ufixed200x45`, `ufixed200x46`, `ufixed200x47`, `ufixed200x48`, `ufixed200x49`, `ufixed200x50`, `ufixed200x51`, `ufixed200x52`, `ufixed200x53`, `ufixed200x54`, `ufixed200x55`, `ufixed200x56`, `ufixed208x0`, `ufixed208x1`, `ufixed208x2`, `ufixed208x3`, `ufixed208x4`, `ufixed208x5`, `ufixed208x6`, `ufixed208x7`, `ufixed208x8`, `ufixed208x9`, `ufixed208x10`, `ufixed208x11`, `ufixed208x12`, `ufixed208x13`, `ufixed208x14`, `ufixed208x15`, `ufixed208x16`, `ufixed208x17`, `ufixed208x18`, `ufixed208x19`, `ufixed208x20`, `ufixed208x21`, `ufixed208x22`, `ufixed208x23`, `ufixed208x24`, `ufixed208x25`, `ufixed208x26`, `ufixed208x27`, `ufixed208x28`, `ufixed208x29`, `ufixed208x30`, `ufixed208x31`, `ufixed208x32`, `ufixed208x33`, `ufixed208x34`, `ufixed208x35`, `ufixed208x36`, `ufixed208x37`, `ufixed208x38`, `ufixed208x39`, `ufixed208x40`, `ufixed208x41`, `ufixed208x42`, `ufixed208x43`, `ufixed208x44`, `ufixed208x45`, `ufixed208x46`, `ufixed208x47`, `ufixed208x48`, `ufixed216x0`, `ufixed216x1`, `ufixed216x2`, `ufixed216x3`, `ufixed216x4`, `ufixed216x5`, `ufixed216x6`, `ufixed216x7`, `ufixed216x8`, `ufixed216x9`, `ufixed216x10`, `ufixed216x11`, `ufixed216x12`, `ufixed216x13`, `ufixed216x14`, `ufixed216x15`, `ufixed216x16`, `ufixed216x17`, `ufixed216x18`, `ufixed216x19`, `ufixed216x20`, `ufixed216x21`, `ufixed216x22`, `ufixed216x23`, `ufixed216x24`, `ufixed216x25`, `ufixed216x26`, `ufixed216x27`, `ufixed216x28`, `ufixed216x29`, `ufixed216x30`, `ufixed216x31`, `ufixed216x32`, `ufixed216x33`, `ufixed216x34`, `ufixed216x35`, `ufixed216x36`, `ufixed216x37`, `ufixed216x38`, `ufixed216x39`, `ufixed216x40`, `ufixed224x0`, `ufixed224x1`, `ufixed224x2`, `ufixed224x3`, `ufixed224x4`, `ufixed224x5`, `ufixed224x6`, `ufixed224x7`, `ufixed224x8`, `ufixed224x9`, `ufixed224x10`, `ufixed224x11`, `ufixed224x12`, `ufixed224x13`, `ufixed224x14`, `ufixed224x15`, `ufixed224x16`, `ufixed224x17`, `ufixed224x18`, `ufixed224x19`, `ufixed224x20`, `ufixed224x21`, `ufixed224x22`, `ufixed224x23`, `ufixed224x24`, `ufixed224x25`, `ufixed224x26`, `ufixed224x27`, `ufixed224x28`, `ufixed224x29`, `ufixed224x30`, `ufixed224x31`, `ufixed224x32`, `ufixed232x0`, `ufixed232x1`, `ufixed232x2`, `ufixed232x3`, `ufixed232x4`, `ufixed232x5`, `ufixed232x6`, `ufixed232x7`, `ufixed232x8`, `ufixed232x9`, `ufixed232x10`, `ufixed232x11`, `ufixed232x12`, `ufixed232x13`, `ufixed232x14`, `ufixed232x15`, `ufixed232x16`, `ufixed232x17`, `ufixed232x18`, `ufixed232x19`, `ufixed232x20`, `ufixed232x21`, `ufixed232x22`, `ufixed232x23`, `ufixed232x24`, `ufixed240x0`, `ufixed240x1`, `ufixed240x2`, `ufixed240x3`, `ufixed240x4`, `ufixed240x5`, `ufixed240x6`, `ufixed240x7`, `ufixed240x8`, `ufixed240x9`, `ufixed240x10`, `ufixed240x11`, `ufixed240x12`, `ufixed240x13`, `ufixed240x14`, `ufixed240x15`, `ufixed240x16`, `ufixed248x0`, `ufixed248x1`, `ufixed248x2`, `ufixed248x3`, `ufixed248x4`, `ufixed248x5`, `ufixed248x6`, `ufixed248x7`, `ufixed248x8`, `ufixed256x0`), KeywordType, nil},\n-\t\t},\n-\t\t\"numbers\": {\n-\t\t\t{`0[xX][0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t},\n-\t\t\"string-parse-common\": {\n-\t\t\t{`\\\\(u[0-9a-fA-F]{4}|x..|[^x])`, LiteralStringEscape, nil},\n-\t\t\t{`[^\\\\\"\\'\\n]+`, LiteralString, nil},\n-\t\t\t{`\\\\\\n`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralString, nil},\n-\t\t},\n-\t\t\"string-parse-double\": {\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`'`, LiteralString, nil},\n-\t\t},\n-\t\t\"string-parse-single\": {\n-\t\t\t{`'`, LiteralString, Pop(1)},\n-\t\t\t{`\"`, LiteralString, nil},\n-\t\t},\n-\t\t\"strings\": {\n-\t\t\t{`hex'[0-9a-fA-F]+'`, LiteralString, nil},\n-\t\t\t{`hex\"[0-9a-fA-F]+\"`, LiteralString, nil},\n-\t\t\t{`\"`, LiteralString, Combined(\"string-parse-common\", \"string-parse-double\")},\n-\t\t\t{`'`, LiteralString, Combined(\"string-parse-common\", \"string-parse-single\")},\n-\t\t},\n-\t\t\"whitespace\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\tInclude(\"comments\"),\n-\t\t\tInclude(\"keywords-types\"),\n-\t\t\tInclude(\"keywords-other\"),\n-\t\t\tInclude(\"numbers\"),\n-\t\t\tInclude(\"strings\"),\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`\\+\\+|--|\\*\\*|\\?|:|~|&&|\\|\\||=>|==?|!=?|(<<|>>>?|[-<>+*%&|^/])=?`, Operator, nil},\n-\t\t\t{`[{(\\[;,]`, Punctuation, nil},\n-\t\t\t{`[})\\].]`, Punctuation, nil},\n-\t\t\t{`(abi|block|msg|tx)\\b`, NameBuiltin, nil},\n-\t\t\t{`(?!abi\\.)(decode|encode|encodePacked|encodeWithSelector|encodeWithSignature|encodeWithSelector)\\b`, NameBuiltin, nil},\n-\t\t\t{`(?!block\\.)(chainid|coinbase|difficulty|gaslimit|number|timestamp)\\b`, NameBuiltin, nil},\n-\t\t\t{`(?!msg\\.)(data|gas|sender|value)\\b`, NameBuiltin, nil},\n-\t\t\t{`(?!tx\\.)(gasprice|origin)\\b`, NameBuiltin, nil},\n-\t\t\t{`(type)(\\()([a-zA-Z_]\\w*)(\\))`, ByGroups(NameBuiltin, Punctuation, NameClass, Punctuation), nil},\n-\t\t\t{`(?!type\\([a-zA-Z_]\\w*\\)\\.)(creationCode|interfaceId|max|min|name|runtimeCode)\\b`, NameBuiltin, nil},\n-\t\t\t{`(now|this|super|gasleft)\\b`, NameBuiltin, nil},\n-\t\t\t{`(selfdestruct|suicide)\\b`, NameBuiltin, nil},\n-\t\t\t{`(?!0x[0-9a-fA-F]+\\.)(balance|code|codehash|send|transfer)\\b`, NameBuiltin, nil},\n-\t\t\t{`(assert|revert|require)\\b`, NameBuiltin, nil},\n-\t\t\t{`(call|callcode|delegatecall)\\b`, NameBuiltin, nil},\n-\t\t\t{`selector\\b`, NameBuiltin, nil},\n-\t\t\t{`(addmod|blockhash|ecrecover|keccak256|mulmod|ripemd160|sha256|sha3)\\b`, NameBuiltin, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "3f56f9c03bea8189573a992d11a751edf00b421c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/sparql.go",
      "status": "removed",
      "additions": 0,
      "deletions": 73,
      "changes": 73,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsparql.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsparql.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsparql.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,73 +0,0 @@\n-package s\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Sparql lexer.\n-var Sparql = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"SPARQL\",\n-\t\tAliases:   []string{\"sparql\"},\n-\t\tFilenames: []string{\"*.rq\", \"*.sparql\"},\n-\t\tMimeTypes: []string{\"application/sparql-query\"},\n-\t},\n-\tsparqlRules,\n-))\n-\n-func sparqlRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`((?i)select|construct|describe|ask|where|filter|group\\s+by|minus|distinct|reduced|from\\s+named|from|order\\s+by|desc|asc|limit|offset|bindings|load|clear|drop|create|add|move|copy|insert\\s+data|delete\\s+data|delete\\s+where|delete|insert|using\\s+named|using|graph|default|named|all|optional|service|silent|bind|union|not\\s+in|in|as|having|to|prefix|base)\\b`, Keyword, nil},\n-\t\t\t{`(a)\\b`, Keyword, nil},\n-\t\t\t{\"(<(?:[^<>\\\"{}|^`\\\\\\\\\\\\x00-\\\\x20])*>)\", NameLabel, nil},\n-\t\t\t{`(_:[_\\p{L}\\p{N}](?:[-_.\\p{L}\\p{N}]*[-_\\p{L}\\p{N}])?)`, NameLabel, nil},\n-\t\t\t{`[?$][_\\p{L}\\p{N}]+`, NameVariable, nil},\n-\t\t\t{`([\\p{L}][-_.\\p{L}\\p{N}]*)?(\\:)((?:[_:\\p{L}\\p{N}]|(?:%[0-9A-Fa-f][0-9A-Fa-f])|(?:\\\\[ _~.\\-!$&\"()*+,;=/?#@%]))(?:(?:[-_:.\\p{L}\\p{N}]|(?:%[0-9A-Fa-f][0-9A-Fa-f])|(?:\\\\[ _~.\\-!$&\"()*+,;=/?#@%]))*(?:[-_:\\p{L}\\p{N}]|(?:%[0-9A-Fa-f][0-9A-Fa-f])|(?:\\\\[ _~.\\-!$&\"()*+,;=/?#@%])))?)?`, ByGroups(NameNamespace, Punctuation, NameTag), nil},\n-\t\t\t{`((?i)str|lang|langmatches|datatype|bound|iri|uri|bnode|rand|abs|ceil|floor|round|concat|strlen|ucase|lcase|encode_for_uri|contains|strstarts|strends|strbefore|strafter|year|month|day|hours|minutes|seconds|timezone|tz|now|md5|sha1|sha256|sha384|sha512|coalesce|if|strlang|strdt|sameterm|isiri|isuri|isblank|isliteral|isnumeric|regex|substr|replace|exists|not\\s+exists|count|sum|min|max|avg|sample|group_concat|separator)\\b`, NameFunction, nil},\n-\t\t\t{`(true|false)`, KeywordConstant, nil},\n-\t\t\t{`[+\\-]?(\\d+\\.\\d*[eE][+-]?\\d+|\\.?\\d+[eE][+-]?\\d+)`, LiteralNumberFloat, nil},\n-\t\t\t{`[+\\-]?(\\d+\\.\\d*|\\.\\d+)`, LiteralNumberFloat, nil},\n-\t\t\t{`[+\\-]?\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`(\\|\\||&&|=|\\*|\\-|\\+|/|!=|<=|>=|!|<|>)`, Operator, nil},\n-\t\t\t{`[(){}.;,:^\\[\\]]`, Punctuation, nil},\n-\t\t\t{`#[^\\n]*`, Comment, nil},\n-\t\t\t{`\"\"\"`, LiteralString, Push(\"triple-double-quoted-string\")},\n-\t\t\t{`\"`, LiteralString, Push(\"single-double-quoted-string\")},\n-\t\t\t{`'''`, LiteralString, Push(\"triple-single-quoted-string\")},\n-\t\t\t{`'`, LiteralString, Push(\"single-single-quoted-string\")},\n-\t\t},\n-\t\t\"triple-double-quoted-string\": {\n-\t\t\t{`\"\"\"`, LiteralString, Push(\"end-of-string\")},\n-\t\t\t{`[^\\\\]+`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralString, Push(\"string-escape\")},\n-\t\t},\n-\t\t\"single-double-quoted-string\": {\n-\t\t\t{`\"`, LiteralString, Push(\"end-of-string\")},\n-\t\t\t{`[^\"\\\\\\n]+`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralString, Push(\"string-escape\")},\n-\t\t},\n-\t\t\"triple-single-quoted-string\": {\n-\t\t\t{`'''`, LiteralString, Push(\"end-of-string\")},\n-\t\t\t{`[^\\\\]+`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralStringEscape, Push(\"string-escape\")},\n-\t\t},\n-\t\t\"single-single-quoted-string\": {\n-\t\t\t{`'`, LiteralString, Push(\"end-of-string\")},\n-\t\t\t{`[^'\\\\\\n]+`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralString, Push(\"string-escape\")},\n-\t\t},\n-\t\t\"string-escape\": {\n-\t\t\t{`u[0-9A-Fa-f]{4}`, LiteralStringEscape, Pop(1)},\n-\t\t\t{`U[0-9A-Fa-f]{8}`, LiteralStringEscape, Pop(1)},\n-\t\t\t{`.`, LiteralStringEscape, Pop(1)},\n-\t\t},\n-\t\t\"end-of-string\": {\n-\t\t\t{`(@)([a-zA-Z]+(?:-[a-zA-Z0-9]+)*)`, ByGroups(Operator, NameFunction), Pop(2)},\n-\t\t\t{`\\^\\^`, Operator, Pop(2)},\n-\t\t\tDefault(Pop(2)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "fb8c8edf1bd418f307603d9b9635431d4e0f69c8",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/sql.go",
      "status": "removed",
      "additions": 0,
      "deletions": 53,
      "changes": 53,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsql.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsql.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsql.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,53 +0,0 @@\n-package s\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// SQL lexer.\n-var SQL = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"SQL\",\n-\t\tAliases:         []string{\"sql\"},\n-\t\tFilenames:       []string{\"*.sql\"},\n-\t\tMimeTypes:       []string{\"text/x-sql\"},\n-\t\tNotMultiline:    true,\n-\t\tCaseInsensitive: true,\n-\t},\n-\tsqlRules,\n-))\n-\n-func sqlRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t\t{`--.*\\n?`, CommentSingle, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"multiline-comments\")},\n-\t\t\t{`'`, LiteralStringSingle, Push(\"string\")},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"double-string\")},\n-\t\t\t{Words(``, `\\b`, `ABORT`, `ABS`, `ABSOLUTE`, `ACCESS`, `ADA`, `ADD`, `ADMIN`, `AFTER`, `AGGREGATE`, `ALIAS`, `ALL`, `ALLOCATE`, `ALTER`, `ANALYSE`, `ANALYZE`, `AND`, `ANY`, `ARE`, `AS`, `ASC`, `ASENSITIVE`, `ASSERTION`, `ASSIGNMENT`, `ASYMMETRIC`, `AT`, `ATOMIC`, `AUTHORIZATION`, `AVG`, `BACKWARD`, `BEFORE`, `BEGIN`, `BETWEEN`, `BITVAR`, `BIT_LENGTH`, `BOTH`, `BREADTH`, `BY`, `C`, `CACHE`, `CALL`, `CALLED`, `CARDINALITY`, `CASCADE`, `CASCADED`, `CASE`, `CAST`, `CATALOG`, `CATALOG_NAME`, `CHAIN`, `CHARACTERISTICS`, `CHARACTER_LENGTH`, `CHARACTER_SET_CATALOG`, `CHARACTER_SET_NAME`, `CHARACTER_SET_SCHEMA`, `CHAR_LENGTH`, `CHECK`, `CHECKED`, `CHECKPOINT`, `CLASS`, `CLASS_ORIGIN`, `CLOB`, `CLOSE`, `CLUSTER`, `COALSECE`, `COBOL`, `COLLATE`, `COLLATION`, `COLLATION_CATALOG`, `COLLATION_NAME`, `COLLATION_SCHEMA`, `COLUMN`, `COLUMN_NAME`, `COMMAND_FUNCTION`, `COMMAND_FUNCTION_CODE`, `COMMENT`, `COMMIT`, `COMMITTED`, `COMPLETION`, `CONDITION_NUMBER`, `CONNECT`, `CONNECTION`, `CONNECTION_NAME`, `CONSTRAINT`, `CONSTRAINTS`, `CONSTRAINT_CATALOG`, `CONSTRAINT_NAME`, `CONSTRAINT_SCHEMA`, `CONSTRUCTOR`, `CONTAINS`, `CONTINUE`, `CONVERSION`, `CONVERT`, `COPY`, `CORRESPONTING`, `COUNT`, `CREATE`, `CREATEDB`, `CREATEUSER`, `CROSS`, `CUBE`, `CURRENT`, `CURRENT_DATE`, `CURRENT_PATH`, `CURRENT_ROLE`, `CURRENT_TIME`, `CURRENT_TIMESTAMP`, `CURRENT_USER`, `CURSOR`, `CURSOR_NAME`, `CYCLE`, `DATA`, `DATABASE`, `DATETIME_INTERVAL_CODE`, `DATETIME_INTERVAL_PRECISION`, `DAY`, `DEALLOCATE`, `DECLARE`, `DEFAULT`, `DEFAULTS`, `DEFERRABLE`, `DEFERRED`, `DEFINED`, `DEFINER`, `DELETE`, `DELIMITER`, `DELIMITERS`, `DEREF`, `DESC`, `DESCRIBE`, `DESCRIPTOR`, `DESTROY`, `DESTRUCTOR`, `DETERMINISTIC`, `DIAGNOSTICS`, `DICTIONARY`, `DISCONNECT`, `DISPATCH`, `DISTINCT`, `DO`, `DOMAIN`, `DROP`, `DYNAMIC`, `DYNAMIC_FUNCTION`, `DYNAMIC_FUNCTION_CODE`, `EACH`, `ELSE`, `ELSIF`, `ENCODING`, `ENCRYPTED`, `END`, `END-EXEC`, `EQUALS`, `ESCAPE`, `EVERY`, `EXCEPTION`, `EXCEPT`, `EXCLUDING`, `EXCLUSIVE`, `EXEC`, `EXECUTE`, `EXISTING`, `EXISTS`, `EXPLAIN`, `EXTERNAL`, `EXTRACT`, `FALSE`, `FETCH`, `FINAL`, `FIRST`, `FOR`, `FORCE`, `FOREIGN`, `FORTRAN`, `FORWARD`, `FOUND`, `FREE`, `FREEZE`, `FROM`, `FULL`, `FUNCTION`, `G`, `GENERAL`, `GENERATED`, `GET`, `GLOBAL`, `GO`, `GOTO`, `GRANT`, `GRANTED`, `GROUP`, `GROUPING`, `HANDLER`, `HAVING`, `HIERARCHY`, `HOLD`, `HOST`, `IDENTITY`, `IF`, `IGNORE`, `ILIKE`, `IMMEDIATE`, `IMMUTABLE`, `IMPLEMENTATION`, `IMPLICIT`, `IN`, `INCLUDING`, `INCREMENT`, `INDEX`, `INDITCATOR`, `INFIX`, `INHERITS`, `INITIALIZE`, `INITIALLY`, `INNER`, `INOUT`, `INPUT`, `INSENSITIVE`, `INSERT`, `INSTANTIABLE`, `INSTEAD`, `INTERSECT`, `INTO`, `INVOKER`, `IS`, `ISNULL`, `ISOLATION`, `ITERATE`, `JOIN`, `KEY`, `KEY_MEMBER`, `KEY_TYPE`, `LANCOMPILER`, `LANGUAGE`, `LARGE`, `LAST`, `LATERAL`, `LEADING`, `LEFT`, `LENGTH`, `LESS`, `LEVEL`, `LIKE`, `LIMIT`, `LISTEN`, `LOAD`, `LOCAL`, `LOCALTIME`, `LOCALTIMESTAMP`, `LOCATION`, `LOCATOR`, `LOCK`, `LOWER`, `MAP`, `MATCH`, `MAX`, `MAXVALUE`, `MESSAGE_LENGTH`, `MESSAGE_OCTET_LENGTH`, `MESSAGE_TEXT`, `METHOD`, `MIN`, `MINUTE`, `MINVALUE`, `MOD`, `MODE`, `MODIFIES`, `MODIFY`, `MONTH`, `MORE`, `MOVE`, `MUMPS`, `NAMES`, `NATIONAL`, `NATURAL`, `NCHAR`, `NCLOB`, `NEW`, `NEXT`, `NO`, `NOCREATEDB`, `NOCREATEUSER`, `NONE`, `NOT`, `NOTHING`, `NOTIFY`, `NOTNULL`, `NULL`, `NULLABLE`, `NULLIF`, `OBJECT`, `OCTET_LENGTH`, `OF`, `OFF`, `OFFSET`, `OIDS`, `OLD`, `ON`, `ONLY`, `OPEN`, `OPERATION`, `OPERATOR`, `OPTION`, `OPTIONS`, `OR`, `ORDER`, `ORDINALITY`, `OUT`, `OUTER`, `OUTPUT`, `OVERLAPS`, `OVERLAY`, `OVERRIDING`, `OWNER`, `PAD`, `PARAMETER`, `PARAMETERS`, `PARAMETER_MODE`, `PARAMATER_NAME`, `PARAMATER_ORDINAL_POSITION`, `PARAMETER_SPECIFIC_CATALOG`, `PARAMETER_SPECIFIC_NAME`, `PARAMATER_SPECIFIC_SCHEMA`, `PARTIAL`, `PASCAL`, `PENDANT`, `PLACING`, `PLI`, `POSITION`, `POSTFIX`, `PRECISION`, `PREFIX`, `PREORDER`, `PREPARE`, `PRESERVE`, `PRIMARY`, `PRIOR`, `PRIVILEGES`, `PROCEDURAL`, `PROCEDURE`, `PUBLIC`, `READ`, `READS`, `RECHECK`, `RECURSIVE`, `REF`, `REFERENCES`, `REFERENCING`, `REINDEX`, `RELATIVE`, `RENAME`, `REPEATABLE`, `REPLACE`, `RESET`, `RESTART`, `RESTRICT`, `RESULT`, `RETURN`, `RETURNED_LENGTH`, `RETURNED_OCTET_LENGTH`, `RETURNED_SQLSTATE`, `RETURNS`, `REVOKE`, `RIGHT`, `ROLE`, `ROLLBACK`, `ROLLUP`, `ROUTINE`, `ROUTINE_CATALOG`, `ROUTINE_NAME`, `ROUTINE_SCHEMA`, `ROW`, `ROWS`, `ROW_COUNT`, `RULE`, `SAVE_POINT`, `SCALE`, `SCHEMA`, `SCHEMA_NAME`, `SCOPE`, `SCROLL`, `SEARCH`, `SECOND`, `SECURITY`, `SELECT`, `SELF`, `SENSITIVE`, `SERIALIZABLE`, `SERVER_NAME`, `SESSION`, `SESSION_USER`, `SET`, `SETOF`, `SETS`, `SHARE`, `SHOW`, `SIMILAR`, `SIMPLE`, `SIZE`, `SOME`, `SOURCE`, `SPACE`, `SPECIFIC`, `SPECIFICTYPE`, `SPECIFIC_NAME`, `SQL`, `SQLCODE`, `SQLERROR`, `SQLEXCEPTION`, `SQLSTATE`, `SQLWARNINIG`, `STABLE`, `START`, `STATE`, `STATEMENT`, `STATIC`, `STATISTICS`, `STDIN`, `STDOUT`, `STORAGE`, `STRICT`, `STRUCTURE`, `STYPE`, `SUBCLASS_ORIGIN`, `SUBLIST`, `SUBSTRING`, `SUM`, `SYMMETRIC`, `SYSID`, `SYSTEM`, `SYSTEM_USER`, `TABLE`, `TABLE_NAME`, ` TEMP`, `TEMPLATE`, `TEMPORARY`, `TERMINATE`, `THAN`, `THEN`, `TIMESTAMP`, `TIMEZONE_HOUR`, `TIMEZONE_MINUTE`, `TO`, `TOAST`, `TRAILING`, `TRANSACTION`, `TRANSACTIONS_COMMITTED`, `TRANSACTIONS_ROLLED_BACK`, `TRANSACTION_ACTIVE`, `TRANSFORM`, `TRANSFORMS`, `TRANSLATE`, `TRANSLATION`, `TREAT`, `TRIGGER`, `TRIGGER_CATALOG`, `TRIGGER_NAME`, `TRIGGER_SCHEMA`, `TRIM`, `TRUE`, `TRUNCATE`, `TRUSTED`, `TYPE`, `UNCOMMITTED`, `UNDER`, `UNENCRYPTED`, `UNION`, `UNIQUE`, `UNKNOWN`, `UNLISTEN`, `UNNAMED`, `UNNEST`, `UNTIL`, `UPDATE`, `UPPER`, `USAGE`, `USER`, `USER_DEFINED_TYPE_CATALOG`, `USER_DEFINED_TYPE_NAME`, `USER_DEFINED_TYPE_SCHEMA`, `USING`, `VACUUM`, `VALID`, `VALIDATOR`, `VALUES`, `VARIABLE`, `VERBOSE`, `VERSION`, `VIEW`, `VOLATILE`, `WHEN`, `WHENEVER`, `WHERE`, `WITH`, `WITHOUT`, `WORK`, `WRITE`, `YEAR`, `ZONE`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `ARRAY`, `BIGINT`, `BINARY`, `BIT`, `BLOB`, `BOOLEAN`, `CHAR`, `CHARACTER`, `DATE`, `DEC`, `DECIMAL`, `FLOAT`, `INT`, `INTEGER`, `INTERVAL`, `NUMBER`, `NUMERIC`, `REAL`, `SERIAL`, `SMALLINT`, `VARCHAR`, `VARYING`, `INT8`, `SERIAL8`, `TEXT`), NameBuiltin, nil},\n-\t\t\t{\"[+*/<>=~!@#%^&|`?-]\", Operator, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`[a-z_][\\w$]*`, Name, nil},\n-\t\t\t{`[;:()\\[\\],.]`, Punctuation, nil},\n-\t\t},\n-\t\t\"multiline-comments\": {\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"multiline-comments\")},\n-\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n-\t\t\t{`[^/*]+`, CommentMultiline, nil},\n-\t\t\t{`[/*]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`[^']+`, LiteralStringSingle, nil},\n-\t\t\t{`''`, LiteralStringSingle, nil},\n-\t\t\t{`'`, LiteralStringSingle, Pop(1)},\n-\t\t},\n-\t\t\"double-string\": {\n-\t\t\t{`[^\"]+`, LiteralStringDouble, nil},\n-\t\t\t{`\"\"`, LiteralStringDouble, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "b4da3da10cc9e23429bf4c1fc265db65f0a0927d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/squid.go",
      "status": "removed",
      "additions": 0,
      "deletions": 42,
      "changes": 42,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsquid.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsquid.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsquid.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,42 +0,0 @@\n-package s\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Squidconf lexer.\n-var Squidconf = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"SquidConf\",\n-\t\tAliases:         []string{\"squidconf\", \"squid.conf\", \"squid\"},\n-\t\tFilenames:       []string{\"squid.conf\"},\n-\t\tMimeTypes:       []string{\"text/x-squidconf\"},\n-\t\tNotMultiline:    true,\n-\t\tCaseInsensitive: true,\n-\t},\n-\tsquidconfRules,\n-))\n-\n-func squidconfRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t\t{`#`, Comment, Push(\"comment\")},\n-\t\t\t{Words(`\\b`, `\\b`, `access_log`, `acl`, `always_direct`, `announce_host`, `announce_period`, `announce_port`, `announce_to`, `anonymize_headers`, `append_domain`, `as_whois_server`, `auth_param_basic`, `authenticate_children`, `authenticate_program`, `authenticate_ttl`, `broken_posts`, `buffered_logs`, `cache_access_log`, `cache_announce`, `cache_dir`, `cache_dns_program`, `cache_effective_group`, `cache_effective_user`, `cache_host`, `cache_host_acl`, `cache_host_domain`, `cache_log`, `cache_mem`, `cache_mem_high`, `cache_mem_low`, `cache_mgr`, `cachemgr_passwd`, `cache_peer`, `cache_peer_access`, `cahce_replacement_policy`, `cache_stoplist`, `cache_stoplist_pattern`, `cache_store_log`, `cache_swap`, `cache_swap_high`, `cache_swap_log`, `cache_swap_low`, `client_db`, `client_lifetime`, `client_netmask`, `connect_timeout`, `coredump_dir`, `dead_peer_timeout`, `debug_options`, `delay_access`, `delay_class`, `delay_initial_bucket_level`, `delay_parameters`, `delay_pools`, `deny_info`, `dns_children`, `dns_defnames`, `dns_nameservers`, `dns_testnames`, `emulate_httpd_log`, `err_html_text`, `fake_user_agent`, `firewall_ip`, `forwarded_for`, `forward_snmpd_port`, `fqdncache_size`, `ftpget_options`, `ftpget_program`, `ftp_list_width`, `ftp_passive`, `ftp_user`, `half_closed_clients`, `header_access`, `header_replace`, `hierarchy_stoplist`, `high_response_time_warning`, `high_page_fault_warning`, `hosts_file`, `htcp_port`, `http_access`, `http_anonymizer`, `httpd_accel`, `httpd_accel_host`, `httpd_accel_port`, `httpd_accel_uses_host_header`, `httpd_accel_with_proxy`, `http_port`, `http_reply_access`, `icp_access`, `icp_hit_stale`, `icp_port`, `icp_query_timeout`, `ident_lookup`, `ident_lookup_access`, `ident_timeout`, `incoming_http_average`, `incoming_icp_average`, `inside_firewall`, `ipcache_high`, `ipcache_low`, `ipcache_size`, `local_domain`, `local_ip`, `logfile_rotate`, `log_fqdn`, `log_icp_queries`, `log_mime_hdrs`, `maximum_object_size`, `maximum_single_addr_tries`, `mcast_groups`, `mcast_icp_query_timeout`, `mcast_miss_addr`, `mcast_miss_encode_key`, `mcast_miss_port`, `memory_pools`, `memory_pools_limit`, `memory_replacement_policy`, `mime_table`, `min_http_poll_cnt`, `min_icp_poll_cnt`, `minimum_direct_hops`, `minimum_object_size`, `minimum_retry_timeout`, `miss_access`, `negative_dns_ttl`, `negative_ttl`, `neighbor_timeout`, `neighbor_type_domain`, `netdb_high`, `netdb_low`, `netdb_ping_period`, `netdb_ping_rate`, `never_direct`, `no_cache`, `passthrough_proxy`, `pconn_timeout`, `pid_filename`, `pinger_program`, `positive_dns_ttl`, `prefer_direct`, `proxy_auth`, `proxy_auth_realm`, `query_icmp`, `quick_abort`, `quick_abort_max`, `quick_abort_min`, `quick_abort_pct`, `range_offset_limit`, `read_timeout`, `redirect_children`, `redirect_program`, `redirect_rewrites_host_header`, `reference_age`, `refresh_pattern`, `reload_into_ims`, `request_body_max_size`, `request_size`, `request_timeout`, `shutdown_lifetime`, `single_parent_bypass`, `siteselect_timeout`, `snmp_access`, `snmp_incoming_address`, `snmp_port`, `source_ping`, `ssl_proxy`, `store_avg_object_size`, `store_objects_per_bucket`, `strip_query_terms`, `swap_level1_dirs`, `swap_level2_dirs`, `tcp_incoming_address`, `tcp_outgoing_address`, `tcp_recv_bufsize`, `test_reachability`, `udp_hit_obj`, `udp_hit_obj_size`, `udp_incoming_address`, `udp_outgoing_address`, `unique_hostname`, `unlinkd_program`, `uri_whitespace`, `useragent_log`, `visible_hostname`, `wais_relay`, `wais_relay_host`, `wais_relay_port`), Keyword, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `proxy-only`, `weight`, `ttl`, `no-query`, `default`, `round-robin`, `multicast-responder`, `on`, `off`, `all`, `deny`, `allow`, `via`, `parent`, `no-digest`, `heap`, `lru`, `realm`, `children`, `q1`, `q2`, `credentialsttl`, `none`, `disable`, `offline_toggle`, `diskd`), NameConstant, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `shutdown`, `info`, `parameter`, `server_list`, `client_list`, `squid.conf`), LiteralString, nil},\n-\t\t\t{Words(`stats/`, `\\b`, `objects`, `vm_objects`, `utilization`, `ipcache`, `fqdncache`, `dns`, `redirector`, `io`, `reply_headers`, `filedescriptors`, `netdb`), LiteralString, nil},\n-\t\t\t{Words(`log/`, `=`, `status`, `enable`, `disable`, `clear`), LiteralString, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `url_regex`, `urlpath_regex`, `referer_regex`, `port`, `proto`, `req_mime_type`, `rep_mime_type`, `method`, `browser`, `user`, `src`, `dst`, `time`, `dstdomain`, `ident`, `snmp_community`), Keyword, nil},\n-\t\t\t{`(?:(?:(?:[3-9]\\d?|2(?:5[0-5]|[0-4]?\\d)?|1\\d{0,2}|0x0*[0-9a-f]{1,2}|0+[1-3]?[0-7]{0,2})(?:\\.(?:[3-9]\\d?|2(?:5[0-5]|[0-4]?\\d)?|1\\d{0,2}|0x0*[0-9a-f]{1,2}|0+[1-3]?[0-7]{0,2})){3})|(?!.*::.*::)(?:(?!:)|:(?=:))(?:[0-9a-f]{0,4}(?:(?<=::)|(?<!::):)){6}(?:[0-9a-f]{0,4}(?:(?<=::)|(?<!::):)[0-9a-f]{0,4}(?:(?<=::)|(?<!:)|(?<=:)(?<!::):)|(?:25[0-4]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-4]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))(?:/(?:(?:(?:(?:[3-9]\\d?|2(?:5[0-5]|[0-4]?\\d)?|1\\d{0,2}|0x0*[0-9a-f]{1,2}|0+[1-3]?[0-7]{0,2})(?:\\.(?:[3-9]\\d?|2(?:5[0-5]|[0-4]?\\d)?|1\\d{0,2}|0x0*[0-9a-f]{1,2}|0+[1-3]?[0-7]{0,2})){3})|(?!.*::.*::)(?:(?!:)|:(?=:))(?:[0-9a-f]{0,4}(?:(?<=::)|(?<!::):)){6}(?:[0-9a-f]{0,4}(?:(?<=::)|(?<!::):)[0-9a-f]{0,4}(?:(?<=::)|(?<!:)|(?<=:)(?<!::):)|(?:25[0-4]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-4]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|\\b\\d+\\b))?`, LiteralNumberFloat, nil},\n-\t\t\t{`(?:\\b\\d+\\b(?:-\\b\\d+|%)?)`, LiteralNumber, nil},\n-\t\t\t{`\\S+`, Text, nil},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`\\s*TAG:.*`, LiteralStringEscape, Pop(1)},\n-\t\t\t{`.+`, Comment, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "159077f4c22bc0187c3b62a0caf7c3e2979e77e3",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/stylus.go",
      "status": "removed",
      "additions": 0,
      "deletions": 66,
      "changes": 66,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fstylus.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fstylus.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fstylus.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,66 +0,0 @@\n-package s\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Stylus lexer.\n-var Stylus = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"Stylus\",\n-\t\tAliases:         []string{\"stylus\"},\n-\t\tFilenames:       []string{\"*.styl\"},\n-\t\tMimeTypes:       []string{\"text/x-styl\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tstylusRules,\n-))\n-\n-func stylusRules() Rules {\n-\treturn Rules{\n-\t\t// \"root\": {\n-\t\t// },\n-\t\t\"root\": {\n-\t\t\t{`([ \\t]*\\n|\\s+)`, Text, nil},\n-\t\t\t{`[!$][\\w-]+`, NameVariable, nil},\n-\t\t\t{`@[\\w-]+`, KeywordPseudo, Push(\"atrule\")},\n-\t\t\t{`(\\.)([\\w-]+)`, ByGroups(Punctuation, NameClass), nil},\n-\t\t\t{`for|if|else if|else|unless|return|\\&`, Keyword, nil},\n-\t\t\t{`([\\w-]+)(\\()`, ByGroups(NameDecorator, Punctuation), Push(\"function-start\")},\n-\t\t\t{`(\\+)([\\w-]+)(\\(\\))`, ByGroups(Keyword, NameDecorator, Punctuation), nil},\n-\t\t\t{Words(``, ``, `-ms-`, `mso-`, `-moz-`, `-o-`, `-xv-`, `-atsc-`, `-wap-`, `-khtml-`, `-webkit-`, `prince-`, `-ah-`, `-hp-`, `-ro-`, `-rim-`, `-tc-`), NameProperty, nil},\n-\t\t\t{`\\b(align-content|align-items|align-self|alignment-baseline|all|animation|animation-delay|animation-direction|animation-duration|animation-fill-mode|animation-iteration-count|animation-name|animation-play-state|animation-timing-function|appearance|azimuth|backface-visibility|background|background-attachment|background-blend-mode|background-clip|background-color|background-image|background-origin|background-position|background-repeat|background-size|baseline-shift|bookmark-label|bookmark-level|bookmark-state|border|border-bottom|border-bottom-color|border-bottom-left-radius|border-bottom-right-radius|border-bottom-style|border-bottom-width|border-boundary|border-collapse|border-color|border-image|border-image-outset|border-image-repeat|border-image-slice|border-image-source|border-image-width|border-left|border-left-color|border-left-style|border-left-width|border-radius|border-right|border-right-color|border-right-style|border-right-width|border-spacing|border-style|border-top|border-top-color|border-top-left-radius|border-top-right-radius|border-top-style|border-top-width|border-width|bottom|box-decoration-break|box-shadow|box-sizing|box-snap|box-suppress|break-after|break-before|break-inside|caption-side|caret|caret-animation|caret-color|caret-shape|chains|clear|clip|clip-path|clip-rule|color|color-interpolation-filters|column-count|column-fill|column-gap|column-rule|column-rule-color|column-rule-style|column-rule-width|column-span|column-width|columns|content|counter-increment|counter-reset|counter-set|crop|cue|cue-after|cue-before|cursor|direction|display|dominant-baseline|elevation|empty-cells|filter|flex|flex-basis|flex-direction|flex-flow|flex-grow|flex-shrink|flex-wrap|float|float-defer|float-offset|float-reference|flood-color|flood-opacity|flow|flow-from|flow-into|font|font-family|font-feature-settings|font-kerning|font-language-override|font-size|font-size-adjust|font-stretch|font-style|font-synthesis|font-variant|font-variant-alternates|font-variant-caps|font-variant-east-asian|font-variant-ligatures|font-variant-numeric|font-variant-position|font-weight|footnote-display|footnote-policy|glyph-orientation-vertical|grid|grid-area|grid-auto-columns|grid-auto-flow|grid-auto-rows|grid-column|grid-column-end|grid-column-gap|grid-column-start|grid-gap|grid-row|grid-row-end|grid-row-gap|grid-row-start|grid-template|grid-template-areas|grid-template-columns|grid-template-rows|hanging-punctuation|height|hyphenate-character|hyphenate-limit-chars|hyphenate-limit-last|hyphenate-limit-lines|hyphenate-limit-zone|hyphens|image-orientation|image-resolution|initial-letter|initial-letter-align|initial-letter-wrap|isolation|justify-content|justify-items|justify-self|left|letter-spacing|lighting-color|line-break|line-grid|line-height|line-snap|list-style|list-style-image|list-style-position|list-style-type|margin|margin-bottom|margin-left|margin-right|margin-top|marker-side|marquee-direction|marquee-loop|marquee-speed|marquee-style|mask|mask-border|mask-border-mode|mask-border-outset|mask-border-repeat|mask-border-slice|mask-border-source|mask-border-width|mask-clip|mask-composite|mask-image|mask-mode|mask-origin|mask-position|mask-repeat|mask-size|mask-type|max-height|max-lines|max-width|min-height|min-width|mix-blend-mode|motion|motion-offset|motion-path|motion-rotation|move-to|nav-down|nav-left|nav-right|nav-up|object-fit|object-position|offset-after|offset-before|offset-end|offset-start|opacity|order|orphans|outline|outline-color|outline-offset|outline-style|outline-width|overflow|overflow-style|overflow-wrap|overflow-x|overflow-y|padding|padding-bottom|padding-left|padding-right|padding-top|page|page-break-after|page-break-before|page-break-inside|page-policy|pause|pause-after|pause-before|perspective|perspective-origin|pitch|pitch-range|play-during|polar-angle|polar-distance|position|presentation-level|quotes|region-fragment|resize|rest|rest-after|rest-before|richness|right|rotation|rotation-point|ruby-align|ruby-merge|ruby-position|running|scroll-snap-coordinate|scroll-snap-destination|scroll-snap-points-x|scroll-snap-points-y|scroll-snap-type|shape-image-threshold|shape-inside|shape-margin|shape-outside|size|speak|speak-as|speak-header|speak-numeral|speak-punctuation|speech-rate|stress|string-set|tab-size|table-layout|text-align|text-align-last|text-combine-upright|text-decoration|text-decoration-color|text-decoration-line|text-decoration-skip|text-decoration-style|text-emphasis|text-emphasis-color|text-emphasis-position|text-emphasis-style|text-indent|text-justify|text-orientation|text-overflow|text-shadow|text-space-collapse|text-space-trim|text-spacing|text-transform|text-underline-position|text-wrap|top|transform|transform-origin|transform-style|transition|transition-delay|transition-duration|transition-property|transition-timing-function|unicode-bidi|user-select|vertical-align|visibility|voice-balance|voice-duration|voice-family|voice-pitch|voice-range|voice-rate|voice-stress|voice-volume|volume|white-space|widows|width|will-change|word-break|word-spacing|word-wrap|wrap-after|wrap-before|wrap-flow|wrap-inside|wrap-through|writing-mode|z-index)\\b(\\:)?`, ByGroups(NameProperty, Punctuation), Push(\"values\")},\n-\t\t\t{`\\b(a|abbr|acronym|address|applet|area|article|aside|audio|b|base(?:front)?|bd(?:i|o)|big|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|data|datalist|d(?:d|l|t)|del|details|dfn|dialog|dir|div|em(?:bed)?|fieldset|fig(?:caption|ure)|font|footer|form|frame(?:set)?|h[1-6]+|head(?:er)?|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|main|map|mark|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|r(?:p|t|uby)|s|samp|script|section|select|small|source|span|strike|strong|style|sub|summary|sup|svg|table|tbody|td|template|textarea|tfoot|th|thead|time|title|tr|track|tt|u|ul|var|video|wbr)\\b`, NameTag, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `above`, `aural`, `behind`, `bidi-override`, `center-left`, `center-right`, `cjk-ideographic`, `continuous`, `crop`, `cross`, `embed`, `far-left`, `far-right`, `fast`, `faster`, `hebrew`, `high`, `higher`, `hiragana`, `hiragana-iroha`, `katakana`, `katakana-iroha`, `landscape`, `left-side`, `leftwards`, `level`, `loud`, `low`, `lower`, `message-box`, `middle`, `mix`, `narrower`, `once`, `portrait`, `right-side`, `rightwards`, `silent`, `slow`, `slower`, `small-caption`, `soft`, `spell-out`, `status-bar`, `super`, `text-bottom`, `text-top`, `wider`, `x-fast`, `x-high`, `x-loud`, `x-low`, `x-soft`, `yes`, `pre`, `pre-wrap`, `pre-line`), KeywordConstant, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `aliceblue`, `antiquewhite`, `aqua`, `aquamarine`, `azure`, `beige`, `bisque`, `black`, `blanchedalmond`, `blue`, `blueviolet`, `brown`, `burlywood`, `cadetblue`, `chartreuse`, `chocolate`, `coral`, `cornflowerblue`, `cornsilk`, `crimson`, `cyan`, `darkblue`, `darkcyan`, `darkgoldenrod`, `darkgray`, `darkgreen`, `darkgrey`, `darkkhaki`, `darkmagenta`, `darkolivegreen`, `darkorange`, `darkorchid`, `darkred`, `darksalmon`, `darkseagreen`, `darkslateblue`, `darkslategray`, `darkslategrey`, `darkturquoise`, `darkviolet`, `deeppink`, `deepskyblue`, `dimgray`, `dimgrey`, `dodgerblue`, `firebrick`, `floralwhite`, `forestgreen`, `fuchsia`, `gainsboro`, `ghostwhite`, `gold`, `goldenrod`, `gray`, `green`, `greenyellow`, `grey`, `honeydew`, `hotpink`, `indianred`, `indigo`, `ivory`, `khaki`, `lavender`, `lavenderblush`, `lawngreen`, `lemonchiffon`, `lightblue`, `lightcoral`, `lightcyan`, `lightgoldenrodyellow`, `lightgray`, `lightgreen`, `lightgrey`, `lightpink`, `lightsalmon`, `lightseagreen`, `lightskyblue`, `lightslategray`, `lightslategrey`, `lightsteelblue`, `lightyellow`, `lime`, `limegreen`, `linen`, `magenta`, `maroon`, `mediumaquamarine`, `mediumblue`, `mediumorchid`, `mediumpurple`, `mediumseagreen`, `mediumslateblue`, `mediumspringgreen`, `mediumturquoise`, `mediumvioletred`, `midnightblue`, `mintcream`, `mistyrose`, `moccasin`, `navajowhite`, `navy`, `oldlace`, `olive`, `olivedrab`, `orange`, `orangered`, `orchid`, `palegoldenrod`, `palegreen`, `paleturquoise`, `palevioletred`, `papayawhip`, `peachpuff`, `peru`, `pink`, `plum`, `powderblue`, `purple`, `rebeccapurple`, `red`, `rosybrown`, `royalblue`, `saddlebrown`, `salmon`, `sandybrown`, `seagreen`, `seashell`, `sienna`, `silver`, `skyblue`, `slateblue`, `slategray`, `slategrey`, `snow`, `springgreen`, `steelblue`, `tan`, `teal`, `thistle`, `tomato`, `turquoise`, `violet`, `wheat`, `white`, `whitesmoke`, `yellow`, `yellowgreen`, `transparent`), KeywordConstant, nil},\n-\t\t\t{`(\\{|\\}|\\(|\\)|\\[|\\]|,|:|;)`, Punctuation, nil},\n-\t\t\t{`(\\.|\\!|\\-|\\+|\\~|\\*\\*|\\*|\\/|\\%|\\.\\.\\.|\\.\\.|\\<\\=|\\>\\=|\\<|\\>|\\=\\=|\\!\\=|\\&\\&|\\|\\||\\=|\\:\\=|\\?\\=|\\+\\=|\\-\\=|\\*\\=|\\/\\=|\\%\\=|\\?|\\:)`, Operator, nil},\n-\t\t\t{`\\b(and|if unless|in|is|is a|is defined|is not|isnt|or|not)\\b`, OperatorWord, nil},\n-\t\t\t{`(\\#[a-f0-9]{3,6})`, LiteralNumberHex, nil},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t},\n-\t\t\"inline-comment\": {\n-\t\t\t{`\\*/`, Comment, Pop(1)},\n-\t\t},\n-\t\t\"atrule\": {\n-\t\t\t{`\\{`, Punctuation, Push(\"atcontent\")},\n-\t\t\t{`$`, Punctuation, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"atcontent\": {\n-\t\t\tInclude(\"root\"),\n-\t\t\t{`\\}`, Punctuation, Pop(2)},\n-\t\t},\n-\t\t\"function-start\": {\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"values\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`(\\#[a-f0-9]{3,6})`, LiteralNumberHex, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `absolute`, `alias`, `all`, `all-petite-caps`, `all-scroll`, `all-small-caps`, `allow-end`, `alpha`, `alternate`, `alternate-reverse`, `always`, `armenian`, `auto`, `avoid`, `avoid-column`, `avoid-page`, `backwards`, `balance`, `baseline`, `below`, `blink`, `block`, `bold`, `bolder`, `border-box`, `both`, `bottom`, `box-decoration`, `break-word`, `capitalize`, `cell`, `center`, `circle`, `clip`, `clone`, `close-quote`, `col-resize`, `collapse`, `color`, `color-burn`, `color-dodge`, `column`, `column-reverse`, `compact`, `condensed`, `contain`, `container`, `content-box`, `context-menu`, `copy`, `cover`, `crisp-edges`, `crosshair`, `currentColor`, `cursive`, `darken`, `dashed`, `decimal`, `decimal-leading-zero`, `default`, `descendants`, `difference`, `digits`, `disc`, `distribute`, `dot`, `dotted`, `double`, `double-circle`, `e-resize`, `each-line`, `ease`, `ease-in`, `ease-in-out`, `ease-out`, `edges`, `ellipsis`, `end`, `ew-resize`, `exclusion`, `expanded`, `extra-condensed`, `extra-expanded`, `fantasy`, `fill`, `fill-box`, `filled`, `first`, `fixed`, `flat`, `flex`, `flex-end`, `flex-start`, `flip`, `force-end`, `forwards`, `from-image`, `full-width`, `geometricPrecision`, `georgian`, `groove`, `hanging`, `hard-light`, `help`, `hidden`, `hide`, `horizontal`, `hue`, `icon`, `infinite`, `inherit`, `initial`, `ink`, `inline`, `inline-block`, `inline-flex`, `inline-table`, `inset`, `inside`, `inter-word`, `invert`, `isolate`, `italic`, `justify`, `large`, `larger`, `last`, `left`, `lighten`, `lighter`, `line-through`, `linear`, `list-item`, `local`, `loose`, `lower-alpha`, `lower-greek`, `lower-latin`, `lower-roman`, `lowercase`, `ltr`, `luminance`, `luminosity`, `mandatory`, `manipulation`, `manual`, `margin-box`, `match-parent`, `medium`, `mixed`, `monospace`, `move`, `multiply`, `n-resize`, `ne-resize`, `nesw-resize`, `no-close-quote`, `no-drop`, `no-open-quote`, `no-repeat`, `none`, `normal`, `not-allowed`, `nowrap`, `ns-resize`, `nw-resize`, `nwse-resize`, `objects`, `oblique`, `off`, `on`, `open`, `open-quote`, `optimizeLegibility`, `optimizeSpeed`, `outset`, `outside`, `over`, `overlay`, `overline`, `padding-box`, `page`, `pan-down`, `pan-left`, `pan-right`, `pan-up`, `pan-x`, `pan-y`, `paused`, `petite-caps`, `pixelated`, `pointer`, `preserve-3d`, `progress`, `proximity`, `relative`, `repeat`, `repeat no-repeat`, `repeat-x`, `repeat-y`, `reverse`, `ridge`, `right`, `round`, `row`, `row-resize`, `row-reverse`, `rtl`, `ruby`, `ruby-base`, `ruby-base-container`, `ruby-text`, `ruby-text-container`, `run-in`, `running`, `s-resize`, `sans-serif`, `saturation`, `scale-down`, `screen`, `scroll`, `se-resize`, `semi-condensed`, `semi-expanded`, `separate`, `serif`, `sesame`, `show`, `sideways`, `sideways-left`, `sideways-right`, `slice`, `small`, `small-caps`, `smaller`, `smooth`, `snap`, `soft-light`, `solid`, `space`, `space-around`, `space-between`, `spaces`, `square`, `start`, `static`, `step-end`, `step-start`, `sticky`, `stretch`, `strict`, `stroke-box`, `style`, `sw-resize`, `table`, `table-caption`, `table-cell`, `table-column`, `table-column-group`, `table-footer-group`, `table-header-group`, `table-row`, `table-row-group`, `text`, `thick`, `thin`, `titling-caps`, `to`, `top`, `triangle`, `ultra-condensed`, `ultra-expanded`, `under`, `underline`, `unicase`, `unset`, `upper-alpha`, `upper-latin`, `upper-roman`, `uppercase`, `upright`, `use-glyph-orientation`, `vertical`, `vertical-text`, `view-box`, `visible`, `w-resize`, `wait`, `wavy`, `weight`, `weight style`, `wrap`, `wrap-reverse`, `x-large`, `x-small`, `xx-large`, `xx-small`, `zoom-in`, `zoom-out`), KeywordConstant, nil},\n-\t\t\t{`\\;?`, Punctuation, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "3467e4ca7c0221b756a380e67885ddf399c1ca4a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/swift.go",
      "status": "removed",
      "additions": 0,
      "deletions": 91,
      "changes": 91,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fswift.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fswift.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fswift.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,91 +0,0 @@\n-package s\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Swift lexer.\n-var Swift = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Swift\",\n-\t\tAliases:   []string{\"swift\"},\n-\t\tFilenames: []string{\"*.swift\"},\n-\t\tMimeTypes: []string{\"text/x-swift\"},\n-\t},\n-\tswiftRules,\n-))\n-\n-func swiftRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`//`, CommentSingle, Push(\"comment-single\")},\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"comment-multi\")},\n-\t\t\t{`#(if|elseif|else|endif|available)\\b`, CommentPreproc, Push(\"preproc\")},\n-\t\t\tInclude(\"keywords\"),\n-\t\t\t{Words(``, `\\b`, `Array`, `AutoreleasingUnsafeMutablePointer`, `BidirectionalReverseView`, `Bit`, `Bool`, `CFunctionPointer`, `COpaquePointer`, `CVaListPointer`, `Character`, `ClosedInterval`, `CollectionOfOne`, `ContiguousArray`, `Dictionary`, `DictionaryGenerator`, `DictionaryIndex`, `Double`, `EmptyCollection`, `EmptyGenerator`, `EnumerateGenerator`, `EnumerateSequence`, `FilterCollectionView`, `FilterCollectionViewIndex`, `FilterGenerator`, `FilterSequenceView`, `Float`, `Float80`, `FloatingPointClassification`, `GeneratorOf`, `GeneratorOfOne`, `GeneratorSequence`, `HalfOpenInterval`, `HeapBuffer`, `HeapBufferStorage`, `ImplicitlyUnwrappedOptional`, `IndexingGenerator`, `Int`, `Int16`, `Int32`, `Int64`, `Int8`, `LazyBidirectionalCollection`, `LazyForwardCollection`, `LazyRandomAccessCollection`, `LazySequence`, `MapCollectionView`, `MapSequenceGenerator`, `MapSequenceView`, `MirrorDisposition`, `ObjectIdentifier`, `OnHeap`, `Optional`, `PermutationGenerator`, `QuickLookObject`, `RandomAccessReverseView`, `Range`, `RangeGenerator`, `RawByte`, `Repeat`, `ReverseBidirectionalIndex`, `ReverseRandomAccessIndex`, `SequenceOf`, `SinkOf`, `Slice`, `StaticString`, `StrideThrough`, `StrideThroughGenerator`, `StrideTo`, `StrideToGenerator`, `String`, `UInt`, `UInt16`, `UInt32`, `UInt64`, `UInt8`, `UTF16`, `UTF32`, `UTF8`, `UnicodeDecodingResult`, `UnicodeScalar`, `Unmanaged`, `UnsafeBufferPointer`, `UnsafeBufferPointerGenerator`, `UnsafeMutableBufferPointer`, `UnsafeMutablePointer`, `UnsafePointer`, `Zip2`, `ZipGenerator2`, `AbsoluteValuable`, `AnyObject`, `ArrayLiteralConvertible`, `BidirectionalIndexType`, `BitwiseOperationsType`, `BooleanLiteralConvertible`, `BooleanType`, `CVarArgType`, `CollectionType`, `Comparable`, `DebugPrintable`, `DictionaryLiteralConvertible`, `Equatable`, `ExtendedGraphemeClusterLiteralConvertible`, `ExtensibleCollectionType`, `FloatLiteralConvertible`, `FloatingPointType`, `ForwardIndexType`, `GeneratorType`, `Hashable`, `IntegerArithmeticType`, `IntegerLiteralConvertible`, `IntegerType`, `IntervalType`, `MirrorType`, `MutableCollectionType`, `MutableSliceable`, `NilLiteralConvertible`, `OutputStreamType`, `Printable`, `RandomAccessIndexType`, `RangeReplaceableCollectionType`, `RawOptionSetType`, `RawRepresentable`, `Reflectable`, `SequenceType`, `SignedIntegerType`, `SignedNumberType`, `SinkType`, `Sliceable`, `Streamable`, `Strideable`, `StringInterpolationConvertible`, `StringLiteralConvertible`, `UnicodeCodecType`, `UnicodeScalarLiteralConvertible`, `UnsignedIntegerType`, `_ArrayBufferType`, `_BidirectionalIndexType`, `_CocoaStringType`, `_CollectionType`, `_Comparable`, `_ExtensibleCollectionType`, `_ForwardIndexType`, `_Incrementable`, `_IntegerArithmeticType`, `_IntegerType`, `_ObjectiveCBridgeable`, `_RandomAccessIndexType`, `_RawOptionSetType`, `_SequenceType`, `_Sequence_Type`, `_SignedIntegerType`, `_SignedNumberType`, `_Sliceable`, `_Strideable`, `_SwiftNSArrayRequiredOverridesType`, `_SwiftNSArrayType`, `_SwiftNSCopyingType`, `_SwiftNSDictionaryRequiredOverridesType`, `_SwiftNSDictionaryType`, `_SwiftNSEnumeratorType`, `_SwiftNSFastEnumerationType`, `_SwiftNSStringRequiredOverridesType`, `_SwiftNSStringType`, `_UnsignedIntegerType`, `C_ARGC`, `C_ARGV`, `Process`, `Any`, `AnyClass`, `BooleanLiteralType`, `CBool`, `CChar`, `CChar16`, `CChar32`, `CDouble`, `CFloat`, `CInt`, `CLong`, `CLongLong`, `CShort`, `CSignedChar`, `CUnsignedInt`, `CUnsignedLong`, `CUnsignedShort`, `CWideChar`, `ExtendedGraphemeClusterType`, `Float32`, `Float64`, `FloatLiteralType`, `IntMax`, `IntegerLiteralType`, `StringLiteralType`, `UIntMax`, `UWord`, `UnicodeScalarType`, `Void`, `Word`, `NSErrorPointer`, `NSObjectProtocol`, `Selector`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\b`, `abs`, `advance`, `alignof`, `alignofValue`, `assert`, `assertionFailure`, `contains`, `count`, `countElements`, `debugPrint`, `debugPrintln`, `distance`, `dropFirst`, `dropLast`, `dump`, `enumerate`, `equal`, `extend`, `fatalError`, `filter`, `find`, `first`, `getVaList`, `indices`, `insert`, `isEmpty`, `join`, `last`, `lazy`, `lexicographicalCompare`, `map`, `max`, `maxElement`, `min`, `minElement`, `numericCast`, `overlaps`, `partition`, `precondition`, `preconditionFailure`, `prefix`, `print`, `println`, `reduce`, `reflect`, `removeAll`, `removeAtIndex`, `removeLast`, `removeRange`, `reverse`, `sizeof`, `sizeofValue`, `sort`, `sorted`, `splice`, `split`, `startsWith`, `stride`, `strideof`, `strideofValue`, `suffix`, `swap`, `toDebugString`, `toString`, `transcode`, `underestimateCount`, `unsafeAddressOf`, `unsafeBitCast`, `unsafeDowncast`, `withExtendedLifetime`, `withUnsafeMutablePointer`, `withUnsafeMutablePointers`, `withUnsafePointer`, `withUnsafePointers`, `withVaList`), NameBuiltinPseudo, nil},\n-\t\t\t{`\\$\\d+`, NameVariable, nil},\n-\t\t\t{`0b[01_]+`, LiteralNumberBin, nil},\n-\t\t\t{`0o[0-7_]+`, LiteralNumberOct, nil},\n-\t\t\t{`0x[0-9a-fA-F_]+`, LiteralNumberHex, nil},\n-\t\t\t{`[0-9][0-9_]*(\\.[0-9_]+[eE][+\\-]?[0-9_]+|\\.[0-9_]*|[eE][+\\-]?[0-9_]+)`, LiteralNumberFloat, nil},\n-\t\t\t{`[0-9][0-9_]*`, LiteralNumberInteger, nil},\n-\t\t\t{`\"`, LiteralString, Push(\"string\")},\n-\t\t\t{\"[(){}\\\\[\\\\].,:;=@#`?]|->|[<&?](?=\\\\w)|(?<=\\\\w)[>!?]\", Punctuation, nil},\n-\t\t\t{`[/=\\-+!*%<>&|^?~]+`, Operator, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t},\n-\t\t\"keywords\": {\n-\t\t\t{Words(``, `\\b`, `as`, `break`, `case`, `catch`, `continue`, `default`, `defer`, `do`, `else`, `fallthrough`, `for`, `guard`, `if`, `in`, `is`, `repeat`, `return`, `#selector`, `switch`, `throw`, `try`, `where`, `while`), Keyword, nil},\n-\t\t\t{`@availability\\([^)]+\\)`, KeywordReserved, nil},\n-\t\t\t{Words(``, `\\b`, `associativity`, `convenience`, `dynamic`, `didSet`, `final`, `get`, `indirect`, `infix`, `inout`, `lazy`, `left`, `mutating`, `none`, `nonmutating`, `optional`, `override`, `postfix`, `precedence`, `prefix`, `Protocol`, `required`, `rethrows`, `right`, `set`, `throws`, `Type`, `unowned`, `weak`, `willSet`, `@availability`, `@autoclosure`, `@noreturn`, `@NSApplicationMain`, `@NSCopying`, `@NSManaged`, `@objc`, `@UIApplicationMain`, `@IBAction`, `@IBDesignable`, `@IBInspectable`, `@IBOutlet`), KeywordReserved, nil},\n-\t\t\t{`(as|dynamicType|false|is|nil|self|Self|super|true|__COLUMN__|__FILE__|__FUNCTION__|__LINE__|_|#(?:file|line|column|function))\\b`, KeywordConstant, nil},\n-\t\t\t{`import\\b`, KeywordDeclaration, Push(\"module\")},\n-\t\t\t{`(class|enum|extension|struct|protocol)(\\s+)([a-zA-Z_]\\w*)`, ByGroups(KeywordDeclaration, Text, NameClass), nil},\n-\t\t\t{`(func)(\\s+)([a-zA-Z_]\\w*)`, ByGroups(KeywordDeclaration, Text, NameFunction), nil},\n-\t\t\t{`(var|let)(\\s+)([a-zA-Z_]\\w*)`, ByGroups(KeywordDeclaration, Text, NameVariable), nil},\n-\t\t\t{Words(``, `\\b`, `class`, `deinit`, `enum`, `extension`, `func`, `import`, `init`, `internal`, `let`, `operator`, `private`, `protocol`, `public`, `static`, `struct`, `subscript`, `typealias`, `var`), KeywordDeclaration, nil},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`:param: [a-zA-Z_]\\w*|:returns?:|(FIXME|MARK|TODO):`, CommentSpecial, nil},\n-\t\t},\n-\t\t\"comment-single\": {\n-\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t\tInclude(\"comment\"),\n-\t\t\t{`[^\\n]`, CommentSingle, nil},\n-\t\t},\n-\t\t\"comment-multi\": {\n-\t\t\tInclude(\"comment\"),\n-\t\t\t{`[^*/]`, CommentMultiline, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push()},\n-\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n-\t\t\t{`[*/]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"module\": {\n-\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t\t{`[a-zA-Z_]\\w*`, NameClass, nil},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"preproc\": {\n-\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t\tInclude(\"keywords\"),\n-\t\t\t{`[A-Za-z]\\w*`, CommentPreproc, nil},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\\\\\\(`, LiteralStringInterpol, Push(\"string-intp\")},\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`\\\\['\"\\\\nrt]|\\\\x[0-9a-fA-F]{2}|\\\\[0-7]{1,3}|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}`, LiteralStringEscape, nil},\n-\t\t\t{`[^\\\\\"]+`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralString, nil},\n-\t\t},\n-\t\t\"string-intp\": {\n-\t\t\t{`\\(`, LiteralStringInterpol, Push()},\n-\t\t\t{`\\)`, LiteralStringInterpol, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "0da97821e9efd9e44a7aee92684f07ac78626d3c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/systemd.go",
      "status": "removed",
      "additions": 0,
      "deletions": 33,
      "changes": 33,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsystemd.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsystemd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsystemd.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,33 +0,0 @@\n-package s\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-var SYSTEMD = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:    \"SYSTEMD\",\n-\t\tAliases: []string{\"systemd\"},\n-\t\t// Suspects: man systemd.index | grep -E 'systemd\\..*configuration'\n-\t\tFilenames: []string{\"*.automount\", \"*.device\", \"*.dnssd\", \"*.link\", \"*.mount\", \"*.netdev\", \"*.network\", \"*.path\", \"*.scope\", \"*.service\", \"*.slice\", \"*.socket\", \"*.swap\", \"*.target\", \"*.timer\"},\n-\t\tMimeTypes: []string{\"text/plain\"},\n-\t},\n-\tsystemdRules,\n-))\n-\n-func systemdRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`[;#].*`, Comment, nil},\n-\t\t\t{`\\[.*?\\]$`, Keyword, nil},\n-\t\t\t{`(.*?)(=)(.*)(\\\\\\n)`, ByGroups(NameAttribute, Operator, LiteralString, Text), Push(\"continuation\")},\n-\t\t\t{`(.*?)(=)(.*)`, ByGroups(NameAttribute, Operator, LiteralString), nil},\n-\t\t},\n-\t\t\"continuation\": {\n-\t\t\t{`(.*?)(\\\\\\n)`, ByGroups(LiteralString, Text), nil},\n-\t\t\t{`(.*)`, LiteralString, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "a9a77f542e65ebcea73d28a110a17ea1b9d70904",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/s/systemverilog.go",
      "status": "removed",
      "additions": 0,
      "deletions": 77,
      "changes": 77,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsystemverilog.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsystemverilog.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fs%2Fsystemverilog.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,77 +0,0 @@\n-package s\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Systemverilog lexer.\n-var Systemverilog = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"systemverilog\",\n-\t\tAliases:   []string{\"systemverilog\", \"sv\"},\n-\t\tFilenames: []string{\"*.sv\", \"*.svh\"},\n-\t\tMimeTypes: []string{\"text/x-systemverilog\"},\n-\t\tEnsureNL:  true,\n-\t},\n-\tsystemvarilogRules,\n-))\n-\n-func systemvarilogRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{\"^\\\\s*`define\", CommentPreproc, Push(\"macro\")},\n-\t\t\t{`^(\\s*)(package)(\\s+)`, ByGroups(Text, KeywordNamespace, Text), nil},\n-\t\t\t{`^(\\s*)(import)(\\s+)(\"DPI(?:-C)?\")(\\s+)`, ByGroups(Text, KeywordNamespace, Text, LiteralString, Text), nil},\n-\t\t\t{`^(\\s*)(import)(\\s+)`, ByGroups(Text, KeywordNamespace, Text), Push(\"import\")},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`/(\\\\\\n)?/(\\n|(.|\\n)*?[^\\\\]\\n)`, CommentSingle, nil},\n-\t\t\t{`/(\\\\\\n)?[*](.|\\n)*?[*](\\\\\\n)?/`, CommentMultiline, nil},\n-\t\t\t{`[{}#@]`, Punctuation, nil},\n-\t\t\t{`L?\"`, LiteralString, Push(\"string\")},\n-\t\t\t{`L?'(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-fA-F0-9]{1,2}|[^\\\\\\'\\n])'`, LiteralStringChar, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+)[eE][+-]?\\d+[lL]?`, LiteralNumberFloat, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+[fF])[fF]?`, LiteralNumberFloat, nil},\n-\t\t\t{`([0-9]+)|(\\'h)[0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`([0-9]+)|(\\'b)[01]+`, LiteralNumberBin, nil},\n-\t\t\t{`([0-9]+)|(\\'d)[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`([0-9]+)|(\\'o)[0-7]+`, LiteralNumberOct, nil},\n-\t\t\t{`\\'[01xz]`, LiteralNumber, nil},\n-\t\t\t{`\\d+[Ll]?`, LiteralNumberInteger, nil},\n-\t\t\t{`\\*/`, Error, nil},\n-\t\t\t{`[~!%^&*+=|?:<>/-]`, Operator, nil},\n-\t\t\t{`[()\\[\\],.;\\']`, Punctuation, nil},\n-\t\t\t{\"`[a-zA-Z_]\\\\w*\", NameConstant, nil},\n-\t\t\t{Words(``, `\\b`, `accept_on`, `alias`, `always`, `always_comb`, `always_ff`, `always_latch`, `and`, `assert`, `assign`, `assume`, `automatic`, `before`, `begin`, `bind`, `bins`, `binsof`, `bit`, `break`, `buf`, `bufif0`, `bufif1`, `byte`, `case`, `casex`, `casez`, `cell`, `chandle`, `checker`, `class`, `clocking`, `cmos`, `config`, `const`, `constraint`, `context`, `continue`, `cover`, `covergroup`, `coverpoint`, `cross`, `deassign`, `default`, `defparam`, `design`, `disable`, `dist`, `do`, `edge`, `else`, `end`, `endcase`, `endchecker`, `endclass`, `endclocking`, `endconfig`, `endfunction`, `endgenerate`, `endgroup`, `endinterface`, `endmodule`, `endpackage`, `endprimitive`, `endprogram`, `endproperty`, `endsequence`, `endspecify`, `endtable`, `endtask`, `enum`, `event`, `eventually`, `expect`, `export`, `extends`, `extern`, `final`, `first_match`, `for`, `force`, `foreach`, `forever`, `fork`, `forkjoin`, `function`, `generate`, `genvar`, `global`, `highz0`, `highz1`, `if`, `iff`, `ifnone`, `ignore_bins`, `illegal_bins`, `implies`, `import`, `incdir`, `include`, `initial`, `inout`, `input`, `inside`, `instance`, `int`, `integer`, `interface`, `intersect`, `join`, `join_any`, `join_none`, `large`, `let`, `liblist`, `library`, `local`, `localparam`, `logic`, `longint`, `macromodule`, `matches`, `medium`, `modport`, `module`, `nand`, `negedge`, `new`, `nexttime`, `nmos`, `nor`, `noshowcancelled`, `not`, `notif0`, `notif1`, `null`, `or`, `output`, `package`, `packed`, `parameter`, `pmos`, `posedge`, `primitive`, `priority`, `program`, `property`, `protected`, `pull0`, `pull1`, `pulldown`, `pullup`, `pulsestyle_ondetect`, `pulsestyle_onevent`, `pure`, `rand`, `randc`, `randcase`, `randsequence`, `rcmos`, `real`, `realtime`, `ref`, `reg`, `reject_on`, `release`, `repeat`, `restrict`, `return`, `rnmos`, `rpmos`, `rtran`, `rtranif0`, `rtranif1`, `s_always`, `s_eventually`, `s_nexttime`, `s_until`, `s_until_with`, `scalared`, `sequence`, `shortint`, `shortreal`, `showcancelled`, `signed`, `small`, `solve`, `specify`, `specparam`, `static`, `string`, `strong`, `strong0`, `strong1`, `struct`, `super`, `supply0`, `supply1`, `sync_accept_on`, `sync_reject_on`, `table`, `tagged`, `task`, `this`, `throughout`, `time`, `timeprecision`, `timeunit`, `tran`, `tranif0`, `tranif1`, `tri`, `tri0`, `tri1`, `triand`, `trior`, `trireg`, `type`, `typedef`, `union`, `unique`, `unique0`, `unsigned`, `until`, `until_with`, `untyped`, `use`, `uwire`, `var`, `vectored`, `virtual`, `void`, `wait`, `wait_order`, `wand`, `weak`, `weak0`, `weak1`, `while`, `wildcard`, `wire`, `with`, `within`, `wor`, `xnor`, `xor`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, \"`__FILE__\", \"`__LINE__\", \"`begin_keywords\", \"`celldefine\", \"`default_nettype\", \"`define\", \"`else\", \"`elsif\", \"`end_keywords\", \"`endcelldefine\", \"`endif\", \"`ifdef\", \"`ifndef\", \"`include\", \"`line\", \"`nounconnected_drive\", \"`pragma\", \"`resetall\", \"`timescale\", \"`unconnected_drive\", \"`undef\", \"`undefineall\"), CommentPreproc, nil},\n-\t\t\t{Words(``, `\\b`, `$display`, `$displayb`, `$displayh`, `$displayo`, `$dumpall`, `$dumpfile`, `$dumpflush`, `$dumplimit`, `$dumpoff`, `$dumpon`, `$dumpports`, `$dumpportsall`, `$dumpportsflush`, `$dumpportslimit`, `$dumpportsoff`, `$dumpportson`, `$dumpvars`, `$fclose`, `$fdisplay`, `$fdisplayb`, `$fdisplayh`, `$fdisplayo`, `$feof`, `$ferror`, `$fflush`, `$fgetc`, `$fgets`, `$finish`, `$fmonitor`, `$fmonitorb`, `$fmonitorh`, `$fmonitoro`, `$fopen`, `$fread`, `$fscanf`, `$fseek`, `$fstrobe`, `$fstrobeb`, `$fstrobeh`, `$fstrobeo`, `$ftell`, `$fwrite`, `$fwriteb`, `$fwriteh`, `$fwriteo`, `$monitor`, `$monitorb`, `$monitorh`, `$monitoro`, `$monitoroff`, `$monitoron`, `$plusargs`, `$random`, `$readmemb`, `$readmemh`, `$rewind`, `$sformat`, `$sformatf`, `$sscanf`, `$strobe`, `$strobeb`, `$strobeh`, `$strobeo`, `$swrite`, `$swriteb`, `$swriteh`, `$swriteo`, `$test`, `$ungetc`, `$value$plusargs`, `$write`, `$writeb`, `$writeh`, `$writememb`, `$writememh`, `$writeo`), NameBuiltin, nil},\n-\t\t\t{`(class)(\\s+)`, ByGroups(Keyword, Text), Push(\"classname\")},\n-\t\t\t{Words(``, `\\b`, `byte`, `shortint`, `int`, `longint`, `integer`, `time`, `bit`, `logic`, `reg`, `supply0`, `supply1`, `tri`, `triand`, `trior`, `tri0`, `tri1`, `trireg`, `uwire`, `wire`, `wand`, `woshortreal`, `real`, `realtime`), KeywordType, nil},\n-\t\t\t{`[a-zA-Z_]\\w*:(?!:)`, NameLabel, nil},\n-\t\t\t{`\\$?[a-zA-Z_]\\w*`, Name, nil},\n-\t\t},\n-\t\t\"classname\": {\n-\t\t\t{`[a-zA-Z_]\\w*`, NameClass, Pop(1)},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`\\\\([\\\\abfnrtv\"\\']|x[a-fA-F0-9]{2,4}|[0-7]{1,3})`, LiteralStringEscape, nil},\n-\t\t\t{`[^\\\\\"\\n]+`, LiteralString, nil},\n-\t\t\t{`\\\\\\n`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralString, nil},\n-\t\t},\n-\t\t\"macro\": {\n-\t\t\t{`[^/\\n]+`, CommentPreproc, nil},\n-\t\t\t{`/[*](.|\\n)*?[*]/`, CommentMultiline, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, Pop(1)},\n-\t\t\t{`/`, CommentPreproc, nil},\n-\t\t\t{`(?<=\\\\)\\n`, CommentPreproc, nil},\n-\t\t\t{`\\n`, CommentPreproc, Pop(1)},\n-\t\t},\n-\t\t\"import\": {\n-\t\t\t{`[\\w:]+\\*?`, NameNamespace, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "ca05ed32d839d64521ba0ee62d0c5201ba598dd1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/tablegen.go",
      "status": "removed",
      "additions": 0,
      "deletions": 46,
      "changes": 46,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftablegen.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftablegen.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftablegen.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,46 +0,0 @@\n-package t\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// TableGen lexer.\n-var Tablegen = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"TableGen\",\n-\t\tAliases:   []string{\"tablegen\"},\n-\t\tFilenames: []string{\"*.td\"},\n-\t\tMimeTypes: []string{\"text/x-tablegen\"},\n-\t},\n-\ttablegenRules,\n-))\n-\n-func tablegenRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"macro\"),\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`c?\"[^\"]*?\"`, LiteralString, nil},\n-\t\t\tInclude(\"keyword\"),\n-\t\t\t{`\\$[_a-zA-Z][_\\w]*`, NameVariable, nil},\n-\t\t\t{`\\d*[_a-zA-Z][_\\w]*`, NameVariable, nil},\n-\t\t\t{`\\[\\{[\\w\\W]*?\\}\\]`, LiteralString, nil},\n-\t\t\t{`[+-]?\\d+|0x[\\da-fA-F]+|0b[01]+`, LiteralNumber, nil},\n-\t\t\t{`[=<>{}\\[\\]()*.,!:;]`, Punctuation, nil},\n-\t\t},\n-\t\t\"macro\": {\n-\t\t\t{`(#include\\s+)(\"[^\"]*\")`, ByGroups(CommentPreproc, LiteralString), nil},\n-\t\t\t{`^\\s*#(ifdef|ifndef)\\s+[_\\w][_\\w\\d]*`, CommentPreproc, nil},\n-\t\t\t{`^\\s*#define\\s+[_\\w][_\\w\\d]*`, CommentPreproc, nil},\n-\t\t\t{`^\\s*#endif`, CommentPreproc, nil},\n-\t\t},\n-\t\t\"whitespace\": {\n-\t\t\t{`(\\n|\\s)+`, Text, nil},\n-\t\t\t{`//.*?\\n`, Comment, nil},\n-\t\t},\n-\t\t\"keyword\": {\n-\t\t\t{Words(``, `\\b`, `bit`, `bits`, `class`, `code`, `dag`, `def`, `defm`, `field`, `foreach`, `in`, `int`, `let`, `list`, `multiclass`, `string`), Keyword, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "0164a73689734e4a72300453300f0c06a7609c51",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/tasm.go",
      "status": "removed",
      "additions": 0,
      "deletions": 65,
      "changes": 65,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftasm.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftasm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftasm.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,65 +0,0 @@\n-package t\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Tasm lexer.\n-var Tasm = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"TASM\",\n-\t\tAliases:         []string{\"tasm\"},\n-\t\tFilenames:       []string{\"*.asm\", \"*.ASM\", \"*.tasm\"},\n-\t\tMimeTypes:       []string{\"text/x-tasm\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\ttasmRules,\n-))\n-\n-func tasmRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`^\\s*%`, CommentPreproc, Push(\"preproc\")},\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`[@a-z$._?][\\w$.?#@~]*:`, NameLabel, nil},\n-\t\t\t{`BITS|USE16|USE32|SECTION|SEGMENT|ABSOLUTE|EXTERN|GLOBAL|ORG|ALIGN|STRUC|ENDSTRUC|ENDS|COMMON|CPU|GROUP|UPPERCASE|INCLUDE|EXPORT|LIBRARY|MODULE|PROC|ENDP|USES|ARG|DATASEG|UDATASEG|END|IDEAL|P386|MODEL|ASSUME|CODESEG|SIZE`, Keyword, Push(\"instruction-args\")},\n-\t\t\t{`([@a-z$._?][\\w$.?#@~]*)(\\s+)(db|dd|dw|T[A-Z][a-z]+)`, ByGroups(NameConstant, KeywordDeclaration, KeywordDeclaration), Push(\"instruction-args\")},\n-\t\t\t{`(?:res|d)[bwdqt]|times`, KeywordDeclaration, Push(\"instruction-args\")},\n-\t\t\t{`[@a-z$._?][\\w$.?#@~]*`, NameFunction, Push(\"instruction-args\")},\n-\t\t\t{`[\\r\\n]+`, Text, nil},\n-\t\t},\n-\t\t\"instruction-args\": {\n-\t\t\t{\"\\\"(\\\\\\\\\\\"|[^\\\"\\\\n])*\\\"|'(\\\\\\\\'|[^'\\\\n])*'|`(\\\\\\\\`|[^`\\\\n])*`\", LiteralString, nil},\n-\t\t\t{`(?:0x[0-9a-f]+|$0[0-9a-f]*|[0-9]+[0-9a-f]*h)`, LiteralNumberHex, nil},\n-\t\t\t{`[0-7]+q`, LiteralNumberOct, nil},\n-\t\t\t{`[01]+b`, LiteralNumberBin, nil},\n-\t\t\t{`[0-9]+\\.e?[0-9]+`, LiteralNumberFloat, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\tInclude(\"punctuation\"),\n-\t\t\t{`r[0-9][0-5]?[bwd]|[a-d][lh]|[er]?[a-d]x|[er]?[sb]p|[er]?[sd]i|[c-gs]s|st[0-7]|mm[0-7]|cr[0-4]|dr[0-367]|tr[3-7]`, NameBuiltin, nil},\n-\t\t\t{`[@a-z$._?][\\w$.?#@~]*`, NameVariable, nil},\n-\t\t\t{`(\\\\\\s*)(;.*)([\\r\\n])`, ByGroups(Text, CommentSingle, Text), nil},\n-\t\t\t{`[\\r\\n]+`, Text, Pop(1)},\n-\t\t\tInclude(\"whitespace\"),\n-\t\t},\n-\t\t\"preproc\": {\n-\t\t\t{`[^;\\n]+`, CommentPreproc, nil},\n-\t\t\t{`;.*?\\n`, CommentSingle, Pop(1)},\n-\t\t\t{`\\n`, CommentPreproc, Pop(1)},\n-\t\t},\n-\t\t\"whitespace\": {\n-\t\t\t{`[\\n\\r]`, Text, nil},\n-\t\t\t{`\\\\[\\n\\r]`, Text, nil},\n-\t\t\t{`[ \\t]+`, Text, nil},\n-\t\t\t{`;.*`, CommentSingle, nil},\n-\t\t},\n-\t\t\"punctuation\": {\n-\t\t\t{`[,():\\[\\]]+`, Punctuation, nil},\n-\t\t\t{`[&|^<>+*=/%~-]+`, Operator, nil},\n-\t\t\t{`[$]+`, KeywordConstant, nil},\n-\t\t\t{`seg|wrt|strict`, OperatorWord, nil},\n-\t\t\t{`byte|[dq]?word`, KeywordType, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "5f7030ab37f796ead6f65ae58c54de0964d537f1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/tcl.go",
      "status": "removed",
      "additions": 0,
      "deletions": 120,
      "changes": 120,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftcl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftcl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftcl.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,120 +0,0 @@\n-package t\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Tcl lexer.\n-var Tcl = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Tcl\",\n-\t\tAliases:   []string{\"tcl\"},\n-\t\tFilenames: []string{\"*.tcl\", \"*.rvt\"},\n-\t\tMimeTypes: []string{\"text/x-tcl\", \"text/x-script.tcl\", \"application/x-tcl\"},\n-\t},\n-\ttclRules,\n-))\n-\n-func tclRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"command\"),\n-\t\t\tInclude(\"basic\"),\n-\t\t\tInclude(\"data\"),\n-\t\t\t{`\\}`, Keyword, nil},\n-\t\t},\n-\t\t\"command\": {\n-\t\t\t{Words(`\\b`, `\\b`, `after`, `apply`, `array`, `break`, `catch`, `continue`, `elseif`, `else`, `error`, `eval`, `expr`, `for`, `foreach`, `global`, `if`, `namespace`, `proc`, `rename`, `return`, `set`, `switch`, `then`, `trace`, `unset`, `update`, `uplevel`, `upvar`, `variable`, `vwait`, `while`), Keyword, Push(\"params\")},\n-\t\t\t{Words(`\\b`, `\\b`, `append`, `bgerror`, `binary`, `cd`, `chan`, `clock`, `close`, `concat`, `dde`, `dict`, `encoding`, `eof`, `exec`, `exit`, `fblocked`, `fconfigure`, `fcopy`, `file`, `fileevent`, `flush`, `format`, `gets`, `glob`, `history`, `http`, `incr`, `info`, `interp`, `join`, `lappend`, `lassign`, `lindex`, `linsert`, `list`, `llength`, `load`, `loadTk`, `lrange`, `lrepeat`, `lreplace`, `lreverse`, `lsearch`, `lset`, `lsort`, `mathfunc`, `mathop`, `memory`, `msgcat`, `open`, `package`, `pid`, `pkg::create`, `pkg_mkIndex`, `platform`, `platform::shell`, `puts`, `pwd`, `re_syntax`, `read`, `refchan`, `regexp`, `registry`, `regsub`, `scan`, `seek`, `socket`, `source`, `split`, `string`, `subst`, `tell`, `time`, `tm`, `unknown`, `unload`), NameBuiltin, Push(\"params\")},\n-\t\t\t{`([\\w.-]+)`, NameVariable, Push(\"params\")},\n-\t\t\t{`#`, Comment, Push(\"comment\")},\n-\t\t},\n-\t\t\"command-in-brace\": {\n-\t\t\t{Words(`\\b`, `\\b`, `after`, `apply`, `array`, `break`, `catch`, `continue`, `elseif`, `else`, `error`, `eval`, `expr`, `for`, `foreach`, `global`, `if`, `namespace`, `proc`, `rename`, `return`, `set`, `switch`, `then`, `trace`, `unset`, `update`, `uplevel`, `upvar`, `variable`, `vwait`, `while`), Keyword, Push(\"params-in-brace\")},\n-\t\t\t{Words(`\\b`, `\\b`, `append`, `bgerror`, `binary`, `cd`, `chan`, `clock`, `close`, `concat`, `dde`, `dict`, `encoding`, `eof`, `exec`, `exit`, `fblocked`, `fconfigure`, `fcopy`, `file`, `fileevent`, `flush`, `format`, `gets`, `glob`, `history`, `http`, `incr`, `info`, `interp`, `join`, `lappend`, `lassign`, `lindex`, `linsert`, `list`, `llength`, `load`, `loadTk`, `lrange`, `lrepeat`, `lreplace`, `lreverse`, `lsearch`, `lset`, `lsort`, `mathfunc`, `mathop`, `memory`, `msgcat`, `open`, `package`, `pid`, `pkg::create`, `pkg_mkIndex`, `platform`, `platform::shell`, `puts`, `pwd`, `re_syntax`, `read`, `refchan`, `regexp`, `registry`, `regsub`, `scan`, `seek`, `socket`, `source`, `split`, `string`, `subst`, `tell`, `time`, `tm`, `unknown`, `unload`), NameBuiltin, Push(\"params-in-brace\")},\n-\t\t\t{`([\\w.-]+)`, NameVariable, Push(\"params-in-brace\")},\n-\t\t\t{`#`, Comment, Push(\"comment\")},\n-\t\t},\n-\t\t\"command-in-bracket\": {\n-\t\t\t{Words(`\\b`, `\\b`, `after`, `apply`, `array`, `break`, `catch`, `continue`, `elseif`, `else`, `error`, `eval`, `expr`, `for`, `foreach`, `global`, `if`, `namespace`, `proc`, `rename`, `return`, `set`, `switch`, `then`, `trace`, `unset`, `update`, `uplevel`, `upvar`, `variable`, `vwait`, `while`), Keyword, Push(\"params-in-bracket\")},\n-\t\t\t{Words(`\\b`, `\\b`, `append`, `bgerror`, `binary`, `cd`, `chan`, `clock`, `close`, `concat`, `dde`, `dict`, `encoding`, `eof`, `exec`, `exit`, `fblocked`, `fconfigure`, `fcopy`, `file`, `fileevent`, `flush`, `format`, `gets`, `glob`, `history`, `http`, `incr`, `info`, `interp`, `join`, `lappend`, `lassign`, `lindex`, `linsert`, `list`, `llength`, `load`, `loadTk`, `lrange`, `lrepeat`, `lreplace`, `lreverse`, `lsearch`, `lset`, `lsort`, `mathfunc`, `mathop`, `memory`, `msgcat`, `open`, `package`, `pid`, `pkg::create`, `pkg_mkIndex`, `platform`, `platform::shell`, `puts`, `pwd`, `re_syntax`, `read`, `refchan`, `regexp`, `registry`, `regsub`, `scan`, `seek`, `socket`, `source`, `split`, `string`, `subst`, `tell`, `time`, `tm`, `unknown`, `unload`), NameBuiltin, Push(\"params-in-bracket\")},\n-\t\t\t{`([\\w.-]+)`, NameVariable, Push(\"params-in-bracket\")},\n-\t\t\t{`#`, Comment, Push(\"comment\")},\n-\t\t},\n-\t\t\"command-in-paren\": {\n-\t\t\t{Words(`\\b`, `\\b`, `after`, `apply`, `array`, `break`, `catch`, `continue`, `elseif`, `else`, `error`, `eval`, `expr`, `for`, `foreach`, `global`, `if`, `namespace`, `proc`, `rename`, `return`, `set`, `switch`, `then`, `trace`, `unset`, `update`, `uplevel`, `upvar`, `variable`, `vwait`, `while`), Keyword, Push(\"params-in-paren\")},\n-\t\t\t{Words(`\\b`, `\\b`, `append`, `bgerror`, `binary`, `cd`, `chan`, `clock`, `close`, `concat`, `dde`, `dict`, `encoding`, `eof`, `exec`, `exit`, `fblocked`, `fconfigure`, `fcopy`, `file`, `fileevent`, `flush`, `format`, `gets`, `glob`, `history`, `http`, `incr`, `info`, `interp`, `join`, `lappend`, `lassign`, `lindex`, `linsert`, `list`, `llength`, `load`, `loadTk`, `lrange`, `lrepeat`, `lreplace`, `lreverse`, `lsearch`, `lset`, `lsort`, `mathfunc`, `mathop`, `memory`, `msgcat`, `open`, `package`, `pid`, `pkg::create`, `pkg_mkIndex`, `platform`, `platform::shell`, `puts`, `pwd`, `re_syntax`, `read`, `refchan`, `regexp`, `registry`, `regsub`, `scan`, `seek`, `socket`, `source`, `split`, `string`, `subst`, `tell`, `time`, `tm`, `unknown`, `unload`), NameBuiltin, Push(\"params-in-paren\")},\n-\t\t\t{`([\\w.-]+)`, NameVariable, Push(\"params-in-paren\")},\n-\t\t\t{`#`, Comment, Push(\"comment\")},\n-\t\t},\n-\t\t\"basic\": {\n-\t\t\t{`\\(`, Keyword, Push(\"paren\")},\n-\t\t\t{`\\[`, Keyword, Push(\"bracket\")},\n-\t\t\t{`\\{`, Keyword, Push(\"brace\")},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n-\t\t\t{`(eq|ne|in|ni)\\b`, OperatorWord, nil},\n-\t\t\t{`!=|==|<<|>>|<=|>=|&&|\\|\\||\\*\\*|[-+~!*/%<>&^|?:]`, Operator, nil},\n-\t\t},\n-\t\t\"data\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`0x[a-fA-F0-9]+`, LiteralNumberHex, nil},\n-\t\t\t{`0[0-7]+`, LiteralNumberOct, nil},\n-\t\t\t{`\\d+\\.\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`\\$([\\w.:-]+)`, NameVariable, nil},\n-\t\t\t{`([\\w.:-]+)`, Text, nil},\n-\t\t},\n-\t\t\"params\": {\n-\t\t\t{`;`, Keyword, Pop(1)},\n-\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t\t{`(else|elseif|then)\\b`, Keyword, nil},\n-\t\t\tInclude(\"basic\"),\n-\t\t\tInclude(\"data\"),\n-\t\t},\n-\t\t\"params-in-brace\": {\n-\t\t\t{`\\}`, Keyword, Push(\"#pop\", \"#pop\")},\n-\t\t\tInclude(\"params\"),\n-\t\t},\n-\t\t\"params-in-paren\": {\n-\t\t\t{`\\)`, Keyword, Push(\"#pop\", \"#pop\")},\n-\t\t\tInclude(\"params\"),\n-\t\t},\n-\t\t\"params-in-bracket\": {\n-\t\t\t{`\\]`, Keyword, Push(\"#pop\", \"#pop\")},\n-\t\t\tInclude(\"params\"),\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\\[`, LiteralStringDouble, Push(\"string-square\")},\n-\t\t\t{`(?s)(\\\\\\\\|\\\\[0-7]+|\\\\.|[^\"\\\\])`, LiteralStringDouble, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t},\n-\t\t\"string-square\": {\n-\t\t\t{`\\[`, LiteralStringDouble, Push(\"string-square\")},\n-\t\t\t{`(?s)(\\\\\\\\|\\\\[0-7]+|\\\\.|\\\\\\n|[^\\]\\\\])`, LiteralStringDouble, nil},\n-\t\t\t{`\\]`, LiteralStringDouble, Pop(1)},\n-\t\t},\n-\t\t\"brace\": {\n-\t\t\t{`\\}`, Keyword, Pop(1)},\n-\t\t\tInclude(\"command-in-brace\"),\n-\t\t\tInclude(\"basic\"),\n-\t\t\tInclude(\"data\"),\n-\t\t},\n-\t\t\"paren\": {\n-\t\t\t{`\\)`, Keyword, Pop(1)},\n-\t\t\tInclude(\"command-in-paren\"),\n-\t\t\tInclude(\"basic\"),\n-\t\t\tInclude(\"data\"),\n-\t\t},\n-\t\t\"bracket\": {\n-\t\t\t{`\\]`, Keyword, Pop(1)},\n-\t\t\tInclude(\"command-in-bracket\"),\n-\t\t\tInclude(\"basic\"),\n-\t\t\tInclude(\"data\"),\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`.*[^\\\\]\\n`, Comment, Pop(1)},\n-\t\t\t{`.*\\\\\\n`, Comment, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "fec0cb2ea8f519672832e76390611f1b0551cd7c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/tcsh.go",
      "status": "removed",
      "additions": 0,
      "deletions": 63,
      "changes": 63,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftcsh.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftcsh.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftcsh.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,63 +0,0 @@\n-package t\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Tcsh lexer.\n-var Tcsh = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Tcsh\",\n-\t\tAliases:   []string{\"tcsh\", \"csh\"},\n-\t\tFilenames: []string{\"*.tcsh\", \"*.csh\"},\n-\t\tMimeTypes: []string{\"application/x-csh\"},\n-\t},\n-\ttcshRules,\n-))\n-\n-func tcshRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"basic\"),\n-\t\t\t{`\\$\\(`, Keyword, Push(\"paren\")},\n-\t\t\t{`\\$\\{#?`, Keyword, Push(\"curly\")},\n-\t\t\t{\"`\", LiteralStringBacktick, Push(\"backticks\")},\n-\t\t\tInclude(\"data\"),\n-\t\t},\n-\t\t\"basic\": {\n-\t\t\t{`\\b(if|endif|else|while|then|foreach|case|default|continue|goto|breaksw|end|switch|endsw)\\s*\\b`, Keyword, nil},\n-\t\t\t{`\\b(alias|alloc|bg|bindkey|break|builtins|bye|caller|cd|chdir|complete|dirs|echo|echotc|eval|exec|exit|fg|filetest|getxvers|glob|getspath|hashstat|history|hup|inlib|jobs|kill|limit|log|login|logout|ls-F|migrate|newgrp|nice|nohup|notify|onintr|popd|printenv|pushd|rehash|repeat|rootnode|popd|pushd|set|shift|sched|setenv|setpath|settc|setty|setxvers|shift|source|stop|suspend|source|suspend|telltc|time|umask|unalias|uncomplete|unhash|universe|unlimit|unset|unsetenv|ver|wait|warp|watchlog|where|which)\\s*\\b`, NameBuiltin, nil},\n-\t\t\t{`#.*`, Comment, nil},\n-\t\t\t{`\\\\[\\w\\W]`, LiteralStringEscape, nil},\n-\t\t\t{`(\\b\\w+)(\\s*)(=)`, ByGroups(NameVariable, Text, Operator), nil},\n-\t\t\t{`[\\[\\]{}()=]+`, Operator, nil},\n-\t\t\t{`<<\\s*(\\'?)\\\\?(\\w+)[\\w\\W]+?\\2`, LiteralString, nil},\n-\t\t\t{`;`, Punctuation, nil},\n-\t\t},\n-\t\t\"data\": {\n-\t\t\t{`(?s)\"(\\\\\\\\|\\\\[0-7]+|\\\\.|[^\"\\\\])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`(?s)'(\\\\\\\\|\\\\[0-7]+|\\\\.|[^'\\\\])*'`, LiteralStringSingle, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{\"[^=\\\\s\\\\[\\\\]{}()$\\\"\\\\'`\\\\\\\\;#]+\", Text, nil},\n-\t\t\t{`\\d+(?= |\\Z)`, LiteralNumber, nil},\n-\t\t\t{`\\$#?(\\w+|.)`, NameVariable, nil},\n-\t\t},\n-\t\t\"curly\": {\n-\t\t\t{`\\}`, Keyword, Pop(1)},\n-\t\t\t{`:-`, Keyword, nil},\n-\t\t\t{`\\w+`, NameVariable, nil},\n-\t\t\t{\"[^}:\\\"\\\\'`$]+\", Punctuation, nil},\n-\t\t\t{`:`, Punctuation, nil},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"paren\": {\n-\t\t\t{`\\)`, Keyword, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"backticks\": {\n-\t\t\t{\"`\", LiteralStringBacktick, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "8db20b563db16b35ec42db175ae969f07fd4cc55",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/termcap.go",
      "status": "removed",
      "additions": 0,
      "deletions": 46,
      "changes": 46,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftermcap.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftermcap.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftermcap.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,46 +0,0 @@\n-package t\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Termcap lexer.\n-var Termcap = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Termcap\",\n-\t\tAliases:   []string{\"termcap\"},\n-\t\tFilenames: []string{\"termcap\", \"termcap.src\"},\n-\t\tMimeTypes: []string{},\n-\t},\n-\ttermcapRules,\n-))\n-\n-func termcapRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`^#.*$`, Comment, nil},\n-\t\t\t{`^[^\\s#:|]+`, NameTag, Push(\"names\")},\n-\t\t},\n-\t\t\"names\": {\n-\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t\t{`:`, Punctuation, Push(\"defs\")},\n-\t\t\t{`\\|`, Punctuation, nil},\n-\t\t\t{`[^:|]+`, NameAttribute, nil},\n-\t\t},\n-\t\t\"defs\": {\n-\t\t\t{`\\\\\\n[ \\t]*`, Text, nil},\n-\t\t\t{`\\n[ \\t]*`, Text, Pop(2)},\n-\t\t\t{`(#)([0-9]+)`, ByGroups(Operator, LiteralNumber), nil},\n-\t\t\t{`=`, Operator, Push(\"data\")},\n-\t\t\t{`:`, Punctuation, nil},\n-\t\t\t{`[^\\s:=#]+`, NameClass, nil},\n-\t\t},\n-\t\t\"data\": {\n-\t\t\t{`\\\\072`, Literal, nil},\n-\t\t\t{`:`, Punctuation, Pop(1)},\n-\t\t\t{`[^:\\\\]+`, Literal, nil},\n-\t\t\t{`.`, Literal, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "b3f27354999e30b949465567e6a5c34a8b48bbdf",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/terminfo.go",
      "status": "removed",
      "additions": 0,
      "deletions": 46,
      "changes": 46,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Fterminfo.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Fterminfo.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Fterminfo.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,46 +0,0 @@\n-package t\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Terminfo lexer.\n-var Terminfo = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Terminfo\",\n-\t\tAliases:   []string{\"terminfo\"},\n-\t\tFilenames: []string{\"terminfo\", \"terminfo.src\"},\n-\t\tMimeTypes: []string{},\n-\t},\n-\tterminfoRules,\n-))\n-\n-func terminfoRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`^#.*$`, Comment, nil},\n-\t\t\t{`^[^\\s#,|]+`, NameTag, Push(\"names\")},\n-\t\t},\n-\t\t\"names\": {\n-\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t\t{`(,)([ \\t]*)`, ByGroups(Punctuation, Text), Push(\"defs\")},\n-\t\t\t{`\\|`, Punctuation, nil},\n-\t\t\t{`[^,|]+`, NameAttribute, nil},\n-\t\t},\n-\t\t\"defs\": {\n-\t\t\t{`\\n[ \\t]+`, Text, nil},\n-\t\t\t{`\\n`, Text, Pop(2)},\n-\t\t\t{`(#)([0-9]+)`, ByGroups(Operator, LiteralNumber), nil},\n-\t\t\t{`=`, Operator, Push(\"data\")},\n-\t\t\t{`(,)([ \\t]*)`, ByGroups(Punctuation, Text), nil},\n-\t\t\t{`[^\\s,=#]+`, NameClass, nil},\n-\t\t},\n-\t\t\"data\": {\n-\t\t\t{`\\\\[,\\\\]`, Literal, nil},\n-\t\t\t{`(,)([ \\t]*)`, ByGroups(Punctuation, Text), Pop(1)},\n-\t\t\t{`[^\\\\,]+`, Literal, nil},\n-\t\t\t{`.`, Literal, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "c9c0905de5e0fff98e8e45038ce1ffeb1911df9a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/terraform.go",
      "status": "removed",
      "additions": 0,
      "deletions": 64,
      "changes": 64,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Fterraform.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Fterraform.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Fterraform.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,64 +0,0 @@\n-package t\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Terraform lexer.\n-var Terraform = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Terraform\",\n-\t\tAliases:   []string{\"terraform\", \"tf\"},\n-\t\tFilenames: []string{\"*.tf\"},\n-\t\tMimeTypes: []string{\"application/x-tf\", \"application/x-terraform\"},\n-\t},\n-\tterraformRules,\n-))\n-\n-func terraformRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[\\[\\](),.{}]`, Punctuation, nil},\n-\t\t\t{`-?[0-9]+`, LiteralNumber, nil},\n-\t\t\t{`=>`, Punctuation, nil},\n-\t\t\t{Words(``, `\\b`, `true`, `false`), KeywordConstant, nil},\n-\t\t\t{`/(?s)\\*(((?!\\*/).)*)\\*/`, CommentMultiline, nil},\n-\t\t\t{`\\s*(#|//).*\\n`, CommentSingle, nil},\n-\t\t\t{`([a-zA-Z]\\w*)(\\s*)(=(?!>))`, ByGroups(NameAttribute, Text, Text), nil},\n-\t\t\t{Words(`^\\s*`, `\\b`, `variable`, `data`, `resource`, `provider`, `provisioner`, `module`, `output`), KeywordReserved, nil},\n-\t\t\t{Words(``, `\\b`, `for`, `in`), Keyword, nil},\n-\t\t\t{Words(``, ``, `count`, `data`, `var`, `module`, `each`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\b`, `abs`, `ceil`, `floor`, `log`, `max`, `min`, `parseint`, `pow`, `signum`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\b`, `chomp`, `format`, `formatlist`, `indent`, `join`, `lower`, `regex`, `regexall`, `replace`, `split`, `strrev`, `substr`, `title`, `trim`, `trimprefix`, `trimsuffix`, `trimspace`, `upper`), NameBuiltin, nil},\n-\t\t\t{Words(`[^.]`, `\\b`, `chunklist`, `coalesce`, `coalescelist`, `compact`, `concat`, `contains`, `distinct`, `element`, `flatten`, `index`, `keys`, `length`, `list`, `lookup`, `map`, `matchkeys`, `merge`, `range`, `reverse`, `setintersection`, `setproduct`, `setsubtract`, `setunion`, `slice`, `sort`, `transpose`, `values`, `zipmap`), NameBuiltin, nil},\n-\t\t\t{Words(`[^.]`, `\\b`, `base64decode`, `base64encode`, `base64gzip`, `csvdecode`, `jsondecode`, `jsonencode`, `urlencode`, `yamldecode`, `yamlencode`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\b`, `abspath`, `dirname`, `pathexpand`, `basename`, `file`, `fileexists`, `fileset`, `filebase64`, `templatefile`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\b`, `formatdate`, `timeadd`, `timestamp`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\b`, `base64sha256`, `base64sha512`, `bcrypt`, `filebase64sha256`, `filebase64sha512`, `filemd5`, `filesha1`, `filesha256`, `filesha512`, `md5`, `rsadecrypt`, `sha1`, `sha256`, `sha512`, `uuid`, `uuidv5`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\b`, `cidrhost`, `cidrnetmask`, `cidrsubnet`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\b`, `can`, `tobool`, `tolist`, `tomap`, `tonumber`, `toset`, `tostring`, `try`), NameBuiltin, nil},\n-\t\t\t{`=(?!>)|\\+|-|\\*|\\/|:|!|%|>|<(?!<)|>=|<=|==|!=|&&|\\||\\?`, Operator, nil},\n-\t\t\t{`\\n|\\s+|\\\\\\n`, Text, nil},\n-\t\t\t{`[a-zA-Z]\\w*`, NameOther, nil},\n-\t\t\t{`\"`, LiteralStringDouble, Push(\"string\")},\n-\t\t\t{`(?s)(<<-?)(\\w+)(\\n\\s*(?:(?!\\2).)*\\s*\\n\\s*)(\\2)`, ByGroups(Operator, Operator, String, Operator), nil},\n-\t\t},\n-\t\t\"declaration\": {\n-\t\t\t{`(\\s*)(\"(?:\\\\\\\\|\\\\\"|[^\"])*\")(\\s*)`, ByGroups(Text, NameVariable, Text), nil},\n-\t\t\t{`\\{`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t\t{`\\\\\\\\`, LiteralStringDouble, nil},\n-\t\t\t{`\\\\\\\\\"`, LiteralStringDouble, nil},\n-\t\t\t{`\\$\\{`, LiteralStringInterpol, Push(\"interp-inside\")},\n-\t\t\t{`\\$`, LiteralStringDouble, nil},\n-\t\t\t{`[^\"\\\\\\\\$]+`, LiteralStringDouble, nil},\n-\t\t},\n-\t\t\"interp-inside\": {\n-\t\t\t{`\\}`, LiteralStringInterpol, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "f9413b370b199ed5ef100a43eb658d937c3cc03a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/tex.go",
      "status": "removed",
      "additions": 0,
      "deletions": 60,
      "changes": 60,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftex.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftex.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftex.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,60 +0,0 @@\n-package t\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Tex lexer.\n-var TeX = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"TeX\",\n-\t\tAliases:   []string{\"tex\", \"latex\"},\n-\t\tFilenames: []string{\"*.tex\", \"*.aux\", \"*.toc\"},\n-\t\tMimeTypes: []string{\"text/x-tex\", \"text/x-latex\"},\n-\t},\n-\ttexRules,\n-))\n-\n-func texRules() Rules {\n-\treturn Rules{\n-\t\t\"general\": {\n-\t\t\t{`%.*?\\n`, Comment, nil},\n-\t\t\t{`[{}]`, NameBuiltin, nil},\n-\t\t\t{`[&_^]`, NameBuiltin, nil},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\t{`\\\\\\[`, LiteralStringBacktick, Push(\"displaymath\")},\n-\t\t\t{`\\\\\\(`, LiteralString, Push(\"inlinemath\")},\n-\t\t\t{`\\$\\$`, LiteralStringBacktick, Push(\"displaymath\")},\n-\t\t\t{`\\$`, LiteralString, Push(\"inlinemath\")},\n-\t\t\t{`\\\\([a-zA-Z]+|.)`, Keyword, Push(\"command\")},\n-\t\t\t{`\\\\$`, Keyword, nil},\n-\t\t\tInclude(\"general\"),\n-\t\t\t{`[^\\\\$%&_^{}]+`, Text, nil},\n-\t\t},\n-\t\t\"math\": {\n-\t\t\t{`\\\\([a-zA-Z]+|.)`, NameVariable, nil},\n-\t\t\tInclude(\"general\"),\n-\t\t\t{`[0-9]+`, LiteralNumber, nil},\n-\t\t\t{`[-=!+*/()\\[\\]]`, Operator, nil},\n-\t\t\t{`[^=!+*/()\\[\\]\\\\$%&_^{}0-9-]+`, NameBuiltin, nil},\n-\t\t},\n-\t\t\"inlinemath\": {\n-\t\t\t{`\\\\\\)`, LiteralString, Pop(1)},\n-\t\t\t{`\\$`, LiteralString, Pop(1)},\n-\t\t\tInclude(\"math\"),\n-\t\t},\n-\t\t\"displaymath\": {\n-\t\t\t{`\\\\\\]`, LiteralString, Pop(1)},\n-\t\t\t{`\\$\\$`, LiteralString, Pop(1)},\n-\t\t\t{`\\$`, NameBuiltin, nil},\n-\t\t\tInclude(\"math\"),\n-\t\t},\n-\t\t\"command\": {\n-\t\t\t{`\\[.*?\\]`, NameAttribute, nil},\n-\t\t\t{`\\*`, Keyword, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "61669d71242d46f1b6a7cbe69da6ca8c0c8a506c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/thrift.go",
      "status": "removed",
      "additions": 0,
      "deletions": 77,
      "changes": 77,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Fthrift.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Fthrift.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Fthrift.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,77 +0,0 @@\n-package t\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Thrift lexer.\n-var Thrift = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Thrift\",\n-\t\tAliases:   []string{\"thrift\"},\n-\t\tFilenames: []string{\"*.thrift\"},\n-\t\tMimeTypes: []string{\"application/x-thrift\"},\n-\t},\n-\tthriftRules,\n-))\n-\n-func thriftRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\tInclude(\"comments\"),\n-\t\t\t{`\"`, LiteralStringDouble, Combined(\"stringescape\", \"dqs\")},\n-\t\t\t{`\\'`, LiteralStringSingle, Combined(\"stringescape\", \"sqs\")},\n-\t\t\t{`(namespace)(\\s+)`, ByGroups(KeywordNamespace, TextWhitespace), Push(\"namespace\")},\n-\t\t\t{`(enum|union|struct|service|exception)(\\s+)`, ByGroups(KeywordDeclaration, TextWhitespace), Push(\"class\")},\n-\t\t\t{`((?:(?:[^\\W\\d]|\\$)[\\w.\\[\\]$<>]*\\s+)+?)((?:[^\\W\\d]|\\$)[\\w$]*)(\\s*)(\\()`, ByGroups(UsingSelf(\"root\"), NameFunction, Text, Operator), nil},\n-\t\t\tInclude(\"keywords\"),\n-\t\t\tInclude(\"numbers\"),\n-\t\t\t{`[&=]`, Operator, nil},\n-\t\t\t{`[:;,{}()<>\\[\\]]`, Punctuation, nil},\n-\t\t\t{`[a-zA-Z_](\\.\\w|\\w)*`, Name, nil},\n-\t\t},\n-\t\t\"whitespace\": {\n-\t\t\t{`\\n`, TextWhitespace, nil},\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t},\n-\t\t\"comments\": {\n-\t\t\t{`#.*$`, Comment, nil},\n-\t\t\t{`//.*?\\n`, Comment, nil},\n-\t\t\t{`/\\*[\\w\\W]*?\\*/`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"stringescape\": {\n-\t\t\t{`\\\\([\\\\nrt\"\\'])`, LiteralStringEscape, nil},\n-\t\t},\n-\t\t\"dqs\": {\n-\t\t\t{`\"`, LiteralStringDouble, Pop(1)},\n-\t\t\t{`[^\\\\\"\\n]+`, LiteralStringDouble, nil},\n-\t\t},\n-\t\t\"sqs\": {\n-\t\t\t{`'`, LiteralStringSingle, Pop(1)},\n-\t\t\t{`[^\\\\\\'\\n]+`, LiteralStringSingle, nil},\n-\t\t},\n-\t\t\"namespace\": {\n-\t\t\t{`[a-z*](\\.\\w|\\w)*`, NameNamespace, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"class\": {\n-\t\t\t{`[a-zA-Z_]\\w*`, NameClass, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"keywords\": {\n-\t\t\t{`(async|oneway|extends|throws|required|optional)\\b`, Keyword, nil},\n-\t\t\t{`(true|false)\\b`, KeywordConstant, nil},\n-\t\t\t{`(const|typedef)\\b`, KeywordDeclaration, nil},\n-\t\t\t{Words(``, `\\b`, `cpp_namespace`, `cpp_include`, `cpp_type`, `java_package`, `cocoa_prefix`, `csharp_namespace`, `delphi_namespace`, `php_namespace`, `py_module`, `perl_package`, `ruby_namespace`, `smalltalk_category`, `smalltalk_prefix`, `xsd_all`, `xsd_optional`, `xsd_nillable`, `xsd_namespace`, `xsd_attrs`, `include`), KeywordNamespace, nil},\n-\t\t\t{Words(``, `\\b`, `void`, `bool`, `byte`, `i16`, `i32`, `i64`, `double`, `string`, `binary`, `map`, `list`, `set`, `slist`, `senum`), KeywordType, nil},\n-\t\t\t{Words(`\\b`, `\\b`, `BEGIN`, `END`, `__CLASS__`, `__DIR__`, `__FILE__`, `__FUNCTION__`, `__LINE__`, `__METHOD__`, `__NAMESPACE__`, `abstract`, `alias`, `and`, `args`, `as`, `assert`, `begin`, `break`, `case`, `catch`, `class`, `clone`, `continue`, `declare`, `def`, `default`, `del`, `delete`, `do`, `dynamic`, `elif`, `else`, `elseif`, `elsif`, `end`, `enddeclare`, `endfor`, `endforeach`, `endif`, `endswitch`, `endwhile`, `ensure`, `except`, `exec`, `finally`, `float`, `for`, `foreach`, `function`, `global`, `goto`, `if`, `implements`, `import`, `in`, `inline`, `instanceof`, `interface`, `is`, `lambda`, `module`, `native`, `new`, `next`, `nil`, `not`, `or`, `pass`, `public`, `print`, `private`, `protected`, `raise`, `redo`, `rescue`, `retry`, `register`, `return`, `self`, `sizeof`, `static`, `super`, `switch`, `synchronized`, `then`, `this`, `throw`, `transient`, `try`, `undef`, `unless`, `unsigned`, `until`, `use`, `var`, `virtual`, `volatile`, `when`, `while`, `with`, `xor`, `yield`), KeywordReserved, nil},\n-\t\t},\n-\t\t\"numbers\": {\n-\t\t\t{`[+-]?(\\d+\\.\\d+([eE][+-]?\\d+)?|\\.?\\d+[eE][+-]?\\d+)`, LiteralNumberFloat, nil},\n-\t\t\t{`[+-]?0x[0-9A-Fa-f]+`, LiteralNumberHex, nil},\n-\t\t\t{`[+-]?[0-9]+`, LiteralNumberInteger, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "18a44c5b255606b36d7d6e207e07e905b095ff91",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/toml.go",
      "status": "removed",
      "additions": 0,
      "deletions": 33,
      "changes": 33,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftoml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftoml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftoml.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,33 +0,0 @@\n-package t\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-var TOML = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"TOML\",\n-\t\tAliases:   []string{\"toml\"},\n-\t\tFilenames: []string{\"*.toml\"},\n-\t\tMimeTypes: []string{\"text/x-toml\"},\n-\t},\n-\ttomlRules,\n-))\n-\n-func tomlRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`#.*`, Comment, nil},\n-\t\t\t{Words(``, `\\b`, `true`, `false`), KeywordConstant, nil},\n-\t\t\t{`\\d\\d\\d\\d-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d\\+)?(Z|[+-]\\d{2}:\\d{2})`, LiteralDate, nil},\n-\t\t\t{`[+-]?[0-9](_?\\d)*\\.\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`[+-]?[0-9](_?\\d)*`, LiteralNumberInteger, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, StringDouble, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, StringSingle, nil},\n-\t\t\t{`[.,=\\[\\]{}]`, Punctuation, nil},\n-\t\t\t{`[A-Za-z0-9_-]+`, NameOther, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "bf303c648d4cf8228dd516d59993616e3c98a92a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/tradingview.go",
      "status": "removed",
      "additions": 0,
      "deletions": 44,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftradingview.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftradingview.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftradingview.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,44 +0,0 @@\n-package t\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// TradingView lexer\n-var TradingView = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"TradingView\",\n-\t\tAliases:   []string{\"tradingview\", \"tv\"},\n-\t\tFilenames: []string{\"*.tv\"},\n-\t\tMimeTypes: []string{\"text/x-tradingview\"},\n-\t\tDotAll:    true,\n-\t\tEnsureNL:  true,\n-\t},\n-\ttradingViewRules,\n-))\n-\n-func tradingViewRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[^\\S\\n]+|\\n|[()]`, Text, nil},\n-\t\t\t{`(//.*?)(\\n)`, ByGroups(CommentSingle, Text), nil},\n-\t\t\t{`>=|<=|==|!=|>|<|\\?|-|\\+|\\*|\\/|%|\\[|\\]`, Operator, nil},\n-\t\t\t{`[:,.]`, Punctuation, nil},\n-\t\t\t{`=`, KeywordPseudo, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"\\n])*[\"\\n]`, LiteralString, nil},\n-\t\t\t{`'\\\\.'|'[^\\\\]'`, LiteralString, nil},\n-\t\t\t{`[0-9](\\.[0-9]*)?([eE][+-][0-9]+)?`, LiteralNumber, nil},\n-\t\t\t{`#[a-fA-F0-9]{8}|#[a-fA-F0-9]{6}|#[a-fA-F0-9]{3}`, LiteralStringOther, nil},\n-\t\t\t{`(abs|acos|alertcondition|alma|asin|atan|atr|avg|barcolor|barssince|bgcolor|cci|ceil|change|cog|color\\.new|correlation|cos|crossover|crossunder|cum|dev|ema|exp|falling|fill|fixnan|floor|heikinashi|highest|highestbars|hline|iff|kagi|label\\.(delete|get_text|get_x|get_y|new|set_color|set_size|set_style|set_text|set_textcolor|set_x|set_xloc|set_xy|set_y|set_yloc)|line\\.(new|delete|get_x1|get_x2|get_y1|get_y2|set_color|set_width|set_style|set_extend|set_xy1|set_xy2|set_x1|set_x2|set_y1|set_y2|set_xloc)|linebreak|linreg|log|log10|lowest|lowestbars|macd|max|max_bars_back|min|mom|nz|percentile_(linear_interpolation|nearest_rank)|percentrank|pivothigh|pivotlow|plot|plotarrow|plotbar|plotcandle|plotchar|plotshape|pointfigure|pow|renko|rising|rma|roc|round|rsi|sar|security|sign|sin|sma|sqrt|stdev|stoch|study|sum|swma|tan|timestamp|tostring|tsi|valuewhen|variance|vwma|wma|strategy\\.(cancel|cancel_all|close|close_all|entry|exit|order|risk\\.(allow_entry_in|max_cons_loss_days|max_drawdown|max_intraday_filled_orders|max_intraday_loss|max_position_size)))\\b`, NameFunction, nil},\n-\t\t\t{`\\b(bool|color|cross|dayofmonth|dayofweek|float|hour|input|int|label|line|minute|month|na|offset|second|strategy|string|tickerid|time|tr|vwap|weekofyear|year)(\\()`, ByGroups(NameFunction, Text), nil}, // functions that can also be variable\n-\t\t\t{`(accdist|adjustment\\.(dividends|none|splits)|aqua|area|areabr|bar_index|black|blue|bool|circles|close|columns|currency\\.(AUD|CAD|CHF|EUR|GBP|HKD|JPY|NOK|NONE|NZD|RUB|SEK|SGD|TRY|USD|ZAR)|color\\.(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)|dashed|dotted|dayofweek\\.(monday|tuesday|wednesday|thursday|friday|saturday|sunday)|extend\\.(both|left|right|none)|float|format\\.(inherit|price|volume)|friday|fuchsia|gray|green|high|histogram|hl2|hlc3|hline\\.style_(dotted|solid|dashed)|input\\.(bool|float|integer|resolution|session|source|string|symbol)|integer|interval|isdaily|isdwm|isintraday|ismonthly|isweekly|label\\.style_(arrowdown|arrowup|circle|cross|diamond|flag|labeldown|labelup|none|square|triangledown|triangleup|xcross)|lime|line\\.style_(dashed|dotted|solid|arrow_both|arrow_left|arrow_right)|linebr|location\\.(abovebar|absolute|belowbar|bottom|top)|low|maroon|monday|n|navy|ohlc4|olive|open|orange|period|plot\\.style_(area|areabr|circles|columns|cross|histogram|line|linebr|stepline)|purple|red|resolution|saturday|scale\\.(left|none|right)|session|session\\.(extended|regular)|silver|size\\.(auto|huge|large|normal|small|tiny)|solid|source|stepline|string|sunday|symbol|syminfo\\.(mintick|pointvalue|prefix|root|session|ticker|tickerid|timezone)|teal|thursday|ticker|timeframe\\.(isdaily|isdwm|isintraday|ismonthly|isweekly|multiplier|period)|timenow|tuesday|volume|wednesday|white|yellow|strategy\\.(cash|closedtrades|commission\\.(cash_per_contract|cash_per_order|percent)|direction\\.(all|long|short)|equity|eventrades|fixed|grossloss|grossprofit|initial_capital|long|losstrades|max_contracts_held_(all|long|short)|max_drawdown|netprofit|oca\\.(cancel|none|reduce)|openprofit|opentrades|percent_of_equity|position_avg_price|position_entry_name|position_size|short|wintrades)|shape\\.(arrowdown|arrowup|circle|cross|diamond|flag|labeldown|labelup|square|triangledown|triangleup|xcross)|barstate\\.is(first|history|last|new|realtime)|barmerge\\.(gaps_on|gaps_off|lookahead_on|lookahead_off)|xloc\\.bar_(index|time)|yloc\\.(abovebar|belowbar|price))\\b`, NameVariable, nil},\n-\t\t\t{`(cross|dayofmonth|dayofweek|hour|minute|month|na|second|tickerid|time|tr|vwap|weekofyear|year)(\\b[^\\(])`, ByGroups(NameVariable, Text), nil}, // variables that can also be function\n-\t\t\t{`(int|float|bool|color|string|label|line)(\\b[^\\(=.])`, ByGroups(KeywordType, Text), nil},                                                      // types that can also be a function\n-\t\t\t{`(var)\\b`, KeywordType, nil},\n-\t\t\t{`(true|false)\\b`, KeywordConstant, nil},\n-\t\t\t{`(and|or|not|if|else|for|to)\\b`, OperatorWord, nil},\n-\t\t\t{`@?[_a-zA-Z]\\w*`, Text, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "e5beb066968c000d3181d5ee9ca1ea46db0577d1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/transactsql.go",
      "status": "removed",
      "additions": 0,
      "deletions": 64,
      "changes": 64,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftransactsql.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftransactsql.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftransactsql.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,64 +0,0 @@\n-package t\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// TransactSQL lexer.\n-var TransactSQL = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"Transact-SQL\",\n-\t\tAliases:         []string{\"tsql\", \"t-sql\"},\n-\t\tMimeTypes:       []string{\"text/x-tsql\"},\n-\t\tNotMultiline:    true,\n-\t\tCaseInsensitive: true,\n-\t},\n-\ttransactSQLRules,\n-))\n-\n-func transactSQLRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t\t{`--(?m).*?$\\n?`, CommentSingle, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"multiline-comments\")},\n-\t\t\t{`'`, LiteralStringSingle, Push(\"string\")},\n-\t\t\t{`\"`, LiteralStringName, Push(\"quoted-ident\")},\n-\t\t\t{Words(``, ``, `!<`, `!=`, `!>`, `<`, `<=`, `<>`, `=`, `>`, `>=`, `+`, `+=`, `-`, `-=`, `*`, `*=`, `/`, `/=`, `%`, `%=`, `&`, `&=`, `|`, `|=`, `^`, `^=`, `~`, `::`), Operator, nil},\n-\t\t\t{Words(``, `\\b`, `all`, `and`, `any`, `between`, `except`, `exists`, `in`, `intersect`, `like`, `not`, `or`, `some`, `union`), OperatorWord, nil},\n-\t\t\t{Words(``, `\\b`, `bigint`, `binary`, `bit`, `char`, `cursor`, `date`, `datetime`, `datetime2`, `datetimeoffset`, `decimal`, `float`, `hierarchyid`, `image`, `int`, `money`, `nchar`, `ntext`, `numeric`, `nvarchar`, `real`, `smalldatetime`, `smallint`, `smallmoney`, `sql_variant`, `table`, `text`, `time`, `timestamp`, `tinyint`, `uniqueidentifier`, `varbinary`, `varchar`, `xml`), NameClass, nil},\n-\t\t\t{Words(``, `\\b`, `$partition`, `abs`, `acos`, `app_name`, `applock_mode`, `applock_test`, `ascii`, `asin`, `assemblyproperty`, `atan`, `atn2`, `avg`, `binary_checksum`, `cast`, `ceiling`, `certencoded`, `certprivatekey`, `char`, `charindex`, `checksum`, `checksum_agg`, `choose`, `col_length`, `col_name`, `columnproperty`, `compress`, `concat`, `connectionproperty`, `context_info`, `convert`, `cos`, `cot`, `count`, `count_big`, `current_request_id`, `current_timestamp`, `current_transaction_id`, `current_user`, `cursor_status`, `database_principal_id`, `databasepropertyex`, `dateadd`, `datediff`, `datediff_big`, `datefromparts`, `datename`, `datepart`, `datetime2fromparts`, `datetimefromparts`, `datetimeoffsetfromparts`, `day`, `db_id`, `db_name`, `decompress`, `degrees`, `dense_rank`, `difference`, `eomonth`, `error_line`, `error_message`, `error_number`, `error_procedure`, `error_severity`, `error_state`, `exp`, `file_id`, `file_idex`, `file_name`, `filegroup_id`, `filegroup_name`, `filegroupproperty`, `fileproperty`, `floor`, `format`, `formatmessage`, `fulltextcatalogproperty`, `fulltextserviceproperty`, `get_filestream_transaction_context`, `getansinull`, `getdate`, `getutcdate`, `grouping`, `grouping_id`, `has_perms_by_name`, `host_id`, `host_name`, `iif`, `index_col`, `indexkey_property`, `indexproperty`, `is_member`, `is_rolemember`, `is_srvrolemember`, `isdate`, `isjson`, `isnull`, `isnumeric`, `json_modify`, `json_query`, `json_value`, `left`, `len`, `log`, `log10`, `lower`, `ltrim`, `max`, `min`, `min_active_rowversion`, `month`, `nchar`, `newid`, `newsequentialid`, `ntile`, `object_definition`, `object_id`, `object_name`, `object_schema_name`, `objectproperty`, `objectpropertyex`, `opendatasource`, `openjson`, `openquery`, `openrowset`, `openxml`, `original_db_name`, `original_login`, `parse`, `parsename`, `patindex`, `permissions`, `pi`, `power`, `pwdcompare`, `pwdencrypt`, `quotename`, `radians`, `rand`, `rank`, `replace`, `replicate`, `reverse`, `right`, `round`, `row_number`, `rowcount_big`, `rtrim`, `schema_id`, `schema_name`, `scope_identity`, `serverproperty`, `session_context`, `session_user`, `sign`, `sin`, `smalldatetimefromparts`, `soundex`, `sp_helplanguage`, `space`, `sqrt`, `square`, `stats_date`, `stdev`, `stdevp`, `str`, `string_escape`, `string_split`, `stuff`, `substring`, `sum`, `suser_id`, `suser_name`, `suser_sid`, `suser_sname`, `switchoffset`, `sysdatetime`, `sysdatetimeoffset`, `system_user`, `sysutcdatetime`, `tan`, `textptr`, `textvalid`, `timefromparts`, `todatetimeoffset`, `try_cast`, `try_convert`, `try_parse`, `type_id`, `type_name`, `typeproperty`, `unicode`, `upper`, `user_id`, `user_name`, `var`, `varp`, `xact_state`, `year`), NameFunction, nil},\n-\t\t\t{`(goto)(\\s+)(\\w+\\b)`, ByGroups(Keyword, TextWhitespace, NameLabel), nil},\n-\t\t\t{Words(``, `\\b`, `absolute`, `action`, `ada`, `add`, `admin`, `after`, `aggregate`, `alias`, `all`, `allocate`, `alter`, `and`, `any`, `are`, `array`, `as`, `asc`, `asensitive`, `assertion`, `asymmetric`, `at`, `atomic`, `authorization`, `avg`, `backup`, `before`, `begin`, `between`, `binary`, `bit`, `bit_length`, `blob`, `boolean`, `both`, `breadth`, `break`, `browse`, `bulk`, `by`, `call`, `called`, `cardinality`, `cascade`, `cascaded`, `case`, `cast`, `catalog`, `catch`, `char`, `char_length`, `character`, `character_length`, `check`, `checkpoint`, `class`, `clob`, `close`, `clustered`, `coalesce`, `collate`, `collation`, `collect`, `column`, `commit`, `completion`, `compute`, `condition`, `connect`, `connection`, `constraint`, `constraints`, `constructor`, `contains`, `containstable`, `continue`, `convert`, `corr`, `corresponding`, `count`, `covar_pop`, `covar_samp`, `create`, `cross`, `cube`, `cume_dist`, `current`, `current_catalog`, `current_date`, `current_default_transform_group`, `current_path`, `current_role`, `current_schema`, `current_time`, `current_timestamp`, `current_transform_group_for_type`, `current_user`, `cursor`, `cycle`, `data`, `database`, `date`, `day`, `dbcc`, `deallocate`, `dec`, `decimal`, `declare`, `default`, `deferrable`, `deferred`, `delete`, `deny`, `depth`, `deref`, `desc`, `describe`, `descriptor`, `destroy`, `destructor`, `deterministic`, `diagnostics`, `dictionary`, `disconnect`, `disk`, `distinct`, `distributed`, `domain`, `double`, `drop`, `dump`, `dynamic`, `each`, `element`, `else`, `end`, `end-exec`, `equals`, `errlvl`, `escape`, `every`, `except`, `exception`, `exec`, `execute`, `exists`, `exit`, `external`, `extract`, `false`, `fetch`, `file`, `fillfactor`, `filter`, `first`, `float`, `for`, `foreign`, `fortran`, `found`, `free`, `freetext`, `freetexttable`, `from`, `full`, `fulltexttable`, `function`, `fusion`, `general`, `get`, `global`, `go`, `goto`, `grant`, `group`, `grouping`, `having`, `hold`, `holdlock`, `host`, `hour`, `identity`, `identity_insert`, `identitycol`, `if`, `ignore`, `immediate`, `in`, `include`, `index`, `indicator`, `initialize`, `initially`, `inner`, `inout`, `input`, `insensitive`, `insert`, `int`, `integer`, `intersect`, `intersection`, `interval`, `into`, `is`, `isolation`, `iterate`, `join`, `key`, `kill`, `language`, `large`, `last`, `lateral`, `leading`, `left`, `less`, `level`, `like`, `like_regex`, `limit`, `lineno`, `ln`, `load`, `local`, `localtime`, `localtimestamp`, `locator`, `lower`, `map`, `match`, `max`, `member`, `merge`, `method`, `min`, `minute`, `mod`, `modifies`, `modify`, `module`, `month`, `multiset`, `names`, `national`, `natural`, `nchar`, `nclob`, `new`, `next`, `no`, `nocheck`, `nonclustered`, `none`, `normalize`, `not`, `null`, `nullif`, `numeric`, `object`, `occurrences_regex`, `octet_length`, `of`, `off`, `offsets`, `old`, `on`, `only`, `open`, `opendatasource`, `openquery`, `openrowset`, `openxml`, `operation`, `option`, `or`, `order`, `ordinality`, `out`, `outer`, `output`, `over`, `overlaps`, `overlay`, `pad`, `parameter`, `parameters`, `partial`, `partition`, `pascal`, `path`, `percent`, `percent_rank`, `percentile_cont`, `percentile_disc`, `pivot`, `plan`, `position`, `position_regex`, `postfix`, `precision`, `prefix`, `preorder`, `prepare`, `preserve`, `primary`, `print`, `prior`, `privileges`, `proc`, `procedure`, `public`, `raiserror`, `range`, `read`, `reads`, `readtext`, `real`, `reconfigure`, `recursive`, `ref`, `references`, `referencing`, `regr_avgx`, `regr_avgy`, `regr_count`, `regr_intercept`, `regr_r2`, `regr_slope`, `regr_sxx`, `regr_sxy`, `regr_syy`, `relative`, `release`, `replication`, `restore`, `restrict`, `result`, `return`, `returns`, `revert`, `revoke`, `right`, `role`, `rollback`, `rollup`, `routine`, `row`, `rowcount`, `rowguidcol`, `rows`, `rule`, `save`, `savepoint`, `schema`, `scope`, `scroll`, `search`, `second`, `section`, `securityaudit`, `select`, `semantickeyphrasetable`, `semanticsimilaritydetailstable`, `semanticsimilaritytable`, `sensitive`, `sequence`, `session`, `session_user`, `set`, `sets`, `setuser`, `shutdown`, `similar`, `size`, `smallint`, `some`, `space`, `specific`, `specifictype`, `sql`, `sqlca`, `sqlcode`, `sqlerror`, `sqlexception`, `sqlstate`, `sqlwarning`, `start`, `state`, `statement`, `static`, `statistics`, `stddev_pop`, `stddev_samp`, `structure`, `submultiset`, `substring`, `substring_regex`, `sum`, `symmetric`, `system`, `system_user`, `table`, `tablesample`, `temporary`, `terminate`, `textsize`, `than`, `then`, `throw`, `time`, `timestamp`, `timezone_hour`, `timezone_minute`, `to`, `top`, `trailing`, `tran`, `transaction`, `translate`, `translate_regex`, `translation`, `treat`, `trigger`, `trim`, `true`, `truncate`, `try`, `try_convert`, `tsequal`, `uescape`, `under`, `union`, `unique`, `unknown`, `unnest`, `unpivot`, `update`, `updatetext`, `upper`, `usage`, `use`, `user`, `using`, `value`, `values`, `var_pop`, `var_samp`, `varchar`, `variable`, `varying`, `view`, `waitfor`, `when`, `whenever`, `where`, `while`, `width_bucket`, `window`, `with`, `within`, `without`, `work`, `write`, `writetext`, `xmlagg`, `xmlattributes`, `xmlbinary`, `xmlcast`, `xmlcomment`, `xmlconcat`, `xmldocument`, `xmlelement`, `xmlexists`, `xmlforest`, `xmliterate`, `xmlnamespaces`, `xmlparse`, `xmlpi`, `xmlquery`, `xmlserialize`, `xmltable`, `xmltext`, `xmlvalidate`, `year`, `zone`), Keyword, nil},\n-\t\t\t{`(\\[)([^]]+)(\\])`, ByGroups(Operator, Name, Operator), nil},\n-\t\t\t{`0x[0-9a-f]+`, LiteralNumberHex, nil},\n-\t\t\t{`[0-9]+\\.[0-9]*(e[+-]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\.[0-9]+(e[+-]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`[0-9]+e[+-]?[0-9]+`, LiteralNumberFloat, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`[;(),.]`, Punctuation, nil},\n-\t\t\t{`@@\\w+`, NameBuiltin, nil},\n-\t\t\t{`@\\w+`, NameVariable, nil},\n-\t\t\t{`(\\w+)(:)`, ByGroups(NameLabel, Punctuation), nil},\n-\t\t\t{`#?#?\\w+`, Name, nil},\n-\t\t\t{`\\?`, NameVariableMagic, nil},\n-\t\t},\n-\t\t\"multiline-comments\": {\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"multiline-comments\")},\n-\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n-\t\t\t{`[^/*]+`, CommentMultiline, nil},\n-\t\t\t{`[/*]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`[^']+`, LiteralStringSingle, nil},\n-\t\t\t{`''`, LiteralStringSingle, nil},\n-\t\t\t{`'`, LiteralStringSingle, Pop(1)},\n-\t\t},\n-\t\t\"quoted-ident\": {\n-\t\t\t{`[^\"]+`, LiteralStringName, nil},\n-\t\t\t{`\"\"`, LiteralStringName, nil},\n-\t\t\t{`\"`, LiteralStringName, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "e34a6c1ceae7af94d49ca41fefbefcb56c0ad723",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/turing.go",
      "status": "removed",
      "additions": 0,
      "deletions": 47,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Fturing.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Fturing.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Fturing.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,47 +0,0 @@\n-package t\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Turing lexer.\n-var Turing = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Turing\",\n-\t\tAliases:   []string{\"turing\"},\n-\t\tFilenames: []string{\"*.turing\", \"*.tu\"},\n-\t\tMimeTypes: []string{\"text/x-turing\"},\n-\t},\n-\tturingRules,\n-))\n-\n-func turingRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`%(.*?)\\n`, CommentSingle, nil},\n-\t\t\t{`/(\\\\\\n)?[*](.|\\n)*?[*](\\\\\\n)?/`, CommentMultiline, nil},\n-\t\t\t{`(var|fcn|function|proc|procedure|process|class|end|record|type|begin|case|loop|for|const|union|monitor|module|handler)\\b`, KeywordDeclaration, nil},\n-\t\t\t{`(all|asm|assert|bind|bits|body|break|by|cheat|checked|close|condition|decreasing|def|deferred|else|elsif|exit|export|external|flexible|fork|forward|free|get|if|implement|import|include|inherit|init|invariant|label|new|objectclass|of|opaque|open|packed|pause|pervasive|post|pre|priority|put|quit|read|register|result|seek|self|set|signal|skip|tag|tell|then|timeout|to|unchecked|unqualified|wait|when|write)\\b`, Keyword, nil},\n-\t\t\t{`(true|false)\\b`, KeywordConstant, nil},\n-\t\t\t{Words(``, `\\b`, `addressint`, `array`, `boolean`, `char`, `int`, `int1`, `int2`, `int4`, `int8`, `nat`, `nat1`, `nat2`, `nat4`, `nat8`, `pointer`, `real`, `real4`, `real8`, `string`, `enum`), KeywordType, nil},\n-\t\t\t{`\\d+i`, LiteralNumber, nil},\n-\t\t\t{`\\d+\\.\\d*([Ee][-+]\\d+)?i`, LiteralNumber, nil},\n-\t\t\t{`\\.\\d+([Ee][-+]\\d+)?i`, LiteralNumber, nil},\n-\t\t\t{`\\d+[Ee][-+]\\d+i`, LiteralNumber, nil},\n-\t\t\t{`\\d+(\\.\\d+[eE][+\\-]?\\d+|\\.\\d*|[eE][+\\-]?\\d+)`, LiteralNumberFloat, nil},\n-\t\t\t{`\\.\\d+([eE][+\\-]?\\d+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`0[0-7]+`, LiteralNumberOct, nil},\n-\t\t\t{`0[xX][0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`(0|[1-9][0-9]*)`, LiteralNumberInteger, nil},\n-\t\t\t{`(div|mod|rem|\\*\\*|=|<|>|>=|<=|not=|not|and|or|xor|=>|in|shl|shr|->|~|~=|~in|&|:=|\\.\\.|[\\^+\\-*/&#])`, Operator, nil},\n-\t\t\t{`'(\\\\['\"\\\\abfnrtv]|\\\\x[0-9a-fA-F]{2}|\\\\[0-7]{1,3}|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}|[^\\\\])'`, LiteralStringChar, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralString, nil},\n-\t\t\t{`[()\\[\\]{}.,:]`, Punctuation, nil},\n-\t\t\t{`[^\\W\\d]\\w*`, NameOther, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "437f375f5faa27a1f1cb0012fb5e633907a078e7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/turtle.go",
      "status": "removed",
      "additions": 0,
      "deletions": 71,
      "changes": 71,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Fturtle.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Fturtle.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Fturtle.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,71 +0,0 @@\n-package t\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Turtle lexer.\n-var Turtle = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"Turtle\",\n-\t\tAliases:         []string{\"turtle\"},\n-\t\tFilenames:       []string{\"*.ttl\"},\n-\t\tMimeTypes:       []string{\"text/turtle\", \"application/x-turtle\"},\n-\t\tNotMultiline:    true,\n-\t\tCaseInsensitive: true,\n-\t},\n-\tturtleRules,\n-))\n-\n-func turtleRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t\t{\"(@base|BASE)(\\\\s+)(<[^<>\\\"{}|^`\\\\\\\\\\\\x00-\\\\x20]*>)(\\\\s*)(\\\\.?)\", ByGroups(Keyword, TextWhitespace, NameVariable, TextWhitespace, Punctuation), nil},\n-\t\t\t{\"(@prefix|PREFIX)(\\\\s+)((?:[a-z][\\\\w-]*)?\\\\:)(\\\\s+)(<[^<>\\\"{}|^`\\\\\\\\\\\\x00-\\\\x20]*>)(\\\\s*)(\\\\.?)\", ByGroups(Keyword, TextWhitespace, NameNamespace, TextWhitespace, NameVariable, TextWhitespace, Punctuation), nil},\n-\t\t\t{`(?<=\\s)a(?=\\s)`, KeywordType, nil},\n-\t\t\t{\"(<[^<>\\\"{}|^`\\\\\\\\\\\\x00-\\\\x20]*>)\", NameVariable, nil},\n-\t\t\t{`((?:[a-z][\\w-]*)?\\:)([a-z][\\w-]*)`, ByGroups(NameNamespace, NameTag), nil},\n-\t\t\t{`#[^\\n]+`, Comment, nil},\n-\t\t\t{`\\b(true|false)\\b`, Literal, nil},\n-\t\t\t{`[+\\-]?\\d*\\.\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`[+\\-]?\\d*(:?\\.\\d+)?E[+\\-]?\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`[+\\-]?\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`[\\[\\](){}.;,:^]`, Punctuation, nil},\n-\t\t\t{`\"\"\"`, LiteralString, Push(\"triple-double-quoted-string\")},\n-\t\t\t{`\"`, LiteralString, Push(\"single-double-quoted-string\")},\n-\t\t\t{`'''`, LiteralString, Push(\"triple-single-quoted-string\")},\n-\t\t\t{`'`, LiteralString, Push(\"single-single-quoted-string\")},\n-\t\t},\n-\t\t\"triple-double-quoted-string\": {\n-\t\t\t{`\"\"\"`, LiteralString, Push(\"end-of-string\")},\n-\t\t\t{`[^\\\\]+`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralString, Push(\"string-escape\")},\n-\t\t},\n-\t\t\"single-double-quoted-string\": {\n-\t\t\t{`\"`, LiteralString, Push(\"end-of-string\")},\n-\t\t\t{`[^\"\\\\\\n]+`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralString, Push(\"string-escape\")},\n-\t\t},\n-\t\t\"triple-single-quoted-string\": {\n-\t\t\t{`'''`, LiteralString, Push(\"end-of-string\")},\n-\t\t\t{`[^\\\\]+`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralString, Push(\"string-escape\")},\n-\t\t},\n-\t\t\"single-single-quoted-string\": {\n-\t\t\t{`'`, LiteralString, Push(\"end-of-string\")},\n-\t\t\t{`[^'\\\\\\n]+`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralString, Push(\"string-escape\")},\n-\t\t},\n-\t\t\"string-escape\": {\n-\t\t\t{`.`, LiteralString, Pop(1)},\n-\t\t},\n-\t\t\"end-of-string\": {\n-\t\t\t{`(@)([a-z]+(:?-[a-z0-9]+)*)`, ByGroups(Operator, GenericEmph, GenericEmph), Pop(2)},\n-\t\t\t{\"(\\\\^\\\\^)(<[^<>\\\"{}|^`\\\\\\\\\\\\x00-\\\\x20]*>)\", ByGroups(Operator, GenericEmph), Pop(2)},\n-\t\t\t{`(\\^\\^)((?:[a-z][\\w-]*)?\\:)([a-z][\\w-]*)`, ByGroups(Operator, GenericEmph, GenericEmph), Pop(2)},\n-\t\t\tDefault(Pop(2)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "0e0c1f18a9f89b9230041704afbe4e4135c18622",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/twig.go",
      "status": "removed",
      "additions": 0,
      "deletions": 58,
      "changes": 58,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftwig.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftwig.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftwig.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,58 +0,0 @@\n-package t\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Twig lexer.\n-var Twig = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Twig\",\n-\t\tAliases:   []string{\"twig\"},\n-\t\tFilenames: []string{},\n-\t\tMimeTypes: []string{\"application/x-twig\"},\n-\t\tDotAll:    true,\n-\t},\n-\ttwigRules,\n-))\n-\n-func twigRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[^{]+`, Other, nil},\n-\t\t\t{`\\{\\{`, CommentPreproc, Push(\"var\")},\n-\t\t\t{`\\{\\#.*?\\#\\}`, Comment, nil},\n-\t\t\t{`(\\{%)(-?\\s*)(raw)(\\s*-?)(%\\})(.*?)(\\{%)(-?\\s*)(endraw)(\\s*-?)(%\\})`, ByGroups(CommentPreproc, Text, Keyword, Text, CommentPreproc, Other, CommentPreproc, Text, Keyword, Text, CommentPreproc), nil},\n-\t\t\t{`(\\{%)(-?\\s*)(verbatim)(\\s*-?)(%\\})(.*?)(\\{%)(-?\\s*)(endverbatim)(\\s*-?)(%\\})`, ByGroups(CommentPreproc, Text, Keyword, Text, CommentPreproc, Other, CommentPreproc, Text, Keyword, Text, CommentPreproc), nil},\n-\t\t\t{`(\\{%)(-?\\s*)(filter)(\\s+)((?:[\\\\_a-z]|[^\\x00-\\x7f])(?:[\\\\\\w-]|[^\\x00-\\x7f])*)`, ByGroups(CommentPreproc, Text, Keyword, Text, NameFunction), Push(\"tag\")},\n-\t\t\t{`(\\{%)(-?\\s*)([a-zA-Z_]\\w*)`, ByGroups(CommentPreproc, Text, Keyword), Push(\"tag\")},\n-\t\t\t{`\\{`, Other, nil},\n-\t\t},\n-\t\t\"varnames\": {\n-\t\t\t{`(\\|)(\\s*)((?:[\\\\_a-z]|[^\\x00-\\x7f])(?:[\\\\\\w-]|[^\\x00-\\x7f])*)`, ByGroups(Operator, Text, NameFunction), nil},\n-\t\t\t{`(is)(\\s+)(not)?(\\s*)((?:[\\\\_a-z]|[^\\x00-\\x7f])(?:[\\\\\\w-]|[^\\x00-\\x7f])*)`, ByGroups(Keyword, Text, Keyword, Text, NameFunction), nil},\n-\t\t\t{`(?i)(true|false|none|null)\\b`, KeywordPseudo, nil},\n-\t\t\t{`(in|not|and|b-and|or|b-or|b-xor|isif|elseif|else|importconstant|defined|divisibleby|empty|even|iterable|odd|sameasmatches|starts\\s+with|ends\\s+with)\\b`, Keyword, nil},\n-\t\t\t{`(loop|block|parent)\\b`, NameBuiltin, nil},\n-\t\t\t{`(?:[\\\\_a-z]|[^\\x00-\\x7f])(?:[\\\\\\w-]|[^\\x00-\\x7f])*`, NameVariable, nil},\n-\t\t\t{`\\.(?:[\\\\_a-z]|[^\\x00-\\x7f])(?:[\\\\\\w-]|[^\\x00-\\x7f])*`, NameVariable, nil},\n-\t\t\t{`\\.[0-9]+`, LiteralNumber, nil},\n-\t\t\t{`:?\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`:?'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t\t{`([{}()\\[\\]+\\-*/,:~%]|\\.\\.|\\?|:|\\*\\*|\\/\\/|!=|[><=]=?)`, Operator, nil},\n-\t\t\t{`[0-9](\\.[0-9]*)?(eE[+-][0-9])?[flFLdD]?|0[xX][0-9a-fA-F]+[Ll]?`, LiteralNumber, nil},\n-\t\t},\n-\t\t\"var\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`(-?)(\\}\\})`, ByGroups(Text, CommentPreproc), Pop(1)},\n-\t\t\tInclude(\"varnames\"),\n-\t\t},\n-\t\t\"tag\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`(-?)(%\\})`, ByGroups(Text, CommentPreproc), Pop(1)},\n-\t\t\tInclude(\"varnames\"),\n-\t\t\t{`.`, Punctuation, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "0625bb0927b98c1f12aef89fd57bad2b5092b2ca",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/t/typescript.go",
      "status": "removed",
      "additions": 0,
      "deletions": 101,
      "changes": 101,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftypescript.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftypescript.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Ft%2Ftypescript.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,101 +0,0 @@\n-package t\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// TypeScript lexer.\n-var TypeScript = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"TypeScript\",\n-\t\tAliases:   []string{\"ts\", \"tsx\", \"typescript\"},\n-\t\tFilenames: []string{\"*.ts\", \"*.tsx\"},\n-\t\tMimeTypes: []string{\"text/x-typescript\"},\n-\t\tDotAll:    true,\n-\t\tEnsureNL:  true,\n-\t},\n-\ttypeScriptRules,\n-))\n-\n-func typeScriptRules() Rules {\n-\treturn Rules{\n-\t\t\"commentsandwhitespace\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`<!--`, Comment, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"slashstartsregex\": {\n-\t\t\tInclude(\"commentsandwhitespace\"),\n-\t\t\t{`/(\\\\.|[^[/\\\\\\n]|\\[(\\\\.|[^\\]\\\\\\n])*])+/([gim]+\\b|\\B)`, LiteralStringRegex, Pop(1)},\n-\t\t\t{`(?=/)`, Text, Push(\"#pop\", \"badregex\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"badregex\": {\n-\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\tInclude(\"jsx\"),\n-\t\t\t{`^(?=\\s|/|<!--)`, Text, Push(\"slashstartsregex\")},\n-\t\t\tInclude(\"commentsandwhitespace\"),\n-\t\t\t{`\\+\\+|--|~|&&|\\?|:|\\|\\||\\\\(?=\\n)|(<<|>>>?|==?|!=?|[-<>+*%&|^/])=?`, Operator, Push(\"slashstartsregex\")},\n-\t\t\t{`[{(\\[;,]`, Punctuation, Push(\"slashstartsregex\")},\n-\t\t\t{`[})\\].]`, Punctuation, nil},\n-\t\t\t{`(for|in|of|while|do|break|return|yield|continue|switch|case|default|if|else|throw|try|catch|finally|new|delete|typeof|instanceof|keyof|asserts|is|infer|await|void|this)\\b`, Keyword, Push(\"slashstartsregex\")},\n-\t\t\t{`(var|let|with|function)\\b`, KeywordDeclaration, Push(\"slashstartsregex\")},\n-\t\t\t{`(abstract|async|boolean|class|const|debugger|enum|export|extends|from|get|global|goto|implements|import|interface|namespace|package|private|protected|public|readonly|require|set|static|super|type)\\b`, KeywordReserved, nil},\n-\t\t\t{`(true|false|null|NaN|Infinity|undefined)\\b`, KeywordConstant, nil},\n-\t\t\t{`(Array|Boolean|Date|Error|Function|Math|Number|Object|Packages|RegExp|String|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|isNaN|parseFloat|parseInt|document|this|window)\\b`, NameBuiltin, nil},\n-\t\t\t{`\\b(module)(\\s*)(\\s*[\\w?.$][\\w?.$]*)(\\s*)`, ByGroups(KeywordReserved, Text, NameOther, Text), Push(\"slashstartsregex\")},\n-\t\t\t{`\\b(string|bool|number|any|never|object|symbol|unique|unknown|bigint)\\b`, KeywordType, nil},\n-\t\t\t{`\\b(constructor|declare|interface|as)\\b`, KeywordReserved, nil},\n-\t\t\t{`(super)(\\s*)(\\([\\w,?.$\\s]+\\s*\\))`, ByGroups(KeywordReserved, Text), Push(\"slashstartsregex\")},\n-\t\t\t{`([a-zA-Z_?.$][\\w?.$]*)\\(\\) \\{`, NameOther, Push(\"slashstartsregex\")},\n-\t\t\t{`([\\w?.$][\\w?.$]*)(\\s*:\\s*)([\\w?.$][\\w?.$]*)`, ByGroups(NameOther, Text, KeywordType), nil},\n-\t\t\t{`[$a-zA-Z_]\\w*`, NameOther, nil},\n-\t\t\t{`[0-9][0-9]*\\.[0-9]+([eE][0-9]+)?[fd]?`, LiteralNumberFloat, nil},\n-\t\t\t{`0x[0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t\t{\"`\", LiteralStringBacktick, Push(\"interp\")},\n-\t\t\t{`@\\w+`, KeywordDeclaration, nil},\n-\t\t},\n-\t\t\"interp\": {\n-\t\t\t{\"`\", LiteralStringBacktick, Pop(1)},\n-\t\t\t{`\\\\\\\\`, LiteralStringBacktick, nil},\n-\t\t\t{\"\\\\\\\\`\", LiteralStringBacktick, nil},\n-\t\t\t{`\\$\\{`, LiteralStringInterpol, Push(\"interp-inside\")},\n-\t\t\t{`\\$`, LiteralStringBacktick, nil},\n-\t\t\t{\"[^`\\\\\\\\$]+\", LiteralStringBacktick, nil},\n-\t\t},\n-\t\t\"interp-inside\": {\n-\t\t\t{`\\}`, LiteralStringInterpol, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"jsx\": {\n-\t\t\t{`(<)(/?)(>)`, ByGroups(Punctuation, Punctuation, Punctuation), nil},\n-\t\t\t{`(<)([\\w\\.]+)`, ByGroups(Punctuation, NameTag), Push(\"tag\")},\n-\t\t\t{`(<)(/)([\\w\\.]*)(>)`, ByGroups(Punctuation, Punctuation, NameTag, Punctuation), nil},\n-\t\t},\n-\t\t\"tag\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`([\\w]+\\s*)(=)(\\s*)`, ByGroups(NameAttribute, Operator, Text), Push(\"attr\")},\n-\t\t\t{`[{}]+`, Punctuation, nil},\n-\t\t\t{`[\\w\\.]+`, NameAttribute, nil},\n-\t\t\t{`(/?)(\\s*)(>)`, ByGroups(Punctuation, Text, Punctuation), Pop(1)},\n-\t\t},\n-\t\t\"attr\": {\n-\t\t\t{`{`, Punctuation, Push(\"expression\")},\n-\t\t\t{`\".*?\"`, LiteralString, Pop(1)},\n-\t\t\t{`'.*?'`, LiteralString, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"expression\": {\n-\t\t\t{`{`, Punctuation, Push()},\n-\t\t\t{`}`, Punctuation, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "fc6bc0b3f40e1244690caa881ca8878acee54578",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/v/vb.go",
      "status": "removed",
      "additions": 0,
      "deletions": 77,
      "changes": 77,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fv%2Fvb.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fv%2Fvb.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fv%2Fvb.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,77 +0,0 @@\n-package v\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-const vbName = `[_\\w][\\w]*`\n-\n-// VB.Net lexer.\n-var VBNet = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"VB.net\",\n-\t\tAliases:         []string{\"vb.net\", \"vbnet\"},\n-\t\tFilenames:       []string{\"*.vb\", \"*.bas\"},\n-\t\tMimeTypes:       []string{\"text/x-vbnet\", \"text/x-vba\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tvbNetRules,\n-))\n-\n-func vbNetRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`^\\s*<.*?>`, NameAttribute, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`rem\\b.*?\\n`, Comment, nil},\n-\t\t\t{`'.*?\\n`, Comment, nil},\n-\t\t\t{`#If\\s.*?\\sThen|#ElseIf\\s.*?\\sThen|#Else|#End\\s+If|#Const|#ExternalSource.*?\\n|#End\\s+ExternalSource|#Region.*?\\n|#End\\s+Region|#ExternalChecksum`, CommentPreproc, nil},\n-\t\t\t{`[(){}!#,.:]`, Punctuation, nil},\n-\t\t\t{`Option\\s+(Strict|Explicit|Compare)\\s+(On|Off|Binary|Text)`, KeywordDeclaration, nil},\n-\t\t\t{Words(`(?<!\\.)`, `\\b`, `AddHandler`, `Alias`, `ByRef`, `ByVal`, `Call`, `Case`, `Catch`, `CBool`, `CByte`, `CChar`, `CDate`, `CDec`, `CDbl`, `CInt`, `CLng`, `CObj`, `Continue`, `CSByte`, `CShort`, `CSng`, `CStr`, `CType`, `CUInt`, `CULng`, `CUShort`, `Declare`, `Default`, `Delegate`, `DirectCast`, `Do`, `Each`, `Else`, `ElseIf`, `EndIf`, `Erase`, `Error`, `Event`, `Exit`, `False`, `Finally`, `For`, `Friend`, `Get`, `Global`, `GoSub`, `GoTo`, `Handles`, `If`, `Implements`, `Inherits`, `Interface`, `Let`, `Lib`, `Loop`, `Me`, `MustInherit`, `MustOverride`, `MyBase`, `MyClass`, `Narrowing`, `New`, `Next`, `Not`, `Nothing`, `NotInheritable`, `NotOverridable`, `Of`, `On`, `Operator`, `Option`, `Optional`, `Overloads`, `Overridable`, `Overrides`, `ParamArray`, `Partial`, `Private`, `Protected`, `Public`, `RaiseEvent`, `ReadOnly`, `ReDim`, `RemoveHandler`, `Resume`, `Return`, `Select`, `Set`, `Shadows`, `Shared`, `Single`, `Static`, `Step`, `Stop`, `SyncLock`, `Then`, `Throw`, `To`, `True`, `Try`, `TryCast`, `Wend`, `Using`, `When`, `While`, `Widening`, `With`, `WithEvents`, `WriteOnly`), Keyword, nil},\n-\t\t\t{`(?<!\\.)End\\b`, Keyword, Push(\"end\")},\n-\t\t\t{`(?<!\\.)(Dim|Const)\\b`, Keyword, Push(\"dim\")},\n-\t\t\t{`(?<!\\.)(Function|Sub|Property)(\\s+)`, ByGroups(Keyword, Text), Push(\"funcname\")},\n-\t\t\t{`(?<!\\.)(Class|Structure|Enum)(\\s+)`, ByGroups(Keyword, Text), Push(\"classname\")},\n-\t\t\t{`(?<!\\.)(Module|Namespace|Imports)(\\s+)`, ByGroups(Keyword, Text), Push(\"namespace\")},\n-\t\t\t{`(?<!\\.)(Boolean|Byte|Char|Date|Decimal|Double|Integer|Long|Object|SByte|Short|Single|String|Variant|UInteger|ULong|UShort)\\b`, KeywordType, nil},\n-\t\t\t{`(?<!\\.)(AddressOf|And|AndAlso|As|GetType|In|Is|IsNot|Like|Mod|Or|OrElse|TypeOf|Xor)\\b`, OperatorWord, nil},\n-\t\t\t{`&=|[*]=|/=|\\\\=|\\^=|\\+=|-=|<<=|>>=|<<|>>|:=|<=|>=|<>|[-&*/\\\\^+=<>\\[\\]]`, Operator, nil},\n-\t\t\t{`\"`, LiteralString, Push(\"string\")},\n-\t\t\t{`_\\n`, Text, nil},\n-\t\t\t{vbName, Name, nil},\n-\t\t\t{`#.*?#`, LiteralDate, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\d*\\.\\d+)(F[+-]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`\\d+([SILDFR]|US|UI|UL)?`, LiteralNumberInteger, nil},\n-\t\t\t{`&H[0-9a-f]+([SILDFR]|US|UI|UL)?`, LiteralNumberInteger, nil},\n-\t\t\t{`&O[0-7]+([SILDFR]|US|UI|UL)?`, LiteralNumberInteger, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\"\"`, LiteralString, nil},\n-\t\t\t{`\"C?`, LiteralString, Pop(1)},\n-\t\t\t{`[^\"]+`, LiteralString, nil},\n-\t\t},\n-\t\t\"dim\": {\n-\t\t\t{vbName, NameVariable, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"funcname\": {\n-\t\t\t{vbName, NameFunction, Pop(1)},\n-\t\t},\n-\t\t\"classname\": {\n-\t\t\t{vbName, NameClass, Pop(1)},\n-\t\t},\n-\t\t\"namespace\": {\n-\t\t\t{vbName, NameNamespace, nil},\n-\t\t\t{`\\.`, NameNamespace, nil},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"end\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`(Function|Sub|Property|Class|Structure|Enum|Module|Namespace)\\b`, Keyword, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "00dbbc7fe754687cfafd6fa49154fb9ed8656e3d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/v/verilog.go",
      "status": "removed",
      "additions": 0,
      "deletions": 72,
      "changes": 72,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fv%2Fverilog.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fv%2Fverilog.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fv%2Fverilog.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,72 +0,0 @@\n-package v\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Verilog lexer.\n-var Verilog = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"verilog\",\n-\t\tAliases:   []string{\"verilog\", \"v\"},\n-\t\tFilenames: []string{\"*.v\"},\n-\t\tMimeTypes: []string{\"text/x-verilog\"},\n-\t\tEnsureNL:  true,\n-\t},\n-\tverilogRules,\n-))\n-\n-func verilogRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{\"^\\\\s*`define\", CommentPreproc, Push(\"macro\")},\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`/(\\\\\\n)?/(\\n|(.|\\n)*?[^\\\\]\\n)`, CommentSingle, nil},\n-\t\t\t{`/(\\\\\\n)?[*](.|\\n)*?[*](\\\\\\n)?/`, CommentMultiline, nil},\n-\t\t\t{`[{}#@]`, Punctuation, nil},\n-\t\t\t{`L?\"`, LiteralString, Push(\"string\")},\n-\t\t\t{`L?'(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-fA-F0-9]{1,2}|[^\\\\\\'\\n])'`, LiteralStringChar, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+)[eE][+-]?\\d+[lL]?`, LiteralNumberFloat, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+[fF])[fF]?`, LiteralNumberFloat, nil},\n-\t\t\t{`([0-9]+)|(\\'h)[0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`([0-9]+)|(\\'b)[01]+`, LiteralNumberBin, nil},\n-\t\t\t{`([0-9]+)|(\\'d)[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`([0-9]+)|(\\'o)[0-7]+`, LiteralNumberOct, nil},\n-\t\t\t{`\\'[01xz]`, LiteralNumber, nil},\n-\t\t\t{`\\d+[Ll]?`, LiteralNumberInteger, nil},\n-\t\t\t{`\\*/`, Error, nil},\n-\t\t\t{`[~!%^&*+=|?:<>/-]`, Operator, nil},\n-\t\t\t{`[()\\[\\],.;\\']`, Punctuation, nil},\n-\t\t\t{\"`[a-zA-Z_]\\\\w*\", NameConstant, nil},\n-\t\t\t{`^(\\s*)(package)(\\s+)`, ByGroups(Text, KeywordNamespace, Text), nil},\n-\t\t\t{`^(\\s*)(import)(\\s+)`, ByGroups(Text, KeywordNamespace, Text), Push(\"import\")},\n-\t\t\t{Words(``, `\\b`, `always`, `always_comb`, `always_ff`, `always_latch`, `and`, `assign`, `automatic`, `begin`, `break`, `buf`, `bufif0`, `bufif1`, `case`, `casex`, `casez`, `cmos`, `const`, `continue`, `deassign`, `default`, `defparam`, `disable`, `do`, `edge`, `else`, `end`, `endcase`, `endfunction`, `endgenerate`, `endmodule`, `endpackage`, `endprimitive`, `endspecify`, `endtable`, `endtask`, `enum`, `event`, `final`, `for`, `force`, `forever`, `fork`, `function`, `generate`, `genvar`, `highz0`, `highz1`, `if`, `initial`, `inout`, `input`, `integer`, `join`, `large`, `localparam`, `macromodule`, `medium`, `module`, `nand`, `negedge`, `nmos`, `nor`, `not`, `notif0`, `notif1`, `or`, `output`, `packed`, `parameter`, `pmos`, `posedge`, `primitive`, `pull0`, `pull1`, `pulldown`, `pullup`, `rcmos`, `ref`, `release`, `repeat`, `return`, `rnmos`, `rpmos`, `rtran`, `rtranif0`, `rtranif1`, `scalared`, `signed`, `small`, `specify`, `specparam`, `strength`, `string`, `strong0`, `strong1`, `struct`, `table`, `task`, `tran`, `tranif0`, `tranif1`, `type`, `typedef`, `unsigned`, `var`, `vectored`, `void`, `wait`, `weak0`, `weak1`, `while`, `xnor`, `xor`), Keyword, nil},\n-\t\t\t{Words(\"`\", `\\b`, `accelerate`, `autoexpand_vectornets`, `celldefine`, `default_nettype`, `else`, `elsif`, `endcelldefine`, `endif`, `endprotect`, `endprotected`, `expand_vectornets`, `ifdef`, `ifndef`, `include`, `noaccelerate`, `noexpand_vectornets`, `noremove_gatenames`, `noremove_netnames`, `nounconnected_drive`, `protect`, `protected`, `remove_gatenames`, `remove_netnames`, `resetall`, `timescale`, `unconnected_drive`, `undef`), CommentPreproc, nil},\n-\t\t\t{Words(`\\$`, `\\b`, `bits`, `bitstoreal`, `bitstoshortreal`, `countdrivers`, `display`, `fclose`, `fdisplay`, `finish`, `floor`, `fmonitor`, `fopen`, `fstrobe`, `fwrite`, `getpattern`, `history`, `incsave`, `input`, `itor`, `key`, `list`, `log`, `monitor`, `monitoroff`, `monitoron`, `nokey`, `nolog`, `printtimescale`, `random`, `readmemb`, `readmemh`, `realtime`, `realtobits`, `reset`, `reset_count`, `reset_value`, `restart`, `rtoi`, `save`, `scale`, `scope`, `shortrealtobits`, `showscopes`, `showvariables`, `showvars`, `sreadmemb`, `sreadmemh`, `stime`, `stop`, `strobe`, `time`, `timeformat`, `write`), NameBuiltin, nil},\n-\t\t\t{Words(``, `\\b`, `byte`, `shortint`, `int`, `longint`, `integer`, `time`, `bit`, `logic`, `reg`, `supply0`, `supply1`, `tri`, `triand`, `trior`, `tri0`, `tri1`, `trireg`, `uwire`, `wire`, `wand`, `woshortreal`, `real`, `realtime`), KeywordType, nil},\n-\t\t\t{`[a-zA-Z_]\\w*:(?!:)`, NameLabel, nil},\n-\t\t\t{`\\$?[a-zA-Z_]\\w*`, Name, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t\t{`\\\\([\\\\abfnrtv\"\\']|x[a-fA-F0-9]{2,4}|[0-7]{1,3})`, LiteralStringEscape, nil},\n-\t\t\t{`[^\\\\\"\\n]+`, LiteralString, nil},\n-\t\t\t{`\\\\\\n`, LiteralString, nil},\n-\t\t\t{`\\\\`, LiteralString, nil},\n-\t\t},\n-\t\t\"macro\": {\n-\t\t\t{`[^/\\n]+`, CommentPreproc, nil},\n-\t\t\t{`/[*](.|\\n)*?[*]/`, CommentMultiline, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, Pop(1)},\n-\t\t\t{`/`, CommentPreproc, nil},\n-\t\t\t{`(?<=\\\\)\\n`, CommentPreproc, nil},\n-\t\t\t{`\\n`, CommentPreproc, Pop(1)},\n-\t\t},\n-\t\t\"import\": {\n-\t\t\t{`[\\w:]+\\*?`, NameNamespace, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "4807ccb1877913db7d64a1566681ef7ae529420a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/v/vhdl.go",
      "status": "removed",
      "additions": 0,
      "deletions": 70,
      "changes": 70,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fv%2Fvhdl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fv%2Fvhdl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fv%2Fvhdl.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,70 +0,0 @@\n-package v\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// VHDL lexer.\n-var VHDL = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"VHDL\",\n-\t\tAliases:         []string{\"vhdl\"},\n-\t\tFilenames:       []string{\"*.vhdl\", \"*.vhd\"},\n-\t\tMimeTypes:       []string{\"text/x-vhdl\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tvhdlRules,\n-))\n-\n-func vhdlRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`--.*?$`, CommentSingle, nil},\n-\t\t\t{`'(U|X|0|1|Z|W|L|H|-)'`, LiteralStringChar, nil},\n-\t\t\t{`[~!%^&*+=|?:<>/-]`, Operator, nil},\n-\t\t\t{`'[a-z_]\\w*`, NameAttribute, nil},\n-\t\t\t{`[()\\[\\],.;\\']`, Punctuation, nil},\n-\t\t\t{`\"[^\\n\\\\\"]*\"`, LiteralString, nil},\n-\t\t\t{`(library)(\\s+)([a-z_]\\w*)`, ByGroups(Keyword, Text, NameNamespace), nil},\n-\t\t\t{`(use)(\\s+)(entity)`, ByGroups(Keyword, Text, Keyword), nil},\n-\t\t\t{`(use)(\\s+)([a-z_][\\w.]*\\.)(all)`, ByGroups(Keyword, Text, NameNamespace, Keyword), nil},\n-\t\t\t{`(use)(\\s+)([a-z_][\\w.]*)`, ByGroups(Keyword, Text, NameNamespace), nil},\n-\t\t\t{`(std|ieee)(\\.[a-z_]\\w*)`, ByGroups(NameNamespace, NameNamespace), nil},\n-\t\t\t{Words(``, `\\b`, `std`, `ieee`, `work`), NameNamespace, nil},\n-\t\t\t{`(entity|component)(\\s+)([a-z_]\\w*)`, ByGroups(Keyword, Text, NameClass), nil},\n-\t\t\t{`(architecture|configuration)(\\s+)([a-z_]\\w*)(\\s+)(of)(\\s+)([a-z_]\\w*)(\\s+)(is)`, ByGroups(Keyword, Text, NameClass, Text, Keyword, Text, NameClass, Text, Keyword), nil},\n-\t\t\t{`([a-z_]\\w*)(:)(\\s+)(process|for)`, ByGroups(NameClass, Operator, Text, Keyword), nil},\n-\t\t\t// This seems to cause a recursive loop.\n-\t\t\t// {`(end)(\\s+)`, ByGroups(UsingSelf(\"root\"), Text), Push(\"endblock\")},\n-\t\t\t{`(end)(\\s+)`, ByGroups(Keyword, Text), Push(\"endblock\")},\n-\t\t\tInclude(\"types\"),\n-\t\t\tInclude(\"keywords\"),\n-\t\t\tInclude(\"numbers\"),\n-\t\t\t{`[a-z_]\\w*`, Name, nil},\n-\t\t},\n-\t\t\"endblock\": {\n-\t\t\tInclude(\"keywords\"),\n-\t\t\t{`[a-z_]\\w*`, NameClass, nil},\n-\t\t\t{`(\\s+)`, Text, nil},\n-\t\t\t{`;`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"types\": {\n-\t\t\t{Words(``, `\\b`, `boolean`, `bit`, `character`, `severity_level`, `integer`, `time`, `delay_length`, `natural`, `positive`, `string`, `bit_vector`, `file_open_kind`, `file_open_status`, `std_ulogic`, `std_ulogic_vector`, `std_logic`, `std_logic_vector`, `signed`, `unsigned`), KeywordType, nil},\n-\t\t},\n-\t\t\"keywords\": {\n-\t\t\t{Words(``, `\\b`, `abs`, `access`, `after`, `alias`, `all`, `and`, `architecture`, `array`, `assert`, `attribute`, `begin`, `block`, `body`, `buffer`, `bus`, `case`, `component`, `configuration`, `constant`, `disconnect`, `downto`, `else`, `elsif`, `end`, `entity`, `exit`, `file`, `for`, `function`, `generate`, `generic`, `group`, `guarded`, `if`, `impure`, `in`, `inertial`, `inout`, `is`, `label`, `library`, `linkage`, `literal`, `loop`, `map`, `mod`, `nand`, `new`, `next`, `nor`, `not`, `null`, `of`, `on`, `open`, `or`, `others`, `out`, `package`, `port`, `postponed`, `procedure`, `process`, `pure`, `range`, `record`, `register`, `reject`, `rem`, `return`, `rol`, `ror`, `select`, `severity`, `signal`, `shared`, `sla`, `sll`, `sra`, `srl`, `subtype`, `then`, `to`, `transport`, `type`, `units`, `until`, `use`, `variable`, `wait`, `when`, `while`, `with`, `xnor`, `xor`), Keyword, nil},\n-\t\t},\n-\t\t\"numbers\": {\n-\t\t\t{`\\d{1,2}#[0-9a-f_]+#?`, LiteralNumberInteger, nil},\n-\t\t\t{`\\d+`, LiteralNumberInteger, nil},\n-\t\t\t{`(\\d+\\.\\d*|\\.\\d+|\\d+)E[+-]?\\d+`, LiteralNumberFloat, nil},\n-\t\t\t{`X\"[0-9a-f_]+\"`, LiteralNumberHex, nil},\n-\t\t\t{`O\"[0-7_]+\"`, LiteralNumberOct, nil},\n-\t\t\t{`B\"[01_]+\"`, LiteralNumberBin, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "b84b7492a38c46e355ac46d7578a0bc44f6a8ee2",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/v/vue.go",
      "status": "removed",
      "additions": 0,
      "deletions": 111,
      "changes": 111,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fv%2Fvue.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fv%2Fvue.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fv%2Fvue.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,111 +0,0 @@\n-package v\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Vue lexer.\n-//\n-// This was generated from https://github.com/testdrivenio/vue-lexer\n-var Vue = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"vue\",\n-\t\tAliases:   []string{\"vue\", \"vuejs\"},\n-\t\tFilenames: []string{\"*.vue\"},\n-\t\tMimeTypes: []string{\"text/x-vue\", \"application/x-vue\"},\n-\t\tDotAll:    true,\n-\t},\n-\tvueRules,\n-))\n-\n-func vueRules() Rules {\n-\treturn Rules{\n-\t\t\"commentsandwhitespace\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`<!--`, Comment, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`/\\*.*?\\*/`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"slashstartsregex\": {\n-\t\t\tInclude(\"commentsandwhitespace\"),\n-\t\t\t{`/(\\\\.|[^[/\\\\\\n]|\\[(\\\\.|[^\\]\\\\\\n])*])+/([gimuy]+\\b|\\B)`, LiteralStringRegex, Pop(1)},\n-\t\t\t{`(?=/)`, Text, Push(\"#pop\", \"badregex\")},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"badregex\": {\n-\t\t\t{`\\n`, Text, Pop(1)},\n-\t\t},\n-\t\t\"root\": {\n-\t\t\tInclude(\"vue\"),\n-\t\t\t{`\\A#! ?/.*?\\n`, CommentHashbang, nil},\n-\t\t\t{`^(?=\\s|/|<!--)`, Text, Push(\"slashstartsregex\")},\n-\t\t\tInclude(\"commentsandwhitespace\"),\n-\t\t\t{`(\\.\\d+|[0-9]+\\.[0-9]*)([eE][-+]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`0[bB][01]+`, LiteralNumberBin, nil},\n-\t\t\t{`0[oO][0-7]+`, LiteralNumberOct, nil},\n-\t\t\t{`0[xX][0-9a-fA-F]+`, LiteralNumberHex, nil},\n-\t\t\t{`[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`\\.\\.\\.|=>`, Punctuation, nil},\n-\t\t\t{`\\+\\+|--|~|&&|\\?|:|\\|\\||\\\\(?=\\n)|(<<|>>>?|==?|!=?|[-<>+*%&|^/])=?`, Operator, Push(\"slashstartsregex\")},\n-\t\t\t{`[{(\\[;,]`, Punctuation, Push(\"slashstartsregex\")},\n-\t\t\t{`[})\\].]`, Punctuation, nil},\n-\t\t\t{`(for|in|while|do|break|return|continue|switch|case|default|if|else|throw|try|catch|finally|new|delete|typeof|instanceof|void|yield|this|of)\\b`, Keyword, Push(\"slashstartsregex\")},\n-\t\t\t{`(var|let|with|function)\\b`, KeywordDeclaration, Push(\"slashstartsregex\")},\n-\t\t\t{`(abstract|boolean|byte|char|class|const|debugger|double|enum|export|extends|final|float|goto|implements|import|int|interface|long|native|package|private|protected|public|short|static|super|synchronized|throws|transient|volatile)\\b`, KeywordReserved, nil},\n-\t\t\t{`(true|false|null|NaN|Infinity|undefined)\\b`, KeywordConstant, nil},\n-\t\t\t{`(Array|Boolean|Date|Error|Function|Math|netscape|Number|Object|Packages|RegExp|String|Promise|Proxy|sun|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|Error|eval|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|document|this|window)\\b`, NameBuiltin, nil},\n-\t\t\t{`(?:[$_\\p{L}\\p{N}]|\\\\u[a-fA-F0-9]{4})(?:(?:[$\\p{L}\\p{N}]|\\\\u[a-fA-F0-9]{4}))*`, NameOther, nil},\n-\t\t\t{`\"(\\\\\\\\|\\\\\"|[^\"])*\"`, LiteralStringDouble, nil},\n-\t\t\t{`'(\\\\\\\\|\\\\'|[^'])*'`, LiteralStringSingle, nil},\n-\t\t\t{\"`\", LiteralStringBacktick, Push(\"interp\")},\n-\t\t},\n-\t\t\"interp\": {\n-\t\t\t{\"`\", LiteralStringBacktick, Pop(1)},\n-\t\t\t{`\\\\\\\\`, LiteralStringBacktick, nil},\n-\t\t\t{\"\\\\\\\\`\", LiteralStringBacktick, nil},\n-\t\t\t{`\\$\\{`, LiteralStringInterpol, Push(\"interp-inside\")},\n-\t\t\t{`\\$`, LiteralStringBacktick, nil},\n-\t\t\t{\"[^`\\\\\\\\$]+\", LiteralStringBacktick, nil},\n-\t\t},\n-\t\t\"interp-inside\": {\n-\t\t\t{`\\}`, LiteralStringInterpol, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t\t\"vue\": {\n-\t\t\t{`(<)([\\w]+)`, ByGroups(Punctuation, NameTag), Push(\"tag\")},\n-\t\t\t{`(<)(/)([\\w]+)(>)`, ByGroups(Punctuation, Punctuation, NameTag, Punctuation), nil},\n-\t\t},\n-\t\t\"tag\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`(-)([\\w]+)`, NameTag, nil},\n-\t\t\t{`(@[\\w]+)(=\"[\\S]+\")(>)`, ByGroups(NameTag, LiteralString, Punctuation), nil},\n-\t\t\t{`(@[\\w]+)(=\"[\\S]+\")`, ByGroups(NameTag, LiteralString), nil},\n-\t\t\t{`(@[\\S]+)(=\"[\\S]+\")`, ByGroups(NameTag, LiteralString), nil},\n-\t\t\t{`(:[\\S]+)(=\"[\\S]+\")`, ByGroups(NameTag, LiteralString), nil},\n-\t\t\t{`(:)`, Operator, nil},\n-\t\t\t{`(v-b-[\\S]+)`, NameTag, nil},\n-\t\t\t{`(v-[\\w]+)(=\".+)([:][\\w]+)(=\"[\\w]+\")(>)`, ByGroups(NameTag, LiteralString, NameTag, LiteralString, Punctuation), nil},\n-\t\t\t{`(v-[\\w]+)(=\"[\\S]+\")(>)`, ByGroups(NameTag, LiteralString, Punctuation), nil},\n-\t\t\t{`(v-[\\w]+)(>)`, ByGroups(NameTag, Punctuation), nil},\n-\t\t\t{`(v-[\\w]+)(=\".+\")(>)`, ByGroups(NameTag, LiteralString, Punctuation), nil},\n-\t\t\t{`(<)([\\w]+)`, ByGroups(Punctuation, NameTag), nil},\n-\t\t\t{`(<)(/)([\\w]+)(>)`, ByGroups(Punctuation, Punctuation, NameTag, Punctuation), nil},\n-\t\t\t{`([\\w]+\\s*)(=)(\\s*)`, ByGroups(NameAttribute, Operator, Text), Push(\"attr\")},\n-\t\t\t{`[{}]+`, Punctuation, nil},\n-\t\t\t{`[\\w\\.]+`, NameAttribute, nil},\n-\t\t\t{`(/?)(\\s*)(>)`, ByGroups(Punctuation, Text, Punctuation), Pop(1)},\n-\t\t},\n-\t\t\"attr\": {\n-\t\t\t{`{`, Punctuation, Push(\"expression\")},\n-\t\t\t{`\".*?\"`, LiteralString, Pop(1)},\n-\t\t\t{`'.*?'`, LiteralString, Pop(1)},\n-\t\t\tDefault(Pop(1)),\n-\t\t},\n-\t\t\"expression\": {\n-\t\t\t{`{`, Punctuation, Push()},\n-\t\t\t{`}`, Punctuation, Pop(1)},\n-\t\t\tInclude(\"root\"),\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "2e5d883aa458c7fdb76f781eaa8479e8a14aeb3f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/w/wdte.go",
      "status": "removed",
      "additions": 0,
      "deletions": 33,
      "changes": 33,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fw%2Fwdte.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fw%2Fwdte.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fw%2Fwdte.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,33 +0,0 @@\n-package w\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// WDTE lexer.\n-var WDTE = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"WDTE\",\n-\t\tFilenames: []string{\"*.wdte\"},\n-\t},\n-\twdteRules,\n-))\n-\n-func wdteRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, Text, nil},\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\\\\\\n`, Text, nil},\n-\t\t\t{`#(.*?)\\n`, CommentSingle, nil},\n-\t\t\t{`-?[0-9]+`, LiteralNumberInteger, nil},\n-\t\t\t{`-?[0-9]*\\.[0-9]+`, LiteralNumberFloat, nil},\n-\t\t\t{`\"[^\"]*\"`, LiteralString, nil},\n-\t\t\t{`'[^']*'`, LiteralString, nil},\n-\t\t\t{Words(``, `\\b`, `switch`, `default`, `memo`), KeywordReserved, nil},\n-\t\t\t{`{|}|;|->|=>|\\(|\\)|\\[|\\]|\\.`, Operator, nil},\n-\t\t\t{`[^{};()[\\].\\s]+`, NameVariable, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "b98e9a4b195e11afb8cb43d7a3a47418b81eef95",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/x/xml.go",
      "status": "removed",
      "additions": 0,
      "deletions": 49,
      "changes": 49,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fx%2Fxml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fx%2Fxml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fx%2Fxml.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,49 +0,0 @@\n-package x\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// XML lexer.\n-var XML = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"XML\",\n-\t\tAliases:   []string{\"xml\"},\n-\t\tFilenames: []string{\"*.xml\", \"*.xsl\", \"*.rss\", \"*.xslt\", \"*.xsd\", \"*.wsdl\", \"*.wsf\", \"*.svg\", \"*.csproj\", \"*.vcxproj\", \"*.fsproj\"},\n-\t\tMimeTypes: []string{\"text/xml\", \"application/xml\", \"image/svg+xml\", \"application/rss+xml\", \"application/atom+xml\"},\n-\t\tDotAll:    true,\n-\t},\n-\txmlRules,\n-))\n-\n-func xmlRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`[^<&]+`, Text, nil},\n-\t\t\t{`&\\S*?;`, NameEntity, nil},\n-\t\t\t{`\\<\\!\\[CDATA\\[.*?\\]\\]\\>`, CommentPreproc, nil},\n-\t\t\t{`<!--`, Comment, Push(\"comment\")},\n-\t\t\t{`<\\?.*?\\?>`, CommentPreproc, nil},\n-\t\t\t{`<![^>]*>`, CommentPreproc, nil},\n-\t\t\t{`<\\s*[\\w:.-]+`, NameTag, Push(\"tag\")},\n-\t\t\t{`<\\s*/\\s*[\\w:.-]+\\s*>`, NameTag, nil},\n-\t\t},\n-\t\t\"comment\": {\n-\t\t\t{`[^-]+`, Comment, nil},\n-\t\t\t{`-->`, Comment, Pop(1)},\n-\t\t\t{`-`, Comment, nil},\n-\t\t},\n-\t\t\"tag\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`[\\w.:-]+\\s*=`, NameAttribute, Push(\"attr\")},\n-\t\t\t{`/?\\s*>`, NameTag, Pop(1)},\n-\t\t},\n-\t\t\"attr\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`\".*?\"`, LiteralString, Pop(1)},\n-\t\t\t{`'.*?'`, LiteralString, Pop(1)},\n-\t\t\t{`[^\\s>]+`, LiteralString, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "7936a51ab2ff817cf9099b3151d4e6e93f551a98",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/x/xorg.go",
      "status": "removed",
      "additions": 0,
      "deletions": 29,
      "changes": 29,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fx%2Fxorg.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fx%2Fxorg.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fx%2Fxorg.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,29 +0,0 @@\n-package x\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Xorg lexer.\n-var Xorg = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Xorg\",\n-\t\tAliases:   []string{\"xorg.conf\"},\n-\t\tFilenames: []string{\"xorg.conf\"},\n-\t\tMimeTypes: []string{},\n-\t},\n-\txorgRules,\n-))\n-\n-func xorgRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t\t{`#.*$`, Comment, nil},\n-\t\t\t{`((|Sub)Section)(\\s+)(\"\\w+\")`, ByGroups(KeywordNamespace, LiteralStringEscape, TextWhitespace, LiteralStringEscape), nil},\n-\t\t\t{`(End(|Sub)Section)`, KeywordNamespace, nil},\n-\t\t\t{`(\\w+)(\\s+)([^\\n#]+)`, ByGroups(NameKeyword, TextWhitespace, LiteralString), nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "488f760049f72680867ab5517e71f4eb5d182e07",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/y/yaml.go",
      "status": "removed",
      "additions": 0,
      "deletions": 58,
      "changes": 58,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fy%2Fyaml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fy%2Fyaml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fy%2Fyaml.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,58 +0,0 @@\n-package y\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-var YAML = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"YAML\",\n-\t\tAliases:   []string{\"yaml\"},\n-\t\tFilenames: []string{\"*.yaml\", \"*.yml\"},\n-\t\tMimeTypes: []string{\"text/x-yaml\"},\n-\t},\n-\tyamlRules,\n-))\n-\n-func yamlRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tInclude(\"whitespace\"),\n-\t\t\t{`^---`, NameNamespace, nil},\n-\t\t\t{`^\\.\\.\\.`, NameNamespace, nil},\n-\t\t\t{`[\\n?]?\\s*- `, Text, nil},\n-\t\t\t{`#.*$`, Comment, nil},\n-\t\t\t{`!![^\\s]+`, CommentPreproc, nil},\n-\t\t\t{`&[^\\s]+`, CommentPreproc, nil},\n-\t\t\t{`\\*[^\\s]+`, CommentPreproc, nil},\n-\t\t\t{`^%include\\s+[^\\n\\r]+`, CommentPreproc, nil},\n-\t\t\tInclude(\"key\"),\n-\t\t\tInclude(\"value\"),\n-\t\t\t{`[?:,\\[\\]]`, Punctuation, nil},\n-\t\t\t{`.`, Text, nil},\n-\t\t},\n-\t\t\"value\": {\n-\t\t\t{`([>|](?:[+-])?)(\\n(^ {1,})(?:.*\\n*(?:^\\3 *).*)*)`, ByGroups(Punctuation, StringDoc, Whitespace), nil},\n-\t\t\t{Words(``, `\\b`, \"true\", \"True\", \"TRUE\", \"false\", \"False\", \"FALSE\", \"null\",\n-\t\t\t\t\"y\", \"Y\", \"yes\", \"Yes\", \"YES\", \"n\", \"N\", \"no\", \"No\", \"NO\",\n-\t\t\t\t\"on\", \"On\", \"ON\", \"off\", \"Off\", \"OFF\"), KeywordConstant, nil},\n-\t\t\t{`\"(?:\\\\.|[^\"])*\"`, StringDouble, nil},\n-\t\t\t{`'(?:\\\\.|[^'])*'`, StringSingle, nil},\n-\t\t\t{`\\d\\d\\d\\d-\\d\\d-\\d\\d([T ]\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(Z|\\s+[-+]\\d+)?)?`, LiteralDate, nil},\n-\t\t\t{`\\b[+\\-]?(0x[\\da-f]+|0o[0-7]+|(\\d+\\.?\\d*|\\.?\\d+)(e[\\+\\-]?\\d+)?|\\.inf|\\.nan)\\b`, Number, nil},\n-\t\t\t{`([^\\{\\}\\[\\]\\?,\\:\\!\\-\\*&\\@].*)( )+(#.*)`, ByGroups(Literal, Whitespace, Comment), nil},\n-\t\t\t{`[^\\{\\}\\[\\]\\?,\\:\\!\\-\\*&\\@].*`, Literal, nil},\n-\t\t},\n-\t\t\"key\": {\n-\t\t\t{`\"[^\"\\n].*\": `, NameTag, nil},\n-\t\t\t{`(-)( )([^\"\\n{]*)(:)( )`, ByGroups(Punctuation, Whitespace, NameTag, Punctuation, Whitespace), nil},\n-\t\t\t{`([^\"\\n{]*)(:)( )`, ByGroups(NameTag, Punctuation, Whitespace), nil},\n-\t\t\t{`([^\"\\n{]*)(:)(\\n)`, ByGroups(NameTag, Punctuation, Whitespace), nil},\n-\t\t},\n-\t\t\"whitespace\": {\n-\t\t\t{`\\s+`, Whitespace, nil},\n-\t\t\t{`\\n+`, Whitespace, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "36349eb9fb663bae63793aab1975f542c0329d0c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/y/yang.go",
      "status": "removed",
      "additions": 0,
      "deletions": 71,
      "changes": 71,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fy%2Fyang.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fy%2Fyang.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fy%2Fyang.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,71 +0,0 @@\n-package y\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-var YANG = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"YANG\",\n-\t\tAliases:   []string{\"yang\"},\n-\t\tFilenames: []string{\"*.yang\"},\n-\t\tMimeTypes: []string{\"application/yang\"},\n-\t},\n-\tyangRules,\n-))\n-\n-func yangRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\s+`, Whitespace, nil},\n-\t\t\t{`[\\{\\}\\;]+`, Punctuation, nil},\n-\t\t\t{`(?<![\\-\\w])(and|or|not|\\+|\\.)(?![\\-\\w])`, Operator, nil},\n-\n-\t\t\t{`\"(?:\\\\\"|[^\"])*?\"`, StringDouble, nil},\n-\t\t\t{`'(?:\\\\'|[^'])*?'`, StringSingle, nil},\n-\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"comments\")},\n-\t\t\t{`//.*?$`, CommentSingle, nil},\n-\n-\t\t\t// match BNF stmt for `node-identifier` with [ prefix \":\"]\n-\t\t\t{`(?:^|(?<=[\\s{};]))([\\w.-]+)(:)([\\w.-]+)(?=[\\s{};])`, ByGroups(KeywordNamespace, Punctuation, Text), nil},\n-\n-\t\t\t// match BNF stmt `date-arg-str`\n-\t\t\t{`([0-9]{4}\\-[0-9]{2}\\-[0-9]{2})(?=[\\s\\{\\}\\;])`, LiteralDate, nil},\n-\t\t\t{`([0-9]+\\.[0-9]+)(?=[\\s\\{\\}\\;])`, NumberFloat, nil},\n-\t\t\t{`([0-9]+)(?=[\\s\\{\\}\\;])`, NumberInteger, nil},\n-\n-\t\t\t// TOP_STMTS_KEYWORDS\n-\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `module`, `submodule`), Keyword, nil},\n-\t\t\t// MODULE_HEADER_STMT_KEYWORDS\n-\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `belongs-to`, `namespace`, `prefix`, `yang-version`), Keyword, nil},\n-\t\t\t// META_STMT_KEYWORDS\n-\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `contact`, `description`, `organization`, `reference`, `revision`), Keyword, nil},\n-\t\t\t// LINKAGE_STMTS_KEYWORDS\n-\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `import`, `include`, `revision-date`), Keyword, nil},\n-\t\t\t// BODY_STMT_KEYWORDS\n-\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `action`, `argument`, `augment`, `deviation`, `extension`, `feature`, `grouping`, `identity`, `if-feature`, `input`, `notification`, `output`, `rpc`, `typedef`), Keyword, nil},\n-\t\t\t// DATA_DEF_STMT_KEYWORDS\n-\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `anydata`, `anyxml`, `case`, `choice`, `config`, `container`, `deviate`, `leaf`, `leaf-list`, `list`, `must`, `presence`, `refine`, `uses`, `when`), Keyword, nil},\n-\t\t\t// TYPE_STMT_KEYWORDS\n-\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `base`, `bit`, `default`, `enum`, `error-app-tag`, `error-message`, `fraction-digits`, `length`, `max-elements`, `min-elements`, `modifier`, `ordered-by`, `path`, `pattern`, `position`, `range`, `require-instance`, `status`, `type`, `units`, `value`, `yin-element`), Keyword, nil},\n-\t\t\t// LIST_STMT_KEYWORDS\n-\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `key`, `mandatory`, `unique`), Keyword, nil},\n-\n-\t\t\t// CONSTANTS_KEYWORDS - RFC7950 other keywords\n-\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `add`, `current`, `delete`, `deprecated`, `false`, `invert-match`, `max`, `min`, `not-supported`, `obsolete`, `replace`, `true`, `unbounded`, `user`), NameClass, nil},\n-\n-\t\t\t// RFC7950 Built-In Types\n-\t\t\t{Words(``, `(?=[^\\w\\-\\:])`, `binary`, `bits`, `boolean`, `decimal64`, `empty`, `enumeration`, `identityref`, `instance-identifier`, `int16`, `int32`, `int64`, `int8`, `leafref`, `string`, `uint16`, `uint32`, `uint64`, `uint8`, `union`), NameClass, nil},\n-\n-\t\t\t{`[^;{}\\s\\'\\\"]+`, Text, nil},\n-\t\t},\n-\t\t\"comments\": {\n-\t\t\t{`[^*/]`, CommentMultiline, nil},\n-\t\t\t{`/\\*`, CommentMultiline, Push(\"comment\")},\n-\t\t\t{`\\*/`, CommentMultiline, Pop(1)},\n-\t\t\t{`[*/]`, CommentMultiline, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "5479a2ce1cd593907362dd5b767afc0ca4f49b8e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/z/zed.go",
      "status": "removed",
      "additions": 0,
      "deletions": 53,
      "changes": 53,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fz%2Fzed.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fz%2Fzed.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fz%2Fzed.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,53 +0,0 @@\n-package z\n-\n-import (\n-\t\"strings\"\n-\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Zed lexer.\n-var Zed = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Zed\",\n-\t\tAliases:   []string{\"zed\"},\n-\t\tFilenames: []string{\"*.zed\"},\n-\t\tMimeTypes: []string{\"text/zed\"},\n-\t},\n-\tzedRules,\n-).SetAnalyser(func(text string) float32 {\n-\tif strings.Contains(text, \"definition \") && strings.Contains(text, \"relation \") && strings.Contains(text, \"permission \") {\n-\t\treturn 0.9\n-\t}\n-\tif strings.Contains(text, \"definition \") {\n-\t\treturn 0.5\n-\t}\n-\tif strings.Contains(text, \"relation \") {\n-\t\treturn 0.5\n-\t}\n-\tif strings.Contains(text, \"permission \") {\n-\t\treturn 0.25\n-\t}\n-\treturn 0.0\n-}))\n-\n-func zedRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, TextWhitespace, nil},\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{`/(\\\\\\n)?[*][\\w\\W]*?[*](\\\\\\n)?/`, CommentMultiline, nil},\n-\t\t\t{`/(\\\\\\n)?[*][\\w\\W]*`, CommentMultiline, nil},\n-\t\t\t{Words(``, `\\b`, `definition`), KeywordType, nil},\n-\t\t\t{Words(``, `\\b`, `relation`), KeywordNamespace, nil},\n-\t\t\t{Words(``, `\\b`, `permission`), KeywordDeclaration, nil},\n-\t\t\t{`[a-zA-Z_]\\w*/`, NameNamespace, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t\t{`#[a-zA-Z_]\\w*`, NameVariable, nil},\n-\t\t\t{`[+%=><|^!?/\\-*&~:]`, Operator, nil},\n-\t\t\t{`[{}()\\[\\],.;]`, Punctuation, nil},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "56f54fd989f9f386d158ae28b1c2fe1c331d9c58",
      "filename": "backend/vendor/github.com/alecthomas/chroma/lexers/z/zig.go",
      "status": "removed",
      "additions": 0,
      "deletions": 58,
      "changes": 58,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fz%2Fzig.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fz%2Fzig.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Flexers%2Fz%2Fzig.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,58 +0,0 @@\n-package z\n-\n-import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-)\n-\n-// Zig lexer.\n-var Zig = internal.Register(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"Zig\",\n-\t\tAliases:   []string{\"zig\"},\n-\t\tFilenames: []string{\"*.zig\"},\n-\t\tMimeTypes: []string{\"text/zig\"},\n-\t},\n-\tzigRules,\n-))\n-\n-func zigRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\t{`\\n`, TextWhitespace, nil},\n-\t\t\t{`\\s+`, TextWhitespace, nil},\n-\t\t\t{`//.*?\\n`, CommentSingle, nil},\n-\t\t\t{Words(``, `\\b`, `break`, `return`, `continue`, `asm`, `defer`, `errdefer`, `unreachable`, `try`, `catch`, `async`, `await`, `suspend`, `resume`, `cancel`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `const`, `var`, `extern`, `packed`, `export`, `pub`, `noalias`, `inline`, `comptime`, `nakedcc`, `stdcallcc`, `volatile`, `allowzero`, `align`, `linksection`, `threadlocal`), KeywordReserved, nil},\n-\t\t\t{Words(``, `\\b`, `struct`, `enum`, `union`, `error`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `while`, `for`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `bool`, `f16`, `f32`, `f64`, `f128`, `void`, `noreturn`, `type`, `anyerror`, `promise`, `i0`, `u0`, `isize`, `usize`, `comptime_int`, `comptime_float`, `c_short`, `c_ushort`, `c_int`, `c_uint`, `c_long`, `c_ulong`, `c_longlong`, `c_ulonglong`, `c_longdouble`, `c_voidi8`, `u8`, `i16`, `u16`, `i32`, `u32`, `i64`, `u64`, `i128`, `u128`), KeywordType, nil},\n-\t\t\t{Words(``, `\\b`, `true`, `false`, `null`, `undefined`), KeywordConstant, nil},\n-\t\t\t{Words(``, `\\b`, `if`, `else`, `switch`, `and`, `or`, `orelse`), Keyword, nil},\n-\t\t\t{Words(``, `\\b`, `fn`, `usingnamespace`, `test`), Keyword, nil},\n-\t\t\t{`0x[0-9a-fA-F]+\\.[0-9a-fA-F]+([pP][\\-+]?[0-9a-fA-F]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`0x[0-9a-fA-F]+\\.?[pP][\\-+]?[0-9a-fA-F]+`, LiteralNumberFloat, nil},\n-\t\t\t{`[0-9]+\\.[0-9]+([eE][-+]?[0-9]+)?`, LiteralNumberFloat, nil},\n-\t\t\t{`[0-9]+\\.?[eE][-+]?[0-9]+`, LiteralNumberFloat, nil},\n-\t\t\t{`0b(?:_?[01])+`, LiteralNumberBin, nil},\n-\t\t\t{`0o(?:_?[0-7])+`, LiteralNumberOct, nil},\n-\t\t\t{`0x(?:_?[0-9a-fA-F])+`, LiteralNumberHex, nil},\n-\t\t\t{`(?:_?[0-9])+`, LiteralNumberInteger, nil},\n-\t\t\t{`@[a-zA-Z_]\\w*`, NameBuiltin, nil},\n-\t\t\t{`[a-zA-Z_]\\w*`, Name, nil},\n-\t\t\t{`\\'\\\\\\'\\'`, LiteralStringEscape, nil},\n-\t\t\t{`\\'\\\\(|x[a-fA-F0-9]{2}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{6}|[nr\\\\t\\'\"])\\'`, LiteralStringEscape, nil},\n-\t\t\t{`\\'[^\\\\\\']\\'`, LiteralString, nil},\n-\t\t\t{`\\\\\\\\[^\\n]*`, LiteralStringHeredoc, nil},\n-\t\t\t{`c\\\\\\\\[^\\n]*`, LiteralStringHeredoc, nil},\n-\t\t\t{`c?\"`, LiteralString, Push(\"string\")},\n-\t\t\t{`[+%=><|^!?/\\-*&~:]`, Operator, nil},\n-\t\t\t{`[{}()\\[\\],.;]`, Punctuation, nil},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{`\\\\(x[a-fA-F0-9]{2}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{6}|[nr\\\\t\\'\"])`, LiteralStringEscape, nil},\n-\t\t\t{`[^\\\\\"\\n]+`, LiteralString, nil},\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t},\n-\t}\n-}"
    },
    {
      "sha": "bd6d720e0fd9ba57c9f3b6df4786fb035132c3da",
      "filename": "backend/vendor/github.com/alecthomas/chroma/mutators.go",
      "status": "removed",
      "additions": 0,
      "deletions": 131,
      "changes": 131,
      "blob_url": "https://github.com/umputun/remark42/blob/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fmutators.go",
      "raw_url": "https://github.com/umputun/remark42/raw/8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fmutators.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fmutators.go?ref=8c658b7eda6ccdd07c2de8e4537d8cb9b4c9bf32",
      "patch": "@@ -1,131 +0,0 @@\n-package chroma\n-\n-import (\n-\t\"fmt\"\n-\t\"strings\"\n-)\n-\n-// A Mutator modifies the behaviour of the lexer.\n-type Mutator interface {\n-\t// Mutate the lexer state machine as it is processing.\n-\tMutate(state *LexerState) error\n-}\n-\n-// A LexerMutator is an additional interface that a Mutator can implement\n-// to modify the lexer when it is compiled.\n-type LexerMutator interface {\n-\t// Rules are the lexer rules, state is the state key for the rule the mutator is associated with.\n-\tMutateLexer(rules CompiledRules, state string, rule int) error\n-}\n-\n-// A MutatorFunc is a Mutator that mutates the lexer state machine as it is processing.\n-type MutatorFunc func(state *LexerState) error\n-\n-func (m MutatorFunc) Mutate(state *LexerState) error { return m(state) } // nolint\n-\n-// Mutators applies a set of Mutators in order.\n-func Mutators(modifiers ...Mutator) MutatorFunc {\n-\treturn func(state *LexerState) error {\n-\t\tfor _, modifier := range modifiers {\n-\t\t\tif err := modifier.Mutate(state); err != nil {\n-\t\t\t\treturn err\n-\t\t\t}\n-\t\t}\n-\t\treturn nil\n-\t}\n-}\n-\n-type includeMutator struct {\n-\tstate string\n-}\n-\n-// Include the given state.\n-func Include(state string) Rule {\n-\treturn Rule{Mutator: &includeMutator{state}}\n-}\n-\n-func (i *includeMutator) Mutate(s *LexerState) error {\n-\treturn fmt.Errorf(\"should never reach here Include(%q)\", i.state)\n-}\n-\n-func (i *includeMutator) MutateLexer(rules CompiledRules, state string, rule int) error {\n-\tincludedRules, ok := rules[i.state]\n-\tif !ok {\n-\t\treturn fmt.Errorf(\"invalid include state %q\", i.state)\n-\t}\n-\trules[state] = append(rules[state][:rule], append(includedRules, rules[state][rule+1:]...)...)\n-\treturn nil\n-}\n-\n-type combinedMutator struct {\n-\tstates []string\n-}\n-\n-// Combined creates a new anonymous state from the given states, and pushes that state.\n-func Combined(states ...string) Mutator {\n-\treturn &combinedMutator{states}\n-}\n-\n-func (c *combinedMutator) Mutate(s *LexerState) error {\n-\treturn fmt.Errorf(\"should never reach here Combined(%v)\", c.states)\n-}\n-\n-func (c *combinedMutator) MutateLexer(rules CompiledRules, state string, rule int) error {\n-\tname := \"__combined_\" + strings.Join(c.states, \"__\")\n-\tif _, ok := rules[name]; !ok {\n-\t\tcombined := []*CompiledRule{}\n-\t\tfor _, state := range c.states {\n-\t\t\trules, ok := rules[state]\n-\t\t\tif !ok {\n-\t\t\t\treturn fmt.Errorf(\"invalid combine state %q\", state)\n-\t\t\t}\n-\t\t\tcombined = append(combined, rules...)\n-\t\t}\n-\t\trules[name] = combined\n-\t}\n-\trules[state][rule].Mutator = Push(name)\n-\treturn nil\n-}\n-\n-// Push states onto the stack.\n-func Push(states ...string) MutatorFunc {\n-\treturn func(s *LexerState) error {\n-\t\tif len(states) == 0 {\n-\t\t\ts.Stack = append(s.Stack, s.State)\n-\t\t} else {\n-\t\t\tfor _, state := range states {\n-\t\t\t\tif state == \"#pop\" {\n-\t\t\t\t\ts.Stack = s.Stack[:len(s.Stack)-1]\n-\t\t\t\t} else {\n-\t\t\t\t\ts.Stack = append(s.Stack, state)\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\treturn nil\n-\t}\n-}\n-\n-// Pop state from the stack when rule matches.\n-func Pop(n int) MutatorFunc {\n-\treturn func(state *LexerState) error {\n-\t\tif len(state.Stack) == 0 {\n-\t\t\treturn fmt.Errorf(\"nothing to pop\")\n-\t\t}\n-\t\tstate.Stack = state.Stack[:len(state.Stack)-n]\n-\t\treturn nil\n-\t}\n-}\n-\n-// Default returns a Rule that applies a set of Mutators.\n-func Default(mutators ...Mutator) Rule {\n-\treturn Rule{Mutator: Mutators(mutators...)}\n-}\n-\n-// Stringify returns the raw string for a set of tokens.\n-func Stringify(tokens ...Token) string {\n-\tout := []string{}\n-\tfor _, t := range tokens {\n-\t\tout = append(out, t.Value)\n-\t}\n-\treturn strings.Join(out, \"\")\n-}"
    },
    {
      "sha": "ccacd12e988116ed4a81001da5fad2da97490004",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/.gitignore",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.gitignore",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.gitignore",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.gitignore?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/.gitignore"
    },
    {
      "sha": "a06e95e8f7807a4bbc4a08cbacca1e80dafec97d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/.golangci.yml",
      "status": "renamed",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.golangci.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.golangci.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.golangci.yml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -36,6 +36,7 @@ linters:\n     - ifshort\n     - wrapcheck\n     - stylecheck\n+    - thelper\n \n linters-settings:\n   govet:\n@@ -48,8 +49,8 @@ linters-settings:\n     min-len: 8\n     min-occurrences: 3\n   forbidigo:\n-    forbid:\n-      - (Must)?NewLexer\n+    #forbid:\n+    #  - (Must)?NewLexer$\n     exclude_godoc_examples: false\n \n \n@@ -74,3 +75,4 @@ issues:\n     - 'methods on the same type should have the same receiver name'\n     - '_TokenType_name should be _TokenTypeName'\n     - '`_TokenType_map` should be `_TokenTypeMap`'\n+    - 'rewrite if-else to switch statement'",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/.golangci.yml"
    },
    {
      "sha": "8cd7592d3fb73c2c30c6267c809cde66480b7717",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/.goreleaser.yml",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.goreleaser.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.goreleaser.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2F.goreleaser.yml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/.goreleaser.yml"
    },
    {
      "sha": "92dc39f709123ccec3123d152f2e8e6126eabd7f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/COPYING",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FCOPYING",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FCOPYING",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FCOPYING?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/COPYING"
    },
    {
      "sha": "34e3c41c633f5b45ff70e7c34c49ede6d38bbcea",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/Makefile",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FMakefile",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FMakefile",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FMakefile?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/Makefile"
    },
    {
      "sha": "445fb967d6cdea3bc0f4fb4d0328ba925712fcb6",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/README.md",
      "status": "renamed",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2FREADME.md?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -192,7 +192,7 @@ following constructor options:\n If `WithClasses()` is used, the corresponding CSS can be obtained from the formatter with:\n \n ```go\n-formatter := html.New(html.WithClasses())\n+formatter := html.New(html.WithClasses(true))\n err := formatter.WriteCSS(w, style)\n ```\n ",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/README.md"
    },
    {
      "sha": "f5048951a290beeb85ac54abec83ac0f218d2060",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/coalesce.go",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fcoalesce.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fcoalesce.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fcoalesce.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/coalesce.go"
    },
    {
      "sha": "15d794ce2a7288655402e43e945bc00776cbbcb0",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/colour.go",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fcolour.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fcolour.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fcolour.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/colour.go"
    },
    {
      "sha": "f848194f682fa5a86d15e2b538d4335a7cbc5c0c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/delegate.go",
      "status": "renamed",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fdelegate.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fdelegate.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fdelegate.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -24,6 +24,21 @@ func DelegatingLexer(root Lexer, language Lexer) Lexer {\n \t}\n }\n \n+func (d *delegatingLexer) AnalyseText(text string) float32 {\n+\treturn d.root.AnalyseText(text)\n+}\n+\n+func (d *delegatingLexer) SetAnalyser(analyser func(text string) float32) Lexer {\n+\td.root.SetAnalyser(analyser)\n+\treturn d\n+}\n+\n+func (d *delegatingLexer) SetRegistry(r *LexerRegistry) Lexer {\n+\td.root.SetRegistry(r)\n+\td.language.SetRegistry(r)\n+\treturn d\n+}\n+\n func (d *delegatingLexer) Config() *Config {\n \treturn d.language.Config()\n }",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/delegate.go"
    },
    {
      "sha": "4dde77c8188432966eeb564857af926c8de07aa1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/doc.go",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fdoc.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fdoc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fdoc.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/doc.go"
    },
    {
      "sha": "67b80a8e7d720cd5199085d1db7bd1eee9373e18",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/emitters.go",
      "status": "added",
      "additions": 221,
      "deletions": 0,
      "changes": 221,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Femitters.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Femitters.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Femitters.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -0,0 +1,221 @@\n+package chroma\n+\n+import (\n+\t\"fmt\"\n+)\n+\n+// An Emitter takes group matches and returns tokens.\n+type Emitter interface {\n+\t// Emit tokens for the given regex groups.\n+\tEmit(groups []string, state *LexerState) Iterator\n+}\n+\n+// SerialisableEmitter is an Emitter that can be serialised and deserialised to/from JSON.\n+type SerialisableEmitter interface {\n+\tEmitter\n+\tEmitterKind() string\n+}\n+\n+// EmitterFunc is a function that is an Emitter.\n+type EmitterFunc func(groups []string, state *LexerState) Iterator\n+\n+// Emit tokens for groups.\n+func (e EmitterFunc) Emit(groups []string, state *LexerState) Iterator {\n+\treturn e(groups, state)\n+}\n+\n+type Emitters []Emitter\n+\n+type byGroupsEmitter struct {\n+\tEmitters\n+}\n+\n+// ByGroups emits a token for each matching group in the rule's regex.\n+func ByGroups(emitters ...Emitter) Emitter {\n+\treturn &byGroupsEmitter{Emitters: emitters}\n+}\n+\n+func (b *byGroupsEmitter) EmitterKind() string { return \"bygroups\" }\n+\n+func (b *byGroupsEmitter) Emit(groups []string, state *LexerState) Iterator {\n+\titerators := make([]Iterator, 0, len(groups)-1)\n+\tif len(b.Emitters) != len(groups)-1 {\n+\t\titerators = append(iterators, Error.Emit(groups, state))\n+\t\t// panic(errors.Errorf(\"number of groups %q does not match number of emitters %v\", groups, emitters))\n+\t} else {\n+\t\tfor i, group := range groups[1:] {\n+\t\t\tif b.Emitters[i] != nil {\n+\t\t\t\titerators = append(iterators, b.Emitters[i].Emit([]string{group}, state))\n+\t\t\t}\n+\t\t}\n+\t}\n+\treturn Concaterator(iterators...)\n+}\n+\n+// ByGroupNames emits a token for each named matching group in the rule's regex.\n+func ByGroupNames(emitters map[string]Emitter) Emitter {\n+\treturn EmitterFunc(func(groups []string, state *LexerState) Iterator {\n+\t\titerators := make([]Iterator, 0, len(state.NamedGroups)-1)\n+\t\tif len(state.NamedGroups)-1 == 0 {\n+\t\t\tif emitter, ok := emitters[`0`]; ok {\n+\t\t\t\titerators = append(iterators, emitter.Emit(groups, state))\n+\t\t\t} else {\n+\t\t\t\titerators = append(iterators, Error.Emit(groups, state))\n+\t\t\t}\n+\t\t} else {\n+\t\t\truleRegex := state.Rules[state.State][state.Rule].Regexp\n+\t\t\tfor i := 1; i < len(state.NamedGroups); i++ {\n+\t\t\t\tgroupName := ruleRegex.GroupNameFromNumber(i)\n+\t\t\t\tgroup := state.NamedGroups[groupName]\n+\t\t\t\tif emitter, ok := emitters[groupName]; ok {\n+\t\t\t\t\tif emitter != nil {\n+\t\t\t\t\t\titerators = append(iterators, emitter.Emit([]string{group}, state))\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\titerators = append(iterators, Error.Emit([]string{group}, state))\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\treturn Concaterator(iterators...)\n+\t})\n+}\n+\n+// UsingByGroup emits tokens for the matched groups in the regex using a\n+// \"sublexer\". Used when lexing code blocks where the name of a sublexer is\n+// contained within the block, for example on a Markdown text block or SQL\n+// language block.\n+//\n+// The sublexer will be retrieved using sublexerGetFunc (typically\n+// internal.Get), using the captured value from the matched sublexerNameGroup.\n+//\n+// If sublexerGetFunc returns a non-nil lexer for the captured sublexerNameGroup,\n+// then tokens for the matched codeGroup will be emitted using the retrieved\n+// lexer. Otherwise, if the sublexer is nil, then tokens will be emitted from\n+// the passed emitter.\n+//\n+// Example:\n+//\n+// \tvar Markdown = internal.Register(MustNewLexer(\n+// \t\t&Config{\n+// \t\t\tName:      \"markdown\",\n+// \t\t\tAliases:   []string{\"md\", \"mkd\"},\n+// \t\t\tFilenames: []string{\"*.md\", \"*.mkd\", \"*.markdown\"},\n+// \t\t\tMimeTypes: []string{\"text/x-markdown\"},\n+// \t\t},\n+// \t\tRules{\n+// \t\t\t\"root\": {\n+// \t\t\t\t{\"^(```)(\\\\w+)(\\\\n)([\\\\w\\\\W]*?)(^```$)\",\n+// \t\t\t\t\tUsingByGroup(\n+// \t\t\t\t\t\tinternal.Get,\n+// \t\t\t\t\t\t2, 4,\n+// \t\t\t\t\t\tString, String, String, Text, String,\n+// \t\t\t\t\t),\n+// \t\t\t\t\tnil,\n+// \t\t\t\t},\n+// \t\t\t},\n+// \t\t},\n+// \t))\n+//\n+// See the lexers/m/markdown.go for the complete example.\n+//\n+// Note: panic's if the number of emitters does not equal the number of matched\n+// groups in the regex.\n+func UsingByGroup(sublexerNameGroup, codeGroup int, emitters ...Emitter) Emitter {\n+\treturn &usingByGroup{\n+\t\tSublexerNameGroup: sublexerNameGroup,\n+\t\tCodeGroup:         codeGroup,\n+\t\tEmitters:          emitters,\n+\t}\n+}\n+\n+type usingByGroup struct {\n+\tSublexerNameGroup int      `xml:\"sublexer_name_group\"`\n+\tCodeGroup         int      `xml:\"code_group\"`\n+\tEmitters          Emitters `xml:\"emitters\"`\n+}\n+\n+func (u *usingByGroup) EmitterKind() string { return \"usingbygroup\" }\n+func (u *usingByGroup) Emit(groups []string, state *LexerState) Iterator {\n+\t// bounds check\n+\tif len(u.Emitters) != len(groups)-1 {\n+\t\tpanic(\"UsingByGroup expects number of emitters to be the same as len(groups)-1\")\n+\t}\n+\n+\t// grab sublexer\n+\tsublexer := state.Registry.Get(groups[u.SublexerNameGroup])\n+\n+\t// build iterators\n+\titerators := make([]Iterator, len(groups)-1)\n+\tfor i, group := range groups[1:] {\n+\t\tif i == u.CodeGroup-1 && sublexer != nil {\n+\t\t\tvar err error\n+\t\t\titerators[i], err = sublexer.Tokenise(nil, groups[u.CodeGroup])\n+\t\t\tif err != nil {\n+\t\t\t\tpanic(err)\n+\t\t\t}\n+\t\t} else if u.Emitters[i] != nil {\n+\t\t\titerators[i] = u.Emitters[i].Emit([]string{group}, state)\n+\t\t}\n+\t}\n+\treturn Concaterator(iterators...)\n+}\n+\n+// UsingLexer returns an Emitter that uses a given Lexer for parsing and emitting.\n+//\n+// This Emitter is not serialisable.\n+func UsingLexer(lexer Lexer) Emitter {\n+\treturn EmitterFunc(func(groups []string, _ *LexerState) Iterator {\n+\t\tit, err := lexer.Tokenise(&TokeniseOptions{State: \"root\", Nested: true}, groups[0])\n+\t\tif err != nil {\n+\t\t\tpanic(err)\n+\t\t}\n+\t\treturn it\n+\t})\n+}\n+\n+type usingEmitter struct {\n+\tLexer string `xml:\"lexer,attr\"`\n+}\n+\n+func (u *usingEmitter) EmitterKind() string { return \"using\" }\n+\n+func (u *usingEmitter) Emit(groups []string, state *LexerState) Iterator {\n+\tif state.Registry == nil {\n+\t\tpanic(fmt.Sprintf(\"no LexerRegistry available for Using(%q)\", u.Lexer))\n+\t}\n+\tlexer := state.Registry.Get(u.Lexer)\n+\tif lexer == nil {\n+\t\tpanic(fmt.Sprintf(\"no such lexer %q\", u.Lexer))\n+\t}\n+\tit, err := lexer.Tokenise(&TokeniseOptions{State: \"root\", Nested: true}, groups[0])\n+\tif err != nil {\n+\t\tpanic(err)\n+\t}\n+\treturn it\n+}\n+\n+// Using returns an Emitter that uses a given Lexer reference for parsing and emitting.\n+//\n+// The referenced lexer must be stored in the same LexerRegistry.\n+func Using(lexer string) Emitter {\n+\treturn &usingEmitter{Lexer: lexer}\n+}\n+\n+type usingSelfEmitter struct {\n+\tState string `xml:\"state,attr\"`\n+}\n+\n+func (u *usingSelfEmitter) EmitterKind() string { return \"usingself\" }\n+\n+func (u *usingSelfEmitter) Emit(groups []string, state *LexerState) Iterator {\n+\tit, err := state.Lexer.Tokenise(&TokeniseOptions{State: u.State, Nested: true}, groups[0])\n+\tif err != nil {\n+\t\tpanic(err)\n+\t}\n+\treturn it\n+}\n+\n+// UsingSelf is like Using, but uses the current Lexer.\n+func UsingSelf(stateName string) Emitter {\n+\treturn &usingSelfEmitter{stateName}\n+}"
    },
    {
      "sha": "00dd5d8df8af9d2678fe4bdf78f9d4fd922cd29b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/formatter.go",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fformatter.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fformatter.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fformatter.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/formatter.go"
    },
    {
      "sha": "0a45d8714000e82178d85ad4b95e61e7bd326beb",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/formatters/html/html.go",
      "status": "renamed",
      "additions": 102,
      "deletions": 39,
      "changes": 141,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fformatters%2Fhtml%2Fhtml.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fformatters%2Fhtml%2Fhtml.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fformatters%2Fhtml%2Fhtml.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -7,7 +7,7 @@ import (\n \t\"sort\"\n \t\"strings\"\n \n-\t\"github.com/alecthomas/chroma\"\n+\t\"github.com/alecthomas/chroma/v2\"\n )\n \n // Option sets an option of the HTML formatter.\n@@ -25,12 +25,21 @@ func WithClasses(b bool) Option { return func(f *Formatter) { f.Classes = b } }\n // WithAllClasses disables an optimisation that omits redundant CSS classes.\n func WithAllClasses(b bool) Option { return func(f *Formatter) { f.allClasses = b } }\n \n+// WithCustomCSS sets user's custom CSS styles.\n+func WithCustomCSS(css map[chroma.TokenType]string) Option {\n+\treturn func(f *Formatter) {\n+\t\tf.customCSS = css\n+\t}\n+}\n+\n // TabWidth sets the number of characters for a tab. Defaults to 8.\n func TabWidth(width int) Option { return func(f *Formatter) { f.tabWidth = width } }\n \n // PreventSurroundingPre prevents the surrounding pre tags around the generated code.\n func PreventSurroundingPre(b bool) Option {\n \treturn func(f *Formatter) {\n+\t\tf.preventSurroundingPre = b\n+\n \t\tif b {\n \t\t\tf.preWrapper = nopPreWrapper\n \t\t} else {\n@@ -39,6 +48,29 @@ func PreventSurroundingPre(b bool) Option {\n \t}\n }\n \n+// InlineCode creates inline code wrapped in a code tag.\n+func InlineCode(b bool) Option {\n+\treturn func(f *Formatter) {\n+\t\tf.inlineCode = b\n+\t\tf.preWrapper = preWrapper{\n+\t\t\tstart: func(code bool, styleAttr string) string {\n+\t\t\t\tif code {\n+\t\t\t\t\treturn fmt.Sprintf(`<code%s>`, styleAttr)\n+\t\t\t\t}\n+\n+\t\t\t\treturn ``\n+\t\t\t},\n+\t\t\tend: func(code bool) string {\n+\t\t\t\tif code {\n+\t\t\t\t\treturn `</code>`\n+\t\t\t\t}\n+\n+\t\t\t\treturn ``\n+\t\t\t},\n+\t\t}\n+\t}\n+}\n+\n // WithPreWrapper allows control of the surrounding pre tags.\n func WithPreWrapper(wrapper PreWrapper) Option {\n \treturn func(f *Formatter) {\n@@ -156,19 +188,22 @@ var (\n \n // Formatter that generates HTML.\n type Formatter struct {\n-\tstandalone          bool\n-\tprefix              string\n-\tClasses             bool // Exported field to detect when classes are being used\n-\tallClasses          bool\n-\tpreWrapper          PreWrapper\n-\ttabWidth            int\n-\twrapLongLines       bool\n-\tlineNumbers         bool\n-\tlineNumbersInTable  bool\n-\tlinkableLineNumbers bool\n-\tlineNumbersIDPrefix string\n-\thighlightRanges     highlightRanges\n-\tbaseLineNumber      int\n+\tstandalone            bool\n+\tprefix                string\n+\tClasses               bool // Exported field to detect when classes are being used\n+\tallClasses            bool\n+\tcustomCSS             map[chroma.TokenType]string\n+\tpreWrapper            PreWrapper\n+\tinlineCode            bool\n+\tpreventSurroundingPre bool\n+\ttabWidth              int\n+\twrapLongLines         bool\n+\tlineNumbers           bool\n+\tlineNumbersInTable    bool\n+\tlinkableLineNumbers   bool\n+\tlineNumbersIDPrefix   string\n+\thighlightRanges       highlightRanges\n+\tbaseLineNumber        int\n }\n \n type highlightRanges [][2]int\n@@ -249,26 +284,29 @@ func (f *Formatter) writeHTML(w io.Writer, style *chroma.Style, tokens []chroma.\n \t\t\thighlightIndex++\n \t\t}\n \n-\t\t// Start of Line\n-\t\tfmt.Fprint(w, `<span`)\n-\t\tif highlight {\n-\t\t\t// Line + LineHighlight\n-\t\t\tif f.Classes {\n-\t\t\t\tfmt.Fprintf(w, ` class=\"%s %s\"`, f.class(chroma.Line), f.class(chroma.LineHighlight))\n+\t\tif !(f.preventSurroundingPre || f.inlineCode) {\n+\t\t\t// Start of Line\n+\t\t\tfmt.Fprint(w, `<span`)\n+\n+\t\t\tif highlight {\n+\t\t\t\t// Line + LineHighlight\n+\t\t\t\tif f.Classes {\n+\t\t\t\t\tfmt.Fprintf(w, ` class=\"%s %s\"`, f.class(chroma.Line), f.class(chroma.LineHighlight))\n+\t\t\t\t} else {\n+\t\t\t\t\tfmt.Fprintf(w, ` style=\"%s %s\"`, css[chroma.Line], css[chroma.LineHighlight])\n+\t\t\t\t}\n+\t\t\t\tfmt.Fprint(w, `>`)\n \t\t\t} else {\n-\t\t\t\tfmt.Fprintf(w, ` style=\"%s %s\"`, css[chroma.Line], css[chroma.LineHighlight])\n+\t\t\t\tfmt.Fprintf(w, \"%s>\", f.styleAttr(css, chroma.Line))\n \t\t\t}\n-\t\t\tfmt.Fprint(w, `>`)\n-\t\t} else {\n-\t\t\tfmt.Fprintf(w, \"%s>\", f.styleAttr(css, chroma.Line))\n-\t\t}\n \n-\t\t// Line number\n-\t\tif f.lineNumbers && !wrapInTable {\n-\t\t\tfmt.Fprintf(w, \"<span%s%s>%s</span>\", f.styleAttr(css, chroma.LineNumbers), f.lineIDAttribute(line), f.lineTitleWithLinkIfNeeded(lineDigits, line))\n-\t\t}\n+\t\t\t// Line number\n+\t\t\tif f.lineNumbers && !wrapInTable {\n+\t\t\t\tfmt.Fprintf(w, \"<span%s%s>%s</span>\", f.styleAttr(css, chroma.LineNumbers), f.lineIDAttribute(line), f.lineTitleWithLinkIfNeeded(lineDigits, line))\n+\t\t\t}\n \n-\t\tfmt.Fprintf(w, `<span%s>`, f.styleAttr(css, chroma.CodeLine))\n+\t\t\tfmt.Fprintf(w, `<span%s>`, f.styleAttr(css, chroma.CodeLine))\n+\t\t}\n \n \t\tfor _, token := range tokens {\n \t\t\thtml := html.EscapeString(token.String())\n@@ -279,11 +317,12 @@ func (f *Formatter) writeHTML(w io.Writer, style *chroma.Style, tokens []chroma.\n \t\t\tfmt.Fprint(w, html)\n \t\t}\n \n-\t\tfmt.Fprint(w, `</span>`) // End of CodeLine\n+\t\tif !(f.preventSurroundingPre || f.inlineCode) {\n+\t\t\tfmt.Fprint(w, `</span>`) // End of CodeLine\n \n-\t\tfmt.Fprint(w, `</span>`) // End of Line\n+\t\t\tfmt.Fprint(w, `</span>`) // End of Line\n+\t\t}\n \t}\n-\n \tfmt.Fprintf(w, f.preWrapper.End(true))\n \n \tif wrapInTable {\n@@ -373,7 +412,7 @@ func (f *Formatter) styleAttr(styles map[chroma.TokenType]string, tt chroma.Toke\n \n func (f *Formatter) tabWidthStyle() string {\n \tif f.tabWidth != 0 && f.tabWidth != 8 {\n-\t\treturn fmt.Sprintf(\"; -moz-tab-size: %[1]d; -o-tab-size: %[1]d; tab-size: %[1]d\", f.tabWidth)\n+\t\treturn fmt.Sprintf(\"-moz-tab-size: %[1]d; -o-tab-size: %[1]d; tab-size: %[1]d;\", f.tabWidth)\n \t}\n \treturn \"\"\n }\n@@ -435,15 +474,39 @@ func (f *Formatter) styleToCSS(style *chroma.Style) map[chroma.TokenType]string\n \t\tif t != chroma.Background {\n \t\t\tentry = entry.Sub(bg)\n \t\t}\n-\t\tif !f.allClasses && entry.IsZero() {\n+\n+\t\t// Inherit from custom CSS provided by user\n+\t\ttokenCategory := t.Category()\n+\t\ttokenSubCategory := t.SubCategory()\n+\t\tif t != tokenCategory {\n+\t\t\tif css, ok := f.customCSS[tokenCategory]; ok {\n+\t\t\t\tclasses[t] = css\n+\t\t\t}\n+\t\t}\n+\t\tif tokenCategory != tokenSubCategory {\n+\t\t\tif css, ok := f.customCSS[tokenSubCategory]; ok {\n+\t\t\t\tclasses[t] += css\n+\t\t\t}\n+\t\t}\n+\t\t// Add custom CSS provided by user\n+\t\tif css, ok := f.customCSS[t]; ok {\n+\t\t\tclasses[t] += css\n+\t\t}\n+\n+\t\tif !f.allClasses && entry.IsZero() && classes[t] == `` {\n \t\t\tcontinue\n \t\t}\n-\t\tclasses[t] = StyleEntryToCSS(entry)\n+\n+\t\tstyleEntryCSS := StyleEntryToCSS(entry)\n+\t\tif styleEntryCSS != `` && classes[t] != `` {\n+\t\t\tstyleEntryCSS += `;`\n+\t\t}\n+\t\tclasses[t] = styleEntryCSS + classes[t]\n \t}\n-\tclasses[chroma.Background] += f.tabWidthStyle()\n-\tclasses[chroma.PreWrapper] += classes[chroma.Background] + `;`\n+\tclasses[chroma.Background] += `;` + f.tabWidthStyle()\n+\tclasses[chroma.PreWrapper] += classes[chroma.Background]\n \t// Make PreWrapper a grid to show highlight style with full width.\n-\tif len(f.highlightRanges) > 0 {\n+\tif len(f.highlightRanges) > 0 && f.customCSS[chroma.PreWrapper] == `` {\n \t\tclasses[chroma.PreWrapper] += `display: grid;`\n \t}\n \t// Make PreWrapper wrap long lines.",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/formatters/html/html.go"
    },
    {
      "sha": "d5175de89b6128e9ee1aa41aa90ba2cf561b6200",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/iterator.go",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fiterator.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fiterator.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Fiterator.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/iterator.go"
    },
    {
      "sha": "4a1bd0fd1da4ac6ea39b573a6cbbbc7fc50b9677",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexer.go",
      "status": "renamed",
      "additions": 24,
      "deletions": 10,
      "changes": 34,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexer.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexer.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexer.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -15,30 +15,30 @@ var (\n // Config for a lexer.\n type Config struct {\n \t// Name of the lexer.\n-\tName string\n+\tName string `xml:\"name,omitempty\"`\n \n \t// Shortcuts for the lexer\n-\tAliases []string\n+\tAliases []string `xml:\"alias,omitempty\"`\n \n \t// File name globs\n-\tFilenames []string\n+\tFilenames []string `xml:\"filename,omitempty\"`\n \n \t// Secondary file name globs\n-\tAliasFilenames []string\n+\tAliasFilenames []string `xml:\"alias_filename,omitempty\"`\n \n \t// MIME types\n-\tMimeTypes []string\n+\tMimeTypes []string `xml:\"mime_type,omitempty\"`\n \n \t// Regex matching is case-insensitive.\n-\tCaseInsensitive bool\n+\tCaseInsensitive bool `xml:\"case_insensitive,omitempty\"`\n \n \t// Regex matches all characters.\n-\tDotAll bool\n+\tDotAll bool `xml:\"dot_all,omitempty\"`\n \n \t// Regex does not match across lines ($ matches EOL).\n \t//\n \t// Defaults to multiline.\n-\tNotMultiline bool\n+\tNotMultiline bool `xml:\"not_multiline,omitempty\"`\n \n \t// Don't strip leading and trailing newlines from the input.\n \t// DontStripNL bool\n@@ -48,15 +48,15 @@ type Config struct {\n \n \t// Make sure that the input ends with a newline. This\n \t// is required for some lexers that consume input linewise.\n-\tEnsureNL bool\n+\tEnsureNL bool `xml:\"ensure_nl,omitempty\"`\n \n \t// If given and greater than 0, expand tabs in the input.\n \t// TabSize int\n \n \t// Priority of lexer.\n \t//\n \t// If this is 0 it will be treated as a default of 1.\n-\tPriority float32\n+\tPriority float32 `xml:\"priority,omitempty\"`\n }\n \n // Token output to formatter.\n@@ -94,6 +94,20 @@ type Lexer interface {\n \tConfig() *Config\n \t// Tokenise returns an Iterator over tokens in text.\n \tTokenise(options *TokeniseOptions, text string) (Iterator, error)\n+\t// SetRegistry sets the registry this Lexer is associated with.\n+\t//\n+\t// The registry should be used by the Lexer if it needs to look up other\n+\t// lexers.\n+\tSetRegistry(registry *LexerRegistry) Lexer\n+\t// SetAnalyser sets a function the Lexer should use for scoring how\n+\t// likely a fragment of text is to match this lexer, between 0.0 and 1.0.\n+\t// A value of 1 indicates high confidence.\n+\t//\n+\t// Lexers may ignore this if they implement their own analysers.\n+\tSetAnalyser(analyser func(text string) float32) Lexer\n+\t// AnalyseText scores how likely a fragment of text is to match\n+\t// this lexer, between 0.0 and 1.0. A value of 1 indicates high confidence.\n+\tAnalyseText(text string) float32\n }\n \n // Lexers is a slice of lexers sortable by name.",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/lexer.go"
    },
    {
      "sha": "b4ed292b1e9a03d4fce3296dd729facd95c78f19",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/README.md",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2FREADME.md?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/lexers/README.md"
    },
    {
      "sha": "1ea30f2dd5f0a8f8208e8c79275536f94e46c1ae",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/bash.go",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fbash.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fbash.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fbash.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -0,0 +1,17 @@\n+package lexers\n+\n+import (\n+\t\"regexp\"\n+)\n+\n+// TODO(moorereason): can this be factored away?\n+var bashAnalyserRe = regexp.MustCompile(`(?m)^#!.*/bin/(?:env |)(?:bash|zsh|sh|ksh)`)\n+\n+func init() { // nolint: gochecknoinits\n+\tGet(\"bash\").SetAnalyser(func(text string) float32 {\n+\t\tif bashAnalyserRe.FindString(text) != \"\" {\n+\t\t\treturn 1.0\n+\t\t}\n+\t\treturn 0.0\n+\t})\n+}"
    },
    {
      "sha": "bea9393ab686c97e35e2fa0fce085f68613fe5dc",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/bashsession.go",
      "status": "renamed",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fbashsession.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fbashsession.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fbashsession.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -1,12 +1,11 @@\n-package b\n+package lexers\n \n import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n+\t. \"github.com/alecthomas/chroma/v2\" // nolint\n )\n \n // BashSession lexer.\n-var BashSession = internal.Register(MustNewLazyLexer(\n+var BashSession = Register(MustNewLexer(\n \t&Config{\n \t\tName:      \"BashSession\",\n \t\tAliases:   []string{\"bash-session\", \"console\", \"shell-session\"},\n@@ -20,7 +19,7 @@ var BashSession = internal.Register(MustNewLazyLexer(\n func bashsessionRules() Rules {\n \treturn Rules{\n \t\t\"root\": {\n-\t\t\t{`^((?:\\[[^]]+@[^]]+\\]\\s?)?[#$%>])(\\s*)(.*\\n?)`, ByGroups(GenericPrompt, Text, Using(Bash)), nil},\n+\t\t\t{`^((?:\\[[^]]+@[^]]+\\]\\s?)?[#$%>])(\\s*)(.*\\n?)`, ByGroups(GenericPrompt, Text, Using(\"Bash\")), nil},\n \t\t\t{`^.+\\n?`, GenericOutput, nil},\n \t\t},\n \t}",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/lexers/b/bashsession.go"
    },
    {
      "sha": "9100efa82de8eba98c7bc1ef9a2df08f5c219037",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/caddyfile.go",
      "status": "renamed",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcaddyfile.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcaddyfile.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcaddyfile.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -1,8 +1,7 @@\n-package c\n+package lexers\n \n import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n+\t. \"github.com/alecthomas/chroma/v2\" // nolint\n )\n \n // caddyfileCommon are the rules common to both of the lexer variants\n@@ -137,7 +136,7 @@ func caddyfileCommonRules() Rules {\n }\n \n // Caddyfile lexer.\n-var Caddyfile = internal.Register(MustNewLazyLexer(\n+var Caddyfile = Register(MustNewLexer(\n \t&Config{\n \t\tName:      \"Caddyfile\",\n \t\tAliases:   []string{\"caddyfile\", \"caddy\"},\n@@ -196,7 +195,7 @@ func caddyfileRules() Rules {\n }\n \n // Caddyfile directive-only lexer.\n-var CaddyfileDirectives = internal.Register(MustNewLazyLexer(\n+var CaddyfileDirectives = Register(MustNewLexer(\n \t&Config{\n \t\tName:      \"Caddyfile Directives\",\n \t\tAliases:   []string{\"caddyfile-directives\", \"caddyfile-d\", \"caddy-d\"},",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/caddyfile.go"
    },
    {
      "sha": "7eea429be848f5707b018c7b47bc587365577e4b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/cheetah.go",
      "status": "renamed",
      "additions": 6,
      "deletions": 8,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcheetah.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcheetah.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcheetah.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -1,13 +1,11 @@\n-package c\n+package lexers\n \n import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-\t. \"github.com/alecthomas/chroma/lexers/p\" // nolint\n+\t. \"github.com/alecthomas/chroma/v2\" // nolint\n )\n \n // Cheetah lexer.\n-var Cheetah = internal.Register(MustNewLazyLexer(\n+var Cheetah = Register(MustNewLexer(\n \t&Config{\n \t\tName:      \"Cheetah\",\n \t\tAliases:   []string{\"cheetah\", \"spitfire\"},\n@@ -24,9 +22,9 @@ func cheetahRules() Rules {\n \t\t\t{`#[*](.|\\n)*?[*]#`, Comment, nil},\n \t\t\t{`#end[^#\\n]*(?:#|$)`, CommentPreproc, nil},\n \t\t\t{`#slurp$`, CommentPreproc, nil},\n-\t\t\t{`(#[a-zA-Z]+)([^#\\n]*)(#|$)`, ByGroups(CommentPreproc, Using(Python), CommentPreproc), nil},\n-\t\t\t{`(\\$)([a-zA-Z_][\\w.]*\\w)`, ByGroups(CommentPreproc, Using(Python)), nil},\n-\t\t\t{`(\\$\\{!?)(.*?)(\\})(?s)`, ByGroups(CommentPreproc, Using(Python), CommentPreproc), nil},\n+\t\t\t{`(#[a-zA-Z]+)([^#\\n]*)(#|$)`, ByGroups(CommentPreproc, Using(\"Python\"), CommentPreproc), nil},\n+\t\t\t{`(\\$)([a-zA-Z_][\\w.]*\\w)`, ByGroups(CommentPreproc, Using(\"Python\")), nil},\n+\t\t\t{`(\\$\\{!?)(.*?)(\\})(?s)`, ByGroups(CommentPreproc, Using(\"Python\"), CommentPreproc), nil},\n \t\t\t{`(?sx)\n                 (.+?)               # anything, followed by:\n                 (?:",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/cheetah.go"
    },
    {
      "sha": "3eb0c23070d844ad9eefbd6d9ee35b0782440b0d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/cl.go",
      "status": "renamed",
      "additions": 5,
      "deletions": 72,
      "changes": 77,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcl.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcl.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -1,8 +1,7 @@\n-package c\n+package lexers\n \n import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n+\t. \"github.com/alecthomas/chroma/v2\" // nolint\n )\n \n var (\n@@ -230,15 +229,9 @@ var (\n )\n \n // Common Lisp lexer.\n-var CommonLisp = internal.Register(TypeRemappingLexer(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:            \"Common Lisp\",\n-\t\tAliases:         []string{\"common-lisp\", \"cl\", \"lisp\"},\n-\t\tFilenames:       []string{\"*.cl\", \"*.lisp\"},\n-\t\tMimeTypes:       []string{\"text/x-common-lisp\"},\n-\t\tCaseInsensitive: true,\n-\t},\n-\tcommonLispRules,\n+var CommonLisp = Register(TypeRemappingLexer(MustNewXMLLexer(\n+\tembedded,\n+\t\"embedded/common_lisp.xml\",\n ), TypeMapping{\n \t{NameVariable, NameFunction, clBuiltinFunctions},\n \t{NameVariable, Keyword, clSpecialForms},\n@@ -248,63 +241,3 @@ var CommonLisp = internal.Register(TypeRemappingLexer(MustNewLazyLexer(\n \t{NameVariable, KeywordType, clBuiltinTypes},\n \t{NameVariable, NameClass, clBuiltinClasses},\n }))\n-\n-func commonLispRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tDefault(Push(\"body\")),\n-\t\t},\n-\t\t\"multiline-comment\": {\n-\t\t\t{`#\\|`, CommentMultiline, Push()},\n-\t\t\t{`\\|#`, CommentMultiline, Pop(1)},\n-\t\t\t{`[^|#]+`, CommentMultiline, nil},\n-\t\t\t{`[|#]`, CommentMultiline, nil},\n-\t\t},\n-\t\t\"commented-form\": {\n-\t\t\t{`\\(`, CommentPreproc, Push()},\n-\t\t\t{`\\)`, CommentPreproc, Pop(1)},\n-\t\t\t{`[^()]+`, CommentPreproc, nil},\n-\t\t},\n-\t\t\"body\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`;.*$`, CommentSingle, nil},\n-\t\t\t{`#\\|`, CommentMultiline, Push(\"multiline-comment\")},\n-\t\t\t{`#\\d*Y.*$`, CommentSpecial, nil},\n-\t\t\t{`\"(\\\\.|\\\\\\n|[^\"\\\\])*\"`, LiteralString, nil},\n-\t\t\t{`:(\\|[^|]+\\||(?:\\\\.|[\\w!$%&*+-/<=>?@\\[\\]^{}~])(?:\\\\.|[\\w!$%&*+-/<=>?@\\[\\]^{}~]|[#.:])*)`, LiteralStringSymbol, nil},\n-\t\t\t{`::(\\|[^|]+\\||(?:\\\\.|[\\w!$%&*+-/<=>?@\\[\\]^{}~])(?:\\\\.|[\\w!$%&*+-/<=>?@\\[\\]^{}~]|[#.:])*)`, LiteralStringSymbol, nil},\n-\t\t\t{`:#(\\|[^|]+\\||(?:\\\\.|[\\w!$%&*+-/<=>?@\\[\\]^{}~])(?:\\\\.|[\\w!$%&*+-/<=>?@\\[\\]^{}~]|[#.:])*)`, LiteralStringSymbol, nil},\n-\t\t\t{`'(\\|[^|]+\\||(?:\\\\.|[\\w!$%&*+-/<=>?@\\[\\]^{}~])(?:\\\\.|[\\w!$%&*+-/<=>?@\\[\\]^{}~]|[#.:])*)`, LiteralStringSymbol, nil},\n-\t\t\t{`'`, Operator, nil},\n-\t\t\t{\"`\", Operator, nil},\n-\t\t\t{\"[-+]?\\\\d+\\\\.?(?=[ \\\"()\\\\'\\\\n,;`])\", LiteralNumberInteger, nil},\n-\t\t\t{\"[-+]?\\\\d+/\\\\d+(?=[ \\\"()\\\\'\\\\n,;`])\", LiteralNumber, nil},\n-\t\t\t{\"[-+]?(\\\\d*\\\\.\\\\d+([defls][-+]?\\\\d+)?|\\\\d+(\\\\.\\\\d*)?[defls][-+]?\\\\d+)(?=[ \\\"()\\\\'\\\\n,;`])\", LiteralNumberFloat, nil},\n-\t\t\t{\"#\\\\\\\\.(?=[ \\\"()\\\\'\\\\n,;`])\", LiteralStringChar, nil},\n-\t\t\t{`#\\\\(\\|[^|]+\\||(?:\\\\.|[\\w!$%&*+-/<=>?@\\[\\]^{}~])(?:\\\\.|[\\w!$%&*+-/<=>?@\\[\\]^{}~]|[#.:])*)`, LiteralStringChar, nil},\n-\t\t\t{`#\\(`, Operator, Push(\"body\")},\n-\t\t\t{`#\\d*\\*[01]*`, LiteralOther, nil},\n-\t\t\t{`#:(\\|[^|]+\\||(?:\\\\.|[\\w!$%&*+-/<=>?@\\[\\]^{}~])(?:\\\\.|[\\w!$%&*+-/<=>?@\\[\\]^{}~]|[#.:])*)`, LiteralStringSymbol, nil},\n-\t\t\t{`#[.,]`, Operator, nil},\n-\t\t\t{`#\\'`, NameFunction, nil},\n-\t\t\t{`#b[+-]?[01]+(/[01]+)?`, LiteralNumberBin, nil},\n-\t\t\t{`#o[+-]?[0-7]+(/[0-7]+)?`, LiteralNumberOct, nil},\n-\t\t\t{`#x[+-]?[0-9a-f]+(/[0-9a-f]+)?`, LiteralNumberHex, nil},\n-\t\t\t{`#\\d+r[+-]?[0-9a-z]+(/[0-9a-z]+)?`, LiteralNumber, nil},\n-\t\t\t{`(#c)(\\()`, ByGroups(LiteralNumber, Punctuation), Push(\"body\")},\n-\t\t\t{`(#\\d+a)(\\()`, ByGroups(LiteralOther, Punctuation), Push(\"body\")},\n-\t\t\t{`(#s)(\\()`, ByGroups(LiteralOther, Punctuation), Push(\"body\")},\n-\t\t\t{`#p?\"(\\\\.|[^\"])*\"`, LiteralOther, nil},\n-\t\t\t{`#\\d+=`, Operator, nil},\n-\t\t\t{`#\\d+#`, Operator, nil},\n-\t\t\t{\"#+nil(?=[ \\\"()\\\\'\\\\n,;`])\\\\s*\\\\(\", CommentPreproc, Push(\"commented-form\")},\n-\t\t\t{`#[+-]`, Operator, nil},\n-\t\t\t{`(,@|,|\\.)`, Operator, nil},\n-\t\t\t{\"(t|nil)(?=[ \\\"()\\\\'\\\\n,;`])\", NameConstant, nil},\n-\t\t\t{`\\*(\\|[^|]+\\||(?:\\\\.|[\\w!$%&*+-/<=>?@\\[\\]^{}~])(?:\\\\.|[\\w!$%&*+-/<=>?@\\[\\]^{}~]|[#.:])*)\\*`, NameVariableGlobal, nil},\n-\t\t\t{`(\\|[^|]+\\||(?:\\\\.|[\\w!$%&*+-/<=>?@\\[\\]^{}~])(?:\\\\.|[\\w!$%&*+-/<=>?@\\[\\]^{}~]|[#.:])*)`, NameVariable, nil},\n-\t\t\t{`\\(`, Punctuation, Push(\"body\")},\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t},\n-\t}\n-}",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/cl.go"
    },
    {
      "sha": "32f7a28121b9871aaa69e7876e34dccf8f289d44",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/cql.go",
      "status": "renamed",
      "additions": 5,
      "deletions": 9,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcql.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcql.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fcql.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -1,12 +1,11 @@\n-package c\n+package lexers\n \n import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n+\t. \"github.com/alecthomas/chroma/v2\" // nolint\n )\n \n // CassandraCQL lexer.\n-var CassandraCQL = internal.Register(MustNewLazyLexer(\n+var CassandraCQL = Register(MustNewLexer(\n \t&Config{\n \t\tName:            \"Cassandra CQL\",\n \t\tAliases:         []string{\"cassandra\", \"cql\"},\n@@ -29,12 +28,9 @@ func cassandraCQLRules() Rules {\n \t\t\t{\"[+*/<>=~!@#%^&|`?-]+\", Operator, nil},\n \t\t\t{\n \t\t\t\t`(?s)(java|javascript)(\\s+)(AS)(\\s+)('|\\$\\$)(.*?)(\\5)`,\n-\t\t\t\tUsingByGroup(\n-\t\t\t\t\tinternal.Get,\n-\t\t\t\t\t1, 6,\n+\t\t\t\tUsingByGroup(1, 6,\n \t\t\t\t\tNameBuiltin, TextWhitespace, Keyword, TextWhitespace,\n-\t\t\t\t\tLiteralStringHeredoc, LiteralStringHeredoc, LiteralStringHeredoc,\n-\t\t\t\t),\n+\t\t\t\t\tLiteralStringHeredoc, LiteralStringHeredoc, LiteralStringHeredoc),\n \t\t\t\tnil,\n \t\t\t},\n \t\t\t{`(true|false|null)\\b`, KeywordConstant, nil},",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/lexers/c/cql.go"
    },
    {
      "sha": "e14654a026d0c8c2df87a6f198d86df85a379b40",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/docker.go",
      "status": "renamed",
      "additions": 8,
      "deletions": 11,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fdocker.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fdocker.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fdocker.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -1,14 +1,11 @@\n-package d\n+package lexers\n \n import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/b\"\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n-\t\"github.com/alecthomas/chroma/lexers/j\"\n+\t. \"github.com/alecthomas/chroma/v2\" // nolint\n )\n \n // Docker lexer.\n-var Docker = internal.Register(MustNewLazyLexer(\n+var Docker = Register(MustNewLexer(\n \t&Config{\n \t\tName:            \"Docker\",\n \t\tAliases:         []string{\"docker\", \"dockerfile\"},\n@@ -23,13 +20,13 @@ func dockerRules() Rules {\n \treturn Rules{\n \t\t\"root\": {\n \t\t\t{`#.*`, Comment, nil},\n-\t\t\t{`(ONBUILD)((?:\\s*\\\\?\\s*))`, ByGroups(Keyword, Using(b.Bash)), nil},\n-\t\t\t{`(HEALTHCHECK)(((?:\\s*\\\\?\\s*)--\\w+=\\w+(?:\\s*\\\\?\\s*))*)`, ByGroups(Keyword, Using(b.Bash)), nil},\n-\t\t\t{`(VOLUME|ENTRYPOINT|CMD|SHELL)((?:\\s*\\\\?\\s*))(\\[.*?\\])`, ByGroups(Keyword, Using(b.Bash), Using(j.JSON)), nil},\n-\t\t\t{`(LABEL|ENV|ARG)((?:(?:\\s*\\\\?\\s*)\\w+=\\w+(?:\\s*\\\\?\\s*))*)`, ByGroups(Keyword, Using(b.Bash)), nil},\n+\t\t\t{`(ONBUILD)((?:\\s*\\\\?\\s*))`, ByGroups(Keyword, Using(\"Bash\")), nil},\n+\t\t\t{`(HEALTHCHECK)(((?:\\s*\\\\?\\s*)--\\w+=\\w+(?:\\s*\\\\?\\s*))*)`, ByGroups(Keyword, Using(\"Bash\")), nil},\n+\t\t\t{`(VOLUME|ENTRYPOINT|CMD|SHELL)((?:\\s*\\\\?\\s*))(\\[.*?\\])`, ByGroups(Keyword, Using(\"Bash\"), Using(\"JSON\")), nil},\n+\t\t\t{`(LABEL|ENV|ARG)((?:(?:\\s*\\\\?\\s*)\\w+=\\w+(?:\\s*\\\\?\\s*))*)`, ByGroups(Keyword, Using(\"Bash\")), nil},\n \t\t\t{`((?:FROM|MAINTAINER|EXPOSE|WORKDIR|USER|STOPSIGNAL)|VOLUME)\\b(.*)`, ByGroups(Keyword, LiteralString), nil},\n \t\t\t{`((?:RUN|CMD|ENTRYPOINT|ENV|ARG|LABEL|ADD|COPY))`, Keyword, nil},\n-\t\t\t{`(.*\\\\\\n)*.+`, Using(b.Bash), nil},\n+\t\t\t{`(.*\\\\\\n)*.+`, Using(\"Bash\"), nil},\n \t\t},\n \t}\n }",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/lexers/d/docker.go"
    },
    {
      "sha": "869b0f3f43df1b340253c41b52afffb2bfd87d26",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/emacs.go",
      "status": "renamed",
      "additions": 5,
      "deletions": 58,
      "changes": 63,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Femacs.go",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Femacs.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Femacs.go?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -1,8 +1,7 @@\n-package e\n+package lexers\n \n import (\n-\t. \"github.com/alecthomas/chroma\" // nolint\n-\t\"github.com/alecthomas/chroma/lexers/internal\"\n+\t. \"github.com/alecthomas/chroma/v2\" // nolint\n )\n \n var (\n@@ -522,65 +521,13 @@ var (\n )\n \n // EmacsLisp lexer.\n-var EmacsLisp = internal.Register(TypeRemappingLexer(MustNewLazyLexer(\n-\t&Config{\n-\t\tName:      \"EmacsLisp\",\n-\t\tAliases:   []string{\"emacs\", \"elisp\", \"emacs-lisp\"},\n-\t\tFilenames: []string{\"*.el\"},\n-\t\tMimeTypes: []string{\"text/x-elisp\", \"application/x-elisp\"},\n-\t},\n-\temacsLispRules,\n+var EmacsLisp = Register(TypeRemappingLexer(MustNewXMLLexer(\n+\tembedded,\n+\t\"embedded/emacslisp.xml\",\n ), TypeMapping{\n \t{NameVariable, NameFunction, emacsBuiltinFunction},\n \t{NameVariable, NameBuiltin, emacsSpecialForms},\n \t{NameVariable, NameException, emacsErrorKeywords},\n \t{NameVariable, NameBuiltin, append(emacsBuiltinFunctionHighlighted, emacsMacros...)},\n \t{NameVariable, KeywordPseudo, emacsLambdaListKeywords},\n }))\n-\n-func emacsLispRules() Rules {\n-\treturn Rules{\n-\t\t\"root\": {\n-\t\t\tDefault(Push(\"body\")),\n-\t\t},\n-\t\t\"body\": {\n-\t\t\t{`\\s+`, Text, nil},\n-\t\t\t{`;.*$`, CommentSingle, nil},\n-\t\t\t{`\"`, LiteralString, Push(\"string\")},\n-\t\t\t{`\\?([^\\\\]|\\\\.)`, LiteralStringChar, nil},\n-\t\t\t{`:((?:\\\\.|[\\w!$%&*+-/<=>?@^{}~|])(?:\\\\.|[\\w!$%&*+-/<=>?@^{}~|]|[#.:])*)`, NameBuiltin, nil},\n-\t\t\t{`::((?:\\\\.|[\\w!$%&*+-/<=>?@^{}~|])(?:\\\\.|[\\w!$%&*+-/<=>?@^{}~|]|[#.:])*)`, LiteralStringSymbol, nil},\n-\t\t\t{`'((?:\\\\.|[\\w!$%&*+-/<=>?@^{}~|])(?:\\\\.|[\\w!$%&*+-/<=>?@^{}~|]|[#.:])*)`, LiteralStringSymbol, nil},\n-\t\t\t{`'`, Operator, nil},\n-\t\t\t{\"`\", Operator, nil},\n-\t\t\t{\"[-+]?\\\\d+\\\\.?(?=[ \\\"()\\\\]\\\\'\\\\n,;`])\", LiteralNumberInteger, nil},\n-\t\t\t{\"[-+]?\\\\d+/\\\\d+(?=[ \\\"()\\\\]\\\\'\\\\n,;`])\", LiteralNumber, nil},\n-\t\t\t{\"[-+]?(\\\\d*\\\\.\\\\d+([defls][-+]?\\\\d+)?|\\\\d+(\\\\.\\\\d*)?[defls][-+]?\\\\d+)(?=[ \\\"()\\\\]\\\\'\\\\n,;`])\", LiteralNumberFloat, nil},\n-\t\t\t{`\\[|\\]`, Punctuation, nil},\n-\t\t\t{`#:((?:\\\\.|[\\w!$%&*+-/<=>?@^{}~|])(?:\\\\.|[\\w!$%&*+-/<=>?@^{}~|]|[#.:])*)`, LiteralStringSymbol, nil},\n-\t\t\t{`#\\^\\^?`, Operator, nil},\n-\t\t\t{`#\\'`, NameFunction, nil},\n-\t\t\t{`#[bB][+-]?[01]+(/[01]+)?`, LiteralNumberBin, nil},\n-\t\t\t{`#[oO][+-]?[0-7]+(/[0-7]+)?`, LiteralNumberOct, nil},\n-\t\t\t{`#[xX][+-]?[0-9a-fA-F]+(/[0-9a-fA-F]+)?`, LiteralNumberHex, nil},\n-\t\t\t{`#\\d+r[+-]?[0-9a-zA-Z]+(/[0-9a-zA-Z]+)?`, LiteralNumber, nil},\n-\t\t\t{`#\\d+=`, Operator, nil},\n-\t\t\t{`#\\d+#`, Operator, nil},\n-\t\t\t{`(,@|,|\\.|:)`, Operator, nil},\n-\t\t\t{\"(t|nil)(?=[ \\\"()\\\\]\\\\'\\\\n,;`])\", NameConstant, nil},\n-\t\t\t{`\\*((?:\\\\.|[\\w!$%&*+-/<=>?@^{}~|])(?:\\\\.|[\\w!$%&*+-/<=>?@^{}~|]|[#.:])*)\\*`, NameVariableGlobal, nil},\n-\t\t\t{`((?:\\\\.|[\\w!$%&*+-/<=>?@^{}~|])(?:\\\\.|[\\w!$%&*+-/<=>?@^{}~|]|[#.:])*)`, NameVariable, nil},\n-\t\t\t{`#\\(`, Operator, Push(\"body\")},\n-\t\t\t{`\\(`, Punctuation, Push(\"body\")},\n-\t\t\t{`\\)`, Punctuation, Pop(1)},\n-\t\t},\n-\t\t\"string\": {\n-\t\t\t{\"[^\\\"\\\\\\\\`]+\", LiteralString, nil},\n-\t\t\t{\"`((?:\\\\\\\\.|[\\\\w!$%&*+-/<=>?@^{}~|])(?:\\\\\\\\.|[\\\\w!$%&*+-/<=>?@^{}~|]|[#.:])*)\\\\'\", LiteralStringSymbol, nil},\n-\t\t\t{\"`\", LiteralString, nil},\n-\t\t\t{`\\\\.`, LiteralString, nil},\n-\t\t\t{`\\\\\\n`, LiteralString, nil},\n-\t\t\t{`\"`, LiteralString, Pop(1)},\n-\t\t},\n-\t}\n-}",
      "previous_filename": "backend/vendor/github.com/alecthomas/chroma/lexers/e/emacs.go"
    },
    {
      "sha": "e8140b738ca83230a4f8e91fda188388c54e23e2",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/abap.xml",
      "status": "added",
      "additions": 154,
      "deletions": 0,
      "changes": 154,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fabap.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fabap.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fabap.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -0,0 +1,154 @@\n+<lexer>\n+  <config>\n+    <name>ABAP</name>\n+    <alias>abap</alias>\n+    <filename>*.abap</filename>\n+    <filename>*.ABAP</filename>\n+    <mime_type>text/x-abap</mime_type>\n+    <case_insensitive>true</case_insensitive>\n+  </config>\n+  <rules>\n+    <state name=\"common\">\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"^\\*.*$\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"\\&#34;.*?\\n\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"##\\w+\">\n+        <token type=\"CommentSpecial\"/>\n+      </rule>\n+    </state>\n+    <state name=\"variable-names\">\n+      <rule pattern=\"&lt;\\S+&gt;\">\n+        <token type=\"NameVariable\"/>\n+      </rule>\n+      <rule pattern=\"\\w[\\w~]*(?:(\\[\\])|-&gt;\\*)?\">\n+        <token type=\"NameVariable\"/>\n+      </rule>\n+    </state>\n+    <state name=\"root\">\n+      <rule>\n+        <include state=\"common\"/>\n+      </rule>\n+      <rule pattern=\"CALL\\s+(?:BADI|CUSTOMER-FUNCTION|FUNCTION)\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"(CALL\\s+(?:DIALOG|SCREEN|SUBSCREEN|SELECTION-SCREEN|TRANSACTION|TRANSFORMATION))\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"(FORM|PERFORM)(\\s+)(\\w+)\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"NameFunction\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(PERFORM)(\\s+)(\\()(\\w+)(\\))\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"NameVariable\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(MODULE)(\\s+)(\\S+)(\\s+)(INPUT|OUTPUT)\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"NameFunction\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Keyword\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(METHOD)(\\s+)([\\w~]+)\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"NameFunction\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(\\s+)([\\w\\-]+)([=\\-]&gt;)([\\w\\-~]+)\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"NameVariable\"/>\n+          <token type=\"Operator\"/>\n+          <token type=\"NameFunction\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(?&lt;=(=|-)&gt;)([\\w\\-~]+)(?=\\()\">\n+        <token type=\"NameFunction\"/>\n+      </rule>\n+      <rule pattern=\"(TEXT)(-)(\\d{3})\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"LiteralNumberInteger\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(TEXT)(-)(\\w{3})\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"NameVariable\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(ADD-CORRESPONDING|AUTHORITY-CHECK|CLASS-DATA|CLASS-EVENTS|CLASS-METHODS|CLASS-POOL|DELETE-ADJACENT|DIVIDE-CORRESPONDING|EDITOR-CALL|ENHANCEMENT-POINT|ENHANCEMENT-SECTION|EXIT-COMMAND|FIELD-GROUPS|FIELD-SYMBOLS|FUNCTION-POOL|INTERFACE-POOL|INVERTED-DATE|LOAD-OF-PROGRAM|LOG-POINT|MESSAGE-ID|MOVE-CORRESPONDING|MULTIPLY-CORRESPONDING|NEW-LINE|NEW-PAGE|NEW-SECTION|NO-EXTENSION|OUTPUT-LENGTH|PRINT-CONTROL|SELECT-OPTIONS|START-OF-SELECTION|SUBTRACT-CORRESPONDING|SYNTAX-CHECK|SYSTEM-EXCEPTIONS|TYPE-POOL|TYPE-POOLS|NO-DISPLAY)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;![-\\&gt;])(CREATE\\s+(PUBLIC|PRIVATE|DATA|OBJECT)|(PUBLIC|PRIVATE|PROTECTED)\\s+SECTION|(TYPE|LIKE)\\s+((LINE\\s+OF|REF\\s+TO|(SORTED|STANDARD|HASHED)\\s+TABLE\\s+OF))?|FROM\\s+(DATABASE|MEMORY)|CALL\\s+METHOD|(GROUP|ORDER) BY|HAVING|SEPARATED BY|GET\\s+(BADI|BIT|CURSOR|DATASET|LOCALE|PARAMETER|PF-STATUS|(PROPERTY|REFERENCE)\\s+OF|RUN\\s+TIME|TIME\\s+(STAMP)?)?|SET\\s+(BIT|BLANK\\s+LINES|COUNTRY|CURSOR|DATASET|EXTENDED\\s+CHECK|HANDLER|HOLD\\s+DATA|LANGUAGE|LEFT\\s+SCROLL-BOUNDARY|LOCALE|MARGIN|PARAMETER|PF-STATUS|PROPERTY\\s+OF|RUN\\s+TIME\\s+(ANALYZER|CLOCK\\s+RESOLUTION)|SCREEN|TITLEBAR|UPADTE\\s+TASK\\s+LOCAL|USER-COMMAND)|CONVERT\\s+((INVERTED-)?DATE|TIME|TIME\\s+STAMP|TEXT)|(CLOSE|OPEN)\\s+(DATASET|CURSOR)|(TO|FROM)\\s+(DATA BUFFER|INTERNAL TABLE|MEMORY ID|DATABASE|SHARED\\s+(MEMORY|BUFFER))|DESCRIBE\\s+(DISTANCE\\s+BETWEEN|FIELD|LIST|TABLE)|FREE\\s(MEMORY|OBJECT)?|PROCESS\\s+(BEFORE\\s+OUTPUT|AFTER\\s+INPUT|ON\\s+(VALUE-REQUEST|HELP-REQUEST))|AT\\s+(LINE-SELECTION|USER-COMMAND|END\\s+OF|NEW)|AT\\s+SELECTION-SCREEN(\\s+(ON(\\s+(BLOCK|(HELP|VALUE)-REQUEST\\s+FOR|END\\s+OF|RADIOBUTTON\\s+GROUP))?|OUTPUT))?|SELECTION-SCREEN:?\\s+((BEGIN|END)\\s+OF\\s+((TABBED\\s+)?BLOCK|LINE|SCREEN)|COMMENT|FUNCTION\\s+KEY|INCLUDE\\s+BLOCKS|POSITION|PUSHBUTTON|SKIP|ULINE)|LEAVE\\s+(LIST-PROCESSING|PROGRAM|SCREEN|TO LIST-PROCESSING|TO TRANSACTION)(ENDING|STARTING)\\s+AT|FORMAT\\s+(COLOR|INTENSIFIED|INVERSE|HOTSPOT|INPUT|FRAMES|RESET)|AS\\s+(CHECKBOX|SUBSCREEN|WINDOW)|WITH\\s+(((NON-)?UNIQUE)?\\s+KEY|FRAME)|(BEGIN|END)\\s+OF|DELETE(\\s+ADJACENT\\s+DUPLICATES\\sFROM)?|COMPARING(\\s+ALL\\s+FIELDS)?|(INSERT|APPEND)(\\s+INITIAL\\s+LINE\\s+(IN)?TO|\\s+LINES\\s+OF)?|IN\\s+((BYTE|CHARACTER)\\s+MODE|PROGRAM)|END-OF-(DEFINITION|PAGE|SELECTION)|WITH\\s+FRAME(\\s+TITLE)|(REPLACE|FIND)\\s+((FIRST|ALL)\\s+OCCURRENCES?\\s+OF\\s+)?(SUBSTRING|REGEX)?|MATCH\\s+(LENGTH|COUNT|LINE|OFFSET)|(RESPECTING|IGNORING)\\s+CASE|IN\\s+UPDATE\\s+TASK|(SOURCE|RESULT)\\s+(XML)?|REFERENCE\\s+INTO|AND\\s+(MARK|RETURN)|CLIENT\\s+SPECIFIED|CORRESPONDING\\s+FIELDS\\s+OF|IF\\s+FOUND|FOR\\s+EVENT|INHERITING\\s+FROM|LEAVE\\s+TO\\s+SCREEN|LOOP\\s+AT\\s+(SCREEN)?|LOWER\\s+CASE|MATCHCODE\\s+OBJECT|MODIF\\s+ID|MODIFY\\s+SCREEN|NESTING\\s+LEVEL|NO\\s+INTERVALS|OF\\s+STRUCTURE|RADIOBUTTON\\s+GROUP|RANGE\\s+OF|REF\\s+TO|SUPPRESS DIALOG|TABLE\\s+OF|UPPER\\s+CASE|TRANSPORTING\\s+NO\\s+FIELDS|VALUE\\s+CHECK|VISIBLE\\s+LENGTH|HEADER\\s+LINE|COMMON\\s+PART)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"(^|(?&lt;=(\\s|\\.)))(ABBREVIATED|ABSTRACT|ADD|ALIASES|ALIGN|ALPHA|ASSERT|AS|ASSIGN(ING)?|AT(\\s+FIRST)?|BACK|BLOCK|BREAK-POINT|CASE|CATCH|CHANGING|CHECK|CLASS|CLEAR|COLLECT|COLOR|COMMIT|CREATE|COMMUNICATION|COMPONENTS?|COMPUTE|CONCATENATE|CONDENSE|CONSTANTS|CONTEXTS|CONTINUE|CONTROLS|COUNTRY|CURRENCY|DATA|DATE|DECIMALS|DEFAULT|DEFINE|DEFINITION|DEFERRED|DEMAND|DETAIL|DIRECTORY|DIVIDE|DO|DUMMY|ELSE(IF)?|ENDAT|ENDCASE|ENDCATCH|ENDCLASS|ENDDO|ENDFORM|ENDFUNCTION|ENDIF|ENDINTERFACE|ENDLOOP|ENDMETHOD|ENDMODULE|ENDSELECT|ENDTRY|ENDWHILE|ENHANCEMENT|EVENTS|EXACT|EXCEPTIONS?|EXIT|EXPONENT|EXPORT|EXPORTING|EXTRACT|FETCH|FIELDS?|FOR|FORM|FORMAT|FREE|FROM|FUNCTION|HIDE|ID|IF|IMPORT|IMPLEMENTATION|IMPORTING|IN|INCLUDE|INCLUDING|INDEX|INFOTYPES|INITIALIZATION|INTERFACE|INTERFACES|INTO|LANGUAGE|LEAVE|LENGTH|LINES|LOAD|LOCAL|JOIN|KEY|NEXT|MAXIMUM|MESSAGE|METHOD[S]?|MINIMUM|MODULE|MODIFIER|MODIFY|MOVE|MULTIPLY|NODES|NUMBER|OBLIGATORY|OBJECT|OF|OFF|ON|OTHERS|OVERLAY|PACK|PAD|PARAMETERS|PERCENTAGE|POSITION|PROGRAM|PROVIDE|PUBLIC|PUT|PF\\d\\d|RAISE|RAISING|RANGES?|READ|RECEIVE|REDEFINITION|REFRESH|REJECT|REPORT|RESERVE|RESUME|RETRY|RETURN|RETURNING|RIGHT|ROLLBACK|REPLACE|SCROLL|SEARCH|SELECT|SHIFT|SIGN|SINGLE|SIZE|SKIP|SORT|SPLIT|STATICS|STOP|STYLE|SUBMATCHES|SUBMIT|SUBTRACT|SUM(?!\\()|SUMMARY|SUMMING|SUPPLY|TABLE|TABLES|TIMESTAMP|TIMES?|TIMEZONE|TITLE|\\??TO|TOP-OF-PAGE|TRANSFER|TRANSLATE|TRY|TYPES|ULINE|UNDER|UNPACK|UPDATE|USING|VALUE|VALUES|VIA|VARYING|VARY|WAIT|WHEN|WHERE|WIDTH|WHILE|WITH|WINDOW|WRITE|XSD|ZERO)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"(abs|acos|asin|atan|boolc|boolx|bit_set|char_off|charlen|ceil|cmax|cmin|condense|contains|contains_any_of|contains_any_not_of|concat_lines_of|cos|cosh|count|count_any_of|count_any_not_of|dbmaxlen|distance|escape|exp|find|find_end|find_any_of|find_any_not_of|floor|frac|from_mixed|insert|lines|log|log10|match|matches|nmax|nmin|numofchar|repeat|replace|rescale|reverse|round|segment|shift_left|shift_right|sign|sin|sinh|sqrt|strlen|substring|substring_after|substring_from|substring_before|substring_to|tan|tanh|to_upper|to_lower|to_mixed|translate|trunc|xstrlen)(\\()\\b\">\n+        <bygroups>\n+          <token type=\"NameBuiltin\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"&amp;[0-9]\">\n+        <token type=\"Name\"/>\n+      </rule>\n+      <rule pattern=\"[0-9]+\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"(?&lt;=(\\s|.))(AND|OR|EQ|NE|GT|LT|GE|LE|CO|CN|CA|NA|CS|NOT|NS|CP|NP|BYTE-CO|BYTE-CN|BYTE-CA|BYTE-NA|BYTE-CS|BYTE-NS|IS\\s+(NOT\\s+)?(INITIAL|ASSIGNED|REQUESTED|BOUND))\\b\">\n+        <token type=\"OperatorWord\"/>\n+      </rule>\n+      <rule>\n+        <include state=\"variable-names\"/>\n+      </rule>\n+      <rule pattern=\"[?*&lt;&gt;=\\-+&amp;]\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"&#39;(&#39;&#39;|[^&#39;])*&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+      <rule pattern=\"`([^`])*`\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+      <rule pattern=\"([|}])([^{}|]*?)([|{])\">\n+        <bygroups>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"LiteralStringSingle\"/>\n+          <token type=\"Punctuation\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"[/;:()\\[\\],.]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"(!)(\\w+)\">\n+        <bygroups>\n+          <token type=\"Operator\"/>\n+          <token type=\"Name\"/>\n+        </bygroups>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "3ffd51c6c6b5d0ab9b31af8c3e37d37734198352",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/abnf.xml",
      "status": "added",
      "additions": 66,
      "deletions": 0,
      "changes": 66,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fabnf.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fabnf.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fabnf.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -0,0 +1,66 @@\n+<lexer>\n+  <config>\n+    <name>ABNF</name>\n+    <alias>abnf</alias>\n+    <filename>*.abnf</filename>\n+    <mime_type>text/x-abnf</mime_type>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\";.*$\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"(%[si])?&#34;[^&#34;]*&#34;\">\n+        <token type=\"Literal\"/>\n+      </rule>\n+      <rule pattern=\"%b[01]+\\-[01]+\\b\">\n+        <token type=\"Literal\"/>\n+      </rule>\n+      <rule pattern=\"%b[01]+(\\.[01]+)*\\b\">\n+        <token type=\"Literal\"/>\n+      </rule>\n+      <rule pattern=\"%d[0-9]+\\-[0-9]+\\b\">\n+        <token type=\"Literal\"/>\n+      </rule>\n+      <rule pattern=\"%d[0-9]+(\\.[0-9]+)*\\b\">\n+        <token type=\"Literal\"/>\n+      </rule>\n+      <rule pattern=\"%x[0-9a-fA-F]+\\-[0-9a-fA-F]+\\b\">\n+        <token type=\"Literal\"/>\n+      </rule>\n+      <rule pattern=\"%x[0-9a-fA-F]+(\\.[0-9a-fA-F]+)*\\b\">\n+        <token type=\"Literal\"/>\n+      </rule>\n+      <rule pattern=\"\\b[0-9]+\\*[0-9]+\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"\\b[0-9]+\\*\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"\\b[0-9]+\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"\\*\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"(HEXDIG|DQUOTE|DIGIT|VCHAR|OCTET|ALPHA|CHAR|CRLF|HTAB|LWSP|BIT|CTL|WSP|LF|SP|CR)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"[a-zA-Z][a-zA-Z0-9-]+\\b\">\n+        <token type=\"NameClass\"/>\n+      </rule>\n+      <rule pattern=\"(=/|=|/)\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"[\\[\\]()]\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\".\">\n+        <token type=\"Text\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "d6727a103baf08ec6d114e201624185f34829e84",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/actionscript.xml",
      "status": "added",
      "additions": 68,
      "deletions": 0,
      "changes": 68,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Factionscript.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Factionscript.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Factionscript.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -0,0 +1,68 @@\n+<lexer>\n+  <config>\n+    <name>ActionScript</name>\n+    <alias>as</alias>\n+    <alias>actionscript</alias>\n+    <filename>*.as</filename>\n+    <mime_type>application/x-actionscript</mime_type>\n+    <mime_type>text/x-actionscript</mime_type>\n+    <mime_type>text/actionscript</mime_type>\n+    <dot_all>true</dot_all>\n+    <not_multiline>true</not_multiline>\n+  </config>\n+  <rules>\n+    <state name=\"root\">\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"//.*?\\n\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"/\\*.*?\\*/\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+      <rule pattern=\"/(\\\\\\\\|\\\\/|[^/\\n])*/[gim]*\">\n+        <token type=\"LiteralStringRegex\"/>\n+      </rule>\n+      <rule pattern=\"[~^*!%&amp;&lt;&gt;|+=:;,/?\\\\-]+\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+      <rule pattern=\"[{}\\[\\]();.]+\">\n+        <token type=\"Punctuation\"/>\n+      </rule>\n+      <rule pattern=\"(instanceof|arguments|continue|default|typeof|switch|return|catch|break|while|throw|each|this|with|else|case|var|new|for|try|if|do|in)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"(implements|protected|namespace|interface|intrinsic|override|function|internal|private|package|extends|dynamic|import|native|return|public|static|class|const|super|final|get|set)\\b\">\n+        <token type=\"KeywordDeclaration\"/>\n+      </rule>\n+      <rule pattern=\"(true|false|null|NaN|Infinity|-Infinity|undefined|Void)\\b\">\n+        <token type=\"KeywordConstant\"/>\n+      </rule>\n+      <rule pattern=\"(IDynamicPropertyOutputIDynamicPropertyWriter|DisplacmentMapFilterMode|AccessibilityProperties|ContextMenuBuiltInItems|SharedObjectFlushStatus|DisplayObjectContainer|IllegalOperationError|DisplacmentMapFilter|InterpolationMethod|URLLoaderDataFormat|PrintJobOrientation|ActionScriptVersion|BitmapFilterQuality|GradientBevelFilter|GradientGlowFilter|DeleteObjectSample|StackOverflowError|SoundLoaderContext|ScriptTimeoutError|SecurityErrorEvent|InteractiveObject|StageDisplayState|FileReferenceList|TextFieldAutoSize|ApplicationDomain|BitmapDataChannel|ColorMatrixFilter|ExternalInterface|IMEConversionMode|DropShadowFilter|URLRequestHeader|ContextMenuEvent|ConvultionFilter|URLRequestMethod|BitmapFilterType|IEventDispatcher|ContextMenuItem|LocalConnection|InvalidSWFError|AsyncErrorEvent|MovieClipLoader|IBitmapDrawable|PrintJobOptions|EventDispatcher|NewObjectSample|HTTPStatusEvent|TextFormatAlign|IExternalizable|FullScreenEvent|DefinitionError|TextLineMetrics|NetStatusEvent|ColorTransform|ObjectEncoding|SecurityDomain|StageScaleMode|FocusDirection|ReferenceError|SoundTransform|KeyboardEvent|DisplayObject|PixelSnapping|LoaderContext|NetConnection|SecurityPanel|SecurityError|FileReference|AsBroadcaster|LineScaleMode|AntiAliasType|Accessibility|TextFieldType|URLVariabeles|ActivityEvent|ProgressEvent|TextColorType|StageQuality|TextSnapshot|Capabilities|BitmapFilter|SpreadMethod|GradientType|TextRenderer|SoundChannel|SharedObject|IOErrorEvent|SimpleButton|ContextMenu|InvokeEvent|CSMSettings|SyntaxError|StatusEvent|KeyLocation|IDataOutput|VerifyError|XMLDocument|XMLNodeType|MemoryError|GridFitType|BevelFilter|ErrorEvent|FrameLabel|GlowFilter|LoaderInfo|Microphone|MorphShape|BlurFilter|MouseEvent|FocusEvent|SoundMixer|FileFilter|TimerEvent|JointStyle|EventPhase|StageAlign|Dictionary|URLRequest|StyleSheet|SWFVersion|IDataInput|StaticText|RangeError|BitmapData|TextFormat|StackFrame|Namespace|SyncEvent|Rectangle|URLLoader|TypeError|Responder|NetStream|BlendMode|CapsStyle|DataEvent|ByteArray|MovieClip|Transform|TextField|Selection|AVM1Movie|XMLSocket|URLStream|FontStyle|EvalError|FontType|LoadVars|Graphics|Security|IMEEvent|URIError|Keyboard|Function|EOFError|PrintJob|IOError|XMLList|Boolean|ID3Info|XMLNode|Bitmap|String|RegExp|Sample|Object|Sprite|System|Endian|Matrix|Camera|Locale|Number|Loader|Socket|QName|Class|Timer|Sound|Shape|XMLUI|Mouse|Scene|Stage|Color|Point|Video|Error|Event|Proxy|Array|Date|uint|Math|Font|int|Key|IME|XML)\\b\">\n+        <token type=\"NameBuiltin\"/>\n+      </rule>\n+      <rule pattern=\"(decodeURIComponent|updateAfterEvent|clearInterval|setInterval|getVersion|parseFloat|fscommand|isXMLName|encodeURI|decodeURI|getTimer|unescape|isFinite|parseInt|getURL|escape|trace|isNaN|eval)\\b\">\n+        <token type=\"NameFunction\"/>\n+      </rule>\n+      <rule pattern=\"[$a-zA-Z_]\\w*\">\n+        <token type=\"NameOther\"/>\n+      </rule>\n+      <rule pattern=\"[0-9][0-9]*\\.[0-9]+([eE][0-9]+)?[fd]?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"0x[0-9a-f]+\">\n+        <token type=\"LiteralNumberHex\"/>\n+      </rule>\n+      <rule pattern=\"[0-9]+\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"&#34;(\\\\\\\\|\\\\&#34;|[^&#34;])*&#34;\">\n+        <token type=\"LiteralStringDouble\"/>\n+      </rule>\n+      <rule pattern=\"&#39;(\\\\\\\\|\\\\&#39;|[^&#39;])*&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "e5f653848aa8d2cab0e09be209f8660fbe85d0be",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/actionscript_3.xml",
      "status": "added",
      "additions": 163,
      "deletions": 0,
      "changes": 163,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Factionscript_3.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Factionscript_3.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Factionscript_3.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e",
      "patch": "@@ -0,0 +1,163 @@\n+<lexer>\n+  <config>\n+    <name>ActionScript 3</name>\n+    <alias>as3</alias>\n+    <alias>actionscript3</alias>\n+    <filename>*.as</filename>\n+    <mime_type>application/x-actionscript3</mime_type>\n+    <mime_type>text/x-actionscript3</mime_type>\n+    <mime_type>text/actionscript3</mime_type>\n+    <dot_all>true</dot_all>\n+  </config>\n+  <rules>\n+    <state name=\"funcparams\">\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"(\\s*)(\\.\\.\\.)?([$a-zA-Z_]\\w*)(\\s*)(:)(\\s*)([$a-zA-Z_]\\w*(?:\\.&lt;\\w+&gt;)?|\\*)(\\s*)\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"Name\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Operator\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"KeywordType\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+        <push state=\"defval\"/>\n+      </rule>\n+      <rule pattern=\"\\)\">\n+        <token type=\"Operator\"/>\n+        <push state=\"type\"/>\n+      </rule>\n+    </state>\n+    <state name=\"type\">\n+      <rule pattern=\"(\\s*)(:)(\\s*)([$a-zA-Z_]\\w*(?:\\.&lt;\\w+&gt;)?|\\*)\">\n+        <bygroups>\n+          <token type=\"Text\"/>\n+          <token type=\"Operator\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"KeywordType\"/>\n+        </bygroups>\n+        <pop depth=\"2\"/>\n+      </rule>\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+        <pop depth=\"2\"/>\n+      </rule>\n+      <rule>\n+        <pop depth=\"2\"/>\n+      </rule>\n+    </state>\n+    <state name=\"defval\">\n+      <rule pattern=\"(=)(\\s*)([^(),]+)(\\s*)(,?)\">\n+        <bygroups>\n+          <token type=\"Operator\"/>\n+          <token type=\"Text\"/>\n+          <usingself state=\"root\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Operator\"/>\n+        </bygroups>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule pattern=\",\">\n+        <token type=\"Operator\"/>\n+        <pop depth=\"1\"/>\n+      </rule>\n+      <rule>\n+        <pop depth=\"1\"/>\n+      </rule>\n+    </state>\n+    <state name=\"root\">\n+      <rule pattern=\"\\s+\">\n+        <token type=\"Text\"/>\n+      </rule>\n+      <rule pattern=\"(function\\s+)([$a-zA-Z_]\\w*)(\\s*)(\\()\">\n+        <bygroups>\n+          <token type=\"KeywordDeclaration\"/>\n+          <token type=\"NameFunction\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Operator\"/>\n+        </bygroups>\n+        <push state=\"funcparams\"/>\n+      </rule>\n+      <rule pattern=\"(var|const)(\\s+)([$a-zA-Z_]\\w*)(\\s*)(:)(\\s*)([$a-zA-Z_]\\w*(?:\\.&lt;\\w+&gt;)?)\">\n+        <bygroups>\n+          <token type=\"KeywordDeclaration\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Name\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Punctuation\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"KeywordType\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(import|package)(\\s+)((?:[$a-zA-Z_]\\w*|\\.)+)(\\s*)\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"NameNamespace\"/>\n+          <token type=\"Text\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(new)(\\s+)([$a-zA-Z_]\\w*(?:\\.&lt;\\w+&gt;)?)(\\s*)(\\()\">\n+        <bygroups>\n+          <token type=\"Keyword\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"KeywordType\"/>\n+          <token type=\"Text\"/>\n+          <token type=\"Operator\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"//.*?\\n\">\n+        <token type=\"CommentSingle\"/>\n+      </rule>\n+      <rule pattern=\"/\\*.*?\\*/\">\n+        <token type=\"CommentMultiline\"/>\n+      </rule>\n+      <rule pattern=\"/(\\\\\\\\|\\\\/|[^\\n])*/[gisx]*\">\n+        <token type=\"LiteralStringRegex\"/>\n+      </rule>\n+      <rule pattern=\"(\\.)([$a-zA-Z_]\\w*)\">\n+        <bygroups>\n+          <token type=\"Operator\"/>\n+          <token type=\"NameAttribute\"/>\n+        </bygroups>\n+      </rule>\n+      <rule pattern=\"(case|default|for|each|in|while|do|break|return|continue|if|else|throw|try|catch|with|new|typeof|arguments|instanceof|this|switch|import|include|as|is)\\b\">\n+        <token type=\"Keyword\"/>\n+      </rule>\n+      <rule pattern=\"(class|public|final|internal|native|override|private|protected|static|import|extends|implements|interface|intrinsic|return|super|dynamic|function|const|get|namespace|package|set)\\b\">\n+        <token type=\"KeywordDeclaration\"/>\n+      </rule>\n+      <rule pattern=\"(true|false|null|NaN|Infinity|-Infinity|undefined|void)\\b\">\n+        <token type=\"KeywordConstant\"/>\n+      </rule>\n+      <rule pattern=\"(decodeURI|decodeURIComponent|encodeURI|escape|eval|isFinite|isNaN|isXMLName|clearInterval|fscommand|getTimer|getURL|getVersion|isFinite|parseFloat|parseInt|setInterval|trace|updateAfterEvent|unescape)\\b\">\n+        <token type=\"NameFunction\"/>\n+      </rule>\n+      <rule pattern=\"[$a-zA-Z_]\\w*\">\n+        <token type=\"Name\"/>\n+      </rule>\n+      <rule pattern=\"[0-9][0-9]*\\.[0-9]+([eE][0-9]+)?[fd]?\">\n+        <token type=\"LiteralNumberFloat\"/>\n+      </rule>\n+      <rule pattern=\"0x[0-9a-f]+\">\n+        <token type=\"LiteralNumberHex\"/>\n+      </rule>\n+      <rule pattern=\"[0-9]+\">\n+        <token type=\"LiteralNumberInteger\"/>\n+      </rule>\n+      <rule pattern=\"&#34;(\\\\\\\\|\\\\&#34;|[^&#34;])*&#34;\">\n+        <token type=\"LiteralStringDouble\"/>\n+      </rule>\n+      <rule pattern=\"&#39;(\\\\\\\\|\\\\&#39;|[^&#39;])*&#39;\">\n+        <token type=\"LiteralStringSingle\"/>\n+      </rule>\n+      <rule pattern=\"[~^*!%&amp;&lt;&gt;|+=:;,/?\\\\{}\\[\\]().-]+\">\n+        <token type=\"Operator\"/>\n+      </rule>\n+    </state>\n+  </rules>\n+</lexer>\n\\ No newline at end of file"
    },
    {
      "sha": "5854a20e9cb7a7288e5925ad999e95bcbe3ecf8c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/ada.xml",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fada.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fada.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fada.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "30bad5ae9962370ab31f52777f12a124c0ac67b2",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/al.xml",
      "status": "added",
      "additions": 75,
      "deletions": 0,
      "changes": 75,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fal.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fal.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fal.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "84fe20b344d0e5a2c49d84f4f204c3feda64b096",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/angular2.xml",
      "status": "added",
      "additions": 108,
      "deletions": 0,
      "changes": 108,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fangular2.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fangular2.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fangular2.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "e57edd4047d0b38af6ce0a5aa30e05b48c550732",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/antlr.xml",
      "status": "added",
      "additions": 317,
      "deletions": 0,
      "changes": 317,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fantlr.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fantlr.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fantlr.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "7643541c1bcb02d30c577c41b7a9aaf9ac92abbe",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/apacheconf.xml",
      "status": "added",
      "additions": 74,
      "deletions": 0,
      "changes": 74,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fapacheconf.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fapacheconf.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fapacheconf.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "959448ca40385ec967138cffdf66f602226a0fa7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/apl.xml",
      "status": "added",
      "additions": 59,
      "deletions": 0,
      "changes": 59,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fapl.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fapl.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fapl.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "1de6c67ee102b5b23ff90652f0de9e8340ab8fc8",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/applescript.xml",
      "status": "added",
      "additions": 130,
      "deletions": 0,
      "changes": 130,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fapplescript.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fapplescript.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fapplescript.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "00399c2c8ed81d748eb94c66789ea80b1f3bfea8",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/arduino.xml",
      "status": "added",
      "additions": 309,
      "deletions": 0,
      "changes": 309,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Farduino.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Farduino.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Farduino.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "e5966cf62d2711666bfaf74b19da0faac506d1f2",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/armasm.xml",
      "status": "added",
      "additions": 126,
      "deletions": 0,
      "changes": 126,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Farmasm.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Farmasm.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Farmasm.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "07476ff745ada7c75d6360db579b2b324a9cbfc6",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/awk.xml",
      "status": "added",
      "additions": 95,
      "deletions": 0,
      "changes": 95,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fawk.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fawk.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fawk.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "d13c123191810b8850e8b7e38ca16858c27807a7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/ballerina.xml",
      "status": "added",
      "additions": 97,
      "deletions": 0,
      "changes": 97,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fballerina.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fballerina.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fballerina.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "10c8dbe8dc9e6851aec027cee87a6f7878ed0074",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/bash.xml",
      "status": "added",
      "additions": 217,
      "deletions": 0,
      "changes": 217,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbash.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbash.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbash.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "d3e0627280e9c49e797d2f108db6ee3b0934c72e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/batchfile.xml",
      "status": "added",
      "additions": 660,
      "deletions": 0,
      "changes": 660,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbatchfile.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbatchfile.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbatchfile.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "8fde161b36ced2828d6072636bb16e34bbea7e85",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/bibtex.xml",
      "status": "added",
      "additions": 152,
      "deletions": 0,
      "changes": 152,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbibtex.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbibtex.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbibtex.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "1efc9c8aeb94bc8bcfcb1c4db17e3287a99eaf27",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/bicep.xml",
      "status": "added",
      "additions": 68,
      "deletions": 0,
      "changes": 68,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbicep.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbicep.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbicep.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "591b1ad0f4a201ec43799cd656993e21eef2add7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/blitzbasic.xml",
      "status": "added",
      "additions": 141,
      "deletions": 0,
      "changes": 141,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fblitzbasic.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fblitzbasic.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fblitzbasic.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "5c9842477b279dcede642fdb591711d86e99fc2c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/bnf.xml",
      "status": "added",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbnf.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbnf.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbnf.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "4c84c33082f1e14359d7baa3042cf6b2c2a36e3e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/brainfuck.xml",
      "status": "added",
      "additions": 51,
      "deletions": 0,
      "changes": 51,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbrainfuck.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbrainfuck.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fbrainfuck.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "e8702c58d9d5901250849422733619d8c28b71d3",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/c++.xml",
      "status": "added",
      "additions": 326,
      "deletions": 0,
      "changes": 326,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc%2B%2B.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc%2B%2B.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc%2B%2B.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "d63d9b7389cebafc7ad7d3aa9cfe7584a1c2ce6c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/c.xml",
      "status": "added",
      "additions": 253,
      "deletions": 0,
      "changes": 253,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fc.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "3e7d1470bf75f0cabea0cfcacfe8f3584dd527df",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/cap_n_proto.xml",
      "status": "added",
      "additions": 122,
      "deletions": 0,
      "changes": 122,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcap_n_proto.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcap_n_proto.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcap_n_proto.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "4c4121835b204f8e19c9aea81d0896b1740e04ba",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/ceylon.xml",
      "status": "added",
      "additions": 151,
      "deletions": 0,
      "changes": 151,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fceylon.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fceylon.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fceylon.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "d3305491925b5a3d18f50c303aab235910a40f45",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/cfengine3.xml",
      "status": "added",
      "additions": 206,
      "deletions": 0,
      "changes": 206,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcfengine3.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcfengine3.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcfengine3.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "46a84cf6ab73bf468937a67622dd1fd756b18635",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/cfstatement.xml",
      "status": "added",
      "additions": 92,
      "deletions": 0,
      "changes": 92,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcfstatement.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcfstatement.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcfstatement.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "860439aa8a91e34c9c471db1f8e7241ec0b4b159",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/chaiscript.xml",
      "status": "added",
      "additions": 134,
      "deletions": 0,
      "changes": 134,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fchaiscript.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fchaiscript.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fchaiscript.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "ee83a6a0c23b16bc4d533fa8e9c5238fa09a1072",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/clojure.xml",
      "status": "added",
      "additions": 68,
      "deletions": 0,
      "changes": 68,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fclojure.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fclojure.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fclojure.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "b041cfd016e23e9e6ba1d71085ed4ba310a8f0c0",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/cmake.xml",
      "status": "added",
      "additions": 90,
      "deletions": 0,
      "changes": 90,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcmake.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcmake.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcmake.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "a8a80291d43b5591558f632a7ddaee73769d3514",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/cobol.xml",
      "status": "added",
      "additions": 90,
      "deletions": 0,
      "changes": 90,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcobol.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcobol.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcobol.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "e29722fb83c6bf6d56bbe3bcaf0bfaa44acf34bd",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/coffeescript.xml",
      "status": "added",
      "additions": 210,
      "deletions": 0,
      "changes": 210,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcoffeescript.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcoffeescript.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcoffeescript.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "0fb9a7a4b337d8d3de1eef0fdccae920f0b49af3",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/common_lisp.xml",
      "status": "added",
      "additions": 184,
      "deletions": 0,
      "changes": 184,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcommon_lisp.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcommon_lisp.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcommon_lisp.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "62f64ff9925e573691f58e10c0eb5cf7fcb8d89b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/coq.xml",
      "status": "added",
      "additions": 136,
      "deletions": 0,
      "changes": 136,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcoq.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcoq.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcoq.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "94853db33ff772f26a5d0065120e2187fe0ce71c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/crystal.xml",
      "status": "added",
      "additions": 762,
      "deletions": 0,
      "changes": 762,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcrystal.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcrystal.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcrystal.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "8c2ff450fb74bd7889d1962c31320363df7e1213",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/csharp.xml",
      "status": "added",
      "additions": 115,
      "deletions": 0,
      "changes": 115,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcsharp.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcsharp.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcsharp.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "0faa06e7fda44badc8bf8f701820e34b48744e6f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/css.xml",
      "status": "added",
      "additions": 323,
      "deletions": 0,
      "changes": 323,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcss.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcss.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcss.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "15dfe4d4f2d80d9388b8c59dbfb24fccea0bd507",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/cython.xml",
      "status": "added",
      "additions": 372,
      "deletions": 0,
      "changes": 372,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcython.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcython.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fcython.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "49d7843a3aaedd2b4adfb6e12e573e3a77d2290e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/d.xml",
      "status": "added",
      "additions": 130,
      "deletions": 0,
      "changes": 130,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fd.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fd.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fd.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "f1b454fafc94560650438071c6fa00a42bca6f14",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/dart.xml",
      "status": "added",
      "additions": 213,
      "deletions": 0,
      "changes": 213,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdart.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdart.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdart.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "c10963e21b2216b6bbc6dda0cf0823e4176486e7",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/diff.xml",
      "status": "added",
      "additions": 40,
      "deletions": 0,
      "changes": 40,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdiff.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdiff.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdiff.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "3c97c222ea7d1f6f6607b5d9efc76f67160ba1a0",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/django_jinja.xml",
      "status": "added",
      "additions": 153,
      "deletions": 0,
      "changes": 153,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdjango_jinja.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdjango_jinja.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdjango_jinja.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "0edbbdeacebb9e8c091c9210965f639c11aa6ac6",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/dtd.xml",
      "status": "added",
      "additions": 168,
      "deletions": 0,
      "changes": 168,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdtd.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdtd.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdtd.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "3660d144042816b87b7b1d3936e3d372d6f53537",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/dylan.xml",
      "status": "added",
      "additions": 176,
      "deletions": 0,
      "changes": 176,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdylan.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdylan.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fdylan.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "df5d62ffa6d2078ad27d2233c79dd06a4148ace5",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/ebnf.xml",
      "status": "added",
      "additions": 90,
      "deletions": 0,
      "changes": 90,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Febnf.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Febnf.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Febnf.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "a3308d619d82a36215791f2caca14f536b3b60b1",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/elixir.xml",
      "status": "added",
      "additions": 743,
      "deletions": 0,
      "changes": 743,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Felixir.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Felixir.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Felixir.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "ed65efc638d80d41b82871f7389c186a810b7808",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/elm.xml",
      "status": "added",
      "additions": 119,
      "deletions": 0,
      "changes": 119,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Felm.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Felm.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Felm.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "668bc621eae647becb542dbffc3a96404ea085b9",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/emacslisp.xml",
      "status": "added",
      "additions": 132,
      "deletions": 0,
      "changes": 132,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Femacslisp.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Femacslisp.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Femacslisp.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "b18658868248486b68df62b4afe1423131b59953",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/erlang.xml",
      "status": "added",
      "additions": 166,
      "deletions": 0,
      "changes": 166,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ferlang.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ferlang.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ferlang.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "4743b9a2e8d0f678827d317b214d86db6b401348",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/factor.xml",
      "status": "added",
      "additions": 412,
      "deletions": 0,
      "changes": 412,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffactor.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffactor.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffactor.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "b9b6d59506e97cf7a775814888ebc158db8e9e1c",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/fennel.xml",
      "status": "added",
      "additions": 68,
      "deletions": 0,
      "changes": 68,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffennel.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffennel.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffennel.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "deb78145e32ae258918f2ed47d0322eb14505de9",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/fish.xml",
      "status": "added",
      "additions": 159,
      "deletions": 0,
      "changes": 159,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffish.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffish.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffish.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "31096a225d157a038cee9365c64ac6b084cb9e07",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/forth.xml",
      "status": "added",
      "additions": 78,
      "deletions": 0,
      "changes": 78,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fforth.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fforth.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fforth.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "012808b54614962ac77facfa3928718539d54a03",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/fortran.xml",
      "status": "added",
      "additions": 82,
      "deletions": 0,
      "changes": 82,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffortran.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffortran.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffortran.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "f60897977be796fc74882676dec95b313313050a",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/fsharp.xml",
      "status": "added",
      "additions": 245,
      "deletions": 0,
      "changes": 245,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffsharp.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffsharp.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Ffsharp.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "1ef31dec9516c52f576ddd05095ee62514f371d0",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/gas.xml",
      "status": "added",
      "additions": 121,
      "deletions": 0,
      "changes": 121,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgas.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgas.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgas.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "fb75fc800a9df560e86fb2874ecd105232efd6bd",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/gdscript.xml",
      "status": "added",
      "additions": 265,
      "deletions": 0,
      "changes": 265,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgdscript.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgdscript.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgdscript.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "c53a2cbb5b84aa53182725e30020f2a49031b5e3",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/gherkin.xml",
      "status": "added",
      "additions": 263,
      "deletions": 0,
      "changes": 263,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgherkin.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgherkin.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgherkin.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "ca0b696de61555933e9713711c4c0944d4d8bf9d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/glsl.xml",
      "status": "added",
      "additions": 65,
      "deletions": 0,
      "changes": 65,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fglsl.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fglsl.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fglsl.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "ee6a245f38ae7a18aa419f91b26d236a613c1e86",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/gnuplot.xml",
      "status": "added",
      "additions": 289,
      "deletions": 0,
      "changes": 289,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgnuplot.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgnuplot.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgnuplot.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "a293330e94e2f602a56ea1461497ff138273a97f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/go_template.xml",
      "status": "added",
      "additions": 112,
      "deletions": 0,
      "changes": 112,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgo_template.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgo_template.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgo_template.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "b06227357df8c0e279ba71c224659a817b938eeb",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/graphql.xml",
      "status": "added",
      "additions": 88,
      "deletions": 0,
      "changes": 88,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgraphql.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgraphql.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgraphql.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "3af0a43e7af798ecf31867887a8b61fcb7341e1f",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/groff.xml",
      "status": "added",
      "additions": 90,
      "deletions": 0,
      "changes": 90,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgroff.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgroff.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgroff.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "0dd7b82603f3ed322ca53aab0ec9911cb543b954",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/groovy.xml",
      "status": "added",
      "additions": 135,
      "deletions": 0,
      "changes": 135,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgroovy.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgroovy.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fgroovy.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "7cf2a648a9badbdf97d0c6f1c7ef1ce580836a7d",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/handlebars.xml",
      "status": "added",
      "additions": 147,
      "deletions": 0,
      "changes": 147,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhandlebars.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhandlebars.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhandlebars.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "6dc6912efb7e9b97a5d428d4eaf7e4ec8c2d418b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/haskell.xml",
      "status": "added",
      "additions": 272,
      "deletions": 0,
      "changes": 272,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhaskell.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhaskell.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhaskell.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "d3ed208af9650d04b6594289829c31eb8018d801",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/hcl.xml",
      "status": "added",
      "additions": 143,
      "deletions": 0,
      "changes": 143,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhcl.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhcl.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhcl.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "a6f28eab1ae2d4977782a99781452f826b6bd6ab",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/hexdump.xml",
      "status": "added",
      "additions": 189,
      "deletions": 0,
      "changes": 189,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhexdump.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhexdump.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhexdump.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "64e667dd7c250223243f9a75eafb49ee64a0b952",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/hlb.xml",
      "status": "added",
      "additions": 149,
      "deletions": 0,
      "changes": 149,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhlb.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhlb.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhlb.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "a0dae46aec1fba4d92756a4e18b6bd388ee60319",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/hy.xml",
      "status": "added",
      "additions": 104,
      "deletions": 0,
      "changes": 104,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhy.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhy.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fhy.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "9592d88228f2ffd798b28bd0f4457101fb2de4a4",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/idris.xml",
      "status": "added",
      "additions": 216,
      "deletions": 0,
      "changes": 216,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fidris.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fidris.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fidris.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "1cc020570583c256a6674383864654a41cba9e6e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/igor.xml",
      "status": "added",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Figor.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Figor.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Figor.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "88a742b00d3ad75f9f502a7443ac021ddaea3406",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/ini.xml",
      "status": "added",
      "additions": 40,
      "deletions": 0,
      "changes": 40,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fini.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fini.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fini.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "9ad94fa52a2548f2332a78ddee1bef113b934714",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/io.xml",
      "status": "added",
      "additions": 71,
      "deletions": 0,
      "changes": 71,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fio.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fio.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fio.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "872d08122bbc6d14567e453c299d27446407f76e",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/j.xml",
      "status": "added",
      "additions": 157,
      "deletions": 0,
      "changes": 157,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fj.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fj.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fj.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "715f043af73656d352a55c3aeb99b04afef3d106",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/java.xml",
      "status": "added",
      "additions": 118,
      "deletions": 0,
      "changes": 118,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjava.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjava.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjava.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "f8e7b1b7d8175e936aade1e2a0ebb2aea75916d9",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/javascript.xml",
      "status": "added",
      "additions": 159,
      "deletions": 0,
      "changes": 159,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjavascript.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjavascript.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjavascript.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "bbe10b1ba61313d8cfc44f4de3d5ea9799ef4062",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/json.xml",
      "status": "added",
      "additions": 110,
      "deletions": 0,
      "changes": 110,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjson.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjson.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjson.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "776dcdbcbb27442bdeddc57cd4ba5d0defef546b",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/julia.xml",
      "status": "added",
      "additions": 400,
      "deletions": 0,
      "changes": 400,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjulia.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjulia.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjulia.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    },
    {
      "sha": "92c785d0c31e6451a4613f52096e48fad85e42a9",
      "filename": "backend/vendor/github.com/alecthomas/chroma/v2/lexers/embedded/jungle.xml",
      "status": "added",
      "additions": 98,
      "deletions": 0,
      "changes": 98,
      "blob_url": "https://github.com/umputun/remark42/blob/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjungle.xml",
      "raw_url": "https://github.com/umputun/remark42/raw/9c1a827685a84520ac35eb6d4ca2375ca1e9a75e/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjungle.xml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fvendor%2Fgithub.com%2Falecthomas%2Fchroma%2Fv2%2Flexers%2Fembedded%2Fjungle.xml?ref=9c1a827685a84520ac35eb6d4ca2375ca1e9a75e"
    }
  ]
}
