{
  "sha": "98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODo5ODIwMWVjYzI0ZDVlNWMyNjJmMTI5MmY0MTZkYzZkZDExZjgyZDNl",
  "commit": {
    "author": {
      "name": "Osama Sayegh",
      "email": "asooomaasoooma90@gmail.com",
      "date": "2021-02-01T10:07:11Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2021-02-01T10:07:11Z"
    },
    "message": "DEV: {{user-selector}} replacement (#11726)\n\nThis PR is the first step towards replacing our `{{user-selector}}` and eventually deprecating and removing it from our codebase. Some of `{{user-selector}}` problems are:\r\n\r\n1. It's called `{{user-selector}}`, but in reality in can also select groups and emails.\r\n2. It's an Ember component, yet it doesn't have a handlebars template and uses jQuery to render itself and modify the DOM. An example of this problem is when you want to clear the selected users programmatically, see [this](https://github.com/discourse/discourse/blob/6c155dba775441ccef9ac21c770102857978286d/app/assets/javascripts/discourse/app/components/user-selector.js#L179-L185).\r\n3. We now have select kit which does very similar things but a lot better.\r\n\r\nThis PR introduces `{{email-group-user-chooser}}` which is meant to replace `{{user-selector}}`. It extends select kit and has the same features that `{{user-selector}}` has. `{{user-selector}}` is still used in a few places in core, but they'll all be replaced with the new component in a separate commit. \r\n\r\nOnce `{{user-selector}}` is not used anywhere in core, it'll be deprecated and then removed after the 2.7 release.",
    "tree": {
      "sha": "94f0c53e2b4aad056424a941e29179a6c3f9b129",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/94f0c53e2b4aad056424a941e29179a6c3f9b129"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgF9LPCRBK7hj4Ov3rIwAAdHIIAJXEPeu3k4Whrkg/aVa90YgE\nphZ2JZhuWrQEiRL5gm6F2wqub0h9brJ93JLtnG7uhOUEKE5xEAzx84GF7eFRs/EW\nvPfXYdmYRtdXMfVPTvyFs7V848WzNe1KMgxHRkhheT3MNKJ+/7rccoduspwhpEBj\n9lDUmyVHyztA7QsNionsuAg77/WtaVXm5HeZSMJRL7878kgExvz9/XX+B7z+q0lh\nFi3ZURi7F8nSmfilmN9+JoWWgavH/p76kq8TyHfCwiRn/f5tO6iOJKjB7IA/0PCX\nUKM2vLYpeSpL/SdBdLsj5bU8UnJnCOvoEbzsOQh+kzkXM4RSQ2GieGD1TGBIbtY=\n=V+nP\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 94f0c53e2b4aad056424a941e29179a6c3f9b129\nparent 7e4dad3c565a6839f4a0e0e8ef1e4c86e639f3f7\nauthor Osama Sayegh <asooomaasoooma90@gmail.com> 1612174031 +0300\ncommitter GitHub <noreply@github.com> 1612174031 +0300\n\nDEV: {{user-selector}} replacement (#11726)\n\nThis PR is the first step towards replacing our `{{user-selector}}` and eventually deprecating and removing it from our codebase. Some of `{{user-selector}}` problems are:\r\n\r\n1. It's called `{{user-selector}}`, but in reality in can also select groups and emails.\r\n2. It's an Ember component, yet it doesn't have a handlebars template and uses jQuery to render itself and modify the DOM. An example of this problem is when you want to clear the selected users programmatically, see [this](https://github.com/discourse/discourse/blob/6c155dba775441ccef9ac21c770102857978286d/app/assets/javascripts/discourse/app/components/user-selector.js#L179-L185).\r\n3. We now have select kit which does very similar things but a lot better.\r\n\r\nThis PR introduces `{{email-group-user-chooser}}` which is meant to replace `{{user-selector}}`. It extends select kit and has the same features that `{{user-selector}}` has. `{{user-selector}}` is still used in a few places in core, but they'll all be replaced with the new component in a separate commit. \r\n\r\nOnce `{{user-selector}}` is not used anywhere in core, it'll be deprecated and then removed after the 2.7 release."
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
  "html_url": "https://github.com/discourse/discourse/commit/98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/comments",
  "author": {
    "login": "OsamaSayegh",
    "id": 17474474,
    "node_id": "MDQ6VXNlcjE3NDc0NDc0",
    "avatar_url": "https://avatars.githubusercontent.com/u/17474474?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/OsamaSayegh",
    "html_url": "https://github.com/OsamaSayegh",
    "followers_url": "https://api.github.com/users/OsamaSayegh/followers",
    "following_url": "https://api.github.com/users/OsamaSayegh/following{/other_user}",
    "gists_url": "https://api.github.com/users/OsamaSayegh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/OsamaSayegh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/OsamaSayegh/subscriptions",
    "organizations_url": "https://api.github.com/users/OsamaSayegh/orgs",
    "repos_url": "https://api.github.com/users/OsamaSayegh/repos",
    "events_url": "https://api.github.com/users/OsamaSayegh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/OsamaSayegh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7e4dad3c565a6839f4a0e0e8ef1e4c86e639f3f7",
      "url": "https://api.github.com/repos/discourse/discourse/commits/7e4dad3c565a6839f4a0e0e8ef1e4c86e639f3f7",
      "html_url": "https://github.com/discourse/discourse/commit/7e4dad3c565a6839f4a0e0e8ef1e4c86e639f3f7"
    }
  ],
  "stats": {
    "total": 706,
    "additions": 480,
    "deletions": 226
  },
  "files": [
    {
      "sha": "c90316369a88dfb8b410880b90639727000548ff",
      "filename": "app/assets/javascripts/admin/addon/controllers/admin-api-keys-new.js",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/admin/addon/controllers/admin-api-keys-new.js",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/admin/addon/controllers/admin-api-keys-new.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/addon/controllers/admin-api-keys-new.js?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -3,6 +3,7 @@ import I18n from \"I18n\";\n import discourseComputed from \"discourse-common/utils/decorators\";\n import { isBlank } from \"@ember/utils\";\n import { popupAjaxError } from \"discourse/lib/ajax-error\";\n+import { get } from \"@ember/object\";\n import showModal from \"discourse/lib/show-modal\";\n \n export default Controller.extend({\n@@ -30,6 +31,10 @@ export default Controller.extend({\n   },\n \n   actions: {\n+    updateUsername(selected) {\n+      this.set(\"model.username\", get(selected, \"firstObject\"));\n+    },\n+\n     changeUserMode(value) {\n       if (value === \"all\") {\n         this.model.set(\"username\", null);"
    },
    {
      "sha": "1a6fbf218477ca0d8829ba225903a963a70b78c7",
      "filename": "app/assets/javascripts/admin/addon/controllers/admin-email-preview-digest.js",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/admin/addon/controllers/admin-email-preview-digest.js",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/admin/addon/controllers/admin-email-preview-digest.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/addon/controllers/admin-email-preview-digest.js?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -2,6 +2,7 @@ import { empty, notEmpty, or } from \"@ember/object/computed\";\n import Controller from \"@ember/controller\";\n import EmailPreview from \"admin/models/email-preview\";\n import bootbox from \"bootbox\";\n+import { get } from \"@ember/object\";\n import { popupAjaxError } from \"discourse/lib/ajax-error\";\n \n export default Controller.extend({\n@@ -14,6 +15,10 @@ export default Controller.extend({\n   htmlEmpty: empty(\"model.html_content\"),\n \n   actions: {\n+    updateUsername(selected) {\n+      this.set(\"username\", get(selected, \"firstObject\"));\n+    },\n+\n     refresh() {\n       const model = this.model;\n "
    },
    {
      "sha": "98f60d2395101cd2ae512f0efcda4ae7e613f0fb",
      "filename": "app/assets/javascripts/admin/addon/controllers/modals/admin-merge-users-prompt.js",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/admin/addon/controllers/modals/admin-merge-users-prompt.js",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/admin/addon/controllers/modals/admin-merge-users-prompt.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/addon/controllers/modals/admin-merge-users-prompt.js?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -1,6 +1,6 @@\n import Controller, { inject as controller } from \"@ember/controller\";\n import ModalFunctionality from \"discourse/mixins/modal-functionality\";\n-import { action } from \"@ember/object\";\n+import { action, get } from \"@ember/object\";\n import { alias } from \"@ember/object/computed\";\n import discourseComputed from \"discourse-common/utils/decorators\";\n \n@@ -27,4 +27,9 @@ export default Controller.extend(ModalFunctionality, {\n   close() {\n     this.send(\"closeModal\");\n   },\n+\n+  @action\n+  updateUsername(selected) {\n+    this.set(\"targetUsername\", get(selected, \"firstObject\"));\n+  },\n });"
    },
    {
      "sha": "a8957262df3ae2c452abb52a33eac2797e47d6a1",
      "filename": "app/assets/javascripts/admin/addon/templates/api-keys-new.hbs",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/admin/addon/templates/api-keys-new.hbs",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/admin/addon/templates/api-keys-new.hbs",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/addon/templates/api-keys-new.hbs?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -25,10 +25,14 @@\n \n     {{#if showUserSelector}}\n       {{#admin-form-row label=\"admin.api.user\"}}\n-        {{user-selector single=\"true\"\n-          usernames=model.username\n-          placeholderKey=\"admin.api.user_placeholder\"\n-          }}\n+        {{email-group-user-chooser\n+          value=model.username\n+          onChange=(action \"updateUsername\")\n+          options=(hash\n+            maximum=1\n+            filterPlaceholder=\"admin.api.user_placeholder\"\n+          )\n+        }}\n       {{/admin-form-row}}\n     {{/if}}\n "
    },
    {
      "sha": "c93d048ba6dec7be5004e7a05662bb8dee05a4de",
      "filename": "app/assets/javascripts/admin/addon/templates/email-preview-digest.hbs",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/admin/addon/templates/email-preview-digest.hbs",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/admin/addon/templates/email-preview-digest.hbs",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/addon/templates/email-preview-digest.hbs?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -5,7 +5,13 @@\n     <label for=\"last-seen\">{{i18n \"admin.email.last_seen_user\"}}</label>\n     {{date-picker-past value=lastSeen id=\"last-seen\"}}\n     <label>{{i18n \"admin.email.user\"}}:</label>\n-    {{user-selector single=\"true\" usernames=username canReceiveUpdates=true}}\n+    {{email-group-user-chooser\n+      value=username\n+      onChange=(action \"updateUsername\")\n+      options=(hash\n+        maximum=1\n+      )\n+    }}\n     {{d-button\n       class=\"btn-primary digest-refresh-button\"\n       action=(action \"refresh\")"
    },
    {
      "sha": "6fea5ee4f0ebed989e63c8ef5f20b6344d79f435",
      "filename": "app/assets/javascripts/admin/addon/templates/modal/admin-merge-users-prompt.hbs",
      "status": "modified",
      "additions": 9,
      "deletions": 4,
      "changes": 13,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/admin/addon/templates/modal/admin-merge-users-prompt.hbs",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/admin/addon/templates/modal/admin-merge-users-prompt.hbs",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/addon/templates/modal/admin-merge-users-prompt.hbs?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -1,10 +1,15 @@\n <div>\n   {{#d-modal-body rawTitle=(i18n \"admin.user.merge.prompt.title\" username=username)}}\n     <p>{{html-safe (i18n \"admin.user.merge.prompt.description\" username=username)}}</p>\n-    {{user-selector single=true\n-                    placeholderKey=\"admin.user.merge.prompt.target_username_placeholder\"\n-                    usernames=targetUsername\n-                    autocomplete=\"discourse\"}}\n+    {{email-group-user-chooser\n+      value=targetUsername\n+      autocomplete=\"discourse\"\n+      onChange=(action \"updateUsername\")\n+      options=(hash\n+        maximum=1\n+        filterPlaceholder=\"admin.user.merge.prompt.target_username_placeholder\"\n+      )\n+    }}\n   {{/d-modal-body}}\n \n   <div class=\"modal-footer\">"
    },
    {
      "sha": "1633794f1f430622e2d5046b294f5920aa208a98",
      "filename": "app/assets/javascripts/discourse/app/components/composer-user-selector.js",
      "status": "modified",
      "additions": 28,
      "deletions": 73,
      "changes": 101,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/app/components/composer-user-selector.js",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/app/components/composer-user-selector.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/components/composer-user-selector.js?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -1,13 +1,12 @@\n-import discourseComputed, { observes } from \"discourse-common/utils/decorators\";\n import Component from \"@ember/component\";\n-import I18n from \"I18n\";\n+import discourseComputed from \"discourse-common/utils/decorators\";\n import putCursorAtEnd from \"discourse/lib/put-cursor-at-end\";\n-import { schedule } from \"@ember/runloop\";\n \n export default Component.extend({\n-  showSelector: true,\n-  shouldHide: false,\n-  defaultUsernameCount: 0,\n+  init() {\n+    this._super(...arguments);\n+    this.set(\"_groups\", []);\n+  },\n \n   didInsertElement() {\n     this._super(...arguments);\n@@ -17,78 +16,34 @@ export default Component.extend({\n     }\n   },\n \n-  @observes(\"usernames\")\n-  _checkWidth() {\n-    let width = 0;\n-    const $acWrap = $(this.element).find(\".ac-wrap\");\n-    const limit = $acWrap.width();\n-    this.set(\"defaultUsernameCount\", 0);\n-\n-    $acWrap\n-      .find(\".item\")\n-      .toArray()\n-      .forEach((item) => {\n-        width += $(item).outerWidth(true);\n-        const result = width < limit;\n-\n-        if (result) {\n-          this.incrementProperty(\"defaultUsernameCount\");\n-        }\n-        return result;\n-      });\n-\n-    if (width >= limit) {\n-      this.set(\"shouldHide\", true);\n-    } else {\n-      this.set(\"shouldHide\", false);\n-    }\n-  },\n-\n-  @observes(\"shouldHide\")\n-  _setFocus() {\n-    const selector =\n-      \"#reply-control #reply-title, #reply-control .d-editor-input\";\n-\n-    if (this.shouldHide) {\n-      $(selector).on(\"focus.composer-user-selector\", () => {\n-        this.set(\"showSelector\", false);\n-        this.appEvents.trigger(\"composer:resize\");\n-      });\n-    } else {\n-      $(selector).off(\"focus.composer-user-selector\");\n-    }\n-  },\n-\n-  @discourseComputed(\"usernames\")\n-  splitUsernames(usernames) {\n-    return usernames.split(\",\");\n+  @discourseComputed(\"recipients\")\n+  splitRecipients(recipients) {\n+    return recipients ? recipients.split(\",\").filter(Boolean) : [];\n   },\n \n-  @discourseComputed(\"splitUsernames\", \"defaultUsernameCount\")\n-  limitedUsernames(splitUsernames, count) {\n-    return splitUsernames.slice(0, count).join(\", \");\n-  },\n-\n-  @discourseComputed(\"splitUsernames\", \"defaultUsernameCount\")\n-  hiddenUsersCount(splitUsernames, count) {\n-    return `${splitUsernames.length - count} ${I18n.t(\"more\")}`;\n+  _updateGroups(selected, newGroups) {\n+    const groups = [];\n+    this._groups.forEach((existing) => {\n+      if (selected.includes(existing)) {\n+        groups.addObject(existing);\n+      }\n+    });\n+    newGroups.forEach((newGroup) => {\n+      if (!groups.includes(newGroup)) {\n+        groups.addObject(newGroup);\n+      }\n+    });\n+    this.setProperties({\n+      _groups: groups,\n+      hasGroups: groups.length > 0,\n+    });\n   },\n \n   actions: {\n-    toggleSelector() {\n-      this.set(\"showSelector\", true);\n-\n-      schedule(\"afterRender\", () => {\n-        $(this.element).find(\"input\").focus();\n-      });\n-    },\n-\n-    triggerResize() {\n-      this.appEvents.trigger(\"composer:resize\");\n-      const $this = $(this.element).find(\".ac-wrap\");\n-      if ($this.height() >= 150) {\n-        $this.scrollTop($this.height());\n-      }\n+    updateRecipients(selected, content) {\n+      const newGroups = content.filterBy(\"isGroup\").mapBy(\"id\");\n+      this._updateGroups(selected, newGroups);\n+      this.set(\"recipients\", selected.join(\",\"));\n     },\n   },\n });"
    },
    {
      "sha": "949ce17842a16921a0c853f4ad652dd25a8be25a",
      "filename": "app/assets/javascripts/discourse/app/components/invite-panel.js",
      "status": "modified",
      "additions": 55,
      "deletions": 42,
      "changes": 97,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/app/components/invite-panel.js",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/app/components/invite-panel.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/components/invite-panel.js?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -20,9 +20,9 @@ export default Component.extend({\n   isStaff: readOnly(\"currentUser.staff\"),\n   isAdmin: readOnly(\"currentUser.admin\"),\n \n-  // If this isn't defined, it will proxy to the user topic on the preferences\n-  // page which is wrong.\n-  emailOrUsername: null,\n+  // invitee is either a user, group or email\n+  invitee: null,\n+  isInviteeGroup: false,\n   hasCustomMessage: false,\n   customMessage: null,\n   inviteIcon: \"envelope\",\n@@ -41,7 +41,7 @@ export default Component.extend({\n \n   @discourseComputed(\n     \"isAdmin\",\n-    \"emailOrUsername\",\n+    \"invitee\",\n     \"invitingToTopic\",\n     \"isPrivateTopic\",\n     \"groupIds\",\n@@ -50,7 +50,7 @@ export default Component.extend({\n   )\n   disabled(\n     isAdmin,\n-    emailOrUsername,\n+    invitee,\n     invitingToTopic,\n     isPrivateTopic,\n     groupIds,\n@@ -60,24 +60,22 @@ export default Component.extend({\n     if (saving) {\n       return true;\n     }\n-    if (isEmpty(emailOrUsername)) {\n+    if (isEmpty(invitee)) {\n       return true;\n     }\n \n-    const emailTrimmed = emailOrUsername.trim();\n-\n     // when inviting to forum, email must be valid\n-    if (!invitingToTopic && !emailValid(emailTrimmed)) {\n+    if (!invitingToTopic && !emailValid(invitee)) {\n       return true;\n     }\n \n     // normal users (not admin) can't invite users to private topic via email\n-    if (!isAdmin && isPrivateTopic && emailValid(emailTrimmed)) {\n+    if (!isAdmin && isPrivateTopic && emailValid(invitee)) {\n       return true;\n     }\n \n     // when inviting to private topic via email, group name must be specified\n-    if (isPrivateTopic && isEmpty(groupIds) && emailValid(emailTrimmed)) {\n+    if (isPrivateTopic && isEmpty(groupIds) && emailValid(invitee)) {\n       return true;\n     }\n \n@@ -90,15 +88,15 @@ export default Component.extend({\n \n   @discourseComputed(\n     \"isAdmin\",\n-    \"emailOrUsername\",\n+    \"invitee\",\n     \"inviteModel.saving\",\n     \"isPrivateTopic\",\n     \"groupIds\",\n     \"hasCustomMessage\"\n   )\n   disabledCopyLink(\n     isAdmin,\n-    emailOrUsername,\n+    invitee,\n     saving,\n     isPrivateTopic,\n     groupIds,\n@@ -110,24 +108,22 @@ export default Component.extend({\n     if (saving) {\n       return true;\n     }\n-    if (isEmpty(emailOrUsername)) {\n+    if (isEmpty(invitee)) {\n       return true;\n     }\n \n-    const email = emailOrUsername.trim();\n-\n     // email must be valid\n-    if (!emailValid(email)) {\n+    if (!emailValid(invitee)) {\n       return true;\n     }\n \n     // normal users (not admin) can't invite users to private topic via email\n-    if (!isAdmin && isPrivateTopic && emailValid(email)) {\n+    if (!isAdmin && isPrivateTopic && emailValid(invitee)) {\n       return true;\n     }\n \n     // when inviting to private topic via email, group name must be specified\n-    if (isPrivateTopic && isEmpty(groupIds) && emailValid(email)) {\n+    if (isPrivateTopic && isEmpty(groupIds) && emailValid(invitee)) {\n       return true;\n     }\n \n@@ -179,15 +175,15 @@ export default Component.extend({\n   // Show Groups? (add invited user to private group)\n   @discourseComputed(\n     \"isGroupOwnerOrAdmin\",\n-    \"emailOrUsername\",\n+    \"invitee\",\n     \"isPrivateTopic\",\n     \"isPM\",\n     \"invitingToTopic\",\n     \"canInviteViaEmail\"\n   )\n   showGroups(\n     isGroupOwnerOrAdmin,\n-    emailOrUsername,\n+    invitee,\n     isPrivateTopic,\n     isPM,\n     invitingToTopic,\n@@ -197,28 +193,28 @@ export default Component.extend({\n       isGroupOwnerOrAdmin &&\n       canInviteViaEmail &&\n       !isPM &&\n-      (emailValid(emailOrUsername) || isPrivateTopic || !invitingToTopic)\n+      (emailValid(invitee) || isPrivateTopic || !invitingToTopic)\n     );\n   },\n \n-  @discourseComputed(\"emailOrUsername\")\n-  showCustomMessage(emailOrUsername) {\n-    return this.inviteModel === this.currentUser || emailValid(emailOrUsername);\n+  @discourseComputed(\"invitee\")\n+  showCustomMessage(invitee) {\n+    return this.inviteModel === this.currentUser || emailValid(invitee);\n   },\n \n   // Instructional text for the modal.\n   @discourseComputed(\n     \"isPM\",\n     \"invitingToTopic\",\n-    \"emailOrUsername\",\n+    \"invitee\",\n     \"isPrivateTopic\",\n     \"isAdmin\",\n     \"canInviteViaEmail\"\n   )\n   inviteInstructions(\n     isPM,\n     invitingToTopic,\n-    emailOrUsername,\n+    invitee,\n     isPrivateTopic,\n     isAdmin,\n     canInviteViaEmail\n@@ -236,9 +232,9 @@ export default Component.extend({\n         return I18n.t(\"topic.invite_reply.to_username\");\n       } else {\n         // when inviting to a topic, display instructions based on provided entity\n-        if (isEmpty(emailOrUsername)) {\n+        if (isEmpty(invitee)) {\n           return I18n.t(\"topic.invite_reply.to_topic_blank\");\n-        } else if (emailValid(emailOrUsername)) {\n+        } else if (emailValid(invitee)) {\n           this.set(\"inviteIcon\", \"envelope\");\n           return I18n.t(\"topic.invite_reply.to_topic_email\");\n         } else {\n@@ -257,18 +253,18 @@ export default Component.extend({\n     return isPrivateTopic ? \"required\" : \"optional\";\n   },\n \n-  @discourseComputed(\"isPM\", \"emailOrUsername\", \"invitingExistingUserToTopic\")\n-  successMessage(isPM, emailOrUsername, invitingExistingUserToTopic) {\n-    if (this.hasGroups) {\n+  @discourseComputed(\"isPM\", \"invitee\", \"invitingExistingUserToTopic\")\n+  successMessage(isPM, invitee, invitingExistingUserToTopic) {\n+    if (this.isInviteeGroup) {\n       return I18n.t(\"topic.invite_private.success_group\");\n     } else if (isPM) {\n       return I18n.t(\"topic.invite_private.success\");\n     } else if (invitingExistingUserToTopic) {\n       return I18n.t(\"topic.invite_reply.success_existing_email\", {\n-        emailOrUsername,\n+        invitee,\n       });\n-    } else if (emailValid(emailOrUsername)) {\n-      return I18n.t(\"topic.invite_reply.success_email\", { emailOrUsername });\n+    } else if (emailValid(invitee)) {\n+      return I18n.t(\"topic.invite_reply.success_email\", { invitee });\n     } else {\n       return I18n.t(\"topic.invite_reply.success_username\");\n     }\n@@ -295,7 +291,8 @@ export default Component.extend({\n   // Reset the modal to allow a new user to be invited.\n   reset() {\n     this.setProperties({\n-      emailOrUsername: null,\n+      invitee: null,\n+      isInviteeGroup: false,\n       hasCustomMessage: false,\n       customMessage: null,\n       invitingExistingUserToTopic: false,\n@@ -346,9 +343,9 @@ export default Component.extend({\n       model.setProperties({ saving: false, error: true });\n     };\n \n-    if (this.hasGroups) {\n+    if (this.isInviteeGroup) {\n       return this.inviteModel\n-        .createGroupInvite(this.emailOrUsername.trim())\n+        .createGroupInvite(this.invitee.trim())\n         .then((data) => {\n           model.setProperties({ saving: false, finished: true });\n           this.get(\"inviteModel.details.allowed_groups\").pushObject(\n@@ -359,7 +356,7 @@ export default Component.extend({\n         .catch(onerror);\n     } else {\n       return this.inviteModel\n-        .createInvite(this.emailOrUsername.trim(), groupIds, this.customMessage)\n+        .createInvite(this.invitee.trim(), groupIds, this.customMessage)\n         .then((result) => {\n           model.setProperties({ saving: false, finished: true });\n           if (!this.invitingToTopic && userInvitedController) {\n@@ -379,7 +376,7 @@ export default Component.extend({\n             this.appEvents.trigger(\"post-stream:refresh\", { force: true });\n           } else if (\n             this.invitingToTopic &&\n-            emailValid(this.emailOrUsername.trim()) &&\n+            emailValid(this.invitee.trim()) &&\n             result &&\n             result.user\n           ) {\n@@ -407,7 +404,7 @@ export default Component.extend({\n     }\n \n     return model\n-      .generateInviteLink(this.emailOrUsername.trim(), groupIds, topicId)\n+      .generateInviteLink(this.invitee.trim(), groupIds, topicId)\n       .then((result) => {\n         model.setProperties({\n           saving: false,\n@@ -465,7 +462,23 @@ export default Component.extend({\n   @action\n   searchContact() {\n     getNativeContact(this.capabilities, [\"email\"], false).then((result) => {\n-      this.set(\"emailOrUsername\", result[0].email[0]);\n+      this.set(\"invitee\", result[0].email[0]);\n     });\n   },\n+\n+  @action\n+  updateInvitee(selected, content) {\n+    const invitee = content.findBy(\"id\", selected[0]);\n+    if (invitee) {\n+      this.setProperties({\n+        invitee: invitee.id.trim(),\n+        isInviteeGroup: invitee.isGroup || false,\n+      });\n+    } else {\n+      this.setProperties({\n+        invitee: null,\n+        isInviteeGroup: false,\n+      });\n+    }\n+  },\n });"
    },
    {
      "sha": "cb6198778b10213cb5af8192948651ce4fece506",
      "filename": "app/assets/javascripts/discourse/app/templates/components/composer-user-selector.hbs",
      "status": "modified",
      "additions": 13,
      "deletions": 21,
      "changes": 34,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/app/templates/components/composer-user-selector.hbs",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/app/templates/components/composer-user-selector.hbs",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/templates/components/composer-user-selector.hbs?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -1,22 +1,14 @@\n-{{#if showSelector}}\n-  {{user-selector\n+{{email-group-user-chooser\n+  id=\"private-message-users\"\n+  tabindex=\"1\"\n+  autocomplete=\"discourse\"\n+  value=splitRecipients\n+  onChange=(action \"updateRecipients\")\n+  options=(hash\n     topicId=topicId\n-    onChangeCallback=(action \"triggerResize\")\n-    id=\"private-message-users\"\n-    includeMessageableGroups=\"true\"\n-    placeholderKey=\"composer.users_placeholder\"\n-    tabindex=\"1\"\n-    usernames=usernames\n-    hasGroups=hasGroups\n-    allowEmails=\"true\"\n-    autocomplete=\"discourse\"\n-    canReceiveUpdates=true\n-  }}\n-{{else}}\n-  <a href {{action \"toggleSelector\"}}>\n-    <div class=\"ac-wrap composer-user-selector-limited\">\n-      <span>{{limitedUsernames}}</span>\n-      <span class=\"btn btn-primary\">{{hiddenUsersCount}}</span>\n-    </div>\n-  </a>\n-{{/if}}\n+    filterPlaceholder=\"composer.users_placeholder\"\n+    includeMessageableGroups=true\n+    allowEmails=true\n+    autoWrap=true\n+  )\n+}}"
    },
    {
      "sha": "fa808f6ac8958b4d902b320546ac98332cbd433c",
      "filename": "app/assets/javascripts/discourse/app/templates/components/invite-panel.hbs",
      "status": "modified",
      "additions": 12,
      "deletions": 13,
      "changes": 25,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/app/templates/components/invite-panel.hbs",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/app/templates/components/invite-panel.hbs",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/templates/components/invite-panel.hbs?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -7,7 +7,7 @@\n <div class=\"body\">\n   {{#if inviteModel.finished}}\n     {{#if inviteModel.inviteLink}}\n-      {{generated-invite-link link=inviteModel.inviteLink email=emailOrUsername}}\n+      {{generated-invite-link link=inviteModel.inviteLink email=invitee}}\n     {{else}}\n       <div class=\"success-message\">\n         {{html-safe successMessage}}\n@@ -18,24 +18,23 @@\n       <label class=\"instructions\">{{inviteInstructions}}</label>\n       <div class=\"invite-user-input-wrapper\">\n         {{#if allowExistingMembers}}\n-          {{user-selector\n-            fullWidthWrap=true\n-            single=true\n-            allowAny=true\n-            excludeCurrentUser=true\n-            includeMessageableGroups=isPM\n-            hasGroups=hasGroups\n-            usernames=emailOrUsername\n-            placeholderKey=placeholderKey\n-            allowEmails=canInviteViaEmail\n+          {{email-group-user-chooser\n             class=\"invite-user-input\"\n             autocomplete=\"discourse\"\n-            value=emailOrUsername\n+            value=invitee\n+            onChange=(action \"updateInvitee\")\n+            options=(hash\n+              maximum=1\n+              allowEmails=canInviteViaEmail\n+              excludeCurrentUser=true\n+              includeMessageableGroups=isPM\n+              filterPlaceholder=placeholderKey\n+            )\n           }}\n         {{else}}\n           {{text-field\n             class=\"email-or-username-input\"\n-            value=emailOrUsername\n+            value=invitee\n             placeholderKey=\"topic.invite_reply.email_placeholder\"}}\n         {{/if}}\n         {{#if capabilities.hasContactPicker}}"
    },
    {
      "sha": "dac189f58985c5fdb139acb03c8a88dc9379401e",
      "filename": "app/assets/javascripts/discourse/app/templates/composer.hbs",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/app/templates/composer.hbs",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/app/templates/composer.hbs",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/templates/composer.hbs?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -52,11 +52,13 @@\n             {{#if model.canEditTitle}}\n               {{#if model.creatingPrivateMessage}}\n                 <div class=\"user-selector\">\n-                  {{composer-user-selector topicId=topicModel.id\n-                                           usernames=model.targetRecipients\n-                                           hasGroups=model.hasTargetGroups\n-                                           focusTarget=focusTarget\n-                                           class=\"users-input\"}}\n+                  {{composer-user-selector\n+                    topicId=topicModel.id\n+                    recipients=model.targetRecipients\n+                    hasGroups=model.hasTargetGroups\n+                    focusTarget=focusTarget\n+                    class=\"users-input\"\n+                  }}\n                   {{#if showWarning}}\n                     <label class=\"add-warning\">\n                       {{input type=\"checkbox\" checked=model.isWarning tabindex=\"3\"}}"
    },
    {
      "sha": "a9f4ff0cf7d4d80fce954795f4c35e0978ffce5a",
      "filename": "app/assets/javascripts/discourse/tests/acceptance/composer-actions-test.js",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/tests/acceptance/composer-actions-test.js",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/tests/acceptance/composer-actions-test.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/tests/acceptance/composer-actions-test.js?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -62,7 +62,9 @@ acceptance(\"Composer Actions\", function (needs) {\n     await composerActions.selectRowByValue(\"reply_as_private_message\");\n \n     assert.equal(\n-      queryAll(\".users-input .item:nth-of-type(1)\").text(),\n+      queryAll(\"#private-message-users .selected-name:nth-of-type(1)\")\n+        .text()\n+        .trim(),\n       \"codinghorror\"\n     );\n     assert.ok(\n@@ -164,7 +166,7 @@ acceptance(\"Composer Actions\", function (needs) {\n     await composerActions.selectRowByValue(\"reply_as_new_group_message\");\n \n     const items = [];\n-    queryAll(\".users-input .item\").each((_, item) =>\n+    queryAll(\"#private-message-users .selected-name\").each((_, item) =>\n       items.push(item.textContent.trim())\n     );\n \n@@ -348,7 +350,9 @@ acceptance(\"Composer Actions\", function (needs) {\n     await composerActions.selectRowByValue(\"reply_as_private_message\");\n \n     assert.equal(\n-      queryAll(\".users-input .item:nth-of-type(1)\").text(),\n+      queryAll(\"#private-message-users .selected-name:nth-of-type(1)\")\n+        .text()\n+        .trim(),\n       \"uwe_keim\"\n     );\n     assert.ok("
    },
    {
      "sha": "993d2cf80a196648a94483936697c5db37c73d58",
      "filename": "app/assets/javascripts/discourse/tests/acceptance/composer-test.js",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/tests/acceptance/composer-test.js",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/tests/acceptance/composer-test.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/tests/acceptance/composer-test.js?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -713,7 +713,9 @@ acceptance(\"Composer\", function (needs) {\n       await click(\".modal .btn-default\");\n \n       assert.equal(\n-        queryAll(\".users-input .item:nth-of-type(1)\").text(),\n+        queryAll(\"#private-message-users .selected-name:nth-of-type(1)\")\n+          .text()\n+          .trim(),\n         \"codinghorror\"\n       );\n     } finally {"
    },
    {
      "sha": "2091dab9e7c26698ce7cc2641c64d8d737765f2e",
      "filename": "app/assets/javascripts/discourse/tests/acceptance/group-test.js",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/tests/acceptance/group-test.js",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/tests/acceptance/group-test.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/tests/acceptance/group-test.js?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -215,7 +215,7 @@ acceptance(\"Group - Authenticated\", function (needs) {\n \n     assert.ok(count(\"#reply-control\") === 1, \"it opens the composer\");\n     assert.equal(\n-      queryAll(\".ac-wrap .item\").text(),\n+      queryAll(\"#private-message-users .selected-name\").text().trim(),\n       \"discourse\",\n       \"it prefills the group name\"\n     );"
    },
    {
      "sha": "b5ef162d4fc3b402fd675a6dbbd5d6854172e356",
      "filename": "app/assets/javascripts/discourse/tests/acceptance/new-message-test.js",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/tests/acceptance/new-message-test.js",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/tests/acceptance/new-message-test.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/tests/acceptance/new-message-test.js?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -36,7 +36,9 @@ acceptance(\"New Message - Authenticated\", function (needs) {\n       \"it pre-fills message body\"\n     );\n     assert.equal(\n-      queryAll(\".users-input .item:nth-of-type(1)\").text().trim(),\n+      queryAll(\"#private-message-users .selected-name:nth-of-type(1)\")\n+        .text()\n+        .trim(),\n       \"charlie\",\n       \"it selects correct username\"\n     );"
    },
    {
      "sha": "68f80fd134f8a7d7bcf587c4837df6461e642296",
      "filename": "app/assets/javascripts/discourse/tests/acceptance/topic-test.js",
      "status": "modified",
      "additions": 7,
      "deletions": 4,
      "changes": 11,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/tests/acceptance/topic-test.js",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/discourse/tests/acceptance/topic-test.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/tests/acceptance/topic-test.js?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -67,22 +67,25 @@ acceptance(\"Topic\", function (needs) {\n       \"it fills composer with the ring string\"\n     );\n \n-    const targets = queryAll(\".item span\", \".composer-fields\");\n+    const targets = queryAll(\n+      \"#private-message-users .selected-name\",\n+      \".composer-fields\"\n+    );\n \n     assert.equal(\n-      $(targets[0]).text(),\n+      $(targets[0]).text().trim(),\n       \"someguy\",\n       \"it fills up the composer with the right user to start the PM to\"\n     );\n \n     assert.equal(\n-      $(targets[1]).text(),\n+      $(targets[1]).text().trim(),\n       \"test\",\n       \"it fills up the composer with the right user to start the PM to\"\n     );\n \n     assert.equal(\n-      $(targets[2]).text(),\n+      $(targets[2]).text().trim(),\n       \"Group\",\n       \"it fills up the composer with the right group to start the PM to\"\n     );"
    },
    {
      "sha": "b25bb6edef692cce4246d28d1a6ba2f03adfb271",
      "filename": "app/assets/javascripts/select-kit/addon/components/email-group-user-chooser-header.js",
      "status": "added",
      "additions": 76,
      "deletions": 0,
      "changes": 76,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/select-kit/addon/components/email-group-user-chooser-header.js",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/select-kit/addon/components/email-group-user-chooser-header.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/select-kit/addon/components/email-group-user-chooser-header.js?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -0,0 +1,76 @@\n+import MultiSelectHeaderComponent from \"select-kit/components/multi-select/multi-select-header\";\n+import { computed } from \"@ember/object\";\n+import { gt } from \"@ember/object/computed\";\n+import { isTesting } from \"discourse-common/config/environment\";\n+import layout from \"select-kit/templates/components/email-group-user-chooser-header\";\n+\n+export default MultiSelectHeaderComponent.extend({\n+  layout,\n+  classNames: [\"email-group-user-chooser-header\"],\n+  hasHiddenItems: gt(\"hiddenItemsCount\", 0),\n+\n+  shownItems: computed(\"hiddenItemsCount\", function () {\n+    if (\n+      this.selectKit.noneItem === this.selectedContent ||\n+      this.hiddenItemsCount === 0\n+    ) {\n+      return this.selectedContent;\n+    }\n+    return this.selectedContent.slice(\n+      0,\n+      this.selectedContent.length - this.hiddenItemsCount\n+    );\n+  }),\n+\n+  hiddenItemsCount: computed(\n+    \"selectedContent.[]\",\n+    \"selectKit.options.autoWrap\",\n+    \"selectKit.isExpanded\",\n+    function () {\n+      if (\n+        !this.selectKit.options.autoWrap ||\n+        this.selectKit.isExpanded ||\n+        this.selectedContent === this.selectKit.noneItem ||\n+        this.selectedContent.length <= 1 ||\n+        isTesting()\n+      ) {\n+        return 0;\n+      } else {\n+        const selectKitHeaderWidth = this.element.offsetWidth;\n+        const choices = this.element.querySelectorAll(\".selected-name.choice\");\n+        const input = this.element.querySelector(\".filter-input\");\n+        const alreadyHidden = this.element.querySelector(\".x-more-item\");\n+        if (alreadyHidden) {\n+          const hiddenCount = parseInt(\n+            alreadyHidden.getAttribute(\"data-hidden-count\"),\n+            10\n+          );\n+          return (\n+            hiddenCount +\n+            (this.selectedContent.length - (choices.length + hiddenCount))\n+          );\n+        }\n+        if (choices.length === 0 && this.selectedContent.length > 0) {\n+          return 0;\n+        }\n+        let total = choices[0].offsetWidth + input.offsetWidth;\n+        let shownItemsCount = 1;\n+        let shouldHide = false;\n+        for (let i = 1; i < choices.length - 1; i++) {\n+          const currentWidth = choices[i].offsetWidth;\n+          const nextWidth = choices[i + 1].offsetWidth;\n+          const ratio =\n+            (total + currentWidth + nextWidth) / selectKitHeaderWidth;\n+          if (ratio >= 0.95) {\n+            shouldHide = true;\n+            break;\n+          } else {\n+            shownItemsCount++;\n+            total += currentWidth;\n+          }\n+        }\n+        return shouldHide ? choices.length - shownItemsCount : 0;\n+      }\n+    }\n+  ),\n+});"
    },
    {
      "sha": "5426c82fb7aefe764dd95fae0aede95ff5a64bd4",
      "filename": "app/assets/javascripts/select-kit/addon/components/email-group-user-chooser-row.js",
      "status": "added",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/select-kit/addon/components/email-group-user-chooser-row.js",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/select-kit/addon/components/email-group-user-chooser-row.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/select-kit/addon/components/email-group-user-chooser-row.js?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -0,0 +1,7 @@\n+import SelectKitRowComponent from \"select-kit/components/select-kit/select-kit-row\";\n+import layout from \"select-kit/templates/components/email-group-user-chooser-row\";\n+\n+export default SelectKitRowComponent.extend({\n+  layout,\n+  classNames: [\"email-group-user-chooser-row\"],\n+});"
    },
    {
      "sha": "03a940c4fd19d72f9b1a7cc779917ccceade1eb5",
      "filename": "app/assets/javascripts/select-kit/addon/components/email-group-user-chooser.js",
      "status": "added",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/select-kit/addon/components/email-group-user-chooser.js",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/select-kit/addon/components/email-group-user-chooser.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/select-kit/addon/components/email-group-user-chooser.js?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -0,0 +1,46 @@\n+import UserChooserComponent from \"select-kit/components/user-chooser\";\n+\n+export default UserChooserComponent.extend({\n+  pluginApiIdentifiers: [\"email-group-user-chooser\"],\n+  classNames: [\"email-group-user-chooser\"],\n+  valueProperty: \"id\",\n+  nameProperty: \"name\",\n+\n+  modifyComponentForRow() {\n+    return \"email-group-user-chooser-row\";\n+  },\n+\n+  selectKitOptions: {\n+    headerComponent: \"email-group-user-chooser-header\",\n+    autoWrap: false,\n+  },\n+\n+  search() {\n+    const superPromise = this._super(...arguments);\n+    if (!superPromise) {\n+      return;\n+    }\n+    return superPromise.then((results) => {\n+      if (!results || results.length === 0) {\n+        return;\n+      }\n+      return results.map((item) => {\n+        const reconstructed = {};\n+        if (item.username) {\n+          reconstructed.id = item.username;\n+          if (item.username.includes(\"@\")) {\n+            reconstructed.isEmail = true;\n+          } else {\n+            reconstructed.isUser = true;\n+            reconstructed.name = item.name;\n+          }\n+        } else if (item.name) {\n+          reconstructed.id = item.name;\n+          reconstructed.name = item.full_name;\n+          reconstructed.isGroup = true;\n+        }\n+        return Object.assign({}, item, reconstructed);\n+      });\n+    });\n+  },\n+});"
    },
    {
      "sha": "175a88e89014cca4024d353848d8ff207beb0c64",
      "filename": "app/assets/javascripts/select-kit/addon/components/select-kit.js",
      "status": "modified",
      "additions": 77,
      "deletions": 50,
      "changes": 127,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/select-kit/addon/components/select-kit.js",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/select-kit/addon/components/select-kit.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/select-kit/addon/components/select-kit.js?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -87,6 +87,7 @@ export default Component.extend(\n           isHidden: false,\n           isExpanded: false,\n           isFilterExpanded: false,\n+          enterDisabled: false,\n           hasSelection: false,\n           hasNoContent: true,\n           highlighted: null,\n@@ -570,64 +571,75 @@ export default Component.extend(\n \n     _searchWrapper(filter) {\n       this.clearErrors();\n-      this.setProperties({ mainCollection: [], \"selectKit.isLoading\": true });\n+      this.setProperties({\n+        mainCollection: [],\n+        \"selectKit.isLoading\": true,\n+        \"selectKit.enterDisabled\": true,\n+      });\n       this._safeAfterRender(() => this.popper && this.popper.update());\n \n       let content = [];\n \n-      return Promise.resolve(this.search(filter)).then((result) => {\n-        content = content.concat(makeArray(result));\n-        content = this.selectKit.modifyContent(content).filter(Boolean);\n-\n-        if (this.selectKit.valueProperty) {\n-          content = content.uniqBy(this.selectKit.valueProperty);\n-        } else {\n-          content = content.uniq();\n-        }\n+      return Promise.resolve(this.search(filter))\n+        .then((result) => {\n+          content = content.concat(makeArray(result));\n+          content = this.selectKit.modifyContent(content).filter(Boolean);\n \n-        if (this.selectKit.options.limitMatches) {\n-          content = content.slice(0, this.selectKit.options.limitMatches);\n-        }\n-\n-        const noneItem = this.selectKit.noneItem;\n-        if (\n-          this.selectKit.options.allowAny &&\n-          filter &&\n-          this.getName(noneItem) !== filter\n-        ) {\n-          filter = this.createContentFromInput(filter);\n-          if (this.validateCreate(filter, content)) {\n-            this.selectKit.set(\"newItem\", this.defaultItem(filter, filter));\n-            content.unshift(this.selectKit.newItem);\n+          if (this.selectKit.valueProperty) {\n+            content = content.uniqBy(this.selectKit.valueProperty);\n+          } else {\n+            content = content.uniq();\n           }\n-        }\n \n-        const hasNoContent = isEmpty(content);\n+          if (this.selectKit.options.limitMatches) {\n+            content = content.slice(0, this.selectKit.options.limitMatches);\n+          }\n \n-        if (\n-          this.selectKit.hasSelection &&\n-          noneItem &&\n-          this.selectKit.options.autoInsertNoneItem\n-        ) {\n-          content.unshift(noneItem);\n-        }\n+          const noneItem = this.selectKit.noneItem;\n+          if (\n+            this.selectKit.options.allowAny &&\n+            filter &&\n+            this.getName(noneItem) !== filter\n+          ) {\n+            filter = this.createContentFromInput(filter);\n+            if (this.validateCreate(filter, content)) {\n+              this.selectKit.set(\"newItem\", this.defaultItem(filter, filter));\n+              content.unshift(this.selectKit.newItem);\n+            }\n+          }\n \n-        this.set(\"mainCollection\", content);\n+          const hasNoContent = isEmpty(content);\n \n-        this.selectKit.setProperties({\n-          highlighted:\n-            this.singleSelect && this.value\n-              ? this.itemForValue(this.value, this.mainCollection)\n-              : this.mainCollection.firstObject,\n-          isLoading: false,\n-          hasNoContent,\n-        });\n+          if (\n+            this.selectKit.hasSelection &&\n+            noneItem &&\n+            this.selectKit.options.autoInsertNoneItem\n+          ) {\n+            content.unshift(noneItem);\n+          }\n \n-        this._safeAfterRender(() => {\n-          this.popper && this.popper.update();\n-          this._focusFilter();\n+          this.set(\"mainCollection\", content);\n+\n+          this.selectKit.setProperties({\n+            highlighted:\n+              this.singleSelect && this.value\n+                ? this.itemForValue(this.value, this.mainCollection)\n+                : this.mainCollection.firstObject,\n+            isLoading: false,\n+            hasNoContent,\n+          });\n+\n+          this._safeAfterRender(() => {\n+            this.popper && this.popper.update();\n+            this._focusFilter();\n+          });\n+        })\n+        .finally(() => {\n+          if (this.isDestroyed || this.isDestroying) {\n+            return;\n+          }\n+          this.set(\"selectKit.enterDisabled\", false);\n         });\n-      });\n     },\n \n     _safeAfterRender(fn) {\n@@ -854,11 +866,12 @@ export default Component.extend(\n                   }\n \n                   const popperElement = data.state.elements.popper;\n-                  if (\n+                  const topPlacement =\n                     popperElement &&\n-                    popperElement.getAttribute(\"data-popper-placement\") ===\n-                      \"top-start\"\n-                  ) {\n+                    popperElement\n+                      .getAttribute(\"data-popper-placement\")\n+                      .startsWith(\"top-\");\n+                  if (topPlacement) {\n                     this.element.classList.remove(\"is-under\");\n                     this.element.classList.add(\"is-above\");\n                   } else {\n@@ -868,6 +881,20 @@ export default Component.extend(\n \n                   wrapper.style.width = `${this.element.offsetWidth}px`;\n                   wrapper.style.height = `${height}px`;\n+                  if (placementStrategy === \"fixed\") {\n+                    const rects = this.element.getClientRects()[0];\n+                    const bodyRects = body && body.getClientRects()[0];\n+                    wrapper.style.position = \"fixed\";\n+                    wrapper.style.left = `${rects.left}px`;\n+                    if (topPlacement && bodyRects) {\n+                      wrapper.style.top = `${rects.top - bodyRects.height}px`;\n+                    } else {\n+                      wrapper.style.top = `${rects.top}px`;\n+                    }\n+                    if (isDocumentRTL()) {\n+                      wrapper.style.right = \"unset\";\n+                    }\n+                  }\n                 }\n               },\n             },"
    },
    {
      "sha": "9135a95fff21ef3d168b5183a5d8743afc3ad481",
      "filename": "app/assets/javascripts/select-kit/addon/components/select-kit/select-kit-filter.js",
      "status": "modified",
      "additions": 19,
      "deletions": 1,
      "changes": 20,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/select-kit/addon/components/select-kit/select-kit-filter.js",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/select-kit/addon/components/select-kit/select-kit-filter.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/select-kit/addon/components/select-kit/select-kit-filter.js?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -56,6 +56,16 @@ export default Component.extend(UtilsMixin, {\n       return true;\n     },\n \n+    onKeyup(event) {\n+      if (event.keyCode === 13 && this.selectKit.enterDisabled) {\n+        this.element.querySelector(\"input\").focus();\n+        event.preventDefault();\n+        event.stopPropagation();\n+        return false;\n+      }\n+      return true;\n+    },\n+\n     onKeydown(event) {\n       if (!this.selectKit.onKeydown(event)) {\n         return false;\n@@ -93,8 +103,15 @@ export default Component.extend(UtilsMixin, {\n         return false;\n       }\n \n-      if (event.keyCode === 13 && !this.selectKit.highlighted) {\n+      if (\n+        event.keyCode === 13 &&\n+        (!this.selectKit.highlighted || this.selectKit.enterDisabled)\n+      ) {\n         this.element.querySelector(\"input\").focus();\n+        if (this.selectKit.enterDisabled) {\n+          event.preventDefault();\n+          event.stopPropagation();\n+        }\n         return false;\n       }\n \n@@ -109,6 +126,7 @@ export default Component.extend(UtilsMixin, {\n         this.selectKit.close(event);\n         return;\n       }\n+      this.selectKit.set(\"highlighted\", null);\n     },\n   },\n });"
    },
    {
      "sha": "a98fb559fd3090e5bd463552cfd4756beb767124",
      "filename": "app/assets/javascripts/select-kit/addon/components/user-chooser.js",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/select-kit/addon/components/user-chooser.js",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/select-kit/addon/components/user-chooser.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/select-kit/addon/components/user-chooser.js?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -24,6 +24,7 @@ export default MultiSelectComponent.extend({\n     includeMessageableGroups: false,\n     allowEmails: false,\n     groupMembersOf: undefined,\n+    excludeCurrentUser: false,\n   },\n \n   content: computed(\"value.[]\", function () {"
    },
    {
      "sha": "4d5f6a2f6847962adb7861ac4ef1815417b5a55a",
      "filename": "app/assets/javascripts/select-kit/addon/templates/components/email-group-user-chooser-header.hbs",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/select-kit/addon/templates/components/email-group-user-chooser-header.hbs",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/select-kit/addon/templates/components/email-group-user-chooser-header.hbs",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/select-kit/addon/templates/components/email-group-user-chooser-header.hbs?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -0,0 +1,22 @@\n+<div class=\"choices\">\n+  {{#each shownItems as |item|}}\n+    {{component selectKit.options.selectedNameComponent\n+      tabindex=tabindex\n+      item=item\n+      selectKit=selectKit\n+    }}\n+  {{/each}}\n+  {{#if hasHiddenItems}}\n+    <div class=\"x-more-item\" data-hidden-count={{hiddenItemsCount}}>\n+      {{i18n \"x_more\" count=hiddenItemsCount}}\n+    </div>\n+  {{/if}}\n+\n+  {{#unless hasReachedMaximumSelection}}\n+    <div class=\"choice input-wrapper\">\n+      {{component selectKit.options.filterComponent\n+        selectKit=selectKit\n+      }}\n+    </div>\n+  {{/unless}}\n+</div>"
    },
    {
      "sha": "4169de194cb504ee3328d3f5bfdc27e0240c39d1",
      "filename": "app/assets/javascripts/select-kit/addon/templates/components/email-group-user-chooser-row.hbs",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/select-kit/addon/templates/components/email-group-user-chooser-row.hbs",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/select-kit/addon/templates/components/email-group-user-chooser-row.hbs",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/select-kit/addon/templates/components/email-group-user-chooser-row.hbs?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -0,0 +1,12 @@\n+{{#if item.isUser}}\n+  {{avatar item imageSize=\"tiny\"}}\n+  <span class=\"identifier\">{{format-username item.id}}</span>\n+  <span class=\"name\">{{item.name}}</span>\n+{{else if item.isGroup}}\n+  {{d-icon \"users\"}}\n+  <span class=\"identifier\">{{item.id}}</span>\n+  <span class=\"name\">{{item.full_name}}</span>\n+{{else}}\n+  {{d-icon \"envelope\"}}\n+  <span class=\"identifier\">{{item.id}}</span>\n+{{/if}}"
    },
    {
      "sha": "57e1d3efcf3251426de81b93b4d1de5febf293e6",
      "filename": "app/assets/javascripts/select-kit/addon/templates/components/select-kit/select-kit-filter.hbs",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/select-kit/addon/templates/components/select-kit/select-kit-filter.hbs",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/javascripts/select-kit/addon/templates/components/select-kit/select-kit-filter.hbs",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/select-kit/addon/templates/components/select-kit/select-kit-filter.hbs?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -11,6 +11,7 @@\n     input=(action \"onInput\")\n     paste=(action \"onPaste\")\n     keyDown=(action \"onKeydown\")\n+    keyUp=(action \"onKeyup\")\n   }}\n \n   {{#if selectKit.options.filterIcon}}"
    },
    {
      "sha": "b7e19b66655762a9e27d3cbc5d03b574ca23223c",
      "filename": "app/assets/stylesheets/common/admin/api.scss",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/stylesheets/common/admin/api.scss",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/stylesheets/common/admin/api.scss",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/stylesheets/common/admin/api.scss?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -100,7 +100,8 @@ table.api-keys {\n \n         .value-list,\n         .select-kit,\n-        input[type=\"text\"] {\n+        input[type=\"text\"],\n+        input[type=\"text\"].filter-input {\n           width: 100%;\n           margin: 0;\n         }"
    },
    {
      "sha": "26789b351c130cb36f730e9d2544b5f5953194b3",
      "filename": "app/assets/stylesheets/common/select-kit/_index.scss",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/stylesheets/common/select-kit/_index.scss",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/stylesheets/common/select-kit/_index.scss",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/stylesheets/common/select-kit/_index.scss?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -7,6 +7,7 @@\n @import \"combo-box\";\n @import \"composer-actions\";\n @import \"dropdown-select-box\";\n+@import \"email-group-user-chooser\";\n @import \"future-date-input-selector\";\n @import \"icon-picker\";\n @import \"list-setting\";"
    },
    {
      "sha": "4b136c17509ea360ce69b0ed0e4ea40c89baa688",
      "filename": "app/assets/stylesheets/common/select-kit/email-group-user-chooser.scss",
      "status": "added",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/stylesheets/common/select-kit/email-group-user-chooser.scss",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/app/assets/stylesheets/common/select-kit/email-group-user-chooser.scss",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/stylesheets/common/select-kit/email-group-user-chooser.scss?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -0,0 +1,37 @@\n+.select-kit.email-group-user-chooser {\n+  .select-kit-row.email-group-user-chooser-row {\n+    .identifier {\n+      color: var(--primary);\n+      white-space: nowrap;\n+    }\n+    .name {\n+      color: var(--primary-high);\n+      font-size: $font-down-1;\n+      margin-left: 0.5em;\n+      overflow: hidden;\n+      white-space: nowrap;\n+      text-overflow: ellipsis;\n+    }\n+    .avatar,\n+    .d-icon {\n+      margin-left: 0;\n+      margin-right: 0.5em;\n+    }\n+  }\n+  .select-kit-header {\n+    .x-more-item {\n+      background: var(--primary-low);\n+      padding: 0.25em;\n+      flex: 1;\n+      align-items: center;\n+      display: flex;\n+      justify-content: space-between;\n+      box-sizing: border-box;\n+      margin: 2px 0 0px 3px;\n+      float: left;\n+      height: 30px;\n+      color: inherit;\n+      outline: none;\n+    }\n+  }\n+}"
    },
    {
      "sha": "65a8c55f8e23a24fea918df61004552281dc9826",
      "filename": "config/locales/client.en.yml",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/discourse/discourse/blob/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/config/locales/client.en.yml",
      "raw_url": "https://github.com/discourse/discourse/raw/98201ecc24d5e5c262f1292f416dc6dd11f82d3e/config/locales/client.en.yml",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/config/locales/client.en.yml?ref=98201ecc24d5e5c262f1292f416dc6dd11f82d3e",
      "patch": "@@ -245,6 +245,9 @@ en:\n     now: \"just now\"\n     read_more: \"read more\"\n     more: \"More\"\n+    x_more:\n+      one: \"%{count} More\"\n+      other: \"%{count} More\"\n     less: \"Less\"\n     never: \"never\"\n     every_30_minutes: \"every 30 minutes\""
    }
  ]
}
