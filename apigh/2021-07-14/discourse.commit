{
  "sha": "c750bfb4af26235dbcd7ec28cb67d58c9254ab8e",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODpjNzUwYmZiNGFmMjYyMzVkYmNkN2VjMjhjYjY3ZDU4YzkyNTRhYjhl",
  "commit": {
    "author": {
      "name": "Jarek Radosz",
      "email": "jradosz@gmail.com",
      "date": "2021-07-14T11:51:33Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2021-07-14T11:51:33Z"
    },
    "message": "FIX: A memoization bug in UserLookup and refactor (#13692)\n\n`@group_lookup` memoization bug was introduced in #13587.",
    "tree": {
      "sha": "af34bb1580ef0939671445c70fa680a3796c7a57",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/af34bb1580ef0939671445c70fa680a3796c7a57"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/c750bfb4af26235dbcd7ec28cb67d58c9254ab8e",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg7s/FCRBK7hj4Ov3rIwAAQhMIAFId8uCp+VZnXkQirYYrlwz8\nMRjes2nvchtfMb+jGj4c5U3333hkAKAIDTVR8WsK7kjWStFWQK0CqGs9D/xEWv2g\n/u4M3XxL8XxwQfu27GhiEPncHnLAS1LBiB/5jTvESBPD3tq40qY5hJkxlpL0N07C\nUdtYDR+ABCuIgnsVY5kDGVE595u6vOopCJz56pciiY+Gg0APOdNCOS1gsSE9QRnT\np9aXcx1AuAZEF0VJqkMcpfVe5hU2jjA5Rt0nGjEa6Ei9SDP/CDqxrlET4zoa5TTv\nGiDe28NSkio77B9x+ZIE0vA8gEvsfQS91hRJA7Lxb6vx11IZF8NMhk9Urbzul0E=\n=Z4XA\n-----END PGP SIGNATURE-----\n",
      "payload": "tree af34bb1580ef0939671445c70fa680a3796c7a57\nparent 2a95f892afbe4030c0c98a740124c212d5eb7b60\nauthor Jarek Radosz <jradosz@gmail.com> 1626263493 +0200\ncommitter GitHub <noreply@github.com> 1626263493 +0200\n\nFIX: A memoization bug in UserLookup and refactor (#13692)\n\n`@group_lookup` memoization bug was introduced in #13587."
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/c750bfb4af26235dbcd7ec28cb67d58c9254ab8e",
  "html_url": "https://github.com/discourse/discourse/commit/c750bfb4af26235dbcd7ec28cb67d58c9254ab8e",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/c750bfb4af26235dbcd7ec28cb67d58c9254ab8e/comments",
  "author": {
    "login": "CvX",
    "id": 66961,
    "node_id": "MDQ6VXNlcjY2OTYx",
    "avatar_url": "https://avatars.githubusercontent.com/u/66961?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/CvX",
    "html_url": "https://github.com/CvX",
    "followers_url": "https://api.github.com/users/CvX/followers",
    "following_url": "https://api.github.com/users/CvX/following{/other_user}",
    "gists_url": "https://api.github.com/users/CvX/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/CvX/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/CvX/subscriptions",
    "organizations_url": "https://api.github.com/users/CvX/orgs",
    "repos_url": "https://api.github.com/users/CvX/repos",
    "events_url": "https://api.github.com/users/CvX/events{/privacy}",
    "received_events_url": "https://api.github.com/users/CvX/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2a95f892afbe4030c0c98a740124c212d5eb7b60",
      "url": "https://api.github.com/repos/discourse/discourse/commits/2a95f892afbe4030c0c98a740124c212d5eb7b60",
      "html_url": "https://github.com/discourse/discourse/commit/2a95f892afbe4030c0c98a740124c212d5eb7b60"
    }
  ],
  "stats": {
    "total": 57,
    "additions": 20,
    "deletions": 37
  },
  "files": [
    {
      "sha": "590c6e27545fb74171db6060b38109de0b04f3ad",
      "filename": "lib/user_lookup.rb",
      "status": "modified",
      "additions": 20,
      "deletions": 37,
      "changes": 57,
      "blob_url": "https://github.com/discourse/discourse/blob/c750bfb4af26235dbcd7ec28cb67d58c9254ab8e/lib/user_lookup.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/c750bfb4af26235dbcd7ec28cb67d58c9254ab8e/lib/user_lookup.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/user_lookup.rb?ref=c750bfb4af26235dbcd7ec28cb67d58c9254ab8e",
      "patch": "@@ -1,6 +1,13 @@\n # frozen_string_literal: true\n \n class UserLookup\n+  def self.lookup_columns\n+    @user_lookup_columns ||= %i{id username name uploaded_avatar_id primary_group_id flair_group_id admin moderator trust_level}\n+  end\n+\n+  def self.group_lookup_columns\n+    @group_lookup_columns ||= %i{id name flair_icon flair_upload_id flair_bg_color flair_color}\n+  end\n \n   def initialize(user_ids = [])\n     @user_ids = user_ids.tap(&:compact!).tap(&:uniq!).tap(&:flatten!)\n@@ -12,66 +19,42 @@ def [](user_id)\n   end\n \n   def primary_groups\n-    @primary_groups ||= begin\n-      hash = {}\n-      users.values.each do |u|\n-        if u.primary_group_id\n-          hash[u.id] = groups[u.primary_group_id]\n-        end\n+    @primary_groups ||= users.values.each_with_object({}) do |user, hash|\n+      if user.primary_group_id\n+        hash[user.id] = groups[user.primary_group_id]\n       end\n-      hash\n     end\n   end\n \n   def flair_groups\n-    @flair_groups ||= begin\n-      hash = {}\n-      users.values.each do |u|\n-        if u.flair_group_id\n-          hash[u.id] = groups[u.flair_group_id]\n-        end\n+    @flair_groups ||= users.values.each_with_object({}) do |user, hash|\n+      if user.flair_group_id\n+        hash[user.id] = groups[user.flair_group_id]\n       end\n-      hash\n     end\n   end\n \n   private\n \n-  def self.lookup_columns\n-    @user_lookup_columns ||= %i{id username name uploaded_avatar_id primary_group_id flair_group_id admin moderator trust_level}\n-  end\n-\n-  def self.group_lookup_columns\n-    @group_lookup_columns ||= %i{id name flair_icon flair_upload_id flair_bg_color flair_color}\n-  end\n-\n   def users\n-    @users ||= user_lookup_hash\n-  end\n-\n-  def user_lookup_hash\n-    hash = {}\n-    User.where(id: @user_ids)\n+    @users ||= User\n+      .where(id: @user_ids)\n       .select(self.class.lookup_columns)\n-      .each { |user| hash[user.id] = user }\n-    hash\n+      .index_by(&:id)\n   end\n \n   def groups\n-    @group_lookup = begin\n+    @group_lookup ||= begin\n       group_ids = users.values.map { |u| [u.primary_group_id, u.flair_group_id] }\n       group_ids.flatten!\n       group_ids.uniq!\n       group_ids.compact!\n \n-      hash = {}\n-\n-      Group.includes(:flair_upload)\n+      Group\n+        .includes(:flair_upload)\n         .where(id: group_ids)\n         .select(self.class.group_lookup_columns)\n-        .each { |g| hash[g.id] = g }\n-\n-      hash\n+        .index_by(&:id)\n     end\n   end\n end"
    }
  ]
}
