{
  "sha": "832f4fd858fa2decc74bb635e227c168a19f0782",
  "node_id": "C_kwDOBtgov9oAKDgzMmY0ZmQ4NThmYTJkZWNjNzRiYjYzNWUyMjdjMTY4YTE5ZjA3ODI",
  "commit": {
    "author": {
      "name": "Ksinia",
      "email": "xiatian@mail.ru",
      "date": "2021-11-07T15:15:16Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2021-11-09T08:05:41Z"
    },
    "message": "Fix typos in frontend code",
    "tree": {
      "sha": "43dca8ffb440525c5d0ca04c701e9623b921a2ff",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/43dca8ffb440525c5d0ca04c701e9623b921a2ff"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/832f4fd858fa2decc74bb635e227c168a19f0782",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/832f4fd858fa2decc74bb635e227c168a19f0782",
  "html_url": "https://github.com/umputun/remark42/commit/832f4fd858fa2decc74bb635e227c168a19f0782",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/832f4fd858fa2decc74bb635e227c168a19f0782/comments",
  "author": {
    "login": "Ksinia",
    "id": 42918058,
    "node_id": "MDQ6VXNlcjQyOTE4MDU4",
    "avatar_url": "https://avatars.githubusercontent.com/u/42918058?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Ksinia",
    "html_url": "https://github.com/Ksinia",
    "followers_url": "https://api.github.com/users/Ksinia/followers",
    "following_url": "https://api.github.com/users/Ksinia/following{/other_user}",
    "gists_url": "https://api.github.com/users/Ksinia/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Ksinia/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Ksinia/subscriptions",
    "organizations_url": "https://api.github.com/users/Ksinia/orgs",
    "repos_url": "https://api.github.com/users/Ksinia/repos",
    "events_url": "https://api.github.com/users/Ksinia/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Ksinia/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "be3643ed10db3fdeeab6ceade0dc55a27e6ea4a8",
      "url": "https://api.github.com/repos/umputun/remark42/commits/be3643ed10db3fdeeab6ceade0dc55a27e6ea4a8",
      "html_url": "https://github.com/umputun/remark42/commit/be3643ed10db3fdeeab6ceade0dc55a27e6ea4a8"
    }
  ],
  "stats": {
    "total": 84,
    "additions": 42,
    "deletions": 42
  },
  "files": [
    {
      "sha": "0abea9a7e0c3e18c94cb793452e04df8861f2d93",
      "filename": "frontend/app/common/api.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/common/api.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/common/api.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/common/api.ts?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -84,7 +84,7 @@ export const unsubscribeFromEmailUpdates = () => apiFetcher.delete('/email');\n export const deleteMe = (): Promise<{ user_id: string; link: string }> => apiFetcher.post('/deleteme');\n \n /* Admin Methods */\n-// TODO: move these methods to separate chunk as well as all admin inteface features\n+// TODO: move these methods to separate chunk as well as all admin interface features\n export const approveDeleteMe = (token: string): Promise<void> => adminFetcher.get('/deleteme', { token });\n \n export const pinComment = (id: Comment['id']): Promise<void> => adminFetcher.put(`/pin/${id}`, { url, pin: 1 });"
    },
    {
      "sha": "e02643a627c7079b0755f3f724b7b4987e9ab95c",
      "filename": "frontend/app/common/constants.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/common/constants.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/common/constants.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/common/constants.ts?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -39,7 +39,7 @@ export const IS_STORAGE_AVAILABLE: boolean = (() => {\n \n /**\n  * Defines whether iframe loaded in cross origin environment\n- * Usefull for checking if some privacy restriction may be applied\n+ * Useful for checking if some privacy restriction may be applied\n  */\n export const IS_THIRD_PARTY: boolean = (() => {\n   try {"
    },
    {
      "sha": "b6c4a470cb5cbcfb693344c36e07f03cdb0ac83a",
      "filename": "frontend/app/common/fetcher.test.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/common/fetcher.test.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/common/fetcher.test.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/common/fetcher.test.ts?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -6,15 +6,15 @@ import { RequestError } from 'utils/errorUtils';\n import { API_BASE, BASE_URL } from './constants.config';\n import { apiFetcher, authFetcher, adminFetcher, JWT_HEADER } from './fetcher';\n \n-type FetchImplementaitonProps = {\n+type FetchImplementationProps = {\n   status?: number;\n   headers?: Record<string, string>;\n   json?: () => Promise<unknown>;\n   text?: () => Promise<unknown>;\n   data?: unknown;\n };\n \n-function mockFetch({ headers = {}, data = {}, ...props }: FetchImplementaitonProps = {}) {\n+function mockFetch({ headers = {}, data = {}, ...props }: FetchImplementationProps = {}) {\n   window.fetch = jest.fn().mockImplementation(() => {\n     return {\n       status: 200,\n@@ -96,7 +96,7 @@ describe('fetcher', () => {\n   });\n \n   describe('headers', () => {\n-    it('should set active token and than clean it on unauthorized respose', async () => {\n+    it('should set active token and than clean it on unauthorized response', async () => {\n       expect.assertions(4);\n \n       const headersWithJwt = { [JWT_HEADER]: 'token', ...headers };\n@@ -110,7 +110,7 @@ describe('fetcher', () => {\n       mockFetch({ headers, status: 401 });\n       await expect(\n         apiFetcher.get(apiUri).then(() => {\n-          throw Error('apiFether shoud throw error on 401 responce');\n+          throw Error('apiFetcher should throw error on 401 response');\n         })\n       ).rejects.toEqual(new Error('Not authorized.'));\n "
    },
    {
      "sha": "ac0b547f5e595b02193a02d432758dcf2c69805d",
      "filename": "frontend/app/common/local-storage.test.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/common/local-storage.test.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/common/local-storage.test.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/common/local-storage.test.ts?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -11,7 +11,7 @@ describe('getJsonItem', () => {\n     expect(localStorage.getItem(LS_KEY)).toBe('{}');\n   });\n \n-  it('should update json in localStoeage', () => {\n+  it('should update json in localStorage', () => {\n     setJsonItem(LS_KEY, []);\n     expect(localStorage.getItem(LS_KEY)).toBe('[]');\n   });"
    },
    {
      "sha": "e93fc9cc7f3ab450c71476c9d5fbfaca22841b64",
      "filename": "frontend/app/common/static-store.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/common/static-store.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/common/static-store.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/common/static-store.ts?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -4,7 +4,7 @@ import { QuerySettingsType, querySettings } from './settings';\n interface StaticStoreType {\n   config: Config;\n   query: QuerySettingsType;\n-  /** used in fetcher, fer example to set comment edit temiout */\n+  /** used in fetcher, fer example to set comment edit timeout */\n   serverClientTimeDiff?: number;\n }\n "
    },
    {
      "sha": "69097e9e444242d7250171f5e6b8852436253c2a",
      "filename": "frontend/app/common/types.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/common/types.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/common/types.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/common/types.ts?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -65,7 +65,7 @@ export interface Comment {\n   /**\n    * @ClientOnly defines whether comments was hidden (deleted)\n    *\n-   * Situatuon may occure for example if user decided to hide someone,\n+   * Situation may occur for example if user decided to hide someone,\n    * in this case we don't use `delete` field because comment with `delete`\n    * still renders, and comment with `hidden` flag completely removed from DOM\n    */"
    },
    {
      "sha": "aa06a51290ee679a16432c8c3166bc2b4ff020f2",
      "filename": "frontend/app/components/auth/auth.spec.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/components/auth/auth.spec.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/components/auth/auth.spec.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/auth/auth.spec.tsx?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -161,7 +161,7 @@ describe('<Auth/>', () => {\n \n     expect(getByText('Back')).toHaveClass('auth-back-button');\n     expect(getByTitle('Close sign-in dropdown')).toHaveClass('auth-close-button');\n-    expect(getByPlaceholderText('Token')).toHaveClass('auth-token-textatea');\n+    expect(getByPlaceholderText('Token')).toHaveClass('auth-token-textarea');\n \n     fireEvent.change(getByPlaceholderText('Token'), {\n       target: { value: 'token' },\n@@ -189,7 +189,7 @@ describe('<Auth/>', () => {\n \n     expect(getByText('Back')).toHaveClass('auth-back-button');\n     expect(getByTitle('Close sign-in dropdown')).toHaveClass('auth-close-button');\n-    expect(getByPlaceholderText('Token')).toHaveClass('auth-token-textatea');\n+    expect(getByPlaceholderText('Token')).toHaveClass('auth-token-textarea');\n \n     fireEvent.change(getByPlaceholderText('Token'), { target: { value: 'token' } });\n     fireEvent.click(getByText('Submit'));\n@@ -220,7 +220,7 @@ describe('<Auth/>', () => {\n     ${'username '}  | ${'username'}\n     ${' username'}  | ${'username'}\n     ${' username '} | ${'username'}\n-  `('should remove spaces in the first/last postion in username', async ({ value, expected }) => {\n+  `('should remove spaces in the first/last position in username', async ({ value, expected }) => {\n     StaticStore.config.auth_providers = ['email'];\n \n     const { getByText, getByPlaceholderText } = render(<Auth />);"
    },
    {
      "sha": "4eefbb696b6123ae13497af5d5ef65aa9d7b3ca5",
      "filename": "frontend/app/components/auth/auth.tsx",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/components/auth/auth.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/components/auth/auth.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/auth/auth.tsx?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -22,13 +22,13 @@ import styles from './auth.module.css';\n \n export function Auth() {\n   const intl = useIntl();\n-  const dispath = useDispatch();\n+  const dispatch = useDispatch();\n   const [oauthProviders, formProviders] = getProviders();\n \n   // UI State\n   const [isLoading, setLoading] = useState(false);\n   const [view, setView] = useState<typeof formProviders[number] | 'token'>(formProviders[0]);\n-  const [ref, isDropdownShowed, toggleDropdownState] = useDropdown(view === 'token');\n+  const [ref, isDropdownShown, toggleDropdownState] = useDropdown(view === 'token');\n \n   // Errors\n   const [invalidReason, setInvalidReason] = useState<keyof typeof messages | null>(null);\n@@ -64,7 +64,7 @@ export function Auth() {\n           const username = data.get('username') as string;\n           const user = await anonymousSignin(username);\n \n-          dispath(setUser(user));\n+          dispatch(setUser(user));\n           break;\n         }\n         case 'email': {\n@@ -83,7 +83,7 @@ export function Auth() {\n             setInvalidReason(invalidReason);\n           } else {\n             const user = await verifyEmailSignin(token);\n-            dispath(setUser(user));\n+            dispatch(setUser(user));\n           }\n \n           break;\n@@ -116,10 +116,10 @@ export function Auth() {\n   );\n   return (\n     <div className={clsx('auth', styles.root)}>\n-      <Button className=\"auth-button\" selected={isDropdownShowed} onClick={handleClickSingIn} suffix={<ArrowIcon />}>\n+      <Button className=\"auth-button\" selected={isDropdownShown} onClick={handleClickSingIn} suffix={<ArrowIcon />}>\n         {intl.formatMessage(messages.signin)}\n       </Button>\n-      {isDropdownShowed && (\n+      {isDropdownShown && (\n         <div className={clsx('auth-dropdown', styles.dropdown)} ref={ref}>\n           <form className={clsx('auth-form', styles.form)} onSubmit={handleSubmit}>\n             {isTokenView ? (\n@@ -157,7 +157,7 @@ export function Auth() {\n                 <div className={clsx('auth-row', styles.row)}>\n                   <TextareaAutosize\n                     name=\"token\"\n-                    className={clsx('auth-token-textatea', styles.textarea)}\n+                    className={clsx('auth-token-textarea', styles.textarea)}\n                     placeholder={intl.formatMessage(messages.token)}\n                     disabled={isLoading}\n                   />"
    },
    {
      "sha": "d48466a70688fc01fd985444b1e81cfce1a541c2",
      "filename": "frontend/app/components/auth/components/oauth.tsx",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/components/auth/components/oauth.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/components/auth/components/oauth.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/auth/components/oauth.tsx?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -23,10 +23,10 @@ type Props = {\n \n export function OAuth({ providers }: Props) {\n   const intl = useIntl();\n-  const dispath = useDispatch();\n+  const dispatch = useDispatch();\n   const theme = useTheme();\n   const buttonVariant = getButtonVariant(providers.length);\n-  const handleOathClick: JSX.GenericEventHandler<HTMLAnchorElement> = async (evt) => {\n+  const handleOauthClick: JSX.GenericEventHandler<HTMLAnchorElement> = async (evt) => {\n     const { href } = evt.currentTarget as HTMLAnchorElement;\n \n     evt.preventDefault();\n@@ -36,7 +36,7 @@ export function OAuth({ providers }: Props) {\n       return;\n     }\n \n-    dispath(setUser(user));\n+    dispatch(setUser(user));\n   };\n \n   return (\n@@ -50,7 +50,7 @@ export function OAuth({ providers }: Props) {\n               target=\"_blank\"\n               rel=\"noopener noreferrer\"\n               href={`${BASE_URL}/auth/${p}/login?from=${location}&site=${siteId}`}\n-              onClick={handleOathClick}\n+              onClick={handleOauthClick}\n               className={clsx('oauth-button', styles.button, styles[buttonVariant], styles[p])}\n               data-provider-name={name}\n               title={intl.formatMessage(messages.oauthTitle, { provider: name })}"
    },
    {
      "sha": "efc433d600f2337217724df42aea0ef59c404599",
      "filename": "frontend/app/components/comment-form/comment-form.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/components/comment-form/comment-form.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/components/comment-form/comment-form.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/comment-form/comment-form.tsx?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -45,7 +45,7 @@ export type CommentFormProps = {\n export type CommentFormState = {\n   preview: string | null;\n   isErrorShown: boolean;\n-  /** error message, if contains newlines, it will be splitted to multiple errors */\n+  /** error message, if contains newlines, it will be split to multiple errors */\n   errorMessage: string | null;\n   /** prevents error hiding on input event */\n   errorLock: boolean;"
    },
    {
      "sha": "8a48fc95315476916bfc91e95da42c065c374a94",
      "filename": "frontend/app/components/comment/comment.test.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/components/comment/comment.test.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/components/comment/comment.test.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/comment/comment.test.tsx?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -276,7 +276,7 @@ describe('<Comment />', () => {\n       );\n     });\n \n-    it('shoud not be editable', () => {\n+    it('should not be editable', () => {\n       StaticStore.config.edit_duration = 300;\n \n       const component = mountComment({"
    },
    {
      "sha": "586774571a5684ab6bb012260202d05d8e1b0f32",
      "filename": "frontend/app/components/comment/connected-comment.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/components/comment/connected-comment.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/components/comment/connected-comment.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/comment/connected-comment.tsx?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -1,6 +1,6 @@\n /*\n  * connected comment is not exported in index.ts to avoid leaking redux import into last-comments\n- * and should be importded explicitly\n+ * and should be imported explicitly\n  */\n \n import './styles';"
    },
    {
      "sha": "77b79835dada13f790c9d82267040cf5fce48b1e",
      "filename": "frontend/app/components/profile/profile.module.css",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/components/profile/profile.module.css",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/components/profile/profile.module.css",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/profile/profile.module.css?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -15,7 +15,7 @@\n   transform: translateX(0);\n }\n \n-.rootDisapear {\n+.rootDisappear {\n   transition: transform 0.5s ease-in;\n }\n "
    },
    {
      "sha": "f1d582412a865d0aea7539a0667ae095867ffd64",
      "filename": "frontend/app/components/profile/profile.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/components/profile/profile.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/components/profile/profile.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/profile/profile.tsx?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -61,7 +61,7 @@ export function Profile() {\n     const rootElement = rootRef.current;\n \n     rootElement.classList.remove(styles.rootAppear);\n-    rootElement.classList.add(styles.rootDisapear);\n+    rootElement.classList.add(styles.rootDisappear);\n     // No need to unsubscribe because iframe will be destroyed\n     rootElement.addEventListener('transitionend', () => {\n       postMessageToParent({ profile: null });\n@@ -202,7 +202,7 @@ export function Profile() {\n               <FormattedMessage id=\"profile.request-to-delete-data\" defaultMessage=\"Request my data removal\" />\n             </Button>\n           </footer>\n-        ) : // TODO: implement hidding user comments\n+        ) : // TODO: implement hiding user comments\n         null}\n       </aside>\n     </div>"
    },
    {
      "sha": "1df54ea4ce0bc546aa3f644d1d01933981e26e2e",
      "filename": "frontend/app/components/select/select.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/components/select/select.spec.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/components/select/select.spec.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/select/select.spec.tsx?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -34,7 +34,7 @@ describe('<Select/>', () => {\n     expect(selectedOption?.textContent).toBe(items[0].label);\n   });\n \n-  it('should highlight selet on focus', async () => {\n+  it('should highlight select on focus', async () => {\n     const { container } = render(<Select items={items} selected={items[0]} />);\n     const select = container.querySelector('select');\n "
    },
    {
      "sha": "ccdd8fc8a76b55687db581ec6d9dd757d13eee7d",
      "filename": "frontend/app/profile.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/profile.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/profile.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/profile.ts?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -30,7 +30,7 @@ function createFragment(params: Profile & Record<string, string | unknown>) {\n   }\n \n   root.appendChild(iframe);\n-  setStyles(root, styles.rootShowed);\n+  setStyles(root, styles.rootShown);\n   setTimeout(() => iframe?.focus());\n }\n \n@@ -102,7 +102,7 @@ const styles = {\n     opacity: 0,\n     zIndex: 99999999,\n   },\n-  rootShowed: {\n+  rootShown: {\n     display: 'block',\n   },\n   rootHidden: {"
    },
    {
      "sha": "c58029120b4b52829f261203a58d0b123b3f5306",
      "filename": "frontend/app/store/comments/actions.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/store/comments/actions.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/store/comments/actions.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/store/comments/actions.ts?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -109,15 +109,15 @@ export function unsetCommentMode(mode: StoreState['comments']['activeComment'] =\n }\n \n export function updateSorting(sort: Sorting): StoreAction<void> {\n-  return async (dispath, getState) => {\n+  return async (dispatch, getState) => {\n     const { sort: prevSort } = getState().comments;\n-    dispath({ type: COMMENTS_SET_SORT, payload: sort });\n+    dispatch({ type: COMMENTS_SET_SORT, payload: sort });\n \n     try {\n-      await dispath(fetchComments(sort));\n+      await dispatch(fetchComments(sort));\n       setItem(LS_SORT_KEY, sort);\n     } catch (e) {\n-      dispath({ type: COMMENTS_SET_SORT, payload: prevSort });\n+      dispatch({ type: COMMENTS_SET_SORT, payload: prevSort });\n     }\n   };\n }"
    },
    {
      "sha": "4fdadfac39d760486ae3e81216050de5a04f83ee",
      "filename": "frontend/app/typings/global.d.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/typings/global.d.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/app/typings/global.d.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/typings/global.d.ts?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -41,7 +41,7 @@ declare global {\n }\n \n /**\n- * Veriable responsive for dynamic setting public path for\n+ * Variable responsive for dynamic setting public path for\n  * assets. Dynamic imports with relative url will be resolved over this path.\n  *\n  * https://webpack.js.org/guides/public-path/#on-the-fly"
    },
    {
      "sha": "8d654e3ba877d09ab3c9e12071243565882e8a43",
      "filename": "frontend/templates/markdown-help.html",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/templates/markdown-help.html",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/templates/markdown-help.html",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/templates/markdown-help.html?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -319,8 +319,8 @@ <h2 id=\"Text\">Text</h2>\n             words <em>italic</em>: surround them with one asterisk *.\n           </p>\n           <p>\n-            You can even <a href=\"http://google.com\" target=\"_blank\">link to Google!</a> using this syntax:<br />\n-            [link to Google!](http://google.com)\n+            You can even <a href=\"https://google.com\" target=\"_blank\">link to Google!</a> using this syntax:<br />\n+            [link to Google!](https://google.com)\n           </p>\n \n           <h2 id=\"Lists\">Lists</h2>"
    },
    {
      "sha": "7f64a0fb5e85ff197b6fd46b3a320575f90ca911",
      "filename": "frontend/webpack.config.js",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/webpack.config.js",
      "raw_url": "https://github.com/umputun/remark42/raw/832f4fd858fa2decc74bb635e227c168a19f0782/frontend/webpack.config.js",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/webpack.config.js?ref=832f4fd858fa2decc74bb635e227c168a19f0782",
      "patch": "@@ -48,7 +48,7 @@ function getLocalIdent(loaderContext, _, localName, options) {\n  * Generates excludes for babel-loader\n  *\n  * Exclude is a module that has >=es6 code and resides in node_modules.\n- * By defaut babel-loader ignores everything from node_modules,\n+ * By default babel-loader ignores everything from node_modules,\n  * so we have to exclude from ignore these modules\n  */\n const exclude = [\n@@ -74,11 +74,11 @@ const htmlMinifyOptions = {\n module.exports = (_, { mode, analyze }) => {\n   const isDev = mode === 'development';\n   // Use REMARK_URL or predefined host in dev environment\n-  // In development: We use `http://127.0.0.1:9000` for access to backend and backend is accessable via dev server proxy\n+  // In development: We use `http://127.0.0.1:9000` for access to backend and backend is accessible via dev server proxy\n   // In production: {% REMARK_URL %} will be replaced by `sed` on start of prod\n   const REMARK_URL = isDev ? DEVSERVER_BASE_PATH : '{% REMARK_URL %}';\n \n-  // Add debug lib only for developmet throw webpack chuncks and keep code clear\n+  // Add debug lib only for development throw webpack chunks and keep code clear\n   const preactDebug = isDev ? ['preact/debug'] : [];\n \n   const entry = {"
    }
  ]
}
