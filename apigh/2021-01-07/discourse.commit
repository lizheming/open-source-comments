{
  "sha": "49f4c75080ed434c6702ad78bc4a58c02d9bade3",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODo0OWY0Yzc1MDgwZWQ0MzRjNjcwMmFkNzhiYzRhNThjMDJkOWJhZGUz",
  "commit": {
    "author": {
      "name": "Joffrey JAFFEUX",
      "email": "j.jaffeux@gmail.com",
      "date": "2021-01-07T11:21:51Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2021-01-07T11:21:51Z"
    },
    "message": "FIX: recurring was not working for some cases (eg: hours and unit > 1) (#11657)",
    "tree": {
      "sha": "dd6a168c29b14221df65715a5507b0fb089a772a",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/dd6a168c29b14221df65715a5507b0fb089a772a"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/49f4c75080ed434c6702ad78bc4a58c02d9bade3",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf9u7PCRBK7hj4Ov3rIwAAdHIIAET6g0cghd2LboAmCwdX3PG0\n05AJVUXyDVViLqbZ2W4Lc1hgUOUHXUxOd1lztiYj55XB7eu24ffcuwbISve7AjKq\n5dZeDKL8CXbshuW52nwRQjiW2Y6tBFOOt9VNz5Qkb3idOiEWNiCb6SQ3bIbEXei3\nJ96MH7Trafy8EDknfyt/8awfRL86ZDDiB3lrWypcJm34OvQiNvTiHIxaDs1qgCfb\nZ5sl+5RcZORx00YDm6kUtwHlE8UNy4LAJb7OEOyQG9+GpduALeClBBjOPgEwM0jI\nhRy4Ihx9/HAEuH3TpA5GGHcg4ponBSefBpuvlX6HG9x9Dj5zYvT/CL3jdxmDv/8=\n=YhjY\n-----END PGP SIGNATURE-----\n",
      "payload": "tree dd6a168c29b14221df65715a5507b0fb089a772a\nparent 0c451d14d99116deedba43a0fdaf91a3e93892f0\nauthor Joffrey JAFFEUX <j.jaffeux@gmail.com> 1610018511 +0100\ncommitter GitHub <noreply@github.com> 1610018511 +0100\n\nFIX: recurring was not working for some cases (eg: hours and unit > 1) (#11657)\n\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/49f4c75080ed434c6702ad78bc4a58c02d9bade3",
  "html_url": "https://github.com/discourse/discourse/commit/49f4c75080ed434c6702ad78bc4a58c02d9bade3",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/49f4c75080ed434c6702ad78bc4a58c02d9bade3/comments",
  "author": {
    "login": "jjaffeux",
    "id": 339945,
    "node_id": "MDQ6VXNlcjMzOTk0NQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/339945?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jjaffeux",
    "html_url": "https://github.com/jjaffeux",
    "followers_url": "https://api.github.com/users/jjaffeux/followers",
    "following_url": "https://api.github.com/users/jjaffeux/following{/other_user}",
    "gists_url": "https://api.github.com/users/jjaffeux/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jjaffeux/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jjaffeux/subscriptions",
    "organizations_url": "https://api.github.com/users/jjaffeux/orgs",
    "repos_url": "https://api.github.com/users/jjaffeux/repos",
    "events_url": "https://api.github.com/users/jjaffeux/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jjaffeux/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0c451d14d99116deedba43a0fdaf91a3e93892f0",
      "url": "https://api.github.com/repos/discourse/discourse/commits/0c451d14d99116deedba43a0fdaf91a3e93892f0",
      "html_url": "https://github.com/discourse/discourse/commit/0c451d14d99116deedba43a0fdaf91a3e93892f0"
    }
  ],
  "stats": {
    "total": 52,
    "additions": 37,
    "deletions": 15
  },
  "files": [
    {
      "sha": "d82cfa4d0d489ea04e6051ab9a7379c500509501",
      "filename": "plugins/discourse-local-dates/assets/javascripts/lib/date-with-zone-helper.js.es6",
      "status": "modified",
      "additions": 12,
      "deletions": 5,
      "changes": 17,
      "blob_url": "https://github.com/discourse/discourse/blob/49f4c75080ed434c6702ad78bc4a58c02d9bade3/plugins/discourse-local-dates/assets/javascripts/lib/date-with-zone-helper.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/49f4c75080ed434c6702ad78bc4a58c02d9bade3/plugins/discourse-local-dates/assets/javascripts/lib/date-with-zone-helper.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/plugins/discourse-local-dates/assets/javascripts/lib/date-with-zone-helper.js.es6?ref=49f4c75080ed434c6702ad78bc4a58c02d9bade3",
      "patch": "@@ -10,7 +10,7 @@ const { getProperties } = Ember;\n   - isDST() allows to know if a date in a specified timezone is currently under DST\n   - datetimeWithZone(timezone) returns a new moment object with timezone applied\n   - datetime returns the moment object\n-  - repetitionsBetweenDates(duration, date) return the number of repertitions of\n+  - unitRepetitionsBetweenDates(duration, date) return the number of repertitions of\n   duration between two dates, eg for duration: \"1.weeks\", \"2.months\"...\n */\n export default class DateWithZoneHelper {\n@@ -35,11 +35,18 @@ export default class DateWithZoneHelper {\n     return this.datetime.tz(this.localTimezone).isDST();\n   }\n \n-  repetitionsBetweenDates(duration, date) {\n+  unitRepetitionsBetweenDates(duration, date) {\n     const [count, unit] = duration.split(\".\");\n-    const diff = this.datetime.diff(date, unit);\n-    const repetitions = diff / parseInt(count, 10);\n-    return Math.abs((Math.round(repetitions * 10) / 10).toFixed(1));\n+    // get the diff in the specified units with decimals\n+    const diff = Math.abs(this.datetime.diff(date, unit, true));\n+    // get integer count of duration in diff, eg: 4 hours diff is 2 for 2.hours duration\n+    const integer = Math.trunc(diff / count);\n+    // get fractional to define if we have to add one \"duration\"\n+    const fractional = (diff / count) % 1;\n+\n+    return (\n+      integer * parseInt(count, 10) + (fractional > 0 ? parseInt(count, 10) : 0)\n+    );\n   }\n \n   add(count, unit) {"
    },
    {
      "sha": "915d87ccf64d8c072188945fa0e8faf81d144aa9",
      "filename": "plugins/discourse-local-dates/assets/javascripts/lib/local-date-builder.js.es6",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/49f4c75080ed434c6702ad78bc4a58c02d9bade3/plugins/discourse-local-dates/assets/javascripts/lib/local-date-builder.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/49f4c75080ed434c6702ad78bc4a58c02d9bade3/plugins/discourse-local-dates/assets/javascripts/lib/local-date-builder.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/plugins/discourse-local-dates/assets/javascripts/lib/local-date-builder.js.es6?ref=49f4c75080ed434c6702ad78bc4a58c02d9bade3",
      "patch": "@@ -48,14 +48,14 @@ export default class LocalDateBuilder {\n     });\n \n     if (this.recurring && moment().isAfter(localDate.datetime)) {\n-      const [count, type] = this.recurring.split(\".\");\n+      const type = this.recurring.split(\".\")[1];\n \n-      const repetitionsForType = localDate.repetitionsBetweenDates(\n+      const repetitionsForType = localDate.unitRepetitionsBetweenDates(\n         this.recurring,\n         moment.tz(this.localTimezone)\n       );\n \n-      localDate = localDate.add(repetitionsForType + parseInt(count, 10), type);\n+      localDate = localDate.add(repetitionsForType, type);\n     }\n \n     const previews = this._generatePreviews(localDate, displayedTimezone);"
    },
    {
      "sha": "af43d091f1f6882bf68debb98ed67266f08bcbe4",
      "filename": "plugins/discourse-local-dates/test/javascripts/lib/date-with-zone-helper-test.js.es6",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/discourse/discourse/blob/49f4c75080ed434c6702ad78bc4a58c02d9bade3/plugins/discourse-local-dates/test/javascripts/lib/date-with-zone-helper-test.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/49f4c75080ed434c6702ad78bc4a58c02d9bade3/plugins/discourse-local-dates/test/javascripts/lib/date-with-zone-helper-test.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/plugins/discourse-local-dates/test/javascripts/lib/date-with-zone-helper-test.js.es6?ref=49f4c75080ed434c6702ad78bc4a58c02d9bade3",
      "patch": "@@ -28,7 +28,7 @@ test(\"#format\", function (assert) {\n   assert.equal(date.format(), \"2020-03-15T15:36:00.000+01:00\");\n });\n \n-test(\"#repetitionsBetweenDates\", function (assert) {\n+test(\"#unitRepetitionsBetweenDates\", function (assert) {\n   let date;\n \n   date = buildDateHelper({\n@@ -39,7 +39,7 @@ test(\"#repetitionsBetweenDates\", function (assert) {\n     timezone: PARIS,\n   });\n   assert.equal(\n-    date.repetitionsBetweenDates(\n+    date.unitRepetitionsBetweenDates(\n       \"1.hour\",\n       moment.tz(\"2020-02-15 15:36\", SYDNEY)\n     ),\n@@ -55,7 +55,7 @@ test(\"#repetitionsBetweenDates\", function (assert) {\n     timezone: PARIS,\n   });\n   assert.equal(\n-    date.repetitionsBetweenDates(\n+    date.unitRepetitionsBetweenDates(\n       \"1.minute\",\n       moment.tz(\"2020-02-15 15:36\", PARIS)\n     ),\n@@ -71,7 +71,7 @@ test(\"#repetitionsBetweenDates\", function (assert) {\n     timezone: PARIS,\n   });\n   assert.equal(\n-    date.repetitionsBetweenDates(\n+    date.unitRepetitionsBetweenDates(\n       \"1.minute\",\n       moment.tz(\"2020-02-15 15:37\", PARIS)\n     ),\n@@ -87,11 +87,11 @@ test(\"#repetitionsBetweenDates\", function (assert) {\n     timezone: PARIS,\n   });\n   assert.equal(\n-    date.repetitionsBetweenDates(\n-      \"2.minute\",\n+    date.unitRepetitionsBetweenDates(\n+      \"2.minutes\",\n       moment.tz(\"2020-02-15 15:41\", PARIS)\n     ),\n-    2.5,\n+    6,\n     \"it correctly finds difference with a multiplicator\"\n   );\n });"
    },
    {
      "sha": "74fb2907d613313a273bdb087e96112cc872a1de",
      "filename": "plugins/discourse-local-dates/test/javascripts/lib/local-date-builder-test.js.es6",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/discourse/discourse/blob/49f4c75080ed434c6702ad78bc4a58c02d9bade3/plugins/discourse-local-dates/test/javascripts/lib/local-date-builder-test.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/49f4c75080ed434c6702ad78bc4a58c02d9bade3/plugins/discourse-local-dates/test/javascripts/lib/local-date-builder-test.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/plugins/discourse-local-dates/test/javascripts/lib/local-date-builder-test.js.es6?ref=49f4c75080ed434c6702ad78bc4a58c02d9bade3",
      "patch": "@@ -233,6 +233,21 @@ test(\"option[recurring]\", function (assert) {\n       \"it works for a future date\"\n     );\n   });\n+\n+  freezeTime({ date: \"2021-01-08 11:16\" }, () => {\n+    assert.buildsCorrectDate(\n+      {\n+        date: \"2021-01-05\",\n+        time: \"14:00\",\n+        recurring: \"2.hours\",\n+        timezone: NEW_YORK,\n+      },\n+      {\n+        formated: \"Today 12:00 PM\",\n+      },\n+      \"it works with hours\"\n+    );\n+  });\n });\n \n test(\"option[countown]\", function (assert) {"
    }
  ]
}
