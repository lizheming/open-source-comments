{
  "sha": "1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6MTA3MzI3NmJmOGE0N2EzYjRkM2Y0YTVjYzFiM2E4ZjVlZjg0Mjg5Mw==",
  "commit": {
    "author": {
      "name": "Wyatt Johnson",
      "email": "wyattjoh@gmail.com",
      "date": "2020-08-26T15:19:58Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-08-26T15:19:58Z"
    },
    "message": "[CORL-1323] Media Fixes (#3139)\n\n* fix: fixed issues with media selection\n\n* fix: fixed issue with edits not preserving images",
    "tree": {
      "sha": "5517faa8ae9f60410da25834be5c524bf64487ba",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/5517faa8ae9f60410da25834be5c524bf64487ba"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfRn2eCRBK7hj4Ov3rIwAAdHIIAC+8nDjIX4q1I7srwSrX+zk3\nQbiny9TWQm7DTXxuSHuWP9KYG2YquAW5xGvFuUiyi8D2IWNkLO34rVTS55ur3j1c\nt9ESp/xCQLF2VuvuqIhh2YFKpHFUCP+vHzyFjNNnn/d/jCo5OGeUHNejMWP9+TJg\nTzkEDQVHiVC34k9yfXslKUszAe3cVq7jIsAIFxogdz0y06Bg8xpMRTZBZHTs2+VO\nmg6IK9pL3C3rwFvzdfEsdnikb1QMw8eOHhW5syiOh3nsaHozXlsqFsqvvDQ7kyq9\n6C46MeGmCTkOoT/IBFqOMXeIwLoka9w6cdScnBSNJofB8l/luBoM9/g7lheBFn8=\n=h4th\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 5517faa8ae9f60410da25834be5c524bf64487ba\nparent 3bd15266f7ce056d7e07dc8313be4c42d986f524\nauthor Wyatt Johnson <wyattjoh@gmail.com> 1598455198 -0600\ncommitter GitHub <noreply@github.com> 1598455198 +0000\n\n[CORL-1323] Media Fixes (#3139)\n\n* fix: fixed issues with media selection\n\n* fix: fixed issue with edits not preserving images"
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
  "html_url": "https://github.com/coralproject/talk/commit/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/comments",
  "author": {
    "login": "wyattjoh",
    "id": 633002,
    "node_id": "MDQ6VXNlcjYzMzAwMg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/633002?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wyattjoh",
    "html_url": "https://github.com/wyattjoh",
    "followers_url": "https://api.github.com/users/wyattjoh/followers",
    "following_url": "https://api.github.com/users/wyattjoh/following{/other_user}",
    "gists_url": "https://api.github.com/users/wyattjoh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wyattjoh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wyattjoh/subscriptions",
    "organizations_url": "https://api.github.com/users/wyattjoh/orgs",
    "repos_url": "https://api.github.com/users/wyattjoh/repos",
    "events_url": "https://api.github.com/users/wyattjoh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wyattjoh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3bd15266f7ce056d7e07dc8313be4c42d986f524",
      "url": "https://api.github.com/repos/coralproject/talk/commits/3bd15266f7ce056d7e07dc8313be4c42d986f524",
      "html_url": "https://github.com/coralproject/talk/commit/3bd15266f7ce056d7e07dc8313be4c42d986f524"
    }
  ],
  "stats": {
    "total": 509,
    "additions": 265,
    "deletions": 244
  },
  "files": [
    {
      "sha": "c97b72c133c0d114c48b613665dce88bd2a918cb",
      "filename": "src/core/client/stream/tabs/Comments/Comment/EditCommentForm/EditCommentFormContainer.tsx",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/tabs/Comments/Comment/EditCommentForm/EditCommentFormContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/tabs/Comments/Comment/EditCommentForm/EditCommentFormContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/EditCommentForm/EditCommentFormContainer.tsx?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -51,6 +51,7 @@ function getMediaFromComment(comment: CommentData) {\n   if (!comment.revision || !comment.revision.media) {\n     return;\n   }\n+\n   switch (comment.revision.media.__typename) {\n     case \"YouTubeMedia\":\n       return {\n@@ -67,7 +68,12 @@ function getMediaFromComment(comment: CommentData) {\n         type: \"twitter\",\n         url: comment.revision.media.url,\n       };\n-    default:\n+    case \"ExternalMedia\":\n+      return {\n+        type: \"external\",\n+        url: comment.revision.media.url,\n+      };\n+    case \"%other\":\n       return;\n   }\n }\n@@ -226,6 +232,9 @@ const enhanced = withContext(({ sessionStorage, browserInfo }) => ({\n                   width\n                   height\n                 }\n+                ... on ExternalMedia {\n+                  url\n+                }\n               }\n             }\n             author {"
    },
    {
      "sha": "428879084b11d75230b0a9be738679d8a7abcd86",
      "filename": "src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaConfirmation.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 23,
      "changes": 24,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaConfirmation.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaConfirmation.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaConfirmation.tsx?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -6,35 +6,18 @@ import MediaPreview from \"./MediaPreview\";\n \n import styles from \"./MediaConfirmation.css\";\n \n-interface MediaConfig {\n-  giphy: {\n-    enabled: boolean;\n-  };\n-  twitter: {\n-    enabled: boolean;\n-  };\n-  youtube: {\n-    enabled: boolean;\n-  };\n-  external: {\n-    enabled: boolean;\n-  };\n-}\n-\n interface Props {\n   media: MediaLink & {\n     confirmed: boolean;\n   };\n   onConfirm: () => void;\n   onRemove: () => void;\n-  config: MediaConfig;\n   siteID: string;\n }\n \n const MediaConfirmation: FunctionComponent<Props> = ({\n   media,\n   onConfirm,\n-  config,\n   onRemove,\n   siteID,\n }) => {\n@@ -48,12 +31,7 @@ const MediaConfirmation: FunctionComponent<Props> = ({\n         />\n       )}\n       {media.confirmed && (\n-        <MediaPreview\n-          media={media}\n-          onRemove={onRemove}\n-          config={config}\n-          siteID={siteID}\n-        />\n+        <MediaPreview media={media} onRemove={onRemove} siteID={siteID} />\n       )}\n     </div>\n   );"
    },
    {
      "sha": "d114d9a60f0bf30d24ebc41b7474afad98d584a1",
      "filename": "src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaPreview.tsx",
      "status": "modified",
      "additions": 52,
      "deletions": 90,
      "changes": 142,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaPreview.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaPreview.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Comment/MediaConfirmation/MediaPreview.tsx?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -19,109 +19,71 @@ import MediaConfirmationIcon from \"./MediaConfirmationIcon\";\n \n import styles from \"./MediaPreview.css\";\n \n-interface MediaConfig {\n-  giphy: {\n-    enabled: boolean;\n-  };\n-  twitter: {\n-    enabled: boolean;\n-  };\n-  youtube: {\n-    enabled: boolean;\n-  };\n-  external: {\n-    enabled: boolean;\n-  };\n-}\n-\n interface Props {\n   media: MediaLink;\n   onRemove: () => void;\n-  config: MediaConfig | null;\n   siteID: string;\n }\n \n+const RemoveButton: FunctionComponent<Pick<Props, \"onRemove\">> = ({\n+  onRemove,\n+}) => (\n+  <Button\n+    onClick={onRemove}\n+    color=\"secondary\"\n+    variant=\"flat\"\n+    paddingSize=\"extraSmall\"\n+  >\n+    <Icon size=\"sm\">close</Icon>\n+    <Localized id=\"comments-postComment-confirmMedia-remove\">\n+      <span>Remove</span>\n+    </Localized>\n+  </Button>\n+);\n+\n const MediaPreview: FunctionComponent<Props> = ({\n   media,\n   onRemove,\n-  config,\n   siteID,\n }) => {\n   return (\n-    <div>\n-      <MatchMedia gteWidth=\"xs\">\n-        {(matches) => (\n-          <>\n-            <HorizontalGutter spacing={3} className={styles.root}>\n-              <div>\n-                <Flex justifyContent=\"space-between\" alignItems=\"center\">\n-                  <Flex\n-                    spacing={2}\n-                    alignItems=\"baseline\"\n-                    className={styles.link}\n-                  >\n-                    <div>\n-                      <MediaConfirmationIcon media={media} />\n-                    </div>\n-                    <div className={styles.url}>\n-                      <a\n-                        href={media.url}\n-                        target=\"_blank\"\n-                        rel=\"noopener noreferrer\"\n-                      >\n-                        {media.url}\n-                      </a>\n-                    </div>\n-                  </Flex>\n-                  {matches && (\n-                    <Button\n-                      onClick={onRemove}\n-                      color=\"secondary\"\n-                      variant=\"flat\"\n-                      paddingSize=\"extraSmall\"\n-                    >\n-                      <Flex alignItems=\"flex-end\" justifyContent=\"flex-end\">\n-                        <Icon size=\"sm\">close</Icon>\n-                        <Localized id=\"comments-postComment-confirmMedia-remove\">\n-                          <span>Remove</span>\n-                        </Localized>\n-                      </Flex>\n-                    </Button>\n-                  )}\n-                </Flex>\n-              </div>\n-              {media.type === \"external\" && (\n-                <ExternalMedia url={media.url} siteID={siteID} />\n-              )}\n-              {media.type === \"twitter\" && (\n-                <TwitterMedia url={media.url} siteID={siteID} />\n-              )}\n-              {media.type === \"youtube\" && (\n-                <YouTubeMedia url={media.url} siteID={siteID} />\n-              )}\n-            </HorizontalGutter>\n-            {!matches && (\n-              <Flex justifyContent=\"center\">\n-                <Button\n-                  onClick={onRemove}\n-                  color=\"secondary\"\n-                  variant=\"flat\"\n-                  paddingSize=\"extraSmall\"\n-                  className={styles.removeButton}\n-                >\n-                  <Flex alignItems=\"flex-end\">\n-                    <Icon size=\"sm\">close</Icon>\n-                    <Localized id=\"comments-postComment-confirmMedia-remove\">\n-                      <span>Remove</span>\n-                    </Localized>\n-                  </Flex>\n-                </Button>\n+    <MatchMedia gteWidth=\"xs\">\n+      {(matches) => (\n+        <>\n+          <HorizontalGutter spacing={3} className={styles.root}>\n+            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n+              <Flex spacing={2} alignItems=\"baseline\" className={styles.link}>\n+                <div>\n+                  <MediaConfirmationIcon media={media} />\n+                </div>\n+                <div className={styles.url}>\n+                  <a href={media.url} target=\"_blank\" rel=\"noopener noreferrer\">\n+                    {media.url}\n+                  </a>\n+                </div>\n               </Flex>\n-            )}\n-          </>\n-        )}\n-      </MatchMedia>\n-    </div>\n+              {matches && <RemoveButton onRemove={onRemove} />}\n+            </Flex>\n+\n+            {/* Show the actual media. */}\n+            {media.type === \"external\" ? (\n+              <ExternalMedia url={media.url} siteID={siteID} />\n+            ) : media.type === \"twitter\" ? (\n+              <TwitterMedia url={media.url} siteID={siteID} />\n+            ) : media.type === \"youtube\" ? (\n+              <YouTubeMedia url={media.url} siteID={siteID} />\n+            ) : null}\n+          </HorizontalGutter>\n+\n+          {/* On extra small screens, move the remove button to the bottom! */}\n+          {!matches && (\n+            <Flex justifyContent=\"center\" className={styles.removeButton}>\n+              <RemoveButton onRemove={onRemove} />\n+            </Flex>\n+          )}\n+        </>\n+      )}\n+    </MatchMedia>\n   );\n };\n "
    },
    {
      "sha": "944fe04238eb64226e57c594baecfe4393f67a8f",
      "filename": "src/core/client/stream/tabs/Comments/ExternalImageInput/ExternalImageInput.tsx",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/tabs/Comments/ExternalImageInput/ExternalImageInput.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/tabs/Comments/ExternalImageInput/ExternalImageInput.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/ExternalImageInput/ExternalImageInput.tsx?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -2,6 +2,7 @@ import { Localized } from \"@fluent/react/compat\";\n import React, {\n   ChangeEvent,\n   FunctionComponent,\n+  KeyboardEvent,\n   useCallback,\n   useState,\n } from \"react\";\n@@ -12,6 +13,7 @@ import {\n   InputLabel,\n   TextField,\n } from \"coral-ui/components/v2\";\n+\n import styles from \"./ExternalImageInput.css\";\n \n interface Props {\n@@ -25,8 +27,19 @@ const ExternalImageInput: FunctionComponent<Props> = ({ onImageInsert }) => {\n   }, []);\n   const onInsertClick = useCallback(() => {\n     onImageInsert(url);\n+\n+    // TODO: we should handle this state better...\n     setURL(\"\");\n   }, [url, setURL, onImageInsert]);\n+\n+  const onKeyPress = useCallback((e: KeyboardEvent<HTMLInputElement>) => {\n+    if (e.key !== \"Enter\") {\n+      return;\n+    }\n+\n+    e.preventDefault();\n+  }, []);\n+\n   return (\n     <div className={styles.root}>\n       <HorizontalGutter>\n@@ -38,6 +51,7 @@ const ExternalImageInput: FunctionComponent<Props> = ({ onImageInsert }) => {\n             className={styles.input}\n             value={url}\n             onChange={onURLFieldChange}\n+            onKeyPress={onKeyPress}\n             fullWidth\n             variant=\"seamlessAdornment\"\n             color=\"streamBlue\""
    },
    {
      "sha": "157427cdad9ca51ef40515e8399ef73898bcbc2f",
      "filename": "src/core/client/stream/tabs/Comments/GifSelector/GifPreview.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/tabs/Comments/GifSelector/GifPreview.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/tabs/Comments/GifSelector/GifPreview.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/GifSelector/GifPreview.tsx?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -7,7 +7,7 @@ import styles from \"./GifPreview.css\";\n \n interface Props {\n   url: string;\n-  title: string;\n+  title?: string;\n   onRemove: () => void;\n }\n "
    },
    {
      "sha": "e3f0b529f6356d5dc280385d0beced0402a4a15f",
      "filename": "src/core/client/stream/tabs/Comments/GifSelector/GifSelector.tsx",
      "status": "modified",
      "additions": 16,
      "deletions": 4,
      "changes": 20,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/tabs/Comments/GifSelector/GifSelector.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/tabs/Comments/GifSelector/GifSelector.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/GifSelector/GifSelector.tsx?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -2,6 +2,7 @@ import { Localized } from \"@fluent/react/compat\";\n import React, {\n   ChangeEvent,\n   FunctionComponent,\n+  KeyboardEvent,\n   useCallback,\n   useEffect,\n   useRef,\n@@ -94,12 +95,22 @@ const GifSelector: FunctionComponent<Props> = (props) => {\n       }\n     };\n   }, [query, page, setResults, setIsLoading, setPage, gifSearchFetch]);\n+\n   const nextPage = useCallback(() => {\n-    setPage(page + 1);\n-  }, [page]);\n+    setPage((p) => p + 1);\n+  }, []);\n   const prevPage = useCallback(() => {\n-    setPage(page - 1);\n-  }, [page]);\n+    setPage((p) => p - 1);\n+  }, []);\n+\n+  const onKeyPress = useCallback((e: KeyboardEvent<HTMLInputElement>) => {\n+    if (e.key !== \"Enter\") {\n+      return;\n+    }\n+\n+    e.preventDefault();\n+  }, []);\n+\n   const onGifSelect = useCallback(\n     (gif: GiphyGif) => {\n       setResults([]);\n@@ -121,6 +132,7 @@ const GifSelector: FunctionComponent<Props> = (props) => {\n             className={styles.input}\n             value={query}\n             onChange={onSearchFieldChange}\n+            onKeyPress={onKeyPress}\n             fullWidth\n             variant=\"seamlessAdornment\"\n             color=\"streamBlue\""
    },
    {
      "sha": "f592f8a2916ea041ca5f3325718b238d981ba3a9",
      "filename": "src/core/client/stream/tabs/Comments/Stream/CommentForm/CommentForm.tsx",
      "status": "modified",
      "additions": 47,
      "deletions": 33,
      "changes": 80,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/tabs/Comments/Stream/CommentForm/CommentForm.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/tabs/Comments/Stream/CommentForm/CommentForm.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/CommentForm/CommentForm.tsx?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -30,7 +30,7 @@ import { Button, CallOut } from \"coral-ui/components/v3\";\n import { getCommentBodyValidators } from \"../../helpers\";\n import RemainingCharactersContainer from \"../../RemainingCharacters\";\n import RTEContainer from \"../../RTE\";\n-import MediaField from \"./MediaField\";\n+import MediaField, { Widget } from \"./MediaField\";\n \n import styles from \"./CommentForm.css\";\n \n@@ -48,6 +48,21 @@ interface MediaProps {\n   height?: string;\n }\n \n+interface MediaConfig {\n+  giphy: {\n+    enabled: boolean;\n+  };\n+  twitter: {\n+    enabled: boolean;\n+  };\n+  youtube: {\n+    enabled: boolean;\n+  };\n+  external: {\n+    enabled: boolean;\n+  };\n+}\n+\n interface FormProps {\n   body: string;\n   media?: MediaProps;\n@@ -72,7 +87,7 @@ interface Props {\n   expired?: boolean;\n   submitStatus?: React.ReactNode;\n   classNameRoot: \"createComment\" | \"editComment\" | \"createReplyComment\";\n-  mediaConfig: PropTypesOf<typeof MediaField>[\"config\"];\n+  mediaConfig: MediaConfig;\n   placeholder: string;\n   placeHolderId: string;\n   bodyInputID: string;\n@@ -81,21 +96,28 @@ interface Props {\n   className?: string;\n }\n \n+function createWidgetToggle(desiredWidget: Widget) {\n+  return (widget: Widget) => {\n+    if (widget !== desiredWidget) {\n+      return desiredWidget;\n+    }\n+\n+    return null;\n+  };\n+}\n+\n const CommentForm: FunctionComponent<Props> = (props) => {\n-  const [showGifSelector, setShowGifSelector] = useState<boolean>(false);\n-  const [showExternalImageInput, setShowExternalImageInput] = useState<boolean>(\n-    false\n-  );\n-  const [media, setMedia] = useState<MediaLink | null>(null);\n+  const [mediaWidget, setMediaWidget] = useState<Widget>(null);\n+  const [pastedMedia, setPastedMedia] = useState<MediaLink | null>(null);\n   const onSubmit = useCallback(\n     (values: FormSubmitProps, form: FormApi) => {\n       // Unset the media.\n-      setMedia(null);\n+      setPastedMedia(null);\n \n       // Submit the form.\n       return props.onSubmit(values, form);\n     },\n-    [props.onSubmit, setMedia]\n+    [props.onSubmit, setPastedMedia]\n   );\n \n   const onPaste = useCallback(\n@@ -118,25 +140,22 @@ const CommentForm: FunctionComponent<Props> = (props) => {\n         ((link.type === \"twitter\" && props.mediaConfig.twitter.enabled) ||\n           (link.type === \"youtube\" && props.mediaConfig.youtube.enabled))\n       ) {\n-        setMedia({ ...link });\n+        setPastedMedia({ ...link });\n       }\n     },\n-    [setMedia, props.mediaConfig]\n+    [setPastedMedia, props.mediaConfig]\n   );\n \n   const toggleExternalImageInput = useCallback(() => {\n-    setShowExternalImageInput(!showExternalImageInput);\n-    if (showGifSelector) {\n-      setShowGifSelector(false);\n-    }\n-  }, [showExternalImageInput, showGifSelector]);\n+    setMediaWidget(createWidgetToggle(\"external\"));\n+  }, []);\n \n   const toggleGIFSelector = useCallback(() => {\n-    setShowGifSelector(!showGifSelector);\n-    if (showExternalImageInput) {\n-      setShowExternalImageInput(false);\n-    }\n-  }, [showExternalImageInput, showGifSelector]);\n+    setMediaWidget(createWidgetToggle(\"giphy\"));\n+  }, []);\n+\n+  const showGifSelector = mediaWidget === \"giphy\";\n+  const showExternalImageInput = mediaWidget === \"external\";\n \n   return (\n     <div className={cn(CLASSES[props.classNameRoot].$root, props.className)}>\n@@ -239,18 +258,13 @@ const CommentForm: FunctionComponent<Props> = (props) => {\n                       </Localized>\n                     )}\n                   </Field>\n-                  {props.mediaConfig && (\n-                    <MediaField\n-                      config={props.mediaConfig}\n-                      siteID={props.siteID}\n-                      media={media}\n-                      setMedia={setMedia}\n-                      showExternalImageInput={showExternalImageInput}\n-                      toggleExternalImageInput={toggleExternalImageInput}\n-                      showGIFSelector={showGifSelector}\n-                      toggleGIFSelector={toggleGIFSelector}\n-                    />\n-                  )}\n+                  <MediaField\n+                    widget={mediaWidget}\n+                    setWidget={setMediaWidget}\n+                    pastedMedia={pastedMedia}\n+                    setPastedMedia={setPastedMedia}\n+                    siteID={props.siteID}\n+                  />\n                 </div>\n               </div>\n               {!props.expired && props.editableUntil && ("
    },
    {
      "sha": "315524555de26e0c3bcdff0076281bc236a75c7c",
      "filename": "src/core/client/stream/tabs/Comments/Stream/CommentForm/MediaField.tsx",
      "status": "modified",
      "additions": 82,
      "deletions": 76,
      "changes": 158,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/tabs/Comments/Stream/CommentForm/MediaField.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/tabs/Comments/Stream/CommentForm/MediaField.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/CommentForm/MediaField.tsx?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -1,127 +1,133 @@\n-import React, { FunctionComponent, useCallback } from \"react\";\n+import React, { FunctionComponent, useCallback, useEffect } from \"react\";\n import { useField } from \"react-final-form\";\n \n import { isMediaLink, MediaLink } from \"coral-common/helpers/findMediaLinks\";\n import { GiphyGif } from \"coral-common/rest/external/giphy\";\n-import { getMediaValidators } from \"../../helpers\";\n-\n import { Icon } from \"coral-ui/components/v2\";\n import { CallOut } from \"coral-ui/components/v3\";\n+\n import {\n   MediaConfirmPrompt,\n   MediaPreview,\n } from \"../../Comment/MediaConfirmation\";\n import ExternalImageInput from \"../../ExternalImageInput\";\n import GifSelector, { GifPreview } from \"../../GifSelector\";\n+import { getMediaValidators } from \"../../helpers\";\n+\n+export type Widget = \"giphy\" | \"external\" | null;\n \n interface Props {\n-  showGIFSelector: boolean;\n-  toggleGIFSelector: () => void;\n-  showExternalImageInput: boolean;\n-  toggleExternalImageInput: () => void;\n+  widget: Widget;\n+  setWidget: (widget: Widget) => void;\n   siteID: string;\n-  config: MediaConfig;\n-  media: MediaLink | null;\n-  setMedia: (media: MediaLink | null) => void;\n+  pastedMedia: MediaLink | null;\n+  setPastedMedia: (media: MediaLink | null) => void;\n }\n \n export interface Media {\n+  id?: string;\n   type: \"giphy\" | \"twitter\" | \"youtube\" | \"external\";\n   url: string;\n-  id?: string;\n   width?: string;\n   height?: string;\n }\n \n-interface MediaConfig {\n-  giphy: {\n-    enabled: boolean;\n-  };\n-  twitter: {\n-    enabled: boolean;\n-  };\n-  youtube: {\n-    enabled: boolean;\n-  };\n-  external: {\n-    enabled: boolean;\n-  };\n-}\n-\n-const MediaField: FunctionComponent<Props> = (props) => {\n+const MediaField: FunctionComponent<Props> = ({\n+  widget,\n+  setWidget,\n+  siteID,\n+  pastedMedia,\n+  setPastedMedia,\n+}) => {\n   const field = useField<Media | undefined>(\"media\", {\n     validate: getMediaValidators(),\n   });\n \n+  // Grab the reference to the media object.\n+  const media = field.input.value;\n+\n+  const onSelect = useCallback(\n+    (selectedMedia: Media | undefined) => {\n+      field.input.onChange(selectedMedia);\n+    },\n+    [field.input]\n+  );\n+\n   const onGIFSelect = useCallback(\n-    (gif: GiphyGif) => {\n-      field.input.onChange({\n+    (gif: GiphyGif) =>\n+      onSelect({\n         type: \"giphy\",\n         id: gif.id,\n         url: gif.images.original.url,\n-      });\n-\n-      props.toggleGIFSelector();\n-    },\n-    [props.toggleGIFSelector]\n+      }),\n+    [onSelect]\n   );\n \n-  const onGIFRemove = useCallback(() => {\n-    field.input.onChange(undefined);\n-  }, [field.input]);\n-\n   const onImageInsert = useCallback(\n-    (url: string) => {\n-      field.input.onChange({\n+    (url: string) =>\n+      onSelect({\n         type: \"external\",\n         url,\n-      });\n-\n-      props.toggleExternalImageInput();\n-    },\n-    [props.toggleExternalImageInput]\n+      }),\n+    [onSelect]\n   );\n \n-  const onConfirmMedia = useCallback(() => {\n-    field.input.onChange(props.media!);\n-    props.setMedia(null);\n-  }, [props.media, props.setMedia, field.input]);\n-\n-  const onRemoveMedia = useCallback(() => {\n-    field.input.onChange(null);\n-    props.setMedia(null);\n-  }, [props.media, props.setMedia, field.input]);\n+  const onRemove = useCallback(() => {\n+    onSelect(undefined);\n+    setPastedMedia(null);\n+  }, [onSelect, setPastedMedia]);\n \n-  // Grab the reference to the media object.\n-  const media = field.input.value;\n+  const onConfirmMedia = useCallback(() => {\n+    // We know that the pastedMedia is provided because the onConfirmMedia is\n+    // only rendered when the pastedMedia is available.\n+    field.input.onChange(pastedMedia!);\n+    setPastedMedia(null);\n+  }, [field.input, pastedMedia, setPastedMedia]);\n+\n+  useEffect(() => {\n+    if (!field.meta.dirty || !field.meta.valid || !widget) {\n+      return;\n+    }\n+\n+    setWidget(null);\n+  }, [field.meta.valid, field.meta.dirty, setWidget, widget]);\n+\n+  // This effect will update the selected value if we swap widgets.\n+  useEffect(() => {\n+    if (media && widget && media.type !== widget) {\n+      onSelect(undefined);\n+    }\n+\n+    if (pastedMedia && widget) {\n+      setPastedMedia(null);\n+    }\n+  }, [media, onSelect, pastedMedia, setPastedMedia, widget]);\n \n   return (\n     <>\n-      {props.showGIFSelector && <GifSelector onGifSelect={onGIFSelect} />}\n-      {props.showExternalImageInput && (\n+      {/* Show the input widget that's selected. */}\n+      {widget === \"giphy\" ? (\n+        <GifSelector onGifSelect={onGIFSelect} />\n+      ) : widget === \"external\" ? (\n         <ExternalImageInput onImageInsert={onImageInsert} />\n-      )}\n-      {props.media && (\n+      ) : pastedMedia ? (\n         <MediaConfirmPrompt\n-          media={props.media}\n+          media={pastedMedia}\n           onConfirm={onConfirmMedia}\n-          onRemove={onRemoveMedia}\n+          onRemove={onRemove}\n         />\n-      )}\n-      {media &&\n-        media.url &&\n-        (isMediaLink(media) ? (\n-          <MediaPreview\n-            config={props.config}\n-            media={media}\n-            siteID={props.siteID}\n-            onRemove={onRemoveMedia}\n-          />\n+      ) : null}\n+\n+      {/* If there's no widget, and we have a valid url, display preview */}\n+      {!widget && media?.url && field.meta.valid ? (\n+        isMediaLink(media) ? (\n+          <MediaPreview media={media} siteID={siteID} onRemove={onRemove} />\n         ) : (\n-          !props.showGIFSelector && (\n-            <GifPreview url={media.url} onRemove={onGIFRemove} title=\"\" />\n-          )\n-        ))}\n+          <GifPreview url={media.url} onRemove={onRemove} />\n+        )\n+      ) : null}\n+\n+      {/* Show any errors associated with this field. */}\n       {field.meta.error && (\n         <CallOut\n           color=\"error\""
    },
    {
      "sha": "b534b98c37d47603c6d486cef1b62a6aa280aa36",
      "filename": "src/core/client/stream/test/comments/stream/__snapshots__/editComment.spec.tsx.snap",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/test/comments/stream/__snapshots__/editComment.spec.tsx.snap",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/test/comments/stream/__snapshots__/editComment.spec.tsx.snap",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/__snapshots__/editComment.spec.tsx.snap?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -427,7 +427,6 @@ exports[`edit a comment and handle server error: edit form 1`] = `\n                   </div>\n                 </div>\n               </div>\n-              \n             </div>\n           </div>\n           <div\n@@ -623,7 +622,6 @@ exports[`edit a comment: edit form 1`] = `\n                   </div>\n                 </div>\n               </div>\n-              \n             </div>\n           </div>\n           <div\n@@ -819,7 +817,6 @@ exports[`edit a comment: optimistic response 1`] = `\n                   </div>\n                 </div>\n               </div>\n-              \n             </div>\n           </div>\n           <div\n@@ -1903,7 +1900,6 @@ exports[`shows expiry message: edit time expired 1`] = `\n                   </div>\n                 </div>\n               </div>\n-              \n             </div>\n           </div>\n           <div"
    },
    {
      "sha": "8051427e6d7b28bd4c094a41a261235e4b595982",
      "filename": "src/core/client/stream/test/comments/stream/__snapshots__/postLocalReply.spec.tsx.snap",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/test/comments/stream/__snapshots__/postLocalReply.spec.tsx.snap",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/test/comments/stream/__snapshots__/postLocalReply.spec.tsx.snap",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/__snapshots__/postLocalReply.spec.tsx.snap?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -435,7 +435,6 @@ exports[`post a reply: open reply form 1`] = `\n                     </div>\n                   </div>\n                 </div>\n-                \n               </div>\n             </div>\n             <div"
    },
    {
      "sha": "688da3a184fd7461f15c764e2110b5227b812c94",
      "filename": "src/core/client/stream/test/comments/stream/__snapshots__/postReply.spec.tsx.snap",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/test/comments/stream/__snapshots__/postReply.spec.tsx.snap",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/test/comments/stream/__snapshots__/postReply.spec.tsx.snap",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/__snapshots__/postReply.spec.tsx.snap?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -392,7 +392,6 @@ exports[`post a reply: open reply form 1`] = `\n                     </div>\n                   </div>\n                 </div>\n-                \n               </div>\n             </div>\n             <div"
    },
    {
      "sha": "b28444b7f19ce859687b06e7817457a3e375e33a",
      "filename": "src/core/client/stream/test/comments/stream/__snapshots__/renderMessageBox.spec.tsx.snap",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/test/comments/stream/__snapshots__/renderMessageBox.spec.tsx.snap",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/client/stream/test/comments/stream/__snapshots__/renderMessageBox.spec.tsx.snap",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/__snapshots__/renderMessageBox.spec.tsx.snap?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -437,7 +437,6 @@ exports[`renders message box when logged in 1`] = `\n                     </div>\n                   </div>\n                 </div>\n-                \n               </div>\n             </div>\n             <div"
    },
    {
      "sha": "dec2ee70ef6922ed12cae37362efa89f9bc47984",
      "filename": "src/core/common/errors.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/common/errors.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/common/errors.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/common/errors.ts?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -340,4 +340,6 @@ export enum ERROR_CODES {\n   INSTALLATION_FORBIDDEN = \"INSTALLATION_FORBIDDEN\",\n \n   DUPLICATE_SITE_ORIGIN = \"DUPLICATE_SITE_ORIGIN\",\n+\n+  VALIDATION = \"VALIDATION\",\n }"
    },
    {
      "sha": "07617445540a121f3f616de2aaeeee73b6c60e1e",
      "filename": "src/core/common/helpers/findMediaLinks.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/common/helpers/findMediaLinks.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/common/helpers/findMediaLinks.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/common/helpers/findMediaLinks.ts?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -27,7 +27,7 @@ function formatLink(type: MediaType, url: string): MediaLink {\n   };\n }\n \n-const patterns: Array<{ type: MediaType; pattern: RegExp }> = [\n+const patterns: ReadonlyArray<{ type: MediaType; pattern: RegExp }> = [\n   {\n     type: \"youtube\",\n     pattern: /(https?:\\/\\/)?(www\\.)?(youtube\\.com\\/watch\\?v=[-_a-zA-z0-9]{1,12}|youtu\\.be\\/[-_a-zA-z0-9]{1,12})/g,"
    },
    {
      "sha": "196d928fad16df8cf6c529dac16ea91059b0088f",
      "filename": "src/core/server/app/handlers/api/externalMedia.ts",
      "status": "modified",
      "additions": 16,
      "deletions": 2,
      "changes": 18,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/server/app/handlers/api/externalMedia.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/server/app/handlers/api/externalMedia.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/handlers/api/externalMedia.ts?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -1,8 +1,10 @@\n import Joi from \"@hapi/joi\";\n \n import validateImagePathname from \"coral-common/helpers/validateImagePathname\";\n+import { AppOptions } from \"coral-server/app\";\n import { validate } from \"coral-server/app/request/body\";\n import { supportsMediaType } from \"coral-server/models/tenant\";\n+import { translate } from \"coral-server/services/i18n\";\n import { RequestHandler, TenantCoralRequest } from \"coral-server/types/express\";\n \n const ExternalMediaQuerySchema = Joi.object().keys({\n@@ -13,7 +15,11 @@ interface ExternalMediaQuery {\n   url: string;\n }\n \n-export const externalMediaHandler = (): RequestHandler<TenantCoralRequest> => {\n+type Options = Pick<AppOptions, \"i18n\">;\n+\n+export const externalMediaHandler = ({\n+  i18n,\n+}: Options): RequestHandler<TenantCoralRequest> => {\n   // TODO: add some kind of rate limiting or spam protection\n   return async (req, res, next) => {\n     const { tenant } = req.coral;\n@@ -40,7 +46,15 @@ export const externalMediaHandler = (): RequestHandler<TenantCoralRequest> => {\n \n       res.render(\"image\", { url });\n     } catch (err) {\n-      next(err);\n+      // There was no response! Return a translated error message.\n+      const bundle = i18n.getBundle(tenant.locale);\n+      const message = translate(\n+        bundle,\n+        \"Requested media could not be found\",\n+        \"common-embedNotFound\"\n+      );\n+\n+      return res.status(400).render(\"oembed\", { message });\n     }\n   };\n };"
    },
    {
      "sha": "09bddd8be2d84d746981e09788da6742a7e2624f",
      "filename": "src/core/server/app/handlers/api/oembed.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/server/app/handlers/api/oembed.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/server/app/handlers/api/oembed.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/handlers/api/oembed.ts?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -19,11 +19,11 @@ interface OEmbedQuery {\n   maxWidth?: number;\n }\n \n-export type OembedHandler = Pick<AppOptions, \"i18n\">;\n+type Options = Pick<AppOptions, \"i18n\">;\n \n export const oembedHandler = ({\n   i18n,\n-}: OembedHandler): RequestHandler<TenantCoralRequest> => {\n+}: Options): RequestHandler<TenantCoralRequest> => {\n   // TODO: add some kind of rate limiting or spam protection\n   return async (req, res, next) => {\n     const { tenant } = req.coral;"
    },
    {
      "sha": "bc37a40c6676f7d0e795fc99d99a3c14e0b11a33",
      "filename": "src/core/server/app/request/__snapshots__/body.spec.ts.snap",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/server/app/request/__snapshots__/body.spec.ts.snap",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/server/app/request/__snapshots__/body.spec.ts.snap",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/request/__snapshots__/body.spec.ts.snap?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -1,3 +1,3 @@\n // Jest Snapshot v1, https://goo.gl/fbAQLP\n \n-exports[`throws an error for missing fields 1`] = `\"\\\\\"d\\\\\" is required\"`;\n+exports[`throws an error for missing fields 1`] = `\"VALIDATION: \\\\\"d\\\\\" is required\"`;"
    },
    {
      "sha": "fd9e37f8f719f9db412feac353952d3c42675133",
      "filename": "src/core/server/app/request/body.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/server/app/request/body.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/server/app/request/body.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/request/body.ts?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -1,5 +1,7 @@\n import Joi from \"@hapi/joi\";\n \n+import { ValidationError } from \"coral-server/errors\";\n+\n /**\n  * validate will strip unknown fields and perform validation against it. It will\n  * throw any error encountered.\n@@ -16,8 +18,7 @@ export const validate = (schema: Joi.Schema, body: any) => {\n   });\n \n   if (err) {\n-    // TODO: wrap error?\n-    throw err;\n+    throw new ValidationError(err);\n   }\n \n   return value;"
    },
    {
      "sha": "e9d70c04b7566569fd3707102b74d37980d61ae6",
      "filename": "src/core/server/app/router/api/index.ts",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/server/app/router/api/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/server/app/router/api/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/router/api/index.ts?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -80,7 +80,11 @@ export function createAPIRouter(app: AppOptions, options: RouterOptions) {\n     createRemoteMediaRouter(app)\n   );\n   router.get(\"/oembed\", cspSiteMiddleware(app), oembedHandler(app));\n-  router.get(\"/external-media\", cspSiteMiddleware(app), externalMediaHandler());\n+  router.get(\n+    \"/external-media\",\n+    cspSiteMiddleware(app),\n+    externalMediaHandler(app)\n+  );\n \n   // General API error handler.\n   router.use(notFoundMiddleware);"
    },
    {
      "sha": "632440e79b9ee2095fb1837479f3947ac32823b3",
      "filename": "src/core/server/errors/index.ts",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/server/errors/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/server/errors/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/errors/index.ts?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -501,6 +501,16 @@ export class WrappedInternalError extends CoralError {\n   }\n }\n \n+export class ValidationError extends CoralError {\n+  constructor(cause: Error) {\n+    super({\n+      code: ERROR_CODES.VALIDATION,\n+      cause,\n+      status: 400,\n+    });\n+  }\n+}\n+\n export class InternalError extends CoralError {\n   constructor(reason: string, context?: Record<string, any>) {\n     super({"
    },
    {
      "sha": "38da3b20150ed4fbe9dc37595bfff4df28656140",
      "filename": "src/core/server/errors/translations.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/server/errors/translations.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/server/errors/translations.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/errors/translations.ts?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -60,4 +60,5 @@ export const ERROR_TRANSLATIONS: Record<ERROR_CODES, string> = {\n   INSTALLATION_FORBIDDEN: \"error-installationForbidden\",\n   SCRAPE_FAILED: \"error-scrapeFailed\",\n   DUPLICATE_SITE_ORIGIN: \"error-duplicateSiteOrigin\",\n+  VALIDATION: \"error-validation\",\n };"
    },
    {
      "sha": "8e3062488674718b21e24e77de7267ce3b9bb6ae",
      "filename": "src/core/server/locales/en-US/errors.ftl",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/server/locales/en-US/errors.ftl",
      "raw_url": "https://github.com/coralproject/talk/raw/1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893/src/core/server/locales/en-US/errors.ftl",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/locales/en-US/errors.ftl?ref=1073276bf8a47a3b4d3f4a5cc1b3a8f5ef842893",
      "patch": "@@ -61,3 +61,4 @@ error-inviteIncludesExistingUser = A user with the email address { $email } alre\n error-repeatPost = Are you sure? This comment is very similar to your previous comment.\n error-installationForbidden = { -product-name } is already installed. To install another Tenant on this domain ({ $domain }) you need to generate an installation token.\n error-duplicateSiteOrigin = Allowed domains may only be associated with a single site.\n+error-validation = A validation error occurred.\n\\ No newline at end of file"
    }
  ]
}
