{
  "sha": "8c7ed30bcddf36a659f3397e860c404f827ba6bf",
  "node_id": "C_kwDOCQOkhNoAKDhjN2VkMzBiY2RkZjM2YTY1OWYzMzk3ZTg2MGM0MDRmODI3YmE2YmY",
  "commit": {
    "author": {
      "name": "qwqcode",
      "email": "qwqcode@gmail.com",
      "date": "2023-02-22T03:51:17Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2023-02-22T03:51:17Z"
    },
    "message": "refactor(comment): seperate comment ui renders from single file (#427)\n\nSigned-off-by: qwqcode <qwqcode@gmail.com>",
    "tree": {
      "sha": "941fcfb73fbcbddcfe0675c73a5c044d397b8969",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/trees/941fcfb73fbcbddcfe0675c73a5c044d397b8969"
    },
    "url": "https://api.github.com/repos/ArtalkJS/Artalk/git/commits/8c7ed30bcddf36a659f3397e860c404f827ba6bf",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj9ZE1CRBK7hj4Ov3rIwAAIiMIAJjcxc+JE+3H11GoDAigXFdJ\naP+UlWTWfUcVb/pAPMOH2PCZ676FQ8BxCbkMpSSQx7hQCGNzF/kHO/ch3TX3wHfx\nhxSwZeJvW3q69x+BsgEBbddfeDYBpLbZxp3MZqfryaYXsAPuwiXIhb8k1548ba3s\nbwfsaqtQRheC2PeTUwXCSKsTy3B6KlEkvkQSAwLhbKOOdp3u3s+LY6DdNj8MxfhK\n4y7K3PnHpba0eIeEXxguy51kLPaOtKHynSDL6wYpwDRqhv3b4bqgQ//r/b4PtTpk\nnsTSiCD5MQ0WJ/0Kzl9THabLFE0H122ROsQhL43XsH1Nf4OdRN2fJcrVksAoAPU=\n=5fMK\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 941fcfb73fbcbddcfe0675c73a5c044d397b8969\nparent 4872ea1bb5d4f041a28c7039d0348310147ad8bf\nauthor qwqcode <qwqcode@gmail.com> 1677037877 +0800\ncommitter GitHub <noreply@github.com> 1677037877 +0800\n\nrefactor(comment): seperate comment ui renders from single file (#427)\n\nSigned-off-by: qwqcode <qwqcode@gmail.com>"
    }
  },
  "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/8c7ed30bcddf36a659f3397e860c404f827ba6bf",
  "html_url": "https://github.com/ArtalkJS/Artalk/commit/8c7ed30bcddf36a659f3397e860c404f827ba6bf",
  "comments_url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/8c7ed30bcddf36a659f3397e860c404f827ba6bf/comments",
  "author": {
    "login": "qwqcode",
    "id": 22412567,
    "node_id": "MDQ6VXNlcjIyNDEyNTY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/22412567?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/qwqcode",
    "html_url": "https://github.com/qwqcode",
    "followers_url": "https://api.github.com/users/qwqcode/followers",
    "following_url": "https://api.github.com/users/qwqcode/following{/other_user}",
    "gists_url": "https://api.github.com/users/qwqcode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/qwqcode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qwqcode/subscriptions",
    "organizations_url": "https://api.github.com/users/qwqcode/orgs",
    "repos_url": "https://api.github.com/users/qwqcode/repos",
    "events_url": "https://api.github.com/users/qwqcode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/qwqcode/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4872ea1bb5d4f041a28c7039d0348310147ad8bf",
      "url": "https://api.github.com/repos/ArtalkJS/Artalk/commits/4872ea1bb5d4f041a28c7039d0348310147ad8bf",
      "html_url": "https://github.com/ArtalkJS/Artalk/commit/4872ea1bb5d4f041a28c7039d0348310147ad8bf"
    }
  ],
  "stats": {
    "total": 657,
    "additions": 358,
    "deletions": 299
  },
  "files": [
    {
      "sha": "692185f0bb39787992ad017f77663341b674cf7e",
      "filename": "ui/packages/artalk/src/comment/comment.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Fcomment.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Fcomment.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Fcomment.ts?ref=8c7ed30bcddf36a659f3397e860c404f827ba6bf",
      "patch": "@@ -4,7 +4,7 @@ import Component from '../lib/component'\n import * as Utils from '../lib/utils'\n import marked from '../lib/marked'\n import UADetect from '../lib/detect'\n-import CommentRender from './render'\n+import CommentUI from './render'\n import CommentActions from './actions'\n \n export interface CommentConf {\n@@ -19,7 +19,7 @@ export interface CommentConf {\n }\n \n export default class Comment extends Component {\n-  private renderInstance: CommentRender\n+  private renderInstance: CommentUI\n   private actionInstance: CommentActions\n \n   private data: CommentData\n@@ -45,7 +45,7 @@ export default class Comment extends Component {\n     this.nestCurt = 1 // 现在已嵌套 n 层\n \n     this.actionInstance = new CommentActions(this)\n-    this.renderInstance = new CommentRender(this)\n+    this.renderInstance = new CommentUI(this)\n   }\n \n   /** 渲染 UI */"
    },
    {
      "sha": "5e1321b5c5596461f8cf3ffd9477f7a10a17a138",
      "filename": "ui/packages/artalk/src/comment/render-ctx.ts",
      "status": "added",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frender-ctx.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frender-ctx.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frender-ctx.ts?ref=8c7ed30bcddf36a659f3397e860c404f827ba6bf",
      "patch": "@@ -0,0 +1,31 @@\n+import Comment from './comment'\n+import ActionBtn from '../components/action-btn'\n+import * as Utils from '../lib/utils'\n+\n+export default class RenderCtx {\n+  public comment: Comment\n+\n+  public get ctx() { return this.comment.ctx }\n+  public get data() { return this.comment.getData() }\n+  public get conf() { return this.comment.conf }\n+  public get cConf() { return this.comment.getConf() }\n+\n+  public $el!: HTMLElement\n+  public $main!: HTMLElement\n+  public $header!: HTMLElement\n+  public $headerNick!: HTMLElement\n+  public $headerBadgeWrap!: HTMLElement\n+  public $body!: HTMLElement\n+  public $content!: HTMLElement\n+  public $childrenWrap!: HTMLElement|null\n+  public $actions!: HTMLElement\n+  public voteBtnUp?: ActionBtn\n+  public voteBtnDown?: ActionBtn\n+\n+  public $replyTo?: HTMLElement // 回复评论内容 (平铺下显示)\n+  public $replyAt?: HTMLElement // 回复 AT（层级嵌套下显示）\n+\n+  public constructor(comment: Comment) {\n+    this.comment = comment\n+  }\n+}"
    },
    {
      "sha": "3bee89cfa3ad8269f7b2dbe22e7b36d100b8b7bf",
      "filename": "ui/packages/artalk/src/comment/render.ts",
      "status": "modified",
      "additions": 8,
      "deletions": 296,
      "changes": 304,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frender.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frender.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frender.ts?ref=8c7ed30bcddf36a659f3397e860c404f827ba6bf",
      "patch": "@@ -1,37 +1,18 @@\n import * as Utils from '../lib/utils'\n import * as Ui from '../lib/ui'\n-import marked from '../lib/marked'\n-import ActionBtn from '../components/action-btn'\n+\n import CommentHTML from './comment.html?raw'\n import Comment from './comment'\n+import RenderCtx from './render-ctx'\n+import loadRenders from './renders'\n \n-export default class CommentRender {\n-  private comment: Comment\n-\n-  private get ctx() { return this.comment.ctx }\n-  private get data() { return this.comment.getData() }\n-  private get cConf() { return this.comment.getConf() }\n-\n-  public $el!: HTMLElement\n-  public $main!: HTMLElement\n-  public $header!: HTMLElement\n-  public $headerNick!: HTMLElement\n-  public $headerBadgeWrap!: HTMLElement\n-  public $body!: HTMLElement\n-  public $content!: HTMLElement\n-  private $childrenWrap!: HTMLElement|null\n-  public $actions!: HTMLElement\n-  public voteBtnUp?: ActionBtn\n-  public voteBtnDown?: ActionBtn\n-\n-  public $replyTo?: HTMLElement // 回复评论内容 (平铺下显示)\n-  public $replyAt?: HTMLElement // 回复 AT（层级嵌套下显示）\n-\n+export default class CommentRender extends RenderCtx {\n   public constructor(comment: Comment) {\n-    this.comment = comment\n+    super(comment)\n   }\n \n   public render() {\n+    // init ui elements\n     this.$el = Utils.createElement(CommentHTML)\n \n     this.$main = this.$el.querySelector('.atk-main')!\n@@ -42,283 +23,14 @@ export default class CommentRender {\n \n     this.$el.setAttribute('data-comment-id', `${this.data.id}`)\n \n-    this.renderAvatar()\n-    this.renderHeader()\n-    this.renderContent()\n-    this.renderReplyAt()\n-    this.renderReplyTo()\n-    this.renderPending()\n-    this.renderActions()\n+    // call all renders\n+    loadRenders(this)\n \n     this.recoveryChildrenWrap()\n \n     return this.$el\n   }\n \n-  /** 初始化 - 评论头像 */\n-  private renderAvatar() {\n-    const $avatar = this.$el.querySelector<HTMLElement>('.atk-avatar')!\n-    const $avatarImg = Utils.createElement<HTMLImageElement>('<img />')\n-    const avatarURLBuilder = this.ctx.conf.avatarURLBuilder\n-    $avatarImg.src = avatarURLBuilder ? avatarURLBuilder(this.data) : this.comment.getGravatarURL()\n-    if (this.data.link) {\n-      const $avatarA = Utils.createElement<HTMLLinkElement>('<a target=\"_blank\" rel=\"noreferrer noopener nofollow\"></a>')\n-      $avatarA.href = Utils.isValidURL(this.data.link) ? this.data.link : `https://${this.data.link}`\n-      $avatarA.append($avatarImg)\n-      $avatar.append($avatarA)\n-    } else {\n-      $avatar.append($avatarImg)\n-    }\n-  }\n-\n-  /** 初始化 - 评论信息 */\n-  private renderHeader() {\n-    this.renderHeader_Nick()\n-    this.renderHeader_VerifyBadge()\n-    this.renderHeader_Date()\n-    this.renderHeader_UABadge()\n-  }\n-\n-  private renderHeader_Nick() {\n-    this.$headerNick = this.$el.querySelector<HTMLElement>('.atk-nick')!\n-\n-    if (this.data.link) {\n-      const $nickA = Utils.createElement<HTMLLinkElement>('<a target=\"_blank\" rel=\"noreferrer noopener nofollow\"></a>')\n-      $nickA.innerText = this.data.nick\n-      $nickA.href = Utils.isValidURL(this.data.link) ? this.data.link : `https://${this.data.link}`\n-      this.$headerNick.append($nickA)\n-    } else {\n-      this.$headerNick.innerText = this.data.nick\n-    }\n-  }\n-\n-  private renderHeader_VerifyBadge() {\n-    this.$headerBadgeWrap = this.$el.querySelector<HTMLElement>('.atk-badge-wrap')!\n-    this.$headerBadgeWrap.innerHTML = ''\n-\n-    const badgeText = this.data.badge_name\n-    const badgeColor = this.data.badge_color\n-    if (badgeText) {\n-      const $badge = Utils.createElement(`<span class=\"atk-badge\"></span>`)\n-      $badge.innerText = badgeText.replace('管理员', this.ctx.$t('admin')) // i18n patch\n-      $badge.style.backgroundColor = badgeColor || ''\n-      this.$headerBadgeWrap.append($badge)\n-    }\n-\n-    if (this.data.is_pinned) {\n-      const $pinnedBadge = Utils.createElement(`<span class=\"atk-pinned-badge\">${this.ctx.$t('pin')}</span>`) // 置顶徽章\n-      this.$headerBadgeWrap.append($pinnedBadge)\n-    }\n-  }\n-\n-  private renderHeader_Date() {\n-    const $date = this.$el.querySelector<HTMLElement>('.atk-date')!\n-    $date.innerText = this.comment.getDateFormatted()\n-    $date.setAttribute('data-atk-comment-date', String(+new Date(this.data.date)))\n-  }\n-\n-  private renderHeader_UABadge() {\n-    if (this.ctx.conf.uaBadge) {\n-      let $uaWrap = this.$header.querySelector('atk-ua-wrap')\n-      if (!$uaWrap) {\n-        $uaWrap = Utils.createElement(`<span class=\"atk-ua-wrap\"></span>`)\n-        this.$header.append($uaWrap)\n-      }\n-\n-      $uaWrap.innerHTML = ''\n-      const $uaBrowser = Utils.createElement(`<span class=\"atk-ua ua-browser\"></span>`)\n-      const $usOS = Utils.createElement(`<span class=\"atk-ua ua-os\"></span>`)\n-      const uaInfo = this.comment.getUserUA()\n-      $uaBrowser.innerText = uaInfo.browser\n-      $usOS.innerText = uaInfo.os\n-      $uaWrap.append($uaBrowser)\n-      $uaWrap.append($usOS)\n-    }\n-  }\n-\n-  /** 初始化 - 评论内容 */\n-  private renderContent() {\n-    if (!this.data.is_collapsed) {\n-      this.$content.innerHTML = this.comment.getContentMarked()\n-      this.$content.classList.remove('atk-hide', 'atk-collapsed')\n-      return\n-    }\n-\n-    // 内容 & 折叠\n-    this.$content.classList.add('atk-hide', 'atk-type-collapsed')\n-    const collapsedInfoEl = Utils.createElement(`\n-      <div class=\"atk-collapsed\">\n-        <span class=\"atk-text\">${this.ctx.$t('collapsedMsg')}</span>\n-        <span class=\"atk-show-btn\">${this.ctx.$t('expand')}</span>\n-      </div>`)\n-    this.$body.insertAdjacentElement('beforeend', collapsedInfoEl)\n-\n-    const contentShowBtn = collapsedInfoEl.querySelector('.atk-show-btn')!\n-    contentShowBtn.addEventListener('click', (e) => {\n-      e.stopPropagation() // 防止穿透\n-\n-      if (this.$content.classList.contains('atk-hide')) {\n-        this.$content.innerHTML = this.comment.getContentMarked()\n-        this.$content.classList.remove('atk-hide')\n-        Ui.playFadeInAnim(this.$content)\n-        contentShowBtn.innerHTML = this.ctx.$t('collapse')\n-      } else {\n-        this.$content.innerHTML = ''\n-        this.$content.classList.add('atk-hide')\n-        contentShowBtn.innerHTML = this.ctx.$t('expand')\n-      }\n-    })\n-  }\n-\n-  /** 初始化 - 层级嵌套模式显示 At */\n-  private renderReplyAt() {\n-    if (this.cConf.isFlatMode || this.data.rid === 0) return // not 平铺模式 或 根评论\n-    if (!this.cConf.replyTo) return\n-\n-    this.$replyAt = Utils.createElement(`<span class=\"atk-item atk-reply-at\"><span class=\"atk-arrow\"></span><span class=\"atk-nick\"></span></span>`)\n-    this.$replyAt.querySelector<HTMLElement>('.atk-nick')!.innerText = `${this.cConf.replyTo.nick}`\n-    this.$replyAt.onclick = () => { this.comment.getActions().goToReplyComment() }\n-\n-    this.$headerBadgeWrap.insertAdjacentElement('afterend', this.$replyAt)\n-  }\n-\n-  /** 初始化 - 回复的对象 */\n-  private renderReplyTo() {\n-    if (!this.cConf.isFlatMode) return // 仅平铺模式显示\n-    if (!this.cConf.replyTo) return\n-\n-    this.$replyTo = Utils.createElement(`\n-      <div class=\"atk-reply-to\">\n-        <div class=\"atk-meta\">${this.ctx.$t('reply')} <span class=\"atk-nick\"></span>:</div>\n-        <div class=\"atk-content\"></div>\n-      </div>`)\n-    const $nick = this.$replyTo.querySelector<HTMLElement>('.atk-nick')!\n-    $nick.innerText = `@${this.cConf.replyTo.nick}`\n-    $nick.onclick = () => { this.comment.getActions().goToReplyComment() }\n-    let replyContent = marked(this.ctx, this.cConf.replyTo.content)\n-    if (this.cConf.replyTo.is_collapsed) replyContent = `[${this.ctx.$t('collapsed')}]`\n-    this.$replyTo.querySelector<HTMLElement>('.atk-content')!.innerHTML = replyContent\n-    this.$body.prepend(this.$replyTo)\n-  }\n-\n-  /** 初始化 - 待审核状态 */\n-  private renderPending() {\n-    if (!this.data.is_pending) return\n-\n-    const pendingEl = Utils.createElement(`<div class=\"atk-pending\">${this.ctx.$t('pendingMsg')}</div>`)\n-    this.$body.prepend(pendingEl)\n-  }\n-\n-  /** 初始化 - 评论操作按钮 */\n-  private renderActions() {\n-    this.renderActions_Vote()\n-    this.renderActions_Reply()\n-\n-    // 管理员操作\n-    this.renderActions_Collapse()\n-    this.renderActions_Moderator()\n-    this.renderActions_Pin()\n-    this.renderActions_Edit()\n-    this.renderActions_Del()\n-  }\n-\n-  // 操作按钮 - 投票\n-  private renderActions_Vote() {\n-    if (!this.ctx.conf.vote) return // 关闭投票功能\n-\n-    // 赞同按钮\n-    this.voteBtnUp = new ActionBtn(this.ctx, () => `${this.ctx.$t('voteUp')} (${this.data.vote_up || 0})`).appendTo(this.$actions)\n-    this.voteBtnUp.setClick(() => {\n-      this.comment.getActions().vote('up')\n-    })\n-\n-    // 反对按钮\n-    if (this.ctx.conf.voteDown) {\n-      this.voteBtnDown = new ActionBtn(this.ctx, () => `${this.ctx.$t('voteDown')} (${this.data.vote_down || 0})`).appendTo(this.$actions)\n-      this.voteBtnDown.setClick(() => {\n-        this.comment.getActions().vote('down')\n-      })\n-    }\n-  }\n-\n-  // 操作按钮 - 回复\n-  private renderActions_Reply() {\n-    if (!this.data.is_allow_reply) return // 不允许回复\n-\n-    const replyBtn = Utils.createElement(`<span>${this.ctx.$t('reply')}</span>`)\n-    this.$actions.append(replyBtn)\n-    replyBtn.addEventListener('click', (e) => {\n-      e.stopPropagation() // 防止穿透\n-      if (!this.cConf.onReplyBtnClick) {\n-        this.ctx.replyComment(this.data, this.$el)\n-      } else {\n-        this.cConf.onReplyBtnClick()\n-      }\n-    })\n-  }\n-\n-  // 操作按钮 - 折叠\n-  private renderActions_Collapse() {\n-    const collapseBtn = new ActionBtn(this.ctx, {\n-      text: () => (this.data.is_collapsed ? this.ctx.$t('expand') : this.ctx.$t('collapse')),\n-      adminOnly: true\n-    })\n-    collapseBtn.appendTo(this.$actions)\n-    collapseBtn.setClick(() => {\n-      this.comment.getActions().adminEdit('collapsed', collapseBtn)\n-    })\n-  }\n-\n-  // 操作按钮 - 审核\n-  private renderActions_Moderator() {\n-    const pendingBtn = new ActionBtn(this.ctx, {\n-      text: () => (this.data.is_pending ? this.ctx.$t('pending') : this.ctx.$t('approved')),\n-      adminOnly: true\n-    })\n-    pendingBtn.appendTo(this.$actions)\n-    pendingBtn.setClick(() => {\n-      this.comment.getActions().adminEdit('pending', pendingBtn)\n-    })\n-  }\n-\n-  // 操作按钮 - 置顶\n-  private renderActions_Pin() {\n-    const pinnedBtn = new ActionBtn(this.ctx, {\n-      text: () => (this.data.is_pinned ? this.ctx.$t('unpin') : this.ctx.$t('pin')),\n-      adminOnly: true\n-    })\n-    pinnedBtn.appendTo(this.$actions)\n-    pinnedBtn.setClick(() => {\n-      this.comment.getActions().adminEdit('pinned', pinnedBtn)\n-    })\n-  }\n-\n-  // 操作按钮 - 编辑\n-  private renderActions_Edit() {\n-    const editBtn = new ActionBtn(this.ctx, {\n-      text: this.ctx.$t('edit'),\n-      adminOnly: true\n-    })\n-    editBtn.appendTo(this.$actions)\n-    editBtn.setClick(() => {\n-      this.ctx.editComment(this.data, this.$el)\n-    })\n-  }\n-\n-  // 操作按钮 - 删除\n-  private renderActions_Del() {\n-    const delBtn = new ActionBtn(this.ctx, {\n-      text: this.ctx.$t('delete'),\n-      confirm: true,\n-      confirmText: this.ctx.$t('deleteConfirm'),\n-      adminOnly: true,\n-    })\n-    delBtn.appendTo(this.$actions)\n-    delBtn.setClick(() => {\n-      this.comment.getActions().adminDelete(delBtn)\n-    })\n-  }\n-\n   /** 内容限高检测 */\n   public checkHeightLimit() {\n     this.checkHeightLimitArea('content') // 评论内容限高"
    },
    {
      "sha": "209867830da9a74cb1d35c6697f37ae612df2dfb",
      "filename": "ui/packages/artalk/src/comment/renders/actions.ts",
      "status": "added",
      "additions": 114,
      "deletions": 0,
      "changes": 114,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Factions.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Factions.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Factions.ts?ref=8c7ed30bcddf36a659f3397e860c404f827ba6bf",
      "patch": "@@ -0,0 +1,114 @@\n+import * as Utils from '../../lib/utils'\n+import ActionBtn from '../../components/action-btn'\n+import RenderCtx from '../render-ctx'\n+\n+/**\n+ * 评论操作按钮界面\n+ */\n+export default function renderActions(ctx: RenderCtx) {\n+  Object.entries({\n+    renderVote, renderReply,\n+    // 管理员操作\n+    renderCollapse, renderModerator, renderPin, renderEdit, renderDel\n+  }).forEach(([name, render]) => {\n+    render(ctx)\n+  })\n+}\n+\n+\n+// 操作按钮 - 投票\n+function renderVote(ctx: RenderCtx) {\n+  if (!ctx.ctx.conf.vote) return // 关闭投票功能\n+\n+  // 赞同按钮\n+  ctx.voteBtnUp = new ActionBtn(ctx.ctx, () => `${ctx.ctx.$t('voteUp')} (${ctx.data.vote_up || 0})`).appendTo(ctx.$actions)\n+  ctx.voteBtnUp.setClick(() => {\n+    ctx.comment.getActions().vote('up')\n+  })\n+\n+  // 反对按钮\n+  if (ctx.ctx.conf.voteDown) {\n+    ctx.voteBtnDown = new ActionBtn(ctx.ctx, () => `${ctx.ctx.$t('voteDown')} (${ctx.data.vote_down || 0})`).appendTo(ctx.$actions)\n+    ctx.voteBtnDown.setClick(() => {\n+      ctx.comment.getActions().vote('down')\n+    })\n+  }\n+}\n+\n+// 操作按钮 - 回复\n+function renderReply(ctx: RenderCtx) {\n+  if (!ctx.data.is_allow_reply) return // 不允许回复\n+\n+  const replyBtn = Utils.createElement(`<span>${ctx.ctx.$t('reply')}</span>`)\n+  ctx.$actions.append(replyBtn)\n+  replyBtn.addEventListener('click', (e) => {\n+    e.stopPropagation() // 防止穿透\n+    if (!ctx.cConf.onReplyBtnClick) {\n+      ctx.ctx.replyComment(ctx.data, ctx.$el)\n+    } else {\n+      ctx.cConf.onReplyBtnClick()\n+    }\n+  })\n+}\n+\n+// 操作按钮 - 折叠\n+function renderCollapse(ctx: RenderCtx) {\n+  const collapseBtn = new ActionBtn(ctx.ctx, {\n+    text: () => (ctx.data.is_collapsed ? ctx.ctx.$t('expand') : ctx.ctx.$t('collapse')),\n+    adminOnly: true\n+  })\n+  collapseBtn.appendTo(ctx.$actions)\n+  collapseBtn.setClick(() => {\n+    ctx.comment.getActions().adminEdit('collapsed', collapseBtn)\n+  })\n+}\n+\n+// 操作按钮 - 审核\n+function renderModerator(ctx: RenderCtx) {\n+  const pendingBtn = new ActionBtn(ctx.ctx, {\n+    text: () => (ctx.data.is_pending ? ctx.ctx.$t('pending') : ctx.ctx.$t('approved')),\n+    adminOnly: true\n+  })\n+  pendingBtn.appendTo(ctx.$actions)\n+  pendingBtn.setClick(() => {\n+    ctx.comment.getActions().adminEdit('pending', pendingBtn)\n+  })\n+}\n+\n+// 操作按钮 - 置顶\n+function renderPin(ctx: RenderCtx) {\n+  const pinnedBtn = new ActionBtn(ctx.ctx, {\n+    text: () => (ctx.data.is_pinned ? ctx.ctx.$t('unpin') : ctx.ctx.$t('pin')),\n+    adminOnly: true\n+  })\n+  pinnedBtn.appendTo(ctx.$actions)\n+  pinnedBtn.setClick(() => {\n+    ctx.comment.getActions().adminEdit('pinned', pinnedBtn)\n+  })\n+}\n+\n+// 操作按钮 - 编辑\n+function renderEdit(ctx: RenderCtx) {\n+  const editBtn = new ActionBtn(ctx.ctx, {\n+    text: ctx.ctx.$t('edit'),\n+    adminOnly: true\n+  })\n+  editBtn.appendTo(ctx.$actions)\n+  editBtn.setClick(() => {\n+    ctx.ctx.editComment(ctx.data, ctx.$el)\n+  })\n+}\n+\n+// 操作按钮 - 删除\n+function renderDel(ctx: RenderCtx) {\n+  const delBtn = new ActionBtn(ctx.ctx, {\n+    text: ctx.ctx.$t('delete'),\n+    confirm: true,\n+    confirmText: ctx.ctx.$t('deleteConfirm'),\n+    adminOnly: true,\n+  })\n+  delBtn.appendTo(ctx.$actions)\n+  delBtn.setClick(() => {\n+    ctx.comment.getActions().adminDelete(delBtn)\n+  })\n+}"
    },
    {
      "sha": "065dff3b524bdd3a83d5ec47eee5454c5fa28415",
      "filename": "ui/packages/artalk/src/comment/renders/avatar.ts",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Favatar.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Favatar.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Favatar.ts?ref=8c7ed30bcddf36a659f3397e860c404f827ba6bf",
      "patch": "@@ -0,0 +1,22 @@\n+import * as Utils from '../../lib/utils'\n+import RenderCtx from '../render-ctx'\n+\n+/**\n+ * 评论头像界面\n+ */\n+export default function renderAvatar(ctx: RenderCtx) {\n+  const $avatar = ctx.$el.querySelector<HTMLElement>('.atk-avatar')!\n+  const $avatarImg = Utils.createElement<HTMLImageElement>('<img />')\n+\n+  const avatarURLBuilder = ctx.conf.avatarURLBuilder\n+  $avatarImg.src = avatarURLBuilder ? avatarURLBuilder(ctx.data) : ctx.comment.getGravatarURL()\n+\n+  if (ctx.data.link) {\n+    const $avatarA = Utils.createElement<HTMLLinkElement>('<a target=\"_blank\" rel=\"noreferrer noopener nofollow\"></a>')\n+    $avatarA.href = Utils.isValidURL(ctx.data.link) ? ctx.data.link : `https://${ctx.data.link}`\n+    $avatarA.append($avatarImg)\n+    $avatar.append($avatarA)\n+  } else {\n+    $avatar.append($avatarImg)\n+  }\n+}"
    },
    {
      "sha": "86f7208424ce1da699a04ef62fe480702d1bda49",
      "filename": "ui/packages/artalk/src/comment/renders/content.ts",
      "status": "added",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Fcontent.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Fcontent.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Fcontent.ts?ref=8c7ed30bcddf36a659f3397e860c404f827ba6bf",
      "patch": "@@ -0,0 +1,39 @@\n+import * as Utils from '../../lib/utils'\n+import * as Ui from '../../lib/ui'\n+import RenderCtx from '../render-ctx'\n+\n+/**\n+ * 评论内容界面\n+ */\n+export default function renderContent(ctx: RenderCtx) {\n+  if (!ctx.data.is_collapsed) {\n+    ctx.$content.innerHTML = ctx.comment.getContentMarked()\n+    ctx.$content.classList.remove('atk-hide', 'atk-collapsed')\n+    return\n+  }\n+\n+  // 内容 & 折叠\n+  ctx.$content.classList.add('atk-hide', 'atk-type-collapsed')\n+  const collapsedInfoEl = Utils.createElement(`\n+    <div class=\"atk-collapsed\">\n+      <span class=\"atk-text\">${ctx.ctx.$t('collapsedMsg')}</span>\n+      <span class=\"atk-show-btn\">${ctx.ctx.$t('expand')}</span>\n+    </div>`)\n+  ctx.$body.insertAdjacentElement('beforeend', collapsedInfoEl)\n+\n+  const contentShowBtn = collapsedInfoEl.querySelector('.atk-show-btn')!\n+  contentShowBtn.addEventListener('click', (e) => {\n+    e.stopPropagation() // 防止穿透\n+\n+    if (ctx.$content.classList.contains('atk-hide')) {\n+      ctx.$content.innerHTML = ctx.comment.getContentMarked()\n+      ctx.$content.classList.remove('atk-hide')\n+      Ui.playFadeInAnim(ctx.$content)\n+      contentShowBtn.innerHTML = ctx.ctx.$t('collapse')\n+    } else {\n+      ctx.$content.innerHTML = ''\n+      ctx.$content.classList.add('atk-hide')\n+      contentShowBtn.innerHTML = ctx.ctx.$t('expand')\n+    }\n+  })\n+}"
    },
    {
      "sha": "727a136bf3cc24b22c335926cf321cf5a46bcea0",
      "filename": "ui/packages/artalk/src/comment/renders/header.ts",
      "status": "added",
      "additions": 70,
      "deletions": 0,
      "changes": 70,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Fheader.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Fheader.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Fheader.ts?ref=8c7ed30bcddf36a659f3397e860c404f827ba6bf",
      "patch": "@@ -0,0 +1,70 @@\n+import * as Utils from '../../lib/utils'\n+import RenderCtx from '../render-ctx'\n+\n+/**\n+ * 评论头部界面\n+ */\n+export default function renderHeader(ctx: RenderCtx) {\n+  Object.entries({\n+    renderNick, renderVerifyBadge, renderDate, renderUABadge\n+  }).forEach(([name, render]) => {\n+    render(ctx)\n+  })\n+}\n+\n+function renderNick(ctx: RenderCtx) {\n+  ctx.$headerNick = ctx.$el.querySelector<HTMLElement>('.atk-nick')!\n+\n+  if (ctx.data.link) {\n+    const $nickA = Utils.createElement<HTMLLinkElement>('<a target=\"_blank\" rel=\"noreferrer noopener nofollow\"></a>')\n+    $nickA.innerText = ctx.data.nick\n+    $nickA.href = Utils.isValidURL(ctx.data.link) ? ctx.data.link : `https://${ctx.data.link}`\n+    ctx.$headerNick.append($nickA)\n+  } else {\n+    ctx.$headerNick.innerText = ctx.data.nick\n+  }\n+}\n+\n+function renderVerifyBadge(ctx: RenderCtx) {\n+  ctx.$headerBadgeWrap = ctx.$el.querySelector<HTMLElement>('.atk-badge-wrap')!\n+  ctx.$headerBadgeWrap.innerHTML = ''\n+\n+  const badgeText = ctx.data.badge_name\n+  const badgeColor = ctx.data.badge_color\n+  if (badgeText) {\n+    const $badge = Utils.createElement(`<span class=\"atk-badge\"></span>`)\n+    $badge.innerText = badgeText.replace('管理员', ctx.ctx.$t('admin')) // i18n patch\n+    $badge.style.backgroundColor = badgeColor || ''\n+    ctx.$headerBadgeWrap.append($badge)\n+  }\n+\n+  if (ctx.data.is_pinned) {\n+    const $pinnedBadge = Utils.createElement(`<span class=\"atk-pinned-badge\">${ctx.ctx.$t('pin')}</span>`) // 置顶徽章\n+    ctx.$headerBadgeWrap.append($pinnedBadge)\n+  }\n+}\n+\n+function renderDate(ctx: RenderCtx) {\n+  const $date = ctx.$el.querySelector<HTMLElement>('.atk-date')!\n+  $date.innerText = ctx.comment.getDateFormatted()\n+  $date.setAttribute('data-atk-comment-date', String(+new Date(ctx.data.date)))\n+}\n+\n+function renderUABadge(ctx: RenderCtx) {\n+  if (ctx.ctx.conf.uaBadge) {\n+    let $uaWrap = ctx.$header.querySelector('atk-ua-wrap')\n+    if (!$uaWrap) {\n+      $uaWrap = Utils.createElement(`<span class=\"atk-ua-wrap\"></span>`)\n+      ctx.$header.append($uaWrap)\n+    }\n+\n+    $uaWrap.innerHTML = ''\n+    const $uaBrowser = Utils.createElement(`<span class=\"atk-ua ua-browser\"></span>`)\n+    const $usOS = Utils.createElement(`<span class=\"atk-ua ua-os\"></span>`)\n+    const uaInfo = ctx.comment.getUserUA()\n+    $uaBrowser.innerText = uaInfo.browser\n+    $usOS.innerText = uaInfo.os\n+    $uaWrap.append($uaBrowser)\n+    $uaWrap.append($usOS)\n+  }\n+}"
    },
    {
      "sha": "bcd821b5df07c23565ebf33edb898dcba0ca36c2",
      "filename": "ui/packages/artalk/src/comment/renders/index.ts",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Findex.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Findex.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Findex.ts?ref=8c7ed30bcddf36a659f3397e860c404f827ba6bf",
      "patch": "@@ -0,0 +1,19 @@\n+import RenderCtx from '../render-ctx'\n+import Avatar from './avatar'\n+import Header from './header'\n+import Content from './content'\n+import ReplyAt from './reply-at'\n+import ReplyTo from './reply-to'\n+import Pending from './pending'\n+import Actions from './actions'\n+\n+const Renders = {\n+  Avatar, Header, Content, ReplyAt,\n+  ReplyTo, Pending, Actions\n+}\n+\n+export default function loadRenders(ctx: RenderCtx) {\n+  Object.entries(Renders).forEach(([ name, render ]) => {\n+    render(ctx)\n+  })\n+}"
    },
    {
      "sha": "f357e8f2ce12eb056e4d3f680f3576ef8e37d577",
      "filename": "ui/packages/artalk/src/comment/renders/pending.ts",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Fpending.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Fpending.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Fpending.ts?ref=8c7ed30bcddf36a659f3397e860c404f827ba6bf",
      "patch": "@@ -0,0 +1,12 @@\n+import * as Utils from '../../lib/utils'\n+import RenderCtx from '../render-ctx'\n+\n+/**\n+ * 待审核状态界面\n+ */\n+export default function renderPending(ctx: RenderCtx) {\n+  if (!ctx.data.is_pending) return\n+\n+  const pendingEl = Utils.createElement(`<div class=\"atk-pending\">${ctx.ctx.$t('pendingMsg')}</div>`)\n+  ctx.$body.prepend(pendingEl)\n+}"
    },
    {
      "sha": "42774773b5ad28dba6fcd363513c1d5413ea6435",
      "filename": "ui/packages/artalk/src/comment/renders/reply-at.ts",
      "status": "added",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Freply-at.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Freply-at.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Freply-at.ts?ref=8c7ed30bcddf36a659f3397e860c404f827ba6bf",
      "patch": "@@ -0,0 +1,16 @@\n+import * as Utils from '../../lib/utils'\n+import RenderCtx from '../render-ctx'\n+\n+/**\n+ * 层级嵌套模式显示 AT 界面\n+ */\n+export default function renderReplyAt(ctx: RenderCtx) {\n+  if (ctx.cConf.isFlatMode || ctx.data.rid === 0) return // not 平铺模式 或 根评论\n+  if (!ctx.cConf.replyTo) return\n+\n+  ctx.$replyAt = Utils.createElement(`<span class=\"atk-item atk-reply-at\"><span class=\"atk-arrow\"></span><span class=\"atk-nick\"></span></span>`)\n+  ctx.$replyAt.querySelector<HTMLElement>('.atk-nick')!.innerText = `${ctx.cConf.replyTo.nick}`\n+  ctx.$replyAt.onclick = () => { ctx.comment.getActions().goToReplyComment() }\n+\n+  ctx.$headerBadgeWrap.insertAdjacentElement('afterend', ctx.$replyAt)\n+}"
    },
    {
      "sha": "e670237ae0cda9d3ac3b0c8e4ed49c2a9f4dd70d",
      "filename": "ui/packages/artalk/src/comment/renders/reply-to.ts",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/ArtalkJS/Artalk/blob/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Freply-to.ts",
      "raw_url": "https://github.com/ArtalkJS/Artalk/raw/8c7ed30bcddf36a659f3397e860c404f827ba6bf/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Freply-to.ts",
      "contents_url": "https://api.github.com/repos/ArtalkJS/Artalk/contents/ui%2Fpackages%2Fartalk%2Fsrc%2Fcomment%2Frenders%2Freply-to.ts?ref=8c7ed30bcddf36a659f3397e860c404f827ba6bf",
      "patch": "@@ -0,0 +1,24 @@\n+import * as Utils from '../../lib/utils'\n+import marked from '../../lib/marked'\n+import RenderCtx from '../render-ctx'\n+\n+/**\n+ * 回复的对象界面\n+ */\n+export default function renderReplyTo(ctx: RenderCtx) {\n+  if (!ctx.cConf.isFlatMode) return // 仅平铺模式显示\n+  if (!ctx.cConf.replyTo) return\n+\n+  ctx.$replyTo = Utils.createElement(`\n+    <div class=\"atk-reply-to\">\n+      <div class=\"atk-meta\">${ctx.ctx.$t('reply')} <span class=\"atk-nick\"></span>:</div>\n+      <div class=\"atk-content\"></div>\n+    </div>`)\n+  const $nick = ctx.$replyTo.querySelector<HTMLElement>('.atk-nick')!\n+  $nick.innerText = `@${ctx.cConf.replyTo.nick}`\n+  $nick.onclick = () => { ctx.comment.getActions().goToReplyComment() }\n+  let replyContent = marked(ctx.ctx, ctx.cConf.replyTo.content)\n+  if (ctx.cConf.replyTo.is_collapsed) replyContent = `[${ctx.ctx.$t('collapsed')}]`\n+  ctx.$replyTo.querySelector<HTMLElement>('.atk-content')!.innerHTML = replyContent\n+  ctx.$body.prepend(ctx.$replyTo)\n+}"
    }
  ]
}
