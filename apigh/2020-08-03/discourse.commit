{
  "sha": "2682da81ad252db2845ec66b73808a9a954673aa",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODoyNjgyZGE4MWFkMjUyZGIyODQ1ZWM2NmI3MzgwOGE5YTk1NDY3M2Fh",
  "commit": {
    "author": {
      "name": "Bianca Nenciu",
      "email": "nbianca@users.noreply.github.com",
      "date": "2020-08-03T14:15:41Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-08-03T14:15:41Z"
    },
    "message": "FIX: Get correct selectable avatar from URL (#10339)\n\nThe URL for selectable avatars was 'cooked' which means that the find_by\r\nmethod was not enough.",
    "tree": {
      "sha": "05b2df7eed28bd05a77e5863070fe1e476ff9952",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/05b2df7eed28bd05a77e5863070fe1e476ff9952"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/2682da81ad252db2845ec66b73808a9a954673aa",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfKBwNCRBK7hj4Ov3rIwAAdHIIAD/OlxoEWcK7HENHYQv6uMlt\nSrDgvJ/OYt+V2/TA3kyTLGOXQWf6Wf94f2cQfqWm5UBxadQSteIVBlJxXkZleE+C\nuCjG56oyZTqmKjPOt4PcmDQMHExjshWs/ibooeWi4RxiAgrRB3FAmy9U6u0qYtHu\nI38aOaferVXupZ5yvLUzGFfvGeYLay2eacjxB8tnPeiCOnZ82ruHHQDofsXcEa9+\nTF9BGWWSn+koioUG8vwNbHUEE2obQyBX3L82IUZBY765lgaiYLpV0BXp/tY6+ZIX\nNFjUOJs4WOJ0TrutfFwfNqedv1KDL1G03KEtvWGPA2LxwhhE+bAyS6hnYA0DPnA=\n=NVl3\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 05b2df7eed28bd05a77e5863070fe1e476ff9952\nparent e6349685d3d717f70fb1bef728cfc79da183e58b\nauthor Bianca Nenciu <nbianca@users.noreply.github.com> 1596464141 +0300\ncommitter GitHub <noreply@github.com> 1596464141 +0300\n\nFIX: Get correct selectable avatar from URL (#10339)\n\nThe URL for selectable avatars was 'cooked' which means that the find_by\r\nmethod was not enough."
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/2682da81ad252db2845ec66b73808a9a954673aa",
  "html_url": "https://github.com/discourse/discourse/commit/2682da81ad252db2845ec66b73808a9a954673aa",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/2682da81ad252db2845ec66b73808a9a954673aa/comments",
  "author": {
    "login": "nbianca",
    "id": 23153890,
    "node_id": "MDQ6VXNlcjIzMTUzODkw",
    "avatar_url": "https://avatars3.githubusercontent.com/u/23153890?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nbianca",
    "html_url": "https://github.com/nbianca",
    "followers_url": "https://api.github.com/users/nbianca/followers",
    "following_url": "https://api.github.com/users/nbianca/following{/other_user}",
    "gists_url": "https://api.github.com/users/nbianca/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nbianca/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nbianca/subscriptions",
    "organizations_url": "https://api.github.com/users/nbianca/orgs",
    "repos_url": "https://api.github.com/users/nbianca/repos",
    "events_url": "https://api.github.com/users/nbianca/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nbianca/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e6349685d3d717f70fb1bef728cfc79da183e58b",
      "url": "https://api.github.com/repos/discourse/discourse/commits/e6349685d3d717f70fb1bef728cfc79da183e58b",
      "html_url": "https://github.com/discourse/discourse/commit/e6349685d3d717f70fb1bef728cfc79da183e58b"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 14,
    "deletions": 3
  },
  "files": [
    {
      "sha": "f0ca8780f70655cc0888d97795610d1b19996f5e",
      "filename": "app/controllers/users_controller.rb",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/2682da81ad252db2845ec66b73808a9a954673aa/app/controllers/users_controller.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/2682da81ad252db2845ec66b73808a9a954673aa/app/controllers/users_controller.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/controllers/users_controller.rb?ref=2682da81ad252db2845ec66b73808a9a954673aa",
      "patch": "@@ -1134,11 +1134,11 @@ def select_avatar\n       return render json: failed_json, status: 422\n     end\n \n-    unless SiteSetting.selectable_avatars[url]\n+    unless upload = Upload.get_from_url(url)\n       return render json: failed_json, status: 422\n     end\n \n-    unless upload = Upload.find_by(url: url)\n+    unless SiteSetting.selectable_avatars[upload.url]\n       return render json: failed_json, status: 422\n     end\n "
    },
    {
      "sha": "91f2070770d063c6cb3ed2870f9bbe7c56b248a2",
      "filename": "app/models/user.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/2682da81ad252db2845ec66b73808a9a954673aa/app/models/user.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/2682da81ad252db2845ec66b73808a9a954673aa/app/models/user.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/user.rb?ref=2682da81ad252db2845ec66b73808a9a954673aa",
      "patch": "@@ -1152,7 +1152,7 @@ def set_random_avatar\n     if SiteSetting.selectable_avatars_enabled? && SiteSetting.selectable_avatars.present?\n       urls = SiteSetting.selectable_avatars.split(\"\\n\")\n       if urls.present?\n-        if upload = Upload.find_by(url: urls.sample)\n+        if upload = Upload.get_from_url(urls.sample)\n           update_column(:uploaded_avatar_id, upload.id)\n           UserAvatar.create!(user_id: id, custom_upload_id: upload.id)\n         end"
    },
    {
      "sha": "0e92d3f186aa2b5b7bc8e5a0d858ad285779eb02",
      "filename": "spec/requests/users_controller_spec.rb",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/discourse/discourse/blob/2682da81ad252db2845ec66b73808a9a954673aa/spec/requests/users_controller_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/2682da81ad252db2845ec66b73808a9a954673aa/spec/requests/users_controller_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/requests/users_controller_spec.rb?ref=2682da81ad252db2845ec66b73808a9a954673aa",
      "patch": "@@ -2377,6 +2377,17 @@ def post_user(extra_params = {})\n             expect(user.reload.uploaded_avatar_id).to eq(avatar1.id)\n             expect(user.user_avatar.reload.custom_upload_id).to eq(avatar1.id)\n           end\n+\n+          it 'can succesfully select an avatar using a cooked URL' do\n+            events = DiscourseEvent.track_events do\n+              put \"/u/#{user.username}/preferences/avatar/select.json\", params: { url: UrlHelper.cook_url(avatar1.url) }\n+            end\n+\n+            expect(events.map { |event| event[:event_name] }).to include(:user_updated)\n+            expect(response.status).to eq(200)\n+            expect(user.reload.uploaded_avatar_id).to eq(avatar1.id)\n+            expect(user.user_avatar.reload.custom_upload_id).to eq(avatar1.id)\n+          end\n         end\n       end\n     end"
    }
  ]
}
