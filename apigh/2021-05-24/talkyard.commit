{
  "sha": "48044724503ef231848ee7af19ae66f1b71ca43e",
  "node_id": "MDY6Q29tbWl0MTA1NjMzMjI6NDgwNDQ3MjQ1MDNlZjIzMTg0OGVlN2FmMTlhZTY2ZjFiNzFjYTQzZQ==",
  "commit": {
    "author": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2021-05-12T08:10:48Z"
    },
    "committer": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2021-05-12T08:10:48Z"
    },
    "message": "Merge v0.2021.14 into 'release'.",
    "tree": {
      "sha": "2884c34efb0a90538ee3393b9af7953b244a2813",
      "url": "https://api.github.com/repos/debiki/talkyard/git/trees/2884c34efb0a90538ee3393b9af7953b244a2813"
    },
    "url": "https://api.github.com/repos/debiki/talkyard/git/commits/48044724503ef231848ee7af19ae66f1b71ca43e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/debiki/talkyard/commits/48044724503ef231848ee7af19ae66f1b71ca43e",
  "html_url": "https://github.com/debiki/talkyard/commit/48044724503ef231848ee7af19ae66f1b71ca43e",
  "comments_url": "https://api.github.com/repos/debiki/talkyard/commits/48044724503ef231848ee7af19ae66f1b71ca43e/comments",
  "author": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0228cfe28a122e39b4001b831226b8ef5bec9d64",
      "url": "https://api.github.com/repos/debiki/talkyard/commits/0228cfe28a122e39b4001b831226b8ef5bec9d64",
      "html_url": "https://github.com/debiki/talkyard/commit/0228cfe28a122e39b4001b831226b8ef5bec9d64"
    },
    {
      "sha": "2e99db8cf600695f707b093a4b81bd60416ee79f",
      "url": "https://api.github.com/repos/debiki/talkyard/commits/2e99db8cf600695f707b093a4b81bd60416ee79f",
      "html_url": "https://github.com/debiki/talkyard/commit/2e99db8cf600695f707b093a4b81bd60416ee79f"
    }
  ],
  "stats": {
    "total": 83,
    "additions": 59,
    "deletions": 24
  },
  "files": [
    {
      "sha": "f9ec3ac704c9b44e1e9f883cbc79fb65f7b9e900",
      "filename": "app/debiki/JsonUtils.scala",
      "status": "modified",
      "additions": 18,
      "deletions": 2,
      "changes": 20,
      "blob_url": "https://github.com/debiki/talkyard/blob/48044724503ef231848ee7af19ae66f1b71ca43e/app/debiki/JsonUtils.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/48044724503ef231848ee7af19ae66f1b71ca43e/app/debiki/JsonUtils.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/debiki/JsonUtils.scala?ref=48044724503ef231848ee7af19ae66f1b71ca43e",
      "patch": "@@ -129,8 +129,24 @@ object JsonUtils {\n     readOptString(json, fieldName) getOrElse throwMissing(\"EsE7JTB3\", fieldName)\n \n \n-  def parseOptSt(json: JsValue, fieldName: St, altName: St = \"\"): Opt[St] =\n-    readOptString(json, fieldName, altName)\n+  /** If noneIfLongerThan is >= 0, returns None if the value is longer than that.\n+    */\n+  def parseOptSt(json: JsValue, fieldName: St, altName: St = \"\",\n+        noneIfLongerThan: i32 = -1, cutAt: i32 = -1): Opt[St] = {\n+    var anySt = readOptString(json, fieldName, altName)\n+    dieIf(noneIfLongerThan >= 0 && cutAt >= 0,\n+          \"TyE7PM506RP\", \"Both noneIfLongerThan and cutAt specified\")\n+    if (cutAt >= 0) {\n+      anySt = anySt.map(_.take(cutAt))\n+    }\n+    if (noneIfLongerThan >= 0) {\n+      anySt foreach { value =>\n+        if (value.length > noneIfLongerThan)\n+          return None\n+      }\n+    }\n+    anySt\n+  }\n \n   def readOptString(json: JsValue, fieldName: St, altName: St = \"\"): Opt[St] = {\n     val primaryResult = readOptStringImpl(json, fieldName)"
    },
    {
      "sha": "85635c150d99eba29945a9b7aedf7a853b015544",
      "filename": "app/talkyard/server/authn/package.scala",
      "status": "modified",
      "additions": 24,
      "deletions": 18,
      "changes": 42,
      "blob_url": "https://github.com/debiki/talkyard/blob/48044724503ef231848ee7af19ae66f1b71ca43e/app/talkyard/server/authn/package.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/48044724503ef231848ee7af19ae66f1b71ca43e/app/talkyard/server/authn/package.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/talkyard/server/authn/package.scala?ref=48044724503ef231848ee7af19ae66f1b71ca43e",
      "patch": "@@ -230,26 +230,32 @@ package object authn {   REFACTOR; MOVE // most of this to an object UserInfoPar\n \n     val jsob = asJsObject(jsVal, what = \"OIDC user info\")\n \n+    // Sync the different maxLength = ... with the database constraints,\n+    // see:  \\d identities3.  Could log a warning, if some field too long?\n+    // But show in which log file? Anyone really cares about this?\n+    // For now, just setting to None, rather than letting the db constraints\n+    // fail, which would prevent people with \"impossibly\" long fields, from signing in.\n     val sub = parseSt(jsob, \"sub\")\n-    val preferredUsername = parseOptSt(jsob, \"preferred_username\")\n-    val nickname = parseOptSt(jsob, \"nickname\")\n-    val firstName = parseOptSt(jsob, \"given_name\")\n-    val middleName = parseOptSt(jsob, \"middle_name\")\n-    val lastName = parseOptSt(jsob, \"family_name\")\n-    val name = parseOptSt(jsob, \"name\")\n-    val email = parseOptSt(jsob, \"email\")\n+    val preferredUsername = parseOptSt(jsob, \"preferred_username\", cutAt = 200)\n+    val nickname = parseOptSt(jsob, \"nickname\", cutAt = 250)\n+    val firstName = parseOptSt(jsob, \"given_name\", cutAt = 250)\n+    val middleName = parseOptSt(jsob, \"middle_name\", cutAt = 250)\n+    val lastName = parseOptSt(jsob, \"family_name\", cutAt = 250)\n+    val name = parseOptSt(jsob, \"name\", cutAt = 250)\n+    val email = parseOptSt(jsob, \"email\", noneIfLongerThan = 250)\n     val email_verified = parseOptBo(jsob, \"email_verified\")\n-    val phoneNumber = parseOptSt(jsob, \"phone_number\")\n+    val phoneNumber = parseOptSt(jsob, \"phone_number\", noneIfLongerThan = 250)\n     val phoneNrVerified = parseOptBo(jsob, \"phone_number_verified\")\n \n     CLEAN_UP // move this to the place where a User gets constructed,\n     // and just remember the name as-is, in IdpUserInfo,\n     // like  parseOidcIdToken()  does.\n-    val anyName = name.orElse(Seq(\n+    val fullName = name.orElse(Seq(\n               firstName, middleName, lastName\n               ).flatten.mkString(\" \").trimNoneIfEmpty)\n           .orElse(nickname)\n           .orElse(preferredUsername)\n+          .map(_.take(250))\n \n     val isEmailVerified = isEmailAddrVerified(\n           email, idpSaysEmailVerified = email_verified, idp)\n@@ -266,19 +272,19 @@ package object authn {   REFACTOR; MOVE // most of this to an object UserInfoPar\n           firstName = firstName,\n           middleName = middleName,\n           lastName = lastName,\n-          fullName = anyName,\n+          fullName = fullName,\n           email = email,\n           isEmailVerifiedByIdp = Some(isEmailVerified),\n           phoneNumber = phoneNumber,\n           isPhoneNumberVerifiedByIdp = phoneNrVerified,\n-          profileUrl = parseOptSt(jsob, \"profile\"),\n-          websiteUrl = parseOptSt(jsob, \"website\"),\n-          avatarUrl = parseOptSt(jsob, \"picture\"),\n-          gender = parseOptSt(jsob, \"gender\"),\n-          birthdate = parseOptSt(jsob, \"birthdate\"),\n-          timeZoneInfo = parseOptSt(jsob, \"zoneinfo\"),\n-          // country: Opt[St]\n-          locale = parseOptSt(jsob, \"locale\"),\n+          profileUrl = parseOptSt(jsob, \"profile\", noneIfLongerThan = 500),\n+          websiteUrl = parseOptSt(jsob, \"website\", noneIfLongerThan = 500),\n+          avatarUrl = parseOptSt(jsob, \"picture\", noneIfLongerThan = 2100),\n+          gender = parseOptSt(jsob, \"gender\", cutAt = 100),\n+          birthdate = parseOptSt(jsob, \"birthdate\", cutAt = 100),\n+          timeZoneInfo = parseOptSt(jsob, \"zoneinfo\", cutAt = 250),\n+          // country: Opt[St]  cutAt = 250\n+          locale = parseOptSt(jsob, \"locale\", cutAt = 250),\n           //address = parseOptJsObject(jsob, \"address\")\n           //roles: Seq[St]\n           // isRealmGuest: Opt[Bo]"
    },
    {
      "sha": "eb4ed53dbbebea5d48bb214ae3e3636414a28648",
      "filename": "modules/ty-dao-rdb/src/main/resources/db/migration/y2021/v404__profile_pic_length.sql",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/debiki/talkyard/blob/48044724503ef231848ee7af19ae66f1b71ca43e/modules/ty-dao-rdb/src/main/resources/db/migration/y2021/v404__profile_pic_length.sql",
      "raw_url": "https://github.com/debiki/talkyard/raw/48044724503ef231848ee7af19ae66f1b71ca43e/modules/ty-dao-rdb/src/main/resources/db/migration/y2021/v404__profile_pic_length.sql",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/modules/ty-dao-rdb/src/main/resources/db/migration/y2021/v404__profile_pic_length.sql?ref=48044724503ef231848ee7af19ae66f1b71ca43e",
      "patch": "@@ -0,0 +1,13 @@\n+\n+-- A Google profile pic URL was 830 chars, so let's allow up to, hmm,\n+-- 2100, because there has to be *some* max limit, and IE11 apparently cuts urls\n+-- at 2083 chars (URL path max 2048 chars).\n+-- https://support.microsoft.com/en-us/topic/maximum-url-length-is-2-083-characters-in-internet-explorer-174e7c8a-6666-f4e0-6fd6-908b53c12246\n+--\n+create domain pic_url_d as varchar;\n+alter domain pic_url_d add constraint picurl_c_len_gz check (length(value) > 0);\n+alter domain pic_url_d add constraint picurl_c_len_max check (length(value) <= 2100);\n+\n+alter table identities3 drop constraint idtys_c_pictureurl_len;\n+alter table identities3 alter column picture_url_c type pic_url_d;\n+"
    },
    {
      "sha": "d1a40cba12a35746192fc8edf80628f5035209cb",
      "filename": "relchans/tyse-v0-dev",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/relchans/tyse-v0-dev?ref=48044724503ef231848ee7af19ae66f1b71ca43e",
      "patch": "@@ -1 +1 @@\n-Subproject commit e743769b4cc3bcc814e10c4cc95bfbfc65fed303\n+Subproject commit d1a40cba12a35746192fc8edf80628f5035209cb"
    },
    {
      "sha": "c4cbd7fd40ee287caf6655e74ebcc11b08142b26",
      "filename": "relchans/tyse-v0-regular",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/relchans/tyse-v0-regular?ref=48044724503ef231848ee7af19ae66f1b71ca43e",
      "patch": "@@ -1 +1 @@\n-Subproject commit 3c55d0b7c7c047d615af0b6db584815a55496ddf\n+Subproject commit c4cbd7fd40ee287caf6655e74ebcc11b08142b26"
    },
    {
      "sha": "24d628b96785af5438905956c1404f39194229b4",
      "filename": "vendors/jars",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/vendors/jars?ref=48044724503ef231848ee7af19ae66f1b71ca43e",
      "patch": "@@ -1 +1 @@\n-Subproject commit 9b14521da45c749629915c23d1a232fe7298d2bf\n+Subproject commit 24d628b96785af5438905956c1404f39194229b4"
    },
    {
      "sha": "404dfb8ea29ca64ba1f6a1155e6f0eef93969b55",
      "filename": "version.txt",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/48044724503ef231848ee7af19ae66f1b71ca43e/version.txt",
      "raw_url": "https://github.com/debiki/talkyard/raw/48044724503ef231848ee7af19ae66f1b71ca43e/version.txt",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/version.txt?ref=48044724503ef231848ee7af19ae66f1b71ca43e",
      "patch": "@@ -1 +1 @@\n-v0.2021.13\n+v0.2021.14"
    }
  ]
}
