{
  "sha": "e0713455cabb2c155261052935dbe35e00b0539f",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODplMDcxMzQ1NWNhYmIyYzE1NTI2MTA1MjkzNWRiZTM1ZTAwYjA1Mzlm",
  "commit": {
    "author": {
      "name": "Martin Brennan",
      "email": "mjrbrennan@gmail.com",
      "date": "2020-07-09T05:46:52Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-07-09T05:46:52Z"
    },
    "message": "PERF: Load topic bookmarks for the user in user_post_bookmarks (#10197)\n\nInstead of loading all of the user bookmarks using all the post IDs in a topic, load all the bookmarks for a user using the topic ID. This eliminates a costly WHERE ID IN query.",
    "tree": {
      "sha": "5d5495820370c75cb30da6d2f2fafd803db455b3",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/5d5495820370c75cb30da6d2f2fafd803db455b3"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/e0713455cabb2c155261052935dbe35e00b0539f",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfBq9MCRBK7hj4Ov3rIwAAdHIIACpn0RBMpV7ZtYC36Jq775Uj\nqAFM5sOMi9jfPjas4m6BCi8T7vKl0+gmm9iPGN9OZFORNcTujEfjjbZZKF8fURzp\nH2/vHv9KzwzgXKoZq45CuCv1qnwpKMKaFXK25twXEm2YZlM0fY9LTqRieAhvNb1I\nVa97ja6GDCmImzdpsGiGZDPLscPRF72GX48K5coxs/kuDQSIHA+vthTYSN6EnaAA\nk+xYZxfzqv0fgpMLlp9bZkQS8KXB35qb2lQnp8xA1jKpMlIB5W3dbw1EoBbc1haR\nR9QoTwmpg7+0uTE3oph7pq2b4241g3tVvSyEe9rOeeUJNjnpn9zalxbhIs8TOlk=\n=PZmK\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 5d5495820370c75cb30da6d2f2fafd803db455b3\nparent d5c56a846a358277a232f7389a47808db9fa624d\nauthor Martin Brennan <mjrbrennan@gmail.com> 1594273612 +1000\ncommitter GitHub <noreply@github.com> 1594273612 +1000\n\nPERF: Load topic bookmarks for the user in user_post_bookmarks (#10197)\n\nInstead of loading all of the user bookmarks using all the post IDs in a topic, load all the bookmarks for a user using the topic ID. This eliminates a costly WHERE ID IN query."
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/e0713455cabb2c155261052935dbe35e00b0539f",
  "html_url": "https://github.com/discourse/discourse/commit/e0713455cabb2c155261052935dbe35e00b0539f",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/e0713455cabb2c155261052935dbe35e00b0539f/comments",
  "author": {
    "login": "martin-brennan",
    "id": 920448,
    "node_id": "MDQ6VXNlcjkyMDQ0OA==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/920448?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/martin-brennan",
    "html_url": "https://github.com/martin-brennan",
    "followers_url": "https://api.github.com/users/martin-brennan/followers",
    "following_url": "https://api.github.com/users/martin-brennan/following{/other_user}",
    "gists_url": "https://api.github.com/users/martin-brennan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/martin-brennan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/martin-brennan/subscriptions",
    "organizations_url": "https://api.github.com/users/martin-brennan/orgs",
    "repos_url": "https://api.github.com/users/martin-brennan/repos",
    "events_url": "https://api.github.com/users/martin-brennan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/martin-brennan/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d5c56a846a358277a232f7389a47808db9fa624d",
      "url": "https://api.github.com/repos/discourse/discourse/commits/d5c56a846a358277a232f7389a47808db9fa624d",
      "html_url": "https://github.com/discourse/discourse/commit/d5c56a846a358277a232f7389a47808db9fa624d"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 14,
    "deletions": 1
  },
  "files": [
    {
      "sha": "aa0c46aa1a9e9416783c0c228c21785bd5196719",
      "filename": "lib/topic_view.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/e0713455cabb2c155261052935dbe35e00b0539f/lib/topic_view.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/e0713455cabb2c155261052935dbe35e00b0539f/lib/topic_view.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/topic_view.rb?ref=e0713455cabb2c155261052935dbe35e00b0539f",
      "patch": "@@ -435,7 +435,7 @@ def links\n   end\n \n   def user_post_bookmarks\n-    @user_post_bookmarks ||= Bookmark.where(user: @user, post_id: unfiltered_post_ids)\n+    @user_post_bookmarks ||= @topic.bookmarks.where(user: @user)\n   end\n \n   def reviewable_counts"
    },
    {
      "sha": "624e9a3b4a1612c03798cf9bdca1a5bc6213cf0b",
      "filename": "spec/components/topic_view_spec.rb",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/discourse/discourse/blob/e0713455cabb2c155261052935dbe35e00b0539f/spec/components/topic_view_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/e0713455cabb2c155261052935dbe35e00b0539f/spec/components/topic_view_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/components/topic_view_spec.rb?ref=e0713455cabb2c155261052935dbe35e00b0539f",
      "patch": "@@ -334,6 +334,19 @@\n       end\n     end\n \n+    context \"#user_post_bookmarks\" do\n+      let!(:user) { Fabricate(:user) }\n+      let!(:bookmark1) { Fabricate(:bookmark, post: Fabricate(:post, topic: topic), user: user) }\n+      let!(:bookmark2) { Fabricate(:bookmark, post: Fabricate(:post, topic: topic), user: user) }\n+      let!(:bookmark3) { Fabricate(:bookmark, post: Fabricate(:post, topic: topic)) }\n+\n+      it \"returns all the bookmarks in the topic for a user\" do\n+        expect(TopicView.new(topic.id, user).user_post_bookmarks.pluck(:id)).to match_array(\n+          [bookmark1.id, bookmark2.id]\n+        )\n+      end\n+    end\n+\n     context '.topic_user' do\n       it 'returns nil when there is no user' do\n         expect(TopicView.new(topic.id, nil).topic_user).to be_blank"
    }
  ]
}
