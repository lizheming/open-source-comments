{
  "sha": "21d0339d3d4a99cf72c1835bb811b7e98afa84a4",
  "node_id": "C_kwDOBtgov9oAKDIxZDAzMzlkM2Q0YTk5Y2Y3MmMxODM1YmI4MTFiN2U5OGFmYTg0YTQ",
  "commit": {
    "author": {
      "name": "Paul Mineev",
      "email": "paul@mineev.me",
      "date": "2022-04-22T01:49:03Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2022-04-25T01:19:13Z"
    },
    "message": "restore low_score comment state",
    "tree": {
      "sha": "465326374f41c9cd5349c0ef952d9a5dbdd35541",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/465326374f41c9cd5349c0ef952d9a5dbdd35541"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/21d0339d3d4a99cf72c1835bb811b7e98afa84a4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/21d0339d3d4a99cf72c1835bb811b7e98afa84a4",
  "html_url": "https://github.com/umputun/remark42/commit/21d0339d3d4a99cf72c1835bb811b7e98afa84a4",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/21d0339d3d4a99cf72c1835bb811b7e98afa84a4/comments",
  "author": null,
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9e30e3bd2c78ac501c2cbc83e5a36083a8d07dbe",
      "url": "https://api.github.com/repos/umputun/remark42/commits/9e30e3bd2c78ac501c2cbc83e5a36083a8d07dbe",
      "html_url": "https://github.com/umputun/remark42/commit/9e30e3bd2c78ac501c2cbc83e5a36083a8d07dbe"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 10,
    "deletions": 15
  },
  "files": [
    {
      "sha": "241b9092ce95234243393940945dffd79c680ef3",
      "filename": "frontend/app/components/comment/comment-votes.spec.tsx",
      "status": "modified",
      "additions": 0,
      "deletions": 12,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/21d0339d3d4a99cf72c1835bb811b7e98afa84a4/frontend%2Fapp%2Fcomponents%2Fcomment%2Fcomment-votes.spec.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/21d0339d3d4a99cf72c1835bb811b7e98afa84a4/frontend%2Fapp%2Fcomponents%2Fcomment%2Fcomment-votes.spec.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapp%2Fcomponents%2Fcomment%2Fcomment-votes.spec.tsx?ref=21d0339d3d4a99cf72c1835bb811b7e98afa84a4",
      "patch": "@@ -104,16 +104,4 @@ describe('<CommentVote />', () => {\n     expect(screen.getByTitle('Vote up')).toBeVisible();\n     expect(screen.getByTitle('Vote up')).not.toBeDisabled();\n   });\n-\n-  it('should disable downvote ability when `low_score` is reached', async () => {\n-    StaticStore.config.low_score = -4;\n-    jest.spyOn(api, 'putCommentVote').mockImplementation(jest.fn(async () => ({ id: '1', score: -4 })));\n-    render(<CommentVotes id=\"1\" vote={0} votes={-3} controversy={0} />);\n-    expect(screen.getByTitle('Vote down')).not.toBeDisabled();\n-    fireEvent(screen.getByTitle('Vote down'), new Event('click'));\n-    await waitFor(() => {\n-      expect(screen.getByTitle('Vote down')).toBeDisabled();\n-      expect(screen.getByTitle('Vote up')).toBeDisabled();\n-    });\n-  });\n });"
    },
    {
      "sha": "8cc39badfe8e8f899cf418db6ae0ad20787e74cd",
      "filename": "frontend/app/components/comment/comment-votes.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/21d0339d3d4a99cf72c1835bb811b7e98afa84a4/frontend%2Fapp%2Fcomponents%2Fcomment%2Fcomment-votes.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/21d0339d3d4a99cf72c1835bb811b7e98afa84a4/frontend%2Fapp%2Fcomponents%2Fcomment%2Fcomment-votes.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapp%2Fcomponents%2Fcomment%2Fcomment-votes.tsx?ref=21d0339d3d4a99cf72c1835bb811b7e98afa84a4",
      "patch": "@@ -44,11 +44,10 @@ export function CommentVotes({ id, votes, vote, disabled, controversy = 0 }: Pro\n     }\n   }\n \n-  const lowScore = StaticStore.config.low_score === votes;\n-  const positiveScore = StaticStore.config.positive_score;\n   const isUpvoted = vote === 1;\n   const isDownvoted = vote === -1;\n   const value = loadingState?.votes ?? votes;\n+  const isPositiveScore = StaticStore.config.positive_score && value > -1;\n \n   return (\n     <span className={clsx(styles.root, disabled && styles.rootDisabled)}>\n@@ -58,7 +57,7 @@ export function CommentVotes({ id, votes, vote, disabled, controversy = 0 }: Pro\n           onClick={handleClick}\n           data-value={-1}\n           title={intl.formatMessage(messages.downvote)}\n-          disabled={lowScore || loadingState !== null || isDownvoted || (positiveScore && value > -1)}\n+          disabled={loadingState !== null || isDownvoted || isPositiveScore}\n         >\n           <ArrowIcon className={styles.downVoteIcon} />\n         </button>"
    },
    {
      "sha": "b8439e0033d0d1991fa2425791f8539fa09170c2",
      "filename": "frontend/app/components/comment/comment.tsx",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/21d0339d3d4a99cf72c1835bb811b7e98afa84a4/frontend%2Fapp%2Fcomponents%2Fcomment%2Fcomment.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/21d0339d3d4a99cf72c1835bb811b7e98afa84a4/frontend%2Fapp%2Fcomponents%2Fcomment%2Fcomment.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapp%2Fcomponents%2Fcomment%2Fcomment.tsx?ref=21d0339d3d4a99cf72c1835bb811b7e98afa84a4",
      "patch": "@@ -326,6 +326,14 @@ export class Comment extends Component<CommentProps, State> {\n     const defaultMods = {\n       disabled: props.disabled,\n       pinned: props.data.pin,\n+      // TODO: we also have critical_score, so we need to collapse comments with it in future\n+      useless:\n+        !!props.isUserBanned ||\n+        !!props.data.delete ||\n+        (props.view !== 'preview' &&\n+          props.data.score < StaticStore.config.low_score &&\n+          !props.data.pin &&\n+          !props.disabled),\n       // TODO: add default view mod or don't?\n       guest: isGuest,\n       view: props.view === 'main' || props.view === 'pinned' ? props.data.user.admin && 'admin' : props.view,"
    }
  ]
}
