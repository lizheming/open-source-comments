{
  "sha": "c222b8a2ba7da7a7a5251f2912bd69f665ae3764",
  "node_id": "C_kwDOBtgov9oAKGMyMjJiOGEyYmE3ZGE3YTdhNTI1MWYyOTEyYmQ2OWY2NjVhZTM3NjQ",
  "commit": {
    "author": {
      "name": "Dmitry Verkhoturov",
      "email": "paskal.07@gmail.com",
      "date": "2021-10-21T20:51:51Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2021-10-22T06:21:33Z"
    },
    "message": "cut parameters list from readme to site",
    "tree": {
      "sha": "2b924a55f9edbc22aa880ac5eecf4fdd72942b92",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/2b924a55f9edbc22aa880ac5eecf4fdd72942b92"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/c222b8a2ba7da7a7a5251f2912bd69f665ae3764",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/c222b8a2ba7da7a7a5251f2912bd69f665ae3764",
  "html_url": "https://github.com/umputun/remark42/commit/c222b8a2ba7da7a7a5251f2912bd69f665ae3764",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/c222b8a2ba7da7a7a5251f2912bd69f665ae3764/comments",
  "author": {
    "login": "paskal",
    "id": 712534,
    "node_id": "MDQ6VXNlcjcxMjUzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/712534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paskal",
    "html_url": "https://github.com/paskal",
    "followers_url": "https://api.github.com/users/paskal/followers",
    "following_url": "https://api.github.com/users/paskal/following{/other_user}",
    "gists_url": "https://api.github.com/users/paskal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paskal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paskal/subscriptions",
    "organizations_url": "https://api.github.com/users/paskal/orgs",
    "repos_url": "https://api.github.com/users/paskal/repos",
    "events_url": "https://api.github.com/users/paskal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paskal/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "032f88c61e5dbba88865ccbbfa6bc47d54d3049b",
      "url": "https://api.github.com/repos/umputun/remark42/commits/032f88c61e5dbba88865ccbbfa6bc47d54d3049b",
      "html_url": "https://github.com/umputun/remark42/commit/032f88c61e5dbba88865ccbbfa6bc47d54d3049b"
    }
  ],
  "stats": {
    "total": 340,
    "additions": 173,
    "deletions": 167
  },
  "files": [
    {
      "sha": "9d4df3f05615345370f8a4f6dcfafdf2d6907638",
      "filename": "README.md",
      "status": "modified",
      "additions": 0,
      "deletions": 167,
      "changes": 167,
      "blob_url": "https://github.com/umputun/remark42/blob/c222b8a2ba7da7a7a5251f2912bd69f665ae3764/README.md",
      "raw_url": "https://github.com/umputun/remark42/raw/c222b8a2ba7da7a7a5251f2912bd69f665ae3764/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/README.md?ref=c222b8a2ba7da7a7a5251f2912bd69f665ae3764",
      "patch": "@@ -107,173 +107,6 @@ _this is the recommended way to run Remark42_\n * run as `remark42.{os}-{arch} server {parameters...}`, i.e. `remark42.linux-amd64 server --secret=12345 --url=http://127.0.0.1:8080`\n * alternatively compile from the sources - `make OS=[linux|darwin|windows] ARCH=[amd64,386,arm64,arm]`\n \n-#### Parameters\n-\n-| Command line            | Environment             | Default                  | Description                                     |\n-| ----------------------- | ----------------------- | ------------------------ | ----------------------------------------------- |\n-| url                     | REMARK_URL              |                          | URL to Remark42 server, _required_              |\n-| secret                  | SECRET                  |                          | shared secret key used to sign JWT, should be a random, long, hard-to-guess string, _required_ |\n-| site                    | SITE                    | `remark`                 | site name(s), _multi_                           |\n-| store.type              | STORE_TYPE              | `bolt`                   | type of storage, `bolt` or `rpc`                |\n-| store.bolt.path         | STORE_BOLT_PATH         | `./var`                  | path to data directory                          |\n-| store.bolt.timeout      | STORE_BOLT_TIMEOUT      | `30s`                    | boltdb access timeout                           |\n-| admin.shared.id         | ADMIN_SHARED_ID         |                          | admin IDs (list of user IDs), _multi_           |\n-| admin.shared.email      | ADMIN_SHARED_EMAIL      | `admin@${REMARK_URL}`    | admin emails, _multi_                           |\n-| backup                  | BACKUP_PATH             | `./var/backup`           | backups location                                |\n-| max-back                | MAX_BACKUP_FILES        | `10`                     | max backup files to keep                        |\n-| cache.type              | CACHE_TYPE              | `mem`                    | type of cache, `redis_pub_sub` or `mem` or `none` |\n-| cache.redis_addr        | CACHE_REDIS_ADDR        | `127.0.0.1:6379`         | address of redis PubSub instance, turn `redis_pub_sub` cache on for distributed cache |\n-| cache.max.items         | CACHE_MAX_ITEMS         | `1000`                   | max number of cached items, `0` - unlimited     |\n-| cache.max.value         | CACHE_MAX_VALUE         | `65536`                  | max size of cached value, `0` - unlimited       |\n-| cache.max.size          | CACHE_MAX_SIZE          | `50000000`               | max size of all cached values, `0` - unlimited  |\n-| avatar.type             | AVATAR_TYPE             | `fs`                     | type of avatar storage, `fs`, `bolt`, or `uri`  |\n-| avatar.fs.path          | AVATAR_FS_PATH          | `./var/avatars`          | avatars location for `fs` store                 |\n-| avatar.bolt.file        | AVATAR_BOLT_FILE        | `./var/avatars.db`       | file name for `bolt` store                      |\n-| avatar.uri              | AVATAR_URI              | `./var/avatars`          | avatar store uri                                |\n-| avatar.rsz-lmt          | AVATAR_RSZ_LMT          | `0` (disabled)           | max image size for resizing avatars on save     |\n-| image.type              | IMAGE_TYPE              | `fs`                     | type of image storage, `fs`, `bolt`             |\n-| image.max-size          | IMAGE_MAX_SIZE          | `5000000`                | max size of image file                          |\n-| image.fs.path           | IMAGE_FS_PATH           | `./var/pictures`         | permanent location of images                    |\n-| image.fs.staging        | IMAGE_FS_STAGING        | `./var/pictures.staging` | staging location of images                      |\n-| image.fs.partitions     | IMAGE_FS_PARTITIONS     | `100`                    | number of image partitions                      |\n-| image.bolt.file         | IMAGE_BOLT_FILE         | `/var/pictures.db`       | images bolt file location                       |\n-| image.resize-width      | IMAGE_RESIZE_WIDTH      | `2400`                   | width of resized image                          |\n-| image.resize-height     | IMAGE_RESIZE_HEIGHT     | `900`                    | height of resized image                         |\n-| auth.ttl.jwt            | AUTH_TTL_JWT            | `5m`                     | jwt TTL                                         |\n-| auth.ttl.cookie         | AUTH_TTL_COOKIE         | `200h`                   | cookie TTL                                      |\n-| auth.send-jwt-header    | AUTH_SEND_JWT_HEADER    | `false`                  | send JWT as a header instead of cookie          |\n-| auth.same-site          | AUTH_SAME_SITE          | `default`                | set same site policy for cookies (`default`, `none`, `lax` or `strict`) |\n-| auth.google.cid         | AUTH_GOOGLE_CID         |                          | Google OAuth client ID                          |\n-| auth.google.csec        | AUTH_GOOGLE_CSEC        |                          | Google OAuth client secret                      |\n-| auth.facebook.cid       | AUTH_FACEBOOK_CID       |                          | Facebook OAuth client ID                        |\n-| auth.facebook.csec      | AUTH_FACEBOOK_CSEC      |                          | Facebook OAuth client secret                    |\n-| auth.microsoft.cid      | AUTH_MICROSOFT_CID      |                          | Microsoft OAuth client ID                       |\n-| auth.microsoft.csec     | AUTH_MICROSOFT_CSEC     |                          | Microsoft OAuth client secret                   |\n-| auth.github.cid         | AUTH_GITHUB_CID         |                          | GitHub OAuth client ID                          |\n-| auth.github.csec        | AUTH_GITHUB_CSEC        |                          | GitHub OAuth client secret                      |\n-| auth.twitter.cid        | AUTH_TWITTER_CID        |                          | Twitter Consumer API Key                        |\n-| auth.twitter.csec       | AUTH_TWITTER_CSEC       |                          | Twitter Consumer API Secret key                 |\n-| auth.patreon.cid        | AUTH_PATREON_CID        |                          | Patreon OAuth Client ID                         |\n-| auth.patreon.csec       | AUTH_PATREON_CSEC       |                          | Patreon OAuth Client Secret                     |\n-| auth.telegram           | AUTH_TELEGRAM           |                          | Enable Telegram auth (telegram.token must be present) |\n-| auth.yandex.cid         | AUTH_YANDEX_CID         |                          | Yandex OAuth client ID                          |\n-| auth.yandex.csec        | AUTH_YANDEX_CSEC        |                          | Yandex OAuth client secret                      |\n-| auth.dev                | AUTH_DEV                | `false`                  | local OAuth2 server, development mode only      |\n-| auth.anon               | AUTH_ANON               | `false`                  | enable anonymous login                          |\n-| auth.email.enable       | AUTH_EMAIL_ENABLE       | `false`                  | enable auth via email                           |\n-| auth.email.from         | AUTH_EMAIL_FROM         |                          | email from                                      |\n-| auth.email.subj         | AUTH_EMAIL_SUBJ         | `remark42 confirmation`  | email subject                                   |\n-| auth.email.content-type | AUTH_EMAIL_CONTENT_TYPE | `text/html`              | email content type                              |\n-| auth.email.template     | AUTH_EMAIL_TEMPLATE     | none (predefined)        | custom email message template file              |\n-| notify.users            | NOTIFY_USERS            | none                     | type of user notifications (Telegram, email)    |\n-| notify.admins           | NOTIFY_ADMINS           | none                     | type of admin notifications (Telegram, Slack, webhook and/or email) |\n-| notify.queue            | NOTIFY_QUEUE            | `100`                    | size of notification queue                      |\n-| notify.telegram.chan    | NOTIFY_TELEGRAM_CHAN    |                          | Telegram channel                                |\n-| notify.slack.token      | NOTIFY_SLACK_TOKEN      |                          | Slack token                                     |\n-| notify.slack.chan       | NOTIFY_SLACK_CHAN       | `general`                | Slack channel                                   |\n-| notify.webhook.url      | NOTIFY_WEBHOOK_URL      |                          | Webhook notification URL                        |\n-| notify.webhook.template | NOTIFY_WEBHOOK_TEMPLATE | `{\"text\": \"{{.Text}}\"}`  | Webhook payload template                        |\n-| notify.webhook.headers  | NOTIFY_WEBHOOK_HEADERS  |                          | HTTP header in format Header1:Value1,Header2:Value2,...|\n-| notify.webhook.timeout  | NOTIFY_WEBHOOK_TIMEOUT  | `5s`                     | Webhook connection timeout                      |\n-| notify.email.fromAddress| NOTIFY_EMAIL_FROM       |                          | from email address                              |\n-| notify.email.verification_subj | NOTIFY_EMAIL_VERIFICATION_SUBJ | `Email verification` | verification message subject          |\n-| telegram.token          | TELEGRAM_TOKEN          |                          | Telegram token (used for auth and Telegram notifications) |\n-| telegram.timeout        | TELEGRAM_TIMEOUT        | `5s`                     | Telegram connection timeout                     |\n-| smtp.host               | SMTP_HOST               |                          | SMTP host                                       |\n-| smtp.port               | SMTP_PORT               |                          | SMTP port                                       |\n-| smtp.username           | SMTP_USERNAME           |                          | SMTP user name                                  |\n-| smtp.password           | SMTP_PASSWORD           |                          | SMTP password                                   |\n-| smtp.tls                | SMTP_TLS                |                          | enable TLS for SMTP                             |\n-| smtp.timeout            | SMTP_TIMEOUT            | `10s`                    | SMTP TCP connection timeout                     |\n-| ssl.type                | SSL_TYPE                | none                     | `none`-HTTP, `static`-HTTPS, `auto`-HTTPS + le  |\n-| ssl.port                | SSL_PORT                | `8443`                   | port for HTTPS server                           |\n-| ssl.cert                | SSL_CERT                |                          | path to cert.pem file                           |\n-| ssl.key                 | SSL_KEY                 |                          | path to key.pem file                            |\n-| ssl.acme-location       | SSL_ACME_LOCATION       | `./var/acme`             | dir where obtained le-certs will be stored      |\n-| ssl.acme-email          | SSL_ACME_EMAIL          |                          | admin email for receiving notifications from LE |\n-| max-comment             | MAX_COMMENT_SIZE        | `2048`                   | comment's size limit                            |\n-| max-votes               | MAX_VOTES               | `-1`                     | votes limit per comment, `-1` - unlimited       |\n-| votes-ip                | VOTES_IP                | `false`                  | restrict votes from the same IP                 |\n-| anon-vote               | ANON_VOTE               | `false`                  | allow voting for anonymous users, require VOTES_IP to be enabled as well |\n-| votes-ip-time           | VOTES_IP_TIME           | `5m`                     | same IP vote restriction time, `0s` - unlimited |\n-| low-score               | LOW_SCORE               | `-5`                     | low score threshold                             |\n-| critical-score          | CRITICAL_SCORE          | `-10`                    | critical score threshold                        |\n-| positive-score          | POSITIVE_SCORE          | `false`                  | restricts comment's score to be only positive   |\n-| restricted-words        | RESTRICTED_WORDS        |                          | words banned in comments (can use `*`), _multi_ |\n-| restricted-names        | RESTRICTED_NAMES        |                          | names prohibited to use by the user, _multi_    |\n-| edit-time               | EDIT_TIME               | `5m`                     | edit window                                     |\n-| admin-edit              | ADMIN_EDIT              | `false`                  | unlimited edit for admins                       |\n-| read-age                | READONLY_AGE            |                          | read-only age of comments, days                 |\n-| image-proxy.http2https  | IMAGE_PROXY_HTTP2HTTPS  | `false`                  | enable HTTP->HTTPS proxy for images             |\n-| image-proxy.cache-external | IMAGE_PROXY_CACHE_EXTERNAL | `false`            | enable caching external images to current image storage |\n-| emoji                   | EMOJI                   | `false`                  | enable emoji support                            |\n-| simple-view             | SIMPLE_VIEW             | `false`                  | minimized UI with basic info only               |\n-| proxy-cors              | PROXY_CORS              | `false`                  | disable internal CORS and delegate it to proxy  |\n-| allowed-hosts           | ALLOWED_HOSTS           | enable all               | limit hosts/sources allowed to embed comments   |\n-| address                 | REMARK_ADDRESS          | all interfaces           | web server listening address                    |\n-| port                    | REMARK_PORT             | `8080`                   | web server port                                 |\n-| web-root                | REMARK_WEB_ROOT         | `./web`                  | web server root directory                       |\n-| update-limit            | UPDATE_LIMIT            | `0.5`                    | updates/sec limit                               |\n-| subscribers-only        | SUBSCRIBERS_ONLY        | `false`                  | enable commenting only for Patreon subscribers  |\n-| admin-passwd            | ADMIN_PASSWD            | none (disabled)          | password for `admin` basic auth                 |\n-| dbg                     | DEBUG                   | `false`                  | debug mode                                      |\n-\n-* command line parameters are long-form `--<key>=value`, i.e. `--site=https://demo.remark42.com`\n-* _multi_ parameters separated by `,` in the environment or repeated with command line key, like `--site=s1 --site=s2 ...`\n-* _required_ parameters have to be presented in the environment or provided in the command line\n-\n-##### Deprecated parameters\n-\n-The following list of command-line options is deprecated and will be removed in 2 minor releases or 1 major release (whichever is closer)\n-from the version in which they were deprecated. After Remark42 version update, please check the startup log once for deprecation warnings to avoid trouble with unrecognized command-line options in the future.\n-\n-<details>\n-<summary>Deprecated options</summary>\n-\n-| Command line       | Replacement   | Environment        | Replacement   | Default | Description    | Deprecation version |\n-| ------------------ | ------------- | ------------------ | ------------- | ------- | -------------- | ------------------- |\n-| auth.email.host    | smtp.host     | AUTH_EMAIL_HOST    | SMTP_HOST     |         | smtp host      | 1.5.0               |\n-| auth.email.port    | smtp.port     | AUTH_EMAIL_PORT    | SMTP_PORT     |         | smtp port      | 1.5.0               |\n-| auth.email.user    | smtp.username | AUTH_EMAIL_USER    | SMTP_USERNAME |         | smtp user name | 1.5.0               |\n-| auth.email.passwd  | smtp.password | AUTH_EMAIL_PASSWD  | SMTP_PASSWORD |         | smtp password  | 1.5.0               |\n-| auth.email.tls     | smtp.tls      | AUTH_EMAIL_TLS     | SMTP_TLS      | `false` | enable TLS     | 1.5.0               |\n-| auth.email.timeout | smtp.timeout  | AUTH_EMAIL_TIMEOUT | SMTP_TIMEOUT  | `10s`   | smtp timeout   | 1.5.0               |\n-| img-proxy          | image-proxy.http2https | IMG_PROXY | IMAGE_PROXY_HTTP2HTTPS | `false` | enable HTTP->HTTPS proxy for images | 1.5.0 |\n-| notify.type        | notify.admins, notify.users | NOTIFY_TYPE | NOTIFY_ADMINS, NOTIFY_USERS | |   | 1.9.0               |\n-| notify.email.notify_admin | notify.admins=email | NOTIFY_EMAIL_ADMIN | NOTIFY_ADMINS=email | |     | 1.9.0               |\n-| notify.telegram.token | telegram.token | NOTIFY_TELEGRAM_TOKEN | TELEGRAM_TOKEN | | Telegram token | 1.9.0               |\n-| notify.telegram.timeout | telegram.timeout | NOTIFY_TELEGRAM_TIMEOUT | TELEGRAM_TIMEOUT | | Telegram timeout | 1.9.0     |\n-\n-</details>\n-\n-##### Required parameters\n-\n-Most of the parameters have sane defaults and don't require customization. There are only a few parameters the user has to define:\n-\n-1. `SECRET` - secret key, can be any long and hard-to-guess string\n-2. `REMARK_URL` - URL pointing to your Remark42 server, i.e. `https://demo.remark42.com`\n-3. At least one pair of `AUTH_<PROVIDER>_CID` and `AUTH_<PROVIDER>_CSEC` defining OAuth2 provider(s)\n-\n-The minimal `docker-compose.yml` has to include all required parameters:\n-\n-```yaml\n-version: '2'\n-\n-services:\n-  remark42:\n-    image: umputun/remark42:latest\n-    restart: always\n-    container_name: \"remark42\"\n-    environment:\n-      - REMARK_URL=https://demo.remark42.com  # URL pointing to your Remark42 server\n-      - SITE=YOUR_SITE_ID                     # site ID, same as used for `site_id`, see \"Setup on your website\"\n-      - SECRET=abcd-123456-xyz-$%^&           # secret key\n-      - AUTH_GITHUB_CID=12345667890           # OAuth2 client ID\n-      - AUTH_GITHUB_CSEC=abcdefg12345678      # OAuth2 client secret\n-    volumes:\n-      - ./var:/srv/var                        # persistent volume to store all Remark42 data\n-```\n-\n #### Quick installation test\n \n To verify if Remark42 has been properly installed, check a demo page at `${REMARK_URL}/web` URL. Make sure to include `remark` site ID to `${SITE}` list."
    },
    {
      "sha": "ae1d183bbde4f1c36b0f4208577c06596986ee75",
      "filename": "site/src/docs/configuration/parameters/index.md",
      "status": "added",
      "additions": 169,
      "deletions": 0,
      "changes": 169,
      "blob_url": "https://github.com/umputun/remark42/blob/c222b8a2ba7da7a7a5251f2912bd69f665ae3764/site/src/docs/configuration/parameters/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/c222b8a2ba7da7a7a5251f2912bd69f665ae3764/site/src/docs/configuration/parameters/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/configuration/parameters/index.md?ref=c222b8a2ba7da7a7a5251f2912bd69f665ae3764",
      "patch": "@@ -0,0 +1,169 @@\n+---\n+title: Command-Line Interface parameters\n+---\n+\n+### Required parameters\n+\n+Most of the parameters have sane defaults and don't require customization. There are only a few parameters the user has to define:\n+\n+1. `SECRET` - secret key, can be any long and hard-to-guess string\n+2. `REMARK_URL` - URL pointing to your Remark42 server, i.e. `https://demo.remark42.com`\n+3. At least one pair of `AUTH_<PROVIDER>_CID` and `AUTH_<PROVIDER>_CSEC` defining OAuth2 provider(s)\n+\n+The minimal `docker-compose.yml` has to include all required parameters:\n+\n+```yaml\n+version: '2'\n+\n+services:\n+  remark42:\n+    image: umputun/remark42:latest\n+    restart: always\n+    container_name: \"remark42\"\n+    environment:\n+      - REMARK_URL=https://demo.remark42.com  # URL pointing to your Remark42 server\n+      - SITE=YOUR_SITE_ID                     # site ID, same as used for `site_id`, see \"Setup on your website\"\n+      - SECRET=abcd-123456-xyz-$%^&           # secret key\n+      - AUTH_GITHUB_CID=12345667890           # OAuth2 client ID\n+      - AUTH_GITHUB_CSEC=abcdefg12345678      # OAuth2 client secret\n+    volumes:\n+      - ./var:/srv/var                        # persistent volume to store all Remark42 data\n+```\n+\n+### Complete parameters list\n+\n+| Command line            | Environment             | Default                  | Description                                     |\n+| ----------------------- | ----------------------- | ------------------------ | ----------------------------------------------- |\n+| url                     | REMARK_URL              |                          | URL to Remark42 server, _required_              |\n+| secret                  | SECRET                  |                          | shared secret key used to sign JWT, should be a random, long, hard-to-guess string, _required_ |\n+| site                    | SITE                    | `remark`                 | site name(s), _multi_                           |\n+| store.type              | STORE_TYPE              | `bolt`                   | type of storage, `bolt` or `rpc`                |\n+| store.bolt.path         | STORE_BOLT_PATH         | `./var`                  | path to data directory                          |\n+| store.bolt.timeout      | STORE_BOLT_TIMEOUT      | `30s`                    | boltdb access timeout                           |\n+| admin.shared.id         | ADMIN_SHARED_ID         |                          | admin IDs (list of user IDs), _multi_           |\n+| admin.shared.email      | ADMIN_SHARED_EMAIL      | `admin@${REMARK_URL}`    | admin emails, _multi_                           |\n+| backup                  | BACKUP_PATH             | `./var/backup`           | backups location                                |\n+| max-back                | MAX_BACKUP_FILES        | `10`                     | max backup files to keep                        |\n+| cache.type              | CACHE_TYPE              | `mem`                    | type of cache, `redis_pub_sub` or `mem` or `none` |\n+| cache.redis_addr        | CACHE_REDIS_ADDR        | `127.0.0.1:6379`         | address of redis PubSub instance, turn `redis_pub_sub` cache on for distributed cache |\n+| cache.max.items         | CACHE_MAX_ITEMS         | `1000`                   | max number of cached items, `0` - unlimited     |\n+| cache.max.value         | CACHE_MAX_VALUE         | `65536`                  | max size of cached value, `0` - unlimited       |\n+| cache.max.size          | CACHE_MAX_SIZE          | `50000000`               | max size of all cached values, `0` - unlimited  |\n+| avatar.type             | AVATAR_TYPE             | `fs`                     | type of avatar storage, `fs`, `bolt`, or `uri`  |\n+| avatar.fs.path          | AVATAR_FS_PATH          | `./var/avatars`          | avatars location for `fs` store                 |\n+| avatar.bolt.file        | AVATAR_BOLT_FILE        | `./var/avatars.db`       | file name for `bolt` store                      |\n+| avatar.uri              | AVATAR_URI              | `./var/avatars`          | avatar store uri                                |\n+| avatar.rsz-lmt          | AVATAR_RSZ_LMT          | `0` (disabled)           | max image size for resizing avatars on save     |\n+| image.type              | IMAGE_TYPE              | `fs`                     | type of image storage, `fs`, `bolt`             |\n+| image.max-size          | IMAGE_MAX_SIZE          | `5000000`                | max size of image file                          |\n+| image.fs.path           | IMAGE_FS_PATH           | `./var/pictures`         | permanent location of images                    |\n+| image.fs.staging        | IMAGE_FS_STAGING        | `./var/pictures.staging` | staging location of images                      |\n+| image.fs.partitions     | IMAGE_FS_PARTITIONS     | `100`                    | number of image partitions                      |\n+| image.bolt.file         | IMAGE_BOLT_FILE         | `/var/pictures.db`       | images bolt file location                       |\n+| image.resize-width      | IMAGE_RESIZE_WIDTH      | `2400`                   | width of resized image                          |\n+| image.resize-height     | IMAGE_RESIZE_HEIGHT     | `900`                    | height of resized image                         |\n+| auth.ttl.jwt            | AUTH_TTL_JWT            | `5m`                     | jwt TTL                                         |\n+| auth.ttl.cookie         | AUTH_TTL_COOKIE         | `200h`                   | cookie TTL                                      |\n+| auth.send-jwt-header    | AUTH_SEND_JWT_HEADER    | `false`                  | send JWT as a header instead of cookie          |\n+| auth.same-site          | AUTH_SAME_SITE          | `default`                | set same site policy for cookies (`default`, `none`, `lax` or `strict`) |\n+| auth.google.cid         | AUTH_GOOGLE_CID         |                          | Google OAuth client ID                          |\n+| auth.google.csec        | AUTH_GOOGLE_CSEC        |                          | Google OAuth client secret                      |\n+| auth.facebook.cid       | AUTH_FACEBOOK_CID       |                          | Facebook OAuth client ID                        |\n+| auth.facebook.csec      | AUTH_FACEBOOK_CSEC      |                          | Facebook OAuth client secret                    |\n+| auth.microsoft.cid      | AUTH_MICROSOFT_CID      |                          | Microsoft OAuth client ID                       |\n+| auth.microsoft.csec     | AUTH_MICROSOFT_CSEC     |                          | Microsoft OAuth client secret                   |\n+| auth.github.cid         | AUTH_GITHUB_CID         |                          | GitHub OAuth client ID                          |\n+| auth.github.csec        | AUTH_GITHUB_CSEC        |                          | GitHub OAuth client secret                      |\n+| auth.twitter.cid        | AUTH_TWITTER_CID        |                          | Twitter Consumer API Key                        |\n+| auth.twitter.csec       | AUTH_TWITTER_CSEC       |                          | Twitter Consumer API Secret key                 |\n+| auth.patreon.cid        | AUTH_PATREON_CID        |                          | Patreon OAuth Client ID                         |\n+| auth.patreon.csec       | AUTH_PATREON_CSEC       |                          | Patreon OAuth Client Secret                     |\n+| auth.telegram           | AUTH_TELEGRAM           |                          | Enable Telegram auth (telegram.token must be present) |\n+| auth.yandex.cid         | AUTH_YANDEX_CID         |                          | Yandex OAuth client ID                          |\n+| auth.yandex.csec        | AUTH_YANDEX_CSEC        |                          | Yandex OAuth client secret                      |\n+| auth.dev                | AUTH_DEV                | `false`                  | local OAuth2 server, development mode only      |\n+| auth.anon               | AUTH_ANON               | `false`                  | enable anonymous login                          |\n+| auth.email.enable       | AUTH_EMAIL_ENABLE       | `false`                  | enable auth via email                           |\n+| auth.email.from         | AUTH_EMAIL_FROM         |                          | email from                                      |\n+| auth.email.subj         | AUTH_EMAIL_SUBJ         | `remark42 confirmation`  | email subject                                   |\n+| auth.email.content-type | AUTH_EMAIL_CONTENT_TYPE | `text/html`              | email content type                              |\n+| auth.email.template     | AUTH_EMAIL_TEMPLATE     | none (predefined)        | custom email message template file              |\n+| notify.users            | NOTIFY_USERS            | none                     | type of user notifications (Telegram, email)    |\n+| notify.admins           | NOTIFY_ADMINS           | none                     | type of admin notifications (Telegram, Slack, webhook and/or email) |\n+| notify.queue            | NOTIFY_QUEUE            | `100`                    | size of notification queue                      |\n+| notify.telegram.chan    | NOTIFY_TELEGRAM_CHAN    |                          | Telegram channel                                |\n+| notify.slack.token      | NOTIFY_SLACK_TOKEN      |                          | Slack token                                     |\n+| notify.slack.chan       | NOTIFY_SLACK_CHAN       | `general`                | Slack channel                                   |\n+| notify.webhook.url      | NOTIFY_WEBHOOK_URL      |                          | Webhook notification URL                        |\n+| notify.webhook.template | NOTIFY_WEBHOOK_TEMPLATE | `{\"text\": \"{{.Text}}\"}`  | Webhook payload template                        |\n+| notify.webhook.headers  | NOTIFY_WEBHOOK_HEADERS  |                          | HTTP header in format Header1:Value1,Header2:Value2,...|\n+| notify.webhook.timeout  | NOTIFY_WEBHOOK_TIMEOUT  | `5s`                     | Webhook connection timeout                      |\n+| notify.email.fromAddress| NOTIFY_EMAIL_FROM       |                          | from email address                              |\n+| notify.email.verification_subj | NOTIFY_EMAIL_VERIFICATION_SUBJ | `Email verification` | verification message subject          |\n+| telegram.token          | TELEGRAM_TOKEN          |                          | Telegram token (used for auth and Telegram notifications) |\n+| telegram.timeout        | TELEGRAM_TIMEOUT        | `5s`                     | Telegram connection timeout                     |\n+| smtp.host               | SMTP_HOST               |                          | SMTP host                                       |\n+| smtp.port               | SMTP_PORT               |                          | SMTP port                                       |\n+| smtp.username           | SMTP_USERNAME           |                          | SMTP user name                                  |\n+| smtp.password           | SMTP_PASSWORD           |                          | SMTP password                                   |\n+| smtp.tls                | SMTP_TLS                |                          | enable TLS for SMTP                             |\n+| smtp.timeout            | SMTP_TIMEOUT            | `10s`                    | SMTP TCP connection timeout                     |\n+| ssl.type                | SSL_TYPE                | none                     | `none`-HTTP, `static`-HTTPS, `auto`-HTTPS + le  |\n+| ssl.port                | SSL_PORT                | `8443`                   | port for HTTPS server                           |\n+| ssl.cert                | SSL_CERT                |                          | path to cert.pem file                           |\n+| ssl.key                 | SSL_KEY                 |                          | path to key.pem file                            |\n+| ssl.acme-location       | SSL_ACME_LOCATION       | `./var/acme`             | dir where obtained le-certs will be stored      |\n+| ssl.acme-email          | SSL_ACME_EMAIL          |                          | admin email for receiving notifications from LE |\n+| max-comment             | MAX_COMMENT_SIZE        | `2048`                   | comment's size limit                            |\n+| max-votes               | MAX_VOTES               | `-1`                     | votes limit per comment, `-1` - unlimited       |\n+| votes-ip                | VOTES_IP                | `false`                  | restrict votes from the same IP                 |\n+| anon-vote               | ANON_VOTE               | `false`                  | allow voting for anonymous users, require VOTES_IP to be enabled as well |\n+| votes-ip-time           | VOTES_IP_TIME           | `5m`                     | same IP vote restriction time, `0s` - unlimited |\n+| low-score               | LOW_SCORE               | `-5`                     | low score threshold                             |\n+| critical-score          | CRITICAL_SCORE          | `-10`                    | critical score threshold                        |\n+| positive-score          | POSITIVE_SCORE          | `false`                  | restricts comment's score to be only positive   |\n+| restricted-words        | RESTRICTED_WORDS        |                          | words banned in comments (can use `*`), _multi_ |\n+| restricted-names        | RESTRICTED_NAMES        |                          | names prohibited to use by the user, _multi_    |\n+| edit-time               | EDIT_TIME               | `5m`                     | edit window                                     |\n+| admin-edit              | ADMIN_EDIT              | `false`                  | unlimited edit for admins                       |\n+| read-age                | READONLY_AGE            |                          | read-only age of comments, days                 |\n+| image-proxy.http2https  | IMAGE_PROXY_HTTP2HTTPS  | `false`                  | enable HTTP->HTTPS proxy for images             |\n+| image-proxy.cache-external | IMAGE_PROXY_CACHE_EXTERNAL | `false`            | enable caching external images to current image storage |\n+| emoji                   | EMOJI                   | `false`                  | enable emoji support                            |\n+| simple-view             | SIMPLE_VIEW             | `false`                  | minimized UI with basic info only               |\n+| proxy-cors              | PROXY_CORS              | `false`                  | disable internal CORS and delegate it to proxy  |\n+| allowed-hosts           | ALLOWED_HOSTS           | enable all               | limit hosts/sources allowed to embed comments   |\n+| address                 | REMARK_ADDRESS          | all interfaces           | web server listening address                    |\n+| port                    | REMARK_PORT             | `8080`                   | web server port                                 |\n+| web-root                | REMARK_WEB_ROOT         | `./web`                  | web server root directory                       |\n+| update-limit            | UPDATE_LIMIT            | `0.5`                    | updates/sec limit                               |\n+| subscribers-only        | SUBSCRIBERS_ONLY        | `false`                  | enable commenting only for Patreon subscribers  |\n+| admin-passwd            | ADMIN_PASSWD            | none (disabled)          | password for `admin` basic auth                 |\n+| dbg                     | DEBUG                   | `false`                  | debug mode                                      |\n+\n+- command line parameters are long-form `--<key>=value`, i.e. `--site=https://demo.remark42.com`\n+- _multi_ parameters separated by `,` in the environment or repeated with command line key, like `--site=s1 --site=s2 ...`\n+- _required_ parameters have to be presented in the environment or provided in the command line\n+\n+### Deprecated parameters\n+\n+The following list of command-line options is deprecated and might be removed in next major release after the version in which they were deprecated. After Remark42 version update, please check the startup log once for deprecation warning messages to avoid trouble with unrecognized command-line options in the future.\n+\n+<details>\n+<summary>Deprecated options</summary>\n+\n+| Command line       | Replacement   | Environment        | Replacement   | Default | Description    | Deprecation version |\n+| ------------------ | ------------- | ------------------ | ------------- | ------- | -------------- | ------------------- |\n+| auth.email.host    | smtp.host     | AUTH_EMAIL_HOST    | SMTP_HOST     |         | smtp host      | 1.5.0               |\n+| auth.email.port    | smtp.port     | AUTH_EMAIL_PORT    | SMTP_PORT     |         | smtp port      | 1.5.0               |\n+| auth.email.user    | smtp.username | AUTH_EMAIL_USER    | SMTP_USERNAME |         | smtp user name | 1.5.0               |\n+| auth.email.passwd  | smtp.password | AUTH_EMAIL_PASSWD  | SMTP_PASSWORD |         | smtp password  | 1.5.0               |\n+| auth.email.tls     | smtp.tls      | AUTH_EMAIL_TLS     | SMTP_TLS      | `false` | enable TLS     | 1.5.0               |\n+| auth.email.timeout | smtp.timeout  | AUTH_EMAIL_TIMEOUT | SMTP_TIMEOUT  | `10s`   | smtp timeout   | 1.5.0               |\n+| img-proxy          | image-proxy.http2https | IMG_PROXY | IMAGE_PROXY_HTTP2HTTPS | `false` | enable HTTP->HTTPS proxy for images | 1.5.0 |\n+| notify.type        | notify.admins, notify.users | NOTIFY_TYPE | NOTIFY_ADMINS, NOTIFY_USERS | |   | 1.9.0               |\n+| notify.email.notify_admin | notify.admins=email | NOTIFY_EMAIL_ADMIN | NOTIFY_ADMINS=email | |     | 1.9.0               |\n+| notify.telegram.token | telegram.token | NOTIFY_TELEGRAM_TOKEN | TELEGRAM_TOKEN | | Telegram token | 1.9.0               |\n+| notify.telegram.timeout | telegram.timeout | NOTIFY_TELEGRAM_TIMEOUT | TELEGRAM_TIMEOUT | | Telegram timeout | 1.9.0     |\n+\n+</details>"
    },
    {
      "sha": "9c8357fbf1758aa7a5f32c87577a0e98ba88d898",
      "filename": "site/src/docs/nav.json",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/c222b8a2ba7da7a7a5251f2912bd69f665ae3764/site/src/docs/nav.json",
      "raw_url": "https://github.com/umputun/remark42/raw/c222b8a2ba7da7a7a5251f2912bd69f665ae3764/site/src/docs/nav.json",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/nav.json?ref=c222b8a2ba7da7a7a5251f2912bd69f665ae3764",
      "patch": "@@ -19,6 +19,10 @@\n \t\t\"title\": \"Frontend\",\n \t\t\"href\": \"/configuration/frontend/\"\n \t  },\n+\t  {\n+\t\t\"title\": \"CLI parameters\",\n+\t\t\"href\": \"/configuration/parameters/\"\n+\t  },\n \t  {\n \t\t\"title\": \"Authorization\",\n \t\t\"href\": \"/configuration/authorization/\""
    }
  ]
}
