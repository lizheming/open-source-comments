{
  "sha": "b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
  "node_id": "C_kwDOBtgov9oAKGI0N2I2YzRmNTYxNWYxOGNlZjBlYjRjOWU1YmZiZjQwZjM1ZGQ4Y2Y",
  "commit": {
    "author": {
      "name": "Pavel Mineev",
      "email": "pavel@mineev.me",
      "date": "2022-08-20T06:02:56Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2022-08-20T17:58:40Z"
    },
    "message": "add api sdk",
    "tree": {
      "sha": "45f6fb4faa2eb5d6a1c8a6e98721d3dec560d59f",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/45f6fb4faa2eb5d6a1c8a6e98721d3dec560d59f"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
  "html_url": "https://github.com/umputun/remark42/commit/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/comments",
  "author": {
    "login": "akellbl4",
    "id": 2330682,
    "node_id": "MDQ6VXNlcjIzMzA2ODI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2330682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/akellbl4",
    "html_url": "https://github.com/akellbl4",
    "followers_url": "https://api.github.com/users/akellbl4/followers",
    "following_url": "https://api.github.com/users/akellbl4/following{/other_user}",
    "gists_url": "https://api.github.com/users/akellbl4/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/akellbl4/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/akellbl4/subscriptions",
    "organizations_url": "https://api.github.com/users/akellbl4/orgs",
    "repos_url": "https://api.github.com/users/akellbl4/repos",
    "events_url": "https://api.github.com/users/akellbl4/events{/privacy}",
    "received_events_url": "https://api.github.com/users/akellbl4/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "75427df7de4161fea0c3af8607e44c2df025ce64",
      "url": "https://api.github.com/repos/umputun/remark42/commits/75427df7de4161fea0c3af8607e44c2df025ce64",
      "html_url": "https://github.com/umputun/remark42/commit/75427df7de4161fea0c3af8607e44c2df025ce64"
    }
  ],
  "stats": {
    "total": 2931,
    "additions": 2798,
    "deletions": 133
  },
  "files": [
    {
      "sha": "acccc76c703939a213dac965c77de69c8c57a4b4",
      "filename": ".github/workflows/ci-build.yml",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/.github%2Fworkflows%2Fci-build.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/.github%2Fworkflows%2Fci-build.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/.github%2Fworkflows%2Fci-build.yml?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -8,16 +8,17 @@ on:\n     paths:\n       - \".github/workflows/ci-build.yml\"\n       - \"backend/**\"\n-      - \"frontend/**\"\n+      - \"frontend/apps/**\"\n       - \".dockerignore\"\n       - \"docker-init.sh\"\n       - \"Dockerfile\"\n       - \"!**.md\"\n+      - \"!frontend/packages/**\"\n   pull_request:\n     paths:\n       - \".github/workflows/ci-build.yml\"\n       - \"backend/**\"\n-      - \"frontend/**\"\n+      - \"frontend/apps/**\"\n       - \".dockerignore\"\n       - \"docker-init.sh\"\n       - \"Dockerfile\""
    },
    {
      "sha": "9ca0102a146f32611abab9b784d035c77fc34999",
      "filename": ".github/workflows/ci-frontend-api.yml",
      "status": "added",
      "additions": 153,
      "deletions": 0,
      "changes": 153,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/.github%2Fworkflows%2Fci-frontend-api.yml",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/.github%2Fworkflows%2Fci-frontend-api.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/.github%2Fworkflows%2Fci-frontend-api.yml?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,153 @@\n+name: \"@remark42/api\"\n+\n+on:\n+  push:\n+    branches:\n+      - master\n+    paths:\n+      - \".github/workflows/ci-frontend-api.yml\"\n+      - \"frontend/packages/**\"\n+      - \"!**.md\"\n+  pull_request:\n+    paths:\n+      - \".github/workflows/ci-frontend-api.yml\"\n+      - \"frontend/packages/**\"\n+      - \"!**.md\"\n+\n+jobs:\n+  type-check:\n+    name: Type check\n+    runs-on: ubuntu-latest\n+    strategy:\n+      matrix:\n+        node: [16.15.1]\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Install node\n+        uses: actions/setup-node@v3\n+        with:\n+          node-version: ${{ matrix.node }}\n+\n+      - name: Install pnpm\n+        uses: pnpm/action-setup@v2.0.1\n+        id: pnpm-install\n+        with:\n+          version: 7\n+          run_install: false\n+\n+      - name: Get pnpm store directory\n+        id: pnpm-cache\n+        run: |\n+          echo \"::set-output name=pnpm_cache_dir::$(pnpm store path)\"\n+\n+      - name: Setup pnpm cache\n+        uses: actions/cache@v3\n+        with:\n+          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}\n+          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-pnpm-store-\n+\n+      - name: Install dependencies\n+        run: pnpm i\n+        working-directory: ./frontend\n+\n+      - name: Run type check\n+        run: pnpm type-check:api\n+        working-directory: ./frontend\n+\n+  lint:\n+    name: Lint\n+    runs-on: ubuntu-latest\n+    strategy:\n+      matrix:\n+        node: [16.15.1]\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Install node\n+        uses: actions/setup-node@v3\n+        with:\n+          node-version: ${{ matrix.node }}\n+\n+      - name: Install pnpm\n+        uses: pnpm/action-setup@v2.0.1\n+        id: pnpm-install\n+        with:\n+          version: 7\n+          run_install: false\n+\n+      - name: Get pnpm store directory\n+        id: pnpm-cache\n+        run: |\n+          echo \"::set-output name=pnpm_cache_dir::$(pnpm store path)\"\n+\n+      - name: Setup pnpm cache\n+        uses: actions/cache@v3\n+        with:\n+          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}\n+          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-pnpm-store-\n+\n+      - name: Install dependencies\n+        run: pnpm i\n+        working-directory: ./frontend\n+\n+      - name: Run linters\n+        run: pnpm lint:api\n+        working-directory: ./frontend/\n+\n+  test:\n+    name: Tests & Coverage\n+    runs-on: ubuntu-latest\n+    strategy:\n+      matrix:\n+        node: [16.15.1]\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v3\n+\n+      - name: Install node\n+        uses: actions/setup-node@v3\n+        with:\n+          node-version: ${{ matrix.node }}\n+\n+      - name: Install pnpm\n+        uses: pnpm/action-setup@v2.0.1\n+        id: pnpm-install\n+        with:\n+          version: 7\n+          run_install: false\n+\n+      - name: Get pnpm store directory\n+        id: pnpm-cache\n+        run: |\n+          echo \"::set-output name=pnpm_cache_dir::$(pnpm store path)\"\n+\n+      - name: Setup pnpm cache\n+        uses: actions/cache@v3\n+        with:\n+          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}\n+          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-pnpm-store-\n+\n+      - name: Install dependencies\n+        run: pnpm i\n+        working-directory: ./frontend\n+\n+      - name: Test & Coverage\n+        run: pnpm coverage:api\n+        working-directory: ./frontend\n+\n+      - name: Submit coverage\n+        run: ${{ github.workspace }}/frontend/apps/remark42/node_modules/.bin/codecov\n+        env:\n+          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}"
    },
    {
      "sha": "d8b8f5d0725f3e0f2692d5e38b87f5e46070816a",
      "filename": "frontend/package.json",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackage.json",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackage.json",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackage.json?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -10,10 +10,15 @@\n   ],\n   \"scripts\": {\n     \"prepare\": \"if [ -z \\\"$CI\\\" ]; then cd .. && husky install frontend/.husky; else echo \\\"Skip Husky Hooks\\\"; fi\",\n-    \"lint-staged\": \"lint-staged\"\n+    \"lint-staged\": \"lint-staged\",\n+    \"test:api\": \"turbo run test --filter=@remark42/api\",\n+    \"coverage:api\": \"turbo run coverage --filter=@remark42/api\",\n+    \"type-check:api\": \"turbo run type-check --filter=@remark42/api\",\n+    \"lint:api\": \"turbo run lint --filter=@remark42/api\"\n   },\n   \"devDependencies\": {\n     \"husky\": \"^8.0.1\",\n-    \"lint-staged\": \"^13.0.3\"\n+    \"lint-staged\": \"^13.0.3\",\n+    \"turbo\": \"^1.4.3\"\n   }\n }"
    },
    {
      "sha": "009af5438f1771c038cc23077399282d224aedb2",
      "filename": "frontend/packages/api/.eslintignore",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2F.eslintignore",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2F.eslintignore",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2F.eslintignore?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,2 @@\n+dist\n+coverage"
    },
    {
      "sha": "78bb8a1524640362a9ad78915755af287da39d4e",
      "filename": "frontend/packages/api/.eslintrc.cjs",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2F.eslintrc.cjs",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2F.eslintrc.cjs",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2F.eslintrc.cjs?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,22 @@\n+module.exports = {\n+\tenv: {\n+\t\tbrowser: true,\n+\t\tes2021: true,\n+\t\tnode: true,\n+\t},\n+\textends: [\n+\t\t'eslint:recommended',\n+\t\t'plugin:@typescript-eslint/recommended',\n+\t\t'plugin:@typescript-eslint/recommended-requiring-type-checking',\n+\t\t'plugin:@typescript-eslint/strict',\n+\t\t'plugin:prettier/recommended',\n+\t],\n+\toverrides: [],\n+\tparser: '@typescript-eslint/parser',\n+\tparserOptions: {\n+\t\tecmaVersion: 'latest',\n+\t\tsourceType: 'module',\n+\t\tproject: './tsconfig.eslint.json',\n+\t},\n+\tplugins: ['@typescript-eslint'],\n+}"
    },
    {
      "sha": "c189a76ee8ab8d24b8e3877f444541c9d589a1c1",
      "filename": "frontend/packages/api/.gitignore",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2F.gitignore",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2F.gitignore",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2F.gitignore?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,5 @@\n+node_modules\n+coverage\n+dist\n+**/*.js\n+**/*.d.ts\n\\ No newline at end of file"
    },
    {
      "sha": "ac21e2e6f414ec6c1eaa122265fe09d47bceb92d",
      "filename": "frontend/packages/api/.lintstagedrc.cjs",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2F.lintstagedrc.cjs",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2F.lintstagedrc.cjs",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2F.lintstagedrc.cjs?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,3 @@\n+module.exports = {\n+\t'./**/*.ts': ['pnpm lint-staged:lint'],\n+}"
    },
    {
      "sha": "a2c6d94722ab6fa2c33f58827180a929abb09669",
      "filename": "frontend/packages/api/.npmignore",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2F.npmignore",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2F.npmignore",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2F.npmignore?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,17 @@\n+coverage/**\n+dist/**\n+node_modules/**\n+src/**\n+test/**\n+.editorconfig\n+.eslintrc.cjs\n+.prettierrc\n+files.txt\n+jest.config.ts\n+pnpm-lock.yaml\n+postpublish.sh\n+prepublish.sh\n+tsconfig.common.json\n+tsconfig.dev.json\n+tsconfig.json\n+"
    },
    {
      "sha": "975215f459d25912841c943e81ca0dbd28ba5631",
      "filename": "frontend/packages/api/.nvmrc",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2F.nvmrc",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2F.nvmrc",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2F.nvmrc?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1 @@\n+16.17.0\n\\ No newline at end of file"
    },
    {
      "sha": "521053ec7275e15cc3ad3ebbb384018b5128b363",
      "filename": "frontend/packages/api/.prettierrc",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2F.prettierrc",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2F.prettierrc",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2F.prettierrc?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,6 @@\n+{\n+\t\"semi\": false,\n+\t\"printWidth\": 100,\n+\t\"quoteProps\": \"consistent\",\n+\t\"singleQuote\": true\n+}"
    },
    {
      "sha": "7d6256f4e932c7ecd807b948f312dcc1ac62f9cb",
      "filename": "frontend/packages/api/README.md",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2FREADME.md",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2FREADME.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2FREADME.md?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,11 @@\n+# @remark42/api\n+\n+Implementation of API methods for Remark42\n+\n+## Development\n+\n+- If you don't have `pnpm` installed run `npm i -g pnpm`\n+- Install dependencies `pnpm i`\n+- Run development mode with `pnpm run dev`\n+- Build lib with `pnpm run build`\n+- Run tests with `pnpm run test`"
    },
    {
      "sha": "474ce24f9fd4ed54891bb5bb26d67532e2fe22d1",
      "filename": "frontend/packages/api/clients/admin.ts",
      "status": "added",
      "additions": 134,
      "deletions": 0,
      "changes": 134,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Fclients%2Fadmin.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Fclients%2Fadmin.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Fclients%2Fadmin.ts?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,134 @@\n+import type { ClientParams, User } from './index'\n+import { API_BASE } from '../consts'\n+import { createFetcher } from '../lib/fetcher'\n+\n+export type BlockTTL = 'permanently' | '43200m' | '10080m' | '1440m'\n+export interface BlockUserResponse {\n+\tblock: boolean\n+\tsite_id: string\n+\tuser_id: string\n+}\n+\n+export function createAdminClient({ siteId, baseUrl }: ClientParams) {\n+\tconst fetcher = createFetcher(siteId, `${baseUrl}${API_BASE}`)\n+\n+\tasync function toggleUserVerification(id: string, verified: 0 | 1): Promise<void> {\n+\t\treturn fetcher.put(`/verify/${id}`, { verified })\n+\t}\n+\n+\tasync function toggleCommentPin(id: string, pinned: 0 | 1): Promise<void> {\n+\t\treturn fetcher.put(`/pin/${id}`, { pinned })\n+\t}\n+\n+\tasync function toggleCommenting(url: string, ro: 0 | 1): Promise<void> {\n+\t\treturn fetcher.put('/readonly', { url, ro })\n+\t}\n+\n+\tasync function toggleUserBlock(id: string, ttl?: BlockTTL): Promise<BlockUserResponse> {\n+\t\tconst params = ttl\n+\t\t\t? {\n+\t\t\t\t\tblock: 1,\n+\t\t\t\t\tttl: ttl === 'permanently' ? 0 : ttl,\n+\t\t\t  }\n+\t\t\t: { block: 0 }\n+\n+\t\treturn fetcher.put<BlockUserResponse>(`/user/${id}`, params)\n+\t}\n+\n+\t/**\n+\t * Request list of blocked users\n+\t */\n+\tasync function getBlockedUsers(): Promise<User[]> {\n+\t\treturn fetcher.get<User[]>('/blocked')\n+\t}\n+\n+\t/**\n+\t * Block user from commenting\n+\t * @param id user ID\n+\t * @param ttl block duration\n+\t */\n+\tasync function blockUser(id: string, ttl: BlockTTL): Promise<BlockUserResponse> {\n+\t\treturn toggleUserBlock(id, ttl)\n+\t}\n+\n+\t/**\n+\t * Unblock user from commenting\n+\t * @param id user ID\n+\t */\n+\tasync function unblockUser(id: string): Promise<BlockUserResponse> {\n+\t\treturn toggleUserBlock(id)\n+\t}\n+\n+\t/**\n+\t * Mark user as verified\n+\t * @param id user ID\n+\t */\n+\tasync function verifyUser(id: string): Promise<void> {\n+\t\treturn toggleUserVerification(id, 1)\n+\t}\n+\t/**\n+\t * Mark user as unverified\n+\t * @param id user ID\n+\t */\n+\tasync function unverifyUser(id: string): Promise<void> {\n+\t\treturn toggleUserVerification(id, 0)\n+\t}\n+\t/**\n+\t * Approve request to remove user data\n+\t * @param token token from email\n+\t */\n+\tasync function approveRemovingRequest(token: string): Promise<void> {\n+\t\treturn fetcher.get('/deleteme', { token })\n+\t}\n+\n+\t/**\n+\t * Mark comment as pinned\n+\t * @param id comment ID\n+\t */\n+\tasync function pinComment(id: string): Promise<void> {\n+\t\treturn toggleCommentPin(id, 1)\n+\t}\n+\t/**\n+\t * Mark comment as unpinned\n+\t * @param id comment ID\n+\t */\n+\tasync function unpinComment(id: string): Promise<void> {\n+\t\treturn toggleCommentPin(id, 0)\n+\t}\n+\t/**\n+\t * Remove comment\n+\t * @param url page URL\n+\t * @param id comment ID\n+\t */\n+\tasync function removeComment(url: string, id: string): Promise<void> {\n+\t\treturn fetcher.delete(`/comment/${id}`, { url })\n+\t}\n+\t/**\n+\t * Enable commenting on a page\n+\t * @param url page URL\n+\t */\n+\tasync function enableCommenting(url: string) {\n+\t\treturn toggleCommenting(url, 1)\n+\t}\n+\t/**\n+\t * Disable commenting on a page\n+\t * @param url page URL\n+\t */\n+\tasync function disableCommenting(url: string) {\n+\t\treturn toggleCommenting(url, 0)\n+\t}\n+\n+\treturn {\n+\t\tgetBlockedUsers,\n+\t\tblockUser,\n+\t\tunblockUser,\n+\t\tverifyUser,\n+\t\tunverifyUser,\n+\t\tapproveRemovingRequest,\n+\t\tpinComment,\n+\t\tunpinComment,\n+\t\tremoveComment,\n+\t\tenableCommenting,\n+\t\tdisableCommenting,\n+\t}\n+}"
    },
    {
      "sha": "75631328e5d74d7b74558004ce24dc4dac6a16fa",
      "filename": "frontend/packages/api/clients/auth.ts",
      "status": "added",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Fclients%2Fauth.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Fclients%2Fauth.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Fclients%2Fauth.ts?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,47 @@\n+import type { ClientParams, User } from './index'\n+import { createFetcher } from '../lib/fetcher'\n+\n+export function createAuthClient({ siteId, baseUrl }: ClientParams) {\n+\tconst fetcher = createFetcher(siteId, `${baseUrl}/auth`)\n+\n+\tasync function anonymous(user: string): Promise<User> {\n+\t\treturn fetcher.get<User>('/anonymous/login', { user, aud: siteId })\n+\t}\n+\n+\tasync function email(email: string, username: string): Promise<(token: string) => Promise<User>> {\n+\t\tconst EMAIL_SIGNIN_ENDPOINT = '/email/login'\n+\n+\t\tawait fetcher.get<undefined>(EMAIL_SIGNIN_ENDPOINT, { address: email, user: username })\n+\n+\t\treturn function tokenVerification(token: string): Promise<User> {\n+\t\t\treturn fetcher.get<User>(EMAIL_SIGNIN_ENDPOINT, { token })\n+\t\t}\n+\t}\n+\n+\tasync function telegram() {\n+\t\tconst TELEGRAM_SIGNIN_ENDPOINT = '/telegram/login'\n+\n+\t\tconst { bot, token } = await fetcher.get<{ bot: string; token: string }>(\n+\t\t\tTELEGRAM_SIGNIN_ENDPOINT\n+\t\t)\n+\n+\t\treturn {\n+\t\t\tbot,\n+\t\t\ttoken,\n+\t\t\tverify() {\n+\t\t\t\treturn fetcher.get(TELEGRAM_SIGNIN_ENDPOINT, { token })\n+\t\t\t},\n+\t\t}\n+\t}\n+\n+\tasync function logout(): Promise<void> {\n+\t\treturn fetcher.get<void>('/logout')\n+\t}\n+\n+\treturn {\n+\t\tanonymous,\n+\t\temail,\n+\t\ttelegram,\n+\t\tlogout,\n+\t}\n+}"
    },
    {
      "sha": "53647888de8b5ca46a7156e4eb67e18a9f4ddc66",
      "filename": "frontend/packages/api/clients/index.ts",
      "status": "added",
      "additions": 55,
      "deletions": 0,
      "changes": 55,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Fclients%2Findex.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Fclients%2Findex.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Fclients%2Findex.ts?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,55 @@\n+import { createAdminClient } from './admin'\n+import { createAuthClient } from './auth'\n+import { createPublicClient } from './public'\n+\n+export interface User {\n+\tid: string\n+\tname: string\n+\t/** url to avatar */\n+\tpicture: string\n+\tadmin: boolean\n+\tblock: boolean\n+\tverified: boolean\n+\t/** subscription to email notification */\n+\temail_subscription?: boolean\n+\t/** users with Patreon auth can have paid status */\n+\tpaid_sub?: boolean\n+}\n+\n+export type OAuthProvider =\n+\t| 'facebook'\n+\t| 'twitter'\n+\t| 'google'\n+\t| 'yandex'\n+\t| 'github'\n+\t| 'microsoft'\n+\t| 'patreon'\n+\t| 'telegram'\n+\t| 'dev'\n+export type FormProvider = 'email' | 'anonymous'\n+export type Provider = OAuthProvider | FormProvider\n+\n+export interface ClientParams {\n+\tsiteId: string\n+\tbaseUrl: string\n+}\n+\n+export interface Client {\n+\tadmin: ReturnType<typeof createAdminClient>\n+\tauth: ReturnType<typeof createAuthClient>\n+\tpublic: ReturnType<typeof createPublicClient>\n+}\n+\n+let client: Client | undefined\n+\n+export function createClient(params: ClientParams): Client {\n+\tif (client === undefined) {\n+\t\tclient = {\n+\t\t\tauth: createAuthClient(params),\n+\t\t\tadmin: createAdminClient(params),\n+\t\t\tpublic: createPublicClient(params),\n+\t\t}\n+\t}\n+\n+\treturn client\n+}"
    },
    {
      "sha": "1a8e672eb592d42aa41141a161d2a602047407b0",
      "filename": "frontend/packages/api/clients/public.ts",
      "status": "added",
      "additions": 153,
      "deletions": 0,
      "changes": 153,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Fclients%2Fpublic.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Fclients%2Fpublic.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Fclients%2Fpublic.ts?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,153 @@\n+import type { ClientParams, Provider, User } from './index'\n+import { createFetcher } from '../lib/fetcher'\n+import { API_BASE } from '../consts'\n+\n+export interface Config {\n+\tversion: string\n+\tauth_providers: Provider[]\n+\tedit_duration: number\n+\tmax_comment_size: number\n+\tadmins: string[]\n+\tadmin_email: string\n+\tlow_score: number\n+\tcritical_score: number\n+\tpositive_score: boolean\n+\treadonly_age: number\n+\tmax_image_size: number\n+\tsimple_view: boolean\n+\tanon_vote: boolean\n+\temail_notifications: boolean\n+\ttelegram_bot_username: string\n+\temoji_enabled: boolean\n+}\n+\n+export interface Comment {\n+\t/** comment id */\n+\tid: string\n+\t/** parent id */\n+\tpid: string\n+\t/** comment text, after md processing */\n+\ttext: string\n+\t/** original comment text */\n+\torig?: string\n+\tuser: User\n+\tlocator: {\n+\t\t/** site id */\n+\t\tsite: string\n+\t\t/** page url */\n+\t\turl: string\n+\t}\n+\tscore: number\n+\tvoted_ips: { Timestamp: string; Value: boolean }[]\n+\t/**\n+\t * vote delta,\n+\t * if user hasn't voted delta will be 0,\n+\t * -1/+1 for downvote/upvote\n+\t */\n+\tvote: 0 | 1 | -1\n+\t/** comment controversy */\n+\tcontroversy?: number\n+\t/** pointer to have empty default in json response */\n+\tedit?: {\n+\t\ttime: string\n+\t\tsummary: string\n+\t}\n+\t/** timestamp */\n+\ttime: string\n+\tpin?: boolean\n+\tdelete?: boolean\n+\t/** page title */\n+\ttitle?: string\n+}\n+\n+export interface CommentsTree {\n+\tcomment: Comment\n+\treplies: Comment[]\n+}\n+\n+export interface CommentPayload {\n+\ttitle?: string\n+\tpid?: string\n+\ttext: string\n+}\n+\n+export type Sort = '-active' | '+active'\n+export interface GetUserCommentsParams {\n+\turl: string\n+\tsort?: Sort\n+\tlimit?: number\n+\tskip?: number\n+}\n+export type Vote = -1 | 1\n+\n+export function createPublicClient({ siteId: site, baseUrl }: ClientParams) {\n+\tconst fetcher = createFetcher(site, `${baseUrl}${API_BASE}`)\n+\n+\t/**\n+\t * Get server config\n+\t */\n+\tasync function getConfig(): Promise<Config> {\n+\t\treturn fetcher.get('/config')\n+\t}\n+\n+\t/**\n+\t * Get current authorized user\n+\t */\n+\tasync function getUser(): Promise<User | null> {\n+\t\treturn fetcher.get<User | null>('/user').catch(() => null)\n+\t}\n+\n+\t/**\n+\t * Get comments\n+\t */\n+\tasync function getComments(url: string): Promise<CommentsTree>\n+\tasync function getComments(params: GetUserCommentsParams): Promise<Comment[]>\n+\tasync function getComments(\n+\t\tparams: string | GetUserCommentsParams\n+\t): Promise<Comment[] | CommentsTree> {\n+\t\tif (typeof params === 'string') {\n+\t\t\treturn fetcher.get('/comments', { url: params })\n+\t\t}\n+\n+\t\treturn fetcher.get<CommentsTree>('/find', { ...params, format: 'tree' })\n+\t}\n+\n+\t/**\n+\t * Add new comment\n+\t */\n+\tasync function addComment(url: string, payload: CommentPayload): Promise<Comment> {\n+\t\tconst locator = { site, url }\n+\t\treturn fetcher.post('/comment', {}, { ...payload, locator })\n+\t}\n+\n+\t/**\n+\t * Update comment\n+\t */\n+\tasync function updateComment(url: string, id: string, text: string): Promise<Comment> {\n+\t\treturn fetcher.put(`/comment/${id}`, { url }, { text })\n+\t}\n+\n+\t/**\n+\t * Remove comment on a page\n+\t */\n+\tasync function removeComment(url: string, id: string): Promise<void> {\n+\t\treturn fetcher.put(`/comment/${id}`, { url }, { delete: true })\n+\t}\n+\n+\t/**\n+\t * Vote for a comment\n+\t */\n+\tasync function vote(url: string, id: string, vote: Vote): Promise<{ id: string; vote: number }> {\n+\t\treturn fetcher.put<{ id: string; vote: number }>(`/vote/${id}`, { url, vote })\n+\t}\n+\n+\treturn {\n+\t\tgetConfig,\n+\t\tgetUser,\n+\t\tgetComments,\n+\t\taddComment,\n+\t\tupdateComment,\n+\t\tremoveComment,\n+\t\tvote,\n+\t}\n+}"
    },
    {
      "sha": "7ea6b1e5772222816b98547584433887b05d4e12",
      "filename": "frontend/packages/api/consts.ts",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Fconsts.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Fconsts.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Fconsts.ts?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,11 @@\n+/** Base path to API */\n+export const API_BASE = '/api/v1'\n+\n+/** Header name for JWT token */\n+export const JWT_HEADER = 'X-JWT'\n+\n+/** Header name for XSRF token */\n+export const XSRF_HEADER = 'X-XSRF-TOKEN'\n+\n+/** Cookie field with XSRF token */\n+export const XSRF_COOKIE = 'XSRF-TOKEN'"
    },
    {
      "sha": "fe46378446cf8884d557f67cc110b44fb1bfaf0e",
      "filename": "frontend/packages/api/index.ts",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Findex.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Findex.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Findex.ts?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,4 @@\n+export * from './clients'\n+export * from './clients/admin'\n+export * from './clients/auth'\n+export * from './clients/public'"
    },
    {
      "sha": "cf8464314817c3365c79e71c7696cc2bb1b31c1b",
      "filename": "frontend/packages/api/lib/cookies.ts",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Flib%2Fcookies.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Flib%2Fcookies.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Flib%2Fcookies.ts?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,11 @@\n+export function getCookie(name: string): string | undefined {\n+\tconst matches = document.cookie.match(\n+\t\tnew RegExp(`(?:^|; )${name.replace(/([.$?*|{}()[\\]\\\\/+^])/g, '\\\\$1')}=([^;]*)`)\n+\t)\n+\n+\tif (matches === null) {\n+\t\treturn\n+\t}\n+\n+\treturn decodeURIComponent(matches[1])\n+}"
    },
    {
      "sha": "bdaf4e77b83ea79cae268907cac723de4e9cb632",
      "filename": "frontend/packages/api/lib/fetcher.ts",
      "status": "added",
      "additions": 94,
      "deletions": 0,
      "changes": 94,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Flib%2Ffetcher.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Flib%2Ffetcher.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Flib%2Ffetcher.ts?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,94 @@\n+import { JWT_HEADER, XSRF_COOKIE, XSRF_HEADER } from '../consts'\n+import { getCookie } from '../lib/cookies'\n+\n+export type QueryParams = Record<string, string | number | string[] | number[] | undefined>\n+export type Payload = BodyInit | Record<string, unknown> | null\n+export type BodylessMethod = <T>(url: string, query?: QueryParams) => Promise<T>\n+export type BodyMethod = <T>(url: string, query?: QueryParams, body?: Payload) => Promise<T>\n+export interface Client {\n+\tget: BodylessMethod\n+\tput: BodyMethod\n+\tpost: BodyMethod\n+\tdelete: BodylessMethod\n+}\n+\n+/** JWT token received from server and will be send by each request, if it present */\n+let token: string | undefined\n+\n+export const createFetcher = (site: string, baseUrl: string): Client => {\n+\tconst client = {\n+\t\tget: <T>(uri: string, query?: QueryParams): Promise<T> => request<T>('get', uri, query),\n+\t\tput: <T>(uri: string, query?: QueryParams, body?: Payload): Promise<T> =>\n+\t\t\trequest<T>('put', uri, query, body),\n+\t\tpost: <T>(uri: string, query?: QueryParams, body?: Payload): Promise<T> =>\n+\t\t\trequest<T>('post', uri, query, body),\n+\t\tdelete: <T>(uri: string, query?: QueryParams, body?: Payload): Promise<T> =>\n+\t\t\trequest<T>('delete', uri, query, body),\n+\t}\n+\n+\t/**\n+\t * Fetcher is abstraction on top of fetch\n+\t *\n+\t * @method - a string to set http method\n+\t * @uri – uri to API endpoint\n+\t * @query - collection of query params. They will be concatenated to URL. `siteId` will be added automatically.\n+\t * @body - data for sending to the server. If you pass object it will be stringified. If you pass form data it will be sent as is. Content type headers will be added automatically.\n+\t */\n+\tasync function request<T>(\n+\t\tmethod: string,\n+\t\turi: string,\n+\t\tquery: QueryParams = {},\n+\t\tbody?: Payload\n+\t): Promise<T> {\n+\t\tconst searchParams = new URLSearchParams({ site, ...query })\n+\t\tsearchParams.sort()\n+\t\tconst url = `${baseUrl}${uri}?${searchParams.toString()}`\n+\t\tconst headers = new Headers()\n+\t\tconst params: RequestInit = { method, headers }\n+\n+\t\t// Save token in memory and pass it into headers in case if storing cookies is disabled\n+\t\tif (token) {\n+\t\t\theaders.set(JWT_HEADER, token)\n+\t\t}\n+\n+\t\t// An HTTP header cannot be empty.\n+\t\t// Although some webservers allow this (nginx, Apache), others answer 400 Bad Request (lighttpd).\n+\t\tconst xsrfToken = getCookie(XSRF_COOKIE)\n+\t\tif (typeof xsrfToken === 'string') {\n+\t\t\theaders.set(XSRF_HEADER, xsrfToken)\n+\t\t}\n+\n+\t\tif (typeof body === 'object' && body !== null && !(body instanceof FormData)) {\n+\t\t\theaders.set('Content-Type', 'application/json')\n+\t\t\tparams.body = JSON.stringify(body)\n+\t\t} else {\n+\t\t\tparams.body = body\n+\t\t}\n+\n+\t\treturn fetch(url, params).then<T>((res) => {\n+\t\t\tif ([401, 403].includes(res.status)) {\n+\t\t\t\ttoken = undefined\n+\n+\t\t\t\treturn Promise.reject('Unauthorized')\n+\t\t\t}\n+\n+\t\t\ttoken = res.headers.get(JWT_HEADER) ?? token\n+\n+\t\t\treturn res\n+\t\t\t\t.text()\n+\t\t\t\t.catch(Object)\n+\t\t\t\t.then((data: string) => {\n+\t\t\t\t\tif (res.status < 200 || res.status > 299) {\n+\t\t\t\t\t\treturn Promise.reject(data)\n+\t\t\t\t\t}\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\treturn JSON.parse(data) as T\n+\t\t\t\t\t} catch (e) {\n+\t\t\t\t\t\treturn data as unknown as T\n+\t\t\t\t\t}\n+\t\t\t\t})\n+\t\t})\n+\t}\n+\n+\treturn client\n+}"
    },
    {
      "sha": "36cd7537968f974011372f216ef508c9a5c86e14",
      "filename": "frontend/packages/api/package.json",
      "status": "added",
      "additions": 57,
      "deletions": 0,
      "changes": 57,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Fpackage.json",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Fpackage.json",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Fpackage.json?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,57 @@\n+{\n+  \"name\": \"@remark42/api\",\n+  \"version\": \"0.6.0-alpha.11\",\n+  \"description\": \"Implementation of API methods for Remark42\",\n+  \"repository\": {\n+    \"type\": \"git\",\n+    \"url\": \"git+https://github.com/umputun/remark42.git#master\"\n+  },\n+  \"bugs\": {\n+    \"url\": \"https://github.com/umputun/remark42/issues\"\n+  },\n+  \"homepage\": \"https://github.com/umputun/remark42/tree/master/frontend/packages/api#readme\",\n+  \"keywords\": [\n+    \"remark42\",\n+    \"comments\"\n+  ],\n+  \"author\": \"Paul Mineev\",\n+  \"license\": \"MIT\",\n+  \"scripts\": {\n+    \"dev\": \"tsc -w --incremental\",\n+    \"build:cjs\": \"tsc --module CommonJS\",\n+    \"build:esm\": \"tsc --module ESNext\",\n+    \"build\": \"npm-run-all cleanup --parallel build:*\",\n+    \"postpublish\": \"pnpm run cleanup\",\n+    \"cleanup\": \"rm -rf *.js *.d.ts **/*.js **/*.d.ts *.tsbuildinfo\",\n+    \"test\": \"vitest\",\n+    \"coverage\": \"vitest run --coverage\",\n+    \"lint\": \"eslint --ext .cjs,.mjs,.ts --max-warnings=0\",\n+    \"type-check\": \"tsc --noEmit\",\n+    \"lint-staged:lint\": \"eslint --fix --ext .cjs,.mjs,.ts\"\n+  },\n+  \"devDependencies\": {\n+    \"@types/node\": \"^18.0.5\",\n+    \"@typescript-eslint/eslint-plugin\": \"^5.33.1\",\n+    \"@typescript-eslint/parser\": \"^5.33.1\",\n+    \"@vitest/coverage-c8\": \"^0.22.1\",\n+    \"eslint\": \"^8.18.0\",\n+    \"eslint-config-prettier\": \"^8.5.0\",\n+    \"eslint-plugin-prettier\": \"^4.2.1\",\n+    \"jsdom\": \"^20.0.0\",\n+    \"msw\": \"^0.44.1\",\n+    \"npm-run-all\": \"^4.1.5\",\n+    \"prettier\": \"^2.7.1\",\n+    \"ts-node\": \"^10.9.1\",\n+    \"tslib\": \"^2.4.0\",\n+    \"typescript\": \"^4.7.4\",\n+    \"vitest\": \"^0.22.1\",\n+    \"whatwg-fetch\": \"^3.6.2\"\n+  },\n+  \"type\": \"module\",\n+  \"files\": [\n+    \"./*.js\",\n+    \"./*.d.ts\",\n+    \"./clients/*.d.ts\",\n+    \"./lib/*.d.ts\"\n+  ]\n+}"
    },
    {
      "sha": "f672597ee77f3bef940e14d3a84921019c1880be",
      "filename": "frontend/packages/api/tests/clients/admin.test.ts",
      "status": "added",
      "additions": 105,
      "deletions": 0,
      "changes": 105,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftests%2Fclients%2Fadmin.test.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftests%2Fclients%2Fadmin.test.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Ftests%2Fclients%2Fadmin.test.ts?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,105 @@\n+import { beforeEach, describe, expect } from 'vitest'\n+import { mockEndpoint } from '../test-utils'\n+import { BlockTTL, createAdminClient } from '../../clients/admin'\n+\n+interface Context {\n+\tclient: ReturnType<typeof createAdminClient>\n+}\n+\n+describe<Context>('Admin Client', (adminClient) => {\n+\tbeforeEach<Context>((ctx) => {\n+\t\tctx.client = createAdminClient({ siteId: 'mysite', baseUrl: '/remark42' })\n+\t})\n+\n+\tadminClient('should return list of blocked users', async ({ client }) => {\n+\t\tconst data = [{ id: 1 }, { id: 2 }]\n+\n+\t\tmockEndpoint('/remark42/api/v1/blocked', { body: data })\n+\t\tawait expect(client.getBlockedUsers()).resolves.toEqual(data)\n+\t})\n+\n+\tconst ttlCases: [BlockTTL, string][] = [\n+\t\t['permanently', '0'],\n+\t\t['1440m', '1440m'],\n+\t\t['43200m', '43200m'],\n+\t]\n+\n+\tttlCases.forEach(([ttl, expected]) => {\n+\t\tadminClient(`should block user with ttl: ${ttl}`, async ({ client }) => {\n+\t\t\tconst data = { block: true, site_id: 'remark42', user_id: '1' }\n+\t\t\tconst ref = mockEndpoint('/remark42/api/v1/user/1', { method: 'put', body: data })\n+\n+\t\t\tawait expect(client.blockUser('1', ttl)).resolves.toEqual(data)\n+\t\t\texpect(ref.req.url.searchParams.get('ttl')).toBe(expected)\n+\t\t})\n+\t})\n+\n+\tadminClient('should unblock user', async ({ client }) => {\n+\t\tconst data = { block: false, site_id: 'remark42', user_id: '1' }\n+\t\tconst ref = mockEndpoint('/remark42/api/v1/user/1', { method: 'put', body: data })\n+\n+\t\tawait expect(client.unblockUser('1')).resolves.toEqual(data)\n+\t\texpect(ref.req.url.searchParams.get('block')).toBe('0')\n+\t})\n+\n+\tadminClient('should mark user as verified', async ({ client }) => {\n+\t\tconst ref = mockEndpoint('/remark42/api/v1/verify/1', { method: 'put' })\n+\n+\t\tawait client.verifyUser('1')\n+\t\texpect(ref.req.url.searchParams.get('verified')).toBe('1')\n+\t})\n+\n+\tadminClient('should mark user as unverified', async ({ client }) => {\n+\t\tconst ref = mockEndpoint('/remark42/api/v1/verify/1', { method: 'put' })\n+\n+\t\tawait client.unverifyUser('1')\n+\t\texpect(ref.req.url.searchParams.get('verified')).toBe('0')\n+\t})\n+\n+\tadminClient('should approve removing request', async ({ client }) => {\n+\t\tconst ref = mockEndpoint('/remark42/api/v1/deleteme')\n+\n+\t\tawait client.approveRemovingRequest('token')\n+\t\texpect(ref.req.url.searchParams.get('token')).toBe('token')\n+\t})\n+\n+\tadminClient('should pin comment', async ({ client }) => {\n+\t\tconst ref = mockEndpoint('/remark42/api/v1/pin/1', { method: 'put' })\n+\n+\t\tawait client.pinComment('1')\n+\t\texpect(ref.req.url.searchParams.get('pinned')).toBe('1')\n+\t})\n+\n+\tadminClient('should unpin comment', async ({ client }) => {\n+\t\tconst ref = mockEndpoint('/remark42/api/v1/pin/1', { method: 'put' })\n+\n+\t\tawait client.unpinComment('1')\n+\t\texpect(ref.req.url.searchParams.get('pinned')).toBe('0')\n+\t})\n+\n+\tadminClient('should remove comment', async ({ client }) => {\n+\t\tconst ref = mockEndpoint('/remark42/api/v1/comment/1', { method: 'delete' })\n+\t\tconst url = '/post/1'\n+\n+\t\tawait client.removeComment(url, '1')\n+\t\texpect(ref.req.url.searchParams.get('url')).toBe(url)\n+\t})\n+\n+\tadminClient('should enable commenting on a page', async ({ client }) => {\n+\t\tconst ref = mockEndpoint('/remark42/api/v1/readonly', { method: 'put' })\n+\t\tconst url = '/post/1'\n+\n+\t\tawait client.enableCommenting(url)\n+\t\texpect(ref.req.url.searchParams.get('ro')).toBe('1')\n+\t\texpect(ref.req.url.searchParams.get('url')).toBe(url)\n+\t})\n+\n+\tadminClient('should disable commenting on a page', async ({ client }) => {\n+\t\tconst ref = mockEndpoint('/remark42/api/v1/readonly', { method: 'put' })\n+\t\tconst url = '/post/1'\n+\n+\t\tawait client.disableCommenting('/post/1')\n+\t\texpect(ref.req.url.searchParams.get('ro')).toBe('0')\n+\t\texpect(ref.req.url.searchParams.get('url')).toBe(url)\n+\t})\n+})"
    },
    {
      "sha": "de26744690bd39136bfa93b417445a9bb968a22f",
      "filename": "frontend/packages/api/tests/clients/auth.test.ts",
      "status": "added",
      "additions": 59,
      "deletions": 0,
      "changes": 59,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftests%2Fclients%2Fauth.test.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftests%2Fclients%2Fauth.test.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Ftests%2Fclients%2Fauth.test.ts?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,59 @@\n+import { beforeEach, describe, expect } from 'vitest'\n+import { mockEndpoint } from '../test-utils'\n+import { createAuthClient } from '../../clients/auth'\n+\n+interface Content {\n+\tclient: ReturnType<typeof createAuthClient>\n+}\n+\n+describe<Content>('Auth Client', (authClient) => {\n+\tbeforeEach<Content>((ctx) => {\n+\t\tctx.client = createAuthClient({ siteId: 'mysite', baseUrl: '/remark42' })\n+\t})\n+\n+\tauthClient('should authorize as anonymouse', async ({ client }) => {\n+\t\tconst data = { id: 1 }\n+\t\tconst ref = mockEndpoint('/remark42/auth/anonymous/login', { body: data })\n+\n+\t\tawait expect(client.anonymous('username')).resolves.toEqual(data)\n+\t\texpect(ref.req.url.searchParams.get('aud')).toBe('mysite')\n+\t\texpect(ref.req.url.searchParams.get('user')).toBe('username')\n+\t})\n+\n+\tauthClient('should authorize with email', async ({ client }) => {\n+\t\tconst data = { id: 1 }\n+\t\tconst ref = mockEndpoint('/remark42/auth/email/login', { body: data })\n+\t\tconst tokenVerification = await client.email('username@example.com', 'username')\n+\n+\t\texpect(ref.req.url.searchParams.get('address')).toBe('username@example.com')\n+\t\texpect(ref.req.url.searchParams.get('user')).toBe('username')\n+\n+\t\tawait expect(tokenVerification('token')).resolves.toEqual(data)\n+\t\texpect(ref.req.url.searchParams.get('token')).toBe('token')\n+\t})\n+\n+\tauthClient('should authorize with telegram', async ({ client }) => {\n+\t\tconst data = {\n+\t\t\tbot: 'remark42bot',\n+\t\t\ttoken: 'token',\n+\t\t}\n+\t\tconst user = { id: 1 }\n+\n+\t\tmockEndpoint('/remark42/auth/telegram/login', { body: data })\n+\n+\t\tconst telegramAuth = await client.telegram()\n+\n+\t\texpect(telegramAuth.bot).toBe(data.bot)\n+\t\texpect(telegramAuth.token).toBe(data.token)\n+\n+\t\tconst ref = mockEndpoint('/remark42/auth/telegram/login', { body: user })\n+\n+\t\tawait expect(telegramAuth.verify()).resolves.toEqual(user)\n+\t\texpect(ref.req.url.searchParams.get('token')).toBe('token')\n+\t})\n+\n+\tauthClient('should logout', async ({ client }) => {\n+\t\tmockEndpoint('/remark42/auth/logout')\n+\t\tawait expect(client.logout()).resolves.toBe('')\n+\t})\n+})"
    },
    {
      "sha": "0709d9c947ad4f0eaa6ca25c87055ef157dacfc8",
      "filename": "frontend/packages/api/tests/clients/index.test.ts",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftests%2Fclients%2Findex.test.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftests%2Fclients%2Findex.test.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Ftests%2Fclients%2Findex.test.ts?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,14 @@\n+import { describe, expect, it } from 'vitest'\n+import { createClient } from '../..'\n+\n+describe('Client', () => {\n+\tit('should create a client', () => {\n+\t\tconst params = { siteId: 'mysite', baseUrl: '/remark42' }\n+\t\tconst client = createClient(params)\n+\n+\t\texpect(client).toBeDefined()\n+\t\texpect(client.admin).toBeDefined()\n+\t\texpect(client.auth).toBeDefined()\n+\t\texpect(client.public).toBeDefined()\n+\t})\n+})"
    },
    {
      "sha": "70734dab37d510a11aa04855f16127fe6707215c",
      "filename": "frontend/packages/api/tests/clients/public.test.ts",
      "status": "added",
      "additions": 107,
      "deletions": 0,
      "changes": 107,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftests%2Fclients%2Fpublic.test.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftests%2Fclients%2Fpublic.test.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Ftests%2Fclients%2Fpublic.test.ts?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,107 @@\n+import { beforeEach, describe, expect } from 'vitest'\n+import { mockEndpoint } from '../test-utils'\n+import { createPublicClient, GetUserCommentsParams, Vote } from '../../clients/public'\n+\n+interface Context {\n+\tclient: ReturnType<typeof createPublicClient>\n+}\n+\n+describe<Context>('Public Client', (publicClient) => {\n+\tbeforeEach<Context>((ctx) => {\n+\t\tctx.client = createPublicClient({ siteId: 'mysite', baseUrl: '/remark42' })\n+\t})\n+\n+\tpublicClient('getConfig: should return config', async ({ client }) => {\n+\t\tconst data = { x: 1, y: 2 }\n+\n+\t\tmockEndpoint('/remark42/api/v1/config', { body: data })\n+\t\tawait expect(client.getConfig()).resolves.toEqual(data)\n+\t})\n+\n+\tpublicClient('getComments: should return page comments', async ({ client }) => {\n+\t\tconst data = { post: { id: '1' }, node: [{ id: 1 }] }\n+\t\tconst ref = mockEndpoint('/remark42/api/v1/comments', { body: data })\n+\n+\t\tawait expect(client.getComments('/post/1')).resolves.toEqual(data)\n+\t\texpect(ref.req.url.searchParams.get('url')).toBe('/post/1')\n+\t})\n+\n+\tconst commentRequestCases: GetUserCommentsParams[] = [\n+\t\t{ url: '' },\n+\t\t{ url: '' },\n+\t\t{ url: '', limit: 10 },\n+\t\t{ url: '', skip: 10 },\n+\t\t{ url: '', skip: 10, limit: 0 },\n+\t]\n+\n+\tcommentRequestCases.forEach((params) => {\n+\t\tpublicClient(\n+\t\t\t`getComments: should return user comments with params: ${JSON.stringify(params)}`,\n+\t\t\tasync ({ client }) => {\n+\t\t\t\tconst data = [{ id: 1 }, { id: 2 }]\n+\t\t\t\tconst ref = mockEndpoint('/remark42/api/v1/find', { body: data })\n+\n+\t\t\t\tawait expect(client.getComments(params)).resolves.toEqual(data)\n+\t\t\t\texpect(ref.req.url.searchParams.get('limit')).toBe(\n+\t\t\t\t\tparams.limit === undefined ? null : `${params.limit}`\n+\t\t\t\t)\n+\t\t\t\texpect(ref.req.url.searchParams.get('skip')).toBe(\n+\t\t\t\t\tparams.skip === undefined ? null : `${params.skip}`\n+\t\t\t\t)\n+\t\t\t}\n+\t\t)\n+\t})\n+\n+\tpublicClient('addComment: should add comment', async ({ client }) => {\n+\t\tconst data = { id: '1', text: 'test' }\n+\t\tconst ref = mockEndpoint('/remark42/api/v1/comment', { method: 'post', body: data })\n+\n+\t\tawait expect(client.addComment('/post/my-first-post', { text: 'test' })).resolves.toEqual(data)\n+\t\tawait expect(ref.req.json()).resolves.toEqual({\n+\t\t\ttext: data.text,\n+\t\t\tlocator: {\n+\t\t\t\tsite: 'mysite',\n+\t\t\t\turl: '/post/my-first-post',\n+\t\t\t},\n+\t\t})\n+\t})\n+\n+\tpublicClient('updateComment: should update comment', async ({ client }) => {\n+\t\tconst data = { id: 1, body: 'test' }\n+\t\tconst ref = mockEndpoint('/remark42/api/v1/comment/1', { method: 'put', body: data })\n+\n+\t\tawait expect(client.updateComment('/post/my-first-post', '1', 'test')).resolves.toEqual(data)\n+\t\tawait expect(ref.req.json()).resolves.toEqual({ text: 'test' })\n+\t\texpect(ref.req.url.searchParams.get('url')).toBe('/post/my-first-post')\n+\t})\n+\n+\tpublicClient('should remove comment', async ({ client }) => {\n+\t\tconst ref = mockEndpoint('/remark42/api/v1/comment/1', { method: 'put' })\n+\n+\t\tawait expect(client.removeComment('/post/my-first-post', '1')).resolves.toBe('')\n+\t\texpect(ref.req.url.searchParams.get('url')).toBe('/post/my-first-post')\n+\t})\n+\n+\tconst voteRequestCases: { vote: Vote; value: string }[] = [\n+\t\t{ vote: 1, value: 'upvote' },\n+\t\t{ vote: -1, value: 'downvote' },\n+\t]\n+\tvoteRequestCases.forEach(({ vote, value }) => {\n+\t\tpublicClient(`vote: should ${value} for comment`, async ({ client }) => {\n+\t\t\tconst data = { id: 1, vote: 2 }\n+\t\t\tconst ref = mockEndpoint('/remark42/api/v1/vote/1', { method: 'put', body: data })\n+\n+\t\t\tawait expect(client.vote('/post/my-first-post', '1', vote)).resolves.toEqual(data)\n+\t\t\texpect(ref.req.url.searchParams.get('url')).toBe('/post/my-first-post')\n+\t\t\texpect(ref.req.url.searchParams.get('vote')).toBe(`${vote}`)\n+\t\t})\n+\t})\n+\n+\tconst userCases = [null, { id: '1', username: 'user' }]\n+\tuserCases.forEach((user) => {\n+\t\tpublicClient('should return user', async ({ client }) => {\n+\t\t\tmockEndpoint('/remark42/api/v1/user', { body: user })\n+\t\t\tawait expect(client.getUser()).resolves.toEqual(user)\n+\t\t})\n+\t})\n+})"
    },
    {
      "sha": "449b8eeefa70496797b6985f428326ce23809304",
      "filename": "frontend/packages/api/tests/index.test.ts",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftests%2Findex.test.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftests%2Findex.test.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Ftests%2Findex.test.ts?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,6 @@\n+import { test, expect } from 'vitest'\n+import { createClient } from '..'\n+\n+test('create client', () => {\n+\texpect(() => createClient({ siteId: 'site', baseUrl: '' })).not.toThrow()\n+})"
    },
    {
      "sha": "8aecb14e301a6063cb167685b8c084aa982ff86b",
      "filename": "frontend/packages/api/tests/lib/fetcher.test.ts",
      "status": "added",
      "additions": 117,
      "deletions": 0,
      "changes": 117,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftests%2Flib%2Ffetcher.test.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftests%2Flib%2Ffetcher.test.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Ftests%2Flib%2Ffetcher.test.ts?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,117 @@\n+import { beforeEach, describe, expect } from 'vitest'\n+import { mockEndpoint } from '../test-utils'\n+import { JWT_HEADER, XSRF_COOKIE, XSRF_HEADER } from '../../consts'\n+import { Client, createFetcher } from '../../lib/fetcher'\n+\n+interface Context {\n+\tclient: Client\n+}\n+\n+describe<Context>('Fetcher', (fetcher) => {\n+\tbeforeEach<Context>((ctx) => {\n+\t\tctx.client = createFetcher('remark42', '')\n+\t})\n+\n+\tfetcher('get', async ({ client }) => {\n+\t\tconst ref = mockEndpoint('/test')\n+\n+\t\tawait client.get('/test')\n+\t\texpect(ref.req.method).toBe('GET')\n+\t})\n+\n+\tfetcher('post', async ({ client }) => {\n+\t\tconst ref = mockEndpoint('/test', { method: 'post' })\n+\n+\t\tawait client.post('/test')\n+\t\texpect(ref.req.method).toBe('POST')\n+\t})\n+\n+\tfetcher('put', async ({ client }) => {\n+\t\tconst ref = mockEndpoint('/test', { method: 'put' })\n+\n+\t\tawait client.put('/test')\n+\t\texpect(ref.req.method).toBe('PUT')\n+\t})\n+\n+\tfetcher('delete', async ({ client }) => {\n+\t\tconst ref = mockEndpoint('/test', { method: 'delete' })\n+\n+\t\tawait client.delete('/test')\n+\t\texpect(ref.req.method).toBe('DELETE')\n+\t})\n+\tfetcher('should send json', async ({ client }) => {\n+\t\tconst data = { name: 'test' }\n+\t\tconst ref = mockEndpoint('/test', { method: 'post', body: data })\n+\n+\t\tawait expect(client.post('/test', {}, data)).resolves.toStrictEqual(data)\n+\t\tawait expect(ref.req.json()).resolves.toStrictEqual(data)\n+\t\texpect(ref.req.headers.get('Content-Type')).toBe('application/json')\n+\t})\n+\n+\tfetcher('should send text', async ({ client }) => {\n+\t\tconst data = 'text'\n+\t\tconst ref = mockEndpoint('/test', { method: 'post', body: data })\n+\n+\t\tawait expect(client.post('/test', {}, data)).resolves.toBe(data)\n+\t\tawait expect(ref.req.text()).resolves.toBe(data)\n+\t\texpect(ref.req.headers.get('Content-Type')).toMatch('text/plain')\n+\t})\n+\n+\tfetcher('should send query', async ({ client }) => {\n+\t\tconst ref = mockEndpoint('/test')\n+\n+\t\tawait expect(client.get('/test', { x: 1, p: 2 })).resolves.toBe('')\n+\t\texpect(ref.req.url.searchParams.get('x')).toBe('1')\n+\t\texpect(ref.req.url.searchParams.get('p')).toBe('2')\n+\t})\n+\n+\tfetcher('should sort query params', async ({ client }) => {\n+\t\tconst ref = mockEndpoint('/test')\n+\n+\t\tawait expect(client.get('/test', { x: 1, p: 2 })).resolves.toBe('')\n+\t\texpect(ref.req.url.search).toBe('?p=2&site=remark42&x=1')\n+\t})\n+\n+\tfetcher(\n+\t\t'should set active token and then clean it on unauthorized response',\n+\t\tasync ({ client }) => {\n+\t\t\tlet ref = mockEndpoint('/user', { headers: { [JWT_HEADER]: 'token' } })\n+\n+\t\t\t// token should be saved\n+\t\t\tawait client.get('/user')\n+\t\t\t// the first call should be without token\n+\t\t\texpect(ref.req.headers.get(JWT_HEADER)).toBe(null)\n+\t\t\t// the second call should be with token\n+\t\t\tawait client.get('/user')\n+\t\t\t// check if the second call was with token\n+\t\t\texpect(ref.req.headers.get(JWT_HEADER)).toBe('token')\n+\n+\t\t\t// unauthorized response should clean token\n+\t\t\tref = mockEndpoint('/user', { status: 401 })\n+\t\t\t// the third call should be with token but token should be cleaned after it\n+\t\t\tawait expect(client.get('/user')).rejects.toBe('Unauthorized')\n+\t\t\t// the fourth call should be without token\n+\t\t\tawait expect(client.get('/user')).rejects.toBe('Unauthorized')\n+\t\t\t// check if the fourth call was with token\n+\t\t\texpect(ref.req.headers.get(JWT_HEADER)).toBe(null)\n+\t\t}\n+\t)\n+\n+\tfetcher('should add XSRF header if we have it in cookies', async ({ client }) => {\n+\t\tconst ref = mockEndpoint('/user')\n+\n+\t\tObject.defineProperty(document, 'cookie', {\n+\t\t\twritable: true,\n+\t\t\tvalue: `${XSRF_COOKIE}=token`,\n+\t\t})\n+\n+\t\tawait client.get('/user')\n+\t\texpect(ref.req.headers.get(XSRF_HEADER)).toBe('token')\n+\t})\n+\n+\tfetcher('should throw error on api response with status code 400', async ({ client }) => {\n+\t\tmockEndpoint('/user', { status: 400 })\n+\n+\t\tawait expect(client.get('/user')).rejects.toBe('')\n+\t})\n+})"
    },
    {
      "sha": "9398bfdf2c7fb17c103a66c5904e5fea691dcbbb",
      "filename": "frontend/packages/api/tests/setup.ts",
      "status": "added",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftests%2Fsetup.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftests%2Fsetup.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Ftests%2Fsetup.ts?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,15 @@\n+import 'whatwg-fetch'\n+import { afterAll, afterEach, beforeAll } from 'vitest'\n+import { server } from './test-utils'\n+\n+beforeAll(() => {\n+\tserver.listen({ onUnhandledRequest: 'error' })\n+})\n+\n+afterEach(() => {\n+\tserver.resetHandlers()\n+})\n+\n+afterAll(() => {\n+\tserver.close()\n+})"
    },
    {
      "sha": "742a79214890db4c0dd4af7d08bfeebcbdb54afe",
      "filename": "frontend/packages/api/tests/test-utils.ts",
      "status": "added",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftests%2Ftest-utils.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftests%2Ftest-utils.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Ftests%2Ftest-utils.ts?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,36 @@\n+import { rest, RestRequest } from 'msw'\n+import { setupServer } from 'msw/node'\n+\n+export const server = setupServer()\n+\n+interface RequestRef {\n+\treq: RestRequest\n+}\n+\n+export function mockEndpoint(\n+\turl: string,\n+\tparams: {\n+\t\tmethod?: 'get' | 'put' | 'post' | 'delete'\n+\t\tbody?: number | string | null | Record<string, unknown> | unknown[]\n+\t\tstatus?: number\n+\t\theaders?: Record<string, string | string[]>\n+\t} = {}\n+): RequestRef {\n+\tconst { body, method = 'get', status = 200, headers } = params\n+\tconst result = { req: {} } as RequestRef\n+\n+\tserver.use(\n+\t\trest[method](url, (req, res, ctx) => {\n+\t\t\tconst transformers = [ctx.status(status), ctx.json(body)]\n+\n+\t\t\tif (headers) {\n+\t\t\t\ttransformers.push(ctx.set(headers))\n+\t\t\t}\n+\n+\t\t\tresult.req = req\n+\t\t\treturn res(...transformers)\n+\t\t})\n+\t)\n+\n+\treturn result\n+}"
    },
    {
      "sha": "842b527e87de8deea75f09654ddedb62d9cd811d",
      "filename": "frontend/packages/api/tsconfig.eslint.json",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftsconfig.eslint.json",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftsconfig.eslint.json",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Ftsconfig.eslint.json?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,5 @@\n+{\n+  \"extends\": \"./tsconfig.json\",\n+  \"include\": [\"**/*.ts\"],\n+  \"exclude\": [\".turbo\", \"node_modules\"]\n+}"
    },
    {
      "sha": "e0ad37c0dfae399d6c37dc8ec29c1266e4c004fb",
      "filename": "frontend/packages/api/tsconfig.json",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftsconfig.json",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Ftsconfig.json",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Ftsconfig.json?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,14 @@\n+{\n+  \"compilerOptions\": {\n+    \"target\": \"es2016\",\n+    \"lib\": [\"DOM\"],\n+    \"moduleResolution\": \"node\",\n+    \"baseUrl\": \"./\",\n+    \"declaration\": true,\n+    \"isolatedModules\": true,\n+    \"forceConsistentCasingInFileNames\": true,\n+    \"strict\": true\n+  },\n+  \"include\": [\"index.ts\", \"clients\", \"lib\"],\n+  \"exclude\": [\"tests\", \"coverage\"]\n+}"
    },
    {
      "sha": "6462fcde7666fb85e5e5b4da99b20ffbb13c9238",
      "filename": "frontend/packages/api/vitest.config.mjs",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Fvitest.config.mjs",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpackages%2Fapi%2Fvitest.config.mjs",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpackages%2Fapi%2Fvitest.config.mjs?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -0,0 +1,9 @@\n+import { defineConfig } from 'vitest/config'\n+\n+export default defineConfig({\n+\ttest: {\n+\t\tenvironment: 'jsdom',\n+\t\tsetupFiles: ['./tests/setup.ts'],\n+\t\tinclude: ['tests/**/*.test.ts'],\n+\t},\n+})"
    },
    {
      "sha": "a5bf91b79ecf6823c186d8e9ed2d6184ba7c9356",
      "filename": "frontend/pnpm-lock.yaml",
      "status": "modified",
      "additions": 1514,
      "deletions": 129,
      "changes": 1643,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpnpm-lock.yaml",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpnpm-lock.yaml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpnpm-lock.yaml?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -6,9 +6,11 @@ importers:\n     specifiers:\n       husky: ^8.0.1\n       lint-staged: ^13.0.3\n+      turbo: ^1.4.3\n     devDependencies:\n       husky: 8.0.1\n       lint-staged: 13.0.3\n+      turbo: 1.4.3\n \n   apps/remark42:\n     specifiers:\n@@ -209,6 +211,42 @@ importers:\n       webpack-cli: 4.10.0_orc2ewcajya4tocnqelr4vzh7u\n       webpack-dev-server: 4.9.3_77l47gmqkrqiei5z7sbwz5iaj4\n \n+  packages/api:\n+    specifiers:\n+      '@types/node': ^18.0.5\n+      '@typescript-eslint/eslint-plugin': ^5.33.1\n+      '@typescript-eslint/parser': ^5.33.1\n+      '@vitest/coverage-c8': ^0.22.1\n+      eslint: ^8.18.0\n+      eslint-config-prettier: ^8.5.0\n+      eslint-plugin-prettier: ^4.2.1\n+      jsdom: ^20.0.0\n+      msw: ^0.44.1\n+      npm-run-all: ^4.1.5\n+      prettier: ^2.7.1\n+      ts-node: ^10.9.1\n+      tslib: ^2.4.0\n+      typescript: ^4.7.4\n+      vitest: ^0.22.1\n+      whatwg-fetch: ^3.6.2\n+    devDependencies:\n+      '@types/node': 18.0.6\n+      '@typescript-eslint/eslint-plugin': 5.33.1_xvmm3ouh3ttkwfukqn4o7asoxy\n+      '@typescript-eslint/parser': 5.33.1_4x5o4skxv6sl53vpwefgt23khm\n+      '@vitest/coverage-c8': 0.22.1_jsdom@20.0.0\n+      eslint: 8.19.0\n+      eslint-config-prettier: 8.5.0_eslint@8.19.0\n+      eslint-plugin-prettier: 4.2.1_7uxdfn2xinezdgvmbammh6ev5i\n+      jsdom: 20.0.0\n+      msw: 0.44.2_typescript@4.7.4\n+      npm-run-all: 4.1.5\n+      prettier: 2.7.1\n+      ts-node: 10.9.1_tdn3ypgnfy6bmey2q4hu5jonwi\n+      tslib: 2.4.0\n+      typescript: 4.7.4\n+      vitest: 0.22.1_jsdom@20.0.0\n+      whatwg-fetch: 3.6.2\n+\n packages:\n \n   /@ampproject/remapping/2.2.0:\n@@ -1716,6 +1754,15 @@ packages:\n     engines: {node: '>=10.0.0'}\n     dev: true\n \n+  /@esbuild/linux-loong64/0.14.54:\n+    resolution: {integrity: sha512-bZBrLAIX1kpWelV0XemxBZllyRmM6vgFQQG2GdNb+r3Fkp0FOh1NJSvekXDs7jq70k4euu1cryLMfU+mTXlEpw==}\n+    engines: {node: '>=12'}\n+    cpu: [loong64]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n   /@eslint/eslintrc/1.3.0:\n     resolution: {integrity: sha512-UWW0TMTmk2d7hLcWD1/e2g5HDM/HQ3csaLSqXCfqwh4uNDuNqlaKWXmEsL4Cs41Z0KnILNvwbHAah3C2yt06kw==}\n     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n@@ -1869,6 +1916,18 @@ packages:\n       slash: 3.0.0\n     dev: true\n \n+  /@jest/console/28.1.3:\n+    resolution: {integrity: sha512-QPAkP5EwKdK/bxIr6C1I4Vs0rm2nHiANzj/Z5X2JQkrZo6IqvC4ldZ9K95tF0HdidhA8Bo6egxSzUFPYKcEXLw==}\n+    engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n+    dependencies:\n+      '@jest/types': 28.1.3\n+      '@types/node': 18.0.6\n+      chalk: 4.1.2\n+      jest-message-util: 28.1.3\n+      jest-util: 28.1.3\n+      slash: 3.0.0\n+    dev: true\n+\n   /@jest/core/28.1.2_ts-node@10.8.2:\n     resolution: {integrity: sha512-Xo4E+Sb/nZODMGOPt2G3cMmCBqL4/W2Ijwr7/mrXlq4jdJwcFQ/9KrrJZT2adQRk2otVBXXOz1GRQ4Z5iOgvRQ==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n@@ -1894,16 +1953,16 @@ packages:\n       jest-haste-map: 28.1.1\n       jest-message-util: 28.1.1\n       jest-regex-util: 28.0.2\n-      jest-resolve: 28.1.1\n-      jest-resolve-dependencies: 28.1.2\n-      jest-runner: 28.1.2\n-      jest-runtime: 28.1.2\n-      jest-snapshot: 28.1.2\n-      jest-util: 28.1.1\n-      jest-validate: 28.1.1\n-      jest-watcher: 28.1.1\n+      jest-resolve: 28.1.3\n+      jest-resolve-dependencies: 28.1.3\n+      jest-runner: 28.1.3\n+      jest-runtime: 28.1.3\n+      jest-snapshot: 28.1.3\n+      jest-util: 28.1.3\n+      jest-validate: 28.1.3\n+      jest-watcher: 28.1.3\n       micromatch: 4.0.5\n-      pretty-format: 28.1.1\n+      pretty-format: 28.1.3\n       rimraf: 3.0.2\n       slash: 3.0.0\n       strip-ansi: 6.0.1\n@@ -1929,19 +1988,29 @@ packages:\n       jest-mock: 28.1.1\n     dev: true\n \n-  /@jest/expect-utils/28.1.1:\n-    resolution: {integrity: sha512-n/ghlvdhCdMI/hTcnn4qV57kQuV9OTsZzH1TTCVARANKhl6hXJqLKUkwX69ftMGpsbpt96SsDD8n8LD2d9+FRw==}\n+  /@jest/environment/28.1.3:\n+    resolution: {integrity: sha512-1bf40cMFTEkKyEf585R9Iz1WayDjHoHqvts0XFYEqyKM3cFWDpeMoqKKTAF9LSYQModPUlh8FKptoM2YcMWAXA==}\n+    engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n+    dependencies:\n+      '@jest/fake-timers': 28.1.3\n+      '@jest/types': 28.1.3\n+      '@types/node': 18.0.6\n+      jest-mock: 28.1.3\n+    dev: true\n+\n+  /@jest/expect-utils/28.1.3:\n+    resolution: {integrity: sha512-wvbi9LUrHJLn3NlDW6wF2hvIMtd4JUl2QNVrjq+IBSHirgfrR3o9RnVtxzdEGO2n9JyIWwHnLfby5KzqBGg2YA==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n     dependencies:\n       jest-get-type: 28.0.2\n     dev: true\n \n-  /@jest/expect/28.1.2:\n-    resolution: {integrity: sha512-HBzyZBeFBiOelNbBKN0pilWbbrGvwDUwAqMC46NVJmWm8AVkuE58NbG1s7DR4cxFt4U5cVLxofAoHxgvC5MyOw==}\n+  /@jest/expect/28.1.3:\n+    resolution: {integrity: sha512-lzc8CpUbSoE4dqT0U+g1qODQjBRHPpCPXissXD4mS9+sWQdmmpeJ9zSH1rS1HEkrsMN0fb7nKrJ9giAR1d3wBw==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n     dependencies:\n-      expect: 28.1.1\n-      jest-snapshot: 28.1.2\n+      expect: 28.1.3\n+      jest-snapshot: 28.1.3\n     transitivePeerDependencies:\n       - supports-color\n     dev: true\n@@ -1958,13 +2027,25 @@ packages:\n       jest-util: 28.1.1\n     dev: true\n \n-  /@jest/globals/28.1.2:\n-    resolution: {integrity: sha512-cz0lkJVDOtDaYhvT3Fv2U1B6FtBnV+OpEyJCzTHM1fdoTsU4QNLAt/H4RkiwEUU+dL4g/MFsoTuHeT2pvbo4Hg==}\n+  /@jest/fake-timers/28.1.3:\n+    resolution: {integrity: sha512-D/wOkL2POHv52h+ok5Oj/1gOG9HSywdoPtFsRCUmlCILXNn5eIWmcnd3DIiWlJnpGvQtmajqBP95Ei0EimxfLw==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n     dependencies:\n-      '@jest/environment': 28.1.2\n-      '@jest/expect': 28.1.2\n-      '@jest/types': 28.1.1\n+      '@jest/types': 28.1.3\n+      '@sinonjs/fake-timers': 9.1.2\n+      '@types/node': 18.0.6\n+      jest-message-util: 28.1.3\n+      jest-mock: 28.1.3\n+      jest-util: 28.1.3\n+    dev: true\n+\n+  /@jest/globals/28.1.3:\n+    resolution: {integrity: sha512-XFU4P4phyryCXu1pbcqMO0GSQcYe1IsalYCDzRNyhetyeyxMcIxa11qPNDpVNLeretItNqEmYYQn1UYz/5x1NA==}\n+    engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n+    dependencies:\n+      '@jest/environment': 28.1.3\n+      '@jest/expect': 28.1.3\n+      '@jest/types': 28.1.3\n     transitivePeerDependencies:\n       - supports-color\n     dev: true\n@@ -2014,6 +2095,13 @@ packages:\n       '@sinclair/typebox': 0.23.5\n     dev: true\n \n+  /@jest/schemas/28.1.3:\n+    resolution: {integrity: sha512-/l/VWsdt/aBXgjshLWOFyFt3IVdYypu5y2Wn2rOO1un6nkqIn8SLXzgIMYXFyYsRWDyF5EthmKJMIdJvk08grg==}\n+    engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n+    dependencies:\n+      '@sinclair/typebox': 0.24.20\n+    dev: true\n+\n   /@jest/source-map/28.1.2:\n     resolution: {integrity: sha512-cV8Lx3BeStJb8ipPHnqVw/IM2VCMWO3crWZzYodSIkxXnRcXJipCdx1JCK0K5MsJJouZQTH73mzf4vgxRaH9ww==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n@@ -2033,6 +2121,16 @@ packages:\n       collect-v8-coverage: 1.0.1\n     dev: true\n \n+  /@jest/test-result/28.1.3:\n+    resolution: {integrity: sha512-kZAkxnSE+FqE8YjW8gNuoVkkC9I7S1qmenl8sGcDOLropASP+BkcGKwhXoyqQuGOGeYY0y/ixjrd/iERpEXHNg==}\n+    engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n+    dependencies:\n+      '@jest/console': 28.1.3\n+      '@jest/types': 28.1.3\n+      '@types/istanbul-lib-coverage': 2.0.4\n+      collect-v8-coverage: 1.0.1\n+    dev: true\n+\n   /@jest/test-sequencer/28.1.1:\n     resolution: {integrity: sha512-nuL+dNSVMcWB7OOtgb0EGH5AjO4UBCt68SLP08rwmC+iRhyuJWS9MtZ/MpipxFwKAlHFftbMsydXqWre8B0+XA==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n@@ -2066,6 +2164,29 @@ packages:\n       - supports-color\n     dev: true\n \n+  /@jest/transform/28.1.3:\n+    resolution: {integrity: sha512-u5dT5di+oFI6hfcLOHGTAfmUxFRrjK+vnaP0kkVow9Md/M7V/MxqQMOz/VV25UZO8pzeA9PjfTpOu6BDuwSPQA==}\n+    engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n+    dependencies:\n+      '@babel/core': 7.18.6\n+      '@jest/types': 28.1.3\n+      '@jridgewell/trace-mapping': 0.3.14\n+      babel-plugin-istanbul: 6.1.1\n+      chalk: 4.1.2\n+      convert-source-map: 1.8.0\n+      fast-json-stable-stringify: 2.1.0\n+      graceful-fs: 4.2.10\n+      jest-haste-map: 28.1.3\n+      jest-regex-util: 28.0.2\n+      jest-util: 28.1.3\n+      micromatch: 4.0.5\n+      pirates: 4.0.5\n+      slash: 3.0.0\n+      write-file-atomic: 4.0.1\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n   /@jest/types/27.5.1:\n     resolution: {integrity: sha512-Cx46iJ9QpwQTjIdq5VJu2QTMMs3QlEjI0x1QbBP5W1+nMzyc2XmimiRR/CbX9TO0cPTeUlxWMOu8mslYsJ8DEw==}\n     engines: {node: ^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0}\n@@ -2089,6 +2210,18 @@ packages:\n       chalk: 4.1.2\n     dev: true\n \n+  /@jest/types/28.1.3:\n+    resolution: {integrity: sha512-RyjiyMUZrKz/c+zlMFO1pm70DcIlST8AeWTkoUdZevew44wcNZQHsEVOiCVtgVnlFFD82FPaXycys58cf2muVQ==}\n+    engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n+    dependencies:\n+      '@jest/schemas': 28.1.3\n+      '@types/istanbul-lib-coverage': 2.0.4\n+      '@types/istanbul-reports': 3.0.1\n+      '@types/node': 18.0.6\n+      '@types/yargs': 17.0.10\n+      chalk: 4.1.2\n+    dev: true\n+\n   /@jridgewell/gen-mapping/0.1.1:\n     resolution: {integrity: sha512-sQXCasFk+U8lWYEe66WxRDOE9PjVz4vSM51fTu3Hw+ClTpUSQb718772vH3pyS5pShp6lvQM7SxgIDXXXmOX7w==}\n     engines: {node: '>=6.0.0'}\n@@ -2162,6 +2295,30 @@ packages:\n     resolution: {integrity: sha512-EWUguj2kd7ldmrF9F+vI5hUOralPd+sdsUnYbRy33vZTuZkduC1shE9TtEMEjAQwyfyMb4ole5KtjF8MsnQOlA==}\n     dev: true\n \n+  /@mswjs/cookies/0.2.2:\n+    resolution: {integrity: sha512-mlN83YSrcFgk7Dm1Mys40DLssI1KdJji2CMKN8eOlBqsTADYzj2+jWzsANsUTFbxDMWPD5e9bfA1RGqBpS3O1g==}\n+    engines: {node: '>=14'}\n+    dependencies:\n+      '@types/set-cookie-parser': 2.4.2\n+      set-cookie-parser: 2.5.1\n+    dev: true\n+\n+  /@mswjs/interceptors/0.17.3:\n+    resolution: {integrity: sha512-jBRFPeHBPqKv3od8KPjmrvt4b/+e1DorizFDYJ8NQCrjFT9YGnxA8ojGi0MIo64x/JgdjYkhP8bG9EY4BGPoqg==}\n+    engines: {node: '>=14'}\n+    dependencies:\n+      '@open-draft/until': 1.0.3\n+      '@types/debug': 4.1.7\n+      '@xmldom/xmldom': 0.7.5\n+      debug: 4.3.4\n+      headers-polyfill: 3.0.10\n+      outvariant: 1.3.0\n+      strict-event-emitter: 0.2.4\n+      web-encoding: 1.1.5\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n   /@nodelib/fs.scandir/2.1.5:\n     resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}\n     engines: {node: '>= 8'}\n@@ -2183,6 +2340,10 @@ packages:\n       fastq: 1.13.0\n     dev: true\n \n+  /@open-draft/until/1.0.3:\n+    resolution: {integrity: sha512-Aq58f5HiWdyDlFffbbSjAlv596h/cOnt2DO1w3DOC7OJ5EHs0hd/nycJfiu9RJbT6Yk6F1knnRRXNSpxoIVZ9Q==}\n+    dev: true\n+\n   /@polka/url/1.0.0-next.21:\n     resolution: {integrity: sha512-a5Sab1C4/icpTZVzZc5Ghpz88yQtGOyNqYXcZgOssB2uuAr+wF/MvN6bgtW32q7HHrvBki+BsZ0OuNv6EV3K9g==}\n     dev: true\n@@ -2233,6 +2394,10 @@ packages:\n     resolution: {integrity: sha512-AFBVi/iT4g20DHoujvMH1aEDn8fGJh4xsRGCP6d8RpLPMqsNPvW01Jcn0QysXTsg++/xj25NmJsGyH9xug/wKg==}\n     dev: true\n \n+  /@sinclair/typebox/0.24.20:\n+    resolution: {integrity: sha512-kVaO5aEFZb33nPMTZBxiPEkY+slxiPtqC7QX8f9B3eGOMBvEfuMfxp9DSTTCsRJPumPKjrge4yagyssO4q6qzQ==}\n+    dev: true\n+\n   /@sinonjs/commons/1.8.3:\n     resolution: {integrity: sha512-xkNcLAn/wZaX14RPlwizcKicDk9G3F8m2nU3L7Ukm5zBgTwiT0wsoFAHx9Jq56fJA1z/7uKGtCRu16sOUCLIHQ==}\n     dependencies:\n@@ -2518,6 +2683,16 @@ packages:\n       '@types/node': 18.0.3\n     dev: true\n \n+  /@types/chai-subset/1.3.3:\n+    resolution: {integrity: sha512-frBecisrNGz+F4T6bcc+NLeolfiojh5FxW2klu669+8BARtyQv2C/GkNW6FUodVe4BroGMP/wER/YDGc7rEllw==}\n+    dependencies:\n+      '@types/chai': 4.3.3\n+    dev: true\n+\n+  /@types/chai/4.3.3:\n+    resolution: {integrity: sha512-hC7OMnszpxhZPduX+m+nrx+uFoLkWOMiR4oa/AZF3MuSETYTZmFfJAHqZEM8MVlvfG7BEUcgvtwoCTxBp6hm3g==}\n+    dev: true\n+\n   /@types/cheerio/0.22.31:\n     resolution: {integrity: sha512-Kt7Cdjjdi2XWSfrZ53v4Of0wG3ZcmaegFXjMmz9tfNrZSkzzo36G0AL1YqSdcIA78Etjt6E609pt5h1xnQkPUw==}\n     dependencies:\n@@ -2534,7 +2709,17 @@ packages:\n   /@types/connect/3.4.35:\n     resolution: {integrity: sha512-cdeYyv4KWoEgpBISTxWvqYsVy444DOqehiF3fM3ne10AmJ62RSyNkUnxMJXHQWRQQX2eR94m5y1IZyDwBjV9FQ==}\n     dependencies:\n-      '@types/node': 18.0.3\n+      '@types/node': 18.0.6\n+    dev: true\n+\n+  /@types/cookie/0.4.1:\n+    resolution: {integrity: sha512-XW/Aa8APYr6jSVVA1y/DEIZX0/GMKLEVekNG727R8cs56ahETkRAy/3DR7+fJyh7oUgGwNQaRfXCun0+KbWY7Q==}\n+    dev: true\n+\n+  /@types/debug/4.1.7:\n+    resolution: {integrity: sha512-9AonUzyTjXXhEOa0DnqpzZi6VHlqKMswga9EXjpXnnqxwLtdvPPtlO8evrI5D9S6asFRCQ6v+wpiUKbw+vKqyg==}\n+    dependencies:\n+      '@types/ms': 0.7.31\n     dev: true\n \n   /@types/enzyme/3.10.12:\n@@ -2593,7 +2778,7 @@ packages:\n   /@types/graceful-fs/4.1.5:\n     resolution: {integrity: sha512-anKkLmZZ+xm4p8JWBf4hElkM4XR+EZeA2M9BAkkTldmcyDY4mbdIJnRghDJH3Ov5ooY7/UAoENtmdMSkaAd7Cw==}\n     dependencies:\n-      '@types/node': 18.0.3\n+      '@types/node': 18.0.6\n     dev: true\n \n   /@types/hoist-non-react-statics/3.3.1:\n@@ -2635,6 +2820,10 @@ packages:\n       pretty-format: 28.1.1\n     dev: true\n \n+  /@types/js-levenshtein/1.1.1:\n+    resolution: {integrity: sha512-qC4bCqYGy1y/NP7dDVr7KJarn+PbX1nSpwA7JXdu0HxT3QYjO8MJ+cntENtHFVy2dRAyBV23OZ6MxsW1AM1L8g==}\n+    dev: true\n+\n   /@types/jsdom/16.2.14:\n     resolution: {integrity: sha512-6BAy1xXEmMuHeAJ4Fv4yXKwBDTGTOseExKE3OaHiNycdHdZw59KfYzrt0DkDluvwmik1HRt6QS7bImxUmpSy+w==}\n     dependencies:\n@@ -2673,6 +2862,10 @@ packages:\n     resolution: {integrity: sha512-jhuKLIRrhvCPLqwPcx6INqmKeiA5EWrsCOPhrlFSrbrmU4ZMPjj5Ul/oLCMDO98XRUIwVm78xICz4EPCektzeQ==}\n     dev: true\n \n+  /@types/ms/0.7.31:\n+    resolution: {integrity: sha512-iiUgKzV9AuaEkZqkOLDIvlQiL6ltuZd9tGcW3gwpnX8JbuiuhFlEGmmFXEXkN50Cvq7Os88IY2v0dkDqXYWVgA==}\n+    dev: true\n+\n   /@types/node-emoji/1.8.1:\n     resolution: {integrity: sha512-0fRfA90FWm6KJfw6P9QGyo0HDTCmthZ7cWaBQndITlaWLTZ6njRyKwrwpzpg+n6kBXBIGKeUHEQuBx7bphGJkA==}\n     dev: true\n@@ -2681,6 +2874,10 @@ packages:\n     resolution: {integrity: sha512-HzNRZtp4eepNitP+BD6k2L6DROIDG4Q0fm4x+dwfsr6LGmROENnok75VGw40628xf+iR24WeMFcHuuBDUAzzsQ==}\n     dev: true\n \n+  /@types/node/18.0.6:\n+    resolution: {integrity: sha512-/xUq6H2aQm261exT6iZTMifUySEt4GR5KX8eYyY+C4MSNPqSh9oNIP7tz2GLKTlFaiBbgZNxffoR3CVRG+cljw==}\n+    dev: true\n+\n   /@types/normalize-package-data/2.4.1:\n     resolution: {integrity: sha512-Gj7cI7z+98M282Tqmp2K5EIsoouUEzbBJhQQzDE3jSIRk6r9gsz0oUokqIUR4u1R3dMHo0pDHM7sNOHyhulypw==}\n     dev: true\n@@ -2750,6 +2947,12 @@ packages:\n       '@types/node': 18.0.3\n     dev: true\n \n+  /@types/set-cookie-parser/2.4.2:\n+    resolution: {integrity: sha512-fBZgytwhYAUkj/jC/FAV4RQ5EerRup1YQsXQCh8rZfiHkc4UahC192oH0smGwsXol3cL3A5oETuAHeQHmhXM4w==}\n+    dependencies:\n+      '@types/node': 18.0.6\n+    dev: true\n+\n   /@types/sockjs/0.3.33:\n     resolution: {integrity: sha512-f0KEEe05NvUnat+boPTZ0dgaLZ4SfSouXUgv5noUiefG2ajgKjmETo9ZJyuqsl7dfl2aHlLJUiki6B4ZYldiiw==}\n     dependencies:\n@@ -2827,6 +3030,33 @@ packages:\n       - supports-color\n     dev: true\n \n+  /@typescript-eslint/eslint-plugin/5.33.1_xvmm3ouh3ttkwfukqn4o7asoxy:\n+    resolution: {integrity: sha512-S1iZIxrTvKkU3+m63YUOxYPKaP+yWDQrdhxTglVDVEVBf+aCSw85+BmJnyUaQQsk5TXFG/LpBu9fa+LrAQ91fQ==}\n+    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n+    peerDependencies:\n+      '@typescript-eslint/parser': ^5.0.0\n+      eslint: ^6.0.0 || ^7.0.0 || ^8.0.0\n+      typescript: '*'\n+    peerDependenciesMeta:\n+      typescript:\n+        optional: true\n+    dependencies:\n+      '@typescript-eslint/parser': 5.33.1_4x5o4skxv6sl53vpwefgt23khm\n+      '@typescript-eslint/scope-manager': 5.33.1\n+      '@typescript-eslint/type-utils': 5.33.1_4x5o4skxv6sl53vpwefgt23khm\n+      '@typescript-eslint/utils': 5.33.1_4x5o4skxv6sl53vpwefgt23khm\n+      debug: 4.3.4\n+      eslint: 8.19.0\n+      functional-red-black-tree: 1.0.1\n+      ignore: 5.2.0\n+      regexpp: 3.2.0\n+      semver: 7.3.7\n+      tsutils: 3.21.0_typescript@4.7.4\n+      typescript: 4.7.4\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n   /@typescript-eslint/experimental-utils/5.30.6_4x5o4skxv6sl53vpwefgt23khm:\n     resolution: {integrity: sha512-bqvT+0L8IjtW7MCrMgm9oVNxs4g7mESro1mm5c1/SNfTnHuFTf9OUX1WzVkTz75M9cp//UrTrSmGvK48NEKshQ==}\n     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n@@ -2860,6 +3090,26 @@ packages:\n       - supports-color\n     dev: true\n \n+  /@typescript-eslint/parser/5.33.1_4x5o4skxv6sl53vpwefgt23khm:\n+    resolution: {integrity: sha512-IgLLtW7FOzoDlmaMoXdxG8HOCByTBXrB1V2ZQYSEV1ggMmJfAkMWTwUjjzagS6OkfpySyhKFkBw7A9jYmcHpZA==}\n+    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n+    peerDependencies:\n+      eslint: ^6.0.0 || ^7.0.0 || ^8.0.0\n+      typescript: '*'\n+    peerDependenciesMeta:\n+      typescript:\n+        optional: true\n+    dependencies:\n+      '@typescript-eslint/scope-manager': 5.33.1\n+      '@typescript-eslint/types': 5.33.1\n+      '@typescript-eslint/typescript-estree': 5.33.1_typescript@4.7.4\n+      debug: 4.3.4\n+      eslint: 8.19.0\n+      typescript: 4.7.4\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n   /@typescript-eslint/scope-manager/5.30.6:\n     resolution: {integrity: sha512-Hkq5PhLgtVoW1obkqYH0i4iELctEKixkhWLPTYs55doGUKCASvkjOXOd/pisVeLdO24ZX9D6yymJ/twqpJiG3g==}\n     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n@@ -2868,6 +3118,14 @@ packages:\n       '@typescript-eslint/visitor-keys': 5.30.6\n     dev: true\n \n+  /@typescript-eslint/scope-manager/5.33.1:\n+    resolution: {integrity: sha512-8ibcZSqy4c5m69QpzJn8XQq9NnqAToC8OdH/W6IXPXv83vRyEDPYLdjAlUx8h/rbusq6MkW4YdQzURGOqsn3CA==}\n+    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n+    dependencies:\n+      '@typescript-eslint/types': 5.33.1\n+      '@typescript-eslint/visitor-keys': 5.33.1\n+    dev: true\n+\n   /@typescript-eslint/type-utils/5.30.6_4x5o4skxv6sl53vpwefgt23khm:\n     resolution: {integrity: sha512-GFVVzs2j0QPpM+NTDMXtNmJKlF842lkZKDSanIxf+ArJsGeZUIaeT4jGg+gAgHt7AcQSFwW7htzF/rbAh2jaVA==}\n     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n@@ -2887,11 +3145,35 @@ packages:\n       - supports-color\n     dev: true\n \n+  /@typescript-eslint/type-utils/5.33.1_4x5o4skxv6sl53vpwefgt23khm:\n+    resolution: {integrity: sha512-X3pGsJsD8OiqhNa5fim41YtlnyiWMF/eKsEZGsHID2HcDqeSC5yr/uLOeph8rNF2/utwuI0IQoAK3fpoxcLl2g==}\n+    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n+    peerDependencies:\n+      eslint: '*'\n+      typescript: '*'\n+    peerDependenciesMeta:\n+      typescript:\n+        optional: true\n+    dependencies:\n+      '@typescript-eslint/utils': 5.33.1_4x5o4skxv6sl53vpwefgt23khm\n+      debug: 4.3.4\n+      eslint: 8.19.0\n+      tsutils: 3.21.0_typescript@4.7.4\n+      typescript: 4.7.4\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n   /@typescript-eslint/types/5.30.6:\n     resolution: {integrity: sha512-HdnP8HioL1F7CwVmT4RaaMX57RrfqsOMclZc08wGMiDYJBsLGBM7JwXM4cZJmbWLzIR/pXg1kkrBBVpxTOwfUg==}\n     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n     dev: true\n \n+  /@typescript-eslint/types/5.33.1:\n+    resolution: {integrity: sha512-7K6MoQPQh6WVEkMrMW5QOA5FO+BOwzHSNd0j3+BlBwd6vtzfZceJ8xJ7Um2XDi/O3umS8/qDX6jdy2i7CijkwQ==}\n+    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n+    dev: true\n+\n   /@typescript-eslint/typescript-estree/5.30.6_typescript@4.7.4:\n     resolution: {integrity: sha512-Z7TgPoeYUm06smfEfYF0RBkpF8csMyVnqQbLYiGgmUSTaSXTP57bt8f0UFXstbGxKIreTwQCujtaH0LY9w9B+A==}\n     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n@@ -2913,6 +3195,27 @@ packages:\n       - supports-color\n     dev: true\n \n+  /@typescript-eslint/typescript-estree/5.33.1_typescript@4.7.4:\n+    resolution: {integrity: sha512-JOAzJ4pJ+tHzA2pgsWQi4804XisPHOtbvwUyqsuuq8+y5B5GMZs7lI1xDWs6V2d7gE/Ez5bTGojSK12+IIPtXA==}\n+    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n+    peerDependencies:\n+      typescript: '*'\n+    peerDependenciesMeta:\n+      typescript:\n+        optional: true\n+    dependencies:\n+      '@typescript-eslint/types': 5.33.1\n+      '@typescript-eslint/visitor-keys': 5.33.1\n+      debug: 4.3.4\n+      globby: 11.1.0\n+      is-glob: 4.0.3\n+      semver: 7.3.7\n+      tsutils: 3.21.0_typescript@4.7.4\n+      typescript: 4.7.4\n+    transitivePeerDependencies:\n+      - supports-color\n+    dev: true\n+\n   /@typescript-eslint/utils/5.30.6_4x5o4skxv6sl53vpwefgt23khm:\n     resolution: {integrity: sha512-xFBLc/esUbLOJLk9jKv0E9gD/OH966M40aY9jJ8GiqpSkP2xOV908cokJqqhVd85WoIvHVHYXxSFE4cCSDzVvA==}\n     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n@@ -2931,6 +3234,24 @@ packages:\n       - typescript\n     dev: true\n \n+  /@typescript-eslint/utils/5.33.1_4x5o4skxv6sl53vpwefgt23khm:\n+    resolution: {integrity: sha512-uphZjkMaZ4fE8CR4dU7BquOV6u0doeQAr8n6cQenl/poMaIyJtBu8eys5uk6u5HiDH01Mj5lzbJ5SfeDz7oqMQ==}\n+    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n+    peerDependencies:\n+      eslint: ^6.0.0 || ^7.0.0 || ^8.0.0\n+    dependencies:\n+      '@types/json-schema': 7.0.11\n+      '@typescript-eslint/scope-manager': 5.33.1\n+      '@typescript-eslint/types': 5.33.1\n+      '@typescript-eslint/typescript-estree': 5.33.1_typescript@4.7.4\n+      eslint: 8.19.0\n+      eslint-scope: 5.1.1\n+      eslint-utils: 3.0.0_eslint@8.19.0\n+    transitivePeerDependencies:\n+      - supports-color\n+      - typescript\n+    dev: true\n+\n   /@typescript-eslint/visitor-keys/5.30.6:\n     resolution: {integrity: sha512-41OiCjdL2mCaSDi2SvYbzFLlqqlm5v1ZW9Ym55wXKL/Rx6OOB1IbuFGo71Fj6Xy90gJDFTlgOS+vbmtGHPTQQA==}\n     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n@@ -2939,10 +3260,36 @@ packages:\n       eslint-visitor-keys: 3.3.0\n     dev: true\n \n+  /@typescript-eslint/visitor-keys/5.33.1:\n+    resolution: {integrity: sha512-nwIxOK8Z2MPWltLKMLOEZwmfBZReqUdbEoHQXeCpa+sRVARe5twpJGHCB4dk9903Yaf0nMAlGbQfaAH92F60eg==}\n+    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n+    dependencies:\n+      '@typescript-eslint/types': 5.33.1\n+      eslint-visitor-keys: 3.3.0\n+    dev: true\n+\n   /@ungap/custom-elements/1.1.0:\n     resolution: {integrity: sha512-jPOtG6F8Wfmu3C+SF6lAglg/GsMGeiQCelikCrARXodcCVbH51GjG1Ga2GfM+WsxmRfnenLaUBLrkdxduHSGOA==}\n     dev: false\n \n+  /@vitest/coverage-c8/0.22.1_jsdom@20.0.0:\n+    resolution: {integrity: sha512-KOOYpO7EGpaF+nD8GD+Y05D0JtZp12NUu6DdLXvBPqSOPo2HkZ7KNBtfR0rb6gOy3NLtGiWTYTzCwhajgb2HlA==}\n+    dependencies:\n+      c8: 7.12.0\n+      vitest: 0.22.1_jsdom@20.0.0\n+    transitivePeerDependencies:\n+      - '@edge-runtime/vm'\n+      - '@vitest/browser'\n+      - '@vitest/ui'\n+      - happy-dom\n+      - jsdom\n+      - less\n+      - sass\n+      - stylus\n+      - supports-color\n+      - terser\n+    dev: true\n+\n   /@webassemblyjs/ast/1.11.1:\n     resolution: {integrity: sha512-ukBh14qFLjxTQNTXocdyksN5QdM28S1CxHt2rdskFyL+xFV7VremuBLVbmCePj+URalXBENx/9Lm7lnhihtCSw==}\n     dependencies:\n@@ -3081,6 +3428,11 @@ packages:\n       webpack-dev-server: 4.9.3_77l47gmqkrqiei5z7sbwz5iaj4\n     dev: true\n \n+  /@xmldom/xmldom/0.7.5:\n+    resolution: {integrity: sha512-V3BIhmY36fXZ1OtVcI9W+FxQqxVLsPKcNjWigIaa81dLC9IolJl5Mt4Cvhmr0flUnjSpTdrbMTSbXqYqV5dT6A==}\n+    engines: {node: '>=10.0.0'}\n+    dev: true\n+\n   /@xtuc/ieee754/1.2.0:\n     resolution: {integrity: sha512-DX8nKgqcGwsc0eJSqYt5lwP4DH5FlHnmuWWBRy7X0NcaGR0ZtuyeESgMwTYVEtxmsNGY+qit4QYT/MIYTOTPeA==}\n     dev: true\n@@ -3089,6 +3441,12 @@ packages:\n     resolution: {integrity: sha512-NuHqBY1PB/D8xU6s/thBgOAiAP7HOYDQ32+BFZILJ8ivkUkAHQnWfn6WhL79Owj1qmUnoN/YPhktdIoucipkAQ==}\n     dev: true\n \n+  /@zxing/text-encoding/0.9.0:\n+    resolution: {integrity: sha512-U/4aVJ2mxI0aDNI8Uq0wEhMgY+u4CNtEb0om3+y3+niDAsoTCOB33UF0sxpzqzdqXLqmvc+vZyAt4O8pPdfkwA==}\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n   /abab/2.0.6:\n     resolution: {integrity: sha512-j2afSsaIENvHZN2B8GOpF566vZ5WVk5opAiMTvWgaQT8DkbOqsTfvNAvHoRGU2zzP8cPoqys+xHTRDWW8L+/BA==}\n     dev: true\n@@ -3376,6 +3734,10 @@ packages:\n     engines: {node: '>=0.10.0'}\n     dev: true\n \n+  /assertion-error/1.1.0:\n+    resolution: {integrity: sha512-jgsaNduz+ndvGyFt3uSuWqvy4lCnIJiovtouQN5JZHOKCS2QuhEdbcQHFhVksz2N2U9hXJo8odG7ETyWlEeuDw==}\n+    dev: true\n+\n   /ast-metadata-inferer/0.7.0:\n     resolution: {integrity: sha512-OkMLzd8xelb3gmnp6ToFvvsHLtS6CbagTkFQvQ+ZYFe3/AIl9iKikNR9G7pY3GfOR/2Xc222hwBjzI7HLkE76Q==}\n     dependencies:\n@@ -3417,6 +3779,11 @@ packages:\n       postcss-value-parser: 4.2.0\n     dev: true\n \n+  /available-typed-arrays/1.0.5:\n+    resolution: {integrity: sha512-DMD0KiN46eipeziST1LPP/STfDU0sufISXmjSgvVsoU2tqxctQeASejWcfNtxYKqETM1UxQ8sp2OrSBWpHY6sw==}\n+    engines: {node: '>= 0.4'}\n+    dev: true\n+\n   /axe-core/4.4.2:\n     resolution: {integrity: sha512-LVAaGp/wkkgYJcjmHsoKx4juT1aQvJyPcW09MLCjVTh3V2cc6PnyempiLMNH5iMdfIX/zdbjUx2KDjMLCTdPeA==}\n     engines: {node: '>=12'}\n@@ -3608,6 +3975,10 @@ packages:\n     resolution: {integrity: sha512-1ugUSr8BHXRnK23KfuYS+gVMC3LB8QGH9W1iGtDPsNWoQbgtXSExkBu2aDR4epiGWZOjZsj6lDl/N/AqqTC3UA==}\n     dev: true\n \n+  /base64-js/1.5.1:\n+    resolution: {integrity: sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==}\n+    dev: true\n+\n   /batch/0.6.1:\n     resolution: {integrity: sha512-x+VAiMRL6UPkx+kudNvxTl6hB2XNNCG2r+7wixVfIYwu/2HKRXimwQyaumLjMveWvT2Hkd/cAJw+QBMfJ/EKVw==}\n     dev: true\n@@ -3625,6 +3996,14 @@ packages:\n     engines: {node: '>=8'}\n     dev: true\n \n+  /bl/4.1.0:\n+    resolution: {integrity: sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==}\n+    dependencies:\n+      buffer: 5.7.1\n+      inherits: 2.0.4\n+      readable-stream: 3.6.0\n+    dev: true\n+\n   /body-parser/1.20.0:\n     resolution: {integrity: sha512-DfJ+q6EPcGKZD1QWUjSpqp+Q7bDQTsQIF4zfUAtZ6qk+H/3/QRhg9CEp39ss+/T2vw0+HaidC0ecJj/DRLIaKg==}\n     engines: {node: '>= 0.8', npm: 1.2.8000 || >= 1.4.16}\n@@ -3697,6 +4076,13 @@ packages:\n     resolution: {integrity: sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==}\n     dev: true\n \n+  /buffer/5.7.1:\n+    resolution: {integrity: sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==}\n+    dependencies:\n+      base64-js: 1.5.1\n+      ieee754: 1.2.1\n+    dev: true\n+\n   /bytes-iec/3.1.1:\n     resolution: {integrity: sha512-fey6+4jDK7TFtFg/klGSvNKJctyU7n2aQdnM+CO0ruLPbqqMOM8Tio0Pc+deqUeVKX1tL5DQep1zQ7+37aTAsA==}\n     engines: {node: '>= 0.8'}\n@@ -3712,6 +4098,25 @@ packages:\n     engines: {node: '>= 0.8'}\n     dev: true\n \n+  /c8/7.12.0:\n+    resolution: {integrity: sha512-CtgQrHOkyxr5koX1wEUmN/5cfDa2ckbHRA4Gy5LAL0zaCFtVWJS5++n+w4/sr2GWGerBxgTjpKeDclk/Qk6W/A==}\n+    engines: {node: '>=10.12.0'}\n+    hasBin: true\n+    dependencies:\n+      '@bcoe/v8-coverage': 0.2.3\n+      '@istanbuljs/schema': 0.1.3\n+      find-up: 5.0.0\n+      foreground-child: 2.0.0\n+      istanbul-lib-coverage: 3.2.0\n+      istanbul-lib-report: 3.0.0\n+      istanbul-reports: 3.1.5\n+      rimraf: 3.0.2\n+      test-exclude: 6.0.0\n+      v8-to-istanbul: 9.0.1\n+      yargs: 16.2.0\n+      yargs-parser: 20.2.9\n+    dev: true\n+\n   /call-bind/1.0.2:\n     resolution: {integrity: sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA==}\n     dependencies:\n@@ -3763,6 +4168,19 @@ packages:\n     resolution: {integrity: sha512-VDQZ8OtpuIPMBA4YYvZXECtXbddMCUFJk1qu8Mqxfm/SZJNSr1cy4IuLCOL7RJ/YASrvJcYg1Zh+UEUQ5m6z8Q==}\n     dev: true\n \n+  /chai/4.3.6:\n+    resolution: {integrity: sha512-bbcp3YfHCUzMOvKqsztczerVgBKSsEijCySNlHHbX3VG1nskvqjz5Rfso1gGwD6w6oOV3eI60pKuMOV5MV7p3Q==}\n+    engines: {node: '>=4'}\n+    dependencies:\n+      assertion-error: 1.1.0\n+      check-error: 1.0.2\n+      deep-eql: 3.0.1\n+      get-func-name: 2.0.0\n+      loupe: 2.3.4\n+      pathval: 1.1.1\n+      type-detect: 4.0.8\n+    dev: true\n+\n   /chalk/2.4.2:\n     resolution: {integrity: sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==}\n     engines: {node: '>=4'}\n@@ -3780,8 +4198,16 @@ packages:\n       supports-color: 7.2.0\n     dev: true\n \n-  /chalk/4.1.2:\n-    resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}\n+  /chalk/4.1.1:\n+    resolution: {integrity: sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==}\n+    engines: {node: '>=10'}\n+    dependencies:\n+      ansi-styles: 4.3.0\n+      supports-color: 7.2.0\n+    dev: true\n+\n+  /chalk/4.1.2:\n+    resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}\n     engines: {node: '>=10'}\n     dependencies:\n       ansi-styles: 4.3.0\n@@ -3793,6 +4219,14 @@ packages:\n     engines: {node: '>=10'}\n     dev: true\n \n+  /chardet/0.7.0:\n+    resolution: {integrity: sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA==}\n+    dev: true\n+\n+  /check-error/1.0.2:\n+    resolution: {integrity: sha512-BrgHpW9NURQgzoNyjfq0Wu6VFO6D7IZEmJNdtgNqpzGG8RuNFHt2jQxWlAs4HMe119chBnv+34syEZtc6IhLtA==}\n+    dev: true\n+\n   /cheerio-select/2.1.0:\n     resolution: {integrity: sha512-9v9kG0LvzrlcungtnJtpGNxY+fzECQKhK4EGJX2vByejiMX84MFNQw4UxPJl3bFbTMw+Dfs37XaIkCwTZfLh4g==}\n     dependencies:\n@@ -3878,6 +4312,11 @@ packages:\n       restore-cursor: 3.1.0\n     dev: true\n \n+  /cli-spinners/2.7.0:\n+    resolution: {integrity: sha512-qu3pN8Y3qHNgE2AFweciB1IfMnmZ/fsNTEE+NOFjmGB2F/7rLhnhzppvpCnN4FovtP26k8lHyy9ptEbNwWFLzw==}\n+    engines: {node: '>=6'}\n+    dev: true\n+\n   /cli-truncate/2.1.0:\n     resolution: {integrity: sha512-n8fOixwDD6b/ObinzTrp1ZKFzbgvKZvuz/TvejnLn1aQfC6r52XEx85FmuC+3HI+JM7coBRXUvNqEU2PHVrHpg==}\n     engines: {node: '>=8'}\n@@ -3894,6 +4333,11 @@ packages:\n       string-width: 5.1.2\n     dev: true\n \n+  /cli-width/3.0.0:\n+    resolution: {integrity: sha512-FxqpkPPwu1HjuN93Omfm4h8uIanXofW0RxVEW3k5RKx+mJJYSthzNhp32Kzxxy3YAEZ/Dc/EWN1vZRY0+kOhbw==}\n+    engines: {node: '>= 10'}\n+    dev: true\n+\n   /cliui/7.0.4:\n     resolution: {integrity: sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==}\n     dependencies:\n@@ -3918,6 +4362,11 @@ packages:\n       is-regexp: 2.1.0\n     dev: true\n \n+  /clone/1.0.4:\n+    resolution: {integrity: sha512-JQHZ2QMW6l3aH/j6xCqQThY/9OH4D/9ls34cgkUBiEeocRTU04tHfKPBsUK1PqZCUQM7GiA0IIXJSuXHI64Kbg==}\n+    engines: {node: '>=0.8'}\n+    dev: true\n+\n   /clsx/1.2.1:\n     resolution: {integrity: sha512-EcR6r5a8bj6pu3ycsa/E/cKVGuTgZJZdsyUYHOksG/UHIiKfjxzRxYJpyVBwYaQeOvghal9fcc4PidlgzugAQg==}\n     engines: {node: '>=6'}\n@@ -4064,6 +4513,11 @@ packages:\n     resolution: {integrity: sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==}\n     dev: true\n \n+  /cookie/0.4.2:\n+    resolution: {integrity: sha512-aSWTXFzaKWkvHO1Ny/s+ePFpvKsPnjc551iI41v3ny/ow6tBG5Vd+FuqGNhh1LxOmVzOlGUriIlOaokOvhaStA==}\n+    engines: {node: '>= 0.6'}\n+    dev: true\n+\n   /cookie/0.5.0:\n     resolution: {integrity: sha512-YZ3GUyn/o8gfKJlnlX7g7xq4gyO6OSuhGPKaaGssGB2qgDUS0gPgtTvoyZLTt9Ab6dC4hfc9dV5arkvc/OCmrw==}\n     engines: {node: '>= 0.6'}\n@@ -4451,6 +4905,13 @@ packages:\n     resolution: {integrity: sha512-Q6fKUPqnAHAyhiUgFU7BUzLiv0kd8saH9al7tnu5Q/okj6dnupxyTgFIBjVzJATdfIAm9NAsvXNzjaKa+bxVyA==}\n     dev: true\n \n+  /deep-eql/3.0.1:\n+    resolution: {integrity: sha512-+QeIQyN5ZuO+3Uk5DYh6/1eKO0m0YmJFGNmFHGACpf1ClL1nmlV/p4gNgbl2pJGxgXb4faqo6UE+M5ACEMyVcw==}\n+    engines: {node: '>=0.12'}\n+    dependencies:\n+      type-detect: 4.0.8\n+    dev: true\n+\n   /deep-is/0.1.4:\n     resolution: {integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==}\n     dev: true\n@@ -4467,6 +4928,12 @@ packages:\n       execa: 5.1.1\n     dev: true\n \n+  /defaults/1.0.3:\n+    resolution: {integrity: sha512-s82itHOnYrN0Ib8r+z7laQz3sdE+4FP3d9Q7VLO7U+KRT+CR0GsWuyHxzdAY82I7cXv0G/twrqomTJLOssO5HA==}\n+    dependencies:\n+      clone: 1.0.4\n+    dev: true\n+\n   /define-lazy-prop/2.0.0:\n     resolution: {integrity: sha512-Ds09qNh8yw3khSjiJjiUInaGX9xlqZDY7JVryGxdxV7NPeuqQfplOpQ66yJFZut3jLa5zOwkXw1g9EI2uKh4Og==}\n     engines: {node: '>=8'}\n@@ -4811,6 +5278,215 @@ packages:\n       is-symbol: 1.0.4\n     dev: true\n \n+  /esbuild-android-64/0.14.54:\n+    resolution: {integrity: sha512-Tz2++Aqqz0rJ7kYBfz+iqyE3QMycD4vk7LBRyWaAVFgFtQ/O8EJOnVmTOiDWYZ/uYzB4kvP+bqejYdVKzE5lAQ==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [android]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild-android-arm64/0.14.54:\n+    resolution: {integrity: sha512-F9E+/QDi9sSkLaClO8SOV6etqPd+5DgJje1F9lOWoNncDdOBL2YF59IhsWATSt0TLZbYCf3pNlTHvVV5VfHdvg==}\n+    engines: {node: '>=12'}\n+    cpu: [arm64]\n+    os: [android]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild-darwin-64/0.14.54:\n+    resolution: {integrity: sha512-jtdKWV3nBviOd5v4hOpkVmpxsBy90CGzebpbO9beiqUYVMBtSc0AL9zGftFuBon7PNDcdvNCEuQqw2x0wP9yug==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [darwin]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild-darwin-arm64/0.14.54:\n+    resolution: {integrity: sha512-OPafJHD2oUPyvJMrsCvDGkRrVCar5aVyHfWGQzY1dWnzErjrDuSETxwA2HSsyg2jORLY8yBfzc1MIpUkXlctmw==}\n+    engines: {node: '>=12'}\n+    cpu: [arm64]\n+    os: [darwin]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild-freebsd-64/0.14.54:\n+    resolution: {integrity: sha512-OKwd4gmwHqOTp4mOGZKe/XUlbDJ4Q9TjX0hMPIDBUWWu/kwhBAudJdBoxnjNf9ocIB6GN6CPowYpR/hRCbSYAg==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [freebsd]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild-freebsd-arm64/0.14.54:\n+    resolution: {integrity: sha512-sFwueGr7OvIFiQT6WeG0jRLjkjdqWWSrfbVwZp8iMP+8UHEHRBvlaxL6IuKNDwAozNUmbb8nIMXa7oAOARGs1Q==}\n+    engines: {node: '>=12'}\n+    cpu: [arm64]\n+    os: [freebsd]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild-linux-32/0.14.54:\n+    resolution: {integrity: sha512-1ZuY+JDI//WmklKlBgJnglpUL1owm2OX+8E1syCD6UAxcMM/XoWd76OHSjl/0MR0LisSAXDqgjT3uJqT67O3qw==}\n+    engines: {node: '>=12'}\n+    cpu: [ia32]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild-linux-64/0.14.54:\n+    resolution: {integrity: sha512-EgjAgH5HwTbtNsTqQOXWApBaPVdDn7XcK+/PtJwZLT1UmpLoznPd8c5CxqsH2dQK3j05YsB3L17T8vE7cp4cCg==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild-linux-arm/0.14.54:\n+    resolution: {integrity: sha512-qqz/SjemQhVMTnvcLGoLOdFpCYbz4v4fUo+TfsWG+1aOu70/80RV6bgNpR2JCrppV2moUQkww+6bWxXRL9YMGw==}\n+    engines: {node: '>=12'}\n+    cpu: [arm]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild-linux-arm64/0.14.54:\n+    resolution: {integrity: sha512-WL71L+0Rwv+Gv/HTmxTEmpv0UgmxYa5ftZILVi2QmZBgX3q7+tDeOQNqGtdXSdsL8TQi1vIaVFHUPDe0O0kdig==}\n+    engines: {node: '>=12'}\n+    cpu: [arm64]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild-linux-mips64le/0.14.54:\n+    resolution: {integrity: sha512-qTHGQB8D1etd0u1+sB6p0ikLKRVuCWhYQhAHRPkO+OF3I/iSlTKNNS0Lh2Oc0g0UFGguaFZZiPJdJey3AGpAlw==}\n+    engines: {node: '>=12'}\n+    cpu: [mips64el]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild-linux-ppc64le/0.14.54:\n+    resolution: {integrity: sha512-j3OMlzHiqwZBDPRCDFKcx595XVfOfOnv68Ax3U4UKZ3MTYQB5Yz3X1mn5GnodEVYzhtZgxEBidLWeIs8FDSfrQ==}\n+    engines: {node: '>=12'}\n+    cpu: [ppc64]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild-linux-riscv64/0.14.54:\n+    resolution: {integrity: sha512-y7Vt7Wl9dkOGZjxQZnDAqqn+XOqFD7IMWiewY5SPlNlzMX39ocPQlOaoxvT4FllA5viyV26/QzHtvTjVNOxHZg==}\n+    engines: {node: '>=12'}\n+    cpu: [riscv64]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild-linux-s390x/0.14.54:\n+    resolution: {integrity: sha512-zaHpW9dziAsi7lRcyV4r8dhfG1qBidQWUXweUjnw+lliChJqQr+6XD71K41oEIC3Mx1KStovEmlzm+MkGZHnHA==}\n+    engines: {node: '>=12'}\n+    cpu: [s390x]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild-netbsd-64/0.14.54:\n+    resolution: {integrity: sha512-PR01lmIMnfJTgeU9VJTDY9ZerDWVFIUzAtJuDHwwceppW7cQWjBBqP48NdeRtoP04/AtO9a7w3viI+PIDr6d+w==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [netbsd]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild-openbsd-64/0.14.54:\n+    resolution: {integrity: sha512-Qyk7ikT2o7Wu76UsvvDS5q0amJvmRzDyVlL0qf5VLsLchjCa1+IAvd8kTBgUxD7VBUUVgItLkk609ZHUc1oCaw==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [openbsd]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild-sunos-64/0.14.54:\n+    resolution: {integrity: sha512-28GZ24KmMSeKi5ueWzMcco6EBHStL3B6ubM7M51RmPwXQGLe0teBGJocmWhgwccA1GeFXqxzILIxXpHbl9Q/Kw==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [sunos]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild-windows-32/0.14.54:\n+    resolution: {integrity: sha512-T+rdZW19ql9MjS7pixmZYVObd9G7kcaZo+sETqNH4RCkuuYSuv9AGHUVnPoP9hhuE1WM1ZimHz1CIBHBboLU7w==}\n+    engines: {node: '>=12'}\n+    cpu: [ia32]\n+    os: [win32]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild-windows-64/0.14.54:\n+    resolution: {integrity: sha512-AoHTRBUuYwXtZhjXZbA1pGfTo8cJo3vZIcWGLiUcTNgHpJJMC1rVA44ZereBHMJtotyN71S8Qw0npiCIkW96cQ==}\n+    engines: {node: '>=12'}\n+    cpu: [x64]\n+    os: [win32]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild-windows-arm64/0.14.54:\n+    resolution: {integrity: sha512-M0kuUvXhot1zOISQGXwWn6YtS+Y/1RT9WrVIOywZnJHo3jCDyewAc79aKNQWFCQm+xNHVTq9h8dZKvygoXQQRg==}\n+    engines: {node: '>=12'}\n+    cpu: [arm64]\n+    os: [win32]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /esbuild/0.14.54:\n+    resolution: {integrity: sha512-Cy9llcy8DvET5uznocPyqL3BFRrFXSVqbgpMJ9Wz8oVjZlh/zUSNbPRbov0VX7VxN2JH1Oa0uNxZ7eLRb62pJA==}\n+    engines: {node: '>=12'}\n+    hasBin: true\n+    requiresBuild: true\n+    optionalDependencies:\n+      '@esbuild/linux-loong64': 0.14.54\n+      esbuild-android-64: 0.14.54\n+      esbuild-android-arm64: 0.14.54\n+      esbuild-darwin-64: 0.14.54\n+      esbuild-darwin-arm64: 0.14.54\n+      esbuild-freebsd-64: 0.14.54\n+      esbuild-freebsd-arm64: 0.14.54\n+      esbuild-linux-32: 0.14.54\n+      esbuild-linux-64: 0.14.54\n+      esbuild-linux-arm: 0.14.54\n+      esbuild-linux-arm64: 0.14.54\n+      esbuild-linux-mips64le: 0.14.54\n+      esbuild-linux-ppc64le: 0.14.54\n+      esbuild-linux-riscv64: 0.14.54\n+      esbuild-linux-s390x: 0.14.54\n+      esbuild-netbsd-64: 0.14.54\n+      esbuild-openbsd-64: 0.14.54\n+      esbuild-sunos-64: 0.14.54\n+      esbuild-windows-32: 0.14.54\n+      esbuild-windows-64: 0.14.54\n+      esbuild-windows-arm64: 0.14.54\n+    dev: true\n+\n   /escalade/3.1.1:\n     resolution: {integrity: sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==}\n     engines: {node: '>=6'}\n@@ -5298,15 +5974,15 @@ packages:\n     engines: {node: '>= 0.8.0'}\n     dev: true\n \n-  /expect/28.1.1:\n-    resolution: {integrity: sha512-/AANEwGL0tWBwzLNOvO0yUdy2D52jVdNXppOqswC49sxMN2cPWsGCQdzuIf9tj6hHoBQzNvx75JUYuQAckPo3w==}\n+  /expect/28.1.3:\n+    resolution: {integrity: sha512-eEh0xn8HlsuOBxFgIss+2mX85VAS4Qy3OSkjV7rlBWljtA4oWH37glVGyOZSZvErDT/yBywZdPGwCXuTvSG85g==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n     dependencies:\n-      '@jest/expect-utils': 28.1.1\n+      '@jest/expect-utils': 28.1.3\n       jest-get-type: 28.0.2\n-      jest-matcher-utils: 28.1.1\n-      jest-message-util: 28.1.1\n-      jest-util: 28.1.1\n+      jest-matcher-utils: 28.1.3\n+      jest-message-util: 28.1.3\n+      jest-util: 28.1.3\n     dev: true\n \n   /express/4.18.1:\n@@ -5348,6 +6024,15 @@ packages:\n       - supports-color\n     dev: true\n \n+  /external-editor/3.1.0:\n+    resolution: {integrity: sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==}\n+    engines: {node: '>=4'}\n+    dependencies:\n+      chardet: 0.7.0\n+      iconv-lite: 0.4.24\n+      tmp: 0.0.33\n+    dev: true\n+\n   /fast-async/6.3.8:\n     resolution: {integrity: sha512-TjlooyqrYm/gOXjD2UHNwfrWkvTbzU105Nk4bvcRTeRoL+wIeK6rqbqDg3CN9z5p37cE2iXhP6SxQFz8OVIaUg==}\n     dependencies:\n@@ -5411,6 +6096,13 @@ packages:\n       bser: 2.1.1\n     dev: true\n \n+  /figures/3.2.0:\n+    resolution: {integrity: sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==}\n+    engines: {node: '>=8'}\n+    dependencies:\n+      escape-string-regexp: 1.0.5\n+    dev: true\n+\n   /file-entry-cache/6.0.1:\n     resolution: {integrity: sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==}\n     engines: {node: ^10.12.0 || >=12.0.0}\n@@ -5505,6 +6197,20 @@ packages:\n         optional: true\n     dev: true\n \n+  /for-each/0.3.3:\n+    resolution: {integrity: sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==}\n+    dependencies:\n+      is-callable: 1.2.4\n+    dev: true\n+\n+  /foreground-child/2.0.0:\n+    resolution: {integrity: sha512-dCIq9FpEcyQyXKCkyzmlPTFNgrCzPudOe+mhvJU5zAtlBnGVy2yKxtfsxK2tQBThwq225jcvBjpw1Gr40uzZCA==}\n+    engines: {node: '>=8.0.0'}\n+    dependencies:\n+      cross-spawn: 7.0.3\n+      signal-exit: 3.0.7\n+    dev: true\n+\n   /fork-ts-checker-webpack-plugin/7.2.12_3o2jfq6vfqxns3sz6wn2nnc3ei:\n     resolution: {integrity: sha512-SCjmmjPXPgp5XRQ49hXd2Eqth8rz4+ggtOHygTzyaOn32oIIOd8Kw+xKcgXNkFGlZy5l03bHRYTkbQs+TWhaNA==}\n     engines: {node: '>=12.13.0', yarn: '>=1.0.0'}\n@@ -5611,6 +6317,10 @@ packages:\n     engines: {node: 6.* || 8.* || >= 10.*}\n     dev: true\n \n+  /get-func-name/2.0.0:\n+    resolution: {integrity: sha512-Hm0ixYtaSZ/V7C8FJrtZIuBBI+iSgL+1Aq82zSu8VQNB4S3Gk8e7Qs3VwBDJAhmRZcFqkl3tQu36g/Foh5I5ig==}\n+    dev: true\n+\n   /get-intrinsic/1.1.2:\n     resolution: {integrity: sha512-Jfm3OyCxHh9DJyc28qGk+JmfkpO41A4XkneDSujN9MDXrm4oDKdHvndhZ2dN94+ERNfkYJWDclW6k2L/ZGHjXA==}\n     dependencies:\n@@ -5730,6 +6440,11 @@ packages:\n     resolution: {integrity: sha512-9ByhssR2fPVsNZj478qUUbKfmL0+t5BDVyjShtyZZLiK7ZDAArFFfopyOTj0M05wE2tJPisA4iTnnXl2YoPvOA==}\n     dev: true\n \n+  /graphql/16.6.0:\n+    resolution: {integrity: sha512-KPIBPDlW7NxrbT/eh4qPXz5FiFdL5UbaA0XUNz2Rp3Z3hqBSkbj0GVjwFDztsWVauZUWsbKHgMg++sk8UX0bkw==}\n+    engines: {node: ^12.22.0 || ^14.16.0 || ^16.0.0 || >=17.0.0}\n+    dev: true\n+\n   /gzip-size/6.0.0:\n     resolution: {integrity: sha512-ax7ZYomf6jqPTQ4+XCpUGyXKHk5WweS+e05MBO4/y3WJ5RkmPXNKvX+bx1behVILVwr6JSQvZAku021CHPXG3Q==}\n     engines: {node: '>=10'}\n@@ -5794,6 +6509,10 @@ packages:\n     hasBin: true\n     dev: true\n \n+  /headers-polyfill/3.0.10:\n+    resolution: {integrity: sha512-lOhQU7iG3AMcjmb8NIWCa+KwfJw5bY44BoWPtrj5A4iDbSD3ylGf5QcYr0ZyQnhkKQ2GgWNLdF2rfrXtXlF3nQ==}\n+    dev: true\n+\n   /hoist-non-react-statics/3.3.2:\n     resolution: {integrity: sha512-/gGivxi8JPKWNm/W0jSmzcMPpfpPLc3dY/6GxhX2hQ9iGj3aDfklV4ET7NjKpSinLpJ5vafa9iiGIEZg10SfBw==}\n     dependencies:\n@@ -6029,6 +6748,10 @@ packages:\n       harmony-reflect: 1.6.2\n     dev: true\n \n+  /ieee754/1.2.1:\n+    resolution: {integrity: sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==}\n+    dev: true\n+\n   /ignore-walk/3.0.4:\n     resolution: {integrity: sha512-PY6Ii8o1jMRA1z4F2hRkH/xN59ox43DavKvD3oDpfurRlOJyAHpifIwpbdv1n4jt4ov0jSpw3kQ4GhJnpBL6WQ==}\n     dependencies:\n@@ -6095,6 +6818,27 @@ packages:\n     resolution: {integrity: sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew==}\n     dev: true\n \n+  /inquirer/8.2.4:\n+    resolution: {integrity: sha512-nn4F01dxU8VeKfq192IjLsxu0/OmMZ4Lg3xKAns148rCaXP6ntAoEkVYZThWjwON8AlzdZZi6oqnhNbxUG9hVg==}\n+    engines: {node: '>=12.0.0'}\n+    dependencies:\n+      ansi-escapes: 4.3.2\n+      chalk: 4.1.2\n+      cli-cursor: 3.1.0\n+      cli-width: 3.0.0\n+      external-editor: 3.1.0\n+      figures: 3.2.0\n+      lodash: 4.17.21\n+      mute-stream: 0.0.8\n+      ora: 5.4.1\n+      run-async: 2.4.1\n+      rxjs: 7.5.6\n+      string-width: 4.2.3\n+      strip-ansi: 6.0.1\n+      through: 2.3.8\n+      wrap-ansi: 7.0.0\n+    dev: true\n+\n   /internal-slot/1.0.3:\n     resolution: {integrity: sha512-O0DB1JC/sPyZl7cIo78n5dR7eUSwwpYPiXRhTzNxZVAMUuB8vlnRFyLxdrVToks6XPLVnFfbzaVd5WLjhgg+vA==}\n     engines: {node: '>= 0.4'}\n@@ -6132,6 +6876,14 @@ packages:\n     engines: {node: '>= 10'}\n     dev: true\n \n+  /is-arguments/1.1.1:\n+    resolution: {integrity: sha512-8Q7EARjzEnKpt/PCD7e1cgUS0a6X8u5tdSiMqXhojOdoV9TsMsiO+9VLC5vAmO8N7/GmXn7yjR8qnA6bVAEzfA==}\n+    engines: {node: '>= 0.4'}\n+    dependencies:\n+      call-bind: 1.0.2\n+      has-tostringtag: 1.0.0\n+    dev: true\n+\n   /is-arrayish/0.2.1:\n     resolution: {integrity: sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==}\n     dev: true\n@@ -6201,18 +6953,34 @@ packages:\n     engines: {node: '>=6'}\n     dev: true\n \n+  /is-generator-function/1.0.10:\n+    resolution: {integrity: sha512-jsEjy9l3yiXEQ+PsXdmBwEPcOxaXWLspKdplFUVI9vq1iZgIekeC0L167qeu86czQaxed3q/Uzuw0swL0irL8A==}\n+    engines: {node: '>= 0.4'}\n+    dependencies:\n+      has-tostringtag: 1.0.0\n+    dev: true\n+\n   /is-glob/4.0.3:\n     resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}\n     engines: {node: '>=0.10.0'}\n     dependencies:\n       is-extglob: 2.1.1\n     dev: true\n \n+  /is-interactive/1.0.0:\n+    resolution: {integrity: sha512-2HvIEKRoqS62guEC+qBjpvRubdX910WCMuJTZ+I9yvqKU2/12eSL549HMwtabb4oupdj2sMP50k+XJfB/8JE6w==}\n+    engines: {node: '>=8'}\n+    dev: true\n+\n   /is-negative-zero/2.0.2:\n     resolution: {integrity: sha512-dqJvarLawXsFbNDeJW7zAz8ItJ9cd28YufuuFzh0G8pNHjJMnY08Dv7sYX2uF5UpQOwieAeOExEYAWWfu7ZZUA==}\n     engines: {node: '>= 0.4'}\n     dev: true\n \n+  /is-node-process/1.0.1:\n+    resolution: {integrity: sha512-5IcdXuf++TTNt3oGl9EBdkvndXA8gmc4bz/Y+mdEpWh3Mcn/+kOw6hI7LD5CocqJWMzeb0I0ClndRVNdEPuJXQ==}\n+    dev: true\n+\n   /is-number-object/1.0.7:\n     resolution: {integrity: sha512-k1U0IRzLMo7ZlYIfzRu23Oh6MiIFasgpb9X76eqfFZAqwH44UI4KTBvBYIZ1dSL9ZzChTB9ShHfLkR4pdW5krQ==}\n     engines: {node: '>= 0.4'}\n@@ -6317,6 +7085,22 @@ packages:\n       has-symbols: 1.0.3\n     dev: true\n \n+  /is-typed-array/1.1.9:\n+    resolution: {integrity: sha512-kfrlnTTn8pZkfpJMUgYD7YZ3qzeJgWUn8XfVYBARc4wnmNOmLbmuuaAs3q5fvB0UJOn6yHAKaGTPM7d6ezoD/A==}\n+    engines: {node: '>= 0.4'}\n+    dependencies:\n+      available-typed-arrays: 1.0.5\n+      call-bind: 1.0.2\n+      es-abstract: 1.20.1\n+      for-each: 0.3.3\n+      has-tostringtag: 1.0.0\n+    dev: true\n+\n+  /is-unicode-supported/0.1.0:\n+    resolution: {integrity: sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw==}\n+    engines: {node: '>=10'}\n+    dev: true\n+\n   /is-weakref/1.0.2:\n     resolution: {integrity: sha512-qctsuLZmIQ0+vSSMfoVvyFe2+GSEvnmZ2ezTup1SBse9+twCCeial6EEi3Nc2KFcf6+qz2FBPnjXsk8xhKSaPQ==}\n     dependencies:\n@@ -6389,6 +7173,14 @@ packages:\n       istanbul-lib-report: 3.0.0\n     dev: true\n \n+  /istanbul-reports/3.1.5:\n+    resolution: {integrity: sha512-nUsEMa9pBt/NOHqbcbeJEgqIlY/K7rVWUX6Lql2orY5e9roQOthbR3vtY4zzf2orPELg80fnxxk9zUyPlgwD1w==}\n+    engines: {node: '>=8'}\n+    dependencies:\n+      html-escaper: 2.0.2\n+      istanbul-lib-report: 3.0.0\n+    dev: true\n+\n   /jest-changed-files/28.0.2:\n     resolution: {integrity: sha512-QX9u+5I2s54ZnGoMEjiM2WeBvJR2J7w/8ZUmH2um/WLAuGAYFQcsVXY9+1YL6k0H/AGUdH8pXUAv6erDqEsvIA==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n@@ -6397,26 +7189,27 @@ packages:\n       throat: 6.0.1\n     dev: true\n \n-  /jest-circus/28.1.2:\n-    resolution: {integrity: sha512-E2vdPIJG5/69EMpslFhaA46WkcrN74LI5V/cSJ59L7uS8UNoXbzTxmwhpi9XrIL3zqvMt5T0pl5k2l2u2GwBNQ==}\n+  /jest-circus/28.1.3:\n+    resolution: {integrity: sha512-cZ+eS5zc79MBwt+IhQhiEp0OeBddpc1n8MBo1nMB8A7oPMKEO+Sre+wHaLJexQUj9Ya/8NOBY0RESUgYjB6fow==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n     dependencies:\n-      '@jest/environment': 28.1.2\n-      '@jest/expect': 28.1.2\n-      '@jest/test-result': 28.1.1\n-      '@jest/types': 28.1.1\n-      '@types/node': 18.0.3\n+      '@jest/environment': 28.1.3\n+      '@jest/expect': 28.1.3\n+      '@jest/test-result': 28.1.3\n+      '@jest/types': 28.1.3\n+      '@types/node': 18.0.6\n       chalk: 4.1.2\n       co: 4.6.0\n       dedent: 0.7.0\n       is-generator-fn: 2.1.0\n-      jest-each: 28.1.1\n-      jest-matcher-utils: 28.1.1\n-      jest-message-util: 28.1.1\n-      jest-runtime: 28.1.2\n-      jest-snapshot: 28.1.2\n-      jest-util: 28.1.1\n-      pretty-format: 28.1.1\n+      jest-each: 28.1.3\n+      jest-matcher-utils: 28.1.3\n+      jest-message-util: 28.1.3\n+      jest-runtime: 28.1.3\n+      jest-snapshot: 28.1.3\n+      jest-util: 28.1.3\n+      p-limit: 3.1.0\n+      pretty-format: 28.1.3\n       slash: 3.0.0\n       stack-utils: 2.0.5\n       throat: 6.0.1\n@@ -6472,19 +7265,20 @@ packages:\n       chalk: 4.1.2\n       ci-info: 3.3.2\n       deepmerge: 4.2.2\n+      diff-sequences: 28.1.1\n       glob: 7.2.3\n       graceful-fs: 4.2.10\n-      jest-circus: 28.1.2\n-      jest-environment-node: 28.1.2\n+      jest-circus: 28.1.3\n+      jest-environment-node: 28.1.3\n       jest-get-type: 28.0.2\n       jest-regex-util: 28.0.2\n-      jest-resolve: 28.1.1\n-      jest-runner: 28.1.2\n-      jest-util: 28.1.1\n-      jest-validate: 28.1.1\n+      jest-resolve: 28.1.3\n+      jest-runner: 28.1.3\n+      jest-util: 28.1.3\n+      jest-validate: 28.1.3\n       micromatch: 4.0.5\n       parse-json: 5.2.0\n-      pretty-format: 28.1.1\n+      pretty-format: 28.1.3\n       slash: 3.0.0\n       strip-json-comments: 3.1.1\n       ts-node: 10.8.2_oob3snywllkr2hdymfpal4vwlq\n@@ -6502,22 +7296,32 @@ packages:\n       pretty-format: 28.1.1\n     dev: true\n \n+  /jest-diff/28.1.3:\n+    resolution: {integrity: sha512-8RqP1B/OXzjjTWkqMX67iqgwBVJRgCyKD3L9nq+6ZqJMdvjE8RgHktqZ6jNrkdMT+dJuYNI3rhQpxaz7drJHfw==}\n+    engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n+    dependencies:\n+      chalk: 4.1.2\n+      diff-sequences: 28.1.1\n+      jest-get-type: 28.0.2\n+      pretty-format: 28.1.3\n+    dev: true\n+\n   /jest-docblock/28.1.1:\n     resolution: {integrity: sha512-3wayBVNiOYx0cwAbl9rwm5kKFP8yHH3d/fkEaL02NPTkDojPtheGB7HZSFY4wzX+DxyrvhXz0KSCVksmCknCuA==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n     dependencies:\n       detect-newline: 3.1.0\n     dev: true\n \n-  /jest-each/28.1.1:\n-    resolution: {integrity: sha512-A042rqh17ZvEhRceDMi784ppoXR7MWGDEKTXEZXb4svt0eShMZvijGxzKsx+yIjeE8QYmHPrnHiTSQVhN4nqaw==}\n+  /jest-each/28.1.3:\n+    resolution: {integrity: sha512-arT1z4sg2yABU5uogObVPvSlSMQlDA48owx07BDPAiasW0yYpYHYOo4HHLz9q0BVzDVU4hILFjzJw0So9aCL/g==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n     dependencies:\n-      '@jest/types': 28.1.1\n+      '@jest/types': 28.1.3\n       chalk: 4.1.2\n       jest-get-type: 28.0.2\n-      jest-util: 28.1.1\n-      pretty-format: 28.1.1\n+      jest-util: 28.1.3\n+      pretty-format: 28.1.3\n     dev: true\n \n   /jest-environment-jsdom/28.1.2:\n@@ -6539,16 +7343,16 @@ packages:\n       - utf-8-validate\n     dev: true\n \n-  /jest-environment-node/28.1.2:\n-    resolution: {integrity: sha512-oYsZz9Qw27XKmOgTtnl0jW7VplJkN2oeof+SwAwKFQacq3CLlG9u4kTGuuLWfvu3J7bVutWlrbEQMOCL/jughw==}\n+  /jest-environment-node/28.1.3:\n+    resolution: {integrity: sha512-ugP6XOhEpjAEhGYvp5Xj989ns5cB1K6ZdjBYuS30umT4CQEETaxSiPcZ/E1kFktX4GkrcM4qu07IIlDYX1gp+A==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n     dependencies:\n-      '@jest/environment': 28.1.2\n-      '@jest/fake-timers': 28.1.2\n-      '@jest/types': 28.1.1\n-      '@types/node': 18.0.3\n-      jest-mock: 28.1.1\n-      jest-util: 28.1.1\n+      '@jest/environment': 28.1.3\n+      '@jest/fake-timers': 28.1.3\n+      '@jest/types': 28.1.3\n+      '@types/node': 18.0.6\n+      jest-mock: 28.1.3\n+      jest-util: 28.1.3\n     dev: true\n \n   /jest-fetch-mock/3.0.3:\n@@ -6571,7 +7375,7 @@ packages:\n     dependencies:\n       '@jest/types': 28.1.1\n       '@types/graceful-fs': 4.1.5\n-      '@types/node': 18.0.3\n+      '@types/node': 18.0.6\n       anymatch: 3.1.2\n       fb-watchman: 2.0.1\n       graceful-fs: 4.2.10\n@@ -6584,12 +7388,31 @@ packages:\n       fsevents: 2.3.2\n     dev: true\n \n-  /jest-leak-detector/28.1.1:\n-    resolution: {integrity: sha512-4jvs8V8kLbAaotE+wFR7vfUGf603cwYtFf1/PYEsyX2BAjSzj8hQSVTP6OWzseTl0xL6dyHuKs2JAks7Pfubmw==}\n+  /jest-haste-map/28.1.3:\n+    resolution: {integrity: sha512-3S+RQWDXccXDKSWnkHa/dPwt+2qwA8CJzR61w3FoYCvoo3Pn8tvGcysmMF0Bj0EX5RYvAI2EIvC57OmotfdtKA==}\n+    engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n+    dependencies:\n+      '@jest/types': 28.1.3\n+      '@types/graceful-fs': 4.1.5\n+      '@types/node': 18.0.6\n+      anymatch: 3.1.2\n+      fb-watchman: 2.0.1\n+      graceful-fs: 4.2.10\n+      jest-regex-util: 28.0.2\n+      jest-util: 28.1.3\n+      jest-worker: 28.1.3\n+      micromatch: 4.0.5\n+      walker: 1.0.8\n+    optionalDependencies:\n+      fsevents: 2.3.2\n+    dev: true\n+\n+  /jest-leak-detector/28.1.3:\n+    resolution: {integrity: sha512-WFVJhnQsiKtDEo5lG2mM0v40QWnBM+zMdHHyJs8AWZ7J0QZJS59MsyKeJHWhpBZBH32S48FOVvGyOFT1h0DlqA==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n     dependencies:\n       jest-get-type: 28.0.2\n-      pretty-format: 28.1.1\n+      pretty-format: 28.1.3\n     dev: true\n \n   /jest-localstorage-mock/2.4.21:\n@@ -6607,6 +7430,16 @@ packages:\n       pretty-format: 28.1.1\n     dev: true\n \n+  /jest-matcher-utils/28.1.3:\n+    resolution: {integrity: sha512-kQeJ7qHemKfbzKoGjHHrRKH6atgxMk8Enkk2iPQ3XwO6oE/KYD8lMYOziCkeSB9G4adPM4nR1DE8Tf5JeWH6Bw==}\n+    engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n+    dependencies:\n+      chalk: 4.1.2\n+      jest-diff: 28.1.3\n+      jest-get-type: 28.0.2\n+      pretty-format: 28.1.3\n+    dev: true\n+\n   /jest-message-util/28.1.1:\n     resolution: {integrity: sha512-xoDOOT66fLfmTRiqkoLIU7v42mal/SqwDKvfmfiWAdJMSJiU+ozgluO7KbvoAgiwIrrGZsV7viETjc8GNrA/IQ==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n@@ -6622,6 +7455,21 @@ packages:\n       stack-utils: 2.0.5\n     dev: true\n \n+  /jest-message-util/28.1.3:\n+    resolution: {integrity: sha512-PFdn9Iewbt575zKPf1286Ht9EPoJmYT7P0kY+RibeYZ2XtOr53pDLEFoTWXbd1h4JiGiWpTBC84fc8xMXQMb7g==}\n+    engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n+    dependencies:\n+      '@babel/code-frame': 7.18.6\n+      '@jest/types': 28.1.3\n+      '@types/stack-utils': 2.0.1\n+      chalk: 4.1.2\n+      graceful-fs: 4.2.10\n+      micromatch: 4.0.5\n+      pretty-format: 28.1.3\n+      slash: 3.0.0\n+      stack-utils: 2.0.5\n+    dev: true\n+\n   /jest-mock/28.1.1:\n     resolution: {integrity: sha512-bDCb0FjfsmKweAvE09dZT59IMkzgN0fYBH6t5S45NoJfd2DHkS3ySG2K+hucortryhO3fVuXdlxWcbtIuV/Skw==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n@@ -6630,7 +7478,15 @@ packages:\n       '@types/node': 18.0.3\n     dev: true\n \n-  /jest-pnp-resolver/1.2.2_jest-resolve@28.1.1:\n+  /jest-mock/28.1.3:\n+    resolution: {integrity: sha512-o3J2jr6dMMWYVH4Lh/NKmDXdosrsJgi4AviS8oXLujcjpCMBb1FMsblDnOXKZKfSiHLxYub1eS0IHuRXsio9eA==}\n+    engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n+    dependencies:\n+      '@jest/types': 28.1.3\n+      '@types/node': 18.0.6\n+    dev: true\n+\n+  /jest-pnp-resolver/1.2.2_jest-resolve@28.1.3:\n     resolution: {integrity: sha512-olV41bKSMm8BdnuMsewT4jqlZ8+3TCARAXjZGT9jcoSnrfUnRCqnMoF9XEeoWjbzObpqF9dRhHQj0Xb9QdF6/w==}\n     engines: {node: '>=6'}\n     peerDependencies:\n@@ -6639,124 +7495,124 @@ packages:\n       jest-resolve:\n         optional: true\n     dependencies:\n-      jest-resolve: 28.1.1\n+      jest-resolve: 28.1.3\n     dev: true\n \n   /jest-regex-util/28.0.2:\n     resolution: {integrity: sha512-4s0IgyNIy0y9FK+cjoVYoxamT7Zeo7MhzqRGx7YDYmaQn1wucY9rotiGkBzzcMXTtjrCAP/f7f+E0F7+fxPNdw==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n     dev: true\n \n-  /jest-resolve-dependencies/28.1.2:\n-    resolution: {integrity: sha512-OXw4vbOZuyRTBi3tapWBqdyodU+T33ww5cPZORuTWkg+Y8lmsxQlVu3MWtJh6NMlKRTHQetF96yGPv01Ye7Mbg==}\n+  /jest-resolve-dependencies/28.1.3:\n+    resolution: {integrity: sha512-qa0QO2Q0XzQoNPouMbCc7Bvtsem8eQgVPNkwn9LnS+R2n8DaVDPL/U1gngC0LTl1RYXJU0uJa2BMC2DbTfFrHA==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n     dependencies:\n       jest-regex-util: 28.0.2\n-      jest-snapshot: 28.1.2\n+      jest-snapshot: 28.1.3\n     transitivePeerDependencies:\n       - supports-color\n     dev: true\n \n-  /jest-resolve/28.1.1:\n-    resolution: {integrity: sha512-/d1UbyUkf9nvsgdBildLe6LAD4DalgkgZcKd0nZ8XUGPyA/7fsnaQIlKVnDiuUXv/IeZhPEDrRJubVSulxrShA==}\n+  /jest-resolve/28.1.3:\n+    resolution: {integrity: sha512-Z1W3tTjE6QaNI90qo/BJpfnvpxtaFTFw5CDgwpyE/Kz8U/06N1Hjf4ia9quUhCh39qIGWF1ZuxFiBiJQwSEYKQ==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n     dependencies:\n       chalk: 4.1.2\n       graceful-fs: 4.2.10\n-      jest-haste-map: 28.1.1\n-      jest-pnp-resolver: 1.2.2_jest-resolve@28.1.1\n-      jest-util: 28.1.1\n-      jest-validate: 28.1.1\n+      jest-haste-map: 28.1.3\n+      jest-pnp-resolver: 1.2.2_jest-resolve@28.1.3\n+      jest-util: 28.1.3\n+      jest-validate: 28.1.3\n       resolve: 1.22.1\n       resolve.exports: 1.1.0\n       slash: 3.0.0\n     dev: true\n \n-  /jest-runner/28.1.2:\n-    resolution: {integrity: sha512-6/k3DlAsAEr5VcptCMdhtRhOoYClZQmxnVMZvZ/quvPGRpN7OBQYPIC32tWSgOnbgqLXNs5RAniC+nkdFZpD4A==}\n+  /jest-runner/28.1.3:\n+    resolution: {integrity: sha512-GkMw4D/0USd62OVO0oEgjn23TM+YJa2U2Wu5zz9xsQB1MxWKDOlrnykPxnMsN0tnJllfLPinHTka61u0QhaxBA==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n     dependencies:\n-      '@jest/console': 28.1.1\n-      '@jest/environment': 28.1.2\n-      '@jest/test-result': 28.1.1\n-      '@jest/transform': 28.1.2\n-      '@jest/types': 28.1.1\n-      '@types/node': 18.0.3\n+      '@jest/console': 28.1.3\n+      '@jest/environment': 28.1.3\n+      '@jest/test-result': 28.1.3\n+      '@jest/transform': 28.1.3\n+      '@jest/types': 28.1.3\n+      '@types/node': 18.0.6\n       chalk: 4.1.2\n       emittery: 0.10.2\n       graceful-fs: 4.2.10\n       jest-docblock: 28.1.1\n-      jest-environment-node: 28.1.2\n-      jest-haste-map: 28.1.1\n-      jest-leak-detector: 28.1.1\n-      jest-message-util: 28.1.1\n-      jest-resolve: 28.1.1\n-      jest-runtime: 28.1.2\n-      jest-util: 28.1.1\n-      jest-watcher: 28.1.1\n-      jest-worker: 28.1.1\n+      jest-environment-node: 28.1.3\n+      jest-haste-map: 28.1.3\n+      jest-leak-detector: 28.1.3\n+      jest-message-util: 28.1.3\n+      jest-resolve: 28.1.3\n+      jest-runtime: 28.1.3\n+      jest-util: 28.1.3\n+      jest-watcher: 28.1.3\n+      jest-worker: 28.1.3\n+      p-limit: 3.1.0\n       source-map-support: 0.5.13\n-      throat: 6.0.1\n     transitivePeerDependencies:\n       - supports-color\n     dev: true\n \n-  /jest-runtime/28.1.2:\n-    resolution: {integrity: sha512-i4w93OsWzLOeMXSi9epmakb2+3z0AchZtUQVF1hesBmcQQy4vtaql5YdVe9KexdJaVRyPDw8DoBR0j3lYsZVYw==}\n+  /jest-runtime/28.1.3:\n+    resolution: {integrity: sha512-NU+881ScBQQLc1JHG5eJGU7Ui3kLKrmwCPPtYsJtBykixrM2OhVQlpMmFWJjMyDfdkGgBMNjXCGB/ebzsgNGQw==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n     dependencies:\n-      '@jest/environment': 28.1.2\n-      '@jest/fake-timers': 28.1.2\n-      '@jest/globals': 28.1.2\n+      '@jest/environment': 28.1.3\n+      '@jest/fake-timers': 28.1.3\n+      '@jest/globals': 28.1.3\n       '@jest/source-map': 28.1.2\n-      '@jest/test-result': 28.1.1\n-      '@jest/transform': 28.1.2\n-      '@jest/types': 28.1.1\n+      '@jest/test-result': 28.1.3\n+      '@jest/transform': 28.1.3\n+      '@jest/types': 28.1.3\n       chalk: 4.1.2\n       cjs-module-lexer: 1.2.2\n       collect-v8-coverage: 1.0.1\n       execa: 5.1.1\n       glob: 7.2.3\n       graceful-fs: 4.2.10\n-      jest-haste-map: 28.1.1\n-      jest-message-util: 28.1.1\n-      jest-mock: 28.1.1\n+      jest-haste-map: 28.1.3\n+      jest-message-util: 28.1.3\n+      jest-mock: 28.1.3\n       jest-regex-util: 28.0.2\n-      jest-resolve: 28.1.1\n-      jest-snapshot: 28.1.2\n-      jest-util: 28.1.1\n+      jest-resolve: 28.1.3\n+      jest-snapshot: 28.1.3\n+      jest-util: 28.1.3\n       slash: 3.0.0\n       strip-bom: 4.0.0\n     transitivePeerDependencies:\n       - supports-color\n     dev: true\n \n-  /jest-snapshot/28.1.2:\n-    resolution: {integrity: sha512-wzrieFttZYfLvrCVRJxX+jwML2YTArOUqFpCoSVy1QUapx+LlV9uLbV/mMEhYj4t7aMeE9aSQFHSvV/oNoDAMA==}\n+  /jest-snapshot/28.1.3:\n+    resolution: {integrity: sha512-4lzMgtiNlc3DU/8lZfmqxN3AYD6GGLbl+72rdBpXvcV+whX7mDrREzkPdp2RnmfIiWBg1YbuFSkXduF2JcafJg==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n     dependencies:\n       '@babel/core': 7.18.6\n       '@babel/generator': 7.18.7\n       '@babel/plugin-syntax-typescript': 7.18.6_@babel+core@7.18.6\n       '@babel/traverse': 7.18.8\n       '@babel/types': 7.18.8\n-      '@jest/expect-utils': 28.1.1\n-      '@jest/transform': 28.1.2\n-      '@jest/types': 28.1.1\n+      '@jest/expect-utils': 28.1.3\n+      '@jest/transform': 28.1.3\n+      '@jest/types': 28.1.3\n       '@types/babel__traverse': 7.17.1\n       '@types/prettier': 2.6.3\n       babel-preset-current-node-syntax: 1.0.1_@babel+core@7.18.6\n       chalk: 4.1.2\n-      expect: 28.1.1\n+      expect: 28.1.3\n       graceful-fs: 4.2.10\n-      jest-diff: 28.1.1\n+      jest-diff: 28.1.3\n       jest-get-type: 28.0.2\n-      jest-haste-map: 28.1.1\n-      jest-matcher-utils: 28.1.1\n-      jest-message-util: 28.1.1\n-      jest-util: 28.1.1\n+      jest-haste-map: 28.1.3\n+      jest-matcher-utils: 28.1.3\n+      jest-message-util: 28.1.3\n+      jest-util: 28.1.3\n       natural-compare: 1.4.0\n-      pretty-format: 28.1.1\n+      pretty-format: 28.1.3\n       semver: 7.3.7\n     transitivePeerDependencies:\n       - supports-color\n@@ -6774,6 +7630,18 @@ packages:\n       picomatch: 2.3.1\n     dev: true\n \n+  /jest-util/28.1.3:\n+    resolution: {integrity: sha512-XdqfpHwpcSRko/C35uLYFM2emRAltIIKZiJ9eAmhjsj0CqZMa0p1ib0R5fWIqGhn1a103DebTbpqIaP1qCQ6tQ==}\n+    engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n+    dependencies:\n+      '@jest/types': 28.1.3\n+      '@types/node': 18.0.6\n+      chalk: 4.1.2\n+      ci-info: 3.3.2\n+      graceful-fs: 4.2.10\n+      picomatch: 2.3.1\n+    dev: true\n+\n   /jest-validate/28.1.1:\n     resolution: {integrity: sha512-Kpf6gcClqFCIZ4ti5++XemYJWUPCFUW+N2gknn+KgnDf549iLul3cBuKVe1YcWRlaF8tZV8eJCap0eECOEE3Ug==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n@@ -6786,17 +7654,29 @@ packages:\n       pretty-format: 28.1.1\n     dev: true\n \n-  /jest-watcher/28.1.1:\n-    resolution: {integrity: sha512-RQIpeZ8EIJMxbQrXpJQYIIlubBnB9imEHsxxE41f54ZwcqWLysL/A0ZcdMirf+XsMn3xfphVQVV4EW0/p7i7Ug==}\n+  /jest-validate/28.1.3:\n+    resolution: {integrity: sha512-SZbOGBWEsaTxBGCOpsRWlXlvNkvTkY0XxRfh7zYmvd8uL5Qzyg0CHAXiXKROflh801quA6+/DsT4ODDthOC/OA==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n     dependencies:\n-      '@jest/test-result': 28.1.1\n-      '@jest/types': 28.1.1\n-      '@types/node': 18.0.3\n+      '@jest/types': 28.1.3\n+      camelcase: 6.3.0\n+      chalk: 4.1.2\n+      jest-get-type: 28.0.2\n+      leven: 3.1.0\n+      pretty-format: 28.1.3\n+    dev: true\n+\n+  /jest-watcher/28.1.3:\n+    resolution: {integrity: sha512-t4qcqj9hze+jviFPUN3YAtAEeFnr/azITXQEMARf5cMwKY2SMBRnCQTXLixTl20OR6mLh9KLMrgVJgJISym+1g==}\n+    engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n+    dependencies:\n+      '@jest/test-result': 28.1.3\n+      '@jest/types': 28.1.3\n+      '@types/node': 18.0.6\n       ansi-escapes: 4.3.2\n       chalk: 4.1.2\n       emittery: 0.10.2\n-      jest-util: 28.1.1\n+      jest-util: 28.1.3\n       string-length: 4.0.2\n     dev: true\n \n@@ -6818,6 +7698,15 @@ packages:\n       supports-color: 8.1.1\n     dev: true\n \n+  /jest-worker/28.1.3:\n+    resolution: {integrity: sha512-CqRA220YV/6jCo8VWvAt1KKx6eek1VIHMPeLEbpcfSfkEeWyBNppynM/o6q+Wmw+sOhos2ml34wZbSX3G13//g==}\n+    engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n+    dependencies:\n+      '@types/node': 18.0.6\n+      merge-stream: 2.0.0\n+      supports-color: 8.1.1\n+    dev: true\n+\n   /jest/28.1.2_eudefza5kbv4z3gj6nnnsfn4wu:\n     resolution: {integrity: sha512-Tuf05DwLeCh2cfWCQbcz9UxldoDyiR1E9Igaei5khjonKncYdc6LDfynKCEWozK0oLE3GD+xKAo2u8x/0s6GOg==}\n     engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n@@ -6838,6 +7727,11 @@ packages:\n       - ts-node\n     dev: true\n \n+  /js-levenshtein/1.1.6:\n+    resolution: {integrity: sha512-X2BB11YZtrRqY4EnQcLX5Rh373zbK4alC1FW7D7MBhL2gtcC17cTnr6DmfHZeS0s2rTHjUTMMHfG7gO8SSdw+g==}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n   /js-tokens/4.0.0:\n     resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}\n     dev: true\n@@ -6903,6 +7797,48 @@ packages:\n       - utf-8-validate\n     dev: true\n \n+  /jsdom/20.0.0:\n+    resolution: {integrity: sha512-x4a6CKCgx00uCmP+QakBDFXwjAJ69IkkIWHmtmjd3wvXPcdOS44hfX2vqkOQrVrq8l9DhNNADZRXaCEWvgXtVA==}\n+    engines: {node: '>=14'}\n+    peerDependencies:\n+      canvas: ^2.5.0\n+    peerDependenciesMeta:\n+      canvas:\n+        optional: true\n+    dependencies:\n+      abab: 2.0.6\n+      acorn: 8.7.1\n+      acorn-globals: 6.0.0\n+      cssom: 0.5.0\n+      cssstyle: 2.3.0\n+      data-urls: 3.0.2\n+      decimal.js: 10.3.1\n+      domexception: 4.0.0\n+      escodegen: 2.0.0\n+      form-data: 4.0.0\n+      html-encoding-sniffer: 3.0.0\n+      http-proxy-agent: 5.0.0\n+      https-proxy-agent: 5.0.1\n+      is-potential-custom-element-name: 1.0.1\n+      nwsapi: 2.2.1\n+      parse5: 7.0.0\n+      saxes: 6.0.0\n+      symbol-tree: 3.2.4\n+      tough-cookie: 4.0.0\n+      w3c-hr-time: 1.0.2\n+      w3c-xmlserializer: 3.0.0\n+      webidl-conversions: 7.0.0\n+      whatwg-encoding: 2.0.0\n+      whatwg-mimetype: 3.0.0\n+      whatwg-url: 11.0.0\n+      ws: 8.8.0\n+      xml-name-validator: 4.0.0\n+    transitivePeerDependencies:\n+      - bufferutil\n+      - supports-color\n+      - utf-8-validate\n+    dev: true\n+\n   /jsesc/0.5.0:\n     resolution: {integrity: sha512-uZz5UnB7u4T9LvwmFqXii7pZSouaRPorGs5who1Ip7VO0wxanFvBL7GkM6dTHlgX+jhBApRetaWpnDabOeTcnA==}\n     hasBin: true\n@@ -7088,6 +8024,11 @@ packages:\n       json5: 2.2.1\n     dev: true\n \n+  /local-pkg/0.4.2:\n+    resolution: {integrity: sha512-mlERgSPrbxU3BP4qBqAvvwlgW4MTg78iwJdGGnv7kibKjWcJksrG3t6LB5lXI93wXRDvG4NpUgJFmTG4T6rdrg==}\n+    engines: {node: '>=14'}\n+    dev: true\n+\n   /locate-path/2.0.0:\n     resolution: {integrity: sha512-NCI2kiDkyR7VeEKm27Kda/iQHyKJe1Bu0FlTbYp3CqJu+9IFe9bLyAjMxf5ZDDbEg+iMPzB5zYyUTSm8wVTKmA==}\n     engines: {node: '>=4'}\n@@ -7153,6 +8094,14 @@ packages:\n   /lodash/4.17.21:\n     resolution: {integrity: sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==}\n \n+  /log-symbols/4.1.0:\n+    resolution: {integrity: sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg==}\n+    engines: {node: '>=10'}\n+    dependencies:\n+      chalk: 4.1.2\n+      is-unicode-supported: 0.1.0\n+    dev: true\n+\n   /log-update/4.0.0:\n     resolution: {integrity: sha512-9fkkDevMefjg0mmzWFBW8YkFP91OrizzkW3diF7CpG+S2EYdy4+TVfGwz1zeF8x7hCx1ovSPTOE9Ngib74qqUg==}\n     engines: {node: '>=10'}\n@@ -7170,6 +8119,12 @@ packages:\n       js-tokens: 4.0.0\n     dev: true\n \n+  /loupe/2.3.4:\n+    resolution: {integrity: sha512-OvKfgCC2Ndby6aSTREl5aCCPTNIzlDfQZvZxNUrBrihDhL3xcrYegTblhmEiCrg2kKQz4XsFIaemE5BF4ybSaQ==}\n+    dependencies:\n+      get-func-name: 2.0.0\n+    dev: true\n+\n   /lower-case/2.0.2:\n     resolution: {integrity: sha512-7fm3l3NAF9WfN6W3JOmf5drwpVqX78JtoGJ3A6W0a6ZnldM41w2fV5D490psKFTpMds8TJse/eHLFFsNHHjHgg==}\n     dependencies:\n@@ -7381,6 +8336,43 @@ packages:\n     resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}\n     dev: true\n \n+  /msw/0.44.2_typescript@4.7.4:\n+    resolution: {integrity: sha512-u8wjzzcMWouoZtuIShCwx4M3wFF5sBAV1f8K4a0WX8kiihFjzl89IKE1VYmTclLyMIwpOq8qQ1HTpuh2BFX/3A==}\n+    engines: {node: '>=14'}\n+    hasBin: true\n+    requiresBuild: true\n+    peerDependencies:\n+      typescript: '>= 4.2.x <= 4.7.x'\n+    peerDependenciesMeta:\n+      typescript:\n+        optional: true\n+    dependencies:\n+      '@mswjs/cookies': 0.2.2\n+      '@mswjs/interceptors': 0.17.3\n+      '@open-draft/until': 1.0.3\n+      '@types/cookie': 0.4.1\n+      '@types/js-levenshtein': 1.1.1\n+      chalk: 4.1.1\n+      chokidar: 3.5.3\n+      cookie: 0.4.2\n+      graphql: 16.6.0\n+      headers-polyfill: 3.0.10\n+      inquirer: 8.2.4\n+      is-node-process: 1.0.1\n+      js-levenshtein: 1.1.6\n+      node-fetch: 2.6.7\n+      outvariant: 1.3.0\n+      path-to-regexp: 6.2.1\n+      statuses: 2.0.1\n+      strict-event-emitter: 0.2.4\n+      type-fest: 1.4.0\n+      typescript: 4.7.4\n+      yargs: 17.5.1\n+    transitivePeerDependencies:\n+      - encoding\n+      - supports-color\n+    dev: true\n+\n   /multicast-dns/7.2.5:\n     resolution: {integrity: sha512-2eznPJP8z2BFLX50tf0LuODrpINqP1RVIm/CObbTcBRITQgmC/TjcREF1NeTBzIcR5XO/ukWo+YHOjBbFwIupg==}\n     hasBin: true\n@@ -7389,6 +8381,10 @@ packages:\n       thunky: 1.1.0\n     dev: true\n \n+  /mute-stream/0.0.8:\n+    resolution: {integrity: sha512-nnbWWOkoWyUsTjKrhgD0dcz22mdkSnpYqbEjIm2nhwhuxlSkpywJmBo8h0ZqJdkp73mb90SssHkN4rsRaBAfAA==}\n+    dev: true\n+\n   /nanoid/3.3.4:\n     resolution: {integrity: sha512-MqBkQh/OHTS2egovRtLk45wEyNXwF+cokD+1YPf9u5VfJiRdAiRwB2froX5Co9Rh20xs4siNPm8naNotSD6RBw==}\n     engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n@@ -7699,6 +8695,30 @@ packages:\n       word-wrap: 1.2.3\n     dev: true\n \n+  /ora/5.4.1:\n+    resolution: {integrity: sha512-5b6Y85tPxZZ7QytO+BQzysW31HJku27cRIlkbAXaNx+BdcVi+LlRFmVXzeF6a7JCwJpyw5c4b+YSVImQIrBpuQ==}\n+    engines: {node: '>=10'}\n+    dependencies:\n+      bl: 4.1.0\n+      chalk: 4.1.2\n+      cli-cursor: 3.1.0\n+      cli-spinners: 2.7.0\n+      is-interactive: 1.0.0\n+      is-unicode-supported: 0.1.0\n+      log-symbols: 4.1.0\n+      strip-ansi: 6.0.1\n+      wcwidth: 1.0.1\n+    dev: true\n+\n+  /os-tmpdir/1.0.2:\n+    resolution: {integrity: sha512-D2FR03Vir7FIu45XBY20mTb+/ZSWB00sjU9jdQXt83gDrI4Ztz5Fs7/yy74g2N5SVQY4xY1qDr4rNddwYRVX0g==}\n+    engines: {node: '>=0.10.0'}\n+    dev: true\n+\n+  /outvariant/1.3.0:\n+    resolution: {integrity: sha512-yeWM9k6UPfG/nzxdaPlJkB2p08hCg4xP6Lx99F+vP8YF7xyZVfTmJjrrNalkmzudD4WFvNLVudQikqUmF8zhVQ==}\n+    dev: true\n+\n   /p-limit/1.3.0:\n     resolution: {integrity: sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==}\n     engines: {node: '>=4'}\n@@ -7874,6 +8894,10 @@ packages:\n     resolution: {integrity: sha512-5DFkuoqlv1uYQKxy8omFBeJPQcdoE07Kv2sferDCrAq1ohOU+MSDswDIbnx3YAM60qIOnYa53wBhXW0EbMonrQ==}\n     dev: true\n \n+  /path-to-regexp/6.2.1:\n+    resolution: {integrity: sha512-JLyh7xT1kizaEvcaXOQwOc2/Yhw6KZOvPf1S8401UyLk86CU79LN3vl7ztXGm/pZ+YjoyAJ4rxmHwbkBXJX+yw==}\n+    dev: true\n+\n   /path-type/3.0.0:\n     resolution: {integrity: sha512-T2ZUsdZFHgA3u4e5PfPbjd7HDDpxPnQb5jN0SrDsjNSuVXHJqtwTnWqG0B1jZrgmJ/7lj1EmVIByWt1gxGkWvg==}\n     engines: {node: '>=4'}\n@@ -7886,6 +8910,10 @@ packages:\n     engines: {node: '>=8'}\n     dev: true\n \n+  /pathval/1.1.1:\n+    resolution: {integrity: sha512-Dp6zGqpTdETdR63lehJYPeIOqpiNBNtc7BpWSLrOje7UaIsE5aY92r/AunQA7rsXvet3lrJ3JnZX29UPTKXyKQ==}\n+    dev: true\n+\n   /performance-now/2.1.0:\n     resolution: {integrity: sha512-7EAHlyLHI56VEIdK57uwHdHKIaAGbnXPiw0yWbarQZOKaKpvUIgW0jWRVLiatnM+XXlSwsanIBH/hzGMJulMow==}\n     dev: true\n@@ -8658,6 +9686,15 @@ packages:\n       source-map-js: 1.0.2\n     dev: true\n \n+  /postcss/8.4.16:\n+    resolution: {integrity: sha512-ipHE1XBvKzm5xI7hiHCZJCSugxvsdq2mPnsq5+UF+VHCjiBvtDrlxJfMBToWaP9D5XlgNmcFGqoHmUn0EYEaRQ==}\n+    engines: {node: ^10 || ^12 || >=14}\n+    dependencies:\n+      nanoid: 3.3.4\n+      picocolors: 1.0.0\n+      source-map-js: 1.0.2\n+    dev: true\n+\n   /preact/10.6.2:\n     resolution: {integrity: sha512-ppDjurt75nSxyikpyali+uKwRl8CK9N6ntOPovGIEGQagjMLVzEgVqFEsUUyUrqyE9Ch90KE0jmFc9q2QcPLBA==}\n \n@@ -8710,6 +9747,16 @@ packages:\n       react-is: 18.2.0\n     dev: true\n \n+  /pretty-format/28.1.3:\n+    resolution: {integrity: sha512-8gFb/To0OmxHR9+ZTb14Df2vNxdGCX8g1xWGUTqUw5TiZvcQf5sHKObd5UcPyLLyowNwDAMTF3XWOG1B6mxl1Q==}\n+    engines: {node: ^12.13.0 || ^14.15.0 || ^16.10.0 || >=17.0.0}\n+    dependencies:\n+      '@jest/schemas': 28.1.3\n+      ansi-regex: 5.0.1\n+      ansi-styles: 5.2.0\n+      react-is: 18.2.0\n+    dev: true\n+\n   /process-nextick-args/2.0.1:\n     resolution: {integrity: sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==}\n     dev: true\n@@ -9132,13 +10179,26 @@ packages:\n       glob: 7.2.3\n     dev: true\n \n+  /rollup/2.77.3:\n+    resolution: {integrity: sha512-/qxNTG7FbmefJWoeeYJFbHehJ2HNWnjkAFRKzWN/45eNBBF/r8lo992CwcJXEzyVxs5FmfId+vTSTQDb+bxA+g==}\n+    engines: {node: '>=10.0.0'}\n+    hasBin: true\n+    optionalDependencies:\n+      fsevents: 2.3.2\n+    dev: true\n+\n   /rst-selector-parser/2.2.3:\n     resolution: {integrity: sha512-nDG1rZeP6oFTLN6yNDV/uiAvs1+FS/KlrEwh7+y7dpuApDBy6bI2HTBcc0/V8lv9OTqfyD34eF7au2pm8aBbhA==}\n     dependencies:\n       lodash.flattendeep: 4.4.0\n       nearley: 2.20.1\n     dev: true\n \n+  /run-async/2.4.1:\n+    resolution: {integrity: sha512-tvVnVv01b8c1RrA6Ep7JkStj85Guv/YrMcwqYQnwjsAS2cTmmPGBBjAjpCW7RrSodNSoE2/qg9O4bceNvUuDgQ==}\n+    engines: {node: '>=0.12.0'}\n+    dev: true\n+\n   /run-parallel/1.2.0:\n     resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}\n     dependencies:\n@@ -9170,6 +10230,13 @@ packages:\n       xmlchars: 2.2.0\n     dev: true\n \n+  /saxes/6.0.0:\n+    resolution: {integrity: sha512-xAg7SOnEhrm5zI3puOOKyy1OMcMlIJZYNJY7xLBwSze0UjhPLnWfj2GF2EpT0jmzaJKIWKHLsaSSajf35bcYnA==}\n+    engines: {node: '>=v12.22.7'}\n+    dependencies:\n+      xmlchars: 2.2.0\n+    dev: true\n+\n   /schema-utils/2.7.1:\n     resolution: {integrity: sha512-SHiNtMOUGWBQJwzISiVYKu82GiV4QYGePp3odlY1tuKO7gPtphAT5R/py0fA6xtbgLL/RvtJZnU9b8s0F1q0Xg==}\n     engines: {node: '>= 8.9.0'}\n@@ -9294,6 +10361,10 @@ packages:\n       - supports-color\n     dev: true\n \n+  /set-cookie-parser/2.5.1:\n+    resolution: {integrity: sha512-1jeBGaKNGdEq4FgIrORu/N570dwoPYio8lSoYLWmX7sQ//0JY08Xh9o5pBcgmHQ/MbsYp/aZnOe1s1lIsbLprQ==}\n+    dev: true\n+\n   /setprototypeof/1.1.0:\n     resolution: {integrity: sha512-BvE/TwpZX4FXExxOxZyRGQQv651MSwmWKZGqvmPcRIjDqWub67kTKuIMx43cZZrS/cBBzwBcNDWoFxt2XEFIpQ==}\n     dev: true\n@@ -9451,6 +10522,7 @@ packages:\n   /source-map/0.6.1:\n     resolution: {integrity: sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==}\n     engines: {node: '>=0.10.0'}\n+    requiresBuild: true\n     dev: true\n \n   /spdx-correct/3.1.1:\n@@ -9533,6 +10605,12 @@ packages:\n       stubs: 3.0.0\n     dev: true\n \n+  /strict-event-emitter/0.2.4:\n+    resolution: {integrity: sha512-xIqTLS5azUH1djSUsLH9DbP6UnM/nI18vu8d43JigCQEoVsnY+mrlE+qv6kYqs6/1OkMnMIiL6ffedQSZStuoQ==}\n+    dependencies:\n+      events: 3.3.0\n+    dev: true\n+\n   /string-argv/0.3.1:\n     resolution: {integrity: sha512-a1uQGz7IyVy9YwhqjZIZu1c8JO8dNIe20xBmSS6qu9kv++k3JGzCVmprbNN5Kn+BgzD5E7YYwg1CcjuJMRNsvg==}\n     engines: {node: '>=0.6.19'}\n@@ -9943,6 +11021,23 @@ packages:\n     resolution: {integrity: sha512-eHY7nBftgThBqOyHGVN+l8gF0BucP09fMo0oO/Lb0w1OF80dJv+lDVpXG60WMQvkcxAkNybKsrEIE3ZtKGmPrA==}\n     dev: true\n \n+  /tinypool/0.2.4:\n+    resolution: {integrity: sha512-Vs3rhkUH6Qq1t5bqtb816oT+HeJTXfwt2cbPH17sWHIYKTotQIFPk3tf2fgqRrVyMDVOc1EnPgzIxfIulXVzwQ==}\n+    engines: {node: '>=14.0.0'}\n+    dev: true\n+\n+  /tinyspy/1.0.2:\n+    resolution: {integrity: sha512-bSGlgwLBYf7PnUsQ6WOc6SJ3pGOcd+d8AA6EUnLDDM0kWEstC1JIlSZA3UNliDXhd9ABoS7hiRBDCu+XP/sf1Q==}\n+    engines: {node: '>=14.0.0'}\n+    dev: true\n+\n+  /tmp/0.0.33:\n+    resolution: {integrity: sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==}\n+    engines: {node: '>=0.6.0'}\n+    dependencies:\n+      os-tmpdir: 1.0.2\n+    dev: true\n+\n   /tmpl/1.0.5:\n     resolution: {integrity: sha512-3f0uOEAQwIqGuWW2MVzYg8fV/QNnc/IpuJNG837rLuczAaLVHslWHZQj4IGiEl5Hs3kkbhwL9Ab7Hrsmuj+Smw==}\n     dev: true\n@@ -10041,6 +11136,37 @@ packages:\n       yn: 3.1.1\n     dev: true\n \n+  /ts-node/10.9.1_tdn3ypgnfy6bmey2q4hu5jonwi:\n+    resolution: {integrity: sha512-NtVysVPkxxrwFGUUxGYhfux8k78pQB3JqYBXlLRZgdGUqTO5wU/UyHop5p70iEbGhB7q5KmiZiU0Y3KlJrScEw==}\n+    hasBin: true\n+    peerDependencies:\n+      '@swc/core': '>=1.2.50'\n+      '@swc/wasm': '>=1.2.50'\n+      '@types/node': '*'\n+      typescript: '>=2.7'\n+    peerDependenciesMeta:\n+      '@swc/core':\n+        optional: true\n+      '@swc/wasm':\n+        optional: true\n+    dependencies:\n+      '@cspotcode/source-map-support': 0.8.1\n+      '@tsconfig/node10': 1.0.9\n+      '@tsconfig/node12': 1.0.11\n+      '@tsconfig/node14': 1.0.3\n+      '@tsconfig/node16': 1.0.3\n+      '@types/node': 18.0.6\n+      acorn: 8.7.1\n+      acorn-walk: 8.2.0\n+      arg: 4.1.3\n+      create-require: 1.1.1\n+      diff: 4.0.2\n+      make-error: 1.3.6\n+      typescript: 4.7.4\n+      v8-compile-cache-lib: 3.0.1\n+      yn: 3.1.1\n+    dev: true\n+\n   /tsconfig-paths-webpack-plugin/3.5.2:\n     resolution: {integrity: sha512-EhnfjHbzm5IYI9YPNVIxx1moxMI4bpHD2e0zTXeDNQcwjjRaGepP7IhTHJkyDBG0CAOoxRfe7jCG630Ou+C6Pw==}\n     dependencies:\n@@ -10075,6 +11201,139 @@ packages:\n       typescript: 4.7.4\n     dev: true\n \n+  /turbo-android-arm64/1.4.3:\n+    resolution: {integrity: sha512-ZUvdoEHJkTkOFOO9PKWYrdONDBVqkNsvwEMufTVf07RXgqmbXDPkznzT4hcQm6xXyqWqJdjgSAMdlm+2nNE1Og==}\n+    cpu: [arm64]\n+    os: [android]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /turbo-darwin-64/1.4.3:\n+    resolution: {integrity: sha512-gapoVm5qbu2TJS4lJ6fM3o2eAkLyXSxHihw/4NRAYmwHCH3at1/cIAnRcctB/HLL3ZaB/p3HKb8mnI7k6xNHOw==}\n+    cpu: [x64]\n+    os: [darwin]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /turbo-darwin-arm64/1.4.3:\n+    resolution: {integrity: sha512-XUe6FTsHamEH7FfNslYYO04yecAaguhZuwW4kE9B/BAP8MUYsmVqONauLPyE/YqM6pf2K0xwVe+RlEGf53CWbg==}\n+    cpu: [arm64]\n+    os: [darwin]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /turbo-freebsd-64/1.4.3:\n+    resolution: {integrity: sha512-1CAjXmDClgMXdWZXreUfAbGBB2WB9TZHfJIdsgnDqt4fIcFGChknzYqc+Fj3tGHAczMpinGjBbWIzFuxOq/ofQ==}\n+    cpu: [x64]\n+    os: [freebsd]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /turbo-freebsd-arm64/1.4.3:\n+    resolution: {integrity: sha512-j5C7j/vwabPKpr5d6YlLgHGHBZCOcXj3HdkBshDHTQ0wghH0NuCUUaesYxI3wva/4/Ec0dhIrb20Laa/HMxXLA==}\n+    cpu: [arm64]\n+    os: [freebsd]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /turbo-linux-32/1.4.3:\n+    resolution: {integrity: sha512-vnc+StXIoQEnxIU43j7rEz/J+v+RV4dbUdUolBq0k9gkUV8KMCcqPkIa753K47E2KLNGKXMaYDI6AHQX1GAQZg==}\n+    cpu: [ia32]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /turbo-linux-64/1.4.3:\n+    resolution: {integrity: sha512-KAUeIa8Ejt6BLrBGbVurlrjDxqh62tu75D4cqKqKfzWspcbEtmdqlV6qthXfm8SlzGSNuQXX0+qXEWds2FIZXg==}\n+    cpu: [x64]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /turbo-linux-arm/1.4.3:\n+    resolution: {integrity: sha512-zZNoHUK5ioFyxAngh8tHe763Dzb22ne3LJkaZn0ExkFHJtWClWv536lPcDuQPpIH9W9iz5OwPKtN32DNpNwk8A==}\n+    cpu: [arm]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /turbo-linux-arm64/1.4.3:\n+    resolution: {integrity: sha512-rzB7w+RHCQkKr8aDxxozv/IzdN976CYyBiRocSf9QGU73uyAg8pCo3i0MiENSRjDC+tUbdbu2lEUwGXf9ziB9Q==}\n+    cpu: [arm64]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /turbo-linux-mips64le/1.4.3:\n+    resolution: {integrity: sha512-Ztr1BM5NiUsHWjB7zpkP2RpRDA/fjbLaCbkyfyGlLmVkrSkh05NFBD03IWs2LSLy/wb6vRpL3MQ4FKcb97Tn8w==}\n+    cpu: [mipsel]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /turbo-linux-ppc64le/1.4.3:\n+    resolution: {integrity: sha512-tJaFJWxwfy/iLd69VHZj6JcXy9hO8LQ+ZUOna/p/wiy5WrFVgEYlD+4gfECfRZ+52EIelMgXl97vACaN1WMhLw==}\n+    cpu: [ppc64]\n+    os: [linux]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /turbo-windows-32/1.4.3:\n+    resolution: {integrity: sha512-w9LyYd+DW3PYFXu9vQiie5lfdqmVIKLV0h181C49hempkIXfgQAosXfaugYWDwBc0GEBoBIQB0vGQKE7gt5nzA==}\n+    cpu: [ia32]\n+    os: [win32]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /turbo-windows-64/1.4.3:\n+    resolution: {integrity: sha512-qPCqemxxOrXyqqig3fVQozRkOwo5oJSsQ3FTZE5YlNu2NwwWvY1mC0X4WTZIDsbj4oHqr0riqC7RGKbjQm1IIQ==}\n+    cpu: [x64]\n+    os: [win32]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /turbo-windows-arm64/1.4.3:\n+    resolution: {integrity: sha512-djnOOBjw33AnUx2SR6TMOpDr3nKLnVD+HcZvnQz70HyE331AKWjBoEE4rtUOteLAfViWAp3afbiljFSOnbU00Q==}\n+    cpu: [arm64]\n+    os: [win32]\n+    requiresBuild: true\n+    dev: true\n+    optional: true\n+\n+  /turbo/1.4.3:\n+    resolution: {integrity: sha512-g08eD2HdO/XW5xGHnXr0cXGiWnrgFBI6pN/3u0EOTeerKAsWIZU0ZrpSnl3whRtImeBB/gQu7Eu1waM2VOxzgw==}\n+    hasBin: true\n+    requiresBuild: true\n+    optionalDependencies:\n+      turbo-android-arm64: 1.4.3\n+      turbo-darwin-64: 1.4.3\n+      turbo-darwin-arm64: 1.4.3\n+      turbo-freebsd-64: 1.4.3\n+      turbo-freebsd-arm64: 1.4.3\n+      turbo-linux-32: 1.4.3\n+      turbo-linux-64: 1.4.3\n+      turbo-linux-arm: 1.4.3\n+      turbo-linux-arm64: 1.4.3\n+      turbo-linux-mips64le: 1.4.3\n+      turbo-linux-ppc64le: 1.4.3\n+      turbo-windows-32: 1.4.3\n+      turbo-windows-64: 1.4.3\n+      turbo-windows-arm64: 1.4.3\n+    dev: true\n+\n   /type-check/0.3.2:\n     resolution: {integrity: sha512-ZCmOJdvOWDBYJlzAoFkC+Q0+bUyEOS1ltgp1MGU03fqHG+dbi9tBFU2Rd9QKiDZFAYrhPh2JUf7rZRIuHRKtOg==}\n     engines: {node: '>= 0.8.0'}\n@@ -10119,6 +11378,11 @@ packages:\n     engines: {node: '>=8'}\n     dev: true\n \n+  /type-fest/1.4.0:\n+    resolution: {integrity: sha512-yGSza74xk0UG8k+pLh5oeoYirvIiWo5t0/o3zHHAO2tRDiZcxWP7fywNlXhqb6/r6sWvwi+RsyQMWhVLe4BVuA==}\n+    engines: {node: '>=10'}\n+    dev: true\n+\n   /type-is/1.6.18:\n     resolution: {integrity: sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==}\n     engines: {node: '>= 0.6'}\n@@ -10231,6 +11495,17 @@ packages:\n     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}\n     dev: true\n \n+  /util/0.12.4:\n+    resolution: {integrity: sha512-bxZ9qtSlGUWSOy9Qa9Xgk11kSslpuZwaxCg4sNIDj6FLucDab2JxnHwyNTCpHMtK1MjoQiWQ6DiUMZYbSrO+Sw==}\n+    dependencies:\n+      inherits: 2.0.4\n+      is-arguments: 1.1.1\n+      is-generator-function: 1.0.10\n+      is-typed-array: 1.1.9\n+      safe-buffer: 5.2.1\n+      which-typed-array: 1.1.8\n+    dev: true\n+\n   /utila/0.4.0:\n     resolution: {integrity: sha512-Z0DbgELS9/L/75wZbro8xAnT50pBVFQZ+hUEueGDU5FN51YSCYM+jdxsfCiHjwNP/4LCDD0i/graKpeBnOXKRA==}\n     dev: true\n@@ -10274,6 +11549,73 @@ packages:\n     engines: {node: '>= 0.8'}\n     dev: true\n \n+  /vite/3.0.9:\n+    resolution: {integrity: sha512-waYABTM+G6DBTCpYAxvevpG50UOlZuynR0ckTK5PawNVt7ebX6X7wNXHaGIO6wYYFXSM7/WcuFuO2QzhBB6aMw==}\n+    engines: {node: ^14.18.0 || >=16.0.0}\n+    hasBin: true\n+    peerDependencies:\n+      less: '*'\n+      sass: '*'\n+      stylus: '*'\n+      terser: ^5.4.0\n+    peerDependenciesMeta:\n+      less:\n+        optional: true\n+      sass:\n+        optional: true\n+      stylus:\n+        optional: true\n+      terser:\n+        optional: true\n+    dependencies:\n+      esbuild: 0.14.54\n+      postcss: 8.4.16\n+      resolve: 1.22.1\n+      rollup: 2.77.3\n+    optionalDependencies:\n+      fsevents: 2.3.2\n+    dev: true\n+\n+  /vitest/0.22.1_jsdom@20.0.0:\n+    resolution: {integrity: sha512-+x28YTnSLth4KbXg7MCzoDAzPJlJex7YgiZbUh6YLp0/4PqVZ7q7/zyfdL0OaPtKTpNiQFPpMC8Y2MSzk8F7dw==}\n+    engines: {node: '>=v14.16.0'}\n+    hasBin: true\n+    peerDependencies:\n+      '@edge-runtime/vm': '*'\n+      '@vitest/browser': '*'\n+      '@vitest/ui': '*'\n+      happy-dom: '*'\n+      jsdom: '*'\n+    peerDependenciesMeta:\n+      '@edge-runtime/vm':\n+        optional: true\n+      '@vitest/browser':\n+        optional: true\n+      '@vitest/ui':\n+        optional: true\n+      happy-dom:\n+        optional: true\n+      jsdom:\n+        optional: true\n+    dependencies:\n+      '@types/chai': 4.3.3\n+      '@types/chai-subset': 1.3.3\n+      '@types/node': 18.0.6\n+      chai: 4.3.6\n+      debug: 4.3.4\n+      jsdom: 20.0.0\n+      local-pkg: 0.4.2\n+      tinypool: 0.2.4\n+      tinyspy: 1.0.2\n+      vite: 3.0.9\n+    transitivePeerDependencies:\n+      - less\n+      - sass\n+      - stylus\n+      - supports-color\n+      - terser\n+    dev: true\n+\n   /w3c-hr-time/1.0.2:\n     resolution: {integrity: sha512-z8P5DvDNjKDoFIHK7q8r8lackT6l+jo/Ye3HOle7l9nICP9lf1Ci25fy9vHd0JOWewkIFzXIEig3TdKT7JQ5fQ==}\n     dependencies:\n@@ -10307,6 +11649,20 @@ packages:\n       minimalistic-assert: 1.0.1\n     dev: true\n \n+  /wcwidth/1.0.1:\n+    resolution: {integrity: sha512-XHPEwS0q6TaxcvG85+8EYkbiCux2XtWG2mkc47Ng2A77BQu9+DqIOJldST4HgPkuea7dvKSj5VgX3P1d4rW8Tg==}\n+    dependencies:\n+      defaults: 1.0.3\n+    dev: true\n+\n+  /web-encoding/1.1.5:\n+    resolution: {integrity: sha512-HYLeVCdJ0+lBYV2FvNZmv3HJ2Nt0QYXqZojk3d9FJOLkwnuhzM9tmamh8d7HPM8QqjKH8DeHkFTx+CFlWpZZDA==}\n+    dependencies:\n+      util: 0.12.4\n+    optionalDependencies:\n+      '@zxing/text-encoding': 0.9.0\n+    dev: true\n+\n   /webidl-conversions/3.0.1:\n     resolution: {integrity: sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==}\n     dev: true\n@@ -10510,6 +11866,10 @@ packages:\n       iconv-lite: 0.6.3\n     dev: true\n \n+  /whatwg-fetch/3.6.2:\n+    resolution: {integrity: sha512-bJlen0FcuU/0EMLrdbJ7zOnW6ITZLrZMIarMUVmdKtsGvZna8vxKYaexICWPfZ8qwf9fzNq+UEIZrnSaApt6RA==}\n+    dev: true\n+\n   /whatwg-mimetype/3.0.0:\n     resolution: {integrity: sha512-nt+N2dzIutVRxARx1nghPKGv1xHikU7HKdfafKkLNLindmPU/ch3U31NOCGGA/dmPcmb1VlofO0vnKAcsm0o/Q==}\n     engines: {node: '>=12'}\n@@ -10548,6 +11908,18 @@ packages:\n       is-symbol: 1.0.4\n     dev: true\n \n+  /which-typed-array/1.1.8:\n+    resolution: {integrity: sha512-Jn4e5PItbcAHyLoRDwvPj1ypu27DJbtdYXUa5zsinrUx77Uvfb0cXwwnGMTn7cjUfhhqgVQnVJCwF+7cgU7tpw==}\n+    engines: {node: '>= 0.4'}\n+    dependencies:\n+      available-typed-arrays: 1.0.5\n+      call-bind: 1.0.2\n+      es-abstract: 1.20.1\n+      for-each: 0.3.3\n+      has-tostringtag: 1.0.0\n+      is-typed-array: 1.1.9\n+    dev: true\n+\n   /which/1.3.1:\n     resolution: {integrity: sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==}\n     hasBin: true\n@@ -10666,6 +12038,19 @@ packages:\n     engines: {node: '>=12'}\n     dev: true\n \n+  /yargs/16.2.0:\n+    resolution: {integrity: sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==}\n+    engines: {node: '>=10'}\n+    dependencies:\n+      cliui: 7.0.4\n+      escalade: 3.1.1\n+      get-caller-file: 2.0.5\n+      require-directory: 2.1.1\n+      string-width: 4.2.3\n+      y18n: 5.0.8\n+      yargs-parser: 20.2.9\n+    dev: true\n+\n   /yargs/17.5.1:\n     resolution: {integrity: sha512-t6YAJcxDkNX7NFYiVtKvWUz8l+PaKTLiL63mJYWR2GnHq2gjEWISzsLp9wg3aY36dY1j+gfIEL3pIF+XlJJfbA==}\n     engines: {node: '>=12'}"
    },
    {
      "sha": "3ff5faaaf5f139c707e338e7e89e51606e9e0ace",
      "filename": "frontend/pnpm-workspace.yaml",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpnpm-workspace.yaml",
      "raw_url": "https://github.com/umputun/remark42/raw/b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf/frontend%2Fpnpm-workspace.yaml",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fpnpm-workspace.yaml?ref=b47b6c4f5615f18cef0eb4c9e5bfbf40f35dd8cf",
      "patch": "@@ -1,2 +1,3 @@\n packages:\n   - \"apps/*\"\n+  - \"packages/*\""
    }
  ]
}
