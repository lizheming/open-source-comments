{
  "sha": "872ef82f4d957a7cd19aa17b0200d1cc8cfb034b",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODo4NzJlZjgyZjRkOTU3YTdjZDE5YWExN2IwMjAwZDFjYzhjZmIwMzRi",
  "commit": {
    "author": {
      "name": "Guo Xiang Tan",
      "email": "gxtan1990@gmail.com",
      "date": "2020-08-17T06:58:47Z"
    },
    "committer": {
      "name": "Guo Xiang Tan",
      "email": "gxtan1990@gmail.com",
      "date": "2020-08-17T06:58:47Z"
    },
    "message": "Revert \"PERF: Prefer joins over subquery for `User#private_posts_for_user`.\"\n\nThis reverts commit 05b43e5ae45fed10742de0829e579880098adcf7.",
    "tree": {
      "sha": "99014674f77b975013a67ea53f389c28eb0fd75e",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/99014674f77b975013a67ea53f389c28eb0fd75e"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/872ef82f4d957a7cd19aa17b0200d1cc8cfb034b",
    "comment_count": 1,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMOJGkc46I9vMVlDg+9EQF5qsHyAFAl86KqgACgkQ+9EQF5qs\nHyDmsBAAg9i5j5cxXZTCB80EPd6GF3moxHf0e2WiZiqI9zNUmqrwuLm/ZFQyWU/g\nKoO+pWCJW2eYGIYA15AMapEnZWKFiAlWLa4PqWPat/Z3rpw4I+9ajhlSzNKiFMAx\n8AE5yTGbTKkUQUqLzUNkxJkjKVe1SbvRNtbIf48IRiKKNuzfdS1nV3h/7rk/3DEj\n4xkcsr1jT4ghyIK41GE6MU224Jxutefe5IZz3g+43RINn/3IIrp8/+6c5xdvs5w4\ntDx+ZCxO8sVG6R4y+J8eV0hVAHDUz7eRIz/vTBwsTs+8y/zH/RTVipDEZJd3a+AE\nA4ydO/k7vzudRw9VmAgX7pZV7MZ59o93E8Efi0EAvdc5o8+aDvrp9Hv/EOnRxXxh\nY3IW1spgxcSz8hfozR0EYDwnjyz5AqjcKjbnSkg2dlJarijzvhvAPougUfjh0S+C\nbH7M96iz0TOLdpyaBh+RCtURkaEcLuTrA6oTPlKEw5uHJVmanSqKs+tGFzFqP4nM\neZxA96RZB67YMXjAUwWUlp5xVPw4+kltijR9ELsZHAl/W5SEmggrKLUnz1u7XvEI\nVW73V0baIr3tr2CneShEGO6ao0DMW+AOFdLWoPqcUmo+iJBwjg796axRf3bB27Bg\nrbJBvU8u/16GreKN36AclziLfYH8sJesA98535e7Hy/dXVJsg4s=\n=hEOa\n-----END PGP SIGNATURE-----",
      "payload": "tree 99014674f77b975013a67ea53f389c28eb0fd75e\nparent 05b43e5ae45fed10742de0829e579880098adcf7\nauthor Guo Xiang Tan <gxtan1990@gmail.com> 1597647527 +0800\ncommitter Guo Xiang Tan <gxtan1990@gmail.com> 1597647527 +0800\n\nRevert \"PERF: Prefer joins over subquery for `User#private_posts_for_user`.\"\n\nThis reverts commit 05b43e5ae45fed10742de0829e579880098adcf7.\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/872ef82f4d957a7cd19aa17b0200d1cc8cfb034b",
  "html_url": "https://github.com/discourse/discourse/commit/872ef82f4d957a7cd19aa17b0200d1cc8cfb034b",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/872ef82f4d957a7cd19aa17b0200d1cc8cfb034b/comments",
  "author": {
    "login": "tgxworld",
    "id": 4335742,
    "node_id": "MDQ6VXNlcjQzMzU3NDI=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/4335742?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tgxworld",
    "html_url": "https://github.com/tgxworld",
    "followers_url": "https://api.github.com/users/tgxworld/followers",
    "following_url": "https://api.github.com/users/tgxworld/following{/other_user}",
    "gists_url": "https://api.github.com/users/tgxworld/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tgxworld/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tgxworld/subscriptions",
    "organizations_url": "https://api.github.com/users/tgxworld/orgs",
    "repos_url": "https://api.github.com/users/tgxworld/repos",
    "events_url": "https://api.github.com/users/tgxworld/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tgxworld/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tgxworld",
    "id": 4335742,
    "node_id": "MDQ6VXNlcjQzMzU3NDI=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/4335742?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tgxworld",
    "html_url": "https://github.com/tgxworld",
    "followers_url": "https://api.github.com/users/tgxworld/followers",
    "following_url": "https://api.github.com/users/tgxworld/following{/other_user}",
    "gists_url": "https://api.github.com/users/tgxworld/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tgxworld/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tgxworld/subscriptions",
    "organizations_url": "https://api.github.com/users/tgxworld/orgs",
    "repos_url": "https://api.github.com/users/tgxworld/repos",
    "events_url": "https://api.github.com/users/tgxworld/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tgxworld/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "05b43e5ae45fed10742de0829e579880098adcf7",
      "url": "https://api.github.com/repos/discourse/discourse/commits/05b43e5ae45fed10742de0829e579880098adcf7",
      "html_url": "https://github.com/discourse/discourse/commit/05b43e5ae45fed10742de0829e579880098adcf7"
    }
  ],
  "stats": {
    "total": 5,
    "additions": 1,
    "deletions": 4
  },
  "files": [
    {
      "sha": "e07a78f8410dbbc7218950b3db0ad2d25b25bcbf",
      "filename": "app/models/post.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/discourse/discourse/blob/872ef82f4d957a7cd19aa17b0200d1cc8cfb034b/app/models/post.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/872ef82f4d957a7cd19aa17b0200d1cc8cfb034b/app/models/post.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/post.rb?ref=872ef82f4d957a7cd19aa17b0200d1cc8cfb034b",
      "patch": "@@ -80,10 +80,7 @@ class Post < ActiveRecord::Base\n   register_custom_field_type(MISSING_UPLOADS_IGNORED, :boolean)\n \n   scope :private_posts_for_user, ->(user) {\n-    joins(\"LEFT JOIN topic_allowed_users ON topic_allowed_users.topic_id = posts.topic_id AND topic_allowed_users.user_id = #{user.id.to_i}\")\n-      .joins(\"LEFT JOIN group_users ON group_users.user_id = #{user.id.to_i}\")\n-      .joins(\"LEFT JOIN topic_allowed_groups ON topic_allowed_groups.topic_id = posts.topic_id AND topic_allowed_groups.group_id = group_users.group_id\")\n-      .where(\"topic_allowed_users.topic_id IS NOT NULL OR topic_allowed_groups.topic_id IS NOT NULL\")\n+    where(\"posts.topic_id IN (#{Topic::PRIVATE_MESSAGES_SQL})\", user_id: user.id)\n   }\n \n   scope :by_newest, -> { order('created_at DESC, id DESC') }"
    }
  ]
}
