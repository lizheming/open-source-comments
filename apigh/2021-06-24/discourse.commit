{
  "sha": "cf1e8b27640721f2eff9d6c8244a0fef867e8f4c",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODpjZjFlOGIyNzY0MDcyMWYyZWZmOWQ2YzgyNDRhMGZlZjg2N2U4ZjRj",
  "commit": {
    "author": {
      "name": "Andrei Prigorshnev",
      "email": "a.prigorshnev@gmail.com",
      "date": "2021-06-24T10:13:38Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2021-06-24T10:13:38Z"
    },
    "message": "FEATURE: Accept the flag modal on CTRL + ENTER and CMD + ENTER (#13497)\n\nWe want to submit the flag modal on pressing CTRL + ENTER and CMD + ENTER.\r\n\r\nHere's how our modals work:\r\n\r\nEvery modal can be dismissed by pressing ESC. This behaviour can be disabled for a specific modal if we need to.\r\nEvery modal can be submitted by pressing ENTER if the cursor wasn't on a text area or a form at the moment of pressing.\r\nNow, the flag modal is actually a one big form and pressing ENTER doesn't submit it. I've added submitting by CTRL+ENTER but at first it was interfering with the basic modal submitting by ENTER. It's a pretty tricky thing to fix because we use the keyup event for submitting by ENTER and we need to use the keydown event for submitting with modifiers (because submitting by CMD+ENTER on Macs doesn't work with keyup).\r\n\r\nEventually, I fixed the problem just by adding a possibility to disable default submitting on ENTER (in the same way as we already have the possibility of disabling dismissing on ESC). Then I disabled default submitting for the flag form and implemented submitting by CTRL+ENTER and CMD+ENTER. This way everything is simple and robust. I did it only for the flag modal but it'll be easy and safe to add the same behaviour to another modal.",
    "tree": {
      "sha": "f2bb69f727692017e55d229f18802cda9628fa96",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/f2bb69f727692017e55d229f18802cda9628fa96"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/cf1e8b27640721f2eff9d6c8244a0fef867e8f4c",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg1FrSCRBK7hj4Ov3rIwAAgbEIAEVaRe34WJ0i850pCucWjlA4\nQaRRPunDyb8qtLBSU3pQLb5RcA3d+yMfosHw2a51Um8YPB/Z9pR0CuU6eEQDWTaR\neSkSe9/i0I7Bm+XQGAZHhPU7e4O9ixVdrXSJ5xyQAFJ5bYrPcT/nty1PEiwoNF7D\n22/M5MaEicu4FcvPn4E5IxBR64wQ+u1fxdyH8/zL6GjIYiwkk96ZrpFftHK10EDX\ntQ5Li9Jg/oyxsCfNw3Rob5IzBtanyFd5YEw1qAIAuxvRUeaHAWdYG9iBfYJHc1bv\nApAE/Sjf4N9dJ7aUklfrpF7FdN8f66JSXK4+l+1kwMZUBVC5xAb95ln5EVqsdlA=\n=lfKw\n-----END PGP SIGNATURE-----\n",
      "payload": "tree f2bb69f727692017e55d229f18802cda9628fa96\nparent 2654a6685cea512ef8e3f8aea29079dc617775fd\nauthor Andrei Prigorshnev <a.prigorshnev@gmail.com> 1624529618 +0400\ncommitter GitHub <noreply@github.com> 1624529618 +0400\n\nFEATURE: Accept the flag modal on CTRL + ENTER and CMD + ENTER (#13497)\n\nWe want to submit the flag modal on pressing CTRL + ENTER and CMD + ENTER.\r\n\r\nHere's how our modals work:\r\n\r\nEvery modal can be dismissed by pressing ESC. This behaviour can be disabled for a specific modal if we need to.\r\nEvery modal can be submitted by pressing ENTER if the cursor wasn't on a text area or a form at the moment of pressing.\r\nNow, the flag modal is actually a one big form and pressing ENTER doesn't submit it. I've added submitting by CTRL+ENTER but at first it was interfering with the basic modal submitting by ENTER. It's a pretty tricky thing to fix because we use the keyup event for submitting by ENTER and we need to use the keydown event for submitting with modifiers (because submitting by CMD+ENTER on Macs doesn't work with keyup).\r\n\r\nEventually, I fixed the problem just by adding a possibility to disable default submitting on ENTER (in the same way as we already have the possibility of disabling dismissing on ESC). Then I disabled default submitting for the flag form and implemented submitting by CTRL+ENTER and CMD+ENTER. This way everything is simple and robust. I did it only for the flag modal but it'll be easy and safe to add the same behaviour to another modal."
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/cf1e8b27640721f2eff9d6c8244a0fef867e8f4c",
  "html_url": "https://github.com/discourse/discourse/commit/cf1e8b27640721f2eff9d6c8244a0fef867e8f4c",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/cf1e8b27640721f2eff9d6c8244a0fef867e8f4c/comments",
  "author": {
    "login": "AndrewPrigorshnev",
    "id": 1274517,
    "node_id": "MDQ6VXNlcjEyNzQ1MTc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1274517?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AndrewPrigorshnev",
    "html_url": "https://github.com/AndrewPrigorshnev",
    "followers_url": "https://api.github.com/users/AndrewPrigorshnev/followers",
    "following_url": "https://api.github.com/users/AndrewPrigorshnev/following{/other_user}",
    "gists_url": "https://api.github.com/users/AndrewPrigorshnev/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AndrewPrigorshnev/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AndrewPrigorshnev/subscriptions",
    "organizations_url": "https://api.github.com/users/AndrewPrigorshnev/orgs",
    "repos_url": "https://api.github.com/users/AndrewPrigorshnev/repos",
    "events_url": "https://api.github.com/users/AndrewPrigorshnev/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AndrewPrigorshnev/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2654a6685cea512ef8e3f8aea29079dc617775fd",
      "url": "https://api.github.com/repos/discourse/discourse/commits/2654a6685cea512ef8e3f8aea29079dc617775fd",
      "html_url": "https://github.com/discourse/discourse/commit/2654a6685cea512ef8e3f8aea29079dc617775fd"
    }
  ],
  "stats": {
    "total": 83,
    "additions": 79,
    "deletions": 4
  },
  "files": [
    {
      "sha": "120d00e23cb13c6f96aa6e784c57b09b42c41080",
      "filename": "app/assets/javascripts/discourse/app/components/d-modal-body.js",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/cf1e8b27640721f2eff9d6c8244a0fef867e8f4c/app/assets/javascripts/discourse/app/components/d-modal-body.js",
      "raw_url": "https://github.com/discourse/discourse/raw/cf1e8b27640721f2eff9d6c8244a0fef867e8f4c/app/assets/javascripts/discourse/app/components/d-modal-body.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/components/d-modal-body.js?ref=cf1e8b27640721f2eff9d6c8244a0fef867e8f4c",
      "patch": "@@ -3,6 +3,7 @@ import { scheduleOnce } from \"@ember/runloop\";\n export default Component.extend({\n   classNames: [\"modal-body\"],\n   fixed: false,\n+  submitOnEnter: true,\n   dismissable: true,\n   autoFocus: true,\n \n@@ -49,6 +50,7 @@ export default Component.extend({\n         \"fixed\",\n         \"subtitle\",\n         \"rawSubtitle\",\n+        \"submitOnEnter\",\n         \"dismissable\",\n         \"headerClass\",\n         \"autoFocus\""
    },
    {
      "sha": "652035b46753445c5dcaea87071738e08b04ec28",
      "filename": "app/assets/javascripts/discourse/app/components/d-modal.js",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/discourse/discourse/blob/cf1e8b27640721f2eff9d6c8244a0fef867e8f4c/app/assets/javascripts/discourse/app/components/d-modal.js",
      "raw_url": "https://github.com/discourse/discourse/raw/cf1e8b27640721f2eff9d6c8244a0fef867e8f4c/app/assets/javascripts/discourse/app/components/d-modal.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/components/d-modal.js?ref=cf1e8b27640721f2eff9d6c8244a0fef867e8f4c",
      "patch": "@@ -19,6 +19,7 @@ export default Component.extend({\n     \"role\",\n     \"ariaLabelledby:aria-labelledby\",\n   ],\n+  submitOnEnter: true,\n   dismissable: true,\n   title: null,\n   subtitle: null,\n@@ -48,7 +49,7 @@ export default Component.extend({\n   @on(\"didInsertElement\")\n   setUp() {\n     $(\"html\").on(\"keyup.discourse-modal\", (e) => {\n-      //only respond to events when the modal is visible\n+      // only respond to events when the modal is visible\n       if (!this.element.classList.contains(\"hidden\")) {\n         if (e.which === 27 && this.dismissable) {\n           next(() => this.attrs.closeModal(\"initiatedByESC\"));\n@@ -70,6 +71,10 @@ export default Component.extend({\n   },\n \n   triggerClickOnEnter(e) {\n+    if (!this.submitOnEnter) {\n+      return false;\n+    }\n+\n     // skip when in a form or a textarea element\n     if (\n       e.target.closest(\"form\") ||\n@@ -124,6 +129,10 @@ export default Component.extend({\n       this.set(\"subtitle\", null);\n     }\n \n+    if (\"submitOnEnter\" in data) {\n+      this.set(\"submitOnEnter\", data.submitOnEnter);\n+    }\n+\n     if (\"dismissable\" in data) {\n       this.set(\"dismissable\", data.dismissable);\n     } else {"
    },
    {
      "sha": "87dbf1c8f781c7f32bb7124a0f8ddfaf859a98f8",
      "filename": "app/assets/javascripts/discourse/app/controllers/flag.js",
      "status": "modified",
      "additions": 23,
      "deletions": 1,
      "changes": 24,
      "blob_url": "https://github.com/discourse/discourse/blob/cf1e8b27640721f2eff9d6c8244a0fef867e8f4c/app/assets/javascripts/discourse/app/controllers/flag.js",
      "raw_url": "https://github.com/discourse/discourse/raw/cf1e8b27640721f2eff9d6c8244a0fef867e8f4c/app/assets/javascripts/discourse/app/controllers/flag.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/controllers/flag.js?ref=cf1e8b27640721f2eff9d6c8244a0fef867e8f4c",
      "patch": "@@ -1,3 +1,4 @@\n+import { schedule } from \"@ember/runloop\";\n import ActionSummary from \"discourse/models/action-summary\";\n import Controller from \"@ember/controller\";\n import EmberObject from \"@ember/object\";\n@@ -6,7 +7,7 @@ import { MAX_MESSAGE_LENGTH } from \"discourse/models/post-action-type\";\n import ModalFunctionality from \"discourse/mixins/modal-functionality\";\n import { Promise } from \"rsvp\";\n import User from \"discourse/models/user\";\n-import discourseComputed from \"discourse-common/utils/decorators\";\n+import discourseComputed, { bind } from \"discourse-common/utils/decorators\";\n import { not } from \"@ember/object/computed\";\n import optionalService from \"discourse/lib/optional-service\";\n import { popupAjaxError } from \"discourse/lib/ajax-error\";\n@@ -52,6 +53,17 @@ export default Controller.extend(ModalFunctionality, {\n     };\n   },\n \n+  @bind\n+  keyDown(event) {\n+    // CTRL+ENTER or CMD+ENTER\n+    if (event.keyCode === 13 && (event.ctrlKey || event.metaKey)) {\n+      if (this.submitEnabled) {\n+        this.send(\"createFlag\");\n+        return false;\n+      }\n+    }\n+  },\n+\n   clientSuspend(performAction) {\n     this._penalize(\"showSuspendModal\", performAction);\n   },\n@@ -85,6 +97,16 @@ export default Controller.extend(ModalFunctionality, {\n         this.set(\"spammerDetails\", result);\n       });\n     }\n+\n+    schedule(\"afterRender\", () => {\n+      const element = document.querySelector(\".flag-modal\");\n+      element.addEventListener(\"keydown\", this.keyDown);\n+    });\n+  },\n+\n+  onClose() {\n+    const element = document.querySelector(\".flag-modal\");\n+    element.removeEventListener(\"keydown\", this.keyDown);\n   },\n \n   @discourseComputed(\"spammerDetails.canDelete\", \"selected.name_key\")"
    },
    {
      "sha": "4e11f469a14afd2b30b7be53b5eec99137188521",
      "filename": "app/assets/javascripts/discourse/app/templates/modal/flag.hbs",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/cf1e8b27640721f2eff9d6c8244a0fef867e8f4c/app/assets/javascripts/discourse/app/templates/modal/flag.hbs",
      "raw_url": "https://github.com/discourse/discourse/raw/cf1e8b27640721f2eff9d6c8244a0fef867e8f4c/app/assets/javascripts/discourse/app/templates/modal/flag.hbs",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/templates/modal/flag.hbs?ref=cf1e8b27640721f2eff9d6c8244a0fef867e8f4c",
      "patch": "@@ -1,4 +1,4 @@\n-{{#d-modal-body class=\"flag-modal-body\" title=title}}\n+{{#d-modal-body class=\"flag-modal-body\" title=title submitOnEnter=false}}\n   <form>\n     {{#flag-selection nameKey=selected.name_key flags=flagsAvailable as |f|}}\n       {{flag-action-type"
    },
    {
      "sha": "926e27b96923baaa7b5eabd7040b8658da9be16f",
      "filename": "app/assets/javascripts/discourse/tests/acceptance/flag-post-test.js",
      "status": "modified",
      "additions": 43,
      "deletions": 1,
      "changes": 44,
      "blob_url": "https://github.com/discourse/discourse/blob/cf1e8b27640721f2eff9d6c8244a0fef867e8f4c/app/assets/javascripts/discourse/tests/acceptance/flag-post-test.js",
      "raw_url": "https://github.com/discourse/discourse/raw/cf1e8b27640721f2eff9d6c8244a0fef867e8f4c/app/assets/javascripts/discourse/tests/acceptance/flag-post-test.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/tests/acceptance/flag-post-test.js?ref=cf1e8b27640721f2eff9d6c8244a0fef867e8f4c",
      "patch": "@@ -2,11 +2,13 @@ import {\n   acceptance,\n   count,\n   exists,\n+  query,\n } from \"discourse/tests/helpers/qunit-helpers\";\n import { click, visit } from \"@ember/test-helpers\";\n import selectKit from \"discourse/tests/helpers/select-kit-helper\";\n-import { test } from \"qunit\";\n+import { skip, test } from \"qunit\";\n import userFixtures from \"discourse/tests/fixtures/user-fixtures\";\n+import { run } from \"@ember/runloop\";\n \n async function openFlagModal() {\n   if (exists(\".topic-post:first-child button.show-more-actions\")) {\n@@ -15,6 +17,14 @@ async function openFlagModal() {\n   await click(\".topic-post:first-child button.create-flag\");\n }\n \n+function keyDown(element, keyCode, modifier) {\n+  const event = document.createEvent(\"Event\");\n+  event.initEvent(\"keydown\", true, true);\n+  event.keyCode = 13;\n+  event[modifier] = true;\n+  run(() => element.dispatchEvent(event));\n+}\n+\n acceptance(\"flagging\", function (needs) {\n   needs.user();\n   needs.pretender((server, helper) => {\n@@ -142,4 +152,36 @@ acceptance(\"flagging\", function (needs) {\n     await click(\".modal-footer .btn-primary\");\n     assert.ok(!exists(\".bootbox.modal:visible\"));\n   });\n+\n+  skip(\"CTRL + ENTER accepts the modal\", async function (assert) {\n+    await visit(\"/t/internationalization-localization/280\");\n+    await openFlagModal();\n+\n+    const modal = query(\"#discourse-modal\");\n+    keyDown(modal, 13, \"ctrlKey\");\n+    assert.ok(\n+      exists(\"#discourse-modal:visible\"),\n+      \"The modal wasn't closed because the accept button was disabled\"\n+    );\n+\n+    await click(\"#radio_inappropriate\"); // this enables the accept button\n+    keyDown(modal, 13, \"ctrlKey\");\n+    assert.ok(!exists(\"#discourse-modal:visible\"), \"The modal was closed\");\n+  });\n+\n+  skip(\"CMD or WINDOWS-KEY + ENTER accepts the modal\", async function (assert) {\n+    await visit(\"/t/internationalization-localization/280\");\n+    await openFlagModal();\n+\n+    const modal = query(\"#discourse-modal\");\n+    keyDown(modal, 13, \"metaKey\");\n+    assert.ok(\n+      exists(\"#discourse-modal:visible\"),\n+      \"The modal wasn't closed because the accept button was disabled\"\n+    );\n+\n+    await click(\"#radio_inappropriate\"); // this enables the accept button\n+    keyDown(modal, 13, \"ctrlKey\");\n+    assert.ok(!exists(\"#discourse-modal:visible\"), \"The modal was closed\");\n+  });\n });"
    }
  ]
}
