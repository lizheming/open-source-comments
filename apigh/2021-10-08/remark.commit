{
  "sha": "e341227cae1dadc1019accb888f20fe66d656c49",
  "node_id": "C_kwDOBtgov9oAKGUzNDEyMjdjYWUxZGFkYzEwMTlhY2NiODg4ZjIwZmU2NmQ2NTZjNDk",
  "commit": {
    "author": {
      "name": "romanilchyshyn",
      "email": "romanilchyshyn@gmail.com",
      "date": "2021-10-03T14:06:20Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2021-10-06T18:51:31Z"
    },
    "message": "import from commento engine",
    "tree": {
      "sha": "a357dfe55e755ad1397f0a77250a1d8d8fa2f922",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/a357dfe55e755ad1397f0a77250a1d8d8fa2f922"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/e341227cae1dadc1019accb888f20fe66d656c49",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/e341227cae1dadc1019accb888f20fe66d656c49",
  "html_url": "https://github.com/umputun/remark42/commit/e341227cae1dadc1019accb888f20fe66d656c49",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/e341227cae1dadc1019accb888f20fe66d656c49/comments",
  "author": {
    "login": "romanilchyshyn",
    "id": 3929184,
    "node_id": "MDQ6VXNlcjM5MjkxODQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3929184?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/romanilchyshyn",
    "html_url": "https://github.com/romanilchyshyn",
    "followers_url": "https://api.github.com/users/romanilchyshyn/followers",
    "following_url": "https://api.github.com/users/romanilchyshyn/following{/other_user}",
    "gists_url": "https://api.github.com/users/romanilchyshyn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/romanilchyshyn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/romanilchyshyn/subscriptions",
    "organizations_url": "https://api.github.com/users/romanilchyshyn/orgs",
    "repos_url": "https://api.github.com/users/romanilchyshyn/repos",
    "events_url": "https://api.github.com/users/romanilchyshyn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/romanilchyshyn/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5abeab4008520698c6c0967a27f19c8d58e46703",
      "url": "https://api.github.com/repos/umputun/remark42/commits/5abeab4008520698c6c0967a27f19c8d58e46703",
      "html_url": "https://github.com/umputun/remark42/commit/5abeab4008520698c6c0967a27f19c8d58e46703"
    }
  ],
  "stats": {
    "total": 324,
    "additions": 323,
    "deletions": 1
  },
  "files": [
    {
      "sha": "c0b80ef1ae4e69efd421dfb2954fba455bd94459",
      "filename": "README.md",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/e341227cae1dadc1019accb888f20fe66d656c49/README.md",
      "raw_url": "https://github.com/umputun/remark42/raw/e341227cae1dadc1019accb888f20fe66d656c49/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/README.md?ref=e341227cae1dadc1019accb888f20fe66d656c49",
      "patch": "@@ -367,6 +367,11 @@ Remark42 supports importing comments from Disqus, WordPress, or native backup fo\n 2. Move this file to your Remark42 host within `./var`\n 3. Run import command - `docker exec -it remark42 import -p wordpress -f /srv/var/{wordpress-export-name}.xml -s {your site ID}`\n \n+##### Initial import from Commento\n+\n+1. Move exported json file to your Remark42 host within `./var`\n+2. Run import command - `docker exec -it remark42 import -p commento -f /srv/var/{commento-export-name}.json -s {your site ID}`\n+\n #### Backup and restore\n \n ##### Automatic backups"
    },
    {
      "sha": "ccc9b5d56dbbe94373f449990706d951144d513e",
      "filename": "backend/app/cmd/import.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/cmd/import.go",
      "raw_url": "https://github.com/umputun/remark42/raw/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/cmd/import.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/cmd/import.go?ref=e341227cae1dadc1019accb888f20fe66d656c49",
      "patch": "@@ -18,7 +18,7 @@ import (\n // ImportCommand set of flags and command for import\n type ImportCommand struct {\n \tInputFile   string        `short:\"f\" long:\"file\" description:\"input file name\" required:\"true\"`\n-\tProvider    string        `short:\"p\" long:\"provider\" default:\"disqus\" choice:\"disqus\" choice:\"wordpress\" description:\"import format\"` //nolint\n+\tProvider    string        `short:\"p\" long:\"provider\" default:\"disqus\" choice:\"disqus\" choice:\"wordpress\" choice:\"commento\" description:\"import format\"` //nolint\n \tSite        string        `short:\"s\" long:\"site\" env:\"SITE\" default:\"remark\" description:\"site name\"`\n \tTimeout     time.Duration `long:\"timeout\" default:\"15m\" description:\"import timeout\"`\n \tAdminPasswd string        `long:\"admin-passwd\" env:\"ADMIN_PASSWD\" required:\"true\" description:\"admin basic auth password\"`"
    },
    {
      "sha": "525e0ae7d79d2b6631577dd0471a7fa340885d5b",
      "filename": "backend/app/cmd/server.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/cmd/server.go",
      "raw_url": "https://github.com/umputun/remark42/raw/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/cmd/server.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/cmd/server.go?ref=e341227cae1dadc1019accb888f20fe66d656c49",
      "patch": "@@ -463,6 +463,7 @@ func (s *ServerCommand) newServerApp(ctx context.Context) (*serverApp, error) {\n \t\tNativeImporter:    &migrator.Native{DataStore: dataService},\n \t\tDisqusImporter:    &migrator.Disqus{DataStore: dataService},\n \t\tWordPressImporter: &migrator.WordPress{DataStore: dataService},\n+\t\tCommentoImporter:  &migrator.Commento{DataStore: dataService},\n \t\tNativeExporter:    &migrator.Native{DataStore: dataService},\n \t\tURLMapperMaker:    migrator.NewURLMapper,\n \t\tKeyStore:          adminStore,"
    },
    {
      "sha": "d4a46a15e0cf233ec6c7660244c032730e1ec34b",
      "filename": "backend/app/migrator/commento.go",
      "status": "added",
      "additions": 134,
      "deletions": 0,
      "changes": 134,
      "blob_url": "https://github.com/umputun/remark42/blob/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/migrator/commento.go",
      "raw_url": "https://github.com/umputun/remark42/raw/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/migrator/commento.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/migrator/commento.go?ref=e341227cae1dadc1019accb888f20fe66d656c49",
      "patch": "@@ -0,0 +1,134 @@\n+package migrator\n+\n+import (\n+\t\"encoding/json\"\n+\t\"io\"\n+\t\"time\"\n+\n+\t\"github.com/pkg/errors\"\n+\t\"github.com/umputun/remark42/backend/app/store\"\n+\n+\tlog \"github.com/go-pkgz/lgr\"\n+)\n+\n+// Commento implements Importer from commento export json\n+type Commento struct {\n+\tDataStore Store\n+}\n+\n+// Credit: https://gitlab.com/commento/commento/-/blob/master/api/domain_import_commento.go#L11-L15\n+type commentoExport struct {\n+\tVersion    int                 `json:\"version\"`\n+\tComments   []commentoComment   `json:\"comments\"`\n+\tCommenters []commentoCommenter `json:\"commenters\"`\n+}\n+\n+// Credit: https://gitlab.com/commento/commento/-/blob/master/api/comment.go#L7-L20\n+type commentoComment struct {\n+\tCommentHex   string    `json:\"commentHex\"`\n+\tDomain       string    `json:\"domain,omitempty\"`\n+\tPath         string    `json:\"url,omitempty\"`\n+\tCommenterHex string    `json:\"commenterHex\"`\n+\tMarkdown     string    `json:\"markdown\"`\n+\tHTML         string    `json:\"html\"`\n+\tParentHex    string    `json:\"parentHex\"`\n+\tScore        int       `json:\"score\"`\n+\tState        string    `json:\"state,omitempty\"`\n+\tCreationDate time.Time `json:\"creationDate\"`\n+\tDirection    int       `json:\"direction\"`\n+\tDeleted      bool      `json:\"deleted\"`\n+}\n+\n+// Credit: https://gitlab.com/commento/commento/-/blob/master/api/commenter.go#L7-L16\n+type commentoCommenter struct {\n+\tCommenterHex string    `json:\"commenterHex,omitempty\"`\n+\tEmail        string    `json:\"email,omitempty\"`\n+\tName         string    `json:\"name\"`\n+\tLink         string    `json:\"link\"`\n+\tPhoto        string    `json:\"photo\"`\n+\tProvider     string    `json:\"provider,omitempty\"`\n+\tJoinDate     time.Time `json:\"joinDate,omitempty\"`\n+\tIsModerator  bool      `json:\"isModerator\"`\n+}\n+\n+// Import comments from Commento and save to store\n+func (d *Commento) Import(r io.Reader, siteID string) (size int, err error) {\n+\tif e := d.DataStore.DeleteAll(siteID); e != nil {\n+\t\treturn 0, e\n+\t}\n+\n+\tcommentsCh := d.convert(r, siteID)\n+\tfailed, passed := 0, 0\n+\tfor c := range commentsCh {\n+\t\tif _, err = d.DataStore.Create(c); err != nil {\n+\t\t\tfailed++\n+\t\t\tcontinue\n+\t\t}\n+\t\tpassed++\n+\t}\n+\n+\tif failed > 0 {\n+\t\terr = errors.Errorf(\"failed to save %d comments\", failed)\n+\t\tif passed == 0 {\n+\t\t\terr = errors.New(\"import failed\")\n+\t\t}\n+\t}\n+\n+\tlog.Printf(\"[DEBUG] imported %d comments to site %s\", passed, siteID)\n+\n+\treturn passed, err\n+}\n+\n+func (d *Commento) convert(r io.Reader, siteID string) (ch chan store.Comment) {\n+\tcommentsCh := make(chan store.Comment)\n+\n+\tdecoder := json.NewDecoder(r)\n+\n+\tgo func() {\n+\n+\t\tvar exportedData commentoExport\n+\t\terr := decoder.Decode(&exportedData)\n+\t\tif err != nil {\n+\t\t\tlog.Printf(\"[WARN] can't decode commento export json, %s\", err.Error())\n+\t\t}\n+\n+\t\tusersMap := map[string]store.User{}\n+\t\tfor _, commenter := range exportedData.Commenters {\n+\t\t\tusersMap[commenter.CommenterHex] = store.User{\n+\t\t\t\tName:    commenter.Name,\n+\t\t\t\tID:      \"commento_\" + store.EncodeID(commenter.CommenterHex),\n+\t\t\t\tPicture: commenter.Photo,\n+\t\t\t}\n+\t\t}\n+\n+\t\tfor _, comment := range exportedData.Comments {\n+\t\t\tu, ok := usersMap[comment.CommenterHex]\n+\t\t\tif !ok {\n+\t\t\t\tcontinue\n+\t\t\t}\n+\n+\t\t\tif comment.Deleted {\n+\t\t\t\tcontinue\n+\t\t\t}\n+\n+\t\t\tc := store.Comment{\n+\t\t\t\tID: comment.CommentHex,\n+\t\t\t\tLocator: store.Locator{\n+\t\t\t\t\tURL:    comment.Path,\n+\t\t\t\t\tSiteID: siteID,\n+\t\t\t\t},\n+\t\t\t\tUser:      u,\n+\t\t\t\tText:      comment.Markdown,\n+\t\t\t\tTimestamp: comment.CreationDate,\n+\t\t\t\tParentID:  comment.ParentHex,\n+\t\t\t\tImported:  true,\n+\t\t\t}\n+\n+\t\t\tcommentsCh <- c\n+\t\t}\n+\n+\t\tclose(commentsCh)\n+\t}()\n+\n+\treturn commentsCh\n+}"
    },
    {
      "sha": "fe0212e315e3a5fa432ca01c0cadd63f8031f607",
      "filename": "backend/app/migrator/commento_test.go",
      "status": "added",
      "additions": 53,
      "deletions": 0,
      "changes": 53,
      "blob_url": "https://github.com/umputun/remark42/blob/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/migrator/commento_test.go",
      "raw_url": "https://github.com/umputun/remark42/raw/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/migrator/commento_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/migrator/commento_test.go?ref=e341227cae1dadc1019accb888f20fe66d656c49",
      "patch": "@@ -0,0 +1,53 @@\n+package migrator\n+\n+import (\n+\t\"os\"\n+\t\"testing\"\n+\t\"time\"\n+\n+\t\"github.com/stretchr/testify/assert\"\n+\t\"github.com/stretchr/testify/require\"\n+\t\"github.com/umputun/remark42/backend/app/store\"\n+\t\"github.com/umputun/remark42/backend/app/store/admin\"\n+\t\"github.com/umputun/remark42/backend/app/store/engine\"\n+\t\"github.com/umputun/remark42/backend/app/store/service\"\n+\tbolt \"go.etcd.io/bbolt\"\n+)\n+\n+func TestCommento_Import(t *testing.T) {\n+\tdefer os.Remove(\"/tmp/remark-test.db\")\n+\tb, err := engine.NewBoltDB(bolt.Options{}, engine.BoltSite{FileName: \"/tmp/remark-test.db\", SiteID: \"test\"})\n+\trequire.NoError(t, err, \"create store\")\n+\tdataStore := service.DataStore{Engine: b, AdminStore: admin.NewStaticStore(\"12345\", nil, []string{}, \"\")}\n+\tdefer dataStore.Close()\n+\n+\td := Commento{DataStore: &dataStore}\n+\tfh, err := os.Open(\"testdata/commento.json\")\n+\trequire.NoError(t, err)\n+\tsize, err := d.Import(fh, \"test\")\n+\tassert.NoError(t, err)\n+\tassert.Equal(t, 2, size)\n+\n+\tlast, err := dataStore.Last(\"test\", 10, time.Time{}, adminUser)\n+\tassert.NoError(t, err)\n+\trequire.Equal(t, 2, len(last), \"2 comments imported\")\n+\n+\tt.Log(last[0])\n+\n+\tc := last[0] // last reverses, get first one\n+\tassert.Equal(t, \"Great reply!\", c.Text)\n+\tassert.Equal(t, \"ea5f7bcd6ac9bb7b657f7d0569831104e1bcf9c253d03c1e16bf9654c49a5ce9\", c.ID)\n+\tassert.Equal(t, \"7d77e39fcd813241d6281478cc8f21ab5f807d043c750bc1a936bc23b34fb854\", c.ParentID)\n+\tassert.Equal(t, store.Locator{SiteID: \"test\", URL: \"https://example.com/blog/post/1\"}, c.Locator)\n+\tassert.Equal(t, \"Saturnin Uf\", c.User.Name)\n+\tassert.Equal(t, \"commento_35369aeb6ac5255de30410a0f86dc71eb9c6d0ca\", c.User.ID)\n+\tassert.True(t, c.Imported)\n+\n+\tposts, err := dataStore.List(\"test\", 0, 0)\n+\tassert.NoError(t, err)\n+\tassert.Equal(t, 1, len(posts), \"1 post\")\n+\n+\tcount, err := dataStore.Count(store.Locator{SiteID: \"test\", URL: \"https://example.com/blog/post/1\"})\n+\tassert.NoError(t, err)\n+\tassert.Equal(t, 2, count)\n+}"
    },
    {
      "sha": "624aeb26689226cdb8875daa892d51c85a041d41",
      "filename": "backend/app/migrator/migrator.go",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/migrator/migrator.go",
      "raw_url": "https://github.com/umputun/remark42/raw/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/migrator/migrator.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/migrator/migrator.go?ref=e341227cae1dadc1019accb888f20fe66d656c49",
      "patch": "@@ -64,6 +64,8 @@ func ImportComments(p ImportParams) (int, error) {\n \t\timporter = &Disqus{DataStore: p.DataStore}\n \tcase \"wordpress\":\n \t\timporter = &WordPress{DataStore: p.DataStore}\n+\tcase \"commento\":\n+\t\timporter = &Commento{DataStore: p.DataStore}\n \tcase \"native\":\n \t\timporter = &Native{DataStore: p.DataStore}\n \tdefault:"
    },
    {
      "sha": "08fc163d189fa170adb9456453e4ed8e58be9af6",
      "filename": "backend/app/migrator/migrator_test.go",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark42/blob/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/migrator/migrator_test.go",
      "raw_url": "https://github.com/umputun/remark42/raw/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/migrator/migrator_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/migrator/migrator_test.go?ref=e341227cae1dadc1019accb888f20fe66d656c49",
      "patch": "@@ -64,6 +64,27 @@ func TestMigrator_ImportWordPress(t *testing.T) {\n \tassert.Equal(t, 3, len(last), \"3 comments imported\")\n }\n \n+func TestMigrator_ImportCommento(t *testing.T) {\n+\tdefer os.Remove(\"/tmp/remark-test.db\")\n+\n+\tb, err := engine.NewBoltDB(bolt.Options{}, engine.BoltSite{FileName: \"/tmp/remark-test.db\", SiteID: \"test\"})\n+\trequire.NoError(t, err, \"create store\")\n+\tdataStore := &service.DataStore{Engine: b, AdminStore: admin.NewStaticStore(\"12345\", nil, []string{}, \"\")}\n+\tdefer dataStore.Close()\n+\tsize, err := ImportComments(ImportParams{\n+\t\tDataStore: dataStore,\n+\t\tInputFile: \"testdata/commento.json\",\n+\t\tSiteID:    \"test\",\n+\t\tProvider:  \"commento\",\n+\t})\n+\tassert.NoError(t, err)\n+\tassert.Equal(t, 2, size)\n+\n+\tlast, err := dataStore.Last(\"test\", 10, time.Time{}, store.User{})\n+\tassert.NoError(t, err)\n+\tassert.Equal(t, 2, len(last), \"2 comments imported\")\n+}\n+\n func TestMigrator_ImportNative(t *testing.T) {\n \tdefer func() {\n \t\tos.Remove(\"/tmp/remark-test.db\")"
    },
    {
      "sha": "540a64b7c392a6d6b79f1ff10631de4b1adc4332",
      "filename": "backend/app/migrator/testdata/commento.json",
      "status": "added",
      "additions": 69,
      "deletions": 0,
      "changes": 69,
      "blob_url": "https://github.com/umputun/remark42/blob/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/migrator/testdata/commento.json",
      "raw_url": "https://github.com/umputun/remark42/raw/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/migrator/testdata/commento.json",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/migrator/testdata/commento.json?ref=e341227cae1dadc1019accb888f20fe66d656c49",
      "patch": "@@ -0,0 +1,69 @@\n+{\n+  \"version\": 1,\n+  \"comments\": [\n+\t{\n+\t  \"commentHex\": \"e7069a7dfcfaed43caf62300a9b0edb1c124ad79d0f5887c93649c15d7f69945\",\n+\t  \"domain\": \"example.com\",\n+\t  \"url\": \"https://example.com/blog/post/1\",\n+\t  \"commenterHex\": \"anonymous\",\n+\t  \"markdown\": \"Example comment created by user.\",\n+\t  \"html\": \"\",\n+\t  \"parentHex\": \"root\",\n+\t  \"score\": 1,\n+\t  \"state\": \"approved\",\n+\t  \"creationDate\": \"2021-03-12T11:21:56Z\",\n+\t  \"direction\": 0,\n+\t  \"deleted\": false\n+\t},\n+\t{\n+\t  \"commentHex\": \"7d77e39fcd813241d6281478cc8f21ab5f807d043c750bc1a936bc23b34fb854\",\n+\t  \"domain\": \"example.com\",\n+\t  \"url\": \"https://example.com/blog/post/1\",\n+\t  \"commenterHex\": \"a1ac58ed1146bd7fe3feff6a7276f73955c3bfd23cacee00e2e0a7a89b1a8c10\",\n+\t  \"markdown\": \"Example 2 comment created by user.\",\n+\t  \"html\": \"\",\n+\t  \"parentHex\": \"root\",\n+\t  \"score\": 0,\n+\t  \"state\": \"approved\",\n+\t  \"creationDate\": \"2021-03-17T12:09:47.722181Z\",\n+\t  \"direction\": 0,\n+\t  \"deleted\": false\n+\t},\n+\t{\n+\t  \"commentHex\": \"ea5f7bcd6ac9bb7b657f7d0569831104e1bcf9c253d03c1e16bf9654c49a5ce9\",\n+\t  \"domain\": \"example.com\",\n+\t  \"url\": \"https://example.com/blog/post/1\",\n+\t  \"commenterHex\": \"bd1290ab5c858cf2a05903c2a9a61fd63399c6635db38cc6597002195e22e061\",\n+\t  \"markdown\": \"Great reply!\",\n+\t  \"html\": \"\",\n+\t  \"parentHex\": \"7d77e39fcd813241d6281478cc8f21ab5f807d043c750bc1a936bc23b34fb854\",\n+\t  \"score\": 0,\n+\t  \"state\": \"approved\",\n+\t  \"creationDate\": \"2021-05-11T15:43:01.852651Z\",\n+\t  \"direction\": 0,\n+\t  \"deleted\": false\n+\t}\n+  ],\n+  \"commenters\": [\n+\t{\n+\t  \"commenterHex\": \"a1ac58ed1146bd7fe3feff6a7276f73955c3bfd23cacee00e2e0a7a89b1a8c10\",\n+\t  \"email\": \"somegreatmail@gmail.com\",\n+\t  \"name\": \"User5276\",\n+\t  \"link\": \"https://example.com/profile/257\",\n+\t  \"photo\": \"https://secure.gravatar.com/avatar/8f279626d26175134b0d5c88648172f7\",\n+\t  \"provider\": \"sso:example.com\",\n+\t  \"joinDate\": \"2021-03-19T19:27:25.954285Z\",\n+\t  \"isModerator\": false\n+\t},\n+\t{\n+\t  \"commenterHex\": \"bd1290ab5c858cf2a05903c2a9a61fd63399c6635db38cc6597002195e22e061\",\n+\t  \"email\": \"moregreatmail@gmail.com\",\n+\t  \"name\": \"Saturnin Uf\",\n+\t  \"link\": \"https://example.com/profile/259\",\n+\t  \"photo\": \"https://secure.gravatar.com/avatar/6481228d190f0286a42bee9041f9b1a1\",\n+\t  \"provider\": \"sso:example.com\",\n+\t  \"joinDate\": \"2021-03-21T12:15:37.536035Z\",\n+\t  \"isModerator\": false\n+\t}\n+  ]\n+}"
    },
    {
      "sha": "f61fb0381a70fac73708f6f9f8e1ae1ca238dedb",
      "filename": "backend/app/rest/api/migrator.go",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/rest/api/migrator.go",
      "raw_url": "https://github.com/umputun/remark42/raw/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/rest/api/migrator.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/rest/api/migrator.go?ref=e341227cae1dadc1019accb888f20fe66d656c49",
      "patch": "@@ -27,6 +27,7 @@ type Migrator struct {\n \tNativeImporter    migrator.Importer\n \tDisqusImporter    migrator.Importer\n \tWordPressImporter migrator.Importer\n+\tCommentoImporter  migrator.Importer\n \tNativeExporter    migrator.Exporter\n \tURLMapperMaker    migrator.MapperMaker\n \tKeyStore          KeyStore\n@@ -228,6 +229,8 @@ func (m *Migrator) runImport(siteID, provider, tmpfile string) {\n \t\timporter = m.DisqusImporter\n \tcase \"wordpress\":\n \t\timporter = m.WordPressImporter\n+\tcase \"commento\":\n+\t\timporter = m.CommentoImporter\n \tdefault:\n \t\timporter = m.NativeImporter\n \t}"
    },
    {
      "sha": "1a1ab690f1bf26bbfa5b4aa6360770dfea23629e",
      "filename": "backend/app/rest/api/migrator_test.go",
      "status": "modified",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/umputun/remark42/blob/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/rest/api/migrator_test.go",
      "raw_url": "https://github.com/umputun/remark42/raw/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/rest/api/migrator_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/rest/api/migrator_test.go?ref=e341227cae1dadc1019accb888f20fe66d656c49",
      "patch": "@@ -109,6 +109,34 @@ func TestMigrator_ImportFromWP(t *testing.T) {\n \twaitForMigrationCompletion(t, ts)\n }\n \n+func TestMigrator_ImportFromCommento(t *testing.T) {\n+\tts, _, teardown := startupT(t)\n+\tdefer teardown()\n+\n+\tr := strings.NewReader(`{\"version\":1,\"comments\":[{\"commentHex\":\"7d77e39fcd813241d6281478cc8f21ab5f807d043c750bc1a936bc23b34fb854\",\n+\"domain\":\"example.com\",\"url\":\"https://example.com/blog/post/1\",\"commenterHex\":\"a1ac58ed1146bd7fe3feff6a7276f73955c3bfd23cacee00e2e0a7a89b1a8c10\",\n+\"markdown\":\"Example content\",\"html\":\"\",\"parentHex\":\"root\",\"score\":0,\"state\":\"approved\",\"creationDate\":\"2021-03-17T12:09:47.722181Z\",\n+\"direction\":0,\"deleted\":false}],\"commenters\":[{\"commenterHex\":\"a1ac58ed1146bd7fe3feff6a7276f73955c3bfd23cacee00e2e0a7a89b1a8c10\",\n+\"email\":\"somegreatmail@gmail.com\",\"name\":\"User5276\",\"link\":\"https://example.com/profile/257\",\"photo\":\"https://secure.gravatar.com/avatar/8f279626d26175134b0d5c88648172f7\",\n+\"provider\":\"sso:example.com\",\"joinDate\":\"2021-03-19T19:27:25.954285Z\",\"isModerator\":false}]}`)\n+\n+\tclient := &http.Client{Timeout: 1 * time.Second}\n+\treq, err := http.NewRequest(\"POST\", ts.URL+\"/api/v1/admin/import?site=remark42&provider=commento\", r)\n+\tassert.NoError(t, err)\n+\treq.Header.Add(\"Content-Type\", \"application/json; charset=utf-8\")\n+\treq.SetBasicAuth(\"admin\", \"password\")\n+\tresp, err := client.Do(req)\n+\tassert.NoError(t, err)\n+\tassert.Equal(t, http.StatusAccepted, resp.StatusCode)\n+\n+\tb, err := ioutil.ReadAll(resp.Body)\n+\tassert.NoError(t, err)\n+\tassert.Equal(t, \"{\\\"status\\\":\\\"import request accepted\\\"}\\n\", string(b))\n+\tassert.NoError(t, resp.Body.Close())\n+\n+\twaitForMigrationCompletion(t, ts)\n+}\n+\n func TestMigrator_ImportRejected(t *testing.T) {\n \tts, _, teardown := startupT(t)\n \tdefer teardown()"
    },
    {
      "sha": "c071acebae1d59bdf4d7d8d59dc63acd372c5b70",
      "filename": "backend/app/rest/api/rest_test.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/rest/api/rest_test.go",
      "raw_url": "https://github.com/umputun/remark42/raw/e341227cae1dadc1019accb888f20fe66d656c49/backend/app/rest/api/rest_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/rest/api/rest_test.go?ref=e341227cae1dadc1019accb888f20fe66d656c49",
      "patch": "@@ -430,6 +430,7 @@ func startupT(t *testing.T) (ts *httptest.Server, srv *Rest, teardown func()) {\n \t\tMigrator: &Migrator{\n \t\t\tDisqusImporter:    &migrator.Disqus{DataStore: dataStore},\n \t\t\tWordPressImporter: &migrator.WordPress{DataStore: dataStore},\n+\t\t\tCommentoImporter:  &migrator.Commento{DataStore: dataStore},\n \t\t\tNativeImporter:    &migrator.Native{DataStore: dataStore},\n \t\t\tNativeExporter:    &migrator.Native{DataStore: dataStore},\n \t\t\tURLMapperMaker:    migrator.NewURLMapper,"
    },
    {
      "sha": "c8426b3732e81b0b0feba62c348fc38fa84f1c7f",
      "filename": "site/src/docs/backup/migration/index.md",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/e341227cae1dadc1019accb888f20fe66d656c49/site/src/docs/backup/migration/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/e341227cae1dadc1019accb888f20fe66d656c49/site/src/docs/backup/migration/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/backup/migration/index.md?ref=e341227cae1dadc1019accb888f20fe66d656c49",
      "patch": "@@ -15,3 +15,8 @@ Remark42 supports importing comments from Disqus, WordPress, or native backup fo\n 1. Use [that instruction](https://wordpress.com/support/export/) to export comments to file using standard WordPress functionality\n 2. Move this file to your Remark42 host within `./var`\n 3. Run import command - `docker exec -it remark42 import -p wordpress -f /srv/var/{wordpress-export-name}.xml -s {your site ID}`\n+\n+### Import from Commento\n+\n+1. Move exported json file to your Remark42 host within `./var`\n+2. Run import command - `docker exec -it remark42 import -p commento -f /srv/var/{commento-export-name}.json -s {your site ID}`"
    }
  ]
}
