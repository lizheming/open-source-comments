{
  "sha": "bbfeaeb3d00ee048bea4ec0758a5a978d41c9856",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOmJiZmVhZWIzZDAwZWUwNDhiZWE0ZWMwNzU4YTVhOTc4ZDQxYzk4NTY=",
  "commit": {
    "author": {
      "name": "Dmitry Verkhoturov",
      "email": "paskal.07@gmail.com",
      "date": "2020-05-03T17:29:29Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2020-05-04T07:22:16Z"
    },
    "message": "go-consistent proposed changes",
    "tree": {
      "sha": "a421b726aab36bc7505f81f3740f61276d97a3df",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/a421b726aab36bc7505f81f3740f61276d97a3df"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/bbfeaeb3d00ee048bea4ec0758a5a978d41c9856",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/bbfeaeb3d00ee048bea4ec0758a5a978d41c9856",
  "html_url": "https://github.com/umputun/remark42/commit/bbfeaeb3d00ee048bea4ec0758a5a978d41c9856",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/bbfeaeb3d00ee048bea4ec0758a5a978d41c9856/comments",
  "author": {
    "login": "paskal",
    "id": 712534,
    "node_id": "MDQ6VXNlcjcxMjUzNA==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/712534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paskal",
    "html_url": "https://github.com/paskal",
    "followers_url": "https://api.github.com/users/paskal/followers",
    "following_url": "https://api.github.com/users/paskal/following{/other_user}",
    "gists_url": "https://api.github.com/users/paskal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paskal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paskal/subscriptions",
    "organizations_url": "https://api.github.com/users/paskal/orgs",
    "repos_url": "https://api.github.com/users/paskal/repos",
    "events_url": "https://api.github.com/users/paskal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paskal/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5afa74eec128e9f5fea6a35980505bdda777bc48",
      "url": "https://api.github.com/repos/umputun/remark42/commits/5afa74eec128e9f5fea6a35980505bdda777bc48",
      "html_url": "https://github.com/umputun/remark42/commit/5afa74eec128e9f5fea6a35980505bdda777bc48"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 7,
    "deletions": 7
  },
  "files": [
    {
      "sha": "fc90ac2b22198361bbc35fbf495bd97ec08d8b6c",
      "filename": "backend/app/cmd/server.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/bbfeaeb3d00ee048bea4ec0758a5a978d41c9856/backend/app/cmd/server.go",
      "raw_url": "https://github.com/umputun/remark42/raw/bbfeaeb3d00ee048bea4ec0758a5a978d41c9856/backend/app/cmd/server.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/cmd/server.go?ref=bbfeaeb3d00ee048bea4ec0758a5a978d41c9856",
      "patch": "@@ -823,7 +823,7 @@ func (s *ServerCommand) makeNotify(dataStore *service.DataStore, authenticator *\n \t\t}\n \t}\n \n-\tif len(destinations) != 0 {\n+\tif len(destinations) > 0 {\n \t\tlog.Printf(\"[INFO] make notify, types=%s\", s.Notify.Type)\n \t\tnotifyService = notify.NewService(dataStore, s.Notify.QueueSize, destinations...)\n \t}"
    },
    {
      "sha": "b7ee79ce80c667570002227493bc77ae2a69cc2f",
      "filename": "backend/app/rest/api/rest_public_test.go",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/bbfeaeb3d00ee048bea4ec0758a5a978d41c9856/backend/app/rest/api/rest_public_test.go",
      "raw_url": "https://github.com/umputun/remark42/raw/bbfeaeb3d00ee048bea4ec0758a5a978d41c9856/backend/app/rest/api/rest_public_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend/app/rest/api/rest_public_test.go?ref=bbfeaeb3d00ee048bea4ec0758a5a978d41c9856",
      "patch": "@@ -526,15 +526,15 @@ func TestRest_Config(t *testing.T) {\n \tj := R.JSON{}\n \terr := json.Unmarshal([]byte(body), &j)\n \tassert.NoError(t, err)\n-\tassert.Equal(t, 300., j[\"edit_duration\"])\n+\tassert.Equal(t, 300.0, j[\"edit_duration\"])\n \tassert.EqualValues(t, []interface{}{\"a1\", \"a2\"}, j[\"admins\"])\n \tassert.Equal(t, \"admin@remark-42.com\", j[\"admin_email\"])\n-\tassert.Equal(t, 4000., j[\"max_comment_size\"])\n-\tassert.Equal(t, -5., j[\"low_score\"])\n-\tassert.Equal(t, -10., j[\"critical_score\"])\n+\tassert.Equal(t, 4000.0, j[\"max_comment_size\"])\n+\tassert.Equal(t, -5.0, j[\"low_score\"])\n+\tassert.Equal(t, -10.0, j[\"critical_score\"])\n \tassert.False(t, j[\"positive_score\"].(bool))\n-\tassert.Equal(t, 10., j[\"readonly_age\"])\n-\tassert.Equal(t, 10000., j[\"max_image_size\"])\n+\tassert.Equal(t, 10.0, j[\"readonly_age\"])\n+\tassert.Equal(t, 10000.0, j[\"max_image_size\"])\n \tassert.Equal(t, true, j[\"emoji_enabled\"].(bool))\n }\n "
    }
  ]
}
