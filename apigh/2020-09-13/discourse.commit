{
  "sha": "e8053d17f64d5b43e17d3b469a0da82d229ab291",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODplODA1M2QxN2Y2NGQ1YjQzZTE3ZDNiNDY5YTBkYTgyZDIyOWFiMjkx",
  "commit": {
    "author": {
      "name": "Joffrey JAFFEUX",
      "email": "j.jaffeux@gmail.com",
      "date": "2020-09-12T07:44:45Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-09-12T07:44:45Z"
    },
    "message": "FIX: selected diversity was off by one (#10659)",
    "tree": {
      "sha": "bdbd85c3b87940858429bf555dc7dcb833458f6e",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/bdbd85c3b87940858429bf555dc7dcb833458f6e"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/e8053d17f64d5b43e17d3b469a0da82d229ab291",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfXHxtCRBK7hj4Ov3rIwAAdHIIAFAhb89MwxpBL+IwBG1/+B78\nsNSxu0aiO7rm3TakKubMYzcmmd1BPRcBDHFZxQkmOACWRkvNQwdnb1tS41rXvCES\ned2L8iUMXTMuC9NZyop99dDQpoXxRvLPfLmthVgrTFBTSDDL2MT/W0yQDmcCRyQB\nUQbhLUEquE8BexIYMslDMYXw0rv7G9xJu9M27kCDM9oiOfddV++ityIIwuM4nagq\n/fbdwgrhAeZdnIct31hysLptlg+RG2pTheOG7pAgkCb7a9qJ03onzYRkd3u4XLU/\n5gghqYHw/zdKvm6fzM0WEwArqQ5fvbYZq1miBxYs9+PpG/kF/oyfexle3341n2Q=\n=FJRl\n-----END PGP SIGNATURE-----\n",
      "payload": "tree bdbd85c3b87940858429bf555dc7dcb833458f6e\nparent 539eb639044a329d1960d9f22aed5977c1b2282a\nauthor Joffrey JAFFEUX <j.jaffeux@gmail.com> 1599896685 +0200\ncommitter GitHub <noreply@github.com> 1599896685 +0200\n\nFIX: selected diversity was off by one (#10659)\n\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/e8053d17f64d5b43e17d3b469a0da82d229ab291",
  "html_url": "https://github.com/discourse/discourse/commit/e8053d17f64d5b43e17d3b469a0da82d229ab291",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/e8053d17f64d5b43e17d3b469a0da82d229ab291/comments",
  "author": {
    "login": "jjaffeux",
    "id": 339945,
    "node_id": "MDQ6VXNlcjMzOTk0NQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/339945?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jjaffeux",
    "html_url": "https://github.com/jjaffeux",
    "followers_url": "https://api.github.com/users/jjaffeux/followers",
    "following_url": "https://api.github.com/users/jjaffeux/following{/other_user}",
    "gists_url": "https://api.github.com/users/jjaffeux/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jjaffeux/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jjaffeux/subscriptions",
    "organizations_url": "https://api.github.com/users/jjaffeux/orgs",
    "repos_url": "https://api.github.com/users/jjaffeux/repos",
    "events_url": "https://api.github.com/users/jjaffeux/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jjaffeux/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "539eb639044a329d1960d9f22aed5977c1b2282a",
      "url": "https://api.github.com/repos/discourse/discourse/commits/539eb639044a329d1960d9f22aed5977c1b2282a",
      "html_url": "https://github.com/discourse/discourse/commit/539eb639044a329d1960d9f22aed5977c1b2282a"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 5,
    "deletions": 4
  },
  "files": [
    {
      "sha": "edeccd3781e16be3380003fc0089f19124d7c932",
      "filename": "app/assets/javascripts/discourse/app/components/emoji-picker.js",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/discourse/discourse/blob/e8053d17f64d5b43e17d3b469a0da82d229ab291/app/assets/javascripts/discourse/app/components/emoji-picker.js",
      "raw_url": "https://github.com/discourse/discourse/raw/e8053d17f64d5b43e17d3b469a0da82d229ab291/app/assets/javascripts/discourse/app/components/emoji-picker.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/components/emoji-picker.js?ref=e8053d17f64d5b43e17d3b469a0da82d229ab291",
      "patch": "@@ -150,7 +150,7 @@ export default Component.extend({\n     ].map((name, index) => {\n       return {\n         name,\n-        icon: index === this.selectedDiversity ? \"check\" : \"\",\n+        icon: index + 1 === this.selectedDiversity ? \"check\" : \"\",\n       };\n     });\n   }),\n@@ -162,7 +162,8 @@ export default Component.extend({\n   },\n \n   @action\n-  onDiversitySelection(scale) {\n+  onDiversitySelection(index) {\n+    const scale = index + 1;\n     this.emojiStore.diversity = scale;\n     this.set(\"selectedDiversity\", scale);\n \n@@ -248,8 +249,8 @@ export default Component.extend({\n   _codeWithDiversity(code, selectedDiversity) {\n     if (/:t\\d/.test(code)) {\n       return code;\n-    } else if (selectedDiversity !== 0 && isSkinTonableEmoji(code)) {\n-      return `${code}:t${selectedDiversity + 1}`;\n+    } else if (selectedDiversity > 1 && isSkinTonableEmoji(code)) {\n+      return `${code}:t${selectedDiversity}`;\n     } else {\n       return code;\n     }"
    }
  ]
}
