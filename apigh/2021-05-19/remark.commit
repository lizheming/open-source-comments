{
  "sha": "6f10a5a4a3941e658e086ec74269156f58e92f7d",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOjZmMTBhNWE0YTM5NDFlNjU4ZTA4NmVjNzQyNjkxNTZmNThlOTJmN2Q=",
  "commit": {
    "author": {
      "name": "Yuriy Karpov",
      "email": "unknown",
      "date": "2021-05-06T17:53:56Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2021-05-19T08:59:25Z"
    },
    "message": "fix mobile navigation to comment for hidden comments\nissues-82",
    "tree": {
      "sha": "329e92fa232c79c45cf0485a19d9566cb50da88a",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/329e92fa232c79c45cf0485a19d9566cb50da88a"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/6f10a5a4a3941e658e086ec74269156f58e92f7d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/6f10a5a4a3941e658e086ec74269156f58e92f7d",
  "html_url": "https://github.com/umputun/remark42/commit/6f10a5a4a3941e658e086ec74269156f58e92f7d",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/6f10a5a4a3941e658e086ec74269156f58e92f7d/comments",
  "author": null,
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "29ac37c8ea550b95188a47d6fad5aa61eb432f45",
      "url": "https://api.github.com/repos/umputun/remark42/commits/29ac37c8ea550b95188a47d6fad5aa61eb432f45",
      "html_url": "https://github.com/umputun/remark42/commit/29ac37c8ea550b95188a47d6fad5aa61eb432f45"
    }
  ],
  "stats": {
    "total": 44,
    "additions": 22,
    "deletions": 22
  },
  "files": [
    {
      "sha": "2ea15eed16a8969c620c7a66329ed83258668fe9",
      "filename": "frontend/app/components/root/root.tsx",
      "status": "modified",
      "additions": 22,
      "deletions": 22,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark42/blob/6f10a5a4a3941e658e086ec74269156f58e92f7d/frontend/app/components/root/root.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/6f10a5a4a3941e658e086ec74269156f58e92f7d/frontend/app/components/root/root.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/root/root.tsx?ref=6f10a5a4a3941e658e086ec74269156f58e92f7d",
      "patch": "@@ -100,22 +100,13 @@ const messages = defineMessages({\n   },\n });\n \n-const getCollapsedParents = (\n-  hash: string,\n-  childToParentComments: Record<string, string>,\n-  collapsedThreads: Record<string, boolean>\n-) => {\n-  const collapsedParents = [];\n+const getCollapsedParent = (hash: string, childToParentComments: Record<string, string>) => {\n   let id = hash.replace(`#${COMMENT_NODE_CLASSNAME_PREFIX}`, '');\n-\n   while (childToParentComments[id]) {\n     id = childToParentComments[id];\n-    if (collapsedThreads[id]) {\n-      collapsedParents.push(id);\n-    }\n   }\n \n-  return collapsedParents;\n+  return id;\n };\n \n /** main component fr main comments widget */\n@@ -160,20 +151,29 @@ export class Root extends Component<Props, State> {\n       if (e) e.preventDefault();\n \n       if (!document.querySelector(hash)) {\n-        const ids = getCollapsedParents(hash, this.props.childToParentComments, this.props.collapsedThreads);\n-        ids.forEach((id) => this.props.setCollapse(id, false));\n+        const id = getCollapsedParent(hash, this.props.childToParentComments);\n+        const indexHash = this.props.topComments.findIndex((item) => item === id);\n+        const multiplierCollapsed = Math.ceil(indexHash / MAX_SHOWN_ROOT_COMMENTS);\n+        this.setState(\n+          {\n+            commentsShown: this.state.commentsShown + MAX_SHOWN_ROOT_COMMENTS * multiplierCollapsed,\n+          },\n+          () => setTimeout(() => this.toMessage(hash), 500)\n+        );\n+      } else {\n+        this.toMessage(hash);\n       }\n+    }\n+  };\n \n+  toMessage = (hash: string) => {\n+    const comment = document.querySelector(hash);\n+    if (comment) {\n+      postMessage({ scrollTo: comment.getBoundingClientRect().top });\n+      comment.classList.add('comment_highlighting');\n       setTimeout(() => {\n-        const comment = document.querySelector(hash);\n-        if (comment) {\n-          postMessage({ scrollTo: comment.getBoundingClientRect().top });\n-          comment.classList.add('comment_highlighting');\n-          setTimeout(() => {\n-            comment.classList.remove('comment_highlighting');\n-          }, 5e3);\n-        }\n-      }, 500);\n+        comment.classList.remove('comment_highlighting');\n+      }, 5e3);\n     }\n   };\n "
    }
  ]
}
