{
  "sha": "e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOmUxZThkYTRiMmFhM2Y3OWE0NzE0OWJhZTc1ZjEzZGJhZjZjMjIxZDM=",
  "commit": {
    "author": {
      "name": "Pavel Mineev",
      "email": "pavel@mineev.me",
      "date": "2021-01-28T21:23:29Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2021-01-29T09:17:10Z"
    },
    "message": "use parens for arrow funcs always",
    "tree": {
      "sha": "3786da50528d6849d8e9ad9448f3078a64a2f2a5",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/3786da50528d6849d8e9ad9448f3078a64a2f2a5"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
  "html_url": "https://github.com/umputun/remark42/commit/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/comments",
  "author": {
    "login": "akellbl4",
    "id": 2330682,
    "node_id": "MDQ6VXNlcjIzMzA2ODI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2330682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/akellbl4",
    "html_url": "https://github.com/akellbl4",
    "followers_url": "https://api.github.com/users/akellbl4/followers",
    "following_url": "https://api.github.com/users/akellbl4/following{/other_user}",
    "gists_url": "https://api.github.com/users/akellbl4/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/akellbl4/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/akellbl4/subscriptions",
    "organizations_url": "https://api.github.com/users/akellbl4/orgs",
    "repos_url": "https://api.github.com/users/akellbl4/repos",
    "events_url": "https://api.github.com/users/akellbl4/events{/privacy}",
    "received_events_url": "https://api.github.com/users/akellbl4/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "be2f6d0a20e48e8f11c054d7539f969cac261791",
      "url": "https://api.github.com/repos/umputun/remark42/commits/be2f6d0a20e48e8f11c054d7539f969cac261791",
      "html_url": "https://github.com/umputun/remark42/commit/be2f6d0a20e48e8f11c054d7539f969cac261791"
    }
  ],
  "stats": {
    "total": 247,
    "additions": 121,
    "deletions": 126
  },
  "files": [
    {
      "sha": "a1f177ab899baf7ee51946166d131fd20eab3913",
      "filename": "frontend/.babelrc.js",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/.babelrc.js",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/.babelrc.js",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/.babelrc.js?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -1,4 +1,4 @@\n-const getPresetEnv = options => ['@babel/preset-env', options];\n+const getPresetEnv = (options) => ['@babel/preset-env', options];\n const preactPreset = [\n   '@babel/preset-react',\n   {"
    },
    {
      "sha": "f7757bd0754df233f8af228b3d66c5a8a02c40ff",
      "filename": "frontend/.prettierrc.js",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/.prettierrc.js",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/.prettierrc.js",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/.prettierrc.js?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -6,7 +6,6 @@ module.exports = {\n   singleQuote: true,\n   trailingComma: 'es5',\n   bracketSpacing: true,\n-  arrowParens: 'avoid',\n   overrides: [\n     {\n       files: ['*.html'],"
    },
    {
      "sha": "3026bf73ac9b6c72b3770d987cccd51551daebea",
      "filename": "frontend/app/common/api.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/common/api.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/common/api.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/common/api.ts?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -53,7 +53,7 @@ export const logIn = (provider: AuthProvider): Promise<User | null> => {\n         clearInterval(checkInterval);\n \n         getUser()\n-          .then(user => {\n+          .then((user) => {\n             resolve(user);\n           })\n           .catch(() => {\n@@ -263,7 +263,7 @@ export const uploadImage = (image: File): Promise<Image> => {\n       contentType: 'multipart/form-data',\n       body: data,\n     })\n-    .then(resp => ({\n+    .then((resp) => ({\n       name: image.name,\n       size: image.size,\n       type: image.type,"
    },
    {
      "sha": "019f5e10d0e0aa3e3885c139a1b5cd5049385da0",
      "filename": "frontend/app/common/fetcher.test.ts",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/common/fetcher.test.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/common/fetcher.test.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/common/fetcher.test.ts?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -17,10 +17,10 @@ describe('fetcher', () => {\n \n       return fetcher\n         .get('/api/some')\n-        .then(data => {\n+        .then((data) => {\n           throw new Error('Request should be failed');\n         })\n-        .catch(e => {\n+        .catch((e) => {\n           expect(e.code).toBe(2);\n           expect(e.error).toBe('you just cant');\n           expect(e.details).toBe('you just cant at all');\n@@ -39,10 +39,10 @@ describe('fetcher', () => {\n \n       return fetcher\n         .get('/api/some')\n-        .then(data => {\n+        .then((data) => {\n           throw new Error('Request should be failed');\n         })\n-        .catch(e => {\n+        .catch((e) => {\n           expect(e.code).toBe(401);\n           expect(e.error).toBe('Not authorized.');\n         });\n@@ -61,10 +61,10 @@ describe('fetcher', () => {\n \n       return fetcher\n         .get({ url: '/api/some', logError: false })\n-        .then(data => {\n+        .then((data) => {\n           throw new Error('Request should be failed');\n         })\n-        .catch(e => {\n+        .catch((e) => {\n           expect(e.code).toBe(0);\n           expect(e.error).toBe('Something went wrong.');\n         });"
    },
    {
      "sha": "fb8caaef64191b4ffce9e114bd98caf21894bc5e",
      "filename": "frontend/app/common/fetcher.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/common/fetcher.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/common/fetcher.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/common/fetcher.ts?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -83,7 +83,7 @@ const fetcher = methods.reduce<Partial<FetcherObject>>((acc, method) => {\n     }\n \n     return fetch(rurl, parameters)\n-      .then(res => {\n+      .then((res) => {\n         const date = (res.headers.has('date') && res.headers.get('date')) || '';\n         const timestamp = isNaN(Date.parse(date)) ? 0 : Date.parse(date);\n         const timeDiff = (new Date().getTime() - timestamp) / 1000;\n@@ -104,7 +104,7 @@ const fetcher = methods.reduce<Partial<FetcherObject>>((acc, method) => {\n \n             throw new RequestError(descriptor.defaultMessage, res.status);\n           }\n-          return res.text().then(text => {\n+          return res.text().then((text) => {\n             let err;\n             try {\n               err = JSON.parse(text);\n@@ -125,7 +125,7 @@ const fetcher = methods.reduce<Partial<FetcherObject>>((acc, method) => {\n \n         return res.text();\n       })\n-      .catch(e => {\n+      .catch((e) => {\n         if (isFailedFetch(e)) {\n           throw new RequestError(e.message, -2);\n         }"
    },
    {
      "sha": "81d0d63fbec4bb112f4418db1beb490d0d9ce139",
      "filename": "frontend/app/components/auth-panel/auth-panel.tsx",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/auth-panel/auth-panel.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/auth-panel/auth-panel.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/auth-panel/auth-panel.tsx?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -193,15 +193,15 @@ export class AuthPanel extends Component<Props, State> {\n         <FormattedMessage id=\"commentSort.sort-by\" defaultMessage=\"Sort by\" />{' '}\n         <span className=\"auth-panel__select-label\">\n           <span className={b('auth-panel__select-label-value', {}, { focused: sortSelectFocused })}>\n-            {sortArray.find(x => 'selected' in x && x.selected!)!.label}\n+            {sortArray.find((x) => 'selected' in x && x.selected!)!.label}\n           </span>\n           <select\n             className=\"auth-panel__select\"\n             onChange={this.onSortChange}\n             onFocus={this.onSortFocus}\n             onBlur={this.onSortBlur}\n           >\n-            {sortArray.map(sort => (\n+            {sortArray.map((sort) => (\n               <option value={sort.value} selected={sort.selected}>\n                 {sort.label}\n               </option>\n@@ -315,7 +315,7 @@ function getSortArray(currentSort: Sorting, intl: IntlShape) {\n     },\n   ];\n \n-  return sortArray.map(sort => {\n+  return sortArray.map((sort) => {\n     if (sort.value === currentSort) {\n       sort.selected = true;\n     }\n@@ -327,8 +327,8 @@ function getSortArray(currentSort: Sorting, intl: IntlShape) {\n export default function AuthPanelConnected(props: OwnProps) {\n   const intl = useIntl();\n   const theme = useTheme();\n-  const provider = useSelector<StoreState, ProviderState>(state => state.provider);\n-  const sort = useSelector<StoreState, Sorting>(state => state.comments.sort);\n+  const provider = useSelector<StoreState, ProviderState>((state) => state.provider);\n+  const sort = useSelector<StoreState, Sorting>((state) => state.comments.sort);\n \n   return (\n     <AuthPanel"
    },
    {
      "sha": "304f6824d16f6835ef6b65d9c178628ab7e7bb4f",
      "filename": "frontend/app/components/auth/auth.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/auth/auth.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/auth/auth.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/auth/auth.tsx?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -78,7 +78,7 @@ class Auth extends Component<Props, State> {\n \n     return (\n       <Dropdown title={other} theme={this.props.theme} onTitleClick={this.onEmailTitleClick}>\n-        {providers.map(provider => (\n+        {providers.map((provider) => (\n           <DropdownItem>{this.renderProvider(provider)}</DropdownItem>\n         ))}\n       </Dropdown>\n@@ -187,8 +187,8 @@ const authPanelMessages = defineMessages({\n \n export default function AuthWrapper() {\n   const dispatch = useDispatch();\n-  const provider = useSelector<StoreState, ProviderState>(store => store.provider);\n-  const user = useSelector<StoreState, User | null>(store => store.user);\n+  const provider = useSelector<StoreState, ProviderState>((store) => store.provider);\n+  const user = useSelector<StoreState, User | null>((store) => store.user);\n   const theme = useTheme();\n   const intl = useIntl();\n   const handleSignin = useCallback((provider: AuthProvider) => dispatch(logIn(provider)), [dispatch]);"
    },
    {
      "sha": "92eaf09b328956c2e72a4d602eed7980bdef1663",
      "filename": "frontend/app/components/comment-form/__subscribe-by-rss/comment-form__subscribe-by-rss.test.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/comment-form/__subscribe-by-rss/comment-form__subscribe-by-rss.test.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/comment-form/__subscribe-by-rss/comment-form__subscribe-by-rss.test.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/comment-form/__subscribe-by-rss/comment-form__subscribe-by-rss.test.tsx?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -4,7 +4,7 @@ import { shallow } from 'enzyme';\n import { SubscribeByRSS, createSubscribeUrl } from '.';\n \n jest.mock('react-redux', () => ({\n-  useSelector: jest.fn(fn => fn({ theme: 'light' })),\n+  useSelector: jest.fn((fn) => fn({ theme: 'light' })),\n }));\n \n jest.mock('react-intl', () => {"
    },
    {
      "sha": "16b2e55341f3c1d694fee2852d0b4d89c3ad17e6",
      "filename": "frontend/app/components/comment-form/comment-form.tsx",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/comment-form/comment-form.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/comment-form/comment-form.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/comment-form/comment-form.tsx?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -214,7 +214,7 @@ export class CommentForm extends Component<CommentFormProps, CommentFormState> {\n     this.setState({ isDisabled: true, isErrorShown: false, text });\n     try {\n       await this.props.onSubmit(text, pageTitle || document.title);\n-      updateJsonItem<Record<string, string>>(LS_SAVED_COMMENT_VALUE, data => {\n+      updateJsonItem<Record<string, string>>(LS_SAVED_COMMENT_VALUE, (data) => {\n         delete data[this.props.id];\n \n         return data;\n@@ -239,7 +239,7 @@ export class CommentForm extends Component<CommentFormProps, CommentFormState> {\n \n     this.props\n       .getPreview(text)\n-      .then(preview => this.setState({ preview }))\n+      .then((preview) => this.setState({ preview }))\n       .catch(() => {\n         this.setState({ isErrorShown: true, errorMessage: null });\n       });\n@@ -267,7 +267,7 @@ export class CommentForm extends Component<CommentFormProps, CommentFormState> {\n     if (!this.textAreaRef) return;\n     if (!e.dataTransfer) return;\n     const items = Array.from(e.dataTransfer.items);\n-    if (Array.from(items).filter(i => i.kind === 'file' && ImageMimeRegex.test(i.type)).length === 0) return;\n+    if (Array.from(items).filter((i) => i.kind === 'file' && ImageMimeRegex.test(i.type)).length === 0) return;\n     e.preventDefault();\n     e.dataTransfer.dropEffect = 'copy';\n   }\n@@ -287,7 +287,7 @@ export class CommentForm extends Component<CommentFormProps, CommentFormState> {\n     if (StaticStore.config.max_image_size === 0) return;\n     if (!e.dataTransfer) return;\n \n-    const data = Array.from(e.dataTransfer.files).filter(f => ImageMimeRegex.test(f.type));\n+    const data = Array.from(e.dataTransfer.files).filter((f) => ImageMimeRegex.test(f.type));\n     if (data.length === 0) return;\n \n     e.preventDefault();\n@@ -497,7 +497,7 @@ export class CommentForm extends Component<CommentFormProps, CommentFormState> {\n         </div>\n \n         {(isErrorShown || !!errorMessage) &&\n-          (errorMessage || intl.formatMessage(messages.unexpectedError)).split('\\n').map(e => (\n+          (errorMessage || intl.formatMessage(messages.unexpectedError)).split('\\n').map((e) => (\n             <p className=\"comment-form__error\" role=\"alert\" key={e}>\n               {e}\n             </p>"
    },
    {
      "sha": "561372a279af99db8dc9282a0d651e9399cc9cad",
      "filename": "frontend/app/components/comment-form/text-expander.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/comment-form/text-expander.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/comment-form/text-expander.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/comment-form/text-expander.tsx?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -34,7 +34,7 @@ function SuggestionList({ items, theme }: { items: Array<Emoji>; theme: Theme })\n \n function searchEmoji(key: string, text: string, theme: Theme) {\n   return import(/* webpackChunkName: \"node-emoji\" */ `node-emoji`)\n-    .then(nodeEmoji => {\n+    .then((nodeEmoji) => {\n       if (key === ':') {\n         const emojiList = nodeEmoji.search(text);\n         if (emojiList.length === 0) {"
    },
    {
      "sha": "a7325ab376e43940b68877288d19c0c9b53b9dda",
      "filename": "frontend/app/components/comment/comment.test.tsx",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/comment/comment.test.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/comment/comment.test.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/comment/comment.test.tsx?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -58,7 +58,7 @@ describe('<Comment />', () => {\n \n       expect(voteButtons.length).toEqual(2);\n \n-      voteButtons.forEach(button => {\n+      voteButtons.forEach((button) => {\n         expect(button.prop('aria-disabled')).toEqual('true');\n         expect(button.prop('title')).toEqual(\"Anonymous users can't vote\");\n       });\n@@ -73,7 +73,7 @@ describe('<Comment />', () => {\n \n       expect(voteButtons.length).toEqual(2);\n \n-      voteButtons.forEach(button => {\n+      voteButtons.forEach((button) => {\n         expect(button.prop('aria-disabled')).toEqual('false');\n       });\n     });\n@@ -84,7 +84,7 @@ describe('<Comment />', () => {\n       const voteButtons = element.find('.comment__vote');\n       expect(voteButtons.length).toStrictEqual(2);\n \n-      voteButtons.forEach(b => {\n+      voteButtons.forEach((b) => {\n         expect(b.getDOMNode().getAttribute('aria-disabled')).toStrictEqual('true');\n         expect(b.getDOMNode().getAttribute('title')).toStrictEqual(\"Voting allowed only on post's page\");\n       });\n@@ -100,7 +100,7 @@ describe('<Comment />', () => {\n       const voteButtons = element.find('.comment__vote');\n       expect(voteButtons.length).toStrictEqual(2);\n \n-      voteButtons.forEach(b => {\n+      voteButtons.forEach((b) => {\n         expect(b.getDOMNode().getAttribute('aria-disabled')).toStrictEqual('true');\n         expect(b.getDOMNode().getAttribute('title')).toStrictEqual(\"Can't vote on read-only topics\");\n       });\n@@ -115,7 +115,7 @@ describe('<Comment />', () => {\n       const voteButtons = element.find('.comment__vote');\n       expect(voteButtons.length).toStrictEqual(2);\n \n-      voteButtons.forEach(b => {\n+      voteButtons.forEach((b) => {\n         expect(b.getDOMNode().getAttribute('aria-disabled')).toStrictEqual('true');\n         expect(b.getDOMNode().getAttribute('title')).toStrictEqual(\"Can't vote for deleted comment\");\n       });\n@@ -137,7 +137,7 @@ describe('<Comment />', () => {\n       const voteButtons = element.find('.comment__vote');\n       expect(voteButtons.length).toStrictEqual(2);\n \n-      voteButtons.forEach(b => {\n+      voteButtons.forEach((b) => {\n         expect(b.getDOMNode().getAttribute('aria-disabled')).toStrictEqual('true');\n         expect(b.getDOMNode().getAttribute('title')).toStrictEqual(\"Can't vote for your own comment\");\n       });\n@@ -149,7 +149,7 @@ describe('<Comment />', () => {\n       const voteButtons = element.find('.comment__vote');\n       expect(voteButtons.length).toStrictEqual(2);\n \n-      voteButtons.forEach(b => {\n+      voteButtons.forEach((b) => {\n         expect(b.getDOMNode().getAttribute('aria-disabled')).toStrictEqual('true');\n         expect(b.getDOMNode().getAttribute('title')).toStrictEqual('Sign in to vote');\n       });"
    },
    {
      "sha": "8b303d39ed9a921121e92cebce2cb161707c3101",
      "filename": "frontend/app/components/comment/comment.tsx",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/comment/comment.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/comment/comment.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/comment/comment.tsx?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -257,7 +257,7 @@ class Comment extends Component<CommentProps, State> {\n   blockUser = debounce((ttl: BlockTTL): void => {\n     const { user } = this.props.data;\n     const blockingDurations = getBlockingDurations(this.props.intl);\n-    const blockDuration = blockingDurations.find(el => el.value === ttl);\n+    const blockDuration = blockingDurations.find((el) => el.value === ttl);\n     // blocking duration may be undefined if user hasn't selected anything\n     // and ttl equals \"Blocking period\"\n     if (!blockDuration) return;\n@@ -310,7 +310,7 @@ class Comment extends Component<CommentProps, State> {\n   sendVotingRequest = (votingValue: number, originalScore: number, originalDelta: number) => {\n     this.votingPromise = this.votingPromise\n       .then(() => this.props.putCommentVote!(this.props.data.id, votingValue))\n-      .catch(e => this.handleVoteError(e, originalScore, originalDelta));\n+      .catch((e) => this.handleVoteError(e, originalScore, originalDelta));\n   };\n \n   increaseScore = () => {\n@@ -506,7 +506,7 @@ class Comment extends Component<CommentProps, State> {\n               <option disabled selected value={undefined}>\n                 <FormattedMessage id=\"comment.blocking-period\" defaultMessage=\"Blocking period\" />\n               </option>\n-              {blockingDurations.map(block => (\n+              {blockingDurations.map((block) => (\n                 <option value={block.value}>{block.label}</option>\n               ))}\n             </select>\n@@ -562,7 +562,7 @@ class Comment extends Component<CommentProps, State> {\n       time: new Date(props.data.time),\n       orig: isEditing\n         ? props.data.orig &&\n-          props.data.orig.replace(/&[#A-Za-z0-9]+;/gi, entity => {\n+          props.data.orig.replace(/&[#A-Za-z0-9]+;/gi, (entity) => {\n             const span = document.createElement('span');\n             span.innerHTML = entity;\n             return span.innerText;\n@@ -702,7 +702,7 @@ class Comment extends Component<CommentProps, State> {\n               href={`${o.locator.url}#${COMMENT_NODE_CLASSNAME_PREFIX}${o.pid}`}\n               aria-label={goToParentMessage}\n               title={goToParentMessage}\n-              onClick={e => this.scrollToParent(e)}\n+              onClick={(e) => this.scrollToParent(e)}\n             >\n               {' '}\n             </a>"
    },
    {
      "sha": "b01d39a48d5e70d2cd130ae84bec27d1e48945ab",
      "filename": "frontend/app/components/comment/connected-comment.tsx",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/comment/connected-comment.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/comment/connected-comment.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/comment/connected-comment.tsx?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -40,7 +40,7 @@ const mapStateToProps = (state: StoreState, cprops: { data: CommentType }) => {\n   const props: ProvidedProps = {\n     editMode: getCommentMode(cprops.data.id)(state),\n     user: state.user,\n-    isUserBanned: cprops.data.user.block || state.bannedUsers.find(u => u.id === cprops.data.user.id) !== undefined,\n+    isUserBanned: cprops.data.user.block || state.bannedUsers.find((u) => u.id === cprops.data.user.id) !== undefined,\n     post_info: state.info,\n     isCommentsDisabled: state.info.read_only || false,\n     theme: state.theme,\n@@ -64,9 +64,9 @@ export const boundActions = bindActions({\n   setVerifiedStatus,\n });\n \n-export const ConnectedComment: FunctionComponent<\n-  Omit<CommentProps, keyof (ProvidedProps & typeof bindActions)>\n-> = props => {\n+export const ConnectedComment: FunctionComponent<Omit<CommentProps, keyof (ProvidedProps & typeof bindActions)>> = (\n+  props\n+) => {\n   const providedProps = mapStateToProps(useStore().getState(), props);\n   const actions = useActions(boundActions);\n   const intl = useIntl();"
    },
    {
      "sha": "8fbf36eedcf8f71a17a58f052eb8302bd1eb6e70",
      "filename": "frontend/app/components/dropdown/dropdown.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/dropdown/dropdown.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/dropdown/dropdown.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/dropdown/dropdown.tsx?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -91,7 +91,7 @@ export class Dropdown extends Component<Props, State> {\n       const windowHeight = window.innerHeight;\n       const dcBottom = (() => {\n         // TODO: use ref\n-        const dc = Array.from(this.rootNode.current.children).find(c => c.classList.contains('dropdown__content'));\n+        const dc = Array.from(this.rootNode.current.children).find((c) => c.classList.contains('dropdown__content'));\n         if (!dc) return 0;\n         const rect = dc.getBoundingClientRect();\n         return window.scrollY + Math.abs(rect.top) + dc.scrollHeight + 10;"
    },
    {
      "sha": "4a608f27c4bc755ac7c693bc7d9c49365b2f81e5",
      "filename": "frontend/app/components/list-comments/list-comments.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/list-comments/list-comments.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/list-comments/list-comments.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/list-comments/list-comments.tsx?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -16,7 +16,7 @@ const ListComments: FunctionComponent<ListCommentsProps> = ({ comments = [] }) =\n \n   return (\n     <div className={classnames('comments-list', styles.root)}>\n-      {comments.map(comment => (\n+      {comments.map((comment) => (\n         <Comment\n           intl={intl}\n           key={comment.id}"
    },
    {
      "sha": "9554e3919757288624fab40fdfb20927adec843e",
      "filename": "frontend/app/components/root/in-view/in-view.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/root/in-view/in-view.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/root/in-view/in-view.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/root/in-view/in-view.tsx?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -10,8 +10,8 @@ function getObserver(): { observer: IntersectionObserver; instanceMap: WeakMap<E\n   }\n   instanceMap = new WeakMap<Element, (inView: boolean) => void>();\n   observer = new window.IntersectionObserver(\n-    entries => {\n-      entries.forEach(e => {\n+    (entries) => {\n+      entries.forEach((e) => {\n         const setInView = instanceMap.get(e.target);\n         if (!setInView) return;\n         setInView(e.isIntersecting);"
    },
    {
      "sha": "4f79f4302989213a80622501cee4b365c0dbe9ce",
      "filename": "frontend/app/components/root/root.tsx",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/root/root.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/root/root.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/root/root.tsx?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -49,14 +49,14 @@ const mapStateToProps = (state: StoreState) => ({\n   user: state.user,\n   childToParentComments: Object.entries(state.comments.childComments).reduce(\n     (accumulator: Record<string, string>, [key, children]) => {\n-      children.forEach(child => (accumulator[child] = key));\n+      children.forEach((child) => (accumulator[child] = key));\n       return accumulator;\n     },\n     {}\n   ),\n   collapsedThreads: state.collapsedThreads,\n   topComments: state.comments.topComments,\n-  pinnedComments: state.comments.pinnedComments.map(id => state.comments.allComments[id]).filter(c => !c.hidden),\n+  pinnedComments: state.comments.pinnedComments.map((id) => state.comments.allComments[id]).filter((c) => !c.hidden),\n   theme: state.theme,\n   info: state.info,\n   hiddenUsers: state.hiddenUsers,\n@@ -166,7 +166,7 @@ export class Root extends Component<Props, State> {\n \n       if (!document.querySelector(hash)) {\n         const ids = getCollapsedParents(hash, this.props.childToParentComments, this.props.collapsedThreads);\n-        ids.forEach(id => this.props.setCollapse(id, false));\n+        ids.forEach((id) => this.props.setCollapse(id, false));\n       }\n \n       setTimeout(() => {\n@@ -284,7 +284,7 @@ export class Root extends Component<Props, State> {\n                   role=\"region\"\n                   aria-label={this.props.intl.formatMessage(messages.pinnedComments)}\n                 >\n-                  {this.props.pinnedComments.map(comment => (\n+                  {this.props.pinnedComments.map((comment) => (\n                     <Comment\n                       CommentForm={CommentForm}\n                       intl={this.props.intl}\n@@ -304,7 +304,7 @@ export class Root extends Component<Props, State> {\n                   {(IS_MOBILE && commentsShown < this.props.topComments.length\n                     ? this.props.topComments.slice(0, commentsShown)\n                     : this.props.topComments\n-                  ).map(id => (\n+                  ).map((id) => (\n                     <Thread\n                       key={`thread-${id}`}\n                       id={id}"
    },
    {
      "sha": "f627edad31267367d5dcd2d239a9f8a632b412fd",
      "filename": "frontend/app/components/settings/settings.tsx",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/settings/settings.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/settings/settings.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/settings/settings.tsx?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -64,7 +64,7 @@ export default class Settings extends Component<Props, State> {\n   block = (user: BlockedUser) => {\n     if (!window.confirm(this.props.intl.formatMessage(messages.blockUser, { userName: user.name }))) return;\n     this.setState({\n-      unblockedUsers: this.state.unblockedUsers.filter(x => x !== user.id),\n+      unblockedUsers: this.state.unblockedUsers.filter((x) => x !== user.id),\n     });\n     this.props.blockUser(user.id, user.name, 'permanently');\n   };\n@@ -78,7 +78,7 @@ export default class Settings extends Component<Props, State> {\n \n   hide = (user: User) => {\n     this.setState({\n-      unhiddenUsers: this.state.unhiddenUsers.filter(x => x !== user.id),\n+      unhiddenUsers: this.state.unhiddenUsers.filter((x) => x !== user.id),\n     });\n     this.props.hideUser(user);\n   };\n@@ -114,7 +114,7 @@ export default class Settings extends Component<Props, State> {\n           )}\n           {!!hiddenUsersList.length && (\n             <ul className=\"settings__list\">\n-              {hiddenUsersList.map(user => {\n+              {hiddenUsersList.map((user) => {\n                 const isUserUnhidden = unhiddenUsers.includes(user.id);\n \n                 return (\n@@ -163,7 +163,7 @@ export default class Settings extends Component<Props, State> {\n \n             {!!blockedUsers.length && (\n               <ul className=\"settings__list settings__blocked-users-list\">\n-                {blockedUsers.map(user => {\n+                {blockedUsers.map((user) => {\n                   const isUserUnblocked = unblockedUsers.includes(user.id);\n \n                   return ("
    },
    {
      "sha": "4b8a3584e49e55af8c28a7c6b7ab412307ea89e2",
      "filename": "frontend/app/components/thread/thread.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/thread/thread.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/thread/thread.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/thread/thread.tsx?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -52,7 +52,7 @@ export const Thread: FunctionComponent<Props> = ({ id, level, mix, getPreview })\n       aria-expanded={!collapsed}\n     >\n       <InView>\n-        {inviewProps => (\n+        {(inviewProps) => (\n           <Comment\n             CommentForm={CommentForm}\n             ref={inviewProps.ref}\n@@ -70,7 +70,7 @@ export const Thread: FunctionComponent<Props> = ({ id, level, mix, getPreview })\n       {!collapsed &&\n         childs &&\n         !!childs.length &&\n-        childs.map(currentId => (\n+        childs.map((currentId) => (\n           <Thread key={`thread-${currentId}`} id={currentId} level={Math.min(level + 1, 6)} getPreview={getPreview} />\n         ))}\n       {level < 6 && ("
    },
    {
      "sha": "792bd6fb06089538dd41e8520a6e375eab0854ba",
      "filename": "frontend/app/components/user-info/last-comments-list.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/user-info/last-comments-list.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/user-info/last-comments-list.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/user-info/last-comments-list.tsx?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -15,7 +15,7 @@ const LastCommentsList = ({ comments, isLoading }: { comments: CommentType[]; is\n \n   return (\n     <>\n-      {comments.map(comment => (\n+      {comments.map((comment) => (\n         <Comment\n           CommentForm={null}\n           intl={intl}"
    },
    {
      "sha": "9ca6210166e97839f8faedf9c2dce23641d6d57a",
      "filename": "frontend/app/components/with-theme/index.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/with-theme/index.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/components/with-theme/index.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/components/with-theme/index.tsx?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -9,7 +9,7 @@ const themeSelector = (state: StoreState) => state.theme;\n  * Connects redux theme property to component's\n  */\n function withTheme<P extends { theme: Theme }>(PlainComponent: ComponentType<P>) {\n-  const C: FunctionComponent<Omit<P, 'theme'>> = props => {\n+  const C: FunctionComponent<Omit<P, 'theme'>> = (props) => {\n     const theme = useSelector(themeSelector);\n     // eslint-disable-next-line @typescript-eslint/no-explicit-any\n     return <PlainComponent theme={theme} {...(props as any)} />;"
    },
    {
      "sha": "491f37fe6e88b3eeb5aa0ff66a9c9ec65c01a6c4",
      "filename": "frontend/app/counter.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/counter.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/counter.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/counter.ts?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -33,7 +33,7 @@ function init(): void {\n     if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {\n       try {\n         const res = JSON.parse(this.responseText) as { url: string; count: number }[];\n-        res.forEach(item => map[item.url].map(n => (n.innerHTML = item.count.toString(10))));\n+        res.forEach((item) => map[item.url].map((n) => (n.innerHTML = item.count.toString(10))));\n       } catch (e) {}\n     }\n   };"
    },
    {
      "sha": "1e05824d34df81c12172eefb879b1dcc3e58fd0e",
      "filename": "frontend/app/deleteme.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/deleteme.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/deleteme.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/deleteme.ts?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -20,14 +20,14 @@ async function init(): Promise<void> {\n     return;\n   }\n \n-  getUser().then(user => {\n+  getUser().then((user) => {\n     if (!user || !user.admin) {\n       handleNotAuthorizedError(node);\n       return;\n     }\n \n     approveDeleteMe(token).then(\n-      data => {\n+      (data) => {\n         node.innerHTML = `\n             <h3>User deleted successfully</h3>\n             <pre>${JSON.stringify(data, null, 4)}</pre>"
    },
    {
      "sha": "369d928970dc679f0d698680d9a2f5c9237eccdc",
      "filename": "frontend/app/embed.ts",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/embed.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/embed.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/embed.ts?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -76,9 +76,9 @@ function createInstance(config: typeof window.remark_config) {\n   config.url = (config.url || `${window.location.origin}${window.location.pathname}`).split('#')[0];\n \n   const query = Object.keys(config)\n-    .filter(key => key !== '__colors__')\n+    .filter((key) => key !== '__colors__')\n     .map(\n-      key =>\n+      (key) =>\n         `${encodeURIComponent(key)}=${encodeURIComponent(\n           config[key as keyof Omit<typeof window.remark_config, '__colors__'>] as string | number | boolean\n         )}`\n@@ -97,7 +97,7 @@ function createInstance(config: typeof window.remark_config) {\n \n   const titleElement = document.querySelector('title');\n   if (titleElement) {\n-    titleObserver = new MutationObserver(mutations => postTitleToIframe(mutations[0].target.textContent!));\n+    titleObserver = new MutationObserver((mutations) => postTitleToIframe(mutations[0].target.textContent!));\n     titleObserver.observe(titleElement, {\n       subtree: true,\n       characterData: true,\n@@ -228,14 +228,14 @@ function createInstance(config: typeof window.remark_config) {\n       document.removeEventListener('keydown', this.onKeyDown);\n     },\n     delay: null,\n-    events: ['', 'webkit', 'moz', 'MS', 'o'].map(prefix => (prefix ? `${prefix}TransitionEnd` : 'transitionend')),\n+    events: ['', 'webkit', 'moz', 'MS', 'o'].map((prefix) => (prefix ? `${prefix}TransitionEnd` : 'transitionend')),\n     onAnimationClose() {\n       const el = this.node!;\n       if (!this.node) {\n         return;\n       }\n       this.delay = window.setTimeout(this.animationStop, 1000);\n-      this.events.forEach(event => el.addEventListener(event, this.animationStop, false));\n+      this.events.forEach((event) => el.addEventListener(event, this.animationStop, false));\n     },\n     onKeyDown(e) {\n       // ESCAPE key pressed\n@@ -252,7 +252,7 @@ function createInstance(config: typeof window.remark_config) {\n         clearTimeout(t.delay);\n         t.delay = null;\n       }\n-      t.events.forEach(event => t.node!.removeEventListener(event, t.animationStop, false));\n+      t.events.forEach((event) => t.node!.removeEventListener(event, t.animationStop, false));\n       return t.remove();\n     },\n     remove() {"
    },
    {
      "sha": "57d90d1e37eca664936cd3787848fe09525ec624",
      "filename": "frontend/app/last-comments.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/last-comments.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/last-comments.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/last-comments.tsx?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -35,7 +35,7 @@ async function init(): Promise<void> {\n     throw new Error('Remark42: Site ID is undefined.');\n   }\n \n-  (Array.from(nodes) as HTMLElement[]).forEach(node => {\n+  (Array.from(nodes) as HTMLElement[]).forEach((node) => {\n     const max = (node.dataset.max && parseInt(node.dataset.max, 10)) || max_last_comments || DEFAULT_LAST_COMMENTS_MAX;\n     const locale = getLocale(window.remark_config);\n "
    },
    {
      "sha": "5e9e7d2ade332f37e011c92e6ed7618d537c7e38",
      "filename": "frontend/app/store/comments/actions.ts",
      "status": "modified",
      "additions": 8,
      "deletions": 10,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/store/comments/actions.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/store/comments/actions.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/store/comments/actions.ts?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -18,31 +18,29 @@ import { setItem } from 'common/local-storage';\n import { LS_SORT_KEY } from 'common/constants';\n \n /** sets comments, and put pinned comments in cache */\n-export const setComments = (comments: Node[]): StoreAction<void> => dispatch => {\n+export const setComments = (comments: Node[]): StoreAction<void> => (dispatch) => {\n   dispatch({\n     type: COMMENTS_SET,\n     comments,\n   });\n };\n \n /** appends comment to tree */\n-export const addComment = (\n-  text: string,\n-  title: string,\n-  pid?: Comment['id']\n-): StoreAction<Promise<void>> => async dispatch => {\n+export const addComment = (text: string, title: string, pid?: Comment['id']): StoreAction<Promise<void>> => async (\n+  dispatch\n+) => {\n   const comment = await api.addComment({ text, title, pid });\n   dispatch({ type: COMMENTS_APPEND, pid: pid || null, comment });\n };\n \n /** edits comment in tree */\n-export const updateComment = (id: Comment['id'], text: string): StoreAction<Promise<void>> => async dispatch => {\n+export const updateComment = (id: Comment['id'], text: string): StoreAction<Promise<void>> => async (dispatch) => {\n   const comment = await api.updateComment({ id, text });\n   dispatch({ type: COMMENTS_EDIT, comment });\n };\n \n /** edits comment in tree */\n-export const putVote = (id: Comment['id'], value: number): StoreAction<Promise<void>> => async dispatch => {\n+export const putVote = (id: Comment['id'], value: number): StoreAction<Promise<void>> => async (dispatch) => {\n   await api.putCommentVote({ id, value });\n   const comment = await api.getComment(id);\n   dispatch({ type: COMMENTS_EDIT, comment });\n@@ -85,7 +83,7 @@ export const fetchComments = (sort?: Sorting): StoreAction<Promise<Tree>> => asy\n   const data = await api.getPostComments(sort || comments.sort);\n   dispatch({ type: COMMENTS_REQUEST_SUCCESS });\n   if (hiddenUsersIds.length > 0) {\n-    data.comments = filterTree(data.comments, node => hiddenUsersIds.indexOf(node.comment.user.id) === -1);\n+    data.comments = filterTree(data.comments, (node) => hiddenUsersIds.indexOf(node.comment.user.id) === -1);\n   }\n \n   dispatch(setComments(data.comments));\n@@ -95,7 +93,7 @@ export const fetchComments = (sort?: Sorting): StoreAction<Promise<Tree>> => asy\n };\n \n /** sets mode for comment, either reply or edit */\n-export const setCommentMode = (mode: StoreState['comments']['activeComment']): StoreAction<void> => dispatch => {\n+export const setCommentMode = (mode: StoreState['comments']['activeComment']): StoreAction<void> => (dispatch) => {\n   if (mode !== null && mode.state === CommentMode.None) {\n     mode = null;\n   }"
    },
    {
      "sha": "22b0b8d560387a254630de6e88886afebb6f6a36",
      "filename": "frontend/app/store/comments/reducers.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/store/comments/reducers.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/store/comments/reducers.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/store/comments/reducers.ts?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -30,7 +30,7 @@ export const topComments = (\n     case COMMENTS_SET: {\n       return cmpRef(\n         state,\n-        action.comments.map(x => x.comment.id)\n+        action.comments.map((x) => x.comment.id)\n       );\n     }\n     case COMMENTS_APPEND: {\n@@ -146,7 +146,7 @@ export const pinnedComments = (\n ): Comment['id'][] => {\n   switch (action.type) {\n     case COMMENTS_SET: {\n-      return getPinnedComments(action.comments).map(x => x.id);\n+      return getPinnedComments(action.comments).map((x) => x.id);\n     }\n     case COMMENTS_EDIT: {\n       const index = state.indexOf(action.comment.id);\n@@ -162,7 +162,7 @@ export const pinnedComments = (\n     case COMMENTS_PATCH: {\n       if (!Object.prototype.hasOwnProperty.call(action.patch, 'pin')) return state;\n       if (!action.patch.pin) {\n-        return state.filter(x => action.ids.indexOf(x) === -1);\n+        return state.filter((x) => action.ids.indexOf(x) === -1);\n       }\n       return [...state, ...action.ids].reduce<Comment['id'][]>((c, x) => {\n         if (c.indexOf(x) === -1) {"
    },
    {
      "sha": "2cab2d15a026ed56c2e21607b491c98db68b71c1",
      "filename": "frontend/app/store/provider/actions.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/store/provider/actions.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/store/provider/actions.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/store/provider/actions.ts?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -6,7 +6,7 @@ const PROVIDER_LOCALSTORAGE_KEY = '__remarkProvider';\n \n /** saves last login provider from localstorage and put to store */\n export function updateProvider(payload: PROVIDER_UPDATE_ACTION['payload']): StoreAction<void, PROVIDER_UPDATE_ACTION> {\n-  return dispatch => {\n+  return (dispatch) => {\n     setItem(PROVIDER_LOCALSTORAGE_KEY, JSON.stringify(payload));\n     dispatch({\n       type: PROVIDER_UPDATE,\n@@ -17,7 +17,7 @@ export function updateProvider(payload: PROVIDER_UPDATE_ACTION['payload']): Stor\n \n /** restores last login provider from localstorage and put to store */\n export function restoreProvider(): StoreAction<void, PROVIDER_UPDATE_ACTION> {\n-  return dispatch => {\n+  return (dispatch) => {\n     const payloadString = getItem(PROVIDER_LOCALSTORAGE_KEY);\n     if (!payloadString) return;\n     try {"
    },
    {
      "sha": "f507759789fe0a3fbb058680ebba91bc653e02cf",
      "filename": "frontend/app/store/theme/actions.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/store/theme/actions.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/store/theme/actions.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/store/theme/actions.ts?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -3,7 +3,7 @@ import { Theme } from 'common/types';\n import { StoreAction } from '../';\n import { THEME_SET } from './types';\n \n-export const setTheme = (theme: Theme): StoreAction<void> => dispatch =>\n+export const setTheme = (theme: Theme): StoreAction<void> => (dispatch) =>\n   dispatch({\n     type: THEME_SET,\n     theme,"
    },
    {
      "sha": "537fabc2bbdfb733ad543f3088482c3d9fb2cd29",
      "filename": "frontend/app/store/thread/utils.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/store/thread/utils.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/store/thread/utils.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/store/thread/utils.ts?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -23,8 +23,8 @@ export const getCollapsedComments = (): string[] =>\n  * @param info list of string of type \"site-id_url_comment-id\n  */\n export const saveCollapsedComments = (siteId: string, url: string, info: Comment['id'][]): void => {\n-  const data = info.map(i => `${siteId}_${url}_${i}`);\n-  const notForThisPost = getFromLocalStorage().filter(entry => entry.indexOf(`${siteId}_${url}`) === -1);\n+  const data = info.map((i) => `${siteId}_${url}_${i}`);\n+  const notForThisPost = getFromLocalStorage().filter((entry) => entry.indexOf(`${siteId}_${url}`) === -1);\n   const all = new Set([...notForThisPost, ...data]);\n   localStorageSetItem(LS_COLLAPSE_KEY, JSON.stringify([...all]));\n };"
    },
    {
      "sha": "030571d9c0cf21f3b1ce9a989b332cada1b6b7cc",
      "filename": "frontend/app/store/user-info/actions.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/store/user-info/actions.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/store/user-info/actions.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/store/user-info/actions.ts?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -5,7 +5,7 @@ import { userInfo } from 'common/user-info-settings';\n import { StoreAction } from '../index';\n import { USER_INFO_SET } from './types';\n \n-export const fetchInfo = (): StoreAction<Promise<Comment[] | null>> => async dispatch => {\n+export const fetchInfo = (): StoreAction<Promise<Comment[] | null>> => async (dispatch) => {\n   if (!userInfo.id) {\n     return null;\n   }"
    },
    {
      "sha": "2337c2055787a3e023937e7ffdbf09956bc3bddc",
      "filename": "frontend/app/store/user/actions.ts",
      "status": "modified",
      "additions": 14,
      "deletions": 16,
      "changes": 30,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/store/user/actions.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/store/user/actions.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/store/user/actions.ts?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -28,13 +28,13 @@ function setUser(user: User | null = null): USER_SET_ACTION {\n   };\n }\n \n-export const fetchUser = (): StoreAction<Promise<User | null>> => async dispatch => {\n+export const fetchUser = (): StoreAction<Promise<User | null>> => async (dispatch) => {\n   const user = await api.getUser();\n   dispatch(setUser(user));\n   return user;\n };\n \n-export const logIn = (provider: AuthProvider): StoreAction<Promise<User | null>> => async dispatch => {\n+export const logIn = (provider: AuthProvider): StoreAction<Promise<User | null>> => async (dispatch) => {\n   const user = await api.logIn(provider);\n \n   dispatch(updateProvider({ name: provider.name }));\n@@ -44,25 +44,23 @@ export const logIn = (provider: AuthProvider): StoreAction<Promise<User | null>>\n   return user;\n };\n \n-export const logout = (): StoreAction<Promise<void>> => async dispatch => {\n+export const logout = (): StoreAction<Promise<void>> => async (dispatch) => {\n   await api.logOut();\n   dispatch(unsetCommentMode());\n   dispatch(setUser());\n };\n \n-export const fetchBlockedUsers = (): StoreAction<Promise<BlockedUser[]>> => async dispatch => {\n+export const fetchBlockedUsers = (): StoreAction<Promise<BlockedUser[]>> => async (dispatch) => {\n   const list = (await api.getBlocked()) || [];\n \n   dispatch({ type: USER_BANLIST_SET, list });\n \n   return list;\n };\n \n-export const blockUser = (\n-  id: User['id'],\n-  name: string,\n-  ttl: BlockTTL\n-): StoreAction<Promise<void>> => async dispatch => {\n+export const blockUser = (id: User['id'], name: string, ttl: BlockTTL): StoreAction<Promise<void>> => async (\n+  dispatch\n+) => {\n   await api.blockUser(id, ttl);\n   dispatch({\n     type: USER_BAN,\n@@ -78,19 +76,19 @@ export const unblockUser = (id: User['id']): StoreAction<Promise<void>> => async\n   await api.unblockUser(id);\n   dispatch({ type: USER_UNBAN, id });\n   const comments = Object.values(getState().comments.allComments);\n-  const userComments = comments.filter(comment => comment.user.id === id);\n+  const userComments = comments.filter((comment) => comment.user.id === id);\n \n   if (!userComments.length) return;\n   const user = comments[0].user;\n \n   dispatch({\n     type: COMMENTS_PATCH,\n-    ids: userComments.map(c => c.id),\n+    ids: userComments.map((c) => c.id),\n     patch: { user: { ...user, block: false } },\n   });\n };\n \n-export const fetchHiddenUsers = (): StoreAction<void> => dispatch => {\n+export const fetchHiddenUsers = (): StoreAction<void> => (dispatch) => {\n   const hiddenUsers = getHiddenUsers();\n \n   dispatch({ type: USER_HIDELIST_SET, payload: hiddenUsers });\n@@ -103,8 +101,8 @@ export const hideUser = (user: User): StoreAction<void> => (dispatch, getState)\n   setItem(LS_HIDDEN_USERS_KEY, JSON.stringify(hiddenUsers));\n \n   const ids = Object.values(getState().comments.allComments)\n-    .filter(c => c.user.id === user.id)\n-    .map(c => c.id);\n+    .filter((c) => c.user.id === user.id)\n+    .map((c) => c.id);\n \n   dispatch({ type: USER_HIDE, user });\n   dispatch({ type: COMMENTS_PATCH, ids, patch: { hidden: true } });\n@@ -133,14 +131,14 @@ export const setVerifiedStatus = (id: User['id'], status: boolean): StoreAction<\n     await api.removeVerifiedStatus(id);\n   }\n   const comments = Object.values(getState().comments.allComments);\n-  const userComments = comments.filter(c => c.user.id === id);\n+  const userComments = comments.filter((c) => c.user.id === id);\n \n   if (!userComments.length) return;\n   const user = userComments[0].user;\n \n   dispatch({\n     type: COMMENTS_PATCH,\n-    ids: userComments.map(c => c.id),\n+    ids: userComments.map((c) => c.id),\n     patch: { user: { ...user, verified: status } },\n   });\n };"
    },
    {
      "sha": "f45f48ff9547486736538ef787337cd5a9a7454c",
      "filename": "frontend/app/store/user/reducers.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/store/user/reducers.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/store/user/reducers.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/store/user/reducers.ts?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -38,13 +38,13 @@ export const bannedUsers = (state: BlockedUser[] = [], action: USER_ACTIONS): Bl\n       return action.list;\n     }\n     case USER_BAN: {\n-      if (state.find(u => u.id === action.user.id) !== undefined) {\n+      if (state.find((u) => u.id === action.user.id) !== undefined) {\n         return state;\n       }\n       return [action.user, ...state];\n     }\n     case USER_UNBAN: {\n-      const index = state.findIndex(u => u.id === action.id);\n+      const index = state.findIndex((u) => u.id === action.id);\n       if (index === -1) {\n         return state;\n       }"
    },
    {
      "sha": "f477424472b234d27a117af52c0d495f4473dfed",
      "filename": "frontend/app/utils/jwt.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/utils/jwt.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/utils/jwt.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/utils/jwt.ts?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -4,7 +4,7 @@ export function parseJwt<T extends { exp: number; [key: string]: unknown }>(toke\n   const jsonPayload = decodeURIComponent(\n     atob(base64)\n       .split('')\n-      .map(c => `%${`00${c.charCodeAt(0).toString(16)}`.slice(-2)}`)\n+      .map((c) => `%${`00${c.charCodeAt(0).toString(16)}`.slice(-2)}`)\n       .join('')\n   );\n "
    },
    {
      "sha": "876b1e44c61dcbc72d86878056b173c8b20d16df",
      "filename": "frontend/app/utils/loadLocale.ts",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/utils/loadLocale.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/utils/loadLocale.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/utils/loadLocale.ts?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -4,34 +4,34 @@ const enMessages = {};\n \n export async function loadLocale(locale: string): Promise<Record<string, string>> {\n   if (locale === 'ru') {\n-    return import(/* webpackChunkName: \"ru\" */ '../locales/ru.json').then(res => res.default).catch(() => enMessages);\n+    return import(/* webpackChunkName: \"ru\" */ '../locales/ru.json').then((res) => res.default).catch(() => enMessages);\n   }\n   if (locale === 'de') {\n-    return import(/* webpackChunkName: \"de\" */ '../locales/de.json').then(res => res.default).catch(() => enMessages);\n+    return import(/* webpackChunkName: \"de\" */ '../locales/de.json').then((res) => res.default).catch(() => enMessages);\n   }\n   if (locale === 'fi') {\n-    return import(/* webpackChunkName: \"fi\" */ '../locales/fi.json').then(res => res.default).catch(() => enMessages);\n+    return import(/* webpackChunkName: \"fi\" */ '../locales/fi.json').then((res) => res.default).catch(() => enMessages);\n   }\n   if (locale === 'es') {\n-    return import(/* webpackChunkName: \"es\" */ '../locales/es.json').then(res => res.default).catch(() => enMessages);\n+    return import(/* webpackChunkName: \"es\" */ '../locales/es.json').then((res) => res.default).catch(() => enMessages);\n   }\n   if (locale === 'zh') {\n-    return import(/* webpackChunkName: \"zh\" */ '../locales/zh.json').then(res => res.default).catch(() => enMessages);\n+    return import(/* webpackChunkName: \"zh\" */ '../locales/zh.json').then((res) => res.default).catch(() => enMessages);\n   }\n   if (locale === 'tr') {\n-    return import(/* webpackChunkName: \"tr\" */ '../locales/tr.json').then(res => res.default).catch(() => enMessages);\n+    return import(/* webpackChunkName: \"tr\" */ '../locales/tr.json').then((res) => res.default).catch(() => enMessages);\n   }\n   if (locale === 'bg') {\n-    return import(/* webpackChunkName: \"bg\" */ '../locales/bg.json').then(res => res.default).catch(() => enMessages);\n+    return import(/* webpackChunkName: \"bg\" */ '../locales/bg.json').then((res) => res.default).catch(() => enMessages);\n   }\n   if (locale === 'ua') {\n-    return import(/* webpackChunkName: \"ua\" */ '../locales/ua.json').then(res => res.default).catch(() => enMessages);\n+    return import(/* webpackChunkName: \"ua\" */ '../locales/ua.json').then((res) => res.default).catch(() => enMessages);\n   }\n   if (locale === 'pl') {\n-    return import(/* webpackChunkName: \"pl\" */ '../locales/pl.json').then(res => res.default).catch(() => enMessages);\n+    return import(/* webpackChunkName: \"pl\" */ '../locales/pl.json').then((res) => res.default).catch(() => enMessages);\n   }\n   if (locale === 'vi') {\n-    return import(/* webpackChunkName: \"vi\" */ '../locales/vi.json').then(res => res.default).catch(() => enMessages);\n+    return import(/* webpackChunkName: \"vi\" */ '../locales/vi.json').then((res) => res.default).catch(() => enMessages);\n   }\n \n   return enMessages;"
    },
    {
      "sha": "abe5aad067ec70761769a5db0e97cc617403897c",
      "filename": "frontend/app/utils/sleep.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/utils/sleep.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/app/utils/sleep.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/app/utils/sleep.ts?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -1,3 +1,3 @@\n export function sleep(ms = 1000): Promise<void> {\n-  return new Promise(resolve => setTimeout(resolve, ms));\n+  return new Promise((resolve) => setTimeout(resolve, ms));\n }"
    },
    {
      "sha": "675ba2212b620bb57593aedaf6fa0fc1d2d6c83e",
      "filename": "frontend/tasks/checkTranslation.js",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/tasks/checkTranslation.js",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/tasks/checkTranslation.js",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/tasks/checkTranslation.js?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -5,10 +5,10 @@ const { keys } = require('./getTranslationKeys');\n \n const errors = [];\n \n-locales.forEach(locale => {\n+locales.forEach((locale) => {\n   const dict = require(getLocalePath({ locale }));\n   const keysFromDict = Object.keys(dict);\n-  keysFromDict.forEach(key => {\n+  keysFromDict.forEach((key) => {\n     if (!keys.includes(key)) {\n       errors.push(\n         `\"${key}\" key not found in \"${locale}\" locale dict. Please run \"npm run translation:generate\" and commit changes.`"
    },
    {
      "sha": "da2e85e551be9ed4bf34a138e4a4db6df40fb98f",
      "filename": "frontend/tasks/generateDictionary.js",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/tasks/generateDictionary.js",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/tasks/generateDictionary.js",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/tasks/generateDictionary.js?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -19,7 +19,7 @@ function sortDict(dict) {\n   );\n }\n \n-locales.forEach(locale => {\n+locales.forEach((locale) => {\n   let currentDict = {};\n   const pathToDict = getLocalePath({ locale });\n   if (fs.existsSync(pathToDict)) {\n@@ -35,6 +35,6 @@ locales.forEach(locale => {\n   fs.writeFileSync(pathToDict, `${JSON.stringify(currentDict, null, 2)}\\n`);\n   fs.writeFileSync(\n     path.resolve(__dirname, `../app/utils/loadLocale.ts`),\n-    renderLoadLocale(locales.filter(locale => locale !== 'en'))\n+    renderLoadLocale(locales.filter((locale) => locale !== 'en'))\n   );\n });"
    },
    {
      "sha": "fda9cb9d08614c637995f9cc58559e2a7ddd1bea",
      "filename": "frontend/tasks/localeLoadTemplate.js",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/tasks/localeLoadTemplate.js",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/tasks/localeLoadTemplate.js",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/tasks/localeLoadTemplate.js?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -6,7 +6,7 @@ const enMessages = {};\n export async function loadLocale(locale: string): Promise<Record<string, string>> {\n ${locales\n   .map(\n-    locale => `  if (locale === '${locale}') {\n+    (locale) => `  if (locale === '${locale}') {\n     return import(/* webpackChunkName: \"${locale}\" */ '../locales/${locale}.json').then((res) => res.default).catch(() => enMessages);\n   }\n `"
    },
    {
      "sha": "bcc485298dcda0598a2f64c4f1a6762c88076f30",
      "filename": "frontend/webpack.config.js",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/webpack.config.js",
      "raw_url": "https://github.com/umputun/remark42/raw/e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3/frontend/webpack.config.js",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend/webpack.config.js?ref=e1e8da4b2aa3f79a47149bae75f13dbaf6c221d3",
      "patch": "@@ -32,7 +32,7 @@ const exclude = [\n   'react-intl',\n   'intl-messageformat',\n   'intl-messageformat-parser',\n-].map(m => path.resolve(__dirname, 'node_modules', m));\n+].map((m) => path.resolve(__dirname, 'node_modules', m));\n \n const htmlMinifyOptions = {\n   minifyCSS: true,"
    }
  ]
}
