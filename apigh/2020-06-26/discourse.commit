{
  "sha": "d234e0f922839e69a0a596e37504174fd2c61c01",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODpkMjM0ZTBmOTIyODM5ZTY5YTBhNTk2ZTM3NTA0MTc0ZmQyYzYxYzAx",
  "commit": {
    "author": {
      "name": "Régis Hanol",
      "email": "regis@hanol.fr",
      "date": "2020-06-26T10:48:11Z"
    },
    "committer": {
      "name": "Régis Hanol",
      "email": "regis@hanol.fr",
      "date": "2020-06-26T10:48:11Z"
    },
    "message": "SPEC: add spec to ensure discobot works in French\n\nPERF: memoize cooked triggers\n\nFollow-up to 3c31884b",
    "tree": {
      "sha": "9eb2ca9d52633ae14023581af8463251028e06e9",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/9eb2ca9d52633ae14023581af8463251028e06e9"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/d234e0f922839e69a0a596e37504174fd2c61c01",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/d234e0f922839e69a0a596e37504174fd2c61c01",
  "html_url": "https://github.com/discourse/discourse/commit/d234e0f922839e69a0a596e37504174fd2c61c01",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/d234e0f922839e69a0a596e37504174fd2c61c01/comments",
  "author": {
    "login": "ZogStriP",
    "id": 362783,
    "node_id": "MDQ6VXNlcjM2Mjc4Mw==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/362783?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ZogStriP",
    "html_url": "https://github.com/ZogStriP",
    "followers_url": "https://api.github.com/users/ZogStriP/followers",
    "following_url": "https://api.github.com/users/ZogStriP/following{/other_user}",
    "gists_url": "https://api.github.com/users/ZogStriP/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ZogStriP/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ZogStriP/subscriptions",
    "organizations_url": "https://api.github.com/users/ZogStriP/orgs",
    "repos_url": "https://api.github.com/users/ZogStriP/repos",
    "events_url": "https://api.github.com/users/ZogStriP/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ZogStriP/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ZogStriP",
    "id": 362783,
    "node_id": "MDQ6VXNlcjM2Mjc4Mw==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/362783?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ZogStriP",
    "html_url": "https://github.com/ZogStriP",
    "followers_url": "https://api.github.com/users/ZogStriP/followers",
    "following_url": "https://api.github.com/users/ZogStriP/following{/other_user}",
    "gists_url": "https://api.github.com/users/ZogStriP/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ZogStriP/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ZogStriP/subscriptions",
    "organizations_url": "https://api.github.com/users/ZogStriP/orgs",
    "repos_url": "https://api.github.com/users/ZogStriP/repos",
    "events_url": "https://api.github.com/users/ZogStriP/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ZogStriP/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c16ad39f8e3e7ac5e3ef019f085557df074f0e57",
      "url": "https://api.github.com/repos/discourse/discourse/commits/c16ad39f8e3e7ac5e3ef019f085557df074f0e57",
      "html_url": "https://github.com/discourse/discourse/commit/c16ad39f8e3e7ac5e3ef019f085557df074f0e57"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 16,
    "deletions": 1
  },
  "files": [
    {
      "sha": "67d852317fae28d53155643683727492b1b0e96a",
      "filename": "plugins/discourse-narrative-bot/lib/discourse_narrative_bot/track_selector.rb",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/discourse/discourse/blob/d234e0f922839e69a0a596e37504174fd2c61c01/plugins/discourse-narrative-bot/lib/discourse_narrative_bot/track_selector.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/d234e0f922839e69a0a596e37504174fd2c61c01/plugins/discourse-narrative-bot/lib/discourse_narrative_bot/track_selector.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/plugins/discourse-narrative-bot/lib/discourse_narrative_bot/track_selector.rb?ref=d234e0f922839e69a0a596e37504174fd2c61c01",
      "patch": "@@ -222,9 +222,15 @@ def skip_track?\n       end\n     end\n \n+    @@cooked_triggers = {}\n+\n+    def cook(trigger)\n+      @@cooked_triggers[trigger] ||= PrettyText.cook(\"@#{self.discobot_username} #{trigger}\")\n+    end\n+\n     def match_trigger?(trigger)\n       # we remove the leading <p> to allow for trigger to be at the end of a paragraph\n-      cooked_trigger = PrettyText.cook(\"@#{self.discobot_username} #{trigger}\")[3..-1]\n+      cooked_trigger = cook(trigger)[3..-1]\n       regexp = Regexp.new(cooked_trigger, 'i')\n       match = @post.cooked.match(regexp)\n "
    },
    {
      "sha": "d703ab7e1261a607b7686c07e1cdb67cc3282f71",
      "filename": "plugins/discourse-narrative-bot/spec/discourse_narrative_bot/track_selector_spec.rb",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/discourse/discourse/blob/d234e0f922839e69a0a596e37504174fd2c61c01/plugins/discourse-narrative-bot/spec/discourse_narrative_bot/track_selector_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/d234e0f922839e69a0a596e37504174fd2c61c01/plugins/discourse-narrative-bot/spec/discourse_narrative_bot/track_selector_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/plugins/discourse-narrative-bot/spec/discourse_narrative_bot/track_selector_spec.rb?ref=d234e0f922839e69a0a596e37504174fd2c61c01",
      "patch": "@@ -416,6 +416,15 @@\n             expect(new_post.raw).to eq(random_mention_reply)\n           end\n \n+          it 'works with french locale' do\n+            I18n.with_locale(\"fr\") do\n+              post.update!(raw: \"@discobot afficher l'aide\")\n+              described_class.new(:reply, user, post_id: post.id).select\n+              # gsub'ing to ensure non-breaking whitespaces matches regular whitespaces\n+              expect(Post.last.raw.gsub(/[[:space:]]+/, \" \")).to eq(help_message.gsub(/[[:space:]]+/, \" \"))\n+            end\n+          end\n+\n           it 'should not rate limit help message' do\n             post.update!(raw: '@discobot')\n             other_post = Fabricate(:post, raw: 'discobot', topic: post.topic)"
    }
  ]
}
