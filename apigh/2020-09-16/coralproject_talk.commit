{
  "sha": "b5712ef6de14b93b87eebd055815e2c2ddbb1edc",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6YjU3MTJlZjZkZTE0YjkzYjg3ZWViZDA1NTgxNWUyYzJkZGJiMWVkYw==",
  "commit": {
    "author": {
      "name": "Tessa Thornton",
      "email": "tessathornton@gmail.com",
      "date": "2020-09-10T18:28:28Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-09-10T18:28:28Z"
    },
    "message": "fix media embed flows (#3185)",
    "tree": {
      "sha": "5ab1e65495adf67eb61e9a95b23fe3deaae86b5f",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/5ab1e65495adf67eb61e9a95b23fe3deaae86b5f"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/b5712ef6de14b93b87eebd055815e2c2ddbb1edc",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfWnBMCRBK7hj4Ov3rIwAAdHIIAFo+Y2dUbjx6EfXJsNj0CRS/\noMC/iKk7zruE4Y7R/H/WvDNwEl8N8Zlmc6RK+IxXus/1F663j4oSlVMc2IV8e4aF\n08pEtKucly9v5Xf4xH5Q3/YVs5au3ekI1EVSX3Bp937BhhNGXAheJ2/3eYRdzdkR\nFQhoyUI/dUz4XlLAL680H1JR50pio77x7Jx/0GSdAd1+VtjjSeIGCoh356/u947n\nWeUyGv68Pnjnc0auCNrlVg2yLDJn9gA3tu+kGxpwJUnM440C/lbs07R4UWItSCgt\nl6ovMDfZiW9CvlzNCmUXr/1cFunBeZFLr45GzAdxcGuca0MOsVDp950SnHKUK4A=\n=qr1W\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 5ab1e65495adf67eb61e9a95b23fe3deaae86b5f\nparent 1f95bf1c8b71f705098ff88075ccfc9869bcdca1\nauthor Tessa Thornton <tessathornton@gmail.com> 1599762508 -0400\ncommitter GitHub <noreply@github.com> 1599762508 +0000\n\nfix media embed flows (#3185)\n\n"
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/b5712ef6de14b93b87eebd055815e2c2ddbb1edc",
  "html_url": "https://github.com/coralproject/talk/commit/b5712ef6de14b93b87eebd055815e2c2ddbb1edc",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/b5712ef6de14b93b87eebd055815e2c2ddbb1edc/comments",
  "author": {
    "login": "tessalt",
    "id": 1789029,
    "node_id": "MDQ6VXNlcjE3ODkwMjk=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/1789029?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tessalt",
    "html_url": "https://github.com/tessalt",
    "followers_url": "https://api.github.com/users/tessalt/followers",
    "following_url": "https://api.github.com/users/tessalt/following{/other_user}",
    "gists_url": "https://api.github.com/users/tessalt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tessalt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tessalt/subscriptions",
    "organizations_url": "https://api.github.com/users/tessalt/orgs",
    "repos_url": "https://api.github.com/users/tessalt/repos",
    "events_url": "https://api.github.com/users/tessalt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tessalt/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1f95bf1c8b71f705098ff88075ccfc9869bcdca1",
      "url": "https://api.github.com/repos/coralproject/talk/commits/1f95bf1c8b71f705098ff88075ccfc9869bcdca1",
      "html_url": "https://github.com/coralproject/talk/commit/1f95bf1c8b71f705098ff88075ccfc9869bcdca1"
    }
  ],
  "stats": {
    "total": 88,
    "additions": 73,
    "deletions": 15
  },
  "files": [
    {
      "sha": "3284347b4d215fde1c7e5d7fe881dbb4029f2ecb",
      "filename": "src/core/client/stream/tabs/Comments/Stream/CommentForm/CommentForm.tsx",
      "status": "modified",
      "additions": 67,
      "deletions": 9,
      "changes": 76,
      "blob_url": "https://github.com/coralproject/talk/blob/b5712ef6de14b93b87eebd055815e2c2ddbb1edc/src/core/client/stream/tabs/Comments/Stream/CommentForm/CommentForm.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/b5712ef6de14b93b87eebd055815e2c2ddbb1edc/src/core/client/stream/tabs/Comments/Stream/CommentForm/CommentForm.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/CommentForm/CommentForm.tsx?ref=b5712ef6de14b93b87eebd055815e2c2ddbb1edc",
      "patch": "@@ -110,15 +110,48 @@ function createWidgetToggle(desiredWidget: Widget) {\n const CommentForm: FunctionComponent<Props> = (props) => {\n   const [mediaWidget, setMediaWidget] = useState<Widget>(null);\n   const [pastedMedia, setPastedMedia] = useState<MediaLink | null>(null);\n-  const onSubmit = useCallback(\n+  const { onSubmit, mediaConfig } = props;\n+  const onFormSubmit = useCallback(\n     (values: FormSubmitProps, form: FormApi) => {\n       // Unset the media.\n       setPastedMedia(null);\n \n       // Submit the form.\n-      return props.onSubmit(values, form);\n+      return onSubmit(values, form);\n     },\n-    [props.onSubmit, setPastedMedia]\n+    [onSubmit, setPastedMedia]\n+  );\n+\n+  const onBodyChange = useCallback(\n+    (html: string, values: FormProps, form: FormApi) => {\n+      if (pastedMedia || values.media) {\n+        const existingLink =\n+          values.media && values.media.url ? values.media : pastedMedia;\n+        // if there is a pending or selected twitter or youtube url\n+        if (\n+          existingLink &&\n+          (existingLink.type === \"twitter\" || existingLink.type === \"youtube\")\n+        ) {\n+          const links = findMediaLinks(html);\n+          // ensure the text still contains the link\n+          const match = links.find((l) => l.url === existingLink?.url);\n+          if (!match) {\n+            // check if the text contains another link\n+            const otherLink = links.find((l) => l.url !== existingLink?.url);\n+            if (otherLink) {\n+              // prompt user to confirm the other link\n+              setPastedMedia(otherLink);\n+            } else {\n+              // clear pasted media\n+              setPastedMedia(null);\n+            }\n+            // clear form field\n+            form.change(\"media\", null);\n+          }\n+        }\n+      }\n+    },\n+    [setPastedMedia, pastedMedia]\n   );\n \n   const onPaste = useCallback(\n@@ -137,14 +170,14 @@ const CommentForm: FunctionComponent<Props> = (props) => {\n       }\n       if (\n         link &&\n-        props.mediaConfig &&\n-        ((link.type === \"twitter\" && props.mediaConfig.twitter.enabled) ||\n-          (link.type === \"youtube\" && props.mediaConfig.youtube.enabled))\n+        mediaConfig &&\n+        ((link.type === \"twitter\" && mediaConfig.twitter.enabled) ||\n+          (link.type === \"youtube\" && mediaConfig.youtube.enabled))\n       ) {\n         setPastedMedia({ ...link });\n       }\n     },\n-    [setPastedMedia, props.mediaConfig]\n+    [setPastedMedia, mediaConfig]\n   );\n \n   const toggleExternalImageInput = useCallback(() => {\n@@ -160,14 +193,15 @@ const CommentForm: FunctionComponent<Props> = (props) => {\n \n   return (\n     <div className={cn(CLASSES[props.classNameRoot].$root, props.className)}>\n-      <Form onSubmit={onSubmit} initialValues={props.initialValues}>\n+      <Form onSubmit={onFormSubmit} initialValues={props.initialValues}>\n         {({\n           handleSubmit,\n           submitting,\n           submitError,\n           hasValidationErrors,\n           form,\n           pristine,\n+          values,\n         }) => (\n           <form\n             autoComplete=\"off\"\n@@ -204,9 +238,19 @@ const CommentForm: FunctionComponent<Props> = (props) => {\n                           inputID={props.bodyInputID}\n                           config={props.rteConfig}\n                           onFocus={props.onFocus}\n-                          onWillPaste={onPaste}\n+                          onWillPaste={(event) => {\n+                            if (\n+                              !(\n+                                (values as FormProps).media &&\n+                                (values as FormProps).media?.url\n+                              )\n+                            ) {\n+                              onPaste(event);\n+                            }\n+                          }}\n                           onChange={(html: string) => {\n                             input.onChange(html);\n+                            onBodyChange(html, values as FormProps, form);\n                           }}\n                           value={input.value}\n                           placeholder={props.placeholder}\n@@ -222,6 +266,13 @@ const CommentForm: FunctionComponent<Props> = (props) => {\n                                   attrs={{ title: true }}\n                                 >\n                                   <RTEButton\n+                                    disabled={\n+                                      !!pastedMedia ||\n+                                      !!(\n+                                        (values as FormProps).media &&\n+                                        (values as FormProps).media?.url\n+                                      )\n+                                    }\n                                     aria-pressed={showExternalImageInput}\n                                     onClick={toggleExternalImageInput}\n                                   >\n@@ -233,6 +284,13 @@ const CommentForm: FunctionComponent<Props> = (props) => {\n                               props.mediaConfig.giphy.enabled ? (\n                                 <RTEButton\n                                   key=\"gif\"\n+                                  disabled={\n+                                    !!pastedMedia ||\n+                                    !!(\n+                                      (values as FormProps).media &&\n+                                      (values as FormProps).media?.url\n+                                    )\n+                                  }\n                                   aria-pressed={showGifSelector}\n                                   onClick={toggleGIFSelector}\n                                 >"
    },
    {
      "sha": "41d2e1bbb9d7baf78d9c9e01c44ae7cf99ce8c2d",
      "filename": "src/core/client/stream/tabs/Comments/Stream/CommentForm/MediaField.tsx",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/coralproject/talk/blob/b5712ef6de14b93b87eebd055815e2c2ddbb1edc/src/core/client/stream/tabs/Comments/Stream/CommentForm/MediaField.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/b5712ef6de14b93b87eebd055815e2c2ddbb1edc/src/core/client/stream/tabs/Comments/Stream/CommentForm/MediaField.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/CommentForm/MediaField.tsx?ref=b5712ef6de14b93b87eebd055815e2c2ddbb1edc",
      "patch": "@@ -115,7 +115,7 @@ const MediaField: FunctionComponent<Props> = ({\n     // pasted media because pasted media does not use a widget, only a\n     // confirmation.\n     if (pastedMedia) {\n-      setPastedMedia(null);\n+      setWidget(null);\n     }\n   }, [\n     dirty,\n@@ -131,16 +131,16 @@ const MediaField: FunctionComponent<Props> = ({\n   return (\n     <>\n       {/* Show the input widget that's selected. */}\n-      {widget === \"giphy\" ? (\n-        <GiphyInput onSelect={onGiphySelect} />\n-      ) : widget === \"external\" ? (\n-        <ExternalImageInput onSelect={onExternalImageSelect} />\n-      ) : pastedMedia ? (\n+      {pastedMedia ? (\n         <MediaConfirmPrompt\n           media={pastedMedia}\n           onConfirm={onConfirmPastedMedia}\n           onRemove={onRemove}\n         />\n+      ) : widget === \"giphy\" ? (\n+        <GiphyInput onSelect={onGiphySelect} />\n+      ) : widget === \"external\" ? (\n+        <ExternalImageInput onSelect={onExternalImageSelect} />\n       ) : null}\n \n       {/* If there's no widget, and we have a valid url, display preview */}"
    }
  ]
}
