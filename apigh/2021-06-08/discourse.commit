{
  "sha": "9e426d33c73448106abd49259ae4893e9e74fca5",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODo5ZTQyNmQzM2M3MzQ0ODEwNmFiZDQ5MjU5YWU0ODkzZTllNzRmY2E1",
  "commit": {
    "author": {
      "name": "Andrei Prigorshnev",
      "email": "a.prigorshnev@gmail.com",
      "date": "2021-06-08T09:22:49Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2021-06-08T09:22:49Z"
    },
    "message": "FEATURE: Don't show the draft checkmark when drafts are saved (#13292)\n\nWe don't want to show the draft checkmark in the composer when drafts are saved, as it’s a little bit distracting to see it keeps appearing and disappearing. Only in the case of error does it need to show anything, we will be showing a \"drafts offline\" warning as we did it before.\r\n\r\nAn important detail is that the warning was appearing and disappearing all the time too. Now, the warning won’t be flashing while a user is typing, it’ll be disappearing only when the draft was eventually saved.",
    "tree": {
      "sha": "90a9773f6e732e916f1b2acc0ba3b76092a85cfd",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/90a9773f6e732e916f1b2acc0ba3b76092a85cfd"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/9e426d33c73448106abd49259ae4893e9e74fca5",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgvzbpCRBK7hj4Ov3rIwAAayIIAAsHpHHpJFKP6+1RZfVvL2sd\nbEMU+AM/iXdxd7AwRuede3WRRSQ8qsjnf7ZMlqajHoQjH+XHTig9tpDknBpBWotv\nnNTkdHUSRnYZjeR7N9m8iU0t5DkafXPXq0TNrxWQd1zJ+onaPr75M6BOz4Ri7PSR\nxh89z2/+XVnD16/iJFxx6tIHam3TFGkmDc+EqGgG0v2jSHVIFH61U3bcvZ+6/e0x\n5fgwb4cdyVu/tCw55BKV1PcmOq7TcTVLUTz6V64MGrWj7Nel1mhx7NARy769ceBy\nT3+Bf2tjneXX/whasJc08NGcUMtbq4IvD97JPwP2ecHPqLYWitVMwYveQIeaa+Q=\n=56iM\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 90a9773f6e732e916f1b2acc0ba3b76092a85cfd\nparent 393dafce7df10d15a56756b52c102ebcb5ba5c2c\nauthor Andrei Prigorshnev <a.prigorshnev@gmail.com> 1623144169 +0400\ncommitter GitHub <noreply@github.com> 1623144169 +0400\n\nFEATURE: Don't show the draft checkmark when drafts are saved (#13292)\n\nWe don't want to show the draft checkmark in the composer when drafts are saved, as it’s a little bit distracting to see it keeps appearing and disappearing. Only in the case of error does it need to show anything, we will be showing a \"drafts offline\" warning as we did it before.\r\n\r\nAn important detail is that the warning was appearing and disappearing all the time too. Now, the warning won’t be flashing while a user is typing, it’ll be disappearing only when the draft was eventually saved."
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/9e426d33c73448106abd49259ae4893e9e74fca5",
  "html_url": "https://github.com/discourse/discourse/commit/9e426d33c73448106abd49259ae4893e9e74fca5",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/9e426d33c73448106abd49259ae4893e9e74fca5/comments",
  "author": {
    "login": "AndrewPrigorshnev",
    "id": 1274517,
    "node_id": "MDQ6VXNlcjEyNzQ1MTc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1274517?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AndrewPrigorshnev",
    "html_url": "https://github.com/AndrewPrigorshnev",
    "followers_url": "https://api.github.com/users/AndrewPrigorshnev/followers",
    "following_url": "https://api.github.com/users/AndrewPrigorshnev/following{/other_user}",
    "gists_url": "https://api.github.com/users/AndrewPrigorshnev/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AndrewPrigorshnev/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AndrewPrigorshnev/subscriptions",
    "organizations_url": "https://api.github.com/users/AndrewPrigorshnev/orgs",
    "repos_url": "https://api.github.com/users/AndrewPrigorshnev/repos",
    "events_url": "https://api.github.com/users/AndrewPrigorshnev/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AndrewPrigorshnev/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "393dafce7df10d15a56756b52c102ebcb5ba5c2c",
      "url": "https://api.github.com/repos/discourse/discourse/commits/393dafce7df10d15a56756b52c102ebcb5ba5c2c",
      "html_url": "https://github.com/discourse/discourse/commit/393dafce7df10d15a56756b52c102ebcb5ba5c2c"
    }
  ],
  "stats": {
    "total": 92,
    "additions": 56,
    "deletions": 36
  },
  "files": [
    {
      "sha": "5b8f6c681546a003c9d7140e82cba0ab9729642b",
      "filename": "app/assets/javascripts/discourse/app/models/composer.js",
      "status": "modified",
      "additions": 2,
      "deletions": 26,
      "changes": 28,
      "blob_url": "https://github.com/discourse/discourse/blob/9e426d33c73448106abd49259ae4893e9e74fca5/app/assets/javascripts/discourse/app/models/composer.js",
      "raw_url": "https://github.com/discourse/discourse/raw/9e426d33c73448106abd49259ae4893e9e74fca5/app/assets/javascripts/discourse/app/models/composer.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/models/composer.js?ref=9e426d33c73448106abd49259ae4893e9e74fca5",
      "patch": "@@ -1,6 +1,6 @@\n import EmberObject, { set } from \"@ember/object\";\n import { and, equal, not, or, reads } from \"@ember/object/computed\";\n-import { cancel, later, next, throttle } from \"@ember/runloop\";\n+import { next, throttle } from \"@ember/runloop\";\n import discourseComputed, {\n   observes,\n   on,\n@@ -113,7 +113,6 @@ const Composer = RestModel.extend({\n   unlistTopic: false,\n   noBump: false,\n   draftSaving: false,\n-  draftSaved: false,\n   draftForceSave: false,\n \n   archetypes: reads(\"site.archetypes\"),\n@@ -1190,16 +1189,10 @@ const Composer = RestModel.extend({\n     }\n \n     this.setProperties({\n-      draftSaved: false,\n       draftSaving: true,\n       draftConflictUser: null,\n     });\n \n-    if (this._clearingStatus) {\n-      cancel(this._clearingStatus);\n-      this._clearingStatus = null;\n-    }\n-\n     let data = this.serialize(_draft_serializer);\n \n     if (data.postId && !isEmpty(this.originalText)) {\n@@ -1224,7 +1217,7 @@ const Composer = RestModel.extend({\n           });\n         } else {\n           this.setProperties({\n-            draftSaved: true,\n+            draftStatus: null,\n             draftConflictUser: null,\n             draftForceSave: false,\n           });\n@@ -1276,23 +1269,6 @@ const Composer = RestModel.extend({\n         this.set(\"draftSaving\", false);\n       });\n   },\n-\n-  @observes(\"title\", \"reply\")\n-  dataChanged() {\n-    const draftStatus = this.draftStatus;\n-\n-    if (draftStatus && !this._clearingStatus) {\n-      this._clearingStatus = later(\n-        this,\n-        () => {\n-          this.setProperties({ draftStatus: null, draftConflictUser: null });\n-          this._clearingStatus = null;\n-          this.setProperties({ draftSaving: false, draftSaved: false });\n-        },\n-        Ember.Test ? 0 : 1000\n-      );\n-    }\n-  },\n });\n \n Composer.reopenClass({"
    },
    {
      "sha": "7779c0e1aeff18ec192f06bce8362238930e7672",
      "filename": "app/assets/javascripts/discourse/app/templates/composer.hbs",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/9e426d33c73448106abd49259ae4893e9e74fca5/app/assets/javascripts/discourse/app/templates/composer.hbs",
      "raw_url": "https://github.com/discourse/discourse/raw/9e426d33c73448106abd49259ae4893e9e74fca5/app/assets/javascripts/discourse/app/templates/composer.hbs",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/app/templates/composer.hbs?ref=9e426d33c73448106abd49259ae4893e9e74fca5",
      "patch": "@@ -175,14 +175,12 @@\n               </div>\n             {{/if}}\n             <div class={{if isUploading \"hidden\"}} id=\"draft-status\">\n-              {{#if model.draftSaving}}<div class=\"spinner small\"></div>{{/if}}\n-              {{#if model.draftSaved}}{{d-icon \"check\" class=\"save-animation\"}}{{/if}}\n               {{#if model.draftStatus}}\n                 <span title={{model.draftStatus}}>\n                   {{#if model.draftConflictUser}}\n                     {{avatar model.draftConflictUser imageSize=\"small\"}} {{d-icon \"user-edit\"}}\n                   {{else}}\n-                    {{d-icon \"sync-alt\"}}\n+                    {{d-icon \"exclamation-triangle\"}}\n                   {{/if}}\n                   {{#unless site.mobileView}}\n                     {{model.draftStatus}}"
    },
    {
      "sha": "44f6b4d87f949cd71f9330954bac3bd79479b306",
      "filename": "app/assets/javascripts/discourse/tests/acceptance/composer-draft-saving-test.js",
      "status": "added",
      "additions": 53,
      "deletions": 0,
      "changes": 53,
      "blob_url": "https://github.com/discourse/discourse/blob/9e426d33c73448106abd49259ae4893e9e74fca5/app/assets/javascripts/discourse/tests/acceptance/composer-draft-saving-test.js",
      "raw_url": "https://github.com/discourse/discourse/raw/9e426d33c73448106abd49259ae4893e9e74fca5/app/assets/javascripts/discourse/tests/acceptance/composer-draft-saving-test.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/tests/acceptance/composer-draft-saving-test.js?ref=9e426d33c73448106abd49259ae4893e9e74fca5",
      "patch": "@@ -0,0 +1,53 @@\n+import {\n+  acceptance,\n+  exists,\n+  query,\n+} from \"discourse/tests/helpers/qunit-helpers\";\n+import { click, fillIn, visit } from \"@ember/test-helpers\";\n+import { test } from \"qunit\";\n+import I18n from \"I18n\";\n+\n+acceptance(\"Composer - Draft saving\", function (needs) {\n+  needs.user();\n+\n+  const draftThatWillBeSaved = \"This_will_be_saved_successfully\";\n+\n+  needs.pretender((server, helper) => {\n+    server.post(\"/draft.json\", (request) => {\n+      const success = request.requestBody.includes(draftThatWillBeSaved);\n+      return success\n+        ? helper.response({ success: true })\n+        : helper.response(500, {});\n+    });\n+  });\n+\n+  test(\"Shows a warning if a draft wasn't saved\", async function (assert) {\n+    await visit(\"/t/internationalization-localization/280\");\n+    await click(\".topic-post:nth-of-type(1) button.show-more-actions\");\n+    await click(\".topic-post:nth-of-type(1) button.edit\");\n+\n+    await fillIn(\".d-editor-input\", draftThatWillBeSaved);\n+\n+    assert.notOk(\n+      exists(\"div#draft-status span\"),\n+      \"the draft was saved, there's no warning\"\n+    );\n+\n+    await fillIn(\".d-editor-input\", \"This won't be saved because of error\");\n+    assert.equal(\n+      query(\"div#draft-status span\").innerText.trim(),\n+      I18n.t(\"composer.drafts_offline\"),\n+      \"the draft wasn't saved, a warning is rendered\"\n+    );\n+    assert.ok(\n+      exists(\"div#draft-status svg.d-icon-exclamation-triangle\"),\n+      \"an exclamation icon is rendered\"\n+    );\n+\n+    await fillIn(\".d-editor-input\", draftThatWillBeSaved);\n+    assert.notOk(\n+      exists(\"div#draft-status span\"),\n+      \"the draft was saved again, the warning has disappeared\"\n+    );\n+  });\n+});"
    },
    {
      "sha": "5440a5aa2ce8fac4e9c9a663865bbafdfe90bd98",
      "filename": "app/assets/javascripts/discourse/tests/acceptance/composer-test.js",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/9e426d33c73448106abd49259ae4893e9e74fca5/app/assets/javascripts/discourse/tests/acceptance/composer-test.js",
      "raw_url": "https://github.com/discourse/discourse/raw/9e426d33c73448106abd49259ae4893e9e74fca5/app/assets/javascripts/discourse/tests/acceptance/composer-test.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/tests/acceptance/composer-test.js?ref=9e426d33c73448106abd49259ae4893e9e74fca5",
      "patch": "@@ -698,8 +698,6 @@ acceptance(\"Composer\", function (needs) {\n         ),\n         \"mode should have changed\"\n       );\n-\n-      assert.ok(queryAll(\".save-animation\"), \"save animation should show\");\n     } finally {\n       toggleCheckDraftPopup(false);\n     }"
    },
    {
      "sha": "67e7165b61b462789457db9c8c537a25e1f45a1c",
      "filename": "app/assets/stylesheets/common/base/compose.scss",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/discourse/discourse/blob/9e426d33c73448106abd49259ae4893e9e74fca5/app/assets/stylesheets/common/base/compose.scss",
      "raw_url": "https://github.com/discourse/discourse/raw/9e426d33c73448106abd49259ae4893e9e74fca5/app/assets/stylesheets/common/base/compose.scss",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/stylesheets/common/base/compose.scss?ref=9e426d33c73448106abd49259ae4893e9e74fca5",
      "patch": "@@ -482,11 +482,6 @@ div.ac-wrap {\n   }\n }\n \n-.save-animation {\n-  -webkit-animation: transformer 5s forwards;\n-  animation: transformer 5s forwards;\n-}\n-\n @-webkit-keyframes transformer {\n   90% {\n     -webkit-filter: opacity(1);"
    }
  ]
}
