{
  "sha": "9da9b2e1cc314c8c2633303e17eb0d215757d58d",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODo5ZGE5YjJlMWNjMzE0YzhjMjYzMzMwM2UxN2ViMGQyMTU3NTdkNThk",
  "commit": {
    "author": {
      "name": "Jarek Radosz",
      "email": "jradosz@gmail.com",
      "date": "2021-01-08T16:47:28Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2021-01-08T16:47:28Z"
    },
    "message": "DEV: Add i18n fallback specs (#11669)\n\nThose fail on the buggy i18n release (1.8.6) and pass on 1.8.5, 1.8.7 (the revert release), and with the second stab at thread safety on the current master (https://github.com/ruby-i18n/i18n/commit/63a79cb929770629e20f0645676065025c599662)",
    "tree": {
      "sha": "421deb7d84b2a3fae148ab49cc63fb0a10468db2",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/421deb7d84b2a3fae148ab49cc63fb0a10468db2"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/9da9b2e1cc314c8c2633303e17eb0d215757d58d",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf+IygCRBK7hj4Ov3rIwAAdHIIAAENHeW189oaBuUqk7XI9ckl\ndW18qmiJzD5Pr2tOtXQ5DrNTxDWPH5Sn1LdwNo2dltPVYoKYO+05+d7m4L0bhEUo\nFeB5ECRa+rfgGUywi+oP11NnUCOVUrBoz089YVRKrAJGEmxdWhhgDFDLO4DPRUum\nr1XTT4ZeiJV72ztXM3paFmXWYK9r/gX3oMMOwsNyaA09OzEPPtFlXpEDvUh1mH+O\n55N7fqs4w8+b+r8+8rA8T3wAAi1iFMaN9NiNC9K2lBL4rdvsq7lg09tNyJmbzueu\nfS2in+B2AKvorRoiyoSVOUGpRnYLx4SEO/f4ZvfAtYAqTrzVtcBCOWUpp/bKhCA=\n=+QkY\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 421deb7d84b2a3fae148ab49cc63fb0a10468db2\nparent f6e87e1e5ebdd6b6cfafa9e23cdd0a29190d1a7c\nauthor Jarek Radosz <jradosz@gmail.com> 1610124448 +0100\ncommitter GitHub <noreply@github.com> 1610124448 +0100\n\nDEV: Add i18n fallback specs (#11669)\n\nThose fail on the buggy i18n release (1.8.6) and pass on 1.8.5, 1.8.7 (the revert release), and with the second stab at thread safety on the current master (https://github.com/ruby-i18n/i18n/commit/63a79cb929770629e20f0645676065025c599662)"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/9da9b2e1cc314c8c2633303e17eb0d215757d58d",
  "html_url": "https://github.com/discourse/discourse/commit/9da9b2e1cc314c8c2633303e17eb0d215757d58d",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/9da9b2e1cc314c8c2633303e17eb0d215757d58d/comments",
  "author": {
    "login": "CvX",
    "id": 66961,
    "node_id": "MDQ6VXNlcjY2OTYx",
    "avatar_url": "https://avatars1.githubusercontent.com/u/66961?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/CvX",
    "html_url": "https://github.com/CvX",
    "followers_url": "https://api.github.com/users/CvX/followers",
    "following_url": "https://api.github.com/users/CvX/following{/other_user}",
    "gists_url": "https://api.github.com/users/CvX/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/CvX/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/CvX/subscriptions",
    "organizations_url": "https://api.github.com/users/CvX/orgs",
    "repos_url": "https://api.github.com/users/CvX/repos",
    "events_url": "https://api.github.com/users/CvX/events{/privacy}",
    "received_events_url": "https://api.github.com/users/CvX/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f6e87e1e5ebdd6b6cfafa9e23cdd0a29190d1a7c",
      "url": "https://api.github.com/repos/discourse/discourse/commits/f6e87e1e5ebdd6b6cfafa9e23cdd0a29190d1a7c",
      "html_url": "https://github.com/discourse/discourse/commit/f6e87e1e5ebdd6b6cfafa9e23cdd0a29190d1a7c"
    }
  ],
  "stats": {
    "total": 37,
    "additions": 33,
    "deletions": 4
  },
  "files": [
    {
      "sha": "2c7494274e52f242d748947880d00ece383fe5ab",
      "filename": "spec/integrity/i18n_spec.rb",
      "status": "modified",
      "additions": 33,
      "deletions": 4,
      "changes": 37,
      "blob_url": "https://github.com/discourse/discourse/blob/9da9b2e1cc314c8c2633303e17eb0d215757d58d/spec/integrity/i18n_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/9da9b2e1cc314c8c2633303e17eb0d215757d58d/spec/integrity/i18n_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/integrity/i18n_spec.rb?ref=9da9b2e1cc314c8c2633303e17eb0d215757d58d",
      "patch": "@@ -24,7 +24,6 @@ def is_yaml_compatible?(english, translated)\n end\n \n describe \"i18n integrity checks\" do\n-\n   it 'has an i18n key for each Trust Levels' do\n     TrustLevel.all.each do |ts|\n       expect(ts.name).not_to match(/translation missing/)\n@@ -98,16 +97,46 @@ def is_yaml_compatible?(english, translated)\n         end\n \n         unless path[\"transliterate\"]\n-\n           it \"is compatible with english\" do\n             expect(is_yaml_compatible?(english_yaml, yaml)).to eq(true)\n           end\n-\n         end\n-\n       end\n+    end\n+  end\n+end\n+\n+describe \"fallbacks\" do\n+  before do\n+    I18n.backend = I18n::Backend::DiscourseI18n.new\n+    I18n.fallbacks = I18n::Backend::FallbackLocaleList.new\n+    I18n.reload!\n+    I18n.init_accelerator!\n+  end\n \n+  it \"finds the fallback translation\" do\n+    I18n.backend.store_translations(:en, test: \"en test\")\n+\n+    I18n.with_locale(\"pl_PL\") do\n+      expect(I18n.t(\"test\")).to eq(\"en test\")\n     end\n   end\n \n+  context \"in a multi-threaded environment\" do\n+    it \"finds the fallback translation\" do\n+      I18n.backend.store_translations(:en, test: \"en test\")\n+\n+      thread = Thread.new do\n+        I18n.with_locale(\"pl_PL\") do\n+          expect(I18n.t(\"test\")).to eq(\"en test\")\n+        end\n+      end\n+\n+      begin\n+        thread.join\n+      ensure\n+        thread.exit\n+      end\n+    end\n+  end\n end"
    }
  ]
}
