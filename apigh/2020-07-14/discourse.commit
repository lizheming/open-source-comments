{
  "sha": "3d65678a13b06b8a084deaa33d81fbe91da24680",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODozZDY1Njc4YTEzYjA2YjhhMDg0ZGVhYTMzZDgxZmJlOTFkYTI0Njgw",
  "commit": {
    "author": {
      "name": "David Taylor",
      "email": "david@taylorhq.com",
      "date": "2020-07-14T10:50:33Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-07-14T10:50:33Z"
    },
    "message": "DEV: Add timestamp columns to optimized_images table (#10199)\n\nThis allows us to filter by created/updated date when comparing to an S3 inventory.",
    "tree": {
      "sha": "8ea2644067bdb6ad1221e949eb065aed42cd6a1f",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/8ea2644067bdb6ad1221e949eb065aed42cd6a1f"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/3d65678a13b06b8a084deaa33d81fbe91da24680",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfDY35CRBK7hj4Ov3rIwAAdHIIACgnRjCkHcgPAE32cJQcxoC2\nEOk+6QhFFdBlvZz1/rrOWypdml9BE73x9V0EvIV97qNS1SLVfW2/g5N2r8ytxmDg\nG6CCM/IzeTEoY69VP0st0zLCEWIyJwow3yFgsU8P+aijd9XMHBRhjlnjfk1jsTvQ\nYo7omwgmQujhPoHDf0n1lqhqwqFoM94eonGrUcSCOKmbPUUghCiEZ3LBsR5Ithal\n3lmlm7YzCU4SbHA6mkTiPInOtmwMhhyrmKmJlARe0zF5dIf6I6unaO2jIARVYfbC\nInGy8XuvKBe4lD9pctX0AbOluYdgPQ+A+ylmFGd/U+oOr4HDKRVgWuwl61FFHhA=\n=Vas9\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 8ea2644067bdb6ad1221e949eb065aed42cd6a1f\nparent 94a2a704623ebdabbba3832eeaaeb3b069d142b4\nauthor David Taylor <david@taylorhq.com> 1594723833 +0100\ncommitter GitHub <noreply@github.com> 1594723833 +0100\n\nDEV: Add timestamp columns to optimized_images table (#10199)\n\nThis allows us to filter by created/updated date when comparing to an S3 inventory."
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/3d65678a13b06b8a084deaa33d81fbe91da24680",
  "html_url": "https://github.com/discourse/discourse/commit/3d65678a13b06b8a084deaa33d81fbe91da24680",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/3d65678a13b06b8a084deaa33d81fbe91da24680/comments",
  "author": {
    "login": "davidtaylorhq",
    "id": 6270921,
    "node_id": "MDQ6VXNlcjYyNzA5MjE=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/6270921?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/davidtaylorhq",
    "html_url": "https://github.com/davidtaylorhq",
    "followers_url": "https://api.github.com/users/davidtaylorhq/followers",
    "following_url": "https://api.github.com/users/davidtaylorhq/following{/other_user}",
    "gists_url": "https://api.github.com/users/davidtaylorhq/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/davidtaylorhq/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/davidtaylorhq/subscriptions",
    "organizations_url": "https://api.github.com/users/davidtaylorhq/orgs",
    "repos_url": "https://api.github.com/users/davidtaylorhq/repos",
    "events_url": "https://api.github.com/users/davidtaylorhq/events{/privacy}",
    "received_events_url": "https://api.github.com/users/davidtaylorhq/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "94a2a704623ebdabbba3832eeaaeb3b069d142b4",
      "url": "https://api.github.com/repos/discourse/discourse/commits/94a2a704623ebdabbba3832eeaaeb3b069d142b4",
      "html_url": "https://github.com/discourse/discourse/commit/94a2a704623ebdabbba3832eeaaeb3b069d142b4"
    }
  ],
  "stats": {
    "total": 58,
    "additions": 47,
    "deletions": 11
  },
  "files": [
    {
      "sha": "589cc5f1562352f2a6eae3f294a86cc755b323eb",
      "filename": "app/models/optimized_image.rb",
      "status": "modified",
      "additions": 12,
      "deletions": 10,
      "changes": 22,
      "blob_url": "https://github.com/discourse/discourse/blob/3d65678a13b06b8a084deaa33d81fbe91da24680/app/models/optimized_image.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/3d65678a13b06b8a084deaa33d81fbe91da24680/app/models/optimized_image.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/optimized_image.rb?ref=3d65678a13b06b8a084deaa33d81fbe91da24680",
      "patch": "@@ -360,16 +360,18 @@ def self.convert_with(instructions, to, opts = {})\n #\n # Table name: optimized_images\n #\n-#  id        :integer          not null, primary key\n-#  sha1      :string(40)       not null\n-#  extension :string(10)       not null\n-#  width     :integer          not null\n-#  height    :integer          not null\n-#  upload_id :integer          not null\n-#  url       :string           not null\n-#  filesize  :integer\n-#  etag      :string\n-#  version   :integer\n+#  id         :integer          not null, primary key\n+#  sha1       :string(40)       not null\n+#  extension  :string(10)       not null\n+#  width      :integer          not null\n+#  height     :integer          not null\n+#  upload_id  :integer          not null\n+#  url        :string           not null\n+#  filesize   :integer\n+#  etag       :string\n+#  version    :integer\n+#  created_at :datetime         not null\n+#  updated_at :datetime         not null\n #\n # Indexes\n #"
    },
    {
      "sha": "32f2a1349b2abb83c9f441012c7afea71c8e428a",
      "filename": "db/migrate/20200709094846_add_timestamps_to_optimized_images.rb",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/discourse/discourse/blob/3d65678a13b06b8a084deaa33d81fbe91da24680/db/migrate/20200709094846_add_timestamps_to_optimized_images.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/3d65678a13b06b8a084deaa33d81fbe91da24680/db/migrate/20200709094846_add_timestamps_to_optimized_images.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/db/migrate/20200709094846_add_timestamps_to_optimized_images.rb?ref=3d65678a13b06b8a084deaa33d81fbe91da24680",
      "patch": "@@ -0,0 +1,34 @@\n+# frozen_string_literal: true\n+class AddTimestampsToOptimizedImages < ActiveRecord::Migration[6.0]\n+  def change\n+    add_column :optimized_images, :created_at, :datetime, null: true\n+    add_column :optimized_images, :updated_at, :datetime, null: true\n+\n+    # Start by stealing created/updated at from the uploads table\n+    # Not perfect, but a good approximation\n+    execute <<~SQL\n+      UPDATE optimized_images\n+      SET created_at = uploads.created_at,\n+          updated_at = uploads.created_at\n+      FROM uploads\n+      WHERE uploads.id = optimized_images.upload_id\n+    SQL\n+\n+    # Integrity is not enforced, we might have optimized images\n+    # with no uploads\n+    execute <<~SQL\n+      UPDATE optimized_images\n+      SET created_at = NOW(),\n+          updated_at = NOW()\n+      WHERE created_at IS NULL\n+    SQL\n+\n+    execute <<~SQL\n+      ALTER TABLE optimized_images ALTER COLUMN created_at SET NOT NULL;\n+    SQL\n+\n+    execute <<~SQL\n+      ALTER TABLE optimized_images ALTER COLUMN updated_at SET NOT NULL;\n+    SQL\n+  end\n+end"
    },
    {
      "sha": "de273ceb2ec6bb4e725a4fd9682b0f6e4ef957b9",
      "filename": "lib/s3_inventory.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/3d65678a13b06b8a084deaa33d81fbe91da24680/lib/s3_inventory.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/3d65678a13b06b8a084deaa33d81fbe91da24680/lib/s3_inventory.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/s3_inventory.rb?ref=3d65678a13b06b8a084deaa33d81fbe91da24680",
      "patch": "@@ -61,7 +61,7 @@ def backfill_etags_and_list_missing\n               WHERE #{model.table_name}.etag IS NULL AND\n                 #{model.table_name}.url = #{table_name}.url\")\n \n-            uploads = (model == Upload) ? model.by_users.where(\"updated_at < ?\", inventory_date) : model\n+            uploads = model.by_users.where(\"updated_at < ?\", inventory_date)\n             missing_uploads = uploads\n               .joins(\"LEFT JOIN #{table_name} ON #{table_name}.etag = #{model.table_name}.etag\")\n               .where(\"#{table_name}.etag IS NULL AND #{model.table_name}.etag IS NOT NULL\")"
    }
  ]
}
