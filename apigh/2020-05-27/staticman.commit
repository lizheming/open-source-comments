{
  "sha": "0abbb37e14dd318f1cdd231cb99ab7d5d4608775",
  "node_id": "MDY6Q29tbWl0Mzg4ODA1NTU6MGFiYmIzN2UxNGRkMzE4ZjFjZGQyMzFjYjk5YWI3ZDVkNDYwODc3NQ==",
  "commit": {
    "author": {
      "name": "Alex Waibel",
      "email": "alexwaibel@users.noreply.github.com",
      "date": "2020-03-07T02:58:21Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-03-07T02:58:21Z"
    },
    "message": "Merge pull request #338 from eduardoboucas/dev\n\nMerge recent updates from dev into master",
    "tree": {
      "sha": "85248158fcb9045111e04cd80aef955d849b7631",
      "url": "https://api.github.com/repos/eduardoboucas/staticman/git/trees/85248158fcb9045111e04cd80aef955d849b7631"
    },
    "url": "https://api.github.com/repos/eduardoboucas/staticman/git/commits/0abbb37e14dd318f1cdd231cb99ab7d5d4608775",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeYw3NCRBK7hj4Ov3rIwAAdHIIAFO3ly6q9nsApci3QiGA0mCm\n2MN2N4KiNwMI9BbnQthUfQDwDVkHx73wKrjLk5Q49O1OooZ+RjvwBF0A4GpeDOlN\newsF1/mGCbx5ESMlQWUq5vONyuAsZfZ98sZ9c0GxRrMjob1YW0E/dXoUjaMjeDrQ\nyS7jt9Ra0C2jVtZrpzihrWoj+a/Z0OkgJMkMPqYOHNxEun6gKc43a3Qes4eaDkJS\nBYFgUWSxDYJK0rym92A8yMOLNaicuJy1fuVsCajIMagN/5pu7cuZYmhvO2gdeghg\nWGLMoQFU+47OLunTr/PksXJamFNKVrvrjGMGg/aNAIpnsQ94LukccJitARrVixM=\n=F0pZ\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 85248158fcb9045111e04cd80aef955d849b7631\nparent 6f1f69480749339048c6f9e2664a9312022236cf\nparent 8e489ad27d381ff53dfb75ac9d0578599962e30e\nauthor Alex Waibel <alexwaibel@users.noreply.github.com> 1583549901 -0500\ncommitter GitHub <noreply@github.com> 1583549901 -0500\n\nMerge pull request #338 from eduardoboucas/dev\n\nMerge recent updates from dev into master"
    }
  },
  "url": "https://api.github.com/repos/eduardoboucas/staticman/commits/0abbb37e14dd318f1cdd231cb99ab7d5d4608775",
  "html_url": "https://github.com/eduardoboucas/staticman/commit/0abbb37e14dd318f1cdd231cb99ab7d5d4608775",
  "comments_url": "https://api.github.com/repos/eduardoboucas/staticman/commits/0abbb37e14dd318f1cdd231cb99ab7d5d4608775/comments",
  "author": {
    "login": "alexwaibel",
    "id": 7026879,
    "node_id": "MDQ6VXNlcjcwMjY4Nzk=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/7026879?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alexwaibel",
    "html_url": "https://github.com/alexwaibel",
    "followers_url": "https://api.github.com/users/alexwaibel/followers",
    "following_url": "https://api.github.com/users/alexwaibel/following{/other_user}",
    "gists_url": "https://api.github.com/users/alexwaibel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alexwaibel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alexwaibel/subscriptions",
    "organizations_url": "https://api.github.com/users/alexwaibel/orgs",
    "repos_url": "https://api.github.com/users/alexwaibel/repos",
    "events_url": "https://api.github.com/users/alexwaibel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alexwaibel/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6f1f69480749339048c6f9e2664a9312022236cf",
      "url": "https://api.github.com/repos/eduardoboucas/staticman/commits/6f1f69480749339048c6f9e2664a9312022236cf",
      "html_url": "https://github.com/eduardoboucas/staticman/commit/6f1f69480749339048c6f9e2664a9312022236cf"
    },
    {
      "sha": "8e489ad27d381ff53dfb75ac9d0578599962e30e",
      "url": "https://api.github.com/repos/eduardoboucas/staticman/commits/8e489ad27d381ff53dfb75ac9d0578599962e30e",
      "html_url": "https://github.com/eduardoboucas/staticman/commit/8e489ad27d381ff53dfb75ac9d0578599962e30e"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 11,
    "deletions": 9
  },
  "files": [
    {
      "sha": "26547eddf900beb85e11178796e7a961411d19d1",
      "filename": "README.md",
      "status": "modified",
      "additions": 9,
      "deletions": 7,
      "changes": 16,
      "blob_url": "https://github.com/eduardoboucas/staticman/blob/0abbb37e14dd318f1cdd231cb99ab7d5d4608775/README.md",
      "raw_url": "https://github.com/eduardoboucas/staticman/raw/0abbb37e14dd318f1cdd231cb99ab7d5d4608775/README.md",
      "contents_url": "https://api.github.com/repos/eduardoboucas/staticman/contents/README.md?ref=0abbb37e14dd318f1cdd231cb99ab7d5d4608775",
      "patch": "@@ -6,22 +6,23 @@\n \n ## Introduction\n \n-Staticman is a Node.js application that receives user-generated content and uploads it as data files to a GitHub repository. In practice, this allows you to have dynamic content (e.g. blog post comments) as part of a fully static website, as long as your site automatically deploys on every push to GitHub, as seen on [GitHub Pages](https://pages.github.com/), [Netlify](http://netlify.com/) and others.\n+Staticman is a Node.js application that receives user-generated content and uploads it as data files to a GitHub and/or GitLab repository. In practice, this allows you to have dynamic content (e.g. blog post comments) as part of a fully static website, as long as your site automatically deploys on every push to GitHub and/or GitLab, as seen on [GitHub Pages](https://pages.github.com/), [GitLab Pages](https://about.gitlab.com/product/pages/), [Netlify](http://netlify.com/) and others.\n \n It consists of a small web service that handles the `POST` requests from your forms, runs various forms of validation and manipulation defined by you and finally pushes them to your repository as data files. You can choose to enable moderation, which means files will be pushed to a separate branch and a pull request will be created for your approval, or disable it completely, meaning that files will be pushed to the main branch automatically.\n \n-You can download and run the Staticman API on your own infrastructure. The easiest way to get a personal Staticman API instance up and running is to use the free tier of Heroku. If deploying to Heroku you can simply click the button below.\n+You can download and run the Staticman API on your own infrastructure. The easiest way to get a personal Staticman API instance up and running is to use the free tier of Heroku. If deploying to Heroku you can simply click the button below and enter your config variables directly into Heroku as environment variables.\n \n [![Deploy](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy)\n \n ## Requirements\n \n - Node.js 8.11.3+\n - npm\n-- A [personal access token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) for the GitHub account you want to run Staticman with\n-- An SSH key (click [here](https://help.github.com/articles/connecting-to-github-with-ssh/) to learn how to create one)\n+- A [personal access token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) for the GitHub and/or GitLab account you want to run Staticman with\n+- An RSA key in PEM format\n \n-## Setting up the server\n+## Setting up the server on your own infrastructure\n+NOTE: The below steps are not required if deploying to Heroku. To deploy to Heroku, click the above deploy button and enter your configuration variables in the Heroku Dashboard.\n \n - Clone the repository and install the dependencies via npm.\n \n@@ -37,7 +38,7 @@ You can download and run the Staticman API on your own infrastructure. The easie\n   cp config.sample.json config.development.json\n   ```\n \n-- Edit the newly-created config file with your GitHub access token, SSH private key and the port to run the server. Click [here](https://staticman.net/docs/api) for the list of available configuration parameters.\n+- Edit the newly-created config file with your GitHub and/or GitLab access token, SSH private key and the port to run the server. Click [here](https://staticman.net/docs/api) for the list of available configuration parameters.\n \n - Start the server.\n \n@@ -51,7 +52,7 @@ Check [this guide](docs/docker.md) if you're using Docker.\n \n ## Setting up a repository\n \n-Staticman runs as a bot using a GitHub account, as opposed to accessing your account using the traditional OAuth flow. This means that you can give it access to just the repositories you're planning on using it on, instead of exposing all your repositories.\n+Staticman runs as a bot using a GitHub and/or GitLab account, as opposed to accessing your account using the traditional OAuth flow. This means that you can give it access to just the repositories you're planning on using it on, instead of exposing all your repositories.\n \n To add Staticman to a repository, you need to add the bot as a collaborator with write access to the repository and ask the bot to accept the invite by firing a `GET` request to this URL:\n \n@@ -76,5 +77,6 @@ Would you like to contribute to Staticman? That's great! Here's how:\n \n ## Useful links\n \n+- [Detailed Site and API Setup Guide](https://travisdowns.github.io/blog/2020/02/05/now-with-comments.html)\n - [Improving Static Comments with Jekyll & Staticman](https://mademistakes.com/articles/improving-jekyll-static-comments/)\n - [Hugo + Staticman: Nested Replies and E-mail Notifications](https://networkhobo.com/2017/12/30/hugo-staticman-nested-replies-and-e-mail-notifications/)"
    },
    {
      "sha": "d0724363053fecb522bf29412aea8b85988ad1c3",
      "filename": "lib/RSA.js",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/eduardoboucas/staticman/blob/0abbb37e14dd318f1cdd231cb99ab7d5d4608775/lib/RSA.js",
      "raw_url": "https://github.com/eduardoboucas/staticman/raw/0abbb37e14dd318f1cdd231cb99ab7d5d4608775/lib/RSA.js",
      "contents_url": "https://api.github.com/repos/eduardoboucas/staticman/contents/lib/RSA.js?ref=0abbb37e14dd318f1cdd231cb99ab7d5d4608775",
      "patch": "@@ -3,7 +3,7 @@ const config = require(path.join(__dirname, '/../config'))\n const NodeRSA = require('node-rsa')\n const key = new NodeRSA()\n \n-key.importKey(config.get('rsaPrivateKey'))\n+key.importKey(config.get('rsaPrivateKey'), 'private')\n \n module.exports.encrypt = text => {\n   try {"
    },
    {
      "sha": "925981ff59c8b2f039760cd0c54a4e63a20d877f",
      "filename": "test/acceptance/api.test.js",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/eduardoboucas/staticman/blob/0abbb37e14dd318f1cdd231cb99ab7d5d4608775/test/acceptance/api.test.js",
      "raw_url": "https://github.com/eduardoboucas/staticman/raw/0abbb37e14dd318f1cdd231cb99ab7d5d4608775/test/acceptance/api.test.js",
      "contents_url": "https://api.github.com/repos/eduardoboucas/staticman/contents/test/acceptance/api.test.js?ref=0abbb37e14dd318f1cdd231cb99ab7d5d4608775",
      "patch": "@@ -208,7 +208,7 @@ describe('Entry endpoint', () => {\n     })\n   })\n \n-  test('outputs a MISSING_CONFIG_BLOCK error the site config is malformed', () => {\n+  test('outputs a MISSING_CONFIG_BLOCK error if the site config is malformed', () => {\n     const data = Object.assign({}, helpers.getParameters(), {\n       path: 'staticman.yml'\n     })"
    }
  ]
}
