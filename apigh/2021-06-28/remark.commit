{
  "sha": "936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOjkzNmNjZDgyNWYxNGZlZGMyMWU4MmY3ZTFmMGIwYzZiZGQzYWVjMzk=",
  "commit": {
    "author": {
      "name": "Dmitry Verkhoturov",
      "email": "paskal.07@gmail.com",
      "date": "2021-06-20T14:23:08Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2021-06-27T19:53:20Z"
    },
    "message": "Move existing documentation to the new site",
    "tree": {
      "sha": "6d7f03533e7406a2638546a0a570482fb7c630d1",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/6d7f03533e7406a2638546a0a570482fb7c630d1"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39",
  "html_url": "https://github.com/umputun/remark42/commit/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/comments",
  "author": {
    "login": "paskal",
    "id": 712534,
    "node_id": "MDQ6VXNlcjcxMjUzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/712534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paskal",
    "html_url": "https://github.com/paskal",
    "followers_url": "https://api.github.com/users/paskal/followers",
    "following_url": "https://api.github.com/users/paskal/following{/other_user}",
    "gists_url": "https://api.github.com/users/paskal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paskal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paskal/subscriptions",
    "organizations_url": "https://api.github.com/users/paskal/orgs",
    "repos_url": "https://api.github.com/users/paskal/repos",
    "events_url": "https://api.github.com/users/paskal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paskal/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "68aba33765df6b4d654335bc996c550d119ccb83",
      "url": "https://api.github.com/repos/umputun/remark42/commits/68aba33765df6b4d654335bc996c550d119ccb83",
      "html_url": "https://github.com/umputun/remark42/commit/68aba33765df6b4d654335bc996c550d119ccb83"
    }
  ],
  "stats": {
    "total": 1542,
    "additions": 754,
    "deletions": 788
  },
  "files": [
    {
      "sha": "0f86ce03b2149f4697c5212be5b7828ddd8546af",
      "filename": "README.md",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/README.md",
      "raw_url": "https://github.com/umputun/remark42/raw/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/README.md?ref=936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39",
      "patch": "@@ -629,15 +629,15 @@ communicating with demo server backend running on `https://demo.remark42.com`.\n But you will not be able to login with any oauth providers due to security reasons.\n \n You can attach to locally running backend by providing `REMARK_URL` environment variable.\n-```sh\n+```shell\n npx cross-env REMARK_URL=http://127.0.0.1:8080 npm start\n ```\n \n **Note** If you want to redefine env variables such as `PORT` on your local instance you can add `.env` file\n to `./frontend` folder and rewrite variables as you wish. For such functional we use `dotenv`\n \n The best way for start local developer environment:\n-```sh\n+```shell\n cp compose-dev-frontend.yml compose-private-frontend.yml\n docker-compose -f compose-private-frontend.yml up --build\n cd frontend"
    },
    {
      "sha": "72c32c7b765db183d3f5885a9d9fa4d686239bee",
      "filename": "docs/developers-guide/email-templates.md",
      "status": "removed",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark42/blob/68aba33765df6b4d654335bc996c550d119ccb83/docs/developers-guide/email-templates.md",
      "raw_url": "https://github.com/umputun/remark42/raw/68aba33765df6b4d654335bc996c550d119ccb83/docs/developers-guide/email-templates.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/docs/developers-guide/email-templates.md?ref=68aba33765df6b4d654335bc996c550d119ccb83",
      "patch": "@@ -1,14 +0,0 @@\n----\n-title: Email templating\n----\n-\n-Remark42 uses golang templates for email templating. Templates are located in `backend/templates` and embedded into binary by statik\n-\n-For getting access to the files you can use package `templates` from `backend/app/templates`\n-\n-Now we have following templates:\n-- `email_confirmation_login.html.tmpl` – used for confirmation of login\n-- `email_confirmation_subscription.html.tmpl` – used for confirmation of subscription\n-– `email_reply.html.tmpl` – used for sending replies to user comments (when user subscribed to it) and for noticing admins about new comments on a site\n-– `email_unsubscribe.html.tmpl` – used for notification about successful unsubscribe from replies\n-– `error_response.html.tmpl` – used for ..."
    },
    {
      "sha": "7ba14bd88fe205472d568baac4142536b5fdc6b5",
      "filename": "docs/email.md",
      "status": "removed",
      "additions": 0,
      "deletions": 215,
      "changes": 215,
      "blob_url": "https://github.com/umputun/remark42/blob/68aba33765df6b4d654335bc996c550d119ccb83/docs/email.md",
      "raw_url": "https://github.com/umputun/remark42/raw/68aba33765df6b4d654335bc996c550d119ccb83/docs/email.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/docs/email.md?ref=68aba33765df6b4d654335bc996c550d119ccb83",
      "patch": "@@ -1,215 +0,0 @@\n----\n-title: Email\n----\n-\n-## Overview\n-\n-This documentation describes how to enable the email-related capabilities of Remark.\n-\n-- email authentication for users:\n-\n-  enabling this will let the user log in using their emails:\n-\n-  ![Email authentication](/docs/images/email_auth.png?raw=true)\n-\n-- email notifications for any users except anonymous:\n-\n-  GitHub or Google or Twitter or any other kind of user gets the ability to get\n-  email notifications about new replies to their comments (and any of the replies down the tree):\n-\n-  ![Email notifications subscription](/docs/images/email_notifications.png?raw=true)\n-\n-## Setup email server connection\n-\n-To enable any of email functionality you need to set up email\n-(SMTP) server connection using these variables:\n-\n-```\n-SMTP_HOST\n-SMTP_PORT\n-SMTP_TLS\n-SMTP_USERNAME\n-SMTP_PASSWORD\n-SMTP_TIMEOUT\n-```\n-\n-### Mailgun\n-\n-This is an example of a configuration using [Mailgun](https://www.mailgun.com/) email service:\n-\n-```yaml\n-- SMTP_HOST=smtp.eu.mailgun.org\n-- SMTP_PORT=465\n-- SMTP_TLS=true\n-- SMTP_USERNAME=postmaster@mg.example.com\n-- SMTP_PASSWORD=secretpassword\n-- AUTH_EMAIL_FROM=notify@example.com\n-- NOTIFY_EMAIL_FROM=notify@example.com\n-```\n-\n-#### API\n-\n-When you don't want to expose your IP (which is impossible with any SMTP provider)\n-and for situations when connecting to external SMTP server is impossible due to firewall\n-settings is setting up an SMTP-to-API bridge and sending messages through it.\n-\n-To use any of containers below with in remark42 environment set following two `SMTP` variables:\n-\n-```yaml\n-- SMTP_HOST=mail\n-- SMTP_PORT=25\n-```\n-\n-#### stevenolen/mailgun-smtp-server\n-\n-Here is `docker-compose.yml` configuration part spinning up a container for\n-[stevenolen/mailgun-smtp-server](https://hub.docker.com/r/stevenolen/mailgun-smtp-server):\n-\n-```yaml\n-mailgun:\n-  image: stevenolen/mailgun-smtp-server\n-  container_name: 'mail'\n-  hostname: 'mail'\n-\n-  logging:\n-    driver: json-file\n-    options:\n-      max-size: '10m'\n-      max-file: '5'\n-\n-  environment:\n-    - MG_KEY=key-123456789\n-    - MG_DOMAIN=example.com\n-```\n-\n-Please note that before\n-[stevenolen/mailgun-smtp-server#5](https://github.com/stevenolen/mailgun-smtp-server/issues/5)\n-is fixed, Europe domain names are not supported by this tool.\n-\n-### SendGrid\n-\n-This is an example of a configuration using [SendGrid](https://sendgrid.com/) email service:\n-\n-```yaml\n-- SMTP_HOST=smtp.sendgrid.net\n-- SMTP_PORT=465\n-- SMTP_TLS=true\n-- SMTP_USERNAME=apikey\n-- SMTP_PASSWORD=key-123456789\n-- AUTH_EMAIL_FROM=notify@example.com\n-- NOTIFY_EMAIL_FROM=notify@example.com\n-```\n-\n-#### API\n-\n-When you don't want to expose your IP (which is impossible with any SMTP provider)\n-and for situations when connecting to external SMTP server is impossible due to firewall\n-settings is setting up an SMTP-to-API bridge and sending messages through it.\n-\n-To use any of containers below with in remark42 environment set following two `SMTP` variables:\n-\n-```yaml\n-- SMTP_HOST=mail\n-- SMTP_PORT=25\n-```\n-\n-#### fgribreau/smtp-to-sendgrid-gateway\n-\n-Here is `docker-compose.yml` configuration part spinning up a container for\n-[fgribreau/smtp-to-sendgrid-gateway](https://hub.docker.com/r/fgribreau/smtp-to-sendgrid-gateway):\n-\n-```yaml\n-sendgrid:\n-  image: fgribreau/smtp-to-sendgrid-gateway\n-  container_name: 'mail'\n-  hostname: 'mail'\n-\n-  logging:\n-    driver: json-file\n-    options:\n-      max-size: '10m'\n-      max-file: '5'\n-\n-  environment:\n-    - SENDGRID_API=key-123456789\n-```\n-\n-### Gmail\n-\n-Configuration example for Gmail:\n-\n-```yaml\n-- SMTP_HOST=smtp.gmail.com\n-- SMTP_PORT=465\n-- SMTP_TLS=true\n-- SMTP_USERNAME=example.user@gmail.com\n-- SMTP_PASSWORD=secretpassword\n-- AUTH_EMAIL_FROM=example.user@gmail.com\n-- NOTIFY_EMAIL_FROM=example.user@gmail.com\n-```\n-\n-### Amazon SES\n-\n-Configuration example for [Amazon SES](https://aws.amazon.com/ses/) (us-east-1 region):\n-\n-```yaml\n-- SMTP_HOST=email-smtp.us-east-1.amazonaws.com\n-- SMTP_PORT=465\n-- SMTP_TLS=true\n-- SMTP_USERNAME=access_key_id\n-- SMTP_PASSWORD=secret_access_key\n-- AUTH_EMAIL_FROM=notify@example.com\n-- NOTIFY_EMAIL_FROM=notify@example.com\n-```\n-\n-A domain or an email that will be used in `AUTH_EMAIL_FROM` or `NOTIFY_EMAIL_FROM`\n-must first be [verified](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-domain-procedure.html).\n-\n-[SMTP Credentials](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/smtp-credentials.html)\n-must first be obtained from\n-[Amazon SES Console](https://console.aws.amazon.com/ses/home?region=us-east-1#smtp-settings:):\n-\n-## Setup email authentication\n-\n-Here is the list of variables which affect email authentication:\n-\n-```\n-AUTH_EMAIL_ENABLE\n-AUTH_EMAIL_FROM\n-AUTH_EMAIL_SUBJ\n-AUTH_EMAIL_CONTENT_TYPE\n-AUTH_EMAIL_TEMPLATE\n-```\n-\n-After you set `SMTP_` variables, you can allow email authentication by setting these two variables:\n-\n-```yaml\n-- AUTH_EMAIL_ENABLE=true\n-- AUTH_EMAIL_FROM=notify@example.com\n-```\n-\n-Usually, you don't need to change/set anything else. In case if you want to use a different\n-email template set `AUTH_EMAIL_TEMPLATE`, for instance\n-`- AUTH_EMAIL_TEMPLATE=\"Confirmation email, token: {{.Token}}\"`.\n-See [verified-authentication](https://github.com/go-pkgz/auth#verified-authentication) for more details.\n-\n-## Setup email notifications\n-\n-Here is the list of variables which affect email notifications:\n-\n-```yaml\n-NOTIFY_USERS\n-NOTIFY_EMAIL_FROM\n-NOTIFY_EMAIL_VERIFICATION_SUBJ\n-# for administrator notifications for new comments on their site\n-ADMIN_SHARED_EMAIL\n-NOTIFY_ADMINS\n-```\n-\n-After you set `SMTP_` variables, you can allow email notifications by setting these two variables:\n-\n-```yaml\n-- NOTIFY_USERS=email\n-# - NOTIFY_USERS=email,telegram # this is in case you want to have both email and telegram notifications enabled\n-- NOTIFY_EMAIL_FROM=notify@example.com\n-```"
    },
    {
      "sha": "01b1d9cf6f0d1c5f1b76c84d96f7d818fa01557d",
      "filename": "docs/index.md",
      "status": "removed",
      "additions": 0,
      "deletions": 10,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark42/blob/68aba33765df6b4d654335bc996c550d119ccb83/docs/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/68aba33765df6b4d654335bc996c550d119ccb83/docs/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/docs/index.md?ref=68aba33765df6b4d654335bc996c550d119ccb83",
      "patch": "@@ -1,10 +0,0 @@\n-# Documentation and FAQ\n-\n-- [How to configure remark42 with nginx reverse proxy](nginx-proxy)\n-- [How to configure remark42 without a subdomain](subdomain) with Nginx or Caddy\n-- [How to configure remark42 for Single Page Apps (SPA)](spa)\n-- [Telegram notifications](telegram)\n-- [Slack notifications](slack)\n-- [Setup email authentication and\\or email notifications](email)\n-- [How to add new translation to remark42](translation)\n-- [How to run remark42 on Kubernetes](kubernetes)"
    },
    {
      "sha": "34c19d468e59c878171c5230730c657542257746",
      "filename": "docs/kubernetes.md",
      "status": "removed",
      "additions": 0,
      "deletions": 171,
      "changes": 171,
      "blob_url": "https://github.com/umputun/remark42/blob/68aba33765df6b4d654335bc996c550d119ccb83/docs/kubernetes.md",
      "raw_url": "https://github.com/umputun/remark42/raw/68aba33765df6b4d654335bc996c550d119ccb83/docs/kubernetes.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/docs/kubernetes.md?ref=68aba33765df6b4d654335bc996c550d119ccb83",
      "patch": "@@ -1,171 +0,0 @@\n----\n-title: Running remark42 in Kubernetes\n----\n-\n-## Using Helm\n-\n-Use [remark42 Helm chart](https://github.com/groundhog2k/helm-charts/tree/master/charts/remark42).\n-\n-## Without Helm\n-\n-Here's the sample manifest for running remark42 on Hetzner Cloud:\n-\n-```yaml\n-apiVersion: apps/v1\n-kind: Deployment\n-metadata:\n-  name: remark42\n-  namespace: remark42\n-  labels:\n-    app: remark42\n-spec:\n-  replicas: 1\n-  selector:\n-    matchLabels:\n-      app: remark42\n-  strategy:\n-    type: Recreate\n-  template:\n-    metadata:\n-      namespace: remark42\n-      labels:\n-        app: remark42\n-    spec:\n-      containers:\n-      - name: remark42\n-        image: umputun/remark42:v1.8.1\n-        ports:\n-        # http:\n-        - containerPort: 8080\n-        env:\n-          - name: REMARK_URL\n-            value: \"https://comments.mysite.com/\"\n-          - name: \"SITE\"\n-            value: \"mysite.com\"\n-          - name: SECRET\n-            valueFrom:\n-              secretKeyRef:\n-                name: remark42\n-                key: SECRET\n-          - name: STORE_BOLT_PATH\n-            value: \"/srv/var/db\"\n-          - name: BACKUP_PATH\n-            value: \"/srv/var/backup\"\n-          - name: AUTH_GOOGLE_CID\n-            valueFrom:\n-              secretKeyRef:\n-                name: remark42\n-                key: AUTH_GOOGLE_CID\n-          - name: AUTH_GOOGLE_CSEC\n-            valueFrom:\n-              secretKeyRef:\n-                name: remark42\n-                key: AUTH_GOOGLE_CSEC\n-          - name: AUTH_GITHUB_CID\n-            valueFrom:\n-              secretKeyRef:\n-                name: remark42\n-                key: AUTH_GITHUB_CID\n-          - name: AUTH_GITHUB_CSEC\n-            valueFrom:\n-              secretKeyRef:\n-                name: remark42\n-                key: AUTH_GITHUB_CSEC\n-          - name: ADMIN_SHARED_ID\n-            value: \"google_b182b5daa0004104b348d9bde762b1880ed9d98d\"\n-          - name: TIME_ZONE\n-            value: \"Europe/Dublin\"\n-        volumeMounts:\n-        - name: srvvar\n-          mountPath: /srv/var\n-        securityContext:\n-          readOnlyRootFilesystem: false\n-        resources:\n-          requests:\n-            cpu: \"100m\"\n-            memory: \"25Mi\"\n-          limits:\n-            cpu: \"1\"\n-            memory: \"1Gi\"\n-      securityContext:\n-        # Has its own root privilege drop. Can't do runAsUser / runAsGroup.\n-      volumes:\n-       - name: srvvar\n-         persistentVolumeClaim:\n-           claimName: remark42\n----\n-apiVersion: v1\n-kind: PersistentVolumeClaim\n-metadata:\n-  name: remark42\n-  namespace: remark42\n-spec:\n-  accessModes:\n-  - ReadWriteOnce\n-  resources:\n-    requests:\n-      storage: 10Gi\n-  storageClassName: hcloud-volumes\n----\n-apiVersion: v1\n-kind: Service\n-metadata:\n-  name: remark42-web\n-  namespace: remark42\n-spec:\n-  selector:\n-    app: remark42\n-  ports:\n-    - name: http\n-      protocol: TCP\n-      port: 8080\n-      targetPort: 8080\n----\n-# TODO: switch to networking.k8s.io/v1\n-apiVersion: networking.k8s.io/v1beta1\n-kind: Ingress\n-metadata:\n-  name: remark42-ingress\n-  namespace: remark42\n-  annotations:\n-    nginx.ingress.kubernetes.io/force-ssl-redirect: \"true\"\n-    cert-manager.io/cluster-issuer: \"letsencrypt-prod\"\n-spec:\n-  tls:\n-  - hosts:\n-    - comments.mysite.com\n-    secretName: comments-tls\n-  rules:\n-  - host: \"comments.mysite.com\"\n-    http:\n-      paths:\n-      - path: /\n-        pathType: Prefix\n-        backend:\n-          serviceName: remark42-web\n-          servicePort: 8080\n-```\n-\n-Change `storageClassName` if you run on top of different cloud / bare metal.\n-\n-This example assumes there is nginx Ingress with cert-manager already set up.\n-Adjust accordingly if you use different Ingress.\n-\n-In addition you'd need to define secrets, e.g.\n-\n-```yaml\n-apiVersion: v1\n-kind: Secret\n-metadata:\n-  name: remark42\n-  namespace: remark42\n-stringData:\n-  SECRET: <changeme>\n-  AUTH_GOOGLE_CID: <changeme>.apps.googleusercontent.com\n-  AUTH_GOOGLE_CSEC: <changeme>\n-  AUTH_GITHUB_CID: <changeme>\n-  AUTH_GITHUB_CSEC: <changeme>\n-```\n-\n-Some more information (and comments!) may be found\n-[here](https://www.rusinov.ie/en/posts/2021/this-website-has-remark42-comments-now/)."
    },
    {
      "sha": "cd842824a9ade8566c00831d73ee21b21112cc5f",
      "filename": "docs/migration.md",
      "status": "removed",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/umputun/remark42/blob/68aba33765df6b4d654335bc996c550d119ccb83/docs/migration.md",
      "raw_url": "https://github.com/umputun/remark42/raw/68aba33765df6b4d654335bc996c550d119ccb83/docs/migration.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/docs/migration.md?ref=68aba33765df6b4d654335bc996c550d119ccb83",
      "patch": "@@ -1,30 +0,0 @@\n----\n-title: Site URL migration\n----\n-\n-Here is an example on how to move your comments after your posts are moved, from `https://example.org/blog/<slug>` to `https://example.org/post/<slug>` in that example.\n-\n-### Rules file\n-\n-First you have to create a `rules` file in remark's `/var` folder.\n-\n-[Here is the test](https://github.com/akosourov/remark/blob/4dc123dbe84f4f248864bcdbbd6cc2b3a4dafe11/backend/app/migrator/mapper_test.go#L13-L17) with an example of rules file syntax, format is simply `old_url new_url` like following:\n-\n-```\n-https://example.org/old-url-1/ https://example.org/new-url-1/\n-https://example.org/old-url-2/ https://example.org/new-url-2/\n-```\n-\n-### Applying the remap\n-\n-After rules file is ready, run the following command:\n-\n-```sh\n-remark42 remap --admin-passwd <password> -f var/rules\n-```\n-\n-If running in a docker container, the command becomes:\n-```sh\n-docker ps # to find the container name\n-docker exec -it <container> remark42 remap --admin-passwd <password> -f var/rules\n-```"
    },
    {
      "sha": "b667d936d3d9a5b6d4ba69974ef30b669782c1c8",
      "filename": "docs/nginx-proxy.md",
      "status": "removed",
      "additions": 0,
      "deletions": 54,
      "changes": 54,
      "blob_url": "https://github.com/umputun/remark42/blob/68aba33765df6b4d654335bc996c550d119ccb83/docs/nginx-proxy.md",
      "raw_url": "https://github.com/umputun/remark42/raw/68aba33765df6b4d654335bc996c550d119ccb83/docs/nginx-proxy.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/docs/nginx-proxy.md?ref=68aba33765df6b4d654335bc996c550d119ccb83",
      "patch": "@@ -1,54 +0,0 @@\n----\n-title: Nginx\n----\n-\n-## How to configure remark42 with nginx reverse proxy\n-\n-Example of nginx configuration (reverse proxy) running remark42 service on remark42.example.com\n-\n-```nginx\n-server {\n-    listen      443;\n-    server_name remark42.example.com;\n-    ssl    on;\n-    ssl_certificate        /etc/nginx/ssl/remark42.example.com.crt;\n-    ssl_certificate_key    /etc/nginx/ssl/remark42.example.com.key;\n-\n-    gzip on;\n-    gzip_types text/plain application/json text/css application/javascript application/x-javascript text/javascript text/xml application/xml application/rss+xml application/atom+xml application/rdf+xml;\n-    gzip_min_length 1000;\n-    gzip_proxied any;\n-\n-\n-    location ~ /\\.git {\n-        deny all;\n-    }\n-\n-    location /index.html {\n-         proxy_redirect          off;\n-         proxy_set_header        X-Real-IP $remote_addr;\n-         proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;\n-         proxy_set_header        Host $http_host;\n-         proxy_pass              http://remark42:8080/web/index.html;\n-     }\n-\n-    location / {\n-         proxy_redirect          off;\n-         proxy_set_header        X-Real-IP $remote_addr;\n-         proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;\n-         proxy_set_header        Host $http_host;\n-         proxy_pass              http://remark42:8080/;\n-    }\n-\n-    access_log   /var/log/nginx/remark42.log;\n-\n-}\n-\n-server {\n-  listen 80;\n-  server_name remark42.example.com;\n-  return      301 https://remark42.example.com$request_uri;\n-}\n-```\n-\n-note: `proxy_pass` points to internal DNS name `remark42` and expected to run from the same compose. If nginx runs outside compose the real IP (or docker's bridge IP) should be used"
    },
    {
      "sha": "319cc08ac93fcb544cbb5afd1a4a15c7cbd0c049",
      "filename": "docs/slack.md",
      "status": "removed",
      "additions": 0,
      "deletions": 40,
      "changes": 40,
      "blob_url": "https://github.com/umputun/remark42/blob/68aba33765df6b4d654335bc996c550d119ccb83/docs/slack.md",
      "raw_url": "https://github.com/umputun/remark42/raw/68aba33765df6b4d654335bc996c550d119ccb83/docs/slack.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/docs/slack.md?ref=68aba33765df6b4d654335bc996c550d119ccb83",
      "patch": "@@ -1,40 +0,0 @@\n----\n-title: Slack\n----\n-\n-## Slack notifications\n-\n-In order to integrate notifications from remark42 with the [slack](https://slack.com), you should create [a bot](https://slack.com/intl/en-cn/help/articles/115005265703-Create-a-bot-for-your-workspace) and obtain a token. \n-\n-### Create a Slack Bot\n-\n-1. Create a [Slack app](https://api.slack.com/apps/new) if you don't already have one, or select an existing app you've created.\n-2. Click the OAuth & Permissions tab in the left sidebar.\n-3. Below Bot Token Scopes, select the `chat:write`, `chat:write.public` and `channels:read` scopes. Then click Add an OAuth Scope.\n-4. Scroll to the top of the page, and click on Install to workspace.\n-5. You should see the \"_View basic information about public channels in your workspace_\",  \"_Send Message as ..._\" and \"_Send messages to channels ... isn't a member of_\" as the permission, then click allow. \n-6. You can then see you token, in the form of `xoxb-...-...-...`\n-\n-\n-### Remark42 configuration\n-\n-The slack token which you obtained before should be used as `NOTIFY_SLACK_TOKEN`. \n-\n-You also need to set `NOTIFY_ADMINS=slack` for the Slack notification to be active.\n-\n-By default, the notification are sent to the `general` channel on slack. If you need another channel, you can specify it, for instance with `NOTIFY_SLACK_CHAN=random`.\n-\n-```\n-    - NOTIFY_ADMINS=slack\n-    - NOTIFY_SLACK_CHAN=general\n-    - NOTIFY_SLACK_TOKEN=xoxb-....\n-```\n-\n-\n-### Verify the notifications on Slack \n-\n-If all goes fine, you should be able to see the following message on your Slack notification channel:\n-\n-> New comment from _author_ -> _original author_\n->> [Demo | Remark42](http://127.0.0.1:8080/web/#remark42__comment-11288987987)\n->> This is the comment written by _author_"
    },
    {
      "sha": "f7e12f07e618c5d2f7ca83eee77411c285db8baf",
      "filename": "docs/spa.md",
      "status": "removed",
      "additions": 0,
      "deletions": 72,
      "changes": 72,
      "blob_url": "https://github.com/umputun/remark42/blob/68aba33765df6b4d654335bc996c550d119ccb83/docs/spa.md",
      "raw_url": "https://github.com/umputun/remark42/raw/68aba33765df6b4d654335bc996c550d119ccb83/docs/spa.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/docs/spa.md?ref=68aba33765df6b4d654335bc996c550d119ccb83",
      "patch": "@@ -1,72 +0,0 @@\n----\n-title: SPA\n----\n-\n-## How to configure remark42 for Single Page Apps (SPA)\n-\n-Originally tested on [Nuxt.js](https://nuxtjs.org/), but it should be applicable to all SPAs.\n-\n-- Add the following JavaScript to your `index.html`, which in this case, it is identical to `<script defer src=\"$HOST/web/embed.js\"></script>`\n-\n-```js\n-;(function () {\n-  var host = // Your remark42 host\n-  var components = ['embed'] // Your choice of remark42 components\n-\n-  ;(function(c) {\n-    for (let i = 0; i < c.length; i++) {\n-      const d = document\n-      const s = d.createElement('script')\n-      s.src = remark_config.host + '/web/' + c[i] + '.js'\n-      s.defer = true\n-      ;(d.head || d.body).appendChild(s)\n-    }\n-  })(components)\n-})\n-```\n-\n-- Created `remark42Instance` when the `div` containing remark42 has appeared, usually at `mounted` or `componentDidMount` of the SPA lifecycle. Destroy the previous instance first, if necessary.\n-\n-```ts\n-  initRemark42() {\n-    if (window.REMARK42) {\n-      if (this.remark42Instance) {\n-        this.remark42Instance.destroy()\n-      }\n-\n-      this.remark42Instance = window.REMARK42.createInstance({\n-        node: this.$refs.remark42 as HTMLElement,\n-        ...remark42_config  // See <https://github.com/patarapolw/remark42#setup-on-your-website>\n-      })\n-    }\n-  }\n-\n-  mounted() {\n-    if (window.REMARK42) {\n-      this.initRemark42()\n-    } else {\n-      window.addEventListener('REMARK42::ready', () => {\n-        this.initRemark42()\n-      })\n-    }\n-  }\n-```\n-\n-- Ensure that this is called every time route changes\n-\n-```ts\n-  @Watch('$route.path')\n-  onRouteChange() {\n-    this.initRemark42()\n-  }\n-```\n-\n-- And, destroyed before routeLeave\n-\n-```ts\n-  beforeRouteLeave() {\n-    if (this.remark42Instance) {\n-      this.remark42Instance.destroy()\n-    }\n-  }\n-```"
    },
    {
      "sha": "63e1eab4382e9995859a3bfc56e58bb421bbb2e5",
      "filename": "docs/subdomain.md",
      "status": "removed",
      "additions": 0,
      "deletions": 77,
      "changes": 77,
      "blob_url": "https://github.com/umputun/remark42/blob/68aba33765df6b4d654335bc996c550d119ccb83/docs/subdomain.md",
      "raw_url": "https://github.com/umputun/remark42/raw/68aba33765df6b4d654335bc996c550d119ccb83/docs/subdomain.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/docs/subdomain.md?ref=68aba33765df6b4d654335bc996c550d119ccb83",
      "patch": "@@ -1,77 +0,0 @@\n----\n-title: Subdomain\n----\n-\n-## How to configure remark42 without a subdomain\n-\n-All README examples show configurations with remark42 on its own subdomain, i.e. `https://remark42.example.com`. However, it is possible and sometimes desirable to run remark42 without a subdomain, but just under some path, i.e. `https://example.com/remark42`.\n-\n-- The frontend URL looks like this: `s.src = 'https://example.com/remark42/web/embed.js;`\n-\n-- The backend `REMARK_URL` parameter will be `https://example.com/remark42`\n-\n-- And you also need to slightly modify the callback URL for the social media login API's:\n-  - Facebook Valid OAuth Redirect URIs: `https://example.com/remark42/auth/facebook/callback`\n-  - Google Authorized redirect URIs: `https://example.com/remark42/auth/google/callback`\n-  - GitHub Authorised callback URL: `https://example.com/remark42/auth/github/callback`\n-\n-### docker-compose configuration\n-\n-Both Nginx and Caddy configuration below relies on remark42 available on hostname `remark42`, which is achieved by having `container_name: remark42` in docker-compose.\n-\n-Example `docker-compose.yaml`:\n-\n-```yaml\n-version: '2'\n-services:\n-  remark42:\n-    image: umputun/remark42:latest\n-    container_name: remark42\n-    restart: always\n-    environment:\n-      - REMARK_URL=https://example.com/remark42/\n-      - SITE=<site_ID>\n-      - SECRET=<secret>\n-      - ADMIN_SHARED_ID=<shared_id>\n-    volumes:\n-      - ./data:/srv/var\n-    logging:\n-      options:\n-        max-size: '10m'\n-        max-file: '1'\n-```\n-\n-### Nginx configuration\n-\n-The `nginx.conf` would then look something like:\n-\n-```\n-  location /remark42/ {\n-    rewrite /remark42/(.*) /$1 break;\n-    proxy_pass http://remark42:8080/; // use internal docker name of remark42 container for proxy\n-    proxy_set_header Host $http_host;\n-    proxy_set_header X-Real-IP $remote_addr;\n-    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n-    proxy_set_header X-Forwarded-Proto $scheme;\n-  }\n-```\n-\n-### Caddy configuration\n-\n-Example of Caddy configuration (`Caddyfile`) running remark42 service on `example.com/remark42/`:\n-\n-```caddy\n-example.com {\n-\tgzip\n-\ttls mail@example.com\n-\n-\troot /srv/www\n-\tlog  /logs/access.log\n-\n-\t# remark42\n-\tproxy /remark42/ http://remark42:8080/ {\n-\t\twithout /remark42\n-\t\ttransparent\n-\t}\n-}\n-```"
    },
    {
      "sha": "24ef80eadc79a86b4316527145dfa42c7616d96c",
      "filename": "docs/telegram.md",
      "status": "removed",
      "additions": 0,
      "deletions": 41,
      "changes": 41,
      "blob_url": "https://github.com/umputun/remark42/blob/68aba33765df6b4d654335bc996c550d119ccb83/docs/telegram.md",
      "raw_url": "https://github.com/umputun/remark42/raw/68aba33765df6b4d654335bc996c550d119ccb83/docs/telegram.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/docs/telegram.md?ref=68aba33765df6b4d654335bc996c550d119ccb83",
      "patch": "@@ -1,41 +0,0 @@\n----\n-title: Telegram\n----\n-\n-## Telegram notifications for administrators\n-\n-In order to integrate notifications about any comment on your sites with remark42 with [telegram](https://telegram.org)\n-1. Set `NOTIFY_ADMINS=telegram`\n-1. Make [a channel](https://telegram.org/faq_channels) and add it to remark42 configuration as `NOTIFY_TELEGRAM_CHAN`\n-1. Get a token according to the instruction below and add it to the configuration as well\n-\n-## Getting token for Telegram\n-\n-In order to get token \"just talk to [BotFather](https://core.telegram.org/bots#6-botfather)\". All you need is to send `/newbot` command, and choose the name for your bot (it must end in `bot`). This is it, you got a token which you'll need to write down into remark42 configuration as `TELEGRAM_TOKEN`.\n-\n-_Example of such a \"talk\":_\n-\n-```\n-Umputun:\n-/newbot\n-\n-BotFather:\n-Alright, a new bot. How are we going to call it? Please choose a name for your bot.\n-\n-Umputun:\n-example_comments\n-\n-BotFather:\n-Good. Now let's choose a username for your bot. It must end in `bot`. Like this, for example: TetrisBot or tetris_bot.\n-\n-Umputun:\n-example_comments_bot\n-\n-BotFather:\n-Done! Congratulations on your new bot. You will find it at t.me/example_comments_bot. You can now add a description, about section and profile picture for your bot, see /help for a list of commands. By the way, when you've finished creating your cool bot, ping our Bot Support if you want a better username for it. Just make sure the bot is fully operational before you do this.\n-\n-Use this token to access the HTTP API:\n-12345678:xy778Iltzsdr45tg\n-\n-For a description of the Bot API, see this page: https://core.telegram.org/bots/api\n-```"
    },
    {
      "sha": "584b5b208af3e97b9cca37ddfcf9fc479c79e927",
      "filename": "docs/translation.md",
      "status": "removed",
      "additions": 0,
      "deletions": 58,
      "changes": 58,
      "blob_url": "https://github.com/umputun/remark42/blob/68aba33765df6b4d654335bc996c550d119ccb83/docs/translation.md",
      "raw_url": "https://github.com/umputun/remark42/raw/68aba33765df6b4d654335bc996c550d119ccb83/docs/translation.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/docs/translation.md?ref=68aba33765df6b4d654335bc996c550d119ccb83",
      "patch": "@@ -1,58 +0,0 @@\n----\n-title: Translation\n----\n-\n-## How to add new language translation to Remark42\n-\n-Translation files are stored in [/frontend/app/locales](https://github.com/umputun/remark42/tree/master/frontend/app/locales)\n-directory with `.json` extension and content like following:\n-\n-```json\n-{\n-  \"anonymousLoginForm.length-limit\": \"Username must be at least 3 characters long\",\n-  \"anonymousLoginForm.log-in\": \"Log in\",\n-  \"anonymousLoginForm.symbol-limit\": \"Username must start from the letter and contain only latin letters, numbers, underscores, and spaces\",\n-<...>\n-}\n-```\n-\n-### How to add a new translation\n-\n-We truly appreciate people spending time contributing their translations to remark42. Please go through the steps\n-below in order to have your translation start being available to all remark42 users and included in the next release.\n-\n-1.  create a fork of [umputun/remark42](https://github.com/umputun/remark42) repo, and if you already have one please\n-    pull the latest changes from the upstream master branch. It could be done like that:\n-    ```shell\n-    git remote add upstream https://github.com/umputun/remark42.git\n-    git fetch upstream\n-    git rebase upstream/master\n-    git push\n-    ```\n-1.  add a new locale with [two-letter code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)\n-    of the language you want to make the translation into to list in\n-    [frontend/tasks/supportedLocales.json](https://github.com/umputun/remark42/blob/master/frontend/tasks/supportedLocales.json)\n-1.  run `npm install` in `frontend` folder\n-1.  run `npm run translation:extract` in `frontend` folder\n-1.  run `npm run translation:generate` in `frontend` folder\n-1.  translate all values in the newly created json file in\n-    [frontend/app/locales/](https://github.com/umputun/remark42/blob/master/frontend/app/locales/)\n-1.  commit all changes above in your fork\n-1.  test your changes in the interface:\n-\n-    1.  uncomment `locale: \"ru\"` line in [frontend/index.ejs](https://github.com/umputun/remark42/blob/master/frontend/index.ejs#L133)\n-        and replace `ru` with your translation language code\n-    1.  [run remark42 in Docker](https://github.com/umputun/remark42#development) by issuing following commands\n-        from the root directory of your remark42 fork:\n-\n-            ```shell\n-            docker-compose -f compose-dev-frontend.yml build\n-            docker-compose -f compose-dev-frontend.yml up\n-            ```\n-\n-    1.  open [http://127.0.0.1:8080/web](http://127.0.0.1:8080/web), log in, make a comment, make a reply to a comment,\n-        and make sure your translation looks as you expect it to look\n-    1.  make a screenshot from [http://127.0.0.1:8080](http://127.0.0.1:8080) with your translation in place\n-\n-1.  after all previous steps are done, create a [Pull Request](https://github.com/umputun/remark42/pulls) to umputun/remark42\n-    repo with your changes, attaching a screenshot or two from your local test instance to it"
    },
    {
      "sha": "3c3b02af5576f59d47ca48eec2f2d0818bb16fcb",
      "filename": "site/src/docs/backup/url-migration/index.md",
      "status": "added",
      "additions": 32,
      "deletions": 0,
      "changes": 32,
      "blob_url": "https://github.com/umputun/remark42/blob/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/backup/url-migration/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/backup/url-migration/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/backup/url-migration/index.md?ref=936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39",
      "patch": "@@ -0,0 +1,32 @@\n+---\n+title: Site URL migration\n+parent: Backup\n+order: 400\n+---\n+\n+Here is an example on how to move your comments after your posts are moved, from `https://example.org/blog/<slug>` to `https://example.org/post/<slug>` in that example.\n+\n+### Rules file\n+\n+First you have to create a `rules` file in remark's `/var` folder.\n+\n+Format is simply `old_url new_url` like following:\n+\n+ ```\n+ https://example.org/old-url-1/ https://example.org/new-url-1/\n+ https://example.org/old-url-2/ https://example.org/new-url-2/\n+ ```\n+\n+### Applying the remap\n+\n+After rules file is ready, run the following command:\n+\n+ ```shell\n+ remark42 remap --admin-passwd <password> -f var/rules\n+ ```\n+\n+If running in a docker container, the command becomes:\n+ ```shell\n+ docker ps # to find the container name\n+ docker exec -it <container> remark42 remap --admin-passwd <password> -f var/rules\n+ ```"
    },
    {
      "sha": "919926101b8cc744d22dcd7d8e83e4f6f924317b",
      "filename": "site/src/docs/configuration/email/email_auth.png",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/configuration/email/email_auth.png",
      "raw_url": "https://github.com/umputun/remark42/raw/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/configuration/email/email_auth.png",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/configuration/email/email_auth.png?ref=936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39",
      "previous_filename": "docs/images/email_auth.png"
    },
    {
      "sha": "d066c42de7524ccb76409776acbafa129295b148",
      "filename": "site/src/docs/configuration/email/email_notifications.png",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark42/blob/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/configuration/email/email_notifications.png",
      "raw_url": "https://github.com/umputun/remark42/raw/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/configuration/email/email_notifications.png",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/configuration/email/email_notifications.png?ref=936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39",
      "previous_filename": "docs/images/email_notifications.png"
    },
    {
      "sha": "e01160b3f4800c0fee06e8e741a7419f8a6cbea6",
      "filename": "site/src/docs/configuration/email/index.md",
      "status": "modified",
      "additions": 225,
      "deletions": 0,
      "changes": 225,
      "blob_url": "https://github.com/umputun/remark42/blob/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/configuration/email/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/configuration/email/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/configuration/email/index.md?ref=936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39",
      "patch": "@@ -4,3 +4,228 @@ menuTitle: Email\n parent: Configuration\n order: 300\n ---\n+\n+## Overview\n+\n+This documentation describes how to enable the email-related capabilities of Remark.\n+\n+- email authentication for users:\n+\n+  enabling this will let the user log in using their emails:\n+\n+  ![Email authentication](email_auth.png?raw=true)\n+\n+- email notifications for any users except anonymous:\n+\n+  GitHub or Google or Twitter or any other kind of user gets the ability to get\n+  email notifications about new replies to their comments (and any of the replies down the tree):\n+\n+  ![Email notifications subscription](email_notifications.png?raw=true)\n+\n+## Setup email server connection\n+\n+To enable any of email functionality you need to set up email\n+(SMTP) server connection using these variables:\n+\n+```\n+SMTP_HOST\n+SMTP_PORT\n+SMTP_TLS\n+SMTP_USERNAME\n+SMTP_PASSWORD\n+SMTP_TIMEOUT\n+```\n+\n+### Mailgun\n+\n+This is an example of a configuration using [Mailgun](https://www.mailgun.com/) email service:\n+\n+```yaml\n+- SMTP_HOST=smtp.eu.mailgun.org\n+- SMTP_PORT=465\n+- SMTP_TLS=true\n+- SMTP_USERNAME=postmaster@mg.example.com\n+- SMTP_PASSWORD=secretpassword\n+- AUTH_EMAIL_FROM=notify@example.com\n+- NOTIFY_EMAIL_FROM=notify@example.com\n+```\n+\n+#### API\n+\n+When you don't want to expose your IP (which is impossible with any SMTP provider)\n+and for situations when connecting to external SMTP server is impossible due to firewall\n+settings is setting up an SMTP-to-API bridge and sending messages through it.\n+\n+To use any of containers below with in remark42 environment set following two `SMTP` variables:\n+\n+```yaml\n+- SMTP_HOST=mail\n+- SMTP_PORT=25\n+```\n+\n+#### stevenolen/mailgun-smtp-server\n+\n+Here is `docker-compose.yml` configuration part spinning up a container for\n+[stevenolen/mailgun-smtp-server](https://hub.docker.com/r/stevenolen/mailgun-smtp-server):\n+\n+```yaml\n+mailgun:\n+  image: stevenolen/mailgun-smtp-server\n+  container_name: 'mail'\n+  hostname: 'mail'\n+\n+  logging:\n+    driver: json-file\n+    options:\n+      max-size: '10m'\n+      max-file: '5'\n+\n+  environment:\n+    - MG_KEY=key-123456789\n+    - MG_DOMAIN=example.com\n+```\n+\n+Please note that before\n+[stevenolen/mailgun-smtp-server#5](https://github.com/stevenolen/mailgun-smtp-server/issues/5)\n+is fixed, Europe domain names are not supported by this tool.\n+\n+### SendGrid\n+\n+This is an example of a configuration using [SendGrid](https://sendgrid.com/) email service:\n+\n+```yaml\n+- SMTP_HOST=smtp.sendgrid.net\n+- SMTP_PORT=465\n+- SMTP_TLS=true\n+- SMTP_USERNAME=apikey\n+- SMTP_PASSWORD=key-123456789\n+- AUTH_EMAIL_FROM=notify@example.com\n+- NOTIFY_EMAIL_FROM=notify@example.com\n+```\n+\n+#### API\n+\n+When you don't want to expose your IP (which is impossible with any SMTP provider)\n+and for situations when connecting to external SMTP server is impossible due to firewall\n+settings is setting up an SMTP-to-API bridge and sending messages through it.\n+\n+To use any of containers below with in remark42 environment set following two `SMTP` variables:\n+\n+```yaml\n+- SMTP_HOST=mail\n+- SMTP_PORT=25\n+```\n+\n+#### fgribreau/smtp-to-sendgrid-gateway\n+\n+Here is `docker-compose.yml` configuration part spinning up a container for\n+[fgribreau/smtp-to-sendgrid-gateway](https://hub.docker.com/r/fgribreau/smtp-to-sendgrid-gateway):\n+\n+```yaml\n+sendgrid:\n+  image: fgribreau/smtp-to-sendgrid-gateway\n+  container_name: 'mail'\n+  hostname: 'mail'\n+\n+  logging:\n+    driver: json-file\n+    options:\n+      max-size: '10m'\n+      max-file: '5'\n+\n+  environment:\n+    - SENDGRID_API=key-123456789\n+```\n+\n+### Gmail\n+\n+Configuration example for Gmail:\n+\n+```yaml\n+- SMTP_HOST=smtp.gmail.com\n+- SMTP_PORT=465\n+- SMTP_TLS=true\n+- SMTP_USERNAME=example.user@gmail.com\n+- SMTP_PASSWORD=secretpassword\n+- AUTH_EMAIL_FROM=example.user@gmail.com\n+- NOTIFY_EMAIL_FROM=example.user@gmail.com\n+```\n+\n+### Amazon SES\n+\n+Configuration example for [Amazon SES](https://aws.amazon.com/ses/) (us-east-1 region):\n+\n+```yaml\n+- SMTP_HOST=email-smtp.us-east-1.amazonaws.com\n+- SMTP_PORT=465\n+- SMTP_TLS=true\n+- SMTP_USERNAME=access_key_id\n+- SMTP_PASSWORD=secret_access_key\n+- AUTH_EMAIL_FROM=notify@example.com\n+- NOTIFY_EMAIL_FROM=notify@example.com\n+```\n+\n+A domain or an email that will be used in `AUTH_EMAIL_FROM` or `NOTIFY_EMAIL_FROM`\n+must first be [verified](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-domain-procedure.html).\n+\n+[SMTP Credentials](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/smtp-credentials.html)\n+must first be obtained from\n+[Amazon SES Console](https://console.aws.amazon.com/ses/home?region=us-east-1#smtp-settings:):\n+\n+## Setup email authentication\n+\n+Here is the list of variables which affect email authentication:\n+\n+```\n+AUTH_EMAIL_ENABLE\n+AUTH_EMAIL_FROM\n+AUTH_EMAIL_SUBJ\n+AUTH_EMAIL_CONTENT_TYPE\n+AUTH_EMAIL_TEMPLATE\n+```\n+\n+After you set `SMTP_` variables, you can allow email authentication by setting these two variables:\n+\n+```yaml\n+- AUTH_EMAIL_ENABLE=true\n+- AUTH_EMAIL_FROM=notify@example.com\n+```\n+\n+Usually, you don't need to change/set anything else. In case if you want to use a different\n+email template set `AUTH_EMAIL_TEMPLATE`, for instance\n+`- AUTH_EMAIL_TEMPLATE=\"Confirmation email, token: {{.Token}}\"`.\n+See [verified-authentication](https://github.com/go-pkgz/auth#verified-authentication) for more details.\n+\n+## Setup email notifications\n+\n+Here is the list of variables which affect email notifications:\n+\n+```yaml\n+NOTIFY_USERS\n+NOTIFY_EMAIL_FROM\n+NOTIFY_EMAIL_VERIFICATION_SUBJ\n+# for administrator notifications for new comments on their site\n+ADMIN_SHARED_EMAIL\n+NOTIFY_ADMINS\n+```\n+\n+After you set `SMTP_` variables, you can allow email notifications by setting these two variables:\n+\n+```yaml\n+- NOTIFY_USERS=email\n+# - NOTIFY_USERS=email,telegram # this is in case you want to have both email and telegram notifications enabled\n+- NOTIFY_EMAIL_FROM=notify@example.com\n+```\n+\n+## Email messages templates\n+\n+Remark42 uses golang templates for email templating. Templates are located in `backend/templates` and embedded into binary by statik\n+\n+For getting access to the files you can use package `templates` from `backend/app/templates`\n+\n+Now we have following templates:\n+- `email_confirmation_login.html.tmpl` – used for confirmation of login\n+- `email_confirmation_subscription.html.tmpl` – used for confirmation of subscription\n+  – `email_reply.html.tmpl` – used for sending replies to user comments (when user subscribed to it) and for noticing admins about new comments on a site\n+  – `email_unsubscribe.html.tmpl` – used for notification about successful unsubscribe from replies\n+  – `error_response.html.tmpl` – used for ..."
    },
    {
      "sha": "bf52cf15461784628d752d08e33f3cf0735313cb",
      "filename": "site/src/docs/configuration/frontend/index.md",
      "status": "modified",
      "additions": 70,
      "deletions": 0,
      "changes": 70,
      "blob_url": "https://github.com/umputun/remark42/blob/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/configuration/frontend/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/configuration/frontend/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/configuration/frontend/index.md?ref=936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39",
      "patch": "@@ -14,3 +14,73 @@ order: 100\n ### Last comments widget\n \n ## API for Single-Page Applications\n+\n+\n+## How to configure remark42 for Single Page Apps (SPA)\n+\n+Originally tested on [Nuxt.js](https://nuxtjs.org/), but it should be applicable to all SPAs.\n+\n+- Add the following JavaScript to your `index.html`, which in this case, it is identical to `<script defer src=\"$HOST/web/embed.js\"></script>`\n+\n+```js\n+;(function () {\n+  var host = // Your remark42 host\n+  var components = ['embed'] // Your choice of remark42 components\n+\n+  ;(function(c) {\n+    for (let i = 0; i < c.length; i++) {\n+      const d = document\n+      const s = d.createElement('script')\n+      s.src = remark_config.host + '/web/' + c[i] + '.js'\n+      s.defer = true\n+      ;(d.head || d.body).appendChild(s)\n+    }\n+  })(components)\n+})\n+```\n+\n+- Created `remark42Instance` when the `div` containing remark42 has appeared, usually at `mounted` or `componentDidMount` of the SPA lifecycle. Destroy the previous instance first, if necessary.\n+\n+```ts\n+  initRemark42() {\n+    if (window.REMARK42) {\n+      if (this.remark42Instance) {\n+        this.remark42Instance.destroy()\n+      }\n+\n+      this.remark42Instance = window.REMARK42.createInstance({\n+        node: this.$refs.remark42 as HTMLElement,\n+        ...remark42_config  // See <https://github.com/patarapolw/remark42#setup-on-your-website>\n+      })\n+    }\n+  }\n+\n+  mounted() {\n+    if (window.REMARK42) {\n+      this.initRemark42()\n+    } else {\n+      window.addEventListener('REMARK42::ready', () => {\n+        this.initRemark42()\n+      })\n+    }\n+  }\n+```\n+\n+- Ensure that this is called every time route changes\n+\n+```ts\n+  @Watch('$route.path')\n+  onRouteChange() {\n+    this.initRemark42()\n+  }\n+```\n+\n+- And, destroyed before routeLeave\n+\n+```ts\n+  beforeRouteLeave() {\n+    if (this.remark42Instance) {\n+      this.remark42Instance.destroy()\n+    }\n+  }\n+```"
    },
    {
      "sha": "70cca757e535cb4b3738ba2d57f0debcd8d46c7c",
      "filename": "site/src/docs/configuration/kubernetes/index.md",
      "status": "modified",
      "additions": 168,
      "deletions": 0,
      "changes": 168,
      "blob_url": "https://github.com/umputun/remark42/blob/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/configuration/kubernetes/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/configuration/kubernetes/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/configuration/kubernetes/index.md?ref=936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39",
      "patch": "@@ -4,3 +4,171 @@ menuTitle: Kubernetes\n parent: Configuration\n order: 700\n ---\n+\n+## Using Helm\n+\n+Use [remark42 Helm chart](https://github.com/groundhog2k/helm-charts/tree/master/charts/remark42).\n+\n+## Without Helm\n+\n+Here's the sample manifest for running remark42 on Hetzner Cloud:\n+\n+```yaml\n+apiVersion: apps/v1\n+kind: Deployment\n+metadata:\n+  name: remark42\n+  namespace: remark42\n+  labels:\n+    app: remark42\n+spec:\n+  replicas: 1\n+  selector:\n+    matchLabels:\n+      app: remark42\n+  strategy:\n+    type: Recreate\n+  template:\n+    metadata:\n+      namespace: remark42\n+      labels:\n+        app: remark42\n+    spec:\n+      containers:\n+      - name: remark42\n+        image: umputun/remark42:v1.8.1\n+        ports:\n+        # http:\n+        - containerPort: 8080\n+        env:\n+          - name: REMARK_URL\n+            value: \"https://comments.mysite.com/\"\n+          - name: \"SITE\"\n+            value: \"mysite.com\"\n+          - name: SECRET\n+            valueFrom:\n+              secretKeyRef:\n+                name: remark42\n+                key: SECRET\n+          - name: STORE_BOLT_PATH\n+            value: \"/srv/var/db\"\n+          - name: BACKUP_PATH\n+            value: \"/srv/var/backup\"\n+          - name: AUTH_GOOGLE_CID\n+            valueFrom:\n+              secretKeyRef:\n+                name: remark42\n+                key: AUTH_GOOGLE_CID\n+          - name: AUTH_GOOGLE_CSEC\n+            valueFrom:\n+              secretKeyRef:\n+                name: remark42\n+                key: AUTH_GOOGLE_CSEC\n+          - name: AUTH_GITHUB_CID\n+            valueFrom:\n+              secretKeyRef:\n+                name: remark42\n+                key: AUTH_GITHUB_CID\n+          - name: AUTH_GITHUB_CSEC\n+            valueFrom:\n+              secretKeyRef:\n+                name: remark42\n+                key: AUTH_GITHUB_CSEC\n+          - name: ADMIN_SHARED_ID\n+            value: \"google_b182b5daa0004104b348d9bde762b1880ed9d98d\"\n+          - name: TIME_ZONE\n+            value: \"Europe/Dublin\"\n+        volumeMounts:\n+        - name: srvvar\n+          mountPath: /srv/var\n+        securityContext:\n+          readOnlyRootFilesystem: false\n+        resources:\n+          requests:\n+            cpu: \"100m\"\n+            memory: \"25Mi\"\n+          limits:\n+            cpu: \"1\"\n+            memory: \"1Gi\"\n+      securityContext:\n+        # Has its own root privilege drop. Can't do runAsUser / runAsGroup.\n+      volumes:\n+       - name: srvvar\n+         persistentVolumeClaim:\n+           claimName: remark42\n+---\n+apiVersion: v1\n+kind: PersistentVolumeClaim\n+metadata:\n+  name: remark42\n+  namespace: remark42\n+spec:\n+  accessModes:\n+  - ReadWriteOnce\n+  resources:\n+    requests:\n+      storage: 10Gi\n+  storageClassName: hcloud-volumes\n+---\n+apiVersion: v1\n+kind: Service\n+metadata:\n+  name: remark42-web\n+  namespace: remark42\n+spec:\n+  selector:\n+    app: remark42\n+  ports:\n+    - name: http\n+      protocol: TCP\n+      port: 8080\n+      targetPort: 8080\n+---\n+# TODO: switch to networking.k8s.io/v1\n+apiVersion: networking.k8s.io/v1beta1\n+kind: Ingress\n+metadata:\n+  name: remark42-ingress\n+  namespace: remark42\n+  annotations:\n+    nginx.ingress.kubernetes.io/force-ssl-redirect: \"true\"\n+    cert-manager.io/cluster-issuer: \"letsencrypt-prod\"\n+spec:\n+  tls:\n+  - hosts:\n+    - comments.mysite.com\n+    secretName: comments-tls\n+  rules:\n+  - host: \"comments.mysite.com\"\n+    http:\n+      paths:\n+      - path: /\n+        pathType: Prefix\n+        backend:\n+          serviceName: remark42-web\n+          servicePort: 8080\n+```\n+\n+Change `storageClassName` if you run on top of different cloud / bare metal.\n+\n+This example assumes there is nginx Ingress with cert-manager already set up.\n+Adjust accordingly if you use different Ingress.\n+\n+In addition you'd need to define secrets, e.g.\n+\n+```yaml\n+apiVersion: v1\n+kind: Secret\n+metadata:\n+  name: remark42\n+  namespace: remark42\n+stringData:\n+  SECRET: <changeme>\n+  AUTH_GOOGLE_CID: <changeme>.apps.googleusercontent.com\n+  AUTH_GOOGLE_CSEC: <changeme>\n+  AUTH_GITHUB_CID: <changeme>\n+  AUTH_GITHUB_CSEC: <changeme>\n+```\n+\n+Some more information (and comments!) may be found\n+[here](https://www.rusinov.ie/en/posts/2021/this-website-has-remark42-comments-now/)."
    },
    {
      "sha": "9243c9b2de641f3657126b7f9f968b98af300cbc",
      "filename": "site/src/docs/configuration/nginx/index.md",
      "status": "modified",
      "additions": 51,
      "deletions": 0,
      "changes": 51,
      "blob_url": "https://github.com/umputun/remark42/blob/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/configuration/nginx/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/configuration/nginx/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/configuration/nginx/index.md?ref=936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39",
      "patch": "@@ -4,3 +4,54 @@ menuTitle: Nginx\n parent: Configuration\n order: 500\n ---\n+\n+## How to configure remark42 with nginx reverse proxy\n+\n+Example of nginx configuration (reverse proxy) running remark42 service on remark42.example.com\n+\n+```nginx\n+server {\n+    listen      443;\n+    server_name remark42.example.com;\n+    ssl    on;\n+    ssl_certificate        /etc/nginx/ssl/remark42.example.com.crt;\n+    ssl_certificate_key    /etc/nginx/ssl/remark42.example.com.key;\n+\n+    gzip on;\n+    gzip_types text/plain application/json text/css application/javascript application/x-javascript text/javascript text/xml application/xml application/rss+xml application/atom+xml application/rdf+xml;\n+    gzip_min_length 1000;\n+    gzip_proxied any;\n+\n+\n+    location ~ /\\.git {\n+        deny all;\n+    }\n+\n+    location /index.html {\n+         proxy_redirect          off;\n+         proxy_set_header        X-Real-IP $remote_addr;\n+         proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;\n+         proxy_set_header        Host $http_host;\n+         proxy_pass              http://remark42:8080/web/index.html;\n+     }\n+\n+    location / {\n+         proxy_redirect          off;\n+         proxy_set_header        X-Real-IP $remote_addr;\n+         proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;\n+         proxy_set_header        Host $http_host;\n+         proxy_pass              http://remark42:8080/;\n+    }\n+\n+    access_log   /var/log/nginx/remark42.log;\n+\n+}\n+\n+server {\n+  listen 80;\n+  server_name remark42.example.com;\n+  return      301 https://remark42.example.com$request_uri;\n+}\n+```\n+\n+note: `proxy_pass` points to internal DNS name `remark42` and expected to run from the same compose. If nginx runs outside compose the real IP (or docker's bridge IP) should be used"
    },
    {
      "sha": "6ab171fc6dea42e0176799a3cf87579a18d132bf",
      "filename": "site/src/docs/configuration/notifications/index.md",
      "status": "modified",
      "additions": 73,
      "deletions": 1,
      "changes": 74,
      "blob_url": "https://github.com/umputun/remark42/blob/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/configuration/notifications/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/configuration/notifications/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/configuration/notifications/index.md?ref=936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39",
      "patch": "@@ -6,6 +6,78 @@ order: 400\n \n ## Email\n \n-## Slack\n+## Slack admin notifications\n+\n+In order to integrate notifications from remark42 with the [slack](https://slack.com), you should create [a bot](https://slack.com/intl/en-cn/help/articles/115005265703-Create-a-bot-for-your-workspace) and obtain a token.\n+\n+### Create a Slack Bot\n+\n+1. Create a [Slack app](https://api.slack.com/apps/new) if you don't already have one, or select an existing app you've created.\n+2. Click the OAuth & Permissions tab in the left sidebar.\n+3. Below Bot Token Scopes, select the `chat:write`, `chat:write.public` and `channels:read` scopes. Then click Add an OAuth Scope.\n+4. Scroll to the top of the page, and click on Install to workspace.\n+5. You should see the \"_View basic information about public channels in your workspace_\",  \"_Send Message as ..._\" and \"_Send messages to channels ... isn't a member of_\" as the permission, then click allow.\n+6. You can then see you token, in the form of `xoxb-...-...-...`\n+\n+### Remark42 configuration\n+\n+The slack token which you obtained before should be used as `NOTIFY_SLACK_TOKEN`.\n+\n+You also need to set `NOTIFY_ADMINS=slack` for the Slack notification to be active.\n+\n+By default, the notification are sent to the `general` channel on slack. If you need another channel, you can specify it, for instance with `NOTIFY_SLACK_CHAN=random`.\n+\n+```\n+    - NOTIFY_ADMINS=slack\n+    - NOTIFY_SLACK_CHAN=general\n+    - NOTIFY_SLACK_TOKEN=xoxb-....\n+```\n+\n+### Verify the notifications on Slack\n+\n+If all goes fine, you should be able to see the following message on your Slack notification channel:\n+\n+> New comment from _author_ -> _original author_\n+>> [Demo | Remark42](http://127.0.0.1:8080/web/#remark42__comment-11288987987)\n+>> This is the comment written by _author_\n+\n \n ## Telegram\n+\n+### Telegram notifications for administrators\n+\n+In order to integrate notifications about any comment on your sites with remark42 with [telegram](https://telegram.org)\n+1. Set `NOTIFY_ADMINS=telegram`\n+1. Make [a channel](https://telegram.org/faq_channels) and add it to remark42 configuration as `NOTIFY_TELEGRAM_CHAN`\n+1. Get a token according to the instruction below and add it to the configuration as well\n+\n+### Getting token for Telegram\n+\n+In order to get token \"just talk to [BotFather](https://core.telegram.org/bots#6-botfather)\". All you need is to send `/newbot` command, and choose the name for your bot (it must end in `bot`). This is it, you got a token which you'll need to write down into remark42 configuration as `TELEGRAM_TOKEN`.\n+\n+_Example of such a \"talk\":_\n+\n+```\n+Umputun:\n+/newbot\n+\n+BotFather:\n+Alright, a new bot. How are we going to call it? Please choose a name for your bot.\n+\n+Umputun:\n+example_comments\n+\n+BotFather:\n+Good. Now let's choose a username for your bot. It must end in `bot`. Like this, for example: TetrisBot or tetris_bot.\n+\n+Umputun:\n+example_comments_bot\n+\n+BotFather:\n+Done! Congratulations on your new bot. You will find it at t.me/example_comments_bot. You can now add a description, about section and profile picture for your bot, see /help for a list of commands. By the way, when you've finished creating your cool bot, ping our Bot Support if you want a better username for it. Just make sure the bot is fully operational before you do this.\n+\n+Use this token to access the HTTP API:\n+12345678:xy778Iltzsdr45tg\n+\n+For a description of the Bot API, see this page: https://core.telegram.org/bots/api\n+```"
    },
    {
      "sha": "46d66f754c8f9fd475a79663fe75d53d3c38cdcd",
      "filename": "site/src/docs/configuration/reproxy/index.md",
      "status": "renamed",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/configuration/reproxy/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/configuration/reproxy/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/configuration/reproxy/index.md?ref=936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39",
      "patch": "@@ -1,10 +1,12 @@\n ---\n title: Reproxy\n+parent: Configuration\n+order: 600\n ---\n \n ## How to configure remark42 with [Reproxy](https://reproxy.io)\n \n-Example of Reproxy configuration (reverse proxy) running remark42 service on remark42.example.com with docker compose. Reproxy handles SSL termination with LE and gzip all the responses. \n+Example of Reproxy configuration (reverse proxy) running remark42 service on remark42.example.com with docker compose. Reproxy handles SSL termination with LE and gzip all the responses.\n \n ```yaml\n version: \"3.4\"\n@@ -83,5 +85,4 @@ services:\n       reproxy.route: '^/(.*)'\n       reproxy.dest: '/$$1'\n       reproxy.ping: '/ping'\n-\n ```",
      "previous_filename": "docs/reproxy.md"
    },
    {
      "sha": "7244556363ead984e9d1af19020ca37e0fec07cb",
      "filename": "site/src/docs/configuration/subdomain/index.md",
      "status": "modified",
      "additions": 74,
      "deletions": 0,
      "changes": 74,
      "blob_url": "https://github.com/umputun/remark42/blob/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/configuration/subdomain/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/configuration/subdomain/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/configuration/subdomain/index.md?ref=936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39",
      "patch": "@@ -4,3 +4,77 @@ menuTitle: Subdomain\n parent: Configuration\n order: 600\n ---\n+\n+## How to configure remark42 without a subdomain\n+\n+All README examples show configurations with remark42 on its own subdomain, i.e. `https://remark42.example.com`. However, it is possible and sometimes desirable to run remark42 without a subdomain, but just under some path, i.e. `https://example.com/remark42`.\n+\n+- The frontend URL looks like this: `s.src = 'https://example.com/remark42/web/embed.js;`\n+\n+- The backend `REMARK_URL` parameter will be `https://example.com/remark42`\n+\n+- And you also need to slightly modify the callback URL for the social media login API's:\n+\t- Facebook Valid OAuth Redirect URIs: `https://example.com/remark42/auth/facebook/callback`\n+\t- Google Authorized redirect URIs: `https://example.com/remark42/auth/google/callback`\n+\t- GitHub Authorised callback URL: `https://example.com/remark42/auth/github/callback`\n+\n+### docker-compose configuration\n+\n+Both Nginx and Caddy configuration below relies on remark42 available on hostname `remark42`, which is achieved by having `container_name: remark42` in docker-compose.\n+\n+Example `docker-compose.yaml`:\n+\n+```yaml\n+version: '2'\n+services:\n+  remark42:\n+    image: umputun/remark42:latest\n+    container_name: remark42\n+    restart: always\n+    environment:\n+      - REMARK_URL=https://example.com/remark42/\n+      - SITE=<site_ID>\n+      - SECRET=<secret>\n+      - ADMIN_SHARED_ID=<shared_id>\n+    volumes:\n+      - ./data:/srv/var\n+    logging:\n+      options:\n+        max-size: '10m'\n+        max-file: '1'\n+```\n+\n+### Nginx configuration\n+\n+The `nginx.conf` would then look something like:\n+\n+```\n+  location /remark42/ {\n+    rewrite /remark42/(.*) /$1 break;\n+    proxy_pass http://remark42:8080/; // use internal docker name of remark42 container for proxy\n+    proxy_set_header Host $http_host;\n+    proxy_set_header X-Real-IP $remote_addr;\n+    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n+    proxy_set_header X-Forwarded-Proto $scheme;\n+  }\n+```\n+\n+### Caddy configuration\n+\n+Example of Caddy configuration (`Caddyfile`) running remark42 service on `example.com/remark42/`:\n+\n+```\n+example.com {\n+\tgzip\n+\ttls mail@example.com\n+\n+\troot /srv/www\n+\tlog  /logs/access.log\n+\n+\t# remark42\n+\tproxy /remark42/ http://remark42:8080/ {\n+\t\twithout /remark42\n+\t\ttransparent\n+\t}\n+}\n+```"
    },
    {
      "sha": "d1e7fe35412671850543a99202bba58bdaffb288",
      "filename": "site/src/docs/contributing/translations/index.md",
      "status": "modified",
      "additions": 55,
      "deletions": 0,
      "changes": 55,
      "blob_url": "https://github.com/umputun/remark42/blob/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/contributing/translations/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/contributing/translations/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/contributing/translations/index.md?ref=936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39",
      "patch": "@@ -4,3 +4,58 @@ menuTitle: Translations\n parent: Contributing\n order: 300\n ---\n+\n+## How to add new language translation to Remark42\n+\n+Translation files are stored in [/frontend/app/locales](https://github.com/umputun/remark42/tree/master/frontend/app/locales)\n+directory with `.json` extension and content like following:\n+\n+```json\n+{\n+  \"anonymousLoginForm.length-limit\": \"Username must be at least 3 characters long\",\n+  \"anonymousLoginForm.log-in\": \"Log in\",\n+  \"anonymousLoginForm.symbol-limit\": \"Username must start from the letter and contain only latin letters, numbers, underscores, and spaces\",\n+<...>\n+}\n+```\n+\n+### How to add a new translation\n+\n+We truly appreciate people spending time contributing their translations to remark42. Please go through the steps\n+below in order to have your translation start being available to all remark42 users and included in the next release.\n+\n+1.  create a fork of [umputun/remark42](https://github.com/umputun/remark42) repo, and if you already have one please\n+\tpull the latest changes from the upstream master branch. It could be done like that:\n+\t```shell\n+\tgit remote add upstream https://github.com/umputun/remark42.git\n+\tgit fetch upstream\n+\tgit rebase upstream/master\n+\tgit push\n+\t```\n+1.  add a new locale with [two-letter code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)\n+\tof the language you want to make the translation into to list in\n+\t[frontend/tasks/supportedLocales.json](https://github.com/umputun/remark42/blob/master/frontend/tasks/supportedLocales.json)\n+1.  run `npm install` in `frontend` folder\n+1.  run `npm run translation:extract` in `frontend` folder\n+1.  run `npm run translation:generate` in `frontend` folder\n+1.  translate all values in the newly created json file in\n+\t[frontend/app/locales/](https://github.com/umputun/remark42/blob/master/frontend/app/locales/)\n+1.  commit all changes above in your fork\n+1.  test your changes in the interface:\n+\n+\t1.  uncomment `locale: \"ru\"` line in [frontend/index.ejs](https://github.com/umputun/remark42/blob/master/frontend/index.ejs#L133)\n+\t\tand replace `ru` with your translation language code\n+\t1.  [run remark42 in Docker](https://github.com/umputun/remark42#development) by issuing following commands\n+\t\tfrom the root directory of your remark42 fork:\n+\n+\t\t    ```shell\n+\t\t    docker-compose -f compose-dev-frontend.yml build\n+\t\t    docker-compose -f compose-dev-frontend.yml up\n+\t\t    ```\n+\n+\t1.  open [http://127.0.0.1:8080/web](http://127.0.0.1:8080/web), log in, make a comment, make a reply to a comment,\n+\t\tand make sure your translation looks as you expect it to look\n+\t1.  make a screenshot from [http://127.0.0.1:8080](http://127.0.0.1:8080) with your translation in place\n+\n+1.  after all previous steps are done, create a [Pull Request](https://github.com/umputun/remark42/pulls) to umputun/remark42\n+\trepo with your changes, attaching a screenshot or two from your local test instance to it"
    },
    {
      "sha": "9a34c008cffa0ba445cc052fb9d7b73a4b1df987",
      "filename": "site/src/docs/getting-started/installation/index.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/getting-started/installation/index.md",
      "raw_url": "https://github.com/umputun/remark42/raw/936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39/site/src/docs/getting-started/installation/index.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site/src/docs/getting-started/installation/index.md?ref=936ccd825f14fedc21e82f7e1f0b0c6bdd3aec39",
      "patch": "@@ -69,4 +69,4 @@ Put the next code snippet on a page of your site where you want to have comments\n \n After that widget will be rendered inside this node.\n \n-If you want to set this up on a Single Page App, see [appropriate doc page](https://github.com/umputun/remark42/blob/master/docs/spa.md).\n+If you want to set this up on a Single Page App, see [appropriate doc page](https://github.com/umputun/remark42/blob/master/site/src/docs/configuration/frontend/index.md)."
    }
  ]
}
