{
  "sha": "15c0172619135742fd0cbc4dcd6c675e11b72c8a",
  "node_id": "C_kwDOAF-mA9oAKDE1YzAxNzI2MTkxMzU3NDJmZDBjYmM0ZGNkNmM2NzVlMTFiNzJjOGE",
  "commit": {
    "author": {
      "name": "ix5",
      "email": "ix5@users.noreply.github.com",
      "date": "2022-05-28T22:27:40Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2022-05-28T22:27:40Z"
    },
    "message": "Merge pull request #895 from ix5/views-get-not-in\n\n[server] views: comments: Check using get(), not 'in'",
    "tree": {
      "sha": "1a6340db686dd3c03d0e979563a67d3b12a07817",
      "url": "https://api.github.com/repos/posativ/isso/git/trees/1a6340db686dd3c03d0e979563a67d3b12a07817"
    },
    "url": "https://api.github.com/repos/posativ/isso/git/commits/15c0172619135742fd0cbc4dcd6c675e11b72c8a",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJikqHcCRBK7hj4Ov3rIwAAUosIAGi0yl3H+uyaIpFewakH5sc4\n9QjTEzIqc7BFZl/FTiJX0FRb8TiND5fV4Wpv7OVBzr4v/Y1mZnldjFCsTy0jLrRT\n0ZEwSCL8Xh32i5+cc2RrpYRpOgvjpZdHqN92K1Sm7eQDUmP/FbTq5XPw53oRVgWW\n+XmeKpJ4tg9VtthNDjMtx5ZsBbTMIXnx2llHg1P++kGEsIy77z5j8CUZaWSCnqUi\n5YgVpVyCPex6+6wRUNyKuY8xolWG5nZgyOdRkVaj/C280fkv9/ROMze1VXEBGtm4\nx9ZmV6ZGJoP+E+9SjcWQYOz6hM+SXvISIlb/dyxuBGvSNVRE5F/wo3Rbw6NVkDM=\n=gwAL\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 1a6340db686dd3c03d0e979563a67d3b12a07817\nparent 8dfd6614af5fc470bdf511587ea634f82d7eaf41\nparent 103bd7e5d984a63a57b359f5633c6d1f695cc5be\nauthor ix5 <ix5@users.noreply.github.com> 1653776860 +0200\ncommitter GitHub <noreply@github.com> 1653776860 +0200\n\nMerge pull request #895 from ix5/views-get-not-in\n\n[server] views: comments: Check using get(), not 'in'"
    }
  },
  "url": "https://api.github.com/repos/posativ/isso/commits/15c0172619135742fd0cbc4dcd6c675e11b72c8a",
  "html_url": "https://github.com/posativ/isso/commit/15c0172619135742fd0cbc4dcd6c675e11b72c8a",
  "comments_url": "https://api.github.com/repos/posativ/isso/commits/15c0172619135742fd0cbc4dcd6c675e11b72c8a/comments",
  "author": {
    "login": "ix5",
    "id": 10212877,
    "node_id": "MDQ6VXNlcjEwMjEyODc3",
    "avatar_url": "https://avatars.githubusercontent.com/u/10212877?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ix5",
    "html_url": "https://github.com/ix5",
    "followers_url": "https://api.github.com/users/ix5/followers",
    "following_url": "https://api.github.com/users/ix5/following{/other_user}",
    "gists_url": "https://api.github.com/users/ix5/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ix5/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ix5/subscriptions",
    "organizations_url": "https://api.github.com/users/ix5/orgs",
    "repos_url": "https://api.github.com/users/ix5/repos",
    "events_url": "https://api.github.com/users/ix5/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ix5/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8dfd6614af5fc470bdf511587ea634f82d7eaf41",
      "url": "https://api.github.com/repos/posativ/isso/commits/8dfd6614af5fc470bdf511587ea634f82d7eaf41",
      "html_url": "https://github.com/posativ/isso/commit/8dfd6614af5fc470bdf511587ea634f82d7eaf41"
    },
    {
      "sha": "103bd7e5d984a63a57b359f5633c6d1f695cc5be",
      "url": "https://api.github.com/repos/posativ/isso/commits/103bd7e5d984a63a57b359f5633c6d1f695cc5be",
      "html_url": "https://github.com/posativ/isso/commit/103bd7e5d984a63a57b359f5633c6d1f695cc5be"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 15,
    "deletions": 4
  },
  "files": [
    {
      "sha": "eeb247cbdb8bb3cd9b840ddf93076e2adb75342a",
      "filename": "isso/tests/test_comments.py",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/posativ/isso/blob/15c0172619135742fd0cbc4dcd6c675e11b72c8a/isso%2Ftests%2Ftest_comments.py",
      "raw_url": "https://github.com/posativ/isso/raw/15c0172619135742fd0cbc4dcd6c675e11b72c8a/isso%2Ftests%2Ftest_comments.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso%2Ftests%2Ftest_comments.py?ref=15c0172619135742fd0cbc4dcd6c675e11b72c8a",
      "patch": "@@ -472,6 +472,17 @@ def testPreview(self):\n         self.assertEqual(\n             rv[\"text\"], '<p>This is <strong>mark</strong><em>down</em></p>')\n \n+    def testTitleNull(self):\n+        # Thread title set to `null` in API request\n+        # Javascript `null` equals Python `None`\n+        self.post('/new?uri=%2Fpath%2F',\n+                  data=json.dumps({'text': 'Spam', 'title': None}))\n+\n+        thread = self.app.db.threads.get(1)\n+        # Expect server to attempt to parse uri to extract title\n+        # utils.parse cannot parse fake /path/, so default=\"Untitled.\"\n+        self.assertEqual(thread.get('title'), \"Untitled.\")\n+\n     def testLatestOk(self):\n         # load some comments in a mix of posts\n         saved = []"
    },
    {
      "sha": "83f976bcc61f27c4883636c7ce4aabde3d2af544",
      "filename": "isso/views/comments.py",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/posativ/isso/blob/15c0172619135742fd0cbc4dcd6c675e11b72c8a/isso%2Fviews%2Fcomments.py",
      "raw_url": "https://github.com/posativ/isso/raw/15c0172619135742fd0cbc4dcd6c675e11b72c8a/isso%2Fviews%2Fcomments.py",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/isso%2Fviews%2Fcomments.py?ref=15c0172619135742fd0cbc4dcd6c675e11b72c8a",
      "patch": "@@ -152,7 +152,7 @@ def __init__(self, isso, hasher):\n     @classmethod\n     def verify(cls, comment):\n \n-        if \"text\" not in comment:\n+        if comment.get(\"text\") is None:\n             return False, \"text is missing\"\n \n         if not isinstance(comment.get(\"parent\"), (int, type(None))):\n@@ -290,7 +290,7 @@ def new(self, environ, request, uri):\n \n         with self.isso.lock:\n             if uri not in self.threads:\n-                if 'title' not in data:\n+                if not data.get('title'):\n                     with http.curl('GET', local(\"origin\"), uri) as resp:\n                         if resp and resp.status == 200:\n                             uri, title = parse.thread(resp.read(), id=uri)\n@@ -484,7 +484,7 @@ def edit(self, environ, request, id):\n \n         data = request.json\n \n-        if \"text\" not in data or data[\"text\"] is None or len(data[\"text\"]) < 3:\n+        if data.get(\"text\") is None or len(data[\"text\"]) < 3:\n             raise BadRequest(\"no text given\")\n \n         for key in set(data.keys()) - set([\"text\", \"author\", \"website\"]):\n@@ -1031,7 +1031,7 @@ def dislike(self, environ, request, id):\n     def preview(self, environment, request):\n         data = request.json\n \n-        if \"text\" not in data or data[\"text\"] is None:\n+        if data.get(\"text\", None) is None:\n             raise BadRequest(\"no text given\")\n \n         return JSON({'text': self.isso.render(data[\"text\"])}, 200)"
    }
  ]
}
