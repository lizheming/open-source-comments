{
  "sha": "d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
  "node_id": "C_kwDOBtgov9oAKGQ2Y2NlOGRmMmMzNDIyZDg5ZTVhZDA0NmE0ZTA0OTdjNTZiMzRiZjU",
  "commit": {
    "author": {
      "name": "Dmitry Verkhoturov",
      "email": "paskal.07@gmail.com",
      "date": "2023-01-08T12:13:22Z"
    },
    "committer": {
      "name": "Dmitry Verkhoturov",
      "email": "paskal.07@gmail.com",
      "date": "2023-01-09T21:16:35Z"
    },
    "message": "cleanup of the frontend code\n\n- replace undocumented `substr` with `substring`\n- remove unused code\n- inline a few variables\n- simplify ifs when possible\n- improve saveCollapsedComments documentation\n- cleanup the unused imports\n- remove unused variables and types",
    "tree": {
      "sha": "7d17df6802ab9f6015be6a94daad6ed71c81298a",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/7d17df6802ab9f6015be6a94daad6ed71c81298a"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
  "html_url": "https://github.com/umputun/remark42/commit/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/comments",
  "author": {
    "login": "paskal",
    "id": 712534,
    "node_id": "MDQ6VXNlcjcxMjUzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/712534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paskal",
    "html_url": "https://github.com/paskal",
    "followers_url": "https://api.github.com/users/paskal/followers",
    "following_url": "https://api.github.com/users/paskal/following{/other_user}",
    "gists_url": "https://api.github.com/users/paskal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paskal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paskal/subscriptions",
    "organizations_url": "https://api.github.com/users/paskal/orgs",
    "repos_url": "https://api.github.com/users/paskal/repos",
    "events_url": "https://api.github.com/users/paskal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paskal/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "paskal",
    "id": 712534,
    "node_id": "MDQ6VXNlcjcxMjUzNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/712534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paskal",
    "html_url": "https://github.com/paskal",
    "followers_url": "https://api.github.com/users/paskal/followers",
    "following_url": "https://api.github.com/users/paskal/following{/other_user}",
    "gists_url": "https://api.github.com/users/paskal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paskal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paskal/subscriptions",
    "organizations_url": "https://api.github.com/users/paskal/orgs",
    "repos_url": "https://api.github.com/users/paskal/repos",
    "events_url": "https://api.github.com/users/paskal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paskal/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "596861a594a962e9c9c244f26a6e8e4787ef1391",
      "url": "https://api.github.com/repos/umputun/remark42/commits/596861a594a962e9c9c244f26a6e8e4787ef1391",
      "html_url": "https://github.com/umputun/remark42/commit/596861a594a962e9c9c244f26a6e8e4787ef1391"
    }
  ],
  "stats": {
    "total": 116,
    "additions": 14,
    "deletions": 102
  },
  "files": [
    {
      "sha": "d1ddc6e75e6691b654efb1037d5b714853dc8009",
      "filename": "frontend/apps/remark42/app/common/api.ts",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcommon%2Fapi.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcommon%2Fapi.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcommon%2Fapi.ts?ref=d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
      "patch": "@@ -9,8 +9,6 @@ export const getConfig = (): Promise<Config> => apiFetcher.get('/config');\n \n export const getPostComments = (sort: Sorting) => apiFetcher.get<Tree>('/find', { url, sort, format: 'tree' });\n \n-export const getComment = (id: Comment['id']): Promise<Comment> => apiFetcher.get(`/id/${id}`, { url });\n-\n export const getUserComments = (\n   userId: User['id'],\n   config: { limit: number; skip?: number } = { limit: 10, skip: 0 }"
    },
    {
      "sha": "7ee493134d90425c38c63d2fba6411995c5152f4",
      "filename": "frontend/apps/remark42/app/common/cookies.ts",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcommon%2Fcookies.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcommon%2Fcookies.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcommon%2Fcookies.ts?ref=d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
      "patch": "@@ -43,7 +43,3 @@ export function getCookie(name: string) {\n \n   return matches ? decodeURIComponent(matches[1]) : undefined;\n }\n-\n-export function deleteCookie(name: string) {\n-  setCookie(name, '', { expires: -1 });\n-}"
    },
    {
      "sha": "be2aff3b9879d4b5ab43b828412a820f995133bb",
      "filename": "frontend/apps/remark42/app/common/fetcher.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcommon%2Ffetcher.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcommon%2Ffetcher.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcommon%2Ffetcher.ts?ref=d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
      "patch": "@@ -69,9 +69,7 @@ const createFetcher = (baseUrl: string = ''): Methods => {\n       // TODO: it should be clarified when frontend gets this header and what could be in it to simplify this logic and cover by tests\n       const date = (res.headers.has('date') && res.headers.get('date')) || '';\n       const timestamp = isNaN(Date.parse(date)) ? 0 : Date.parse(date);\n-      const timeDiff = (new Date().getTime() - timestamp) / 1000;\n-\n-      StaticStore.serverClientTimeDiff = timeDiff;\n+      StaticStore.serverClientTimeDiff = (new Date().getTime() - timestamp) / 1000;\n \n       // backend could update jwt in any time. so, we should handle it\n       if (res.headers.has(JWT_HEADER)) {"
    },
    {
      "sha": "ad39bd9c6c0cb22c47ec5a23d78e949a0e44f6b2",
      "filename": "frontend/apps/remark42/app/common/types.ts",
      "status": "modified",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcommon%2Ftypes.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcommon%2Ftypes.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcommon%2Ftypes.ts?ref=d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
      "patch": "@@ -72,12 +72,6 @@ export interface Comment {\n    */\n   hidden?: boolean;\n }\n-\n-export interface CommentsResponse {\n-  comments: Comment[];\n-  count: number;\n-}\n-\n export interface Node {\n   comment: Comment;\n   replies?: Node[];"
    },
    {
      "sha": "f8ab27c33f2c8a51c560dac3c80d98635e7ed7cf",
      "filename": "frontend/apps/remark42/app/components/auth/auth.hooks.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fauth%2Fauth.hooks.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fauth%2Fauth.hooks.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fauth%2Fauth.hooks.ts?ref=d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
      "patch": "@@ -123,7 +123,7 @@ export function useErrorMessage(): [string | null, (e: unknown) => void] {\n       }\n \n       const errorReason =\n-        err instanceof RequestError || (isObject(err) && typeof (err as Record<string, string>).error === 'string')\n+        err instanceof RequestError || isObject(err)\n           ? (err as Record<'error', string>).error\n           : err instanceof Error\n           ? err.message"
    },
    {
      "sha": "38de6db5124d0aabb25889bcca2dff36d616e29e",
      "filename": "frontend/apps/remark42/app/components/comment-form/__subscribe-by-email/comment-form__subscribe-by-email.tsx",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark42/blob/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment-form%2F__subscribe-by-email%2Fcomment-form__subscribe-by-email.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment-form%2F__subscribe-by-email%2Fcomment-form__subscribe-by-email.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment-form%2F__subscribe-by-email%2Fcomment-form__subscribe-by-email.tsx?ref=d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
      "patch": "@@ -26,7 +26,6 @@ const emailRegexp = /[^@]+@[^.]+\\..+/;\n enum Step {\n   Email,\n   Token,\n-  Final,\n   Close,\n   Subscribed,\n   Unsubscribed,"
    },
    {
      "sha": "d4e8055b0bef938f98966946ee9cc41778dcb49a",
      "filename": "frontend/apps/remark42/app/components/comment-form/comment-form.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment-form%2Fcomment-form.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment-form%2Fcomment-form.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment-form%2Fcomment-form.tsx?ref=d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
      "patch": "@@ -112,7 +112,7 @@ export class CommentForm extends Component<Props, State> {\n \n   onInput = (e: Event) => {\n     const { value } = e.target as HTMLInputElement;\n-    const text = value.substr(0, StaticStore.config.max_comment_size);\n+    const text = value.substring(0, StaticStore.config.max_comment_size);\n \n     updatePersistedComments(this.props.id, value);\n "
    },
    {
      "sha": "1d45007eebd32383c479f57b63deb1d479a8cc1e",
      "filename": "frontend/apps/remark42/app/components/comment/comment-votes.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment%2Fcomment-votes.spec.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment%2Fcomment-votes.spec.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment%2Fcomment-votes.spec.tsx?ref=d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
      "patch": "@@ -56,7 +56,7 @@ describe('<CommentVote />', () => {\n     ['downvote', -1, 'Vote down', 'Vote up', 'downVoteButtonActive'],\n   ])(\n     'should go throught voting process and communicate with store when %s button is clicked',\n-    async (_, increment, activeButtonText, secondButtonText, activeButtonClass) => {\n+    async (_, increment, activeButtonText, secondButtonText) => {\n       const putCommentVoteSpy = jest\n         .spyOn(api, 'putCommentVote')\n         .mockImplementationOnce(({ vote }) => Promise.resolve({ id: '1', score: 10 + vote }));"
    },
    {
      "sha": "acc98ad14c12b258eeefccb98e9b8d07c073e1a8",
      "filename": "frontend/apps/remark42/app/components/comment/comment-votes.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment%2Fcomment-votes.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment%2Fcomment-votes.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment%2Fcomment-votes.tsx?ref=d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
      "patch": "@@ -21,7 +21,7 @@ type Props = {\n   disabled?: boolean;\n };\n \n-export function CommentVotes({ id, votes, vote, disabled, controversy = 0 }: Props) {\n+export function CommentVotes({ id, votes, vote, disabled }: Props) {\n   const intl = useIntl();\n   const dispatch = useDispatch();\n   const [loadingState, setLoadingState] = useState<{ vote: number; votes: number } | null>(null);"
    },
    {
      "sha": "3bd279dc527750c54ee2438bc97c3ab8f78617ce",
      "filename": "frontend/apps/remark42/app/components/comment/comment.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 13,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment%2Fcomment.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment%2Fcomment.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fcomment%2Fcomment.tsx?ref=d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
      "patch": "@@ -62,7 +62,6 @@ export interface State {\n }\n \n export class Comment extends Component<CommentProps, State> {\n-  votingPromise: Promise<unknown> = Promise.resolve();\n   /** comment text node. Used in comment text copying */\n   textNode = createRef<HTMLDivElement>();\n \n@@ -175,16 +174,6 @@ export class Comment extends Component<CommentProps, State> {\n     }\n   };\n \n-  onBlockUserClick = (evt: Event) => {\n-    const target = evt.currentTarget;\n-\n-    if (target instanceof HTMLOptionElement) {\n-      // we have to debounce the blockUser function calls otherwise it will be\n-      // called 2 times (by change event and by blur event)\n-      this.blockUser(target.value as BlockTTL);\n-    }\n-  };\n-\n   blockUser = debounce((ttl: BlockTTL): void => {\n     const { user } = this.props.data;\n     const blockingDurations = getBlockingDurations(this.props.intl);\n@@ -427,7 +416,7 @@ export class Comment extends Component<CommentProps, State> {\n                 />\n               </button>\n             )}\n-            {!isAdmin && !!o.user.verified && props.view !== 'user' && (\n+            {!isAdmin && o.user.verified && props.view !== 'user' && (\n               <VerificationIcon className={styles.verificationIcon} title={intl.formatMessage(messages.verifiedUser)} />\n             )}\n             {o.user.paid_sub && (\n@@ -560,7 +549,7 @@ function getTextSnippet(html: string) {\n   tmp.innerHTML = html.replace('</p><p>', ' ');\n \n   const result = tmp.innerText || '';\n-  const snippet = result.substr(0, LENGTH);\n+  const snippet = result.substring(0, LENGTH);\n \n   return snippet.length === LENGTH && result.length !== LENGTH ? `${snippet}...` : snippet;\n }"
    },
    {
      "sha": "5becc5e6d5aaa45b2d47802c06a51ae0e59f4206",
      "filename": "frontend/apps/remark42/app/components/root/root.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark42/blob/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Froot%2Froot.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Froot%2Froot.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Froot%2Froot.tsx?ref=d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
      "patch": "@@ -11,7 +11,6 @@ import { COMMENT_NODE_CLASSNAME_PREFIX, MAX_SHOWN_ROOT_COMMENTS, THEMES, IS_MOBI\n import { maxShownComments, url } from 'common/settings';\n \n import {\n-  setUser,\n   fetchUser,\n   blockUser,\n   unblockUser,\n@@ -20,7 +19,7 @@ import {\n   unhideUser,\n   signout,\n } from 'store/user/actions';\n-import { fetchComments, addComment, updateComment, unsetCommentMode } from 'store/comments/actions';\n+import { fetchComments, addComment, updateComment } from 'store/comments/actions';\n import { setCommentsReadOnlyState } from 'store/post-info/actions';\n import { setTheme } from 'store/theme/actions';\n \n@@ -73,7 +72,6 @@ const mapStateToProps = (state: StoreState) => ({\n \n const boundActions = bindActions({\n   fetchComments,\n-  setUser,\n   fetchUser,\n   fetchBlockedUsers,\n   setTheme,\n@@ -85,7 +83,6 @@ const boundActions = bindActions({\n   addComment,\n   updateComment,\n   setCollapse,\n-  unsetCommentMode,\n   signout,\n });\n "
    },
    {
      "sha": "a9b1c33076967cfcf1f682afa946951334d10acf",
      "filename": "frontend/apps/remark42/app/components/settings/settings.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark42/blob/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fsettings%2Fsettings.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fsettings%2Fsettings.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Fsettings%2Fsettings.tsx?ref=d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
      "patch": "@@ -91,8 +91,7 @@ class SettingsComponent extends Component<Props, State> {\n   };\n \n   __isUserHidden = (user: User): boolean => {\n-    if (this.state.unhiddenUsers.indexOf(user.id) === -1) return true;\n-    return false;\n+    return !this.state.unhiddenUsers.includes(user.id);\n   };\n \n   render({ user, theme }: Props, { blockedUsers, unblockedUsers, unhiddenUsers }: State) {"
    },
    {
      "sha": "e0da9b4750d6c9a0c66985e90d7f27f0874d4dce",
      "filename": "frontend/apps/remark42/app/components/textarea-autosize.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Ftextarea-autosize.tsx",
      "raw_url": "https://github.com/umputun/remark42/raw/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Ftextarea-autosize.tsx",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fcomponents%2Ftextarea-autosize.tsx?ref=d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
      "patch": "@@ -2,7 +2,7 @@ import { h, JSX } from 'preact';\n import { forwardRef } from 'preact/compat';\n import { useEffect, useRef } from 'preact/hooks';\n \n-function autoResize(textarea: HTMLTextAreaElement, onResize?: () => void) {\n+function autoResize(textarea: HTMLTextAreaElement) {\n   textarea.style.height = '';\n   textarea.style.height = `${textarea.scrollHeight}px`;\n }"
    },
    {
      "sha": "38eec0f47cf1c72842ea6b7d7e8ac9cddcbe9690",
      "filename": "frontend/apps/remark42/app/hooks/useTheme.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark42/blob/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fhooks%2FuseTheme.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Fhooks%2FuseTheme.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Fhooks%2FuseTheme.ts?ref=d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
      "patch": "@@ -4,7 +4,5 @@ import { StoreState } from 'store';\n import { Theme } from 'common/types';\n \n export function useTheme() {\n-  const theme = useSelector<StoreState, Theme>(({ theme }) => theme);\n-\n-  return theme;\n+  return useSelector<StoreState, Theme>(({ theme }) => theme);\n }"
    },
    {
      "sha": "7b50bea711d6ebcd380458dfeeb1cd34b654d7af",
      "filename": "frontend/apps/remark42/app/typings/global.d.ts",
      "status": "modified",
      "additions": 0,
      "deletions": 15,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark42/blob/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Ftypings%2Fglobal.d.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Ftypings%2Fglobal.d.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Ftypings%2Fglobal.d.ts?ref=d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
      "patch": "@@ -33,19 +33,4 @@ declare global {\n         | undefined;\n     };\n   }\n-\n-  namespace NodeJS {\n-    interface Global {\n-      Headers: typeof Headers;\n-      localStorage: typeof Storage;\n-    }\n-  }\n }\n-\n-/**\n- * Variable responsive for dynamic setting public path for\n- * assets. Dynamic imports with relative url will be resolved over this path.\n- *\n- * https://webpack.js.org/guides/public-path/#on-the-fly\n- */\n-declare let __webpack_public_path__: string;"
    },
    {
      "sha": "308bd8c8b4091451da201d2125be82228f8063f9",
      "filename": "frontend/apps/remark42/app/utils/bench.ts",
      "status": "removed",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/596861a594a962e9c9c244f26a6e8e4787ef1391/frontend%2Fapps%2Fremark42%2Fapp%2Futils%2Fbench.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/596861a594a962e9c9c244f26a6e8e4787ef1391/frontend%2Fapps%2Fremark42%2Fapp%2Futils%2Fbench.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Futils%2Fbench.ts?ref=596861a594a962e9c9c244f26a6e8e4787ef1391",
      "patch": "@@ -1,8 +0,0 @@\n-export function bench<T>(fn: () => T, label = 'bench'): T {\n-  const d = performance.now();\n-  const r = fn();\n-  const dd = performance.now();\n-  // eslint-disable-next-line no-console\n-  console.info(label, dd - d);\n-  return r;\n-}"
    },
    {
      "sha": "5e61341be22efd547a622360e32e5c6a270e6b54",
      "filename": "frontend/apps/remark42/app/utils/debug-node.ts",
      "status": "removed",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark42/blob/596861a594a962e9c9c244f26a6e8e4787ef1391/frontend%2Fapps%2Fremark42%2Fapp%2Futils%2Fdebug-node.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/596861a594a962e9c9c244f26a6e8e4787ef1391/frontend%2Fapps%2Fremark42%2Fapp%2Futils%2Fdebug-node.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Futils%2Fdebug-node.ts?ref=596861a594a962e9c9c244f26a6e8e4787ef1391",
      "patch": "@@ -1,22 +0,0 @@\n-import { Node } from 'common/types';\n-\n-/**\n- * Function to debug node tree.\n- */\n-export function debugNode(n: Node): Node {\n-  const d = (n: Node, level: number): void => {\n-    // eslint-disable-next-line no-console\n-    console.log(\n-      `${'  '.repeat(level)}${n.comment.text.trim()} | id: ${n.comment.id} | delete: ${n.comment.delete} | pin: ${\n-        n.comment.pin\n-      }`\n-    );\n-    if (n.replies) {\n-      for (const node of n.replies) {\n-        d(node, level + 1);\n-      }\n-    }\n-  };\n-  d(n, 0);\n-  return n;\n-}"
    },
    {
      "sha": "780ac31bb22f9f5df2b6f0b78a026b1988166528",
      "filename": "frontend/apps/remark42/app/utils/derequire.ts",
      "status": "removed",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/596861a594a962e9c9c244f26a6e8e4787ef1391/frontend%2Fapps%2Fremark42%2Fapp%2Futils%2Fderequire.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/596861a594a962e9c9c244f26a6e8e4787ef1391/frontend%2Fapps%2Fremark42%2Fapp%2Futils%2Fderequire.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Futils%2Fderequire.ts?ref=596861a594a962e9c9c244f26a6e8e4787ef1391",
      "patch": "@@ -1,2 +0,0 @@\n-/** type that makes certain properties of type optional */\n-export type Derequire<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>> & Partial<Pick<T, K>>;"
    },
    {
      "sha": "96f944082d94946db13017a0b0dd220afdca8c20",
      "filename": "frontend/apps/remark42/app/utils/replaceSelection.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Futils%2FreplaceSelection.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Fapp%2Futils%2FreplaceSelection.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Futils%2FreplaceSelection.ts?ref=d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
      "patch": "@@ -1,3 +1,3 @@\n export function replaceSelection(text: string, selection: [number, number], replacement: string): string {\n-  return text.substr(0, selection[0]) + replacement + text.substr(selection[1]);\n+  return text.substring(0, selection[0]) + replacement + text.substring(selection[1]);\n }"
    },
    {
      "sha": "ccf4d73cd3eb15d78a1bdd4b2e4bfaadbeb17657",
      "filename": "frontend/apps/remark42/app/utils/shallowCompare.ts",
      "status": "removed",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark42/blob/596861a594a962e9c9c244f26a6e8e4787ef1391/frontend%2Fapps%2Fremark42%2Fapp%2Futils%2FshallowCompare.ts",
      "raw_url": "https://github.com/umputun/remark42/raw/596861a594a962e9c9c244f26a6e8e4787ef1391/frontend%2Fapps%2Fremark42%2Fapp%2Futils%2FshallowCompare.ts",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Fapp%2Futils%2FshallowCompare.ts?ref=596861a594a962e9c9c244f26a6e8e4787ef1391",
      "patch": "@@ -1,9 +0,0 @@\n-export function shallowCompare<T extends Record<string, unknown>>(a: T, b: T): boolean {\n-  const entriesA = Object.entries(a);\n-  const keysB = Object.keys(b);\n-  if (entriesA.length !== keysB.length) return false;\n-  for (const [key, value] of entriesA) {\n-    if (value !== b[key]) return false;\n-  }\n-  return true;\n-}"
    },
    {
      "sha": "54aa10f9c4c249fa5c39af6d5f47f678eb5e9ed5",
      "filename": "frontend/apps/remark42/templates/comments.ejs",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Ftemplates%2Fcomments.ejs",
      "raw_url": "https://github.com/umputun/remark42/raw/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Ftemplates%2Fcomments.ejs",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Ftemplates%2Fcomments.ejs?ref=d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
      "patch": "@@ -52,7 +52,7 @@\n       var query = (function () {\n         if (window.location.search.length === 0) return {};\n         return window.location.search\n-          .substr(1)\n+          .substring(1)\n           .split('&')\n           .map(function (item) {\n             return item.split('=');"
    },
    {
      "sha": "eebe7d58755bf70afacffab4a1a162c784a19f36",
      "filename": "frontend/apps/remark42/templates/iframe.ejs",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Ftemplates%2Fiframe.ejs",
      "raw_url": "https://github.com/umputun/remark42/raw/d6cce8df2c3422d89e5ad046a4e0497c56b34bf5/frontend%2Fapps%2Fremark42%2Ftemplates%2Fiframe.ejs",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/frontend%2Fapps%2Fremark42%2Ftemplates%2Fiframe.ejs?ref=d6cce8df2c3422d89e5ad046a4e0497c56b34bf5",
      "patch": "@@ -75,7 +75,7 @@\n         window.location.search.length < 2\n           ? {}\n           : window.location.search\n-              .substr(1)\n+              .substring(1)\n               .split('&')\n               .reduce(function (c, x) {\n                 var splitted = x.split('=');"
    }
  ]
}
