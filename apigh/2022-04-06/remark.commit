{
  "sha": "65e3a82d8be93777101df9aef0e1900a0527f267",
  "node_id": "C_kwDOBtgov9oAKDY1ZTNhODJkOGJlOTM3NzcxMDFkZjlhZWYwZTE5MDBhMDUyN2YyNjc",
  "commit": {
    "author": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2022-04-05T17:08:44Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2022-04-05T17:08:44Z"
    },
    "message": "add no-signature mode suppressing app info middleware #1305",
    "tree": {
      "sha": "7f1a455fe0facce27440ad0d3ea01a740df9fcf9",
      "url": "https://api.github.com/repos/umputun/remark42/git/trees/7f1a455fe0facce27440ad0d3ea01a740df9fcf9"
    },
    "url": "https://api.github.com/repos/umputun/remark42/git/commits/65e3a82d8be93777101df9aef0e1900a0527f267",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark42/commits/65e3a82d8be93777101df9aef0e1900a0527f267",
  "html_url": "https://github.com/umputun/remark42/commit/65e3a82d8be93777101df9aef0e1900a0527f267",
  "comments_url": "https://api.github.com/repos/umputun/remark42/commits/65e3a82d8be93777101df9aef0e1900a0527f267/comments",
  "author": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "89dc8ac6ddf7101aa2cd50a3e58a8827aa595ea9",
      "url": "https://api.github.com/repos/umputun/remark42/commits/89dc8ac6ddf7101aa2cd50a3e58a8827aa595ea9",
      "html_url": "https://github.com/umputun/remark42/commit/89dc8ac6ddf7101aa2cd50a3e58a8827aa595ea9"
    }
  ],
  "stats": {
    "total": 260,
    "additions": 148,
    "deletions": 112
  },
  "files": [
    {
      "sha": "b0d8b2d75149a5a4ed989f9605490d0f08d65c04",
      "filename": "backend/app/cmd/server.go",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark42/blob/65e3a82d8be93777101df9aef0e1900a0527f267/backend%2Fapp%2Fcmd%2Fserver.go",
      "raw_url": "https://github.com/umputun/remark42/raw/65e3a82d8be93777101df9aef0e1900a0527f267/backend%2Fapp%2Fcmd%2Fserver.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fapp%2Fcmd%2Fserver.go?ref=65e3a82d8be93777101df9aef0e1900a0527f267",
      "patch": "@@ -81,6 +81,7 @@ type ServerCommand struct {\n \tProxyCORS        bool          `long:\"proxy-cors\" env:\"PROXY_CORS\" description:\"disable internal CORS and delegate it to proxy\"`\n \tAllowedHosts     []string      `long:\"allowed-hosts\" env:\"ALLOWED_HOSTS\" description:\"limit hosts/sources allowed to embed comments\"`\n \tSubscribersOnly  bool          `long:\"subscribers-only\" env:\"SUBSCRIBERS_ONLY\" description:\"enable commenting only for Patreon subscribers\"`\n+\tDisableSignature bool          `long:\"disable-signature\" env:\"DISABLE_SIGNATURE\" description:\"disable server signature in headers\"`\n \n \tAuth struct {\n \t\tTTL struct {\n@@ -577,6 +578,7 @@ func (s *ServerCommand) newServerApp(ctx context.Context) (*serverApp, error) {\n \t\tAllowedAncestors:    s.AllowedHosts,\n \t\tSendJWTHeader:       s.Auth.SendJWTHeader,\n \t\tSubscribersOnly:     s.SubscribersOnly,\n+\t\tDisableSignature:    s.DisableSignature,\n \t}\n \n \tsrv.ScoreThresholds.Low, srv.ScoreThresholds.Critical = s.LowScore, s.CriticalScore"
    },
    {
      "sha": "4394417d309a8a36a06b48bb40e6f29a11b95911",
      "filename": "backend/app/rest/api/rest.go",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark42/blob/65e3a82d8be93777101df9aef0e1900a0527f267/backend%2Fapp%2Frest%2Fapi%2Frest.go",
      "raw_url": "https://github.com/umputun/remark42/raw/65e3a82d8be93777101df9aef0e1900a0527f267/backend%2Fapp%2Frest%2Fapi%2Frest.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fapp%2Frest%2Fapi%2Frest.go?ref=65e3a82d8be93777101df9aef0e1900a0527f267",
      "patch": "@@ -65,6 +65,7 @@ type Rest struct {\n \tSendJWTHeader       bool\n \tAllowedAncestors    []string // sets Content-Security-Policy \"frame-ancestors ...\"\n \tSubscribersOnly     bool\n+\tDisableSignature    bool // prevent signature from being added to headers\n \n \tSSLConfig   SSLConfig\n \thttpsServer *http.Server\n@@ -191,7 +192,10 @@ func (s *Rest) makeHTTPServer(address string, port int, router http.Handler) *ht\n func (s *Rest) routes() chi.Router {\n \trouter := chi.NewRouter()\n \trouter.Use(middleware.Throttle(1000), middleware.RealIP, R.Recoverer(log.Default()))\n-\trouter.Use(R.AppInfo(\"remark42\", \"umputun\", s.Version), R.Ping)\n+\tif !s.DisableSignature {\n+\t\trouter.Use(R.AppInfo(\"remark42\", \"umputun\", s.Version))\n+\t}\n+\trouter.Use(R.Ping)\n \n \ts.pubRest, s.privRest, s.adminRest, s.rssRest = s.controllerGroups() // assign controllers for groups\n "
    },
    {
      "sha": "8d813043d08c6ec850c2db2d4d4bd0a08d68982c",
      "filename": "backend/app/rest/api/rest_public_test.go",
      "status": "modified",
      "additions": 26,
      "deletions": 3,
      "changes": 29,
      "blob_url": "https://github.com/umputun/remark42/blob/65e3a82d8be93777101df9aef0e1900a0527f267/backend%2Fapp%2Frest%2Fapi%2Frest_public_test.go",
      "raw_url": "https://github.com/umputun/remark42/raw/65e3a82d8be93777101df9aef0e1900a0527f267/backend%2Fapp%2Frest%2Fapi%2Frest_public_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fapp%2Frest%2Fapi%2Frest_public_test.go?ref=65e3a82d8be93777101df9aef0e1900a0527f267",
      "patch": "@@ -23,9 +23,32 @@ func TestRest_Ping(t *testing.T) {\n \tts, _, teardown := startupT(t)\n \tdefer teardown()\n \n-\tres, code := get(t, ts.URL+\"/api/v1/ping\")\n-\tassert.Equal(t, \"pong\", res)\n-\tassert.Equal(t, 200, code)\n+\tresp, err := http.Get(ts.URL + \"/api/v1/ping\")\n+\trequire.NoError(t, err)\n+\tdefer resp.Body.Close()\n+\tbody, err := io.ReadAll(resp.Body)\n+\trequire.NoError(t, err)\n+\n+\tassert.Equal(t, \"pong\", string(body))\n+\tassert.Equal(t, http.StatusOK, resp.StatusCode)\n+\tassert.Equal(t, \"remark42\", resp.Header.Get(\"App-Name\"))\n+}\n+\n+func TestRest_PingNoSignature(t *testing.T) {\n+\tts, _, teardown := startupT(t, func(srv *Rest) {\n+\t\tsrv.DisableSignature = true\n+\t})\n+\tdefer teardown()\n+\n+\tresp, err := http.Get(ts.URL + \"/api/v1/ping\")\n+\trequire.NoError(t, err)\n+\tdefer resp.Body.Close()\n+\tbody, err := io.ReadAll(resp.Body)\n+\trequire.NoError(t, err)\n+\n+\tassert.Equal(t, \"pong\", string(body))\n+\tassert.Equal(t, http.StatusOK, resp.StatusCode)\n+\tassert.Equal(t, \"\", resp.Header.Get(\"App-Name\"))\n }\n \n func TestRest_Preview(t *testing.T) {"
    },
    {
      "sha": "8fcbf2b18761898cdb027aad1d162122f2b8c5aa",
      "filename": "backend/app/rest/api/rest_test.go",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark42/blob/65e3a82d8be93777101df9aef0e1900a0527f267/backend%2Fapp%2Frest%2Fapi%2Frest_test.go",
      "raw_url": "https://github.com/umputun/remark42/raw/65e3a82d8be93777101df9aef0e1900a0527f267/backend%2Fapp%2Frest%2Fapi%2Frest_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/backend%2Fapp%2Frest%2Fapi%2Frest_test.go?ref=65e3a82d8be93777101df9aef0e1900a0527f267",
      "patch": "@@ -412,7 +412,9 @@ func randomPath(tempDir, basename, suffix string) (string, error) {\n \treturn \"\", errors.New(\"cannot create temp file\")\n }\n \n-func startupT(t *testing.T) (ts *httptest.Server, srv *Rest, teardown func()) {\n+// startupT runs fully configured testing server\n+// srvHook is an optional func to set some Rest param after the creation but prior to Run\n+func startupT(t *testing.T, srvHook ...func(srv *Rest)) (ts *httptest.Server, srv *Rest, teardown func()) {\n \ttmp := os.TempDir()\n \ttestDB, err := randomPath(tmp, \"test-remark\", \".db\")\n \trequire.NoError(t, err)\n@@ -477,6 +479,10 @@ func startupT(t *testing.T) (ts *httptest.Server, srv *Rest, teardown func()) {\n \t}\n \tsrv.ScoreThresholds.Low, srv.ScoreThresholds.Critical = -5, -10\n \n+\tfor _, h := range srvHook {\n+\t\th(srv)\n+\t}\n+\n \tts = httptest.NewServer(srv.routes())\n \n \tteardown = func() {"
    },
    {
      "sha": "53e7b23c367d1b156a347b2be3c90b7734f1ba20",
      "filename": "site/src/docs/configuration/parameters/index.md",
      "status": "modified",
      "additions": 108,
      "deletions": 107,
      "changes": 215,
      "blob_url": "https://github.com/umputun/remark42/blob/65e3a82d8be93777101df9aef0e1900a0527f267/site%2Fsrc%2Fdocs%2Fconfiguration%2Fparameters%2Findex.md",
      "raw_url": "https://github.com/umputun/remark42/raw/65e3a82d8be93777101df9aef0e1900a0527f267/site%2Fsrc%2Fdocs%2Fconfiguration%2Fparameters%2Findex.md",
      "contents_url": "https://api.github.com/repos/umputun/remark42/contents/site%2Fsrc%2Fdocs%2Fconfiguration%2Fparameters%2Findex.md?ref=65e3a82d8be93777101df9aef0e1900a0527f267",
      "patch": "@@ -32,113 +32,114 @@ services:\n \n ### Complete parameters list\n \n-| Command line            | Environment             | Default                  | Description                                     |\n-| ----------------------- | ----------------------- | ------------------------ | ----------------------------------------------- |\n-| url                     | REMARK_URL              |                          | URL to Remark42 server, _required_              |\n-| secret                  | SECRET                  |                          | the shared secret key used to sign JWT, should be a random, long, hard-to-guess string, _required_ |\n-| site                    | SITE                    | `remark`                 | site name(s), _multi_                           |\n-| store.type              | STORE_TYPE              | `bolt`                   | type of storage, `bolt` or `rpc`                |\n-| store.bolt.path         | STORE_BOLT_PATH         | `./var`                  | parent directory for the bolt files             |\n-| store.bolt.timeout      | STORE_BOLT_TIMEOUT      | `30s`                    | boltdb access timeout                           |\n-| admin.shared.id         | ADMIN_SHARED_ID         |                          | admin IDs (list of user IDs), _multi_           |\n-| admin.shared.email      | ADMIN_SHARED_EMAIL      | `admin@${REMARK_URL}`    | admin emails, _multi_                           |\n-| backup                  | BACKUP_PATH             | `./var/backup`           | backups location                                |\n-| max-back                | MAX_BACKUP_FILES        | `10`                     | max backup files to keep                        |\n-| cache.type              | CACHE_TYPE              | `mem`                    | type of cache, `redis_pub_sub` or `mem` or `none` |\n-| cache.redis_addr        | CACHE_REDIS_ADDR        | `127.0.0.1:6379`         | address of Redis PubSub instance, turn `redis_pub_sub` cache on for distributed cache |\n-| cache.max.items         | CACHE_MAX_ITEMS         | `1000`                   | max number of cached items, `0` - unlimited     |\n-| cache.max.value         | CACHE_MAX_VALUE         | `65536`                  | max size of the cached value, `0` - unlimited   |\n-| cache.max.size          | CACHE_MAX_SIZE          | `50000000`               | max size of all cached values, `0` - unlimited  |\n-| avatar.type             | AVATAR_TYPE             | `fs`                     | type of avatar storage, `fs`, `bolt`, or `uri`  |\n-| avatar.fs.path          | AVATAR_FS_PATH          | `./var/avatars`          | avatars location for `fs` store                 |\n-| avatar.bolt.file        | AVATAR_BOLT_FILE        | `./var/avatars.db`       | avatars `bolt` file location                    |\n-| avatar.uri              | AVATAR_URI              | `./var/avatars`          | avatars store URI                               |\n-| avatar.rsz-lmt          | AVATAR_RSZ_LMT          | `0` (disabled)           | max image size for resizing avatars on save     |\n-| image.type              | IMAGE_TYPE              | `fs`                     | type of image storage, `fs`, `bolt`             |\n-| image.max-size          | IMAGE_MAX_SIZE          | `5000000`                | max size of image file                          |\n-| image.fs.path           | IMAGE_FS_PATH           | `./var/pictures`         | permanent location of images                    |\n-| image.fs.staging        | IMAGE_FS_STAGING        | `./var/pictures.staging` | staging location of images                      |\n-| image.fs.partitions     | IMAGE_FS_PARTITIONS     | `100`                    | number of image partitions                      |\n-| image.bolt.file         | IMAGE_BOLT_FILE         | `/var/pictures.db`       | images bolt file location                       |\n-| image.resize-width      | IMAGE_RESIZE_WIDTH      | `2400`                   | width of a resized image                        |\n-| image.resize-height     | IMAGE_RESIZE_HEIGHT     | `900`                    | height of a resized image                       |\n-| auth.ttl.jwt            | AUTH_TTL_JWT            | `5m`                     | JWT TTL                                         |\n-| auth.ttl.cookie         | AUTH_TTL_COOKIE         | `200h`                   | cookie TTL                                      |\n-| auth.send-jwt-header    | AUTH_SEND_JWT_HEADER    | `false`                  | send JWT as a header instead of a cookie        |\n-| auth.same-site          | AUTH_SAME_SITE          | `default`                | set same site policy for cookies (`default`, `none`, `lax` or `strict`) |\n-| auth.google.cid         | AUTH_GOOGLE_CID         |                          | Google OAuth client ID                          |\n-| auth.google.csec        | AUTH_GOOGLE_CSEC        |                          | Google OAuth client secret                      |\n-| auth.facebook.cid       | AUTH_FACEBOOK_CID       |                          | Facebook OAuth client ID                        |\n-| auth.facebook.csec      | AUTH_FACEBOOK_CSEC      |                          | Facebook OAuth client secret                    |\n-| auth.microsoft.cid      | AUTH_MICROSOFT_CID      |                          | Microsoft OAuth client ID                       |\n-| auth.microsoft.csec     | AUTH_MICROSOFT_CSEC     |                          | Microsoft OAuth client secret                   |\n-| auth.github.cid         | AUTH_GITHUB_CID         |                          | GitHub OAuth client ID                          |\n-| auth.github.csec        | AUTH_GITHUB_CSEC        |                          | GitHub OAuth client secret                      |\n-| auth.twitter.cid        | AUTH_TWITTER_CID        |                          | Twitter Consumer API Key                        |\n-| auth.twitter.csec       | AUTH_TWITTER_CSEC       |                          | Twitter Consumer API Secret key                 |\n-| auth.patreon.cid        | AUTH_PATREON_CID        |                          | Patreon OAuth Client ID                         |\n-| auth.patreon.csec       | AUTH_PATREON_CSEC       |                          | Patreon OAuth Client Secret                     |\n-| auth.telegram           | AUTH_TELEGRAM           | `false`                  | Enable Telegram auth (telegram.token must be present) |\n-| auth.yandex.cid         | AUTH_YANDEX_CID         |                          | Yandex OAuth client ID                          |\n-| auth.yandex.csec        | AUTH_YANDEX_CSEC        |                          | Yandex OAuth client secret                      |\n-| auth.dev                | AUTH_DEV                | `false`                  | local OAuth2 server, development mode only      |\n-| auth.anon               | AUTH_ANON               | `false`                  | enable anonymous login                          |\n-| auth.email.enable       | AUTH_EMAIL_ENABLE       | `false`                  | enable auth via email                           |\n-| auth.email.from         | AUTH_EMAIL_FROM         |                          | email from                                      |\n-| auth.email.subj         | AUTH_EMAIL_SUBJ         | `remark42 confirmation`  | email subject                                   |\n-| auth.email.content-type | AUTH_EMAIL_CONTENT_TYPE | `text/html`              | email content type                              |\n-| notify.users            | NOTIFY_USERS            | none                     | type of user notifications (Telegram, email)    |\n-| notify.admins           | NOTIFY_ADMINS           | none                     | type of admin notifications (Telegram, Slack, webhook and/or email) |\n-| notify.queue            | NOTIFY_QUEUE            | `100`                    | size of notification queue                      |\n-| notify.telegram.chan    | NOTIFY_TELEGRAM_CHAN    |                          | the ID of telegram channel for admin notifications |\n-| notify.slack.token      | NOTIFY_SLACK_TOKEN      |                          | Slack token                                     |\n-| notify.slack.chan       | NOTIFY_SLACK_CHAN       | `general`                | Slack channel for admin notifications           |\n-| notify.webhook.url      | NOTIFY_WEBHOOK_URL      |                          | Webhook notification URL for admin notifications |\n-| notify.webhook.template | NOTIFY_WEBHOOK_TEMPLATE | `{\"text\": \"{{.Text}}\"}`  | Webhook payload template                        |\n-| notify.webhook.headers  | NOTIFY_WEBHOOK_HEADERS  |                          | HTTP header in format Header1:Value1,Header2:Value2,...|\n-| notify.webhook.timeout  | NOTIFY_WEBHOOK_TIMEOUT  | `5s`                     | Webhook connection timeout                      |\n-| notify.email.fromAddress| NOTIFY_EMAIL_FROM       |                          | from email address                              |\n-| notify.email.verification_subj | NOTIFY_EMAIL_VERIFICATION_SUBJ | `Email verification` | verification message subject          |\n-| telegram.token          | TELEGRAM_TOKEN          |                          | Telegram token (used for auth and Telegram notifications) |\n-| telegram.timeout        | TELEGRAM_TIMEOUT        | `5s`                     | Telegram connection timeout                     |\n-| smtp.host               | SMTP_HOST               |                          | SMTP host                                       |\n-| smtp.port               | SMTP_PORT               |                          | SMTP port                                       |\n-| smtp.username           | SMTP_USERNAME           |                          | SMTP user name                                  |\n-| smtp.password           | SMTP_PASSWORD           |                          | SMTP password                                   |\n-| smtp.tls                | SMTP_TLS                | `false`                  | enable TLS for SMTP                             |\n-| smtp.timeout            | SMTP_TIMEOUT            | `10s`                    | SMTP TCP connection timeout                     |\n-| ssl.type                | SSL_TYPE                | none                     | `none`-HTTP, `static`-HTTPS, `auto`-HTTPS + le  |\n-| ssl.port                | SSL_PORT                | `8443`                   | port for HTTPS server                           |\n-| ssl.cert                | SSL_CERT                |                          | path to the cert.pem file                       |\n-| ssl.key                 | SSL_KEY                 |                          | path to the key.pem file                        |\n-| ssl.acme-location       | SSL_ACME_LOCATION       | `./var/acme`             | dir where obtained le-certs will be stored      |\n-| ssl.acme-email          | SSL_ACME_EMAIL          |                          | admin email for receiving notifications from LE |\n-| max-comment             | MAX_COMMENT_SIZE        | `2048`                   | comment's size limit                            |\n-| max-votes               | MAX_VOTES               | `-1`                     | votes limit per comment, `-1` - unlimited       |\n-| votes-ip                | VOTES_IP                | `false`                  | restrict votes from the same IP                 |\n-| anon-vote               | ANON_VOTE               | `false`                  | allow voting for anonymous users, require VOTES_IP to be enabled as well |\n-| votes-ip-time           | VOTES_IP_TIME           | `5m`                     | same IP vote restriction time, `0s` - unlimited |\n-| low-score               | LOW_SCORE               | `-5`                     | low score threshold                             |\n-| critical-score          | CRITICAL_SCORE          | `-10`                    | critical score threshold                        |\n-| positive-score          | POSITIVE_SCORE          | `false`                  | restricts comment's score to be only positive   |\n-| restricted-words        | RESTRICTED_WORDS        |                          | words banned in comments (can use `*`), _multi_ |\n-| restricted-names        | RESTRICTED_NAMES        |                          | names prohibited to use by the user, _multi_    |\n-| edit-time               | EDIT_TIME               | `5m`                     | edit window                                     |\n-| admin-edit              | ADMIN_EDIT              | `false`                  | unlimited edit for admins                       |\n-| read-age                | READONLY_AGE            |                          | read-only age of comments, days                 |\n-| image-proxy.http2https  | IMAGE_PROXY_HTTP2HTTPS  | `false`                  | enable HTTP->HTTPS proxy for images             |\n-| image-proxy.cache-external | IMAGE_PROXY_CACHE_EXTERNAL | `false`            | enable caching external images to current image storage |\n-| emoji                   | EMOJI                   | `false`                  | enable emoji support                            |\n-| simple-view             | SIMPLE_VIEW             | `false`                  | minimized UI with basic info only               |\n-| proxy-cors              | PROXY_CORS              | `false`                  | disable internal CORS and delegate it to proxy  |\n-| allowed-hosts           | ALLOWED_HOSTS           | enable all               | limit hosts/sources allowed to embed comments   |\n-| address                 | REMARK_ADDRESS          | all interfaces           | web server listening address                    |\n-| port                    | REMARK_PORT             | `8080`                   | web server port                                 |\n-| web-root                | REMARK_WEB_ROOT         | `./web`                  | web server root directory                       |\n-| update-limit            | UPDATE_LIMIT            | `0.5`                    | updates/sec limit                               |\n-| subscribers-only        | SUBSCRIBERS_ONLY        | `false`                  | enable commenting only for Patreon subscribers  |\n-| admin-passwd            | ADMIN_PASSWD            | none (disabled)          | password for `admin` basic auth                 |\n-| dbg                     | DEBUG                   | `false`                  | debug mode                                      |\n+| Command line                   | Environment                    | Default                  | Description                                               |\n+|--------------------------------|--------------------------------|--------------------------|-----------------------------------------------------------|\n+| url                            | REMARK_URL                     |                          | URL to Remark42 server, _required_                        |\n+| secret                         | SECRET                         |                          | the shared secret key used to sign JWT, should be a random, long, hard-to-guess string, _required_ |\n+| site                           | SITE                           | `remark`                 | site name(s), _multi_                                     |\n+| store.type                     | STORE_TYPE                     | `bolt`                   | type of storage, `bolt` or `rpc`                          |\n+| store.bolt.path                | STORE_BOLT_PATH                | `./var`                  | parent directory for the bolt files                       |\n+| store.bolt.timeout             | STORE_BOLT_TIMEOUT             | `30s`                    | boltdb access timeout                                     |\n+| admin.shared.id                | ADMIN_SHARED_ID                |                          | admin IDs (list of user IDs), _multi_                     |\n+| admin.shared.email             | ADMIN_SHARED_EMAIL             | `admin@${REMARK_URL}`    | admin emails, _multi_                                     |\n+| backup                         | BACKUP_PATH                    | `./var/backup`           | backups location                                          |\n+| max-back                       | MAX_BACKUP_FILES               | `10`                     | max backup files to keep                                  |\n+| cache.type                     | CACHE_TYPE                     | `mem`                    | type of cache, `redis_pub_sub` or `mem` or `none`         |\n+| cache.redis_addr               | CACHE_REDIS_ADDR               | `127.0.0.1:6379`         | address of Redis PubSub instance, turn `redis_pub_sub` cache on for distributed cache |\n+| cache.max.items                | CACHE_MAX_ITEMS                | `1000`                   | max number of cached items, `0` - unlimited               |\n+| cache.max.value                | CACHE_MAX_VALUE                | `65536`                  | max size of the cached value, `0` - unlimited             |\n+| cache.max.size                 | CACHE_MAX_SIZE                 | `50000000`               | max size of all cached values, `0` - unlimited            |\n+| avatar.type                    | AVATAR_TYPE                    | `fs`                     | type of avatar storage, `fs`, `bolt`, or `uri`            |\n+| avatar.fs.path                 | AVATAR_FS_PATH                 | `./var/avatars`          | avatars location for `fs` store                           |\n+| avatar.bolt.file               | AVATAR_BOLT_FILE               | `./var/avatars.db`       | avatars `bolt` file location                              |\n+| avatar.uri                     | AVATAR_URI                     | `./var/avatars`          | avatars store URI                                         |\n+| avatar.rsz-lmt                 | AVATAR_RSZ_LMT                 | `0` (disabled)           | max image size for resizing avatars on save               |\n+| image.type                     | IMAGE_TYPE                     | `fs`                     | type of image storage, `fs`, `bolt`                       |\n+| image.max-size                 | IMAGE_MAX_SIZE                 | `5000000`                | max size of image file                                    |\n+| image.fs.path                  | IMAGE_FS_PATH                  | `./var/pictures`         | permanent location of images                              |\n+| image.fs.staging               | IMAGE_FS_STAGING               | `./var/pictures.staging` | staging location of images                                |\n+| image.fs.partitions            | IMAGE_FS_PARTITIONS            | `100`                    | number of image partitions                                |\n+| image.bolt.file                | IMAGE_BOLT_FILE                | `/var/pictures.db`       | images bolt file location                                 |\n+| image.resize-width             | IMAGE_RESIZE_WIDTH             | `2400`                   | width of a resized image                                  |\n+| image.resize-height            | IMAGE_RESIZE_HEIGHT            | `900`                    | height of a resized image                                 |\n+| auth.ttl.jwt                   | AUTH_TTL_JWT                   | `5m`                     | JWT TTL                                                   |\n+| auth.ttl.cookie                | AUTH_TTL_COOKIE                | `200h`                   | cookie TTL                                                |\n+| auth.send-jwt-header           | AUTH_SEND_JWT_HEADER           | `false`                  | send JWT as a header instead of a cookie                  |\n+| auth.same-site                 | AUTH_SAME_SITE                 | `default`                | set same site policy for cookies (`default`, `none`, `lax` or `strict`) |\n+| auth.google.cid                | AUTH_GOOGLE_CID                |                          | Google OAuth client ID                                    |\n+| auth.google.csec               | AUTH_GOOGLE_CSEC               |                          | Google OAuth client secret                                |\n+| auth.facebook.cid              | AUTH_FACEBOOK_CID              |                          | Facebook OAuth client ID                                  |\n+| auth.facebook.csec             | AUTH_FACEBOOK_CSEC             |                          | Facebook OAuth client secret                              |\n+| auth.microsoft.cid             | AUTH_MICROSOFT_CID             |                          | Microsoft OAuth client ID                                 |\n+| auth.microsoft.csec            | AUTH_MICROSOFT_CSEC            |                          | Microsoft OAuth client secret                             |\n+| auth.github.cid                | AUTH_GITHUB_CID                |                          | GitHub OAuth client ID                                    |\n+| auth.github.csec               | AUTH_GITHUB_CSEC               |                          | GitHub OAuth client secret                                |\n+| auth.twitter.cid               | AUTH_TWITTER_CID               |                          | Twitter Consumer API Key                                  |\n+| auth.twitter.csec              | AUTH_TWITTER_CSEC              |                          | Twitter Consumer API Secret key                           |\n+| auth.patreon.cid               | AUTH_PATREON_CID               |                          | Patreon OAuth Client ID                                   |\n+| auth.patreon.csec              | AUTH_PATREON_CSEC              |                          | Patreon OAuth Client Secret                               |\n+| auth.telegram                  | AUTH_TELEGRAM                  | `false`                  | Enable Telegram auth (telegram.token must be present)     |\n+| auth.yandex.cid                | AUTH_YANDEX_CID                |                          | Yandex OAuth client ID                                    |\n+| auth.yandex.csec               | AUTH_YANDEX_CSEC               |                          | Yandex OAuth client secret                                |\n+| auth.dev                       | AUTH_DEV                       | `false`                  | local OAuth2 server, development mode only                |\n+| auth.anon                      | AUTH_ANON                      | `false`                  | enable anonymous login                                    |\n+| auth.email.enable              | AUTH_EMAIL_ENABLE              | `false`                  | enable auth via email                                     |\n+| auth.email.from                | AUTH_EMAIL_FROM                |                          | email from                                                |\n+| auth.email.subj                | AUTH_EMAIL_SUBJ                | `remark42 confirmation`  | email subject                                             |\n+| auth.email.content-type        | AUTH_EMAIL_CONTENT_TYPE        | `text/html`              | email content type                                        |\n+| notify.users                   | NOTIFY_USERS                   | none                     | type of user notifications (Telegram, email)              |\n+| notify.admins                  | NOTIFY_ADMINS                  | none                     | type of admin notifications (Telegram, Slack, webhook and/or email) |\n+| notify.queue                   | NOTIFY_QUEUE                   | `100`                    | size of notification queue                                |\n+| notify.telegram.chan           | NOTIFY_TELEGRAM_CHAN           |                          | the ID of telegram channel for admin notifications        |\n+| notify.slack.token             | NOTIFY_SLACK_TOKEN             |                          | Slack token                                               |\n+| notify.slack.chan              | NOTIFY_SLACK_CHAN              | `general`                | Slack channel for admin notifications                     |\n+| notify.webhook.url             | NOTIFY_WEBHOOK_URL             |                          | Webhook notification URL for admin notifications          |\n+| notify.webhook.template        | NOTIFY_WEBHOOK_TEMPLATE        | `{\"text\": \"{{.Text}}\"}`  | Webhook payload template                                  |\n+| notify.webhook.headers         | NOTIFY_WEBHOOK_HEADERS         |                          | HTTP header in format Header1:Value1,Header2:Value2,...   |\n+| notify.webhook.timeout         | NOTIFY_WEBHOOK_TIMEOUT         | `5s`                     | Webhook connection timeout                                |\n+| notify.email.fromAddress       | NOTIFY_EMAIL_FROM              |                          | from email address                                        |\n+| notify.email.verification_subj | NOTIFY_EMAIL_VERIFICATION_SUBJ | `Email verification`     | verification message subject                              |\n+| telegram.token                 | TELEGRAM_TOKEN                 |                          | Telegram token (used for auth and Telegram notifications) |\n+| telegram.timeout               | TELEGRAM_TIMEOUT               | `5s`                     | Telegram connection timeout                               |\n+| smtp.host                      | SMTP_HOST                      |                          | SMTP host                                                 |\n+| smtp.port                      | SMTP_PORT                      |                          | SMTP port                                                 |\n+| smtp.username                  | SMTP_USERNAME                  |                          | SMTP user name                                            |\n+| smtp.password                  | SMTP_PASSWORD                  |                          | SMTP password                                             |\n+| smtp.tls                       | SMTP_TLS                       | `false`                  | enable TLS for SMTP                                       |\n+| smtp.timeout                   | SMTP_TIMEOUT                   | `10s`                    | SMTP TCP connection timeout                               |\n+| ssl.type                       | SSL_TYPE                       | none                     | `none`-HTTP, `static`-HTTPS, `auto`-HTTPS + le            |\n+| ssl.port                       | SSL_PORT                       | `8443`                   | port for HTTPS server                                     |\n+| ssl.cert                       | SSL_CERT                       |                          | path to the cert.pem file                                 |\n+| ssl.key                        | SSL_KEY                        |                          | path to the key.pem file                                  |\n+| ssl.acme-location              | SSL_ACME_LOCATION              | `./var/acme`             | dir where obtained le-certs will be stored                |\n+| ssl.acme-email                 | SSL_ACME_EMAIL                 |                          | admin email for receiving notifications from LE           |\n+| max-comment                    | MAX_COMMENT_SIZE               | `2048`                   | comment's size limit                                      |\n+| max-votes                      | MAX_VOTES                      | `-1`                     | votes limit per comment, `-1` - unlimited                 |\n+| votes-ip                       | VOTES_IP                       | `false`                  | restrict votes from the same IP                           |\n+| anon-vote                      | ANON_VOTE                      | `false`                  | allow voting for anonymous users, require VOTES_IP to be enabled as well |\n+| votes-ip-time                  | VOTES_IP_TIME                  | `5m`                     | same IP vote restriction time, `0s` - unlimited           |\n+| low-score                      | LOW_SCORE                      | `-5`                     | low score threshold                                       |\n+| critical-score                 | CRITICAL_SCORE                 | `-10`                    | critical score threshold                                  |\n+| positive-score                 | POSITIVE_SCORE                 | `false`                  | restricts comment's score to be only positive             |\n+| restricted-words               | RESTRICTED_WORDS               |                          | words banned in comments (can use `*`), _multi_           |\n+| restricted-names               | RESTRICTED_NAMES               |                          | names prohibited to use by the user, _multi_              |\n+| edit-time                      | EDIT_TIME                      | `5m`                     | edit window                                               |\n+| admin-edit                     | ADMIN_EDIT                     | `false`                  | unlimited edit for admins                                 |\n+| read-age                       | READONLY_AGE                   |                          | read-only age of comments, days                           |\n+| image-proxy.http2https         | IMAGE_PROXY_HTTP2HTTPS         | `false`                  | enable HTTP->HTTPS proxy for images                       |\n+| image-proxy.cache-external     | IMAGE_PROXY_CACHE_EXTERNAL     | `false`                  | enable caching external images to current image storage   |\n+| emoji                          | EMOJI                          | `false`                  | enable emoji support                                      |\n+| simple-view                    | SIMPLE_VIEW                    | `false`                  | minimized UI with basic info only                         |\n+| proxy-cors                     | PROXY_CORS                     | `false`                  | disable internal CORS and delegate it to proxy            |\n+| allowed-hosts                  | ALLOWED_HOSTS                  | enable all               | limit hosts/sources allowed to embed comments             |\n+| address                        | REMARK_ADDRESS                 | all interfaces           | web server listening address                              |\n+| port                           | REMARK_PORT                    | `8080`                   | web server port                                           |\n+| web-root                       | REMARK_WEB_ROOT                | `./web`                  | web server root directory                                 |\n+| update-limit                   | UPDATE_LIMIT                   | `0.5`                    | updates/sec limit                                         |\n+| subscribers-only               | SUBSCRIBERS_ONLY               | `false`                  | enable commenting only for Patreon subscribers            |\n+| disable-signature              | DISABLE_SIGNATURE              | `false`                  | disable server signature in headers                       |\n+| admin-passwd                   | ADMIN_PASSWD                   | none (disabled)          | password for `admin` basic auth                           |\n+| dbg                            | DEBUG                          | `false`                  | debug mode                                                |\n \n - command-line parameters are long-form `--<key>=value`, i.e., `--site=https://demo.remark42.com`\n - _multi_ parameters separated by `,` in the environment or repeated with command-line keys, like `--site=s1 --site=s2 ...`"
    }
  ]
}
