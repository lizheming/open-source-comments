{
  "sha": "15e9057ec5142762cb7bfabebfd430bff7853821",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODoxNWU5MDU3ZWM1MTQyNzYyY2I3YmZhYmViZmQ0MzBiZmY3ODUzODIx",
  "commit": {
    "author": {
      "name": "Guo Xiang Tan",
      "email": "gxtan1990@gmail.com",
      "date": "2020-07-27T07:22:54Z"
    },
    "committer": {
      "name": "Guo Xiang Tan",
      "email": "gxtan1990@gmail.com",
      "date": "2020-07-27T07:29:59Z"
    },
    "message": "FIX: Reduce number of terms injected for host lexeme.\n\nWe do prefix matching in search so there is no need to inject the extra\nterms.\n\nBefore:\n```\n\"'discourse':10,11 'discourse.org':10,11 'org':10,11 'test':8A,10,11 'test.discourse.org':10,11 'titl':4A 'uncategor':9B\"\n```\n\nAfter:\n```\n\"'discourse.org':10,11 'org':10,11 'test':8A 'test.discourse.org':10,11 'titl':4A 'uncategor':9B\"\n```",
    "tree": {
      "sha": "4d5babce75afa5575b25a994118900b647b0f3ed",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/4d5babce75afa5575b25a994118900b647b0f3ed"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/15e9057ec5142762cb7bfabebfd430bff7853821",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMOJGkc46I9vMVlDg+9EQF5qsHyAFAl8egxQACgkQ+9EQF5qs\nHyBNUQ/+MeW/17p8tGOaS4HwHAIzeqw0gfelX5fw0JAcnwEvz0BmXLLb0oMKwPrg\nurNOSpyfy1EqkvX+qum2Jn2gohPbHomVGoPBJc97lDjC1qm72EuqJAb3BywnngDz\nF1TaYniW5tQYF7FyeQvsrT4dknPKiRRZ9hOvFwdJ/VSE/FKXUzh2L31ANkdj3k7r\n1sR8n3TS8T5q81WBe9QN8O8M1e077GgLpqGmhgHHV3NZZhp8kgQknqEOnlKKYXrD\nHDQKj/rtav6GkqtilzxND2xwnDklW64uZLml9AbXFJ4NVOXxD9RmNESDMIsz3gdg\na0xnSvDZmQM1j0ruUjdmsGL6L9752kHg9yjtTeNrV9fz+9pDC+TGiwIuLsxpDQEo\nUJ/i8xnSN9NjbZXb5wJnqfv/55SA8Zvkywy7wiWoFl546W8eNmFu+w3M4woE1dOX\nLUZlkoOrBbwgLXx2QwUvrR4X81aRAqkfx4yL47X1guQHLa6/rt68wDPBO3KdFGC0\nkW2IFFOmHS3LgRtIUtI08ApgAO3UvuO+ke+vSdokhzrpaTypflcWpPbANJC8mn6m\nOCu1skInT8UM+oejZN+T5y0UJmIqcvDkVe97Yki6nRqif88+RIQrSSY3jiXNaOy/\ndH7sDCjgbudeQCRTe40sigG59cmhV8L/rob4sjs6chIaK5MSCcw=\n=dKXh\n-----END PGP SIGNATURE-----",
      "payload": "tree 4d5babce75afa5575b25a994118900b647b0f3ed\nparent 0f53ad58c28c71d6704dec2a0e43e40113994c1a\nauthor Guo Xiang Tan <gxtan1990@gmail.com> 1595834574 +0800\ncommitter Guo Xiang Tan <gxtan1990@gmail.com> 1595834999 +0800\n\nFIX: Reduce number of terms injected for host lexeme.\n\nWe do prefix matching in search so there is no need to inject the extra\nterms.\n\nBefore:\n```\n\"'discourse':10,11 'discourse.org':10,11 'org':10,11 'test':8A,10,11 'test.discourse.org':10,11 'titl':4A 'uncategor':9B\"\n```\n\nAfter:\n```\n\"'discourse.org':10,11 'org':10,11 'test':8A 'test.discourse.org':10,11 'titl':4A 'uncategor':9B\"\n```\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/15e9057ec5142762cb7bfabebfd430bff7853821",
  "html_url": "https://github.com/discourse/discourse/commit/15e9057ec5142762cb7bfabebfd430bff7853821",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/15e9057ec5142762cb7bfabebfd430bff7853821/comments",
  "author": {
    "login": "tgxworld",
    "id": 4335742,
    "node_id": "MDQ6VXNlcjQzMzU3NDI=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/4335742?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tgxworld",
    "html_url": "https://github.com/tgxworld",
    "followers_url": "https://api.github.com/users/tgxworld/followers",
    "following_url": "https://api.github.com/users/tgxworld/following{/other_user}",
    "gists_url": "https://api.github.com/users/tgxworld/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tgxworld/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tgxworld/subscriptions",
    "organizations_url": "https://api.github.com/users/tgxworld/orgs",
    "repos_url": "https://api.github.com/users/tgxworld/repos",
    "events_url": "https://api.github.com/users/tgxworld/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tgxworld/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tgxworld",
    "id": 4335742,
    "node_id": "MDQ6VXNlcjQzMzU3NDI=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/4335742?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tgxworld",
    "html_url": "https://github.com/tgxworld",
    "followers_url": "https://api.github.com/users/tgxworld/followers",
    "following_url": "https://api.github.com/users/tgxworld/following{/other_user}",
    "gists_url": "https://api.github.com/users/tgxworld/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tgxworld/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tgxworld/subscriptions",
    "organizations_url": "https://api.github.com/users/tgxworld/orgs",
    "repos_url": "https://api.github.com/users/tgxworld/repos",
    "events_url": "https://api.github.com/users/tgxworld/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tgxworld/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0f53ad58c28c71d6704dec2a0e43e40113994c1a",
      "url": "https://api.github.com/repos/discourse/discourse/commits/0f53ad58c28c71d6704dec2a0e43e40113994c1a",
      "html_url": "https://github.com/discourse/discourse/commit/0f53ad58c28c71d6704dec2a0e43e40113994c1a"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 9,
    "deletions": 5
  },
  "files": [
    {
      "sha": "cb60237ab94c40f971443f4f564d4025b102c43b",
      "filename": "app/services/search_indexer.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/15e9057ec5142762cb7bfabebfd430bff7853821/app/services/search_indexer.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/15e9057ec5142762cb7bfabebfd430bff7853821/app/services/search_indexer.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/services/search_indexer.rb?ref=15e9057ec5142762cb7bfabebfd430bff7853821",
      "patch": "@@ -65,7 +65,7 @@ def self.update_index(table: , id: , raw_data:)\n           break if count >= 10 # Safeguard here to prevent infinite loop when a term has many dots\n           term, _, remaining = lexeme.partition(\".\")\n           break if remaining.blank?\n-          array << \"'#{term}':#{positions} '#{remaining}':#{positions}\"\n+          array << \"'#{remaining}':#{positions}\"\n           lexeme = remaining\n         end\n       end"
    },
    {
      "sha": "f55b183e864847927ff6fd98918db2a87a107dc3",
      "filename": "spec/services/search_indexer_spec.rb",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/discourse/discourse/blob/15e9057ec5142762cb7bfabebfd430bff7853821/spec/services/search_indexer_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/15e9057ec5142762cb7bfabebfd430bff7853821/spec/services/search_indexer_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/services/search_indexer_spec.rb?ref=15e9057ec5142762cb7bfabebfd430bff7853821",
      "patch": "@@ -108,7 +108,8 @@ def scrub(html, strip_diacritics: false)\n   end\n \n   describe '.index' do\n-    let(:post) { Fabricate(:post) }\n+    let(:topic) { Fabricate(:topic, title: \"this is a title that I am testing\") }\n+    let(:post) { Fabricate(:post, topic: topic) }\n \n     it 'should index posts correctly' do\n       expect { post }.to change { PostSearchData.count }.by(1)\n@@ -128,7 +129,7 @@ def scrub(html, strip_diacritics: false)\n     end\n \n     it \"should not tokenize urls and duplicate title and href in <a>\" do\n-      post = Fabricate(:post, raw: <<~RAW)\n+      post.update!(raw: <<~RAW)\n       https://meta.discourse.org/some.png\n       RAW\n \n@@ -139,10 +140,13 @@ def scrub(html, strip_diacritics: false)\n       expect(post.post_search_data.raw_data).to eq(\n         \"https://meta.discourse.org/some.png\"\n       )\n+\n+      expect(post.post_search_data.search_data).to eq(\n+        \"'/some.png':12 'discourse.org':11 'meta.discourse.org':11 'meta.discourse.org/some.png':10 'org':11 'test':8A 'titl':4A 'uncategor':9B\"\n+      )\n     end\n \n     it 'should not tokenize versions' do\n-      post.topic.update!(title: \"this is a title that I am testing\")\n       post.update!(raw: '123.223')\n \n       expect(post.post_search_data.search_data).to eq(\n@@ -174,7 +178,7 @@ def scrub(html, strip_diacritics: false)\n       )\n \n       expect(post.post_search_data.search_data).to eq(\n-        \"'/xyz=1':14,17 'abc':13,16 'abc.net':13,16 'abc.net/xyz=1':12,15 'au':10 'awesom':6B 'b':11 'categori':7B 'cnn':9 'cnn.com':9 'com':9,10 'com.au':10 'net':13,16 'stuff':10 'stuff.com.au':10 'test':4A 'topic':5A\"\n+        \"'/xyz=1':14,17 'abc.net':13,16 'abc.net/xyz=1':12,15 'au':10 'awesom':6B 'b':11 'categori':7B 'cnn.com':9 'com':9 'com.au':10 'net':13,16 'stuff.com.au':10 'test':4A 'topic':5A\"\n       )\n     end\n "
    }
  ]
}
