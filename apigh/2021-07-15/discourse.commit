{
  "sha": "5cd447695e014d68ce3da58d45f42c8059b5438b",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODo1Y2Q0NDc2OTVlMDE0ZDY4Y2UzZGE1OGQ0NWY0MmM4MDU5YjU0Mzhi",
  "commit": {
    "author": {
      "name": "Andrei Prigorshnev",
      "email": "a.prigorshnev@gmail.com",
      "date": "2021-07-15T10:51:44Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2021-07-15T10:51:44Z"
    },
    "message": "FIX: problems with choosing favorite badges (#13731)",
    "tree": {
      "sha": "3872f0ae4823b436d2c0d55eb452d45df8ce9f9a",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/3872f0ae4823b436d2c0d55eb452d45df8ce9f9a"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/5cd447695e014d68ce3da58d45f42c8059b5438b",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg8BNACRBK7hj4Ov3rIwAAUkYIAG5PwNkce89pJibqgXMT0Nec\nUGoef1d41aI6+6x3AbHAZjpb6N3Pu0GgB51qqMuJehQpmfLPryp0/+x+dNxBNpC1\nakvTOZ1fOUs1ZjNWKC9ERc6L8RwhCR7jTtc6c9KIF72Xex/mcXuQbPgbSjDs+aXN\nlPjxA0nrfbP40HGHYATvnPZuH1atR2pCJwvBluklx73o9TgQJJ0lG0nlP9boQRYu\ntx3Vnj2NrvQTh9CrQpNCA5D+lClo9VLl5ftpRQ1DYJqGoMdEZ49+QB0GZ+MPzM0d\nxtOKJD3UZyTHVAzKG08/IuaA9mgIP1OP7lh4rfEY6G2Q/RqwQVRBcl+0j9EE1B8=\n=UBtV\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 3872f0ae4823b436d2c0d55eb452d45df8ce9f9a\nparent 4ce58fbf0b3eb87387e63b29f8f0355f55da4087\nauthor Andrei Prigorshnev <a.prigorshnev@gmail.com> 1626346304 +0400\ncommitter GitHub <noreply@github.com> 1626346304 +0400\n\nFIX: problems with choosing favorite badges (#13731)\n\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/5cd447695e014d68ce3da58d45f42c8059b5438b",
  "html_url": "https://github.com/discourse/discourse/commit/5cd447695e014d68ce3da58d45f42c8059b5438b",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/5cd447695e014d68ce3da58d45f42c8059b5438b/comments",
  "author": {
    "login": "AndrewPrigorshnev",
    "id": 1274517,
    "node_id": "MDQ6VXNlcjEyNzQ1MTc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1274517?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/AndrewPrigorshnev",
    "html_url": "https://github.com/AndrewPrigorshnev",
    "followers_url": "https://api.github.com/users/AndrewPrigorshnev/followers",
    "following_url": "https://api.github.com/users/AndrewPrigorshnev/following{/other_user}",
    "gists_url": "https://api.github.com/users/AndrewPrigorshnev/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/AndrewPrigorshnev/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AndrewPrigorshnev/subscriptions",
    "organizations_url": "https://api.github.com/users/AndrewPrigorshnev/orgs",
    "repos_url": "https://api.github.com/users/AndrewPrigorshnev/repos",
    "events_url": "https://api.github.com/users/AndrewPrigorshnev/events{/privacy}",
    "received_events_url": "https://api.github.com/users/AndrewPrigorshnev/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4ce58fbf0b3eb87387e63b29f8f0355f55da4087",
      "url": "https://api.github.com/repos/discourse/discourse/commits/4ce58fbf0b3eb87387e63b29f8f0355f55da4087",
      "html_url": "https://github.com/discourse/discourse/commit/4ce58fbf0b3eb87387e63b29f8f0355f55da4087"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 18,
    "deletions": 3
  },
  "files": [
    {
      "sha": "60b127546118987f0707251ae40e5ff0339917fc",
      "filename": "app/controllers/user_badges_controller.rb",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/discourse/discourse/blob/5cd447695e014d68ce3da58d45f42c8059b5438b/app/controllers/user_badges_controller.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/5cd447695e014d68ce3da58d45f42c8059b5438b/app/controllers/user_badges_controller.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/controllers/user_badges_controller.rb?ref=5cd447695e014d68ce3da58d45f42c8059b5438b",
      "patch": "@@ -109,10 +109,13 @@ def toggle_favorite\n       return render json: failed_json, status: 400\n     end\n \n+    new_is_favorite_value = !user_badge.is_favorite\n     UserBadge\n       .where(user_id: user_badge.user_id, badge_id: user_badge.badge_id)\n-      .update(is_favorite: !user_badge.is_favorite)\n+      .update_all(is_favorite: new_is_favorite_value)\n     UserBadge.update_featured_ranks!(user_badge.user_id)\n+\n+    user_badge.is_favorite = new_is_favorite_value\n     render_serialized(user_badge, DetailedUserBadgeSerializer, root: :user_badge)\n   end\n "
    },
    {
      "sha": "4c17ac2763aa540e180af6dc85d966efe8d49d03",
      "filename": "spec/requests/user_badges_controller_spec.rb",
      "status": "modified",
      "additions": 14,
      "deletions": 2,
      "changes": 16,
      "blob_url": "https://github.com/discourse/discourse/blob/5cd447695e014d68ce3da58d45f42c8059b5438b/spec/requests/user_badges_controller_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/5cd447695e014d68ce3da58d45f42c8059b5438b/spec/requests/user_badges_controller_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/requests/user_badges_controller_spec.rb?ref=5cd447695e014d68ce3da58d45f42c8059b5438b",
      "patch": "@@ -294,20 +294,26 @@\n     it \"favorites a badge\" do\n       sign_in(user)\n       put \"/user_badges/#{user_badge.id}/toggle_favorite.json\"\n+\n       expect(response.status).to eq(200)\n+      parsed = response.parsed_body\n+      expect(parsed[\"user_badge\"][\"is_favorite\"]).to eq(true)\n \n       user_badge = UserBadge.find_by(user: user, badge: badge)\n-      expect(user_badge.is_favorite).to be true\n+      expect(user_badge.is_favorite).to eq(true)\n     end\n \n     it \"unfavorites a badge\" do\n       sign_in(user)\n       user_badge.toggle!(:is_favorite)\n       put \"/user_badges/#{user_badge.id}/toggle_favorite.json\"\n+\n       expect(response.status).to eq(200)\n+      parsed = response.parsed_body\n+      expect(parsed[\"user_badge\"][\"is_favorite\"]).to eq(false)\n \n       user_badge = UserBadge.find_by(user: user, badge: badge)\n-      expect(user_badge.is_favorite).to be false\n+      expect(user_badge.is_favorite).to eq(false)\n     end\n \n     it \"works with multiple grants\" do\n@@ -323,16 +329,22 @@\n \n       put \"/user_badges/#{user_badge.id}/toggle_favorite.json\"\n       expect(response.status).to eq(200)\n+      parsed = response.parsed_body\n+      expect(parsed[\"user_badge\"][\"is_favorite\"]).to eq(false)\n       expect(user_badge.reload.is_favorite).to eq(false)\n       expect(user_badge2.reload.is_favorite).to eq(false)\n \n       put \"/user_badges/#{user_badge.id}/toggle_favorite.json\"\n       expect(response.status).to eq(200)\n+      parsed = response.parsed_body\n+      expect(parsed[\"user_badge\"][\"is_favorite\"]).to eq(true)\n       expect(user_badge.reload.is_favorite).to eq(true)\n       expect(user_badge2.reload.is_favorite).to eq(true)\n \n       put \"/user_badges/#{other_user_badge.id}/toggle_favorite.json\"\n       expect(response.status).to eq(200)\n+      parsed = response.parsed_body\n+      expect(parsed[\"user_badge\"][\"is_favorite\"]).to eq(true)\n       expect(other_user_badge.reload.is_favorite).to eq(true)\n     end\n   end"
    }
  ]
}
